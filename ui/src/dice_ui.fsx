#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("web_sys::HtmlElement")>]
#endif
type web_sys_HtmlElement = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("&$0")>]
type Ref<'T> = class end
#else
type Ref<'T> = 'T
#endif

#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ArcRwSignal<$0>")>]
#endif
type leptos_prelude_ArcRwSignal<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::string::String")>]
type std_string_String = class end
#else
type std_string_String = string
#endif

#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Vec<$0>")>]
#endif
type Vec<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::collections::HashMap<$0, $1>")>]
#endif
type std_collections_HashMap<'K, 'V> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::pin::Pin<$0>")>]
#endif
type std_pin_Pin<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("rexie::Error")>]
#endif
type rexie_Error = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("rexie::Rexie")>]
#endif
type rexie_Rexie = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::sync::Arc<$0>")>]
#endif
type std_sync_Arc<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Func0<$0>")>]
#endif
type Func0<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ArcLocalResource<$0>")>]
#endif
type leptos_prelude_ArcLocalResource<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("*/ $0 /*")>]
#endif
type TypeEmit<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("PartialEqWrapper<$0>")>]
#endif
type PartialEqWrapper<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Func1<$0, $1>")>]
#endif
type Func0<'T, 'U> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("rexie::Transaction")>]
#endif
type rexie_Transaction = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("rexie::Store")>]
#endif
type rexie_Store = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("wasm_bindgen::JsValue")>]
#endif
type wasm_bindgen_JsValue = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("serde_wasm_bindgen::Error")>]
#endif
type serde_wasm_bindgen_Error = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("serde_json::Value")>]
#endif
type serde_json_Value = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("serde_json::Error")>]
#endif
type serde_json_Error = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("borsh::io::Error")>]
#endif
type borsh_io_Error = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("web_sys::Window")>]
#endif
type web_sys_Window = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("web_sys::Storage")>]
#endif
type web_sys_Storage = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ArcMemo<$0>")>]
#endif
type leptos_prelude_ArcMemo<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ReadSignal<$0>")>]
#endif
type leptos_prelude_ReadSignal<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::WriteSignal<$0>")>]
#endif
type leptos_prelude_WriteSignal<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ArcAction<$0, $1>")>]
#endif
type leptos_prelude_ArcAction<'T, 'U> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos_router::location::Location")>]
#endif
type leptos_router_location_Location = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::Memo<$0>")>]
#endif
type leptos_prelude_Memo<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos_router::location::Url")>]
#endif
type leptos_router_Url = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::Root")>]
#endif
type crate_model_near_nearblocks_Root = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::Txn")>]
#endif
type crate_model_near_nearblocks_Txn = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::Block")>]
#endif
type crate_model_near_nearblocks_Block = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::Action")>]
#endif
type crate_model_near_nearblocks_Action = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::ActionsAgg")>]
#endif
type crate_model_near_nearblocks_ActionsAgg = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::Outcomes")>]
#endif
type crate_model_near_nearblocks_Outcomes = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::OutcomesAgg")>]
#endif
type crate_model_near_nearblocks_OutcomesAgg = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("futures::future::TryJoinAll<$0>")>]
#endif
type futures_future_TryJoinAll<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("reqwest_wasm::RequestBuilder")>]
#endif
type reqwest_RequestBuilder = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("reqwest_wasm::Error")>]
#endif
type reqwest_Error = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("reqwest_wasm::Response")>]
#endif
type reqwest_Response = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::Action<$0, $1>")>]
#endif
type leptos_prelude_Action<'T, 'U> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ArcSignal<$0>")>]
#endif
type leptos_prelude_ArcSignal<'T> = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::RpcInput")>] type crate_model_near_rpc_RpcInput = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::RpcResponse")>] type crate_model_near_rpc_RpcResponse = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::TransactionStatus")>] type crate_model_near_rpc_TransactionStatus = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::Receipt")>] type crate_model_near_rpc_Receipt = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::ReceiptDetail")>] type crate_model_near_rpc_ReceiptDetail = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::ActionDetail")>] type crate_model_near_rpc_ActionDetail = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::TransferDetail")>] type crate_model_near_rpc_TransferDetail = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::ReceiptsOutcome")>] type crate_model_near_rpc_ReceiptsOutcome = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::OutcomeDetail")>] type crate_model_near_rpc_OutcomeDetail = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::Metadata")>] type crate_model_near_rpc_Metadata = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::GasProfile")>] type crate_model_near_rpc_GasProfile = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::Proof")>] type crate_model_near_rpc_Proof = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::RpcError")>] type crate_model_near_rpc_RpcError = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::ErrorCause")>] type crate_model_near_rpc_ErrorCause = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::ErrorCauseInfo")>] type crate_model_near_rpc_ErrorCauseInfo = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::AnyView")>]
#endif
type leptos_prelude_AnyView_ = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::Fragment")>]
#endif
type leptos_dom_Fragment = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("impl $0")>]
#endif
type Impl<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::View<$0>")>]
#endif
type leptos_prelude_View<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("chrono::DateTime<$0>")>]
#endif
type chrono_DateTime<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("chrono::NaiveDateTime")>]
#endif
type chrono_NaiveDateTime = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::ev::Event")>]
#endif
type leptos_ev_Event = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Box<$0>")>]
#endif
type Box<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("wasm_bindgen::closure::Closure<$0>")>]
#endif
type wasm_bindgen_closure_Closure<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("str")>]
type Str = class end
#else
type Str = string
#endif

#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::IntoView")>]
#endif
type leptos_IntoView = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos_router::NestedRoute<_, _, _, _>")>]
#endif
type leptos_router_NestedRoute = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::HtmlElement<$0, _, _>")>]
#endif
type leptos_dom_html_HtmlElement<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Div")>]
#endif
type leptos_html_Div = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("dyn $0")>]
#endif
type Dyn<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::future::Future<Output = $0>")>]
#endif
type std_future_Future<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("[$0]")>]
#endif
type Slice<'T> = class end
#if FABLE_COMPILER
Fable.Core.RustInterop.emitRustExpr () ");
use leptos::prelude::*;
//"
#endif
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Fn($0, $1)")>]
#endif
type ActionFn2<'T, 'U> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos_router::NavigateOptions")>]
#endif
type leptos_router_NavigateOptions = class end
#if FABLE_COMPILER
Fable.Core.RustInterop.emitRustExpr () ");
use leptos::prelude::ElementChild;
//"
#endif
#if FABLE_COMPILER
Fable.Core.RustInterop.emitRustExpr () ");
use leptos::prelude::ClassAttribute;
//"
#endif
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("$0 $1")>]
#endif
type Lifetime<'T, 'U> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("'static")>]
#endif
type StaticLifetime = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Span")>]
#endif
type leptos_html_Span = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::svg::Path")>]
#endif
type leptos_svg_Path = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::svg::Svg")>]
#endif
type leptos_svg_Svg = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Summary")>]
#endif
type leptos_html_Summary = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Pre")>]
#endif
type leptos_html_Pre = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::svg::Circle")>]
#endif
type leptos_svg_Circle = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Button")>]
#endif
type leptos_html_Button = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Details")>]
#endif
type leptos_html_Details = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Input")>]
#endif
type leptos_html_Input = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::svg::Animate")>]
#endif
type leptos_svg_Animate = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::svg::Rect")>]
#endif
type leptos_svg_Rect = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Th")>]
#endif
type leptos_html_Th = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Tr")>]
#endif
type leptos_html_Tr = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("chrono::Utc")>]
#endif
type chrono_Utc = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("chrono::Local")>]
#endif
type chrono_Local = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Td")>]
#endif
type leptos_html_Td = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Thead")>]
#endif
type leptos_html_Thead = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Tbody")>]
#endif
type leptos_html_Tbody = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Table")>]
#endif
type leptos_html_Table = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Label")>]
#endif
type leptos_html_Label = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Dt")>]
#endif
type leptos_html_Dt = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Dd")>]
#endif
type leptos_html_Dd = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Dl")>]
#endif
type leptos_html_Dl = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Main")>]
#endif
type leptos_html_Main = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Option_")>]
#endif
type leptos_html_Option = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Select")>]
#endif
type leptos_html_Select = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::A")>]
#endif
type leptos_html_A = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Nav")>]
#endif
type leptos_html_Nav = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Fn()")>]
#endif
type FnUnit = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("js_sys::Function")>]
#endif
type js_sys_Function = class end
type [<Struct>] US0 =
    | US0_0 of f0_0 : web_sys_HtmlElement
    | US0_1
and [<Struct>] US1 =
    | US1_0
    | US1_1
and Heap0 = {l0 : Vec<(bool * std_string_String)>; l1 : std_string_String option; l2 : int32; l3 : int32; l4 : US1}
and Heap1 = {l0 : leptos_prelude_ArcRwSignal<bool>; l1 : leptos_prelude_ArcRwSignal<bool>; l2 : leptos_prelude_ArcRwSignal<std_string_String>; l3 : leptos_prelude_ArcRwSignal<Heap0>}
and  Heap2 = {l0 : leptos_prelude_ArcRwSignal<Heap1>; l1 : leptos_prelude_ArcRwSignal<std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>>}
and [<Struct>] US2 =
    | US2_0 of f0_0 : std_sync_Arc<rexie_Rexie>
    | US2_1
and Heap3 = {l0 : bool; l1 : bool; l2 : std_string_String; l3 : Heap0}
and [<Struct>] US3 =
    | US3_0 of f0_0 : Heap3 option
    | US3_1
and [<Struct>] US4 =
    | US4_0 of f0_0 : wasm_bindgen_JsValue
    | US4_1
and [<Struct>] US5 =
    | US5_0 of f0_0 : serde_json_Value
    | US5_1
and [<Struct>] US6 =
    | US6_0 of f0_0 : Heap3 option option
    | US6_1 of f1_0 : std_string_String
and [<Struct>] US8 =
    | US8_0 of f0_0 : Heap3
    | US8_1
and [<Struct>] US7 =
    | US7_0 of f0_0 : US8
    | US7_1
and [<Struct>] US9 =
    | US9_0 of f0_0 : web_sys_Storage option
    | US9_1 of f1_0 : wasm_bindgen_JsValue
and [<Struct>] US11 =
    | US11_0 of f0_0 : web_sys_Storage
    | US11_1
and [<Struct>] US10 =
    | US10_0 of f0_0 : US11
    | US10_1 of f1_0 : wasm_bindgen_JsValue
and [<Struct>] US12 =
    | US12_0 of f0_0 : std_string_String option
    | US12_1 of f1_0 : wasm_bindgen_JsValue
and [<Struct>] US14 =
    | US14_0 of f0_0 : std_string_String
    | US14_1
and [<Struct>] US13 =
    | US13_0 of f0_0 : US14
    | US13_1 of f1_0 : wasm_bindgen_JsValue
and [<Struct>] US15 =
    | US15_0 of f0_0 : US14
    | US15_1
and [<Struct>] US16 =
    | US16_0 of f0_0 : leptos_prelude_ArcRwSignal<bool>
    | US16_1
and [<Struct>] US17 =
    | US17_0 of f0_0 : bool
    | US17_1
and [<Struct>] US19 =
    | US19_0
and [<Struct>] US18 =
    | US18_0
    | US18_1 of f1_0 : US19
    | US18_2
    | US18_3
    | US18_4
and [<Struct>] US20 =
    | US20_0 of f0_0 : leptos_router_Url
    | US20_1 of f1_0 : std_string_String
and [<Struct>] US21 =
    | US21_0 of f0_0 : US18
    | US21_1
and [<Struct>] US22 =
    | US22_0 of f0_0 : leptos_dom_Fragment
    | US22_1
and [<Struct>] US23 =
    | US23_0
    | US23_1
and Mut0 = {mutable l0 : int32}
and UH0 =
    | UH0_0
    | UH0_1 of Vec<struct (string * US23 * string * bool * bool)> * UH0
and UH1 =
    | UH1_0
    | UH1_1 of Vec<string> * UH1
and Heap4 = {l0 : std_string_String}
and [<Struct>] US24 =
    | US24_0 of f0_0 : Vec<Heap4 option>
    | US24_1 of f1_0 : std_string_String
and [<Struct>] US25 =
    | US25_0 of f0_0 : Heap4
    | US25_1
and [<Struct>] US26 =
    | US26_0 of f0_0 : Result<Vec<Heap4 option>, std_string_String>
    | US26_1
and [<Struct>] US28 =
    | US28_0 of f0_0 : Vec<US25>
    | US28_1 of f1_0 : std_string_String
and [<Struct>] US27 =
    | US27_0 of f0_0 : US28
    | US27_1
and [<Struct>] US31 =
    | US31_0 of f0_0 : string
    | US31_1
and [<Struct>] US30 =
    | US30_0 of f0_0 : US31
    | US30_1 of f1_0 : std_string_String
and [<Struct>] US29 =
    | US29_0 of f0_0 : US30
    | US29_1
and [<Struct>] US32 =
    | US32_0 of f0_0 : US25
    | US32_1
and [<Struct>] US33 =
    | US33_0 of f0_0 : string option
    | US33_1 of f1_0 : std_string_String
and [<Struct>] US34 =
    | US34_0 of f0_0 : Vec<unit>
    | US34_1 of f1_0 : std_string_String
and [<Struct>] US36 =
    | US36_0 of f0_0 : (US25 [])
    | US36_1 of f1_0 : std_string_String
and [<Struct>] US35 =
    | US35_0 of f0_0 : US36
    | US35_1
and [<Struct>] US37 =
    | US37_0 of f0_0 : Result<Vec<string option>, std_string_String>
    | US37_1
and [<Struct>] US39 =
    | US39_0 of f0_0 : Vec<string option>
    | US39_1 of f1_0 : std_string_String
and [<Struct>] US38 =
    | US38_0 of f0_0 : US39
    | US38_1
and [<Struct>] US41 =
    | US41_0 of f0_0 : Vec<US31>
    | US41_1 of f1_0 : std_string_String
and [<Struct>] US40 =
    | US40_0 of f0_0 : US41
    | US40_1
and [<Struct>] US42 =
    | US42_0 of f0_0 : US31
    | US42_1
and Heap5 = {l0 : std_string_String; l1 : std_string_String; l2 : std_string_String; l3 : std_string_String; l4 : std_string_String; l5 : std_string_String; l6 : uint32; l7 : (struct (std_string_String * std_string_String option) []); l8 : float; l9 : bool; l10 : float; l11 : (std_string_String [])}
and [<Struct>] US43 =
    | US43_0 of f0_0 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option
    | US43_1 of f1_0 : std_string_String
and [<Struct>] US45 =
    | US45_0 of f0_0 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])
    | US45_1
and [<Struct>] US44 =
    | US44_0 of f0_0 : US45
    | US44_1 of f1_0 : std_string_String
and [<Struct>] US47 =
    | US47_0 of f0_0 : (struct (string * unativeint * Heap5) [])
    | US47_1
and [<Struct>] US46 =
    | US46_0 of f0_0 : US47
    | US46_1 of f1_0 : std_string_String
and [<Struct>] US49 =
    | US49_0 of f0_0 : Vec<struct (string * unativeint * Heap5)>
    | US49_1
and [<Struct>] US48 =
    | US48_0 of f0_0 : US49
    | US48_1 of f1_0 : std_string_String
and [<Struct>] US50 =
    | US50_0 of f0_0 : Vec<struct (string * unativeint * Heap5)> option
    | US50_1 of f1_0 : std_string_String
and UH2 =
    | UH2_0
    | UH2_1 of Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> * UH2
and Mut1 = {mutable l0 : int32; mutable l1 : UH2}
and [<Struct>] US51 =
    | US51_0 of f0_0 : Vec<struct (string * unativeint * Heap5)>
    | US51_1 of f1_0 : std_string_String
and [<Struct>] US52 =
    | US52_0 of f0_0 : (struct (string * unativeint * Heap5) [])
    | US52_1 of f1_0 : std_string_String
and [<Struct>] US53 =
    | US53_0 of f0_0 : (struct (string * unativeint * Heap5) []) option
    | US53_1 of f1_0 : std_string_String
and [<Struct>] US55 =
    | US55_0 of f0_0 : (struct (string * US23 * string * bool * bool) [])
    | US55_1
and [<Struct>] US54 =
    | US54_0 of f0_0 : US55
    | US54_1 of f1_0 : std_string_String
and [<Struct>] US56 =
    | US56_0 of f0_0 : (struct (string * US23 * string * bool * bool) []) option
    | US56_1 of f1_0 : std_string_String
and Heap6 = {l0 : int32}
and [<Struct>] US57 =
    | US57_0 of f0_0 : US14
    | US57_1 of f1_0 : std_string_String
and [<Struct>] US59 =
    | US59_0 of f0_0 : std_string_String * f0_1 : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * f0_2 : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * f0_3 : std_string_String option
    | US59_1
and [<Struct>] US58 =
    | US58_0 of f0_0 : US59
    | US58_1 of f1_0 : std_string_String
and [<Struct>] US60 =
    | US60_0 of f0_0 : crate_model_near_rpc_RpcResponse
    | US60_1 of f1_0 : std_string_String
and [<Struct>] US61 =
    | US61_0 of f0_0 : std_string_String * f0_1 : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * f0_2 : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * f0_3 : std_string_String option
    | US61_1 of f1_0 : std_string_String
and [<Struct>] US62 =
    | US62_0 of f0_0 : US58
    | US62_1
and [<Struct>] US63 =
    | US63_0 of f0_0 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option
    | US63_1 of f1_0 : std_string_String
and [<Struct>] US64 =
    | US64_0 of f0_0 : std_string_String * f0_1 : std_string_String * f0_2 : struct (std_string_String option * std_string_String option) option * f0_3 : int32 * f0_4 : std_string_String * f0_5 : std_string_String
    | US64_1
and [<Struct>] US65 =
    | US65_0 of f0_0 : leptos_prelude_ArcMemo<US31>
    | US65_1
and [<Struct>] US66 =
    | US66_0 of f0_0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>>
    | US66_1
and [<Struct>] US67 =
    | US67_0 of f0_0 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>
    | US67_1
and [<Struct>] US68 =
    | US68_0 of f0_0 : chrono_DateTime<chrono_Utc>
    | US68_1
and [<Struct>] US69 =
    | US69_0 of f0_0 : string
    | US69_1 of f1_0 : string
and Mut2 = {mutable l0 : int32; mutable l1 : US31}
and [<Struct>] US70 =
    | US70_0 of f0_0 : std_string_String
    | US70_1 of f1_0 : std_string_String
let rec closure1 () (v0 : web_sys_HtmlElement) : US0 =
    US0_0(v0)
and method0 () : (web_sys_HtmlElement -> US0) =
    closure1()
and method1 () : string =
    let v0 : string = ""
    v0
and method2 (v0 : web_sys_HtmlElement) : web_sys_HtmlElement =
    v0
and closure6 () (v0 : rexie_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method6 () : (rexie_Error -> std_string_String) =
    closure6()
and closure7 () (v0 : rexie_Rexie) : rexie_Rexie =
    v0
and method7 () : (rexie_Rexie -> rexie_Rexie) =
    closure7()
and method8 (v0 : int64, v1 : string) : string =
    let v2 : int64 = System.Convert.ToInt64 v1.Length
    let v3 : bool = v2 <= v0
    if v3 then
        v1
    else
        let v5 : (int64 -> float) = float
        let v6 : float = v5 v0
        let v9 : float = v6 / 2.0
        let v10 : (float -> float) = ceil
        let v11 : float = v10 v9
        let v13 : (float -> int64) = int64
        let v14 : int64 = v13 v11
        let v17 : (float -> float) = floor
        let v18 : float = v17 v9
        let v20 : (float -> int64) = int64
        let v21 : int64 = v20 v18
        let v24 : int64 = v14 - 1L
        let v26 : string = v1.[int 0L..int v24]
        let v30 : int64 = v2 - v21
        let v31 : int64 = v2 - 1L
        let v33 : string = v1.[int v30..int v31]
        let v37 : string = "..."
        let v38 : (string []) = [|v26; v37; v33|]
        let v40 : string seq = v38 |> Seq.ofArray
        let v45 : (string -> (string seq -> string)) = String.concat
        let v46 : string = ""
        let v47 : (string seq -> string) = v45 v46
        v47 v40
and closure8 () () : unit =
    let v0 : string = "} //"
    Fable.Core.RustInterop.emitRustExpr () v0 
    let v1 : string = "#[derive( //"
    Fable.Core.RustInterop.emitRustExpr () v1 
    let v2 : string = "  Debug, //"
    Fable.Core.RustInterop.emitRustExpr () v2 
    let v3 : string = "  Clone, //"
    Fable.Core.RustInterop.emitRustExpr () v3 
    let v4 : string = ")] //"
    Fable.Core.RustInterop.emitRustExpr () v4 
    let v5 : string = "pub struct PartialEqWrapper<T>(T); /*"
    Fable.Core.RustInterop.emitRustExpr () v5 
    let v6 : string = "*/ impl PartialEq for PartialEqWrapper< /*"
    Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : TypeEmit<std_sync_Arc<rexie_Rexie>> = null |> unbox<TypeEmit<std_sync_Arc<rexie_Rexie>>>
    let v11 : string = "*/ > { //"
    Fable.Core.RustInterop.emitRustExpr () v11 
    let v12 : string = "fn eq(&self, other: &Self) -> bool { //"
    Fable.Core.RustInterop.emitRustExpr () v12 
    let v13 : string = $"self"
    let v14 : Ref<PartialEqWrapper<std_sync_Arc<rexie_Rexie>>> = Fable.Core.RustInterop.emitRustExpr () v13 
    let v15 : string = $"other"
    let v16 : Ref<PartialEqWrapper<std_sync_Arc<rexie_Rexie>>> = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = "&$0.0"
    let v18 : Ref<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v16 v17 
    let v19 : string = "&$0.0"
    let v20 : Ref<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v14 v19 
    let v21 : string = "std::sync::Arc::ptr_eq($0, $1)"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr struct (v20, v18) v21 
    let v23 : string = $"v22 //"
    Fable.Core.RustInterop.emitRustExpr () v23 
    let v24 : string = "} } } fn _main() { { { //"
    Fable.Core.RustInterop.emitRustExpr () v24 
    ()
and closure9 () (v0 : std_sync_Arc<rexie_Rexie>) : US2 =
    US2_0(v0)
and method9 () : (std_sync_Arc<rexie_Rexie> -> US2) =
    closure9()
and method10 (v0 : Func0<string, std_string_String>) : Func0<string, std_string_String> =
    v0
and closure10 (v0 : Func0<string, std_string_String>) (v1 : string) : std_string_String =
    let v2 : Func0<string, std_string_String> = method10(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method11 (v0 : std_sync_Arc<rexie_Rexie>) : std_sync_Arc<rexie_Rexie> =
    v0
and closure11 () (v0 : rexie_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method12 () : (rexie_Error -> std_string_String) =
    closure11()
and method13 () : string =
    let v0 : string = "store"
    v0
and closure12 () (v0 : rexie_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method14 () : (rexie_Error -> std_string_String) =
    closure12()
and method15 () : string =
    let v0 : string = "core-state-heap"
    v0
and closure13 () (v0 : rexie_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method16 () : (rexie_Error -> std_string_String) =
    closure13()
and closure14 () (v0 : wasm_bindgen_JsValue) : US4 =
    US4_0(v0)
and method17 () : (wasm_bindgen_JsValue -> US4) =
    closure14()
and method18 (v0 : wasm_bindgen_JsValue) : wasm_bindgen_JsValue =
    v0
and closure15 () (v0 : serde_wasm_bindgen_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method19 () : (serde_wasm_bindgen_Error -> std_string_String) =
    closure15()
and closure16 () (v0 : serde_json_Value) : US5 =
    US5_0(v0)
and method20 () : (serde_json_Value -> US5) =
    closure16()
and method21 (v0 : serde_json_Value) : serde_json_Value =
    v0
and closure17 () (v0 : serde_json_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method22 () : (serde_json_Error -> std_string_String) =
    closure17()
and closure18 () (v0 : borsh_io_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method23 () : (borsh_io_Error -> std_string_String) =
    closure18()
and closure19 () (v0 : Heap3 option option) : US6 =
    US6_0(v0)
and method24 () : (Heap3 option option -> US6) =
    closure19()
and closure20 () (v0 : std_string_String) : US6 =
    US6_1(v0)
and method25 () : (std_string_String -> US6) =
    closure20()
and closure21 () (v0 : Heap3 option) : US3 =
    US3_0(v0)
and method26 () : (Heap3 option -> US3) =
    closure21()
and closure22 () (v0 : Heap3) : US8 =
    US8_0(v0)
and method27 () : (Heap3 -> US8) =
    closure22()
and method28 () : web_sys_Window =
    let v0 : string = "leptos::prelude::window()"
    let v1 : web_sys_Window = Fable.Core.RustInterop.emitRustExpr () v0 
    v1
and method29 (v0 : web_sys_Window) : Result<web_sys_Storage option, wasm_bindgen_JsValue> =
    let v1 : string = "$0.local_storage()"
    let v2 : Result<web_sys_Storage option, wasm_bindgen_JsValue> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    v2
and closure23 () (v0 : web_sys_Storage option) : US9 =
    US9_0(v0)
and method30 () : (web_sys_Storage option -> US9) =
    closure23()
and closure24 () (v0 : wasm_bindgen_JsValue) : US9 =
    US9_1(v0)
and method31 () : (wasm_bindgen_JsValue -> US9) =
    closure24()
and closure25 () (v0 : web_sys_Storage) : US11 =
    US11_0(v0)
and method32 () : (web_sys_Storage -> US11) =
    closure25()
and closure26 () (v0 : US8) : US7 =
    US7_0(v0)
and method33 () : (US8 -> US7) =
    closure26()
and method34 (v0 : web_sys_Storage) : web_sys_Storage =
    v0
and method35 () : string =
    let v0 : string = "core-state-heap"
    v0
and closure27 () (v0 : std_string_String option) : US12 =
    US12_0(v0)
and method36 () : (std_string_String option -> US12) =
    closure27()
and closure28 () (v0 : wasm_bindgen_JsValue) : US12 =
    US12_1(v0)
and method37 () : (wasm_bindgen_JsValue -> US12) =
    closure28()
and method38 (v0 : std_string_String option) : std_string_String option =
    v0
and closure29 () (v0 : std_string_String) : US14 =
    US14_0(v0)
and method39 () : (std_string_String -> US14) =
    closure29()
and method41 (v0 : string) : string =
    v0
and closure31 () (v0 : serde_json_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method42 () : (serde_json_Error -> std_string_String) =
    closure31()
and closure30 () (v0 : std_string_String) : US8 =
    let v1 : string = "fable_library_rust::String_::fromString($0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = method41(v2)
    (* run_target_args'
    let v8 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v9 : string = "&*$0"
    let v10 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3 v9 
    let _run_target_args'_v8 = v10 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v11 : string = "&*$0"
    let v12 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3 v11 
    let _run_target_args'_v8 = v12 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v13 : string = "&*$0"
    let v14 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3 v13 
    let _run_target_args'_v8 = v14 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v16 : Ref<Str> = v3 |> unbox<Ref<Str>>
    let _run_target_args'_v8 = v16 
    #endif
#if FABLE_COMPILER_PYTHON
    let v20 : Ref<Str> = v3 |> unbox<Ref<Str>>
    let _run_target_args'_v8 = v20 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v24 : Ref<Str> = v3 |> unbox<Ref<Str>>
    let _run_target_args'_v8 = v24 
    #endif
#else
    let v28 : Ref<Str> = v3 |> unbox<Ref<Str>>
    let _run_target_args'_v8 = v28 
    #endif
    let v31 : Ref<Str> = _run_target_args'_v8 
    let v37 : string = "serde_json::from_str(&$0)"
    let v38 : Result<Heap3, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v31 v37 
    let v39 : (serde_json_Error -> std_string_String) = method42()
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "$0.map_err(|x| $1(x))"
    let v43 : Result<Heap3, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v38, v39) v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "$0.map_err(|x| $1(x))"
    let v45 : Result<Heap3, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v38, v39) v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "$0.map_err(|x| $1(x))"
    let v47 : Result<Heap3, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v38, v39) v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v48 : Result<Heap3, std_string_String> = match v38 with Ok x -> Ok x | Error x -> Error (v39 x)
    let _run_target_args'_v41 = v48 
    #endif
#if FABLE_COMPILER_PYTHON
    let v49 : Result<Heap3, std_string_String> = match v38 with Ok x -> Ok x | Error x -> Error (v39 x)
    let _run_target_args'_v41 = v49 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v50 : Result<Heap3, std_string_String> = match v38 with Ok x -> Ok x | Error x -> Error (v39 x)
    let _run_target_args'_v41 = v50 
    #endif
#else
    let v51 : Result<Heap3, std_string_String> = match v38 with Ok x -> Ok x | Error x -> Error (v39 x)
    let _run_target_args'_v41 = v51 
    #endif
    let v52 : Result<Heap3, std_string_String> = _run_target_args'_v41 
    (* run_target_args'
    let v56 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v57 : string = "$0.ok()"
    let v58 : Heap3 option = Fable.Core.RustInterop.emitRustExpr v52 v57 
    let _run_target_args'_v56 = v58 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v59 : string = "$0.ok()"
    let v60 : Heap3 option = Fable.Core.RustInterop.emitRustExpr v52 v59 
    let _run_target_args'_v56 = v60 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v61 : string = "$0.ok()"
    let v62 : Heap3 option = Fable.Core.RustInterop.emitRustExpr v52 v61 
    let _run_target_args'_v56 = v62 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v63 : Heap3 option = match v52 with Ok x -> Some x | Error _ -> None
    let _run_target_args'_v56 = v63 
    #endif
#if FABLE_COMPILER_PYTHON
    let v64 : Heap3 option = match v52 with Ok x -> Some x | Error _ -> None
    let _run_target_args'_v56 = v64 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v65 : Heap3 option = match v52 with Ok x -> Some x | Error _ -> None
    let _run_target_args'_v56 = v65 
    #endif
#else
    let v66 : Heap3 option = match v52 with Ok x -> Some x | Error _ -> None
    let _run_target_args'_v56 = v66 
    #endif
    let v67 : Heap3 option = _run_target_args'_v56 
    let v72 : (Heap3 -> US8) = method27()
    let v73 : US8 option = v67 |> Option.map v72 
    let v93 : US8 = US8_1
    let v94 : US8 = v73 |> Option.defaultValue v93 
    v94
and method40 () : (std_string_String -> US8) =
    closure30()
and closure32 (v0 : Heap3) (v1 : bool) : bool =
    let v2 : string = "state_core.use_core_database (7) / effect core_state_heap / dark_mode signal_update"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : bool = v0.l0
    v5
and closure33 (v0 : Heap3) (v1 : bool) : bool =
    let v2 : string = "state_core.use_core_database (8) / effect core_state_heap / debug signal_update"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : bool = v0.l1
    v5
and closure34 (v0 : Heap3) (v1 : std_string_String) : std_string_String =
    let v2 : string = "state_core.use_core_database (9) / effect core_state_heap / url_hash signal_update"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : std_string_String = v0.l2
    v5
and closure35 (v0 : Heap3) (v1 : Heap0) : Heap0 =
    let v2 : string = "state_core.use_core_database (10) / effect core_state_heap / data signal_update"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : Heap0 = v0.l3
    v5
and closure36 (v0 : Heap2) () : std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>> =
    let v1 : string = "state_core.use_core_database (11) / loading new_arc_memo"
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : leptos_prelude_ArcRwSignal<std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>> = v0.l1
    let v5 : string = "Box::pin($0)"
    let v6 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>>>> = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v8 : std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>> = Fable.Core.RustInterop.emitRustExpr v6 v7 
    v8
and method43 () : string =
    let v0 : string = "core-state-heap"
    v0
and method44 (v0 : Func0<Heap3, std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>>) : Func0<Heap3, std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>> =
    v0
and closure37 (v0 : Func0<Heap3, std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>>) (v1 : Heap3) : std_pin_Pin<Box<Dyn<std_future_Future<unit>>>> =
    let v2 : Func0<Heap3, std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>> = method44(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : std_pin_Pin<Box<Dyn<std_future_Future<unit>>>> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method45 (v0 : std_string_String) : std_string_String =
    v0
and closure38 () (v0 : leptos_prelude_ArcRwSignal<bool>) : US16 =
    US16_0(v0)
and method46 () : (leptos_prelude_ArcRwSignal<bool> -> US16) =
    closure38()
and closure39 () (v0 : bool) : bool =
    let v1 : string = "state_core.use_core_database (17) / effect new_core_state_heap / set_loaded |> signal_update true"
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    true
and method47 (v0 : web_sys_Storage) : web_sys_Storage =
    v0
and method48 () : string =
    let v0 : string = "core-state-heap"
    v0
and method49 (v0 : Heap3) : Heap3 =
    v0
and closure40 (v0 : Heap2) () : bool =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<bool> = v5.l0
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr v6 v7 
    v8
and method50 (v0 : Heap2) : (unit -> bool) =
    closure40(v0)
and closure41 (v0 : leptos_router_location_Location) () : string =
    let v1 : string = "$0.pathname"
    let v2 : leptos_prelude_Memo<std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = $"leptos::prelude::Memo::get(&$0)"
    let v4 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = "fable_library_rust::String_::fromString($0)"
    let v6 : string = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : string = "$0.search"
    let v8 : leptos_prelude_Memo<std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v7 
    let v9 : string = $"leptos::prelude::Memo::get(&$0)"
    let v10 : std_string_String = Fable.Core.RustInterop.emitRustExpr v8 v9 
    let v11 : string = "fable_library_rust::String_::fromString($0)"
    let v12 : string = Fable.Core.RustInterop.emitRustExpr v10 v11 
    let v13 : bool = v12 = ""
    let v16 : string =
        if v13 then
            let v14 : string = ""
            v14
        else
            let v15 : string = $"?{v12}"
            v15
    let v17 : string = v6 + v16 
    v17
and method51 (v0 : std_string_String) : std_string_String =
    v0
and method52 (v0 : std_string_String) : std_string_String =
    v0
and closure42 () (v0 : leptos_router_Url) : US20 =
    US20_0(v0)
and method53 () : (leptos_router_Url -> US20) =
    closure42()
and closure43 () (v0 : std_string_String) : US20 =
    US20_1(v0)
and method54 () : (std_string_String -> US20) =
    closure43()
and closure45 () struct (v0 : bool, v1 : std_string_String) : bool =
    v0
and method55 () : (struct (bool * std_string_String) -> bool) =
    closure45()
and method56 (v0 : Vec<struct (bool * std_string_String)>) : Vec<struct (bool * std_string_String)> =
    v0
and closure44 (v0 : Heap2) () : Vec<string> =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<Heap0> = v5.l3
    let v7 : string = "Box::pin($0)"
    let v8 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v6 v7 
    let v9 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v10 : Heap0 = Fable.Core.RustInterop.emitRustExpr v8 v9 
    let v11 : Vec<(bool * std_string_String)> = v10.l0
    let v12 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
    let v13 : bool = Fable.Core.RustInterop.emitRustExpr v11 v12 
    let v14 : string = "x"
    let v15 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr () v14 
    let (a, b) = v15 
    let v18 : bool = a
    let v19 : std_string_String = b
    let v24 : string = "true; $0 }).collect::<Vec<_>>()"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr struct (v18, v19) v24 
    let v26 : string = "_vec_map"
    let v27 : Vec<struct (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : (struct (bool * std_string_String) -> bool) = method55()
    let v29 : Vec<struct (bool * std_string_String)> = method56(v27)
    let v30 : string = "v29.into_iter().filter(|x| v28(x.clone().clone())).collect::<Vec<_>>()"
    let v31 : Vec<struct (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v30 
    let v32 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
    let v33 : bool = Fable.Core.RustInterop.emitRustExpr v31 v32 
    let v34 : string = "x"
    let struct (v35 : bool, v36 : std_string_String) = Fable.Core.RustInterop.emitRustExpr () v34 
    let v37 : string = "true; $0 }).collect::<Vec<_>>()"
    let v38 : bool = Fable.Core.RustInterop.emitRustExpr v36 v37 
    let v39 : string = "_vec_map"
    let v40 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v39 
    let v41 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
    let v42 : bool = Fable.Core.RustInterop.emitRustExpr v40 v41 
    let v43 : string = "x"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v43 
    let v45 : string = "fable_library_rust::String_::fromString($0)"
    let v46 : string = Fable.Core.RustInterop.emitRustExpr v44 v45 
    let v47 : string = "true; $0 }).collect::<Vec<_>>()"
    let v48 : bool = Fable.Core.RustInterop.emitRustExpr v46 v47 
    let v49 : string = "_vec_map"
    let v50 : Vec<string> = Fable.Core.RustInterop.emitRustExpr () v49 
    let v52 : string = $"%A{v50}"
    let v55 : string = "use_transactions.render (2) / accounts new_arc_memo / result: " + string v52 + ""
    let v56 : int64 = 200L
    let v57 : string = method8(v56, v55)
    let v58 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v59 : bool = Fable.Core.RustInterop.emitRustExpr v57 v58 
    v50
and method57 (v0 : Func0<string, struct (string * US23 * string * bool * bool)>) : Func0<string, struct (string * US23 * string * bool * bool)> =
    v0
and closure47 (v0 : Func0<string, struct (string * US23 * string * bool * bool)>) (v1 : string) : struct (string * US23 * string * bool * bool) =
    let v2 : Func0<string, struct (string * US23 * string * bool * bool)> = method57(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : string, v6 : US23, v7 : string, v8 : bool, v9 : bool) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9)
and closure46 (v0 : leptos_prelude_ArcMemo<Vec<string>>) () : (struct (string * US23 * string * bool * bool) []) =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let v7 : string = Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : string = "https://api3.nearblocks.io/v1/account/" + v7 + ""
    let v9 : US23 = US23_0
    let v10 : string = ""
    let func1_from_result = struct (v8, v9, v10, false, true) //
    let v11 : _ = func1_from_result
    let v12 : string = $"true; $0 /*"
    let v13 : bool = Fable.Core.RustInterop.emitRustExpr v11 v12 
    let v14 : string = $"*/ }}); //"
    let v15 : bool = Fable.Core.RustInterop.emitRustExpr () v14 
    let v16 : string = $"_func1_from_v3"
    let v17 : Func0<string, struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr () v16 
    let v18 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v19 : (string -> struct (string * US23 * string * bool * bool)) = closure47(v17)
    let v20 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr struct (v2, v19) v18 
    let v21 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v22 : (struct (string * US23 * string * bool * bool) []) = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v24 : string = $"%A{v22}"
    let v27 : string = "use_transactions.render (3) / accounts_metadata new_arc_memo / result: " + string v24 + ""
    let v28 : int64 = 200L
    let v29 : string = method8(v28, v27)
    let v30 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v31 : bool = Fable.Core.RustInterop.emitRustExpr v29 v30 
    v22
and method59 (v0 : int32, v1 : Mut0) : bool =
    let v2 : int32 = v1.l0
    let v3 : bool = v2 < v0
    v3
and method58 (v0 : Heap0) : Vec<int32> =
    let v1 : int32 = v0.l3
    let v2 : (int32 []) = Array.zeroCreate<int32> (v1)
    let v3 : Mut0 = {l0 = 0} : Mut0
    while method59(v1, v3) do
        let v5 : int32 = v3.l0
        v2.[int v5] <- v5
        let v6 : int32 = v5 + 1
        v3.l0 <- v6
        ()
    let v7 : string = "$0.to_vec()"
    let v8 : Vec<int32> = Fable.Core.RustInterop.emitRustExpr v2 v7 
    v8
and method60 (v0 : Func0<int32, struct (string * US23 * string * bool * bool)>) : Func0<int32, struct (string * US23 * string * bool * bool)> =
    v0
and closure49 (v0 : Func0<int32, struct (string * US23 * string * bool * bool)>) (v1 : int32) : struct (string * US23 * string * bool * bool) =
    let v2 : Func0<int32, struct (string * US23 * string * bool * bool)> = method60(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : string, v6 : US23, v7 : string, v8 : bool, v9 : bool) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9)
and method61 (v0 : Func0<string, struct (string * Vec<struct (string * US23 * string * bool * bool)>)>) : Func0<string, struct (string * Vec<struct (string * US23 * string * bool * bool)>)> =
    v0
and closure50 (v0 : Func0<string, struct (string * Vec<struct (string * US23 * string * bool * bool)>)>) (v1 : string) : struct (string * Vec<struct (string * US23 * string * bool * bool)>) =
    let v2 : Func0<string, struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = method61(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : string, v6 : Vec<struct (string * US23 * string * bool * bool)>) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6)
and closure48 (v0 : Heap2, v1 : leptos_prelude_ArcMemo<Vec<string>>) () : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> =
    let v2 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v3 : string = "Box::pin($0)"
    let v4 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v6 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : leptos_prelude_ArcRwSignal<Heap0> = v6.l3
    let v8 : string = "Box::pin($0)"
    let v9 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v10 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v11 : Heap0 = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v13 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v1 v12 
    let v14 : unit = ()
    let v15 : string = $"true; let _func1_from_v14 = Func1::from(move |value| {{ //"
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = $"value"
    let v18 : string = Fable.Core.RustInterop.emitRustExpr () v17 
    let v19 : Vec<int32> = method58(v11)
    let v20 : unit = ()
    let v21 : string = $"true; let _func1_from_v20 = Func1::from(move |value| {{ //"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr () v21 
    let v23 : string = $"value"
    let v24 : int32 = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : int32 = v24 + 1
    let v26 : string = "https://api3.nearblocks.io/v1/account/" + v18 + "/txns?&order=desc&page=" + string v25 + "&per_page=" + string 25 + ""
    let v27 : US23 = US23_0
    let v28 : string = ""
    let func1_from_result = struct (v26, v27, v28, false, true) //
    let v29 : _ = func1_from_result
    let v30 : string = $"true; $0 /*"
    let v31 : bool = Fable.Core.RustInterop.emitRustExpr v29 v30 
    let v32 : string = $"*/ }}); //"
    let v33 : bool = Fable.Core.RustInterop.emitRustExpr () v32 
    let v34 : string = $"_func1_from_v20"
    let v35 : Func0<int32, struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr () v34 
    let v36 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v37 : (int32 -> struct (string * US23 * string * bool * bool)) = closure49(v35)
    let v38 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr struct (v19, v37) v36 
    let func1_from_result = struct (v18, v38) //
    let v39 : _ = func1_from_result
    let v40 : string = $"true; $0 /*"
    let v41 : bool = Fable.Core.RustInterop.emitRustExpr v39 v40 
    let v42 : string = $"*/ }}); //"
    let v43 : bool = Fable.Core.RustInterop.emitRustExpr () v42 
    let v44 : string = $"_func1_from_v14"
    let v45 : Func0<string, struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr () v44 
    let v46 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v47 : (string -> struct (string * Vec<struct (string * US23 * string * bool * bool)>)) = closure50(v45)
    let v48 : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr struct (v13, v47) v46 
    let v50 : string = $"%A{v48}"
    let v53 : string = "use_transactions.render (4) / accounts_requests new_arc_memo / result: " + string v50 + ""
    let v54 : int64 = 200L
    let v55 : string = method8(v54, v53)
    let v56 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v57 : bool = Fable.Core.RustInterop.emitRustExpr v55 v56 
    v48
and method62 (v0 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<struct (string * US23 * string * bool * bool)>>) : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<struct (string * US23 * string * bool * bool)>> =
    v0
and closure52 (v0 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<struct (string * US23 * string * bool * bool)>>) struct (v1 : string, v2 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<struct (string * US23 * string * bool * bool)> =
    let v3 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<struct (string * US23 * string * bool * bool)>> = method62(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let v6 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v4 v5 
    v6
and closure54 (v0 : Vec<struct (string * US23 * string * bool * bool)>) (v1 : UH0) : UH0 =
    UH0_1(v0, v1)
and closure53 () (v0 : Vec<struct (string * US23 * string * bool * bool)>) : (UH0 -> UH0) =
    closure54(v0)
and method63 () : (Vec<struct (string * US23 * string * bool * bool)> -> (UH0 -> UH0)) =
    closure53()
and method65 (v0 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<struct (string * US23 * string * bool * bool)> =
    v0
and method66 (v0 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<struct (string * US23 * string * bool * bool)> =
    v0
and method64 (v0 : UH0, v1 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<struct (string * US23 * string * bool * bool)> =
    match v0 with
    | UH0_1(v2, v3) -> (* Cons *)
        let v4 : Vec<struct (string * US23 * string * bool * bool)> = method65(v2)
        let v5 : Vec<struct (string * US23 * string * bool * bool)> = method66(v1)
        let v6 : string = "true; let mut v5 = v5"
        let v7 : bool = Fable.Core.RustInterop.emitRustExpr () v6 
        let v8 : string = "true; v5.extend(v4)"
        let v9 : bool = Fable.Core.RustInterop.emitRustExpr () v8 
        let v10 : string = "v5"
        let v11 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr () v10 
        method64(v3, v11)
    | UH0_0 -> (* Nil *)
        v1
and closure51 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>>) () : Vec<struct (string * US23 * string * bool * bool)> =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let struct (v7 : string, v8 : Vec<struct (string * US23 * string * bool * bool)>) = Fable.Core.RustInterop.emitRustExpr () v6 
    let func1_from_result = v8 //
    let v9 : _ = func1_from_result
    let v10 : string = $"true; $0 /*"
    let v11 : bool = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = $"*/ }}); //"
    let v13 : bool = Fable.Core.RustInterop.emitRustExpr () v12 
    let v14 : string = $"_func1_from_v3"
    let v15 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr () v14 
    let v16 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v17 : (struct (string * Vec<struct (string * US23 * string * bool * bool)>) -> Vec<struct (string * US23 * string * bool * bool)>) = closure52(v15)
    let v18 : Vec<Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr struct (v2, v17) v16 
    let v19 : (struct (string * US23 * string * bool * bool) []) = [||]
    let v20 : string = "$0.to_vec()"
    let v21 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v19 v20 
    let v22 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v23 : (Vec<struct (string * US23 * string * bool * bool)> []) = Fable.Core.RustInterop.emitRustExpr v18 v22 
    let v25 : Vec<struct (string * US23 * string * bool * bool)> list = v23 |> Array.toList
    let v33 : ((Vec<struct (string * US23 * string * bool * bool)> -> (UH0 -> UH0)) -> (Vec<struct (string * US23 * string * bool * bool)> list -> (UH0 -> UH0))) = List.foldBack
    let v34 : (Vec<struct (string * US23 * string * bool * bool)> -> (UH0 -> UH0)) = method63()
    let v35 : (Vec<struct (string * US23 * string * bool * bool)> list -> (UH0 -> UH0)) = v33 v34
    let v36 : (UH0 -> UH0) = v35 v25
    let v37 : UH0 = UH0_0
    let v38 : UH0 = v36 v37
    let v67 : Vec<struct (string * US23 * string * bool * bool)> = method64(v38, v21)
    let v69 : string = $"%A{v67}"
    let v72 : string = "use_transactions.render (5) / txns_requests new_arc_memo / result: " + string v69 + ""
    let v73 : int64 = 200L
    let v74 : string = method8(v73, v72)
    let v75 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v76 : bool = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v67
and method67 (v0 : Func0<struct (string * US23 * string * bool * bool), string>) : Func0<struct (string * US23 * string * bool * bool), string> =
    v0
and closure56 (v0 : Func0<struct (string * US23 * string * bool * bool), string>) struct (v1 : string, v2 : US23, v3 : string, v4 : bool, v5 : bool) : string =
    let v6 : Func0<struct (string * US23 * string * bool * bool), string> = method67(v0)
    let func1_move_x = struct (v1, v2, v3, v4, v5) //
    let v7 : _ = func1_move_x
    let v8 : string = "(move |x| v6(x))($0)"
    let v9 : string = Fable.Core.RustInterop.emitRustExpr v7 v8 
    v9
and method68 (v0 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<string>>) : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<string>> =
    v0
and closure57 (v0 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<string>>) struct (v1 : string, v2 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<string> =
    let v3 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<string>> = method68(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let v6 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v4 v5 
    v6
and closure59 (v0 : Vec<string>) (v1 : UH1) : UH1 =
    UH1_1(v0, v1)
and closure58 () (v0 : Vec<string>) : (UH1 -> UH1) =
    closure59(v0)
and method69 () : (Vec<string> -> (UH1 -> UH1)) =
    closure58()
and method71 (v0 : Vec<string>) : Vec<string> =
    v0
and method72 (v0 : Vec<string>) : Vec<string> =
    v0
and method70 (v0 : UH1, v1 : Vec<string>) : Vec<string> =
    match v0 with
    | UH1_1(v2, v3) -> (* Cons *)
        let v4 : Vec<string> = method71(v2)
        let v5 : Vec<string> = method72(v1)
        let v6 : string = "true; let mut v5 = v5"
        let v7 : bool = Fable.Core.RustInterop.emitRustExpr () v6 
        let v8 : string = "true; v5.extend(v4)"
        let v9 : bool = Fable.Core.RustInterop.emitRustExpr () v8 
        let v10 : string = "v5"
        let v11 : Vec<string> = Fable.Core.RustInterop.emitRustExpr () v10 
        method70(v3, v11)
    | UH1_0 -> (* Nil *)
        v1
and closure55 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>>) () : (string []) =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let struct (v7 : string, v8 : Vec<struct (string * US23 * string * bool * bool)>) = Fable.Core.RustInterop.emitRustExpr () v6 
    let v9 : unit = ()
    let v10 : string = $"true; let _func1_from_v9 = Func1::from(move |value| {{ //"
    let v11 : bool = Fable.Core.RustInterop.emitRustExpr () v10 
    let v12 : string = $"value"
    let struct (v13 : string, v14 : US23, v15 : string, v16 : bool, v17 : bool) = Fable.Core.RustInterop.emitRustExpr () v12 
    let func1_from_result = v7 //
    let v18 : _ = func1_from_result
    let v19 : string = $"true; $0 /*"
    let v20 : bool = Fable.Core.RustInterop.emitRustExpr v18 v19 
    let v21 : string = $"*/ }}); //"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr () v21 
    let v23 : string = $"_func1_from_v9"
    let v24 : Func0<struct (string * US23 * string * bool * bool), string> = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v26 : (struct (string * US23 * string * bool * bool) -> string) = closure56(v24)
    let v27 : Vec<string> = Fable.Core.RustInterop.emitRustExpr struct (v8, v26) v25 
    let func1_from_result = v27 //
    let v28 : _ = func1_from_result
    let v29 : string = $"true; $0 /*"
    let v30 : bool = Fable.Core.RustInterop.emitRustExpr v28 v29 
    let v31 : string = $"*/ }}); //"
    let v32 : bool = Fable.Core.RustInterop.emitRustExpr () v31 
    let v33 : string = $"_func1_from_v3"
    let v34 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<string>> = Fable.Core.RustInterop.emitRustExpr () v33 
    let v35 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v36 : (struct (string * Vec<struct (string * US23 * string * bool * bool)>) -> Vec<string>) = closure57(v34)
    let v37 : Vec<Vec<string>> = Fable.Core.RustInterop.emitRustExpr struct (v2, v36) v35 
    let v38 : (string []) = [||]
    let v39 : string = "$0.to_vec()"
    let v40 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v38 v39 
    let v41 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v42 : (Vec<string> []) = Fable.Core.RustInterop.emitRustExpr v37 v41 
    let v44 : Vec<string> list = v42 |> Array.toList
    let v52 : ((Vec<string> -> (UH1 -> UH1)) -> (Vec<string> list -> (UH1 -> UH1))) = List.foldBack
    let v53 : (Vec<string> -> (UH1 -> UH1)) = method69()
    let v54 : (Vec<string> list -> (UH1 -> UH1)) = v52 v53
    let v55 : (UH1 -> UH1) = v54 v44
    let v56 : UH1 = UH1_0
    let v57 : UH1 = v55 v56
    let v86 : Vec<string> = method70(v57, v40)
    let v87 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v88 : (string []) = Fable.Core.RustInterop.emitRustExpr v86 v87 
    let v90 : string = $"%A{v88}"
    let v93 : string = "use_transactions.render (6) / urls_accounts new_arc_memo / result: " + string v90 + ""
    let v94 : int64 = 200L
    let v95 : string = method8(v94, v93)
    let v96 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v97 : bool = Fable.Core.RustInterop.emitRustExpr v95 v96 
    v88
and method73 (v0 : Func0<crate_model_near_nearblocks_Action, struct (std_string_String * std_string_String option)>) : Func0<crate_model_near_nearblocks_Action, struct (std_string_String * std_string_String option)> =
    v0
and closure61 (v0 : Func0<crate_model_near_nearblocks_Action, struct (std_string_String * std_string_String option)>) (v1 : crate_model_near_nearblocks_Action) : struct (std_string_String * std_string_String option) =
    let v2 : Func0<crate_model_near_nearblocks_Action, struct (std_string_String * std_string_String option)> = method73(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : std_string_String option) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6)
and method74 (v0 : (struct (std_string_String * std_string_String option) [])) : (struct (std_string_String * std_string_String option) []) =
    v0
and closure62 () (v0 : Vec<std_string_String>) : (std_string_String []) =
    let v1 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v2 : (std_string_String []) = Fable.Core.RustInterop.emitRustExpr v0 v1 
    v2
and method75 () : (Vec<std_string_String> -> (std_string_String [])) =
    closure62()
and method76 (v0 : Func0<crate_model_near_nearblocks_Txn, struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))>) : Func0<crate_model_near_nearblocks_Txn, struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> =
    v0
and closure63 (v0 : Func0<crate_model_near_nearblocks_Txn, struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))>) (v1 : crate_model_near_nearblocks_Txn) : struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) =
    let v2 : Func0<crate_model_near_nearblocks_Txn, struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = method76(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : std_string_String, v7 : std_string_String, v8 : std_string_String, v9 : std_string_String, v10 : std_string_String, v11 : uint32, v12 : (struct (std_string_String * std_string_String option) []), v13 : float, v14 : bool, v15 : float, v16 : (std_string_String [])) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16)
and method77 (v0 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) =
    v0
and closure60 () (v0 : crate_model_near_nearblocks_Root) : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) =
    let v1 : string = "$0.txns"
    let v2 : Vec<crate_model_near_nearblocks_Txn> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let v7 : crate_model_near_nearblocks_Txn = Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : string = "$0.receipt_id"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v10 : string = "$0.predecessor_account_id"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v10 
    let v12 : string = "$0.receiver_account_id"
    let v13 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v12 
    let v14 : string = "$0.transaction_hash"
    let v15 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v14 
    let v16 : string = "$0.included_in_block_hash"
    let v17 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v16 
    let v18 : string = "$0.block_timestamp"
    let v19 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v18 
    let v20 : string = "$0.block"
    let v21 : crate_model_near_nearblocks_Block = Fable.Core.RustInterop.emitRustExpr v7 v20 
    let v22 : string = "$0.block_height"
    let v23 : uint32 = Fable.Core.RustInterop.emitRustExpr v21 v22 
    let v24 : string = "$0.actions"
    let v25 : Vec<crate_model_near_nearblocks_Action> = Fable.Core.RustInterop.emitRustExpr v7 v24 
    let v26 : unit = ()
    let v27 : string = $"true; let _func1_from_v26 = Func1::from(move |value| {{ //"
    let v28 : bool = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : string = $"value"
    let v30 : crate_model_near_nearblocks_Action = Fable.Core.RustInterop.emitRustExpr () v29 
    let v31 : string = "$0.action"
    let v32 : std_string_String = Fable.Core.RustInterop.emitRustExpr v30 v31 
    let v33 : string = "$0.method"
    let v34 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v30 v33 
    let func1_from_result = struct (v32, v34) //
    let v35 : _ = func1_from_result
    let v36 : string = $"true; $0 /*"
    let v37 : bool = Fable.Core.RustInterop.emitRustExpr v35 v36 
    let v38 : string = $"*/ }}); //"
    let v39 : bool = Fable.Core.RustInterop.emitRustExpr () v38 
    let v40 : string = $"_func1_from_v26"
    let v41 : Func0<crate_model_near_nearblocks_Action, struct (std_string_String * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr () v40 
    let v42 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v43 : (crate_model_near_nearblocks_Action -> struct (std_string_String * std_string_String option)) = closure61(v41)
    let v44 : Vec<struct (std_string_String * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr struct (v25, v43) v42 
    let v45 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v46 : (struct (std_string_String * std_string_String option) []) = Fable.Core.RustInterop.emitRustExpr v44 v45 
    let v47 : (struct (std_string_String * std_string_String option) []) = method74(v46)
    let v48 : string = "$0.actions_agg"
    let v49 : crate_model_near_nearblocks_ActionsAgg = Fable.Core.RustInterop.emitRustExpr v7 v48 
    let v50 : string = "$0.deposit"
    let v51 : float = Fable.Core.RustInterop.emitRustExpr v49 v50 
    let v52 : string = "$0.outcomes"
    let v53 : crate_model_near_nearblocks_Outcomes = Fable.Core.RustInterop.emitRustExpr v7 v52 
    let v54 : string = "$0.status"
    let v55 : bool = Fable.Core.RustInterop.emitRustExpr v53 v54 
    let v56 : string = "$0.outcomes_agg"
    let v57 : crate_model_near_nearblocks_OutcomesAgg = Fable.Core.RustInterop.emitRustExpr v7 v56 
    let v58 : string = "$0.transaction_fee"
    let v59 : float = Fable.Core.RustInterop.emitRustExpr v57 v58 
    let v60 : string = "$0.logs"
    let v61 : Vec<std_string_String> option = Fable.Core.RustInterop.emitRustExpr v7 v60 
    let v64 : (Vec<std_string_String> -> (std_string_String [])) = method75()
    let v65 : (std_string_String []) option = v61 |> Option.map v64 
    let v84 : (std_string_String []) = [||]
    let v86 : (std_string_String []) = v65 |> Option.defaultValue v84 
    let func1_from_result = struct (v9, v11, v13, v15, v17, v19, v23, v47, v51, v55, v59, v86) //
    let v89 : _ = func1_from_result
    let v90 : string = $"true; $0 /*"
    let v91 : bool = Fable.Core.RustInterop.emitRustExpr v89 v90 
    let v92 : string = $"*/ }}); //"
    let v93 : bool = Fable.Core.RustInterop.emitRustExpr () v92 
    let v94 : string = $"_func1_from_v3"
    let v95 : Func0<crate_model_near_nearblocks_Txn, struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr () v94 
    let v96 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v97 : (crate_model_near_nearblocks_Txn -> struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))) = closure63(v95)
    let v98 : Vec<struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr struct (v2, v97) v96 
    let v99 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v100 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) = Fable.Core.RustInterop.emitRustExpr v98 v99 
    let v101 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) = method77(v100)
    v101
and closure64 (v0 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>>) () : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option =
    let v1 : string = "state_core.use_requests (2) / database_memo"
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v5 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v0 v4 
    let v6 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v7 : bool = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : string = "x"
    let v9 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : (unit -> unit) = closure8()
    let _v10 = true
    let v11 : string = "PartialEqWrapper($0)"
    let v12 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v9 v11 
    let v13 : string = "true; $0 })"
    let v14 : bool = Fable.Core.RustInterop.emitRustExpr v12 v13 
    let v15 : string = "_optionm_map_"
    let v16 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr () v15 
    v16
and method79 (v0 : string) : string =
    v0
and method80 (v0 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>>) : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> =
    v0
and closure65 (v0 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>>) struct (v1 : string, v2 : US23, v3 : string, v4 : bool, v5 : bool) : std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>> =
    let v6 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = method80(v0)
    let func1_move_x = struct (v1, v2, v3, v4, v5) //
    let v7 : _ = func1_move_x
    let v8 : string = "(move |x| v6(x))($0)"
    let v9 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr v7 v8 
    v9
and method81 (v0 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>>) : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> =
    v0
and closure66 (v0 : leptos_prelude_ArcLocalResource<Result<Vec<Heap4 option>, std_string_String>>) () : Result<Vec<Heap4 option>, std_string_String> option =
    let v1 : string = "state_core.use_requests (5) / state_data_func"
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : web_sys_Window = method28()
    let v5 : Result<web_sys_Storage option, wasm_bindgen_JsValue> = method29(v4)
    let v6 : (web_sys_Storage option -> US9) = method30()
    let v7 : (wasm_bindgen_JsValue -> US9) = method31()
    let v9 : US9 = match v5 with Ok x -> v6 x | Error x -> v7 x
    let v45 : US10 =
        match v9 with
        | US9_1(v42) -> (* Error *)
            US10_1(v42)
        | US9_0(v12) -> (* Ok *)
            let v15 : (web_sys_Storage -> US11) = method32()
            let v16 : US11 option = v12 |> Option.map v15 
            let v36 : US11 = US11_1
            let v37 : US11 = v16 |> Option.defaultValue v36 
            US10_0(v37)
    let v59 : Result<Vec<Heap4 option>, std_string_String> option =
        match v45 with
        | US10_0(v46) -> (* Ok *)
            match v46 with
            | US11_0(v47) -> (* Some *)
                let v48 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
                let v49 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v0 v48 
                v49
            | _ ->
                let v51 : Result<Vec<Heap4 option>, std_string_String> option = None
                v51
        | _ ->
            let v56 : Result<Vec<Heap4 option>, std_string_String> option = None
            v56
    let v61 : string = $"%A{v59}"
    let v64 : string = "state_core.use_requests (6) / state_data_func func0 / result: " + string v61 + ""
    let v65 : int64 = 200L
    let v66 : string = method8(v65, v64)
    let v67 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v68 : bool = Fable.Core.RustInterop.emitRustExpr v66 v67 
    v59
and closure67 () (v0 : Result<Vec<Heap4 option>, std_string_String>) : US26 =
    US26_0(v0)
and method82 () : (Result<Vec<Heap4 option>, std_string_String> -> US26) =
    closure67()
and closure68 () (v0 : Vec<Heap4 option>) : US24 =
    US24_0(v0)
and method83 () : (Vec<Heap4 option> -> US24) =
    closure68()
and closure69 () (v0 : std_string_String) : US24 =
    US24_1(v0)
and method84 () : (std_string_String -> US24) =
    closure69()
and closure70 () (v0 : Heap4) : US25 =
    US25_0(v0)
and method85 () : (Heap4 -> US25) =
    closure70()
and closure73 () (v0 : US25) : US32 =
    US32_0(v0)
and method87 () : (US25 -> US32) =
    closure73()
and method88 (v0 : US23) : US23 =
    v0
and method89 (v0 : string) : string =
    v0
and method90 (v0 : std_string_String) : std_string_String =
    v0
and method91 (v0 : string) : string =
    v0
and method92 (v0 : std_string_String) : std_string_String =
    v0
and method93 (v0 : reqwest_RequestBuilder) : reqwest_RequestBuilder =
    v0
and method94 (v0 : reqwest_RequestBuilder) : reqwest_RequestBuilder =
    v0
and closure74 () (v0 : reqwest_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method95 () : (reqwest_Error -> std_string_String) =
    closure74()
and closure72 (v0 : US27, v1 : int32) struct (v2 : string, v3 : US23, v4 : string, v5 : bool, v6 : bool) : std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>> =
    let v7 : string = "true; let __future_init = Box::pin(/*"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr () v7 
    let v9 : string = "*/ async move { /*"
    let v10 : bool = Fable.Core.RustInterop.emitRustExpr () v9 
    let v11 : string = "*/ ()"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr () v11 
    let v69 : US29 =
        match v0 with
        | US27_1 -> (* None *)
            US29_1
        | US27_0(v13) -> (* Some *)
            let v65 : US30 =
                match v13 with
                | US28_1(v62) -> (* Error *)
                    US30_1(v62)
                | US28_0(v14) -> (* Ok *)
                    let v15 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v16 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v14 v15 
                    let v17 : US25 option = v16 |> Array.tryItem v1 
                    let v20 : (US25 -> US32) = method87()
                    let v21 : US32 option = v17 |> Option.map v20 
                    let v41 : US32 = US32_1
                    let v42 : US32 = v21 |> Option.defaultValue v41 
                    let v52 : US25 =
                        match v42 with
                        | US32_0(v46) -> (* Some *)
                            match v46 with
                            | US25_0(v47) -> (* Some *)
                                US25_0(v47)
                            | _ ->
                                US25_1
                        | _ ->
                            US25_1
                    let v60 : US31 =
                        match v52 with
                        | US25_1 -> (* None *)
                            US31_1
                        | US25_0(v53) -> (* Some *)
                            let v54 : std_string_String = v53.l0
                            let v55 : string = "fable_library_rust::String_::fromString($0)"
                            let v56 : string = Fable.Core.RustInterop.emitRustExpr v54 v55 
                            US31_0(v56)
                    US30_0(v60)
            US29_0(v65)
    let v71 : string = $"%A{struct (v3, v5, v6)}"
    let v74 : int64 = 400L
    let v75 : string = method8(v74, v71)
    let v77 : string = $"%A{v0}"
    let v80 : int64 = 400L
    let v81 : string = method8(v80, v77)
    let v83 : string = $"%A{v69}"
    let v86 : int64 = 400L
    let v87 : string = method8(v86, v83)
    let v112 : bool =
        if v6 then
            true
        else
            match v0 with
            | US27_0(v88) -> (* Some *)
                match v88 with
                | US28_0(v89) -> (* Ok *)
                    let v90 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v91 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v89 v90 
                    let v92 : int32 = v91.Length
                    let v93 : bool = v92 = 0
                    if v93 then
                        false
                    else
                        match v69 with
                        | US29_0(v94) -> (* Some *)
                            match v94 with
                            | US30_0(v95) -> (* Ok *)
                                match v95 with
                                | US31_1 -> (* None *)
                                    true
                                | _ ->
                                    false
                            | _ ->
                                false
                        | _ ->
                            false
                | _ ->
                    match v69 with
                    | US29_0(v100) -> (* Some *)
                        match v100 with
                        | US30_0(v101) -> (* Ok *)
                            match v101 with
                            | US31_1 -> (* None *)
                                true
                            | _ ->
                                false
                        | _ ->
                            false
                    | _ ->
                        false
            | _ ->
                match v69 with
                | US29_0(v106) -> (* Some *)
                    match v106 with
                    | US30_0(v107) -> (* Ok *)
                        match v107 with
                        | US31_1 -> (* None *)
                            true
                        | _ ->
                            false
                    | _ ->
                        false
                | _ ->
                    false
    let v113 : string = "state_core.use_requests (9) / result memo / state_data: " + string v81 + " / state_data': " + string v87 + " / request: " + string v75 + " / should_fetch: " + string v112 + ""
    let v114 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v115 : bool = Fable.Core.RustInterop.emitRustExpr v113 v114 
    let v116 : bool = v112 = false
    let v529 : US33 =
        if v116 then
            let v118 : string option = None
            US33_0(v118)
        else
            let v122 : US23 = method88(v3)
            let v264 : reqwest_RequestBuilder =
                match v122 with
                | US23_0 -> (* Get *)
                    let v123 : string = method89(v2)
                    (* run_target_args'
                    let v128 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v129 : string = "&*$0"
                    let v130 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v123 v129 
                    let _run_target_args'_v128 = v130 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v131 : string = "&*$0"
                    let v132 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v123 v131 
                    let _run_target_args'_v128 = v132 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v133 : string = "&*$0"
                    let v134 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v123 v133 
                    let _run_target_args'_v128 = v134 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v136 : Ref<Str> = v123 |> unbox<Ref<Str>>
                    let _run_target_args'_v128 = v136 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v140 : Ref<Str> = v123 |> unbox<Ref<Str>>
                    let _run_target_args'_v128 = v140 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v144 : Ref<Str> = v123 |> unbox<Ref<Str>>
                    let _run_target_args'_v128 = v144 
                    #endif
#else
                    let v148 : Ref<Str> = v123 |> unbox<Ref<Str>>
                    let _run_target_args'_v128 = v148 
                    #endif
                    let v151 : Ref<Str> = _run_target_args'_v128 
                    (* run_target_args'
                    let v161 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v162 : string = "String::from($0)"
                    let v163 : std_string_String = Fable.Core.RustInterop.emitRustExpr v151 v162 
                    let _run_target_args'_v161 = v163 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v164 : string = "String::from($0)"
                    let v165 : std_string_String = Fable.Core.RustInterop.emitRustExpr v151 v164 
                    let _run_target_args'_v161 = v165 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v166 : string = "String::from($0)"
                    let v167 : std_string_String = Fable.Core.RustInterop.emitRustExpr v151 v166 
                    let _run_target_args'_v161 = v167 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v169 : std_string_String = v151 |> unbox<std_string_String>
                    let _run_target_args'_v161 = v169 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v173 : std_string_String = v151 |> unbox<std_string_String>
                    let _run_target_args'_v161 = v173 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v177 : std_string_String = v151 |> unbox<std_string_String>
                    let _run_target_args'_v161 = v177 
                    #endif
#else
                    let v181 : std_string_String = v151 |> unbox<std_string_String>
                    let _run_target_args'_v161 = v181 
                    #endif
                    let v184 : std_string_String = _run_target_args'_v161 
                    let v190 : std_string_String = method90(v184)
                    let v191 : string = "reqwest_wasm::Client::builder().build().map_err(|err| err.to_string())?.get(v190)"
                    let v192 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr () v191 
                    v192
                | US23_1 -> (* Post *)
                    let v193 : string = method91(v2)
                    (* run_target_args'
                    let v198 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v199 : string = "&*$0"
                    let v200 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v193 v199 
                    let _run_target_args'_v198 = v200 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v201 : string = "&*$0"
                    let v202 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v193 v201 
                    let _run_target_args'_v198 = v202 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v203 : string = "&*$0"
                    let v204 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v193 v203 
                    let _run_target_args'_v198 = v204 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v206 : Ref<Str> = v193 |> unbox<Ref<Str>>
                    let _run_target_args'_v198 = v206 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v210 : Ref<Str> = v193 |> unbox<Ref<Str>>
                    let _run_target_args'_v198 = v210 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v214 : Ref<Str> = v193 |> unbox<Ref<Str>>
                    let _run_target_args'_v198 = v214 
                    #endif
#else
                    let v218 : Ref<Str> = v193 |> unbox<Ref<Str>>
                    let _run_target_args'_v198 = v218 
                    #endif
                    let v221 : Ref<Str> = _run_target_args'_v198 
                    (* run_target_args'
                    let v231 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v232 : string = "String::from($0)"
                    let v233 : std_string_String = Fable.Core.RustInterop.emitRustExpr v221 v232 
                    let _run_target_args'_v231 = v233 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v234 : string = "String::from($0)"
                    let v235 : std_string_String = Fable.Core.RustInterop.emitRustExpr v221 v234 
                    let _run_target_args'_v231 = v235 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v236 : string = "String::from($0)"
                    let v237 : std_string_String = Fable.Core.RustInterop.emitRustExpr v221 v236 
                    let _run_target_args'_v231 = v237 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v239 : std_string_String = v221 |> unbox<std_string_String>
                    let _run_target_args'_v231 = v239 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v243 : std_string_String = v221 |> unbox<std_string_String>
                    let _run_target_args'_v231 = v243 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v247 : std_string_String = v221 |> unbox<std_string_String>
                    let _run_target_args'_v231 = v247 
                    #endif
#else
                    let v251 : std_string_String = v221 |> unbox<std_string_String>
                    let _run_target_args'_v231 = v251 
                    #endif
                    let v254 : std_string_String = _run_target_args'_v231 
                    let v260 : std_string_String = method92(v254)
                    let v261 : string = "reqwest_wasm::Client::builder().build().map_err(|err| err.to_string())?.post(v260)"
                    let v262 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr () v261 
                    v262
            (* run_target_args'
            let v269 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v270 : string = "&*$0"
            let v271 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v270 
            let _run_target_args'_v269 = v271 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v272 : string = "&*$0"
            let v273 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v272 
            let _run_target_args'_v269 = v273 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v274 : string = "&*$0"
            let v275 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v274 
            let _run_target_args'_v269 = v275 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v277 : Ref<Str> = v4 |> unbox<Ref<Str>>
            let _run_target_args'_v269 = v277 
            #endif
#if FABLE_COMPILER_PYTHON
            let v281 : Ref<Str> = v4 |> unbox<Ref<Str>>
            let _run_target_args'_v269 = v281 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v285 : Ref<Str> = v4 |> unbox<Ref<Str>>
            let _run_target_args'_v269 = v285 
            #endif
#else
            let v289 : Ref<Str> = v4 |> unbox<Ref<Str>>
            let _run_target_args'_v269 = v289 
            #endif
            let v292 : Ref<Str> = _run_target_args'_v269 
            (* run_target_args'
            let v302 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v303 : string = "String::from($0)"
            let v304 : std_string_String = Fable.Core.RustInterop.emitRustExpr v292 v303 
            let _run_target_args'_v302 = v304 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v305 : string = "String::from($0)"
            let v306 : std_string_String = Fable.Core.RustInterop.emitRustExpr v292 v305 
            let _run_target_args'_v302 = v306 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v307 : string = "String::from($0)"
            let v308 : std_string_String = Fable.Core.RustInterop.emitRustExpr v292 v307 
            let _run_target_args'_v302 = v308 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v310 : std_string_String = v292 |> unbox<std_string_String>
            let _run_target_args'_v302 = v310 
            #endif
#if FABLE_COMPILER_PYTHON
            let v314 : std_string_String = v292 |> unbox<std_string_String>
            let _run_target_args'_v302 = v314 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v318 : std_string_String = v292 |> unbox<std_string_String>
            let _run_target_args'_v302 = v318 
            #endif
#else
            let v322 : std_string_String = v292 |> unbox<std_string_String>
            let _run_target_args'_v302 = v322 
            #endif
            let v325 : std_string_String = _run_target_args'_v302 
            let v331 : string = "reqwest_wasm::RequestBuilder::body(v264, $0)"
            let v332 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr v325 v331 
            let v333 : bool = v5 = false
            let v476 : reqwest_RequestBuilder =
                if v333 then
                    let v334 : string = "v332"
                    let v335 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr () v334 
                    v335
                else
                    let v336 : string = "reqwest_wasm::header::CONTENT_TYPE.to_string()"
                    let v337 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v336 
                    let v338 : string = "fable_library_rust::String_::fromString($0)"
                    let v339 : string = Fable.Core.RustInterop.emitRustExpr v337 v338 
                    let v340 : reqwest_RequestBuilder = method93(v332)
                    (* run_target_args'
                    let v345 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v346 : string = "&*$0"
                    let v347 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v339 v346 
                    let _run_target_args'_v345 = v347 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v348 : string = "&*$0"
                    let v349 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v339 v348 
                    let _run_target_args'_v345 = v349 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v350 : string = "&*$0"
                    let v351 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v339 v350 
                    let _run_target_args'_v345 = v351 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v353 : Ref<Str> = v339 |> unbox<Ref<Str>>
                    let _run_target_args'_v345 = v353 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v357 : Ref<Str> = v339 |> unbox<Ref<Str>>
                    let _run_target_args'_v345 = v357 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v361 : Ref<Str> = v339 |> unbox<Ref<Str>>
                    let _run_target_args'_v345 = v361 
                    #endif
#else
                    let v365 : Ref<Str> = v339 |> unbox<Ref<Str>>
                    let _run_target_args'_v345 = v365 
                    #endif
                    let v368 : Ref<Str> = _run_target_args'_v345 
                    (* run_target_args'
                    let v378 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v379 : string = "String::from($0)"
                    let v380 : std_string_String = Fable.Core.RustInterop.emitRustExpr v368 v379 
                    let _run_target_args'_v378 = v380 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v381 : string = "String::from($0)"
                    let v382 : std_string_String = Fable.Core.RustInterop.emitRustExpr v368 v381 
                    let _run_target_args'_v378 = v382 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v383 : string = "String::from($0)"
                    let v384 : std_string_String = Fable.Core.RustInterop.emitRustExpr v368 v383 
                    let _run_target_args'_v378 = v384 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v386 : std_string_String = v368 |> unbox<std_string_String>
                    let _run_target_args'_v378 = v386 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v390 : std_string_String = v368 |> unbox<std_string_String>
                    let _run_target_args'_v378 = v390 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v394 : std_string_String = v368 |> unbox<std_string_String>
                    let _run_target_args'_v378 = v394 
                    #endif
#else
                    let v398 : std_string_String = v368 |> unbox<std_string_String>
                    let _run_target_args'_v378 = v398 
                    #endif
                    let v401 : std_string_String = _run_target_args'_v378 
                    let v407 : string = "application/json"
                    (* run_target_args'
                    let v412 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v413 : string = "&*$0"
                    let v414 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v407 v413 
                    let _run_target_args'_v412 = v414 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v415 : string = "&*$0"
                    let v416 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v407 v415 
                    let _run_target_args'_v412 = v416 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v417 : string = "&*$0"
                    let v418 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v407 v417 
                    let _run_target_args'_v412 = v418 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v420 : Ref<Str> = v407 |> unbox<Ref<Str>>
                    let _run_target_args'_v412 = v420 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v424 : Ref<Str> = v407 |> unbox<Ref<Str>>
                    let _run_target_args'_v412 = v424 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v428 : Ref<Str> = v407 |> unbox<Ref<Str>>
                    let _run_target_args'_v412 = v428 
                    #endif
#else
                    let v432 : Ref<Str> = v407 |> unbox<Ref<Str>>
                    let _run_target_args'_v412 = v432 
                    #endif
                    let v435 : Ref<Str> = _run_target_args'_v412 
                    (* run_target_args'
                    let v445 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v446 : string = "String::from($0)"
                    let v447 : std_string_String = Fable.Core.RustInterop.emitRustExpr v435 v446 
                    let _run_target_args'_v445 = v447 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v448 : string = "String::from($0)"
                    let v449 : std_string_String = Fable.Core.RustInterop.emitRustExpr v435 v448 
                    let _run_target_args'_v445 = v449 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v450 : string = "String::from($0)"
                    let v451 : std_string_String = Fable.Core.RustInterop.emitRustExpr v435 v450 
                    let _run_target_args'_v445 = v451 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v453 : std_string_String = v435 |> unbox<std_string_String>
                    let _run_target_args'_v445 = v453 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v457 : std_string_String = v435 |> unbox<std_string_String>
                    let _run_target_args'_v445 = v457 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v461 : std_string_String = v435 |> unbox<std_string_String>
                    let _run_target_args'_v445 = v461 
                    #endif
#else
                    let v465 : std_string_String = v435 |> unbox<std_string_String>
                    let _run_target_args'_v445 = v465 
                    #endif
                    let v468 : std_string_String = _run_target_args'_v445 
                    let v474 : string = "reqwest_wasm::RequestBuilder::header(v340, $0, $1)"
                    let v475 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr struct (v401, v468) v474 
                    v475
            let v477 : reqwest_RequestBuilder = method94(v476)
            let v478 : string = "Box::pin(reqwest_wasm::RequestBuilder::send(v477))"
            let v479 : std_pin_Pin<Box<Dyn<std_future_Future<Result<reqwest_Response, reqwest_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v478 
            let v480 : string = "v479.await"
            let v481 : Result<reqwest_Response, reqwest_Error> = Fable.Core.RustInterop.emitRustExpr () v480 
            let v482 : (reqwest_Error -> std_string_String) = method95()
            (* run_target_args'
            let v484 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v485 : string = "$0.map_err(|x| $1(x))"
            let v486 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v481, v482) v485 
            let _run_target_args'_v484 = v486 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v487 : string = "$0.map_err(|x| $1(x))"
            let v488 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v481, v482) v487 
            let _run_target_args'_v484 = v488 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v489 : string = "$0.map_err(|x| $1(x))"
            let v490 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v481, v482) v489 
            let _run_target_args'_v484 = v490 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v491 : Result<reqwest_Response, std_string_String> = match v481 with Ok x -> Ok x | Error x -> Error (v482 x)
            let _run_target_args'_v484 = v491 
            #endif
#if FABLE_COMPILER_PYTHON
            let v492 : Result<reqwest_Response, std_string_String> = match v481 with Ok x -> Ok x | Error x -> Error (v482 x)
            let _run_target_args'_v484 = v492 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v493 : Result<reqwest_Response, std_string_String> = match v481 with Ok x -> Ok x | Error x -> Error (v482 x)
            let _run_target_args'_v484 = v493 
            #endif
#else
            let v494 : Result<reqwest_Response, std_string_String> = match v481 with Ok x -> Ok x | Error x -> Error (v482 x)
            let _run_target_args'_v484 = v494 
            #endif
            let v495 : Result<reqwest_Response, std_string_String> = _run_target_args'_v484 
            let v498 : string = "$0?"
            let v499 : reqwest_Response = Fable.Core.RustInterop.emitRustExpr v495 v498 
            let v500 : string = "Box::pin(reqwest_wasm::Response::text(v499))"
            let v501 : std_pin_Pin<Box<Dyn<std_future_Future<Result<std_string_String, reqwest_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v500 
            let v502 : string = "v501.await"
            let v503 : Result<std_string_String, reqwest_Error> = Fable.Core.RustInterop.emitRustExpr () v502 
            let v504 : (reqwest_Error -> std_string_String) = method95()
            (* run_target_args'
            let v506 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v507 : string = "$0.map_err(|x| $1(x))"
            let v508 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v503, v504) v507 
            let _run_target_args'_v506 = v508 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v509 : string = "$0.map_err(|x| $1(x))"
            let v510 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v503, v504) v509 
            let _run_target_args'_v506 = v510 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v511 : string = "$0.map_err(|x| $1(x))"
            let v512 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v503, v504) v511 
            let _run_target_args'_v506 = v512 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v513 : Result<std_string_String, std_string_String> = match v503 with Ok x -> Ok x | Error x -> Error (v504 x)
            let _run_target_args'_v506 = v513 
            #endif
#if FABLE_COMPILER_PYTHON
            let v514 : Result<std_string_String, std_string_String> = match v503 with Ok x -> Ok x | Error x -> Error (v504 x)
            let _run_target_args'_v506 = v514 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v515 : Result<std_string_String, std_string_String> = match v503 with Ok x -> Ok x | Error x -> Error (v504 x)
            let _run_target_args'_v506 = v515 
            #endif
#else
            let v516 : Result<std_string_String, std_string_String> = match v503 with Ok x -> Ok x | Error x -> Error (v504 x)
            let _run_target_args'_v506 = v516 
            #endif
            let v517 : Result<std_string_String, std_string_String> = _run_target_args'_v506 
            let v520 : string = "$0?"
            let v521 : std_string_String = Fable.Core.RustInterop.emitRustExpr v517 v520 
            let v522 : string = "fable_library_rust::String_::fromString($0)"
            let v523 : string = Fable.Core.RustInterop.emitRustExpr v521 v522 
            let v525 : string option = Some v523 
            US33_0(v525)
    let v541 : Result<string option, std_string_String> =
        match v529 with
        | US33_1(v535) -> (* Error *)
            let v537 : Result<string option, std_string_String> = Error v535 
            v537
        | US33_0(v530) -> (* Ok *)
            let v532 : Result<string option, std_string_String> = Ok v530 
            v532
    let v542 : string = ""
    let v543 : string = "}"
    let v544 : string = v542 + v543 
    let x = v541 //
    let v545 : _ = x
    let v546 : unit = ()
    (* run_target_args'
    let v547 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v548 : string = $"true; let _fix_closure_v546 = $0"
    let v549 : bool = Fable.Core.RustInterop.emitRustExpr v545 v548 
    let _run_target_args'_v547 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v550 : string = $"true; let _fix_closure_v546 = $0"
    let v551 : bool = Fable.Core.RustInterop.emitRustExpr v545 v550 
    let _run_target_args'_v547 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v552 : string = $"true; let _fix_closure_v546 = $0"
    let v553 : bool = Fable.Core.RustInterop.emitRustExpr v545 v552 
    let _run_target_args'_v547 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v547 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v547 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v547 = false 
    #endif
#else
    let _run_target_args'_v547 = false 
    #endif
    let v554 : bool = _run_target_args'_v547 
    let v556 : string = $"true; _fix_closure_v546 " + v544 + "); " + v542 + " // rust.fix_closure'"
    let v557 : bool = Fable.Core.RustInterop.emitRustExpr () v556 
    let v558 : string = "__future_init"
    let v559 : _ = Fable.Core.RustInterop.emitRustExpr () v558 
    let v560 : string = "v559"
    let v561 : std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v560 
    v561
and closure71 (v0 : US27) (v1 : int32) : (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>) =
    closure72(v0, v1)
and method86 (v0 : US27) : (int32 -> (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>)) =
    closure71(v0)
and method96 (v0 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<struct (string * US23 * string * bool * bool)> =
    v0
and method97 (v0 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>>) : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> =
    v0
and method98 (v0 : string) : string =
    v0
and closure75 () (v0 : rexie_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method99 () : (rexie_Error -> std_string_String) =
    closure75()
and method100 (v0 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>>) : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> =
    v0
and closure76 (v0 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>>) struct (v1 : string, v2 : US23, v3 : string, v4 : bool, v5 : bool) : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>> =
    let v6 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = method100(v0)
    let func1_move_x = struct (v1, v2, v3, v4, v5) //
    let v7 : _ = func1_move_x
    let v8 : string = "(move |x| v6(x))($0)"
    let v9 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr v7 v8 
    v9
and method101 (v0 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>>) : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> =
    v0
and method102 (v0 : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>>) : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>> =
    v0
and closure77 (v0 : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>>) (v1 : Heap4) : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>> =
    let v2 : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>> = method102(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure79 () (v0 : Result<Vec<string option>, std_string_String>) : US37 =
    US37_0(v0)
and method103 () : (Result<Vec<string option>, std_string_String> -> US37) =
    closure79()
and closure80 () (v0 : Vec<string option>) : US39 =
    US39_0(v0)
and method104 () : (Vec<string option> -> US39) =
    closure80()
and closure81 () (v0 : std_string_String) : US39 =
    US39_1(v0)
and method105 () : (std_string_String -> US39) =
    closure81()
and closure82 () (v0 : string) : US31 =
    US31_0(v0)
and method106 () : (string -> US31) =
    closure82()
and closure85 () (v0 : US31) : US42 =
    US42_0(v0)
and method108 () : (US31 -> US42) =
    closure85()
and closure86 () (v0 : crate_model_near_nearblocks_Root) : crate_model_near_nearblocks_Root option =
    let v2 : crate_model_near_nearblocks_Root option = Some v0 
    v2
and method109 () : (crate_model_near_nearblocks_Root -> crate_model_near_nearblocks_Root option) =
    closure86()
and method110 (v0 : Result<crate_model_near_nearblocks_Root, std_string_String>) : Result<crate_model_near_nearblocks_Root, std_string_String> =
    v0
and closure84 (v0 : US35, v1 : US41, v2 : int32) struct (v3 : string, v4 : US23, v5 : string, v6 : bool, v7 : bool) : Result<crate_model_near_nearblocks_Root option, std_string_String> =
    let v62 : US29 =
        match v0 with
        | US35_1 -> (* None *)
            US29_1
        | US35_0(v8) -> (* Some *)
            let v58 : US30 =
                match v8 with
                | US36_1(v55) -> (* Error *)
                    US30_1(v55)
                | US36_0(v9) -> (* Ok *)
                    let v10 : US25 option = v9 |> Array.tryItem v2 
                    let v13 : (US25 -> US32) = method87()
                    let v14 : US32 option = v10 |> Option.map v13 
                    let v34 : US32 = US32_1
                    let v35 : US32 = v14 |> Option.defaultValue v34 
                    let v45 : US25 =
                        match v35 with
                        | US32_0(v39) -> (* Some *)
                            match v39 with
                            | US25_0(v40) -> (* Some *)
                                US25_0(v40)
                            | _ ->
                                US25_1
                        | _ ->
                            US25_1
                    let v53 : US31 =
                        match v45 with
                        | US25_1 -> (* None *)
                            US31_1
                        | US25_0(v46) -> (* Some *)
                            let v47 : std_string_String = v46.l0
                            let v48 : string = "fable_library_rust::String_::fromString($0)"
                            let v49 : string = Fable.Core.RustInterop.emitRustExpr v47 v48 
                            US31_0(v49)
                    US30_0(v53)
            US29_0(v58)
    let v64 : string = $"%A{struct (v3, v4, v5, v6, v7)}"
    let v67 : int64 = 400L
    let v68 : string = method8(v67, v64)
    let v70 : string = $"%A{v62}"
    let v73 : int64 = 400L
    let v74 : string = method8(v73, v70)
    let v75 : string = "state_core.use_request (15) / result memo / request: " + string v68 + " / state_data: " + string v74 + ""
    let v76 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v77 : bool = Fable.Core.RustInterop.emitRustExpr v75 v76 
    let v79 : string = $"%A{v1}"
    let v82 : int64 = 400L
    let v83 : string = method8(v82, v79)
    let v84 : string = "state_core.use_request (16) / effect / json: " + string v83 + ""
    let v85 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v86 : bool = Fable.Core.RustInterop.emitRustExpr v84 v85 
    let v129 : US31 =
        match v1 with
        | US41_1(v126) -> (* Error *)
            US31_1
        | US41_0(v87) -> (* Ok *)
            let v88 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
            let v89 : (US31 []) = Fable.Core.RustInterop.emitRustExpr v87 v88 
            let v90 : US31 option = v89 |> Array.tryItem v2 
            let v93 : (US31 -> US42) = method108()
            let v94 : US42 option = v90 |> Option.map v93 
            let v114 : US42 = US42_1
            let v115 : US42 = v94 |> Option.defaultValue v114 
            match v115 with
            | US42_0(v119) -> (* Some *)
                match v119 with
                | US31_0(v120) -> (* Some *)
                    US31_0(v120)
                | _ ->
                    US31_1
            | _ ->
                US31_1
    match v129 with
    | US31_0(v130) -> (* Some *)
        let v131 : string = method41(v130)
        (* run_target_args'
        let v136 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v137 : string = "&*$0"
        let v138 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v131 v137 
        let _run_target_args'_v136 = v138 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v139 : string = "&*$0"
        let v140 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v131 v139 
        let _run_target_args'_v136 = v140 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v141 : string = "&*$0"
        let v142 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v131 v141 
        let _run_target_args'_v136 = v142 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v144 : Ref<Str> = v131 |> unbox<Ref<Str>>
        let _run_target_args'_v136 = v144 
        #endif
#if FABLE_COMPILER_PYTHON
        let v148 : Ref<Str> = v131 |> unbox<Ref<Str>>
        let _run_target_args'_v136 = v148 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v152 : Ref<Str> = v131 |> unbox<Ref<Str>>
        let _run_target_args'_v136 = v152 
        #endif
#else
        let v156 : Ref<Str> = v131 |> unbox<Ref<Str>>
        let _run_target_args'_v136 = v156 
        #endif
        let v159 : Ref<Str> = _run_target_args'_v136 
        let v165 : string = "serde_json::from_str(&$0)"
        let v166 : Result<crate_model_near_nearblocks_Root, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v159 v165 
        let v167 : (serde_json_Error -> std_string_String) = method42()
        (* run_target_args'
        let v169 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v170 : string = "$0.map_err(|x| $1(x))"
        let v171 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v166, v167) v170 
        let _run_target_args'_v169 = v171 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v172 : string = "$0.map_err(|x| $1(x))"
        let v173 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v166, v167) v172 
        let _run_target_args'_v169 = v173 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v174 : string = "$0.map_err(|x| $1(x))"
        let v175 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v166, v167) v174 
        let _run_target_args'_v169 = v175 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v176 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v166 with Ok x -> Ok x | Error x -> Error (v167 x)
        let _run_target_args'_v169 = v176 
        #endif
#if FABLE_COMPILER_PYTHON
        let v177 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v166 with Ok x -> Ok x | Error x -> Error (v167 x)
        let _run_target_args'_v169 = v177 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v178 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v166 with Ok x -> Ok x | Error x -> Error (v167 x)
        let _run_target_args'_v169 = v178 
        #endif
#else
        let v179 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v166 with Ok x -> Ok x | Error x -> Error (v167 x)
        let _run_target_args'_v169 = v179 
        #endif
        let v180 : Result<crate_model_near_nearblocks_Root, std_string_String> = _run_target_args'_v169 
        let v183 : (crate_model_near_nearblocks_Root -> crate_model_near_nearblocks_Root option) = method109()
        let v184 : Result<crate_model_near_nearblocks_Root, std_string_String> = method110(v180)
        let v185 : string = "v184.map(|x| v183(x))"
        let v186 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v185 
        v186
    | _ ->
        match v62 with
        | US29_0(v187) -> (* Some *)
            match v187 with
            | US30_0(v188) -> (* Ok *)
                match v188 with
                | US31_0(v189) -> (* Some *)
                    let v190 : string = method41(v189)
                    (* run_target_args'
                    let v195 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v196 : string = "&*$0"
                    let v197 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v190 v196 
                    let _run_target_args'_v195 = v197 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v198 : string = "&*$0"
                    let v199 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v190 v198 
                    let _run_target_args'_v195 = v199 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v200 : string = "&*$0"
                    let v201 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v190 v200 
                    let _run_target_args'_v195 = v201 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v203 : Ref<Str> = v190 |> unbox<Ref<Str>>
                    let _run_target_args'_v195 = v203 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v207 : Ref<Str> = v190 |> unbox<Ref<Str>>
                    let _run_target_args'_v195 = v207 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v211 : Ref<Str> = v190 |> unbox<Ref<Str>>
                    let _run_target_args'_v195 = v211 
                    #endif
#else
                    let v215 : Ref<Str> = v190 |> unbox<Ref<Str>>
                    let _run_target_args'_v195 = v215 
                    #endif
                    let v218 : Ref<Str> = _run_target_args'_v195 
                    let v224 : string = "serde_json::from_str(&$0)"
                    let v225 : Result<crate_model_near_nearblocks_Root, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v218 v224 
                    let v226 : (serde_json_Error -> std_string_String) = method42()
                    (* run_target_args'
                    let v228 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v229 : string = "$0.map_err(|x| $1(x))"
                    let v230 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v225, v226) v229 
                    let _run_target_args'_v228 = v230 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v231 : string = "$0.map_err(|x| $1(x))"
                    let v232 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v225, v226) v231 
                    let _run_target_args'_v228 = v232 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v233 : string = "$0.map_err(|x| $1(x))"
                    let v234 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v225, v226) v233 
                    let _run_target_args'_v228 = v234 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v235 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v225 with Ok x -> Ok x | Error x -> Error (v226 x)
                    let _run_target_args'_v228 = v235 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v236 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v225 with Ok x -> Ok x | Error x -> Error (v226 x)
                    let _run_target_args'_v228 = v236 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v237 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v225 with Ok x -> Ok x | Error x -> Error (v226 x)
                    let _run_target_args'_v228 = v237 
                    #endif
#else
                    let v238 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v225 with Ok x -> Ok x | Error x -> Error (v226 x)
                    let _run_target_args'_v228 = v238 
                    #endif
                    let v239 : Result<crate_model_near_nearblocks_Root, std_string_String> = _run_target_args'_v228 
                    let v242 : (crate_model_near_nearblocks_Root -> crate_model_near_nearblocks_Root option) = method109()
                    let v243 : Result<crate_model_near_nearblocks_Root, std_string_String> = method110(v239)
                    let v244 : string = "v243.map(|x| v242(x))"
                    let v245 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v244 
                    v245
                | _ ->
                    let v247 : string = $"%A{struct (v129, v62)}"
                    let v250 : string = "state_core.use_request (17) / json Error / value: " + string v247 + ""
                    let v251 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                    let v252 : bool = Fable.Core.RustInterop.emitRustExpr v250 v251 
                    let v254 : crate_model_near_nearblocks_Root option = None
                    let v258 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Ok v254 
                    v258
            | _ ->
                let v263 : string = $"%A{struct (v129, v62)}"
                let v266 : string = "state_core.use_request (17) / json Error / value: " + string v263 + ""
                let v267 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v268 : bool = Fable.Core.RustInterop.emitRustExpr v266 v267 
                let v270 : crate_model_near_nearblocks_Root option = None
                let v274 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Ok v270 
                v274
        | _ ->
            let v279 : string = $"%A{struct (v129, v62)}"
            let v282 : string = "state_core.use_request (17) / json Error / value: " + string v279 + ""
            let v283 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v284 : bool = Fable.Core.RustInterop.emitRustExpr v282 v283 
            let v286 : crate_model_near_nearblocks_Root option = None
            let v290 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Ok v286 
            v290
and closure83 (v0 : US35, v1 : US41) (v2 : int32) : (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_nearblocks_Root option, std_string_String>) =
    closure84(v0, v1, v2)
and method107 (v0 : US35, v1 : US41) : (int32 -> (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_nearblocks_Root option, std_string_String>)) =
    closure83(v0, v1)
and closure78 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>, v1 : leptos_prelude_ArcMemo<Result<Vec<Heap4 option>, std_string_String> option>, v2 : leptos_prelude_ArcLocalResource<Result<Vec<string option>, std_string_String>>, v3 : leptos_prelude_Action<Heap4, Result<Vec<unit>, std_string_String>>) () : (Result<crate_model_near_nearblocks_Root option, std_string_String> []) =
    let v4 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v5 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v4 
    let v7 : string = $"%A{v5}"
    let v10 : string = "state_core.use_requests (13) / result memo / requests: " + string v7 + ""
    let v11 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr v10 v11 
    let v13 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v14 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v1 v13 
    let v17 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v18 : US26 option = v14 |> Option.map v17 
    let v38 : US26 = US26_1
    let v39 : US26 = v18 |> Option.defaultValue v38 
    let v97 : US35 =
        match v39 with
        | US26_1 -> (* None *)
            US35_1
        | US26_0(v43) -> (* Some *)
            let v44 : (Vec<Heap4 option> -> US24) = method83()
            let v45 : (std_string_String -> US24) = method84()
            let v47 : US24 = match v43 with Ok x -> v44 x | Error x -> v45 x
            let v93 : US36 =
                match v47 with
                | US24_1(v90) -> (* Error *)
                    US36_1(v90)
                | US24_0(v50) -> (* Ok *)
                    let v51 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v52 : bool = Fable.Core.RustInterop.emitRustExpr v50 v51 
                    let v53 : string = "x"
                    let v54 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v53 
                    let v57 : (Heap4 -> US25) = method85()
                    let v58 : US25 option = v54 |> Option.map v57 
                    let v78 : US25 = US25_1
                    let v79 : US25 = v58 |> Option.defaultValue v78 
                    let v83 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v84 : bool = Fable.Core.RustInterop.emitRustExpr v79 v83 
                    let v85 : string = "_vec_map"
                    let v86 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v85 
                    let v87 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v88 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v86 v87 
                    US36_0(v88)
            US35_0(v93)
    let v99 : string = $"%A{v97}"
    let v102 : int64 = 400L
    let v103 : string = method8(v102, v99)
    let v104 : string = "state_core.use_request (14) / result_memo / state_data: " + string v103 + ""
    let v105 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v106 : bool = Fable.Core.RustInterop.emitRustExpr v104 v105 
    let v107 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v108 : Result<Vec<string option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v2 v107 
    let v111 : (Result<Vec<string option>, std_string_String> -> US37) = method103()
    let v112 : US37 option = v108 |> Option.map v111 
    let v132 : US37 = US37_1
    let v133 : US37 = v112 |> Option.defaultValue v132 
    let v147 : US38 =
        match v133 with
        | US37_1 -> (* None *)
            US38_1
        | US37_0(v137) -> (* Some *)
            let v138 : (Vec<string option> -> US39) = method104()
            let v139 : (std_string_String -> US39) = method105()
            let v141 : US39 = match v137 with Ok x -> v138 x | Error x -> v139 x
            US38_0(v141)
    let v194 : US40 =
        match v147 with
        | US38_1 -> (* None *)
            US40_1
        | US38_0(v148) -> (* Some *)
            let v190 : US41 =
                match v148 with
                | US39_1(v187) -> (* Error *)
                    US41_1(v187)
                | US39_0(v149) -> (* Ok *)
                    let v150 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v151 : bool = Fable.Core.RustInterop.emitRustExpr v149 v150 
                    let v152 : string = "x"
                    let v153 : string option = Fable.Core.RustInterop.emitRustExpr () v152 
                    let v156 : (string -> US31) = method106()
                    let v157 : US31 option = v153 |> Option.map v156 
                    let v177 : US31 = US31_1
                    let v178 : US31 = v157 |> Option.defaultValue v177 
                    let v182 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v183 : bool = Fable.Core.RustInterop.emitRustExpr v178 v182 
                    let v184 : string = "_vec_map"
                    let v185 : Vec<US31> = Fable.Core.RustInterop.emitRustExpr () v184 
                    US41_0(v185)
            US40_0(v190)
    let v195 : (US31 []) = [||]
    let v196 : string = "$0.to_vec()"
    let v197 : Vec<US31> = Fable.Core.RustInterop.emitRustExpr v195 v196 
    let v201 : US41 =
        match v194 with
        | US40_1 -> (* None *)
            US41_0(v197)
        | US40_0(v198) -> (* Some *)
            v198
    let v284 : bool =
        match v201 with
        | US41_1(v282) -> (* Error *)
            false
        | US41_0(v202) -> (* Ok *)
            let v203 : string = "true; $0.into_iter().for_each(|x| { //"
            let v204 : bool = Fable.Core.RustInterop.emitRustExpr v202 v203 
            let v205 : string = "x"
            let v206 : US31 = Fable.Core.RustInterop.emitRustExpr () v205 
            let v277 : bool =
                match v206 with
                | US31_0(v207) -> (* Some *)
                    (* run_target_args'
                    let v212 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v213 : string = "&*$0"
                    let v214 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v207 v213 
                    let _run_target_args'_v212 = v214 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v215 : string = "&*$0"
                    let v216 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v207 v215 
                    let _run_target_args'_v212 = v216 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v217 : string = "&*$0"
                    let v218 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v207 v217 
                    let _run_target_args'_v212 = v218 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v220 : Ref<Str> = v207 |> unbox<Ref<Str>>
                    let _run_target_args'_v212 = v220 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v224 : Ref<Str> = v207 |> unbox<Ref<Str>>
                    let _run_target_args'_v212 = v224 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v228 : Ref<Str> = v207 |> unbox<Ref<Str>>
                    let _run_target_args'_v212 = v228 
                    #endif
#else
                    let v232 : Ref<Str> = v207 |> unbox<Ref<Str>>
                    let _run_target_args'_v212 = v232 
                    #endif
                    let v235 : Ref<Str> = _run_target_args'_v212 
                    (* run_target_args'
                    let v245 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v246 : string = "String::from($0)"
                    let v247 : std_string_String = Fable.Core.RustInterop.emitRustExpr v235 v246 
                    let _run_target_args'_v245 = v247 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v248 : string = "String::from($0)"
                    let v249 : std_string_String = Fable.Core.RustInterop.emitRustExpr v235 v248 
                    let _run_target_args'_v245 = v249 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v250 : string = "String::from($0)"
                    let v251 : std_string_String = Fable.Core.RustInterop.emitRustExpr v235 v250 
                    let _run_target_args'_v245 = v251 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v253 : std_string_String = v235 |> unbox<std_string_String>
                    let _run_target_args'_v245 = v253 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v257 : std_string_String = v235 |> unbox<std_string_String>
                    let _run_target_args'_v245 = v257 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v261 : std_string_String = v235 |> unbox<std_string_String>
                    let _run_target_args'_v245 = v261 
                    #endif
#else
                    let v265 : std_string_String = v235 |> unbox<std_string_String>
                    let _run_target_args'_v245 = v265 
                    #endif
                    let v268 : std_string_String = _run_target_args'_v245 
                    let v274 : Heap4 = {l0 = v268} : Heap4
                    let v275 : string = "true; leptos::prelude::Action::dispatch(&$0, $1.clone())"
                    let v276 : bool = Fable.Core.RustInterop.emitRustExpr struct (v3, v274) v275 
                    true
                | _ ->
                    false
            let v278 : string = $"true"
            let v279 : bool = Fable.Core.RustInterop.emitRustExpr () v278 
            let v280 : string = "true; }); //"
            let v281 : bool = Fable.Core.RustInterop.emitRustExpr () v280 
            false
    let v285 : (int32 -> (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_nearblocks_Root option, std_string_String>)) = method107(v97, v201)
    let v286 : Vec<struct (string * US23 * string * bool * bool)> = method96(v5)
    let v287 : string = "v286.iter().enumerate().map(|(i, x)| v285(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v288 : Vec<Result<crate_model_near_nearblocks_Root option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v287 
    let v289 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v290 : (Result<crate_model_near_nearblocks_Root option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v288 v289 
    let v292 : string = $"%A{v290}"
    let v295 : string = "state_core.use_requests (18) / result_func func0 / result: " + string v292 + ""
    let v296 : int64 = 200L
    let v297 : string = method8(v296, v295)
    let v298 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v299 : bool = Fable.Core.RustInterop.emitRustExpr v297 v298 
    v290
and method112 (v0 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []))) : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) =
    v0
and closure88 (v0 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []))) (v1 : crate_model_near_nearblocks_Root option) : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option =
    let v3 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) = method112(v0)
    let v4 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option = v1 |> Option.map v3 
    v4
and method111 (v0 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []))) : (crate_model_near_nearblocks_Root option -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option) =
    closure88(v0)
and method113 (v0 : Result<crate_model_near_nearblocks_Root option, std_string_String>) : Result<crate_model_near_nearblocks_Root option, std_string_String> =
    v0
and method114 (v0 : Func0<Result<crate_model_near_nearblocks_Root option, std_string_String>, Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>) : Func0<Result<crate_model_near_nearblocks_Root option, std_string_String>, Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> =
    v0
and closure89 (v0 : Func0<Result<crate_model_near_nearblocks_Root option, std_string_String>, Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>) (v1 : Result<crate_model_near_nearblocks_Root option, std_string_String>) : Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String> =
    let v2 : Func0<Result<crate_model_near_nearblocks_Root option, std_string_String>, Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> = method114(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure87 (v0 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])), v1 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>>, v2 : leptos_prelude_ArcLocalResource<Result<Vec<Heap4 option>, std_string_String>>, v3 : leptos_prelude_ArcMemo<(Result<crate_model_near_nearblocks_Root option, std_string_String> [])>) () : Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> =
    let v4 : string = $"leptos::prelude::Submission::pending(&$0.into()).into()"
    let v5 : leptos_prelude_ArcSignal<bool> = Fable.Core.RustInterop.emitRustExpr v1 v4 
    let v6 : string = $"leptos::prelude::ArcSignal::get(&$0)"
    let v7 : bool = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : string = $"leptos::prelude::Submission::pending(&$0.into()).into()"
    let v9 : leptos_prelude_ArcSignal<bool> = Fable.Core.RustInterop.emitRustExpr v2 v8 
    let v10 : string = $"leptos::prelude::ArcSignal::get(&$0)"
    let v11 : bool = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v13 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v1 v12 
    let v16 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v17 : US2 option = v13 |> Option.map v16 
    let v37 : US2 = US2_1
    let v38 : US2 = v17 |> Option.defaultValue v37 
    let v42 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v43 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v2 v42 
    let v46 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v47 : US26 option = v43 |> Option.map v46 
    let v67 : US26 = US26_1
    let v68 : US26 = v47 |> Option.defaultValue v67 
    let v126 : US35 =
        match v68 with
        | US26_1 -> (* None *)
            US35_1
        | US26_0(v72) -> (* Some *)
            let v73 : (Vec<Heap4 option> -> US24) = method83()
            let v74 : (std_string_String -> US24) = method84()
            let v76 : US24 = match v72 with Ok x -> v73 x | Error x -> v74 x
            let v122 : US36 =
                match v76 with
                | US24_1(v119) -> (* Error *)
                    US36_1(v119)
                | US24_0(v79) -> (* Ok *)
                    let v80 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v81 : bool = Fable.Core.RustInterop.emitRustExpr v79 v80 
                    let v82 : string = "x"
                    let v83 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v82 
                    let v86 : (Heap4 -> US25) = method85()
                    let v87 : US25 option = v83 |> Option.map v86 
                    let v107 : US25 = US25_1
                    let v108 : US25 = v87 |> Option.defaultValue v107 
                    let v112 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v113 : bool = Fable.Core.RustInterop.emitRustExpr v108 v112 
                    let v114 : string = "_vec_map"
                    let v115 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v114 
                    let v116 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v117 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v115 v116 
                    US36_0(v117)
            US35_0(v122)
    let v128 : string = $"%A{v38}"
    let v131 : int64 = 400L
    let v132 : string = method8(v131, v128)
    let v134 : string = $"%A{v126}"
    let v137 : int64 = 400L
    let v138 : string = method8(v137, v134)
    let v139 : string = "state_core.use_request (19) / result move / database: " + string v132 + " / database_loading: " + string v7 + " / state_data: " + string v138 + " / state_data_loading: " + string v11 + ""
    let v140 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v141 : bool = Fable.Core.RustInterop.emitRustExpr v139 v140 
    let v142 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v143 : (Result<crate_model_near_nearblocks_Root option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v3 v142 
    let v144 : string = "$0.to_vec()"
    let v145 : Vec<Result<crate_model_near_nearblocks_Root option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v143 v144 
    let v146 : unit = ()
    let v147 : string = $"true; let _func1_from_v146 = Func1::from(move |value| {{ //"
    let v148 : bool = Fable.Core.RustInterop.emitRustExpr () v147 
    let v149 : string = $"value"
    let v150 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v149 
    let v151 : (crate_model_near_nearblocks_Root option -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option) = method111(v0)
    let v152 : Result<crate_model_near_nearblocks_Root option, std_string_String> = method113(v150)
    let v153 : string = "v152.map(|x| v151(x))"
    let v154 : Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v153 
    let func1_from_result = v154 //
    let v155 : _ = func1_from_result
    let v156 : string = $"true; $0 /*"
    let v157 : bool = Fable.Core.RustInterop.emitRustExpr v155 v156 
    let v158 : string = $"*/ }}); //"
    let v159 : bool = Fable.Core.RustInterop.emitRustExpr () v158 
    let v160 : string = $"_func1_from_v146"
    let v161 : Func0<Result<crate_model_near_nearblocks_Root option, std_string_String>, Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v160 
    let v162 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v163 : (Result<crate_model_near_nearblocks_Root option, std_string_String> -> Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>) = closure89(v161)
    let v164 : Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr struct (v145, v163) v162 
    let v166 : string = $"%A{v164}"
    let v169 : string = "state_core.use_requests (20) / result func0 / result: " + string v166 + ""
    let v170 : int64 = 200L
    let v171 : string = method8(v170, v169)
    let v172 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v173 : bool = Fable.Core.RustInterop.emitRustExpr v171 v172 
    v164
and method78 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>, v1 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []))) : leptos_prelude_ArcMemo<Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>> =
    let v2 : string = "state_core.use_requests (1)"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = "state_core.use_database (1)"
    let v6 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v7 : bool = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : unit = ()
    let v9 : string = $"true; let _func0_from_v8 = Func0::from(move || {{ //"
    let v10 : bool = Fable.Core.RustInterop.emitRustExpr () v9 
    let v11 : string = "true; let __future_init = Box::pin(/*"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr () v11 
    let v13 : string = "*/ async move { /*"
    let v14 : bool = Fable.Core.RustInterop.emitRustExpr () v13 
    let v15 : string = "*/ ()"
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = "state_core.use_database (2) / database new_local_resource"
    let v18 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v19 : bool = Fable.Core.RustInterop.emitRustExpr v17 v18 
    let v20 : string = "state_core.build_database ()"
    let v21 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : string = "true; let __future_init = Box::pin(/*"
    let v24 : bool = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : string = "*/ async { /*"
    let v26 : bool = Fable.Core.RustInterop.emitRustExpr () v25 
    let v27 : string = "*/ ()"
    let v28 : bool = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : string = "Box::pin(rexie::Rexie::builder(\"database\").version(1).add_object_store(rexie::ObjectStore::new(\"store\")).build())"
    let v30 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v29 
    let v31 : string = "v30.await"
    let v32 : Result<rexie_Rexie, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v31 
    let v33 : (rexie_Error -> std_string_String) = method6()
    (* run_target_args'
    let v35 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v36 : string = "$0.map_err(|x| $1(x))"
    let v37 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v36 
    let _run_target_args'_v35 = v37 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v38 : string = "$0.map_err(|x| $1(x))"
    let v39 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v38 
    let _run_target_args'_v35 = v39 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v40 : string = "$0.map_err(|x| $1(x))"
    let v41 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v40 
    let _run_target_args'_v35 = v41 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v42 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v42 
    #endif
#if FABLE_COMPILER_PYTHON
    let v43 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v43 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v44 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v44 
    #endif
#else
    let v45 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v45 
    #endif
    let v46 : Result<rexie_Rexie, std_string_String> = _run_target_args'_v35 
    let v49 : string = ""
    let v50 : string = "}"
    let v51 : string = v49 + v50 
    let x = v46 //
    let v52 : _ = x
    let v53 : unit = ()
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = $"true; let _fix_closure_v53 = $0"
    let v56 : bool = Fable.Core.RustInterop.emitRustExpr v52 v55 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = $"true; let _fix_closure_v53 = $0"
    let v58 : bool = Fable.Core.RustInterop.emitRustExpr v52 v57 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = $"true; let _fix_closure_v53 = $0"
    let v60 : bool = Fable.Core.RustInterop.emitRustExpr v52 v59 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v54 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v54 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v54 = false 
    #endif
#else
    let _run_target_args'_v54 = false 
    #endif
    let v61 : bool = _run_target_args'_v54 
    let v63 : string = $"true; _fix_closure_v53 " + v51 + "); " + v49 + " // rust.fix_closure'"
    let v64 : bool = Fable.Core.RustInterop.emitRustExpr () v63 
    let v65 : string = "__future_init"
    let v66 : _ = Fable.Core.RustInterop.emitRustExpr () v65 
    let v67 : string = "v66"
    let v68 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v67 
    let v69 : string = "v68.await"
    let v70 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v69 
    (* run_target_args'
    let v72 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v73 : string = "$0.unwrap()"
    let v74 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v70 v73 
    let _run_target_args'_v72 = v74 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v75 : string = "$0.unwrap()"
    let v76 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v70 v75 
    let _run_target_args'_v72 = v76 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v77 : string = "$0.unwrap()"
    let v78 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v70 v77 
    let _run_target_args'_v72 = v78 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v79 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v79 
    #endif
#if FABLE_COMPILER_PYTHON
    let v80 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v80 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v81 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v81 
    #endif
#else
    let v82 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v82 
    #endif
    let v83 : rexie_Rexie = _run_target_args'_v72 
    let v86 : (rexie_Rexie -> rexie_Rexie) = method7()
    let v87 : rexie_Rexie = v86 v83
    let v88 : string = "std::sync::Arc::new(v87)"
    let v89 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v88 
    let v91 : string = $"%A{v89}"
    let v94 : string = "state_core.use_database (3) / database new_local_resource / result: " + string v91 + ""
    let v95 : int64 = 200L
    let v96 : string = method8(v95, v94)
    let v97 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v98 : bool = Fable.Core.RustInterop.emitRustExpr v96 v97 
    let v99 : string = v49 + v50 
    let x = v89 //
    let v100 : _ = x
    let v101 : unit = ()
    (* run_target_args'
    let v102 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v103 : string = $"true; let _fix_closure_v101 = $0"
    let v104 : bool = Fable.Core.RustInterop.emitRustExpr v100 v103 
    let _run_target_args'_v102 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v105 : string = $"true; let _fix_closure_v101 = $0"
    let v106 : bool = Fable.Core.RustInterop.emitRustExpr v100 v105 
    let _run_target_args'_v102 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v107 : string = $"true; let _fix_closure_v101 = $0"
    let v108 : bool = Fable.Core.RustInterop.emitRustExpr v100 v107 
    let _run_target_args'_v102 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v102 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v102 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v102 = false 
    #endif
#else
    let _run_target_args'_v102 = false 
    #endif
    let v109 : bool = _run_target_args'_v102 
    let v111 : string = $"true; _fix_closure_v101 " + v99 + "); " + v49 + " // rust.fix_closure'"
    let v112 : bool = Fable.Core.RustInterop.emitRustExpr () v111 
    let v113 : string = "__future_init"
    let v114 : _ = Fable.Core.RustInterop.emitRustExpr () v113 
    let v115 : string = "v114"
    let v116 : std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>> = Fable.Core.RustInterop.emitRustExpr () v115 
    let v117 : string = $"true; $0 /*"
    let v118 : bool = Fable.Core.RustInterop.emitRustExpr v116 v117 
    let v119 : string = $"*/ }}); //"
    let v120 : bool = Fable.Core.RustInterop.emitRustExpr () v119 
    let v121 : string = $"_func0_from_v8"
    let v122 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>>> = Fable.Core.RustInterop.emitRustExpr () v121 
    let v123 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v124 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v122 v123 
    let v125 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v126 : (unit -> PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option) = closure64(v124)
    let v127 : leptos_prelude_ArcMemo<PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option> = Fable.Core.RustInterop.emitRustExpr v126 v125 
    let v128 : unit = ()
    let v129 : string = $"true; let _func0_from_v128 = Func0::from(move || {{ //"
    let v130 : bool = Fable.Core.RustInterop.emitRustExpr () v129 
    let v131 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v132 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v124 v131 
    let v133 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v134 : bool = Fable.Core.RustInterop.emitRustExpr v132 v133 
    let v135 : string = "x"
    let v136 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v135 
    let v137 : (unit -> unit) = closure8()
    let _v137 = true
    let v138 : string = "PartialEqWrapper($0)"
    let v139 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v136 v138 
    let v140 : string = "true; $0 })"
    let v141 : bool = Fable.Core.RustInterop.emitRustExpr v139 v140 
    let v142 : string = "_optionm_map_"
    let v143 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr () v142 
    let v144 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v145 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v144 
    let v146 : string = "true; let __future_init = Box::pin(/*"
    let v147 : bool = Fable.Core.RustInterop.emitRustExpr () v146 
    let v148 : string = "*/ async move { /*"
    let v149 : bool = Fable.Core.RustInterop.emitRustExpr () v148 
    let v150 : string = "*/ ()"
    let v151 : bool = Fable.Core.RustInterop.emitRustExpr () v150 
    let v153 : string = $"%A{v143}"
    let v157 : string = $"%A{v145}"
    let v160 : int64 = 400L
    let v161 : string = method8(v160, v157)
    let v162 : string = "state_core.use_requests (3) / state_data_resource new_local_resource / request : " + string v161 + " / database: " + string v153 + ""
    let v163 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v164 : bool = Fable.Core.RustInterop.emitRustExpr v162 v163 
    let v165 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v166 : bool = Fable.Core.RustInterop.emitRustExpr v143 v165 
    let v167 : string = "x"
    let v168 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr () v167 
    let v169 : string = "$0.0"
    let v170 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr v168 v169 
    let v171 : string = "true; $0 })"
    let v172 : bool = Fable.Core.RustInterop.emitRustExpr v170 v171 
    let v173 : string = "_optionm_map_"
    let v174 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr () v173 
    let v177 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v178 : US2 option = v174 |> Option.map v177 
    let v198 : US2 = US2_1
    let v199 : US2 = v178 |> Option.defaultValue v198 
    let v699 : US24 =
        match v199 with
        | US2_0(v203) -> (* Some *)
            let v204 : unit = ()
            let v205 : string = $"true; let _func1_from_v204 = Func1::from(move |value| {{ //"
            let v206 : bool = Fable.Core.RustInterop.emitRustExpr () v205 
            let v207 : string = $"value"
            let struct (v208 : string, v209 : US23, v210 : string, v211 : bool, v212 : bool) = Fable.Core.RustInterop.emitRustExpr () v207 
            let v213 : string = "url[" + v208 + "](" + $"%A{v210}" + ")"
            let v214 : string = "state_core.get_data () / id: " + v213 + ""
            let v215 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v216 : bool = Fable.Core.RustInterop.emitRustExpr v214 v215 
            let v217 : string = "true; let __future_init = Box::pin(/*"
            let v218 : bool = Fable.Core.RustInterop.emitRustExpr () v217 
            let v219 : string = "*/ async { /*"
            let v220 : bool = Fable.Core.RustInterop.emitRustExpr () v219 
            let v221 : string = "*/ ()"
            let v222 : bool = Fable.Core.RustInterop.emitRustExpr () v221 
            let v223 : string = "store"
            let v224 : (string []) = [|v223|]
            let v225 : string = "$0.to_vec()"
            let v226 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v224 v225 
            let v227 : unit = ()
            let v228 : string = $"true; let _func1_from_v227 = Func1::from(move |value| {{ //"
            let v229 : bool = Fable.Core.RustInterop.emitRustExpr () v228 
            let v230 : string = $"value"
            let v231 : string = Fable.Core.RustInterop.emitRustExpr () v230 
            (* run_target_args'
            let v236 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v237 : string = "&*$0"
            let v238 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v231 v237 
            let _run_target_args'_v236 = v238 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v239 : string = "&*$0"
            let v240 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v231 v239 
            let _run_target_args'_v236 = v240 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v241 : string = "&*$0"
            let v242 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v231 v241 
            let _run_target_args'_v236 = v242 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v244 : Ref<Str> = v231 |> unbox<Ref<Str>>
            let _run_target_args'_v236 = v244 
            #endif
#if FABLE_COMPILER_PYTHON
            let v248 : Ref<Str> = v231 |> unbox<Ref<Str>>
            let _run_target_args'_v236 = v248 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v252 : Ref<Str> = v231 |> unbox<Ref<Str>>
            let _run_target_args'_v236 = v252 
            #endif
#else
            let v256 : Ref<Str> = v231 |> unbox<Ref<Str>>
            let _run_target_args'_v236 = v256 
            #endif
            let v259 : Ref<Str> = _run_target_args'_v236 
            (* run_target_args'
            let v269 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v270 : string = "String::from($0)"
            let v271 : std_string_String = Fable.Core.RustInterop.emitRustExpr v259 v270 
            let _run_target_args'_v269 = v271 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v272 : string = "String::from($0)"
            let v273 : std_string_String = Fable.Core.RustInterop.emitRustExpr v259 v272 
            let _run_target_args'_v269 = v273 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v274 : string = "String::from($0)"
            let v275 : std_string_String = Fable.Core.RustInterop.emitRustExpr v259 v274 
            let _run_target_args'_v269 = v275 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v277 : std_string_String = v259 |> unbox<std_string_String>
            let _run_target_args'_v269 = v277 
            #endif
#if FABLE_COMPILER_PYTHON
            let v281 : std_string_String = v259 |> unbox<std_string_String>
            let _run_target_args'_v269 = v281 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v285 : std_string_String = v259 |> unbox<std_string_String>
            let _run_target_args'_v269 = v285 
            #endif
#else
            let v289 : std_string_String = v259 |> unbox<std_string_String>
            let _run_target_args'_v269 = v289 
            #endif
            let v292 : std_string_String = _run_target_args'_v269 
            let func1_from_result = v292 //
            let v298 : _ = func1_from_result
            let v299 : string = $"true; $0 /*"
            let v300 : bool = Fable.Core.RustInterop.emitRustExpr v298 v299 
            let v301 : string = $"*/ }}); //"
            let v302 : bool = Fable.Core.RustInterop.emitRustExpr () v301 
            let v303 : string = $"_func1_from_v227"
            let v304 : Func0<string, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v303 
            let v305 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v306 : (string -> std_string_String) = closure10(v304)
            let v307 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v226, v306) v305 
            let v308 : std_sync_Arc<rexie_Rexie> = method11(v203)
            let v309 : string = "$0.transaction(&v307, rexie::TransactionMode::ReadOnly)"
            let v310 : Result<rexie_Transaction, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v308 v309 
            let v311 : (rexie_Error -> std_string_String) = method12()
            (* run_target_args'
            let v313 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v314 : string = "$0.map_err(|x| $1(x))"
            let v315 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v310, v311) v314 
            let _run_target_args'_v313 = v315 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v316 : string = "$0.map_err(|x| $1(x))"
            let v317 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v310, v311) v316 
            let _run_target_args'_v313 = v317 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v318 : string = "$0.map_err(|x| $1(x))"
            let v319 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v310, v311) v318 
            let _run_target_args'_v313 = v319 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v320 : Result<rexie_Transaction, std_string_String> = match v310 with Ok x -> Ok x | Error x -> Error (v311 x)
            let _run_target_args'_v313 = v320 
            #endif
#if FABLE_COMPILER_PYTHON
            let v321 : Result<rexie_Transaction, std_string_String> = match v310 with Ok x -> Ok x | Error x -> Error (v311 x)
            let _run_target_args'_v313 = v321 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v322 : Result<rexie_Transaction, std_string_String> = match v310 with Ok x -> Ok x | Error x -> Error (v311 x)
            let _run_target_args'_v313 = v322 
            #endif
#else
            let v323 : Result<rexie_Transaction, std_string_String> = match v310 with Ok x -> Ok x | Error x -> Error (v311 x)
            let _run_target_args'_v313 = v323 
            #endif
            let v324 : Result<rexie_Transaction, std_string_String> = _run_target_args'_v313 
            let v327 : string = "$0?"
            let v328 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v324 v327 
            let v329 : string = method13()
            (* run_target_args'
            let v334 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v335 : string = "&*$0"
            let v336 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v329 v335 
            let _run_target_args'_v334 = v336 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v337 : string = "&*$0"
            let v338 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v329 v337 
            let _run_target_args'_v334 = v338 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v339 : string = "&*$0"
            let v340 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v329 v339 
            let _run_target_args'_v334 = v340 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v342 : Ref<Str> = v329 |> unbox<Ref<Str>>
            let _run_target_args'_v334 = v342 
            #endif
#if FABLE_COMPILER_PYTHON
            let v346 : Ref<Str> = v329 |> unbox<Ref<Str>>
            let _run_target_args'_v334 = v346 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v350 : Ref<Str> = v329 |> unbox<Ref<Str>>
            let _run_target_args'_v334 = v350 
            #endif
#else
            let v354 : Ref<Str> = v329 |> unbox<Ref<Str>>
            let _run_target_args'_v334 = v354 
            #endif
            let v357 : Ref<Str> = _run_target_args'_v334 
            let v363 : string = "v328.store($0)"
            let v364 : Result<rexie_Store, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v357 v363 
            let v365 : (rexie_Error -> std_string_String) = method14()
            (* run_target_args'
            let v367 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v368 : string = "$0.map_err(|x| $1(x))"
            let v369 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v364, v365) v368 
            let _run_target_args'_v367 = v369 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v370 : string = "$0.map_err(|x| $1(x))"
            let v371 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v364, v365) v370 
            let _run_target_args'_v367 = v371 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v372 : string = "$0.map_err(|x| $1(x))"
            let v373 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v364, v365) v372 
            let _run_target_args'_v367 = v373 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v374 : Result<rexie_Store, std_string_String> = match v364 with Ok x -> Ok x | Error x -> Error (v365 x)
            let _run_target_args'_v367 = v374 
            #endif
#if FABLE_COMPILER_PYTHON
            let v375 : Result<rexie_Store, std_string_String> = match v364 with Ok x -> Ok x | Error x -> Error (v365 x)
            let _run_target_args'_v367 = v375 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v376 : Result<rexie_Store, std_string_String> = match v364 with Ok x -> Ok x | Error x -> Error (v365 x)
            let _run_target_args'_v367 = v376 
            #endif
#else
            let v377 : Result<rexie_Store, std_string_String> = match v364 with Ok x -> Ok x | Error x -> Error (v365 x)
            let _run_target_args'_v367 = v377 
            #endif
            let v378 : Result<rexie_Store, std_string_String> = _run_target_args'_v367 
            let v381 : string = "$0?"
            let v382 : rexie_Store = Fable.Core.RustInterop.emitRustExpr v378 v381 
            let v383 : string = method79(v213)
            (* run_target_args'
            let v388 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v389 : string = "&*$0"
            let v390 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v383 v389 
            let _run_target_args'_v388 = v390 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v391 : string = "&*$0"
            let v392 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v383 v391 
            let _run_target_args'_v388 = v392 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v393 : string = "&*$0"
            let v394 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v383 v393 
            let _run_target_args'_v388 = v394 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v396 : Ref<Str> = v383 |> unbox<Ref<Str>>
            let _run_target_args'_v388 = v396 
            #endif
#if FABLE_COMPILER_PYTHON
            let v400 : Ref<Str> = v383 |> unbox<Ref<Str>>
            let _run_target_args'_v388 = v400 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v404 : Ref<Str> = v383 |> unbox<Ref<Str>>
            let _run_target_args'_v388 = v404 
            #endif
#else
            let v408 : Ref<Str> = v383 |> unbox<Ref<Str>>
            let _run_target_args'_v388 = v408 
            #endif
            let v411 : Ref<Str> = _run_target_args'_v388 
            let v417 : string = "wasm_bindgen::JsValue::from_str($0)"
            let v418 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr v411 v417 
            let v419 : string = $"Box::pin(rexie::Store::get(&v382, v418))"
            let v420 : std_pin_Pin<Box<Dyn<std_future_Future<Result<wasm_bindgen_JsValue option, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v419 
            let v421 : string = "v420.await"
            let v422 : Result<wasm_bindgen_JsValue option, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v421 
            let v423 : (rexie_Error -> std_string_String) = method16()
            (* run_target_args'
            let v425 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v426 : string = "$0.map_err(|x| $1(x))"
            let v427 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v422, v423) v426 
            let _run_target_args'_v425 = v427 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v428 : string = "$0.map_err(|x| $1(x))"
            let v429 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v422, v423) v428 
            let _run_target_args'_v425 = v429 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v430 : string = "$0.map_err(|x| $1(x))"
            let v431 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v422, v423) v430 
            let _run_target_args'_v425 = v431 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v432 : Result<wasm_bindgen_JsValue option, std_string_String> = match v422 with Ok x -> Ok x | Error x -> Error (v423 x)
            let _run_target_args'_v425 = v432 
            #endif
#if FABLE_COMPILER_PYTHON
            let v433 : Result<wasm_bindgen_JsValue option, std_string_String> = match v422 with Ok x -> Ok x | Error x -> Error (v423 x)
            let _run_target_args'_v425 = v433 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v434 : Result<wasm_bindgen_JsValue option, std_string_String> = match v422 with Ok x -> Ok x | Error x -> Error (v423 x)
            let _run_target_args'_v425 = v434 
            #endif
#else
            let v435 : Result<wasm_bindgen_JsValue option, std_string_String> = match v422 with Ok x -> Ok x | Error x -> Error (v423 x)
            let _run_target_args'_v425 = v435 
            #endif
            let v436 : Result<wasm_bindgen_JsValue option, std_string_String> = _run_target_args'_v425 
            let v439 : string = "$0?"
            let v440 : wasm_bindgen_JsValue option = Fable.Core.RustInterop.emitRustExpr v436 v439 
            let v443 : (wasm_bindgen_JsValue -> US4) = method17()
            let v444 : US4 option = v440 |> Option.map v443 
            let v464 : US4 = US4_1
            let v465 : US4 = v444 |> Option.defaultValue v464 
            let v579 : US25 =
                match v465 with
                | US4_1 -> (* None *)
                    US25_1
                | US4_0(v469) -> (* Some *)
                    let v470 : wasm_bindgen_JsValue = method18(v469)
                    let v471 : string = "serde_wasm_bindgen::from_value(v470)"
                    let v472 : Result<serde_json_Value option, serde_wasm_bindgen_Error> = Fable.Core.RustInterop.emitRustExpr () v471 
                    let v473 : (serde_wasm_bindgen_Error -> std_string_String) = method19()
                    (* run_target_args'
                    let v475 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v476 : string = "$0.map_err(|x| $1(x))"
                    let v477 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v472, v473) v476 
                    let _run_target_args'_v475 = v477 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v478 : string = "$0.map_err(|x| $1(x))"
                    let v479 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v472, v473) v478 
                    let _run_target_args'_v475 = v479 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v480 : string = "$0.map_err(|x| $1(x))"
                    let v481 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v472, v473) v480 
                    let _run_target_args'_v475 = v481 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v482 : Result<serde_json_Value option, std_string_String> = match v472 with Ok x -> Ok x | Error x -> Error (v473 x)
                    let _run_target_args'_v475 = v482 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v483 : Result<serde_json_Value option, std_string_String> = match v472 with Ok x -> Ok x | Error x -> Error (v473 x)
                    let _run_target_args'_v475 = v483 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v484 : Result<serde_json_Value option, std_string_String> = match v472 with Ok x -> Ok x | Error x -> Error (v473 x)
                    let _run_target_args'_v475 = v484 
                    #endif
#else
                    let v485 : Result<serde_json_Value option, std_string_String> = match v472 with Ok x -> Ok x | Error x -> Error (v473 x)
                    let _run_target_args'_v475 = v485 
                    #endif
                    let v486 : Result<serde_json_Value option, std_string_String> = _run_target_args'_v475 
                    let v489 : string = "$0?"
                    let v490 : serde_json_Value option = Fable.Core.RustInterop.emitRustExpr v486 v489 
                    let v493 : (serde_json_Value -> US5) = method20()
                    let v494 : US5 option = v490 |> Option.map v493 
                    let v514 : US5 = US5_1
                    let v515 : US5 = v494 |> Option.defaultValue v514 
                    match v515 with
                    | US5_1 -> (* None *)
                        US25_1
                    | US5_0(v519) -> (* Some *)
                        let v520 : serde_json_Value = method21(v519)
                        let v521 : string = "serde_json::from_value(v520)"
                        let v522 : Result<Vec<uint8>, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr () v521 
                        let v523 : (serde_json_Error -> std_string_String) = method22()
                        (* run_target_args'
                        let v525 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v526 : string = "$0.map_err(|x| $1(x))"
                        let v527 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v522, v523) v526 
                        let _run_target_args'_v525 = v527 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v528 : string = "$0.map_err(|x| $1(x))"
                        let v529 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v522, v523) v528 
                        let _run_target_args'_v525 = v529 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v530 : string = "$0.map_err(|x| $1(x))"
                        let v531 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v522, v523) v530 
                        let _run_target_args'_v525 = v531 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v532 : Result<Vec<uint8>, std_string_String> = match v522 with Ok x -> Ok x | Error x -> Error (v523 x)
                        let _run_target_args'_v525 = v532 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v533 : Result<Vec<uint8>, std_string_String> = match v522 with Ok x -> Ok x | Error x -> Error (v523 x)
                        let _run_target_args'_v525 = v533 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v534 : Result<Vec<uint8>, std_string_String> = match v522 with Ok x -> Ok x | Error x -> Error (v523 x)
                        let _run_target_args'_v525 = v534 
                        #endif
#else
                        let v535 : Result<Vec<uint8>, std_string_String> = match v522 with Ok x -> Ok x | Error x -> Error (v523 x)
                        let _run_target_args'_v525 = v535 
                        #endif
                        let v536 : Result<Vec<uint8>, std_string_String> = _run_target_args'_v525 
                        let v539 : string = "$0?"
                        let v540 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v536 v539 
                        let v541 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                        let v542 : (uint8 []) = Fable.Core.RustInterop.emitRustExpr v540 v541 
                        let v543 : int32 = v542.Length
                        let v544 : string = "state_core.get_data () / data_len: " + string v543 + ""
                        let v545 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v546 : bool = Fable.Core.RustInterop.emitRustExpr v544 v545 
                        let v547 : string = "$0.to_vec()"
                        let v548 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v542 v547 
                        let v549 : string = "v548.as_slice()"
                        let v550 : Ref<Slice<uint8>> = Fable.Core.RustInterop.emitRustExpr () v549 
                        let v551 : string = "true; let mut v550 = v550"
                        let v552 : bool = Fable.Core.RustInterop.emitRustExpr () v551 
                        let v553 : string = "borsh::BorshDeserialize::deserialize(&mut v550)"
                        let v554 : Result<Heap4, borsh_io_Error> = Fable.Core.RustInterop.emitRustExpr () v553 
                        let v555 : (borsh_io_Error -> std_string_String) = method23()
                        (* run_target_args'
                        let v557 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v558 : string = "$0.map_err(|x| $1(x))"
                        let v559 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v554, v555) v558 
                        let _run_target_args'_v557 = v559 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v560 : string = "$0.map_err(|x| $1(x))"
                        let v561 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v554, v555) v560 
                        let _run_target_args'_v557 = v561 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v562 : string = "$0.map_err(|x| $1(x))"
                        let v563 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v554, v555) v562 
                        let _run_target_args'_v557 = v563 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v564 : Result<Heap4, std_string_String> = match v554 with Ok x -> Ok x | Error x -> Error (v555 x)
                        let _run_target_args'_v557 = v564 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v565 : Result<Heap4, std_string_String> = match v554 with Ok x -> Ok x | Error x -> Error (v555 x)
                        let _run_target_args'_v557 = v565 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v566 : Result<Heap4, std_string_String> = match v554 with Ok x -> Ok x | Error x -> Error (v555 x)
                        let _run_target_args'_v557 = v566 
                        #endif
#else
                        let v567 : Result<Heap4, std_string_String> = match v554 with Ok x -> Ok x | Error x -> Error (v555 x)
                        let _run_target_args'_v557 = v567 
                        #endif
                        let v568 : Result<Heap4, std_string_String> = _run_target_args'_v557 
                        let v571 : string = "$0?"
                        let v572 : Heap4 = Fable.Core.RustInterop.emitRustExpr v568 v571 
                        US25_0(v572)
            let v590 : Heap4 option =
                match v579 with
                | US25_1 -> (* None *)
                    let v586 : Heap4 option = None
                    v586
                | US25_0(v580) -> (* Some *)
                    let v582 : Heap4 option = Some v580 
                    v582
            let v592 : Result<Heap4 option, std_string_String> = Ok v590 
            let v595 : string = v49 + v50 
            let x = v592 //
            let v596 : _ = x
            let v597 : unit = ()
            (* run_target_args'
            let v598 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v599 : string = $"true; let _fix_closure_v597 = $0"
            let v600 : bool = Fable.Core.RustInterop.emitRustExpr v596 v599 
            let _run_target_args'_v598 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v601 : string = $"true; let _fix_closure_v597 = $0"
            let v602 : bool = Fable.Core.RustInterop.emitRustExpr v596 v601 
            let _run_target_args'_v598 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v603 : string = $"true; let _fix_closure_v597 = $0"
            let v604 : bool = Fable.Core.RustInterop.emitRustExpr v596 v603 
            let _run_target_args'_v598 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v598 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v598 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v598 = false 
            #endif
#else
            let _run_target_args'_v598 = false 
            #endif
            let v605 : bool = _run_target_args'_v598 
            let v607 : string = $"true; _fix_closure_v597 " + v595 + "); " + v49 + " // rust.fix_closure'"
            let v608 : bool = Fable.Core.RustInterop.emitRustExpr () v607 
            let v609 : string = "__future_init"
            let v610 : _ = Fable.Core.RustInterop.emitRustExpr () v609 
            let v611 : string = "v610"
            let v612 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v611 
            let func1_from_result = v612 //
            let v613 : _ = func1_from_result
            let v614 : string = $"true; $0 /*"
            let v615 : bool = Fable.Core.RustInterop.emitRustExpr v613 v614 
            let v616 : string = $"*/ }}); //"
            let v617 : bool = Fable.Core.RustInterop.emitRustExpr () v616 
            let v618 : string = $"_func1_from_v204"
            let v619 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v618 
            let v620 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v621 : (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>) = closure65(v619)
            let v622 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr struct (v145, v621) v620 
            let v623 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = method81(v622)
            let v624 : string = "futures::future::try_join_all(v623)"
            let v625 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v624 
            let v626 : string = "v625.await"
            let v627 : Result<Vec<Heap4 option>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v626 
            let v628 : string = "$0?"
            let v629 : Vec<Heap4 option> = Fable.Core.RustInterop.emitRustExpr v627 v628 
            US24_0(v629)
        | _ ->
            let v631 : string = "database=None"
            (* run_target_args'
            let v636 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v637 : string = "&*$0"
            let v638 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v631 v637 
            let _run_target_args'_v636 = v638 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v639 : string = "&*$0"
            let v640 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v631 v639 
            let _run_target_args'_v636 = v640 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v641 : string = "&*$0"
            let v642 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v631 v641 
            let _run_target_args'_v636 = v642 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v644 : Ref<Str> = v631 |> unbox<Ref<Str>>
            let _run_target_args'_v636 = v644 
            #endif
#if FABLE_COMPILER_PYTHON
            let v648 : Ref<Str> = v631 |> unbox<Ref<Str>>
            let _run_target_args'_v636 = v648 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v652 : Ref<Str> = v631 |> unbox<Ref<Str>>
            let _run_target_args'_v636 = v652 
            #endif
#else
            let v656 : Ref<Str> = v631 |> unbox<Ref<Str>>
            let _run_target_args'_v636 = v656 
            #endif
            let v659 : Ref<Str> = _run_target_args'_v636 
            (* run_target_args'
            let v669 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v670 : string = "String::from($0)"
            let v671 : std_string_String = Fable.Core.RustInterop.emitRustExpr v659 v670 
            let _run_target_args'_v669 = v671 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v672 : string = "String::from($0)"
            let v673 : std_string_String = Fable.Core.RustInterop.emitRustExpr v659 v672 
            let _run_target_args'_v669 = v673 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v674 : string = "String::from($0)"
            let v675 : std_string_String = Fable.Core.RustInterop.emitRustExpr v659 v674 
            let _run_target_args'_v669 = v675 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v677 : std_string_String = v659 |> unbox<std_string_String>
            let _run_target_args'_v669 = v677 
            #endif
#if FABLE_COMPILER_PYTHON
            let v681 : std_string_String = v659 |> unbox<std_string_String>
            let _run_target_args'_v669 = v681 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v685 : std_string_String = v659 |> unbox<std_string_String>
            let _run_target_args'_v669 = v685 
            #endif
#else
            let v689 : std_string_String = v659 |> unbox<std_string_String>
            let _run_target_args'_v669 = v689 
            #endif
            let v692 : std_string_String = _run_target_args'_v669 
            US24_1(v692)
    let v711 : Result<Vec<Heap4 option>, std_string_String> =
        match v699 with
        | US24_1(v705) -> (* Error *)
            let v707 : Result<Vec<Heap4 option>, std_string_String> = Error v705 
            v707
        | US24_0(v700) -> (* Ok *)
            let v702 : Result<Vec<Heap4 option>, std_string_String> = Ok v700 
            v702
    let v713 : string = $"%A{v711}"
    let v716 : string = "state_core.use_requests (4) / state_data_resource new_local_resource / result: " + string v713 + ""
    let v717 : int64 = 200L
    let v718 : string = method8(v717, v716)
    let v719 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v720 : bool = Fable.Core.RustInterop.emitRustExpr v718 v719 
    let v721 : string = v49 + v50 
    let x = v711 //
    let v722 : _ = x
    let v723 : unit = ()
    (* run_target_args'
    let v724 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v725 : string = $"true; let _fix_closure_v723 = $0"
    let v726 : bool = Fable.Core.RustInterop.emitRustExpr v722 v725 
    let _run_target_args'_v724 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v727 : string = $"true; let _fix_closure_v723 = $0"
    let v728 : bool = Fable.Core.RustInterop.emitRustExpr v722 v727 
    let _run_target_args'_v724 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v729 : string = $"true; let _fix_closure_v723 = $0"
    let v730 : bool = Fable.Core.RustInterop.emitRustExpr v722 v729 
    let _run_target_args'_v724 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v724 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v724 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v724 = false 
    #endif
#else
    let _run_target_args'_v724 = false 
    #endif
    let v731 : bool = _run_target_args'_v724 
    let v733 : string = $"true; _fix_closure_v723 " + v721 + "); " + v49 + " // rust.fix_closure'"
    let v734 : bool = Fable.Core.RustInterop.emitRustExpr () v733 
    let v735 : string = "__future_init"
    let v736 : _ = Fable.Core.RustInterop.emitRustExpr () v735 
    let v737 : string = "v736"
    let v738 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<Heap4 option>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v737 
    let v739 : string = $"true; $0 /*"
    let v740 : bool = Fable.Core.RustInterop.emitRustExpr v738 v739 
    let v741 : string = $"*/ }}); //"
    let v742 : bool = Fable.Core.RustInterop.emitRustExpr () v741 
    let v743 : string = $"_func0_from_v128"
    let v744 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<Heap4 option>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v743 
    let v745 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v746 : leptos_prelude_ArcLocalResource<Result<Vec<Heap4 option>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v744 v745 
    let v747 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v748 : (unit -> Result<Vec<Heap4 option>, std_string_String> option) = closure66(v746)
    let v749 : leptos_prelude_ArcMemo<Result<Vec<Heap4 option>, std_string_String> option> = Fable.Core.RustInterop.emitRustExpr v748 v747 
    let v750 : unit = ()
    let v751 : string = $"true; let _func0_from_v750 = Func0::from(move || {{ //"
    let v752 : bool = Fable.Core.RustInterop.emitRustExpr () v751 
    let v753 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v754 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v753 
    let v755 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v756 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v749 v755 
    let v758 : string = $"%A{v754}"
    let v761 : int64 = 400L
    let v762 : string = method8(v761, v758)
    let v763 : string = "state_core.use_requests (7) / json new_local_resource / requests: " + string v762 + ""
    let v764 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v765 : bool = Fable.Core.RustInterop.emitRustExpr v763 v764 
    let v766 : string = "true; let __future_init = Box::pin(/*"
    let v767 : bool = Fable.Core.RustInterop.emitRustExpr () v766 
    let v768 : string = "*/ async move { /*"
    let v769 : bool = Fable.Core.RustInterop.emitRustExpr () v768 
    let v770 : string = "*/ ()"
    let v771 : bool = Fable.Core.RustInterop.emitRustExpr () v770 
    let v774 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v775 : US26 option = v756 |> Option.map v774 
    let v795 : US26 = US26_1
    let v796 : US26 = v775 |> Option.defaultValue v795 
    let v852 : US27 =
        match v796 with
        | US26_1 -> (* None *)
            US27_1
        | US26_0(v800) -> (* Some *)
            let v801 : (Vec<Heap4 option> -> US24) = method83()
            let v802 : (std_string_String -> US24) = method84()
            let v804 : US24 = match v800 with Ok x -> v801 x | Error x -> v802 x
            let v848 : US28 =
                match v804 with
                | US24_1(v845) -> (* Error *)
                    US28_1(v845)
                | US24_0(v807) -> (* Ok *)
                    let v808 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v809 : bool = Fable.Core.RustInterop.emitRustExpr v807 v808 
                    let v810 : string = "x"
                    let v811 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v810 
                    let v814 : (Heap4 -> US25) = method85()
                    let v815 : US25 option = v811 |> Option.map v814 
                    let v835 : US25 = US25_1
                    let v836 : US25 = v815 |> Option.defaultValue v835 
                    let v840 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v841 : bool = Fable.Core.RustInterop.emitRustExpr v836 v840 
                    let v842 : string = "_vec_map"
                    let v843 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v842 
                    US28_0(v843)
            US27_0(v848)
    let v854 : string = $"%A{v852}"
    let v857 : int64 = 400L
    let v858 : string = method8(v857, v854)
    let v859 : string = "state_core.use_requests (8) / result_memo / state_data: " + string v858 + ""
    let v860 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v861 : bool = Fable.Core.RustInterop.emitRustExpr v859 v860 
    let v862 : (int32 -> (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>)) = method86(v852)
    let v863 : Vec<struct (string * US23 * string * bool * bool)> = method96(v754)
    let v864 : string = "v863.iter().enumerate().map(|(i, x)| v862(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v865 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v864 
    let v866 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = method97(v865)
    let v867 : string = "futures::future::try_join_all(v866)"
    let v868 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v867 
    let v869 : string = "v868.await"
    let v870 : Result<Vec<string option>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v869 
    let v871 : string = "$0?"
    let v872 : Vec<string option> = Fable.Core.RustInterop.emitRustExpr v870 v871 
    let v874 : Result<Vec<string option>, std_string_String> = Ok v872 
    let v877 : string = v49 + v50 
    let x = v874 //
    let v878 : _ = x
    let v879 : unit = ()
    (* run_target_args'
    let v880 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v881 : string = $"true; let _fix_closure_v879 = $0"
    let v882 : bool = Fable.Core.RustInterop.emitRustExpr v878 v881 
    let _run_target_args'_v880 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v883 : string = $"true; let _fix_closure_v879 = $0"
    let v884 : bool = Fable.Core.RustInterop.emitRustExpr v878 v883 
    let _run_target_args'_v880 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v885 : string = $"true; let _fix_closure_v879 = $0"
    let v886 : bool = Fable.Core.RustInterop.emitRustExpr v878 v885 
    let _run_target_args'_v880 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v880 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v880 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v880 = false 
    #endif
#else
    let _run_target_args'_v880 = false 
    #endif
    let v887 : bool = _run_target_args'_v880 
    let v889 : string = $"true; _fix_closure_v879 " + v877 + "); " + v49 + " // rust.fix_closure'"
    let v890 : bool = Fable.Core.RustInterop.emitRustExpr () v889 
    let v891 : string = "__future_init"
    let v892 : _ = Fable.Core.RustInterop.emitRustExpr () v891 
    let v893 : string = "v892"
    let v894 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<string option>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v893 
    let v895 : string = $"true; $0 /*"
    let v896 : bool = Fable.Core.RustInterop.emitRustExpr v894 v895 
    let v897 : string = $"*/ }}); //"
    let v898 : bool = Fable.Core.RustInterop.emitRustExpr () v897 
    let v899 : string = $"_func0_from_v750"
    let v900 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<string option>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v899 
    let v901 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v902 : leptos_prelude_ArcLocalResource<Result<Vec<string option>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v900 v901 
    let v903 : unit = ()
    let v904 : string = $"true; let _func1_from_v903 = Func1::from(move |value| {{ //"
    let v905 : bool = Fable.Core.RustInterop.emitRustExpr () v904 
    let v906 : string = $"value"
    let v907 : Heap4 = Fable.Core.RustInterop.emitRustExpr () v906 
    let v909 : string = $"%A{v907}"
    let v912 : int64 = System.Convert.ToInt64 v909.Length
    let v913 : string = "state_core.use_requests (10) / set_state_data_action / value_len: " + string v912 + ""
    let v914 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v915 : bool = Fable.Core.RustInterop.emitRustExpr v913 v914 
    let v916 : string = "true; let __future_init = Box::pin(/*"
    let v917 : bool = Fable.Core.RustInterop.emitRustExpr () v916 
    let v918 : string = "*/ async move { /*"
    let v919 : bool = Fable.Core.RustInterop.emitRustExpr () v918 
    let v920 : string = "*/ ()"
    let v921 : bool = Fable.Core.RustInterop.emitRustExpr () v920 
    let v922 : string = "Box::pin($0)"
    let v923 : std_pin_Pin<Box<leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>>> = Fable.Core.RustInterop.emitRustExpr v0 v922 
    let v924 : string = $"leptos::prelude::ArcMemo::get_untracked(&$0)"
    let v925 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v923 v924 
    let v926 : string = "Box::pin($0)"
    let v927 : std_pin_Pin<Box<leptos_prelude_ArcMemo<PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option>>> = Fable.Core.RustInterop.emitRustExpr v127 v926 
    let v928 : string = $"leptos::prelude::ArcMemo::get_untracked(&$0)"
    let v929 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr v927 v928 
    let v930 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v931 : bool = Fable.Core.RustInterop.emitRustExpr v929 v930 
    let v932 : string = "x"
    let v933 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr () v932 
    let v934 : string = "$0.0"
    let v935 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr v933 v934 
    let v936 : string = "true; $0 })"
    let v937 : bool = Fable.Core.RustInterop.emitRustExpr v935 v936 
    let v938 : string = "_optionm_map_"
    let v939 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr () v938 
    let v942 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v943 : US2 option = v939 |> Option.map v942 
    let v963 : US2 = US2_1
    let v964 : US2 = v943 |> Option.defaultValue v963 
    let v1141 : US34 =
        match v964 with
        | US2_0(v968) -> (* Some *)
            let v969 : unit = ()
            let v970 : string = $"true; let _func1_from_v969 = Func1::from(move |value| {{ //"
            let v971 : bool = Fable.Core.RustInterop.emitRustExpr () v970 
            let v972 : string = $"value"
            let struct (v973 : string, v974 : US23, v975 : string, v976 : bool, v977 : bool) = Fable.Core.RustInterop.emitRustExpr () v972 
            let v978 : string = "true; let __future_init = Box::pin(/*"
            let v979 : bool = Fable.Core.RustInterop.emitRustExpr () v978 
            let v980 : string = "*/ async move { /*"
            let v981 : bool = Fable.Core.RustInterop.emitRustExpr () v980 
            let v982 : string = "*/ ()"
            let v983 : bool = Fable.Core.RustInterop.emitRustExpr () v982 
            let v984 : string = "state_core.use_requests (11) / set_state_data_action / database=Some(_) / url: " + v973 + ""
            let v985 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v986 : bool = Fable.Core.RustInterop.emitRustExpr v984 v985 
            let v987 : string = "url[" + v973 + "](" + $"%A{v975}" + ")"
            let v989 : string = $"%A{v907}"
            let v992 : int64 = System.Convert.ToInt64 v989.Length
            let v993 : string = "state_core.set_data () / data_len: " + string v992 + ""
            let v994 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v995 : bool = Fable.Core.RustInterop.emitRustExpr v993 v994 
            let v996 : string = "true; let __future_init = Box::pin(/*"
            let v997 : bool = Fable.Core.RustInterop.emitRustExpr () v996 
            let v998 : string = "*/ async move { /*"
            let v999 : bool = Fable.Core.RustInterop.emitRustExpr () v998 
            let v1000 : string = "*/ ()"
            let v1001 : bool = Fable.Core.RustInterop.emitRustExpr () v1000 
            let v1002 : string = "true; let mut data = Vec::new()"
            let v1003 : bool = Fable.Core.RustInterop.emitRustExpr () v1002 
            let v1004 : string = "true; borsh::BorshSerialize::serialize(&$0, &mut data).unwrap()"
            let v1005 : bool = Fable.Core.RustInterop.emitRustExpr v907 v1004 
            let v1006 : string = "data"
            let v1007 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr () v1006 
            let v1008 : string = "serde_wasm_bindgen::to_value(&v1007).unwrap()"
            let v1009 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr () v1008 
            let v1010 : string = method98(v987)
            (* run_target_args'
            let v1015 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1016 : string = "&*$0"
            let v1017 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1010 v1016 
            let _run_target_args'_v1015 = v1017 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1018 : string = "&*$0"
            let v1019 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1010 v1018 
            let _run_target_args'_v1015 = v1019 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1020 : string = "&*$0"
            let v1021 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1010 v1020 
            let _run_target_args'_v1015 = v1021 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1023 : Ref<Str> = v1010 |> unbox<Ref<Str>>
            let _run_target_args'_v1015 = v1023 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1027 : Ref<Str> = v1010 |> unbox<Ref<Str>>
            let _run_target_args'_v1015 = v1027 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1031 : Ref<Str> = v1010 |> unbox<Ref<Str>>
            let _run_target_args'_v1015 = v1031 
            #endif
#else
            let v1035 : Ref<Str> = v1010 |> unbox<Ref<Str>>
            let _run_target_args'_v1015 = v1035 
            #endif
            let v1038 : Ref<Str> = _run_target_args'_v1015 
            let v1044 : string = "$0.transaction(&[\"store\"], rexie::TransactionMode::ReadWrite)?"
            let v1045 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v968 v1044 
            let v1046 : string = "v1045.store(\"store\")?"
            let v1047 : rexie_Store = Fable.Core.RustInterop.emitRustExpr () v1046 
            let v1048 : string = "true; v1047.put(&v1009, Some(&$0.into())).await?"
            let v1049 : bool = Fable.Core.RustInterop.emitRustExpr v1038 v1048 
            let v1050 : string = "true; v1045.done().await?"
            let v1051 : bool = Fable.Core.RustInterop.emitRustExpr () v1050 
            let v1053 : Result<unit, rexie_Error> = Ok () 
            let v1056 : string = v49 + v50 
            let x = v1053 //
            let v1057 : _ = x
            let v1058 : unit = ()
            (* run_target_args'
            let v1059 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1060 : string = $"true; let _fix_closure_v1058 = $0"
            let v1061 : bool = Fable.Core.RustInterop.emitRustExpr v1057 v1060 
            let _run_target_args'_v1059 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1062 : string = $"true; let _fix_closure_v1058 = $0"
            let v1063 : bool = Fable.Core.RustInterop.emitRustExpr v1057 v1062 
            let _run_target_args'_v1059 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1064 : string = $"true; let _fix_closure_v1058 = $0"
            let v1065 : bool = Fable.Core.RustInterop.emitRustExpr v1057 v1064 
            let _run_target_args'_v1059 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v1059 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v1059 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v1059 = false 
            #endif
#else
            let _run_target_args'_v1059 = false 
            #endif
            let v1066 : bool = _run_target_args'_v1059 
            let v1068 : string = $"true; _fix_closure_v1058 " + v1056 + "); " + v49 + " // rust.fix_closure'"
            let v1069 : bool = Fable.Core.RustInterop.emitRustExpr () v1068 
            let v1070 : string = "__future_init"
            let v1071 : _ = Fable.Core.RustInterop.emitRustExpr () v1070 
            let v1072 : string = "v1071"
            let v1073 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v1072 
            let v1074 : string = "v1073.await"
            let v1075 : Result<unit, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v1074 
            let v1076 : (rexie_Error -> std_string_String) = method99()
            (* run_target_args'
            let v1078 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1079 : string = "$0.map_err(|x| $1(x))"
            let v1080 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1075, v1076) v1079 
            let _run_target_args'_v1078 = v1080 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1081 : string = "$0.map_err(|x| $1(x))"
            let v1082 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1075, v1076) v1081 
            let _run_target_args'_v1078 = v1082 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1083 : string = "$0.map_err(|x| $1(x))"
            let v1084 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1075, v1076) v1083 
            let _run_target_args'_v1078 = v1084 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1085 : Result<unit, std_string_String> = match v1075 with Ok x -> Ok x | Error x -> Error (v1076 x)
            let _run_target_args'_v1078 = v1085 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1086 : Result<unit, std_string_String> = match v1075 with Ok x -> Ok x | Error x -> Error (v1076 x)
            let _run_target_args'_v1078 = v1086 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1087 : Result<unit, std_string_String> = match v1075 with Ok x -> Ok x | Error x -> Error (v1076 x)
            let _run_target_args'_v1078 = v1087 
            #endif
#else
            let v1088 : Result<unit, std_string_String> = match v1075 with Ok x -> Ok x | Error x -> Error (v1076 x)
            let _run_target_args'_v1078 = v1088 
            #endif
            let v1089 : Result<unit, std_string_String> = _run_target_args'_v1078 
            let v1092 : string = "true; $0?"
            let v1093 : bool = Fable.Core.RustInterop.emitRustExpr v1089 v1092 
            
            let v1095 : Result<unit, std_string_String> = Ok () 
            let v1098 : string = v49 + v50 
            let x = v1095 //
            let v1099 : _ = x
            let v1100 : unit = ()
            (* run_target_args'
            let v1101 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1102 : string = $"true; let _fix_closure_v1100 = $0"
            let v1103 : bool = Fable.Core.RustInterop.emitRustExpr v1099 v1102 
            let _run_target_args'_v1101 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1104 : string = $"true; let _fix_closure_v1100 = $0"
            let v1105 : bool = Fable.Core.RustInterop.emitRustExpr v1099 v1104 
            let _run_target_args'_v1101 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1106 : string = $"true; let _fix_closure_v1100 = $0"
            let v1107 : bool = Fable.Core.RustInterop.emitRustExpr v1099 v1106 
            let _run_target_args'_v1101 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v1101 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v1101 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v1101 = false 
            #endif
#else
            let _run_target_args'_v1101 = false 
            #endif
            let v1108 : bool = _run_target_args'_v1101 
            let v1110 : string = $"true; _fix_closure_v1100 " + v1098 + "); " + v49 + " // rust.fix_closure'"
            let v1111 : bool = Fable.Core.RustInterop.emitRustExpr () v1110 
            let v1112 : string = "__future_init"
            let v1113 : _ = Fable.Core.RustInterop.emitRustExpr () v1112 
            let v1114 : string = "v1113"
            let v1115 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v1114 
            let func1_from_result = v1115 //
            let v1116 : _ = func1_from_result
            let v1117 : string = $"true; $0 /*"
            let v1118 : bool = Fable.Core.RustInterop.emitRustExpr v1116 v1117 
            let v1119 : string = $"*/ }}); //"
            let v1120 : bool = Fable.Core.RustInterop.emitRustExpr () v1119 
            let v1121 : string = $"_func1_from_v969"
            let v1122 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1121 
            let v1123 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v1124 : (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>) = closure76(v1122)
            let v1125 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr struct (v925, v1124) v1123 
            let v1126 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = method101(v1125)
            let v1127 : string = "futures::future::try_join_all(v1126)"
            let v1128 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1127 
            let v1129 : string = "v1128.await"
            let v1130 : Result<Vec<unit>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v1129 
            let v1131 : string = "$0?"
            let v1132 : Vec<unit> = Fable.Core.RustInterop.emitRustExpr v1130 v1131 
            US34_0(v1132)
        | _ ->
            let v1134 : string = "state_core.use_requests (12) / set_state_data_action / database,request=None"
            let v1135 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1136 : bool = Fable.Core.RustInterop.emitRustExpr v1134 v1135 
            let v1137 : (unit []) = [||]
            let v1138 : string = "$0.to_vec()"
            let v1139 : Vec<unit> = Fable.Core.RustInterop.emitRustExpr v1137 v1138 
            US34_0(v1139)
    let v1153 : Result<Vec<unit>, std_string_String> =
        match v1141 with
        | US34_1(v1147) -> (* Error *)
            let v1149 : Result<Vec<unit>, std_string_String> = Error v1147 
            v1149
        | US34_0(v1142) -> (* Ok *)
            let v1144 : Result<Vec<unit>, std_string_String> = Ok v1142 
            v1144
    let v1154 : string = v49 + v50 
    let x = v1153 //
    let v1155 : _ = x
    let v1156 : unit = ()
    (* run_target_args'
    let v1157 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v1158 : string = $"true; let _fix_closure_v1156 = $0"
    let v1159 : bool = Fable.Core.RustInterop.emitRustExpr v1155 v1158 
    let _run_target_args'_v1157 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v1160 : string = $"true; let _fix_closure_v1156 = $0"
    let v1161 : bool = Fable.Core.RustInterop.emitRustExpr v1155 v1160 
    let _run_target_args'_v1157 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v1162 : string = $"true; let _fix_closure_v1156 = $0"
    let v1163 : bool = Fable.Core.RustInterop.emitRustExpr v1155 v1162 
    let _run_target_args'_v1157 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v1157 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v1157 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v1157 = false 
    #endif
#else
    let _run_target_args'_v1157 = false 
    #endif
    let v1164 : bool = _run_target_args'_v1157 
    let v1166 : string = $"true; _fix_closure_v1156 " + v1154 + "); " + v49 + " // rust.fix_closure'"
    let v1167 : bool = Fable.Core.RustInterop.emitRustExpr () v1166 
    let v1168 : string = "__future_init"
    let v1169 : _ = Fable.Core.RustInterop.emitRustExpr () v1168 
    let v1170 : string = "v1169"
    let v1171 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v1170 
    let func1_from_result = v1171 //
    let v1172 : _ = func1_from_result
    let v1173 : string = $"true; $0 /*"
    let v1174 : bool = Fable.Core.RustInterop.emitRustExpr v1172 v1173 
    let v1175 : string = $"*/ }}); //"
    let v1176 : bool = Fable.Core.RustInterop.emitRustExpr () v1175 
    let v1177 : string = $"_func1_from_v903"
    let v1178 : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1177 
    let v1179 : string = "leptos::prelude::Action::new(move |value: &std::sync::Arc<Heap4>| $0(value.clone()))"
    let v1180 : (Heap4 -> std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>) = closure77(v1178)
    let v1181 : leptos_prelude_Action<Heap4, Result<Vec<unit>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v1180 v1179 
    let v1182 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1183 : (unit -> (Result<crate_model_near_nearblocks_Root option, std_string_String> [])) = closure78(v0, v749, v902, v1181)
    let v1184 : leptos_prelude_ArcMemo<(Result<crate_model_near_nearblocks_Root option, std_string_String> [])> = Fable.Core.RustInterop.emitRustExpr v1183 v1182 
    let v1185 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1186 : (unit -> Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>) = closure87(v1, v124, v746, v1184)
    let v1187 : leptos_prelude_ArcMemo<Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>> = Fable.Core.RustInterop.emitRustExpr v1186 v1185 
    v1187
and closure91 () (v0 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option) : US43 =
    US43_0(v0)
and method115 () : ((struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option -> US43) =
    closure91()
and closure92 () (v0 : std_string_String) : US43 =
    US43_1(v0)
and method116 () : (std_string_String -> US43) =
    closure92()
and method117 (v0 : Func0<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>, US43>) : Func0<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>, US43> =
    v0
and closure93 (v0 : Func0<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>, US43>) (v1 : Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>) : US43 =
    let v2 : Func0<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>, US43> = method117(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : US43 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure94 () (v0 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) : US45 =
    US45_0(v0)
and method118 () : ((struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) -> US45) =
    closure94()
and method119 (v0 : Func0<US43, US44>) : Func0<US43, US44> =
    v0
and closure95 (v0 : Func0<US43, US44>) (v1 : US43) : US44 =
    let v2 : Func0<US43, US44> = method119(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : US44 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure96 () (v0 : US44) : bool =
    match v0 with
    | US44_0(v1) -> (* Ok *)
        match v1 with
        | US45_1 -> (* None *)
            true
        | _ ->
            false
    | _ ->
        false
and method120 () : (US44 -> bool) =
    closure96()
and method121 (v0 : Vec<US44>) : Vec<US44> =
    v0
and method123 (v0 : Func0<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))), struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))>) : Func0<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))), struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> =
    v0
and closure99 (v0 : Func0<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))), struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))>) (v1 : (unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])))) : struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) =
    let v2 : Func0<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))), struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = method123(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : unativeint, v6 : std_string_String, v7 : std_string_String, v8 : std_string_String, v9 : std_string_String, v10 : std_string_String, v11 : std_string_String, v12 : uint32, v13 : (struct (std_string_String * std_string_String option) []), v14 : float, v15 : bool, v16 : float, v17 : (std_string_String [])) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17)
and method124 (v0 : Func0<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])), struct (string * unativeint * Heap5)>) : Func0<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])), struct (string * unativeint * Heap5)> =
    v0
and closure100 (v0 : Func0<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])), struct (string * unativeint * Heap5)>) struct (v1 : unativeint, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : std_string_String, v7 : std_string_String, v8 : uint32, v9 : (struct (std_string_String * std_string_String option) []), v10 : float, v11 : bool, v12 : float, v13 : (std_string_String [])) : struct (string * unativeint * Heap5) =
    let v14 : Func0<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])), struct (string * unativeint * Heap5)> = method124(v0)
    let func1_move_x = struct (v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13) //
    let v15 : _ = func1_move_x
    let v16 : string = "(move |x| v14(x))($0)"
    let struct (v17 : string, v18 : unativeint, v19 : Heap5) = Fable.Core.RustInterop.emitRustExpr v15 v16 
    struct (v17, v18, v19)
and closure98 (v0 : (string []), v1 : int32) (v2 : US44) : US48 =
    let v3 : string = v0.[int v1]
    match v2 with
    | US44_1(v122) -> (* Error *)
        US48_1(v122)
    | US44_0(v4) -> (* Ok *)
        let v120 : US49 =
            match v4 with
            | US45_1 -> (* None *)
                US49_1
            | US45_0(v5) -> (* Some *)
                let v6 : string = "$0.to_vec()"
                let v7 : Vec<struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr v5 v6 
                let v8 : string = "v7.into_iter()"
                let v9 : _ = Fable.Core.RustInterop.emitRustExpr () v8 
                let v10 : string = "v9.enumerate().map(std::sync::Arc::new)"
                let v11 : _ = Fable.Core.RustInterop.emitRustExpr () v10 
                let v12 : string = "$0.collect::<Vec<_>>()"
                let v13 : Vec<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])))> = Fable.Core.RustInterop.emitRustExpr v11 v12 
                let v14 : unit = ()
                let v15 : string = $"true; let _func1_from_v14 = Func1::from(move |value| {{ //"
                let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
                let v17 : string = $"value"
                let v18 : (unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))) = Fable.Core.RustInterop.emitRustExpr () v17 
                let (a, b) = v18 
                let v32 : unativeint = a
                let struct (v33 : std_string_String, v34 : std_string_String, v35 : std_string_String, v36 : std_string_String, v37 : std_string_String, v38 : std_string_String, v39 : uint32, v40 : (struct (std_string_String * std_string_String option) []), v41 : float, v42 : bool, v43 : float, v44 : (std_string_String [])) = b
                let func1_from_result = struct (v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44) //
                let v71 : _ = func1_from_result
                let v72 : string = $"true; $0 /*"
                let v73 : bool = Fable.Core.RustInterop.emitRustExpr v71 v72 
                let v74 : string = $"*/ }}); //"
                let v75 : bool = Fable.Core.RustInterop.emitRustExpr () v74 
                let v76 : string = $"_func1_from_v14"
                let v77 : Func0<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))), struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr () v76 
                let v78 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
                let v79 : ((unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))) -> struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))) = closure99(v77)
                let v80 : Vec<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr struct (v13, v79) v78 
                let v81 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                let v82 : (struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) = Fable.Core.RustInterop.emitRustExpr v80 v81 
                let v83 : string = "$0.to_vec()"
                let v84 : Vec<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr v82 v83 
                let v85 : unit = ()
                let v86 : string = $"true; let _func1_from_v85 = Func1::from(move |value| {{ //"
                let v87 : bool = Fable.Core.RustInterop.emitRustExpr () v86 
                let v88 : string = $"value"
                let struct (v89 : unativeint, v90 : std_string_String, v91 : std_string_String, v92 : std_string_String, v93 : std_string_String, v94 : std_string_String, v95 : std_string_String, v96 : uint32, v97 : (struct (std_string_String * std_string_String option) []), v98 : float, v99 : bool, v100 : float, v101 : (std_string_String [])) = Fable.Core.RustInterop.emitRustExpr () v88 
                let v103 : unativeint = v1 |> unativeint 
                let v106 : Heap5 = {l0 = v90; l1 = v91; l2 = v92; l3 = v93; l4 = v94; l5 = v95; l6 = v96; l7 = v97; l8 = v98; l9 = v99; l10 = v100; l11 = v101} : Heap5
                let func1_from_result = struct (v3, v103, v106) //
                let v107 : _ = func1_from_result
                let v108 : string = $"true; $0 /*"
                let v109 : bool = Fable.Core.RustInterop.emitRustExpr v107 v108 
                let v110 : string = $"*/ }}); //"
                let v111 : bool = Fable.Core.RustInterop.emitRustExpr () v110 
                let v112 : string = $"_func1_from_v85"
                let v113 : Func0<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])), struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr () v112 
                let v114 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
                let v115 : (struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) -> struct (string * unativeint * Heap5)) = closure100(v113)
                let v116 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr struct (v84, v115) v114 
                US49_0(v116)
        US48_0(v120)
and closure97 (v0 : (string [])) (v1 : int32) : (US44 -> US48) =
    closure98(v0, v1)
and method122 (v0 : (string [])) : (int32 -> (US44 -> US48)) =
    closure97(v0)
and method125 (v0 : Vec<US44>) : Vec<US44> =
    v0
and method126 (v0 : Func0<US48, US50>) : Func0<US48, US50> =
    v0
and closure101 (v0 : Func0<US48, US50>) (v1 : US48) : US50 =
    let v2 : Func0<US48, US50> = method126(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : US50 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method127 (v0 : Func0<US50, Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>>) : Func0<US50, Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>> =
    v0
and closure102 (v0 : Func0<US50, Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>>) (v1 : US50) : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> =
    let v2 : Func0<US50, Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>> = method127(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method128 (v0 : int32, v1 : Mut1) : bool =
    let v2 : int32 = v1.l0
    let v3 : bool = v2 < v0
    v3
and closure103 () (v0 : Vec<struct (string * unativeint * Heap5)> option) : US50 =
    US50_0(v0)
and method130 () : (Vec<struct (string * unativeint * Heap5)> option -> US50) =
    closure103()
and closure104 () (v0 : std_string_String) : US50 =
    US50_1(v0)
and method131 () : (std_string_String -> US50) =
    closure104()
and closure105 () (v0 : Vec<struct (string * unativeint * Heap5)>) : US49 =
    US49_0(v0)
and method132 () : (Vec<struct (string * unativeint * Heap5)> -> US49) =
    closure105()
and method133 (v0 : Vec<struct (string * unativeint * Heap5)>) : Vec<struct (string * unativeint * Heap5)> =
    v0
and method134 (v0 : Vec<struct (string * unativeint * Heap5)>) : Vec<struct (string * unativeint * Heap5)> =
    v0
and method129 (v0 : UH2, v1 : US51) : US51 =
    match v0 with
    | UH2_1(v2, v3) -> (* Cons *)
        let v4 : (Vec<struct (string * unativeint * Heap5)> option -> US50) = method130()
        let v5 : (std_string_String -> US50) = method131()
        let v7 : US50 = match v2 with Ok x -> v4 x | Error x -> v5 x
        let v43 : US48 =
            match v7 with
            | US50_1(v40) -> (* Error *)
                US48_1(v40)
            | US50_0(v10) -> (* Ok *)
                let v13 : (Vec<struct (string * unativeint * Heap5)> -> US49) = method132()
                let v14 : US49 option = v10 |> Option.map v13 
                let v34 : US49 = US49_1
                let v35 : US49 = v14 |> Option.defaultValue v34 
                US48_0(v35)
        let v64 : US51 =
            match v1 with
            | US51_0(v44) -> (* Ok *)
                match v43 with
                | US48_1(v57) -> (* Error *)
                    US51_1(v57)
                | US48_0(v45) -> (* Ok *)
                    match v45 with
                    | US49_0(v46) -> (* Some *)
                        let v47 : Vec<struct (string * unativeint * Heap5)> = method133(v46)
                        let v48 : Vec<struct (string * unativeint * Heap5)> = method134(v44)
                        let v49 : string = "true; let mut v48 = v48"
                        let v50 : bool = Fable.Core.RustInterop.emitRustExpr () v49 
                        let v51 : string = "true; v48.extend(v47)"
                        let v52 : bool = Fable.Core.RustInterop.emitRustExpr () v51 
                        let v53 : string = "v48"
                        let v54 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr () v53 
                        US51_0(v54)
                    | _ ->
                        v1
            | _ ->
                match v43 with
                | US48_1(v61) -> (* Error *)
                    US51_1(v61)
                | _ ->
                    v1
        method129(v3, v64)
    | UH2_0 -> (* Nil *)
        v1
and method135 (v0 : Vec<struct (string * unativeint * Heap5)>) : Vec<struct (string * unativeint * Heap5)> =
    v0
and closure106 () struct (v0 : string, v1 : unativeint, v2 : Heap5) : std_string_String =
    let v3 : std_string_String = v2.l5
    v3
and method136 () : (struct (string * unativeint * Heap5) -> std_string_String) =
    closure106()
and method137 (v0 : Vec<struct (string * unativeint * Heap5)>) : Vec<struct (string * unativeint * Heap5)> =
    v0
and closure90 (v0 : leptos_prelude_ArcMemo<(string [])>, v1 : leptos_prelude_ArcMemo<Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>>) () : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> =
    let v2 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v3 : Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : unit = ()
    let v5 : string = $"true; let _func1_from_v4 = Func1::from(move |value| {{ //"
    let v6 : bool = Fable.Core.RustInterop.emitRustExpr () v5 
    let v7 : string = $"value"
    let v8 : Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v7 
    let v9 : ((struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option -> US43) = method115()
    let v10 : (std_string_String -> US43) = method116()
    let v12 : US43 = match v8 with Ok x -> v9 x | Error x -> v10 x
    let func1_from_result = v12 //
    let v15 : _ = func1_from_result
    let v16 : string = $"true; $0 /*"
    let v17 : bool = Fable.Core.RustInterop.emitRustExpr v15 v16 
    let v18 : string = $"*/ }}); //"
    let v19 : bool = Fable.Core.RustInterop.emitRustExpr () v18 
    let v20 : string = $"_func1_from_v4"
    let v21 : Func0<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>, US43> = Fable.Core.RustInterop.emitRustExpr () v20 
    let v22 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v23 : (Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String> -> US43) = closure93(v21)
    let v24 : Vec<US43> = Fable.Core.RustInterop.emitRustExpr struct (v3, v23) v22 
    let v25 : unit = ()
    let v26 : string = $"true; let _func1_from_v25 = Func1::from(move |value| {{ //"
    let v27 : bool = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : string = $"value"
    let v29 : US43 = Fable.Core.RustInterop.emitRustExpr () v28 
    let v63 : US44 =
        match v29 with
        | US43_1(v60) -> (* Error *)
            US44_1(v60)
        | US43_0(v30) -> (* Ok *)
            let v33 : ((struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) -> US45) = method118()
            let v34 : US45 option = v30 |> Option.map v33 
            let v54 : US45 = US45_1
            let v55 : US45 = v34 |> Option.defaultValue v54 
            US44_0(v55)
    let func1_from_result = v63 //
    let v64 : _ = func1_from_result
    let v65 : string = $"true; $0 /*"
    let v66 : bool = Fable.Core.RustInterop.emitRustExpr v64 v65 
    let v67 : string = $"*/ }}); //"
    let v68 : bool = Fable.Core.RustInterop.emitRustExpr () v67 
    let v69 : string = $"_func1_from_v25"
    let v70 : Func0<US43, US44> = Fable.Core.RustInterop.emitRustExpr () v69 
    let v71 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v72 : (US43 -> US44) = closure95(v70)
    let v73 : Vec<US44> = Fable.Core.RustInterop.emitRustExpr struct (v24, v72) v71 
    let v75 : string = $"%A{v73}"
    let v78 : int64 = 400L
    let v79 : string = method8(v78, v75)
    let v80 : string = "transactions.render (8) / txns move / root: " + string v79 + ""
    let v81 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v82 : bool = Fable.Core.RustInterop.emitRustExpr v80 v81 
    let v83 : (US44 -> bool) = method120()
    let v84 : Vec<US44> = method121(v73)
    let v85 : string = "v84.into_iter().filter(|x| v83(x.clone().clone())).collect::<Vec<_>>()"
    let v86 : Vec<US44> = Fable.Core.RustInterop.emitRustExpr () v85 
    let v87 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v88 : (US44 []) = Fable.Core.RustInterop.emitRustExpr v86 v87 
    let v89 : int32 = v88.Length
    let v90 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v91 : (US44 []) = Fable.Core.RustInterop.emitRustExpr v73 v90 
    let v92 : int32 = v91.Length
    let v93 : bool = v89 = v92
    let v217 : US46 =
        if v93 then
            let v94 : US47 = US47_1
            US46_0(v94)
        else
            let v96 : string = $"leptos::prelude::ArcMemo::get(&$0)"
            let v97 : (string []) = Fable.Core.RustInterop.emitRustExpr v0 v96 
            let v98 : (int32 -> (US44 -> US48)) = method122(v97)
            let v99 : Vec<US44> = method125(v73)
            let v100 : string = "v99.iter().enumerate().map(|(i, x)| v98(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
            let v101 : Vec<US48> = Fable.Core.RustInterop.emitRustExpr () v100 
            let v102 : unit = ()
            let v103 : string = $"true; let _func1_from_v102 = Func1::from(move |value| {{ //"
            let v104 : bool = Fable.Core.RustInterop.emitRustExpr () v103 
            let v105 : string = $"value"
            let v106 : US48 = Fable.Core.RustInterop.emitRustExpr () v105 
            let v123 : US50 =
                match v106 with
                | US48_1(v120) -> (* Error *)
                    US50_1(v120)
                | US48_0(v107) -> (* Ok *)
                    let v118 : Vec<struct (string * unativeint * Heap5)> option =
                        match v107 with
                        | US49_1 -> (* None *)
                            let v114 : Vec<struct (string * unativeint * Heap5)> option = None
                            v114
                        | US49_0(v108) -> (* Some *)
                            let v110 : Vec<struct (string * unativeint * Heap5)> option = Some v108 
                            v110
                    US50_0(v118)
            let func1_from_result = v123 //
            let v124 : _ = func1_from_result
            let v125 : string = $"true; $0 /*"
            let v126 : bool = Fable.Core.RustInterop.emitRustExpr v124 v125 
            let v127 : string = $"*/ }}); //"
            let v128 : bool = Fable.Core.RustInterop.emitRustExpr () v127 
            let v129 : string = $"_func1_from_v102"
            let v130 : Func0<US48, US50> = Fable.Core.RustInterop.emitRustExpr () v129 
            let v131 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v132 : (US48 -> US50) = closure101(v130)
            let v133 : Vec<US50> = Fable.Core.RustInterop.emitRustExpr struct (v101, v132) v131 
            let v134 : unit = ()
            let v135 : string = $"true; let _func1_from_v134 = Func1::from(move |value| {{ //"
            let v136 : bool = Fable.Core.RustInterop.emitRustExpr () v135 
            let v137 : string = $"value"
            let v138 : US50 = Fable.Core.RustInterop.emitRustExpr () v137 
            let v150 : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> =
                match v138 with
                | US50_1(v144) -> (* Error *)
                    let v146 : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> = Error v144 
                    v146
                | US50_0(v139) -> (* Ok *)
                    let v141 : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> = Ok v139 
                    v141
            let func1_from_result = v150 //
            let v151 : _ = func1_from_result
            let v152 : string = $"true; $0 /*"
            let v153 : bool = Fable.Core.RustInterop.emitRustExpr v151 v152 
            let v154 : string = $"*/ }}); //"
            let v155 : bool = Fable.Core.RustInterop.emitRustExpr () v154 
            let v156 : string = $"_func1_from_v134"
            let v157 : Func0<US50, Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v156 
            let v158 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v159 : (US50 -> Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>) = closure102(v157)
            let v160 : Vec<Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr struct (v133, v159) v158 
            let v161 : (struct (string * unativeint * Heap5) []) = [||]
            let v162 : string = "$0.to_vec()"
            let v163 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr v161 v162 
            let v164 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
            let v165 : (Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v160 v164 
            let v166 : int32 = v165.Length
            let v167 : UH2 = UH2_0
            let v168 : Mut1 = {l0 = 0; l1 = v167} : Mut1
            while method128(v166, v168) do
                let v170 : int32 = v168.l0
                let v171 : int32 =  -v170
                let v172 : int32 = v171 + v166
                let v173 : int32 = v172 - 1
                let v174 : UH2 = v168.l1
                let v175 : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> = v165.[int v173]
                let v176 : int32 = v170 + 1
                let v177 : UH2 = UH2_1(v175, v174)
                v168.l0 <- v176
                v168.l1 <- v177
                ()
            let v178 : UH2 = v168.l1
            let v179 : US51 = US51_0(v163)
            let v180 : US51 = method129(v178, v179)
            let v194 : US51 =
                match v180 with
                | US51_1(v191) -> (* Error *)
                    US51_1(v191)
                | US51_0(v181) -> (* Ok *)
                    let v182 : Vec<struct (string * unativeint * Heap5)> = method135(v181)
                    let v183 : (struct (string * unativeint * Heap5) -> std_string_String) = method136()
                    let v184 : string = "true; let mut v182 = v182"
                    let v185 : bool = Fable.Core.RustInterop.emitRustExpr () v184 
                    let v186 : string = "true; v182.sort_by_key(|x| v183(x.clone()))"
                    let v187 : bool = Fable.Core.RustInterop.emitRustExpr () v186 
                    let v188 : string = "v182"
                    let v189 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr () v188 
                    US51_0(v189)
            let v209 : US52 =
                match v194 with
                | US51_1(v206) -> (* Error *)
                    US52_1(v206)
                | US51_0(v195) -> (* Ok *)
                    let v196 : Vec<struct (string * unativeint * Heap5)> = method137(v195)
                    let v197 : string = "true; let mut v196 = v196"
                    let v198 : bool = Fable.Core.RustInterop.emitRustExpr () v197 
                    let v199 : string = "true; v196.reverse()"
                    let v200 : bool = Fable.Core.RustInterop.emitRustExpr () v199 
                    let v201 : string = "v196"
                    let v202 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr () v201 
                    let v203 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v204 : (struct (string * unativeint * Heap5) []) = Fable.Core.RustInterop.emitRustExpr v202 v203 
                    US52_0(v204)
            match v209 with
            | US52_1(v213) -> (* Error *)
                US46_1(v213)
            | US52_0(v210) -> (* Ok *)
                let v211 : US47 = US47_0(v210)
                US46_0(v211)
    let v234 : US53 =
        match v217 with
        | US46_1(v231) -> (* Error *)
            US53_1(v231)
        | US46_0(v218) -> (* Ok *)
            let v229 : (struct (string * unativeint * Heap5) []) option =
                match v218 with
                | US47_1 -> (* None *)
                    let v225 : (struct (string * unativeint * Heap5) []) option = None
                    v225
                | US47_0(v219) -> (* Some *)
                    let v221 : (struct (string * unativeint * Heap5) []) option = Some v219 
                    v221
            US53_0(v229)
    let v246 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> =
        match v234 with
        | US53_1(v240) -> (* Error *)
            let v242 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Error v240 
            v242
        | US53_0(v235) -> (* Ok *)
            let v237 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Ok v235 
            v237
    let v248 : string = $"%A{v246}"
    let v251 : string = "use_transactions.render (9) / txns new_arc_memo / result: " + string v248 + " / loading: " + string v93 + ""
    let v252 : int64 = 200L
    let v253 : string = method8(v252, v251)
    let v254 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v255 : bool = Fable.Core.RustInterop.emitRustExpr v253 v254 
    v246
and closure108 () (v0 : (struct (string * unativeint * Heap5) []) option) : US53 =
    US53_0(v0)
and method138 () : ((struct (string * unativeint * Heap5) []) option -> US53) =
    closure108()
and closure109 () (v0 : std_string_String) : US53 =
    US53_1(v0)
and method139 () : (std_string_String -> US53) =
    closure109()
and closure110 () (v0 : (struct (string * unativeint * Heap5) [])) : US47 =
    US47_0(v0)
and method140 () : ((struct (string * unativeint * Heap5) []) -> US47) =
    closure110()
and closure111 () (v0 : serde_json_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method141 () : (serde_json_Error -> std_string_String) =
    closure111()
and closure112 () (v0 : std_string_String) : string =
    let v1 : string = "fable_library_rust::String_::fromString($0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    v2
and method142 () : (std_string_String -> string) =
    closure112()
and method143 (v0 : Result<std_string_String, std_string_String>) : Result<std_string_String, std_string_String> =
    v0
and closure113 () (v0 : string) : struct (string * US23 * string * bool * bool) =
    let v1 : string = "https://rpc.mainnet.near.org"
    let v2 : US23 = US23_1
    struct (v1, v2, v0, true, false)
and method144 () : (string -> struct (string * US23 * string * bool * bool)) =
    closure113()
and method145 (v0 : Result<string, std_string_String>) : Result<string, std_string_String> =
    v0
and method146 (v0 : Func0<struct (string * unativeint * Heap5), Result<struct (string * US23 * string * bool * bool), std_string_String>>) : Func0<struct (string * unativeint * Heap5), Result<struct (string * US23 * string * bool * bool), std_string_String>> =
    v0
and closure114 (v0 : Func0<struct (string * unativeint * Heap5), Result<struct (string * US23 * string * bool * bool), std_string_String>>) struct (v1 : string, v2 : unativeint, v3 : Heap5) : Result<struct (string * US23 * string * bool * bool), std_string_String> =
    let v4 : Func0<struct (string * unativeint * Heap5), Result<struct (string * US23 * string * bool * bool), std_string_String>> = method146(v0)
    let func1_move_x = struct (v1, v2, v3) //
    let v5 : _ = func1_move_x
    let v6 : string = "(move |x| v4(x))($0)"
    let v7 : Result<struct (string * US23 * string * bool * bool), std_string_String> = Fable.Core.RustInterop.emitRustExpr v5 v6 
    v7
and closure107 (v0 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>) () : Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String> =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : ((struct (string * unativeint * Heap5) []) option -> US53) = method138()
    let v4 : (std_string_String -> US53) = method139()
    let v6 : US53 = match v2 with Ok x -> v3 x | Error x -> v4 x
    let v42 : US46 =
        match v6 with
        | US53_1(v39) -> (* Error *)
            US46_1(v39)
        | US53_0(v9) -> (* Ok *)
            let v12 : ((struct (string * unativeint * Heap5) []) -> US47) = method140()
            let v13 : US47 option = v9 |> Option.map v12 
            let v33 : US47 = US47_1
            let v34 : US47 = v13 |> Option.defaultValue v33 
            US46_0(v34)
    let v378 : US54 =
        match v42 with
        | US46_1(v375) -> (* Error *)
            US54_1(v375)
        | US46_0(v43) -> (* Ok *)
            match v43 with
            | US47_0(v44) -> (* Some *)
                let v45 : string = "$0.to_vec()"
                let v46 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr v44 v45 
                let v47 : unit = ()
                let v48 : string = $"true; let _func1_from_v47 = Func1::from(move |value| {{ //"
                let v49 : bool = Fable.Core.RustInterop.emitRustExpr () v48 
                let v50 : string = $"value"
                let struct (v51 : string, v52 : unativeint, v53 : Heap5) = Fable.Core.RustInterop.emitRustExpr () v50 
                let v54 : string = "2.0"
                (* run_target_args'
                let v59 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v60 : string = "&*$0"
                let v61 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v54 v60 
                let _run_target_args'_v59 = v61 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v62 : string = "&*$0"
                let v63 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v54 v62 
                let _run_target_args'_v59 = v63 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v64 : string = "&*$0"
                let v65 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v54 v64 
                let _run_target_args'_v59 = v65 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v67 : Ref<Str> = v54 |> unbox<Ref<Str>>
                let _run_target_args'_v59 = v67 
                #endif
#if FABLE_COMPILER_PYTHON
                let v71 : Ref<Str> = v54 |> unbox<Ref<Str>>
                let _run_target_args'_v59 = v71 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v75 : Ref<Str> = v54 |> unbox<Ref<Str>>
                let _run_target_args'_v59 = v75 
                #endif
#else
                let v79 : Ref<Str> = v54 |> unbox<Ref<Str>>
                let _run_target_args'_v59 = v79 
                #endif
                let v82 : Ref<Str> = _run_target_args'_v59 
                (* run_target_args'
                let v92 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v93 : string = "String::from($0)"
                let v94 : std_string_String = Fable.Core.RustInterop.emitRustExpr v82 v93 
                let _run_target_args'_v92 = v94 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v95 : string = "String::from($0)"
                let v96 : std_string_String = Fable.Core.RustInterop.emitRustExpr v82 v95 
                let _run_target_args'_v92 = v96 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v97 : string = "String::from($0)"
                let v98 : std_string_String = Fable.Core.RustInterop.emitRustExpr v82 v97 
                let _run_target_args'_v92 = v98 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v100 : std_string_String = v82 |> unbox<std_string_String>
                let _run_target_args'_v92 = v100 
                #endif
#if FABLE_COMPILER_PYTHON
                let v104 : std_string_String = v82 |> unbox<std_string_String>
                let _run_target_args'_v92 = v104 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v108 : std_string_String = v82 |> unbox<std_string_String>
                let _run_target_args'_v92 = v108 
                #endif
#else
                let v112 : std_string_String = v82 |> unbox<std_string_String>
                let _run_target_args'_v92 = v112 
                #endif
                let v115 : std_string_String = _run_target_args'_v92 
                let v121 : string = "dontcare"
                (* run_target_args'
                let v126 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v127 : string = "&*$0"
                let v128 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v121 v127 
                let _run_target_args'_v126 = v128 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v129 : string = "&*$0"
                let v130 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v121 v129 
                let _run_target_args'_v126 = v130 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v131 : string = "&*$0"
                let v132 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v121 v131 
                let _run_target_args'_v126 = v132 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v134 : Ref<Str> = v121 |> unbox<Ref<Str>>
                let _run_target_args'_v126 = v134 
                #endif
#if FABLE_COMPILER_PYTHON
                let v138 : Ref<Str> = v121 |> unbox<Ref<Str>>
                let _run_target_args'_v126 = v138 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v142 : Ref<Str> = v121 |> unbox<Ref<Str>>
                let _run_target_args'_v126 = v142 
                #endif
#else
                let v146 : Ref<Str> = v121 |> unbox<Ref<Str>>
                let _run_target_args'_v126 = v146 
                #endif
                let v149 : Ref<Str> = _run_target_args'_v126 
                (* run_target_args'
                let v159 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v160 : string = "String::from($0)"
                let v161 : std_string_String = Fable.Core.RustInterop.emitRustExpr v149 v160 
                let _run_target_args'_v159 = v161 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v162 : string = "String::from($0)"
                let v163 : std_string_String = Fable.Core.RustInterop.emitRustExpr v149 v162 
                let _run_target_args'_v159 = v163 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v164 : string = "String::from($0)"
                let v165 : std_string_String = Fable.Core.RustInterop.emitRustExpr v149 v164 
                let _run_target_args'_v159 = v165 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v167 : std_string_String = v149 |> unbox<std_string_String>
                let _run_target_args'_v159 = v167 
                #endif
#if FABLE_COMPILER_PYTHON
                let v171 : std_string_String = v149 |> unbox<std_string_String>
                let _run_target_args'_v159 = v171 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v175 : std_string_String = v149 |> unbox<std_string_String>
                let _run_target_args'_v159 = v175 
                #endif
#else
                let v179 : std_string_String = v149 |> unbox<std_string_String>
                let _run_target_args'_v159 = v179 
                #endif
                let v182 : std_string_String = _run_target_args'_v159 
                let v188 : string = "EXPERIMENTAL_tx_status"
                (* run_target_args'
                let v193 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v194 : string = "&*$0"
                let v195 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v188 v194 
                let _run_target_args'_v193 = v195 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v196 : string = "&*$0"
                let v197 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v188 v196 
                let _run_target_args'_v193 = v197 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v198 : string = "&*$0"
                let v199 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v188 v198 
                let _run_target_args'_v193 = v199 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v201 : Ref<Str> = v188 |> unbox<Ref<Str>>
                let _run_target_args'_v193 = v201 
                #endif
#if FABLE_COMPILER_PYTHON
                let v205 : Ref<Str> = v188 |> unbox<Ref<Str>>
                let _run_target_args'_v193 = v205 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v209 : Ref<Str> = v188 |> unbox<Ref<Str>>
                let _run_target_args'_v193 = v209 
                #endif
#else
                let v213 : Ref<Str> = v188 |> unbox<Ref<Str>>
                let _run_target_args'_v193 = v213 
                #endif
                let v216 : Ref<Str> = _run_target_args'_v193 
                (* run_target_args'
                let v226 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v227 : string = "String::from($0)"
                let v228 : std_string_String = Fable.Core.RustInterop.emitRustExpr v216 v227 
                let _run_target_args'_v226 = v228 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v229 : string = "String::from($0)"
                let v230 : std_string_String = Fable.Core.RustInterop.emitRustExpr v216 v229 
                let _run_target_args'_v226 = v230 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v231 : string = "String::from($0)"
                let v232 : std_string_String = Fable.Core.RustInterop.emitRustExpr v216 v231 
                let _run_target_args'_v226 = v232 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v234 : std_string_String = v216 |> unbox<std_string_String>
                let _run_target_args'_v226 = v234 
                #endif
#if FABLE_COMPILER_PYTHON
                let v238 : std_string_String = v216 |> unbox<std_string_String>
                let _run_target_args'_v226 = v238 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v242 : std_string_String = v216 |> unbox<std_string_String>
                let _run_target_args'_v226 = v242 
                #endif
#else
                let v246 : std_string_String = v216 |> unbox<std_string_String>
                let _run_target_args'_v226 = v246 
                #endif
                let v249 : std_string_String = _run_target_args'_v226 
                let v255 : std_string_String = v53.l3
                let v256 : string = "bowen"
                (* run_target_args'
                let v261 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v262 : string = "&*$0"
                let v263 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v256 v262 
                let _run_target_args'_v261 = v263 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v264 : string = "&*$0"
                let v265 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v256 v264 
                let _run_target_args'_v261 = v265 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v266 : string = "&*$0"
                let v267 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v256 v266 
                let _run_target_args'_v261 = v267 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v269 : Ref<Str> = v256 |> unbox<Ref<Str>>
                let _run_target_args'_v261 = v269 
                #endif
#if FABLE_COMPILER_PYTHON
                let v273 : Ref<Str> = v256 |> unbox<Ref<Str>>
                let _run_target_args'_v261 = v273 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v277 : Ref<Str> = v256 |> unbox<Ref<Str>>
                let _run_target_args'_v261 = v277 
                #endif
#else
                let v281 : Ref<Str> = v256 |> unbox<Ref<Str>>
                let _run_target_args'_v261 = v281 
                #endif
                let v284 : Ref<Str> = _run_target_args'_v261 
                (* run_target_args'
                let v294 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v295 : string = "String::from($0)"
                let v296 : std_string_String = Fable.Core.RustInterop.emitRustExpr v284 v295 
                let _run_target_args'_v294 = v296 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v297 : string = "String::from($0)"
                let v298 : std_string_String = Fable.Core.RustInterop.emitRustExpr v284 v297 
                let _run_target_args'_v294 = v298 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v299 : string = "String::from($0)"
                let v300 : std_string_String = Fable.Core.RustInterop.emitRustExpr v284 v299 
                let _run_target_args'_v294 = v300 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v302 : std_string_String = v284 |> unbox<std_string_String>
                let _run_target_args'_v294 = v302 
                #endif
#if FABLE_COMPILER_PYTHON
                let v306 : std_string_String = v284 |> unbox<std_string_String>
                let _run_target_args'_v294 = v306 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v310 : std_string_String = v284 |> unbox<std_string_String>
                let _run_target_args'_v294 = v310 
                #endif
#else
                let v314 : std_string_String = v284 |> unbox<std_string_String>
                let _run_target_args'_v294 = v314 
                #endif
                let v317 : std_string_String = _run_target_args'_v294 
                let v323 : (std_string_String []) = [|v255; v317|]
                let v324 : string = "$0.to_vec()"
                let v325 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v323 v324 
                let v326 : string = "crate::model::near::rpc::RpcInput { jsonrpc: $0, id: $1, method: $2, params: v325 }"
                let v327 : crate_model_near_rpc_RpcInput = Fable.Core.RustInterop.emitRustExpr struct (v115, v182, v249) v326 
                let v328 : string = "serde_json::to_string(&v327)"
                let v329 : Result<std_string_String, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr () v328 
                let v330 : (serde_json_Error -> std_string_String) = method141()
                (* run_target_args'
                let v332 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v333 : string = "$0.map_err(|x| $1(x))"
                let v334 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v329, v330) v333 
                let _run_target_args'_v332 = v334 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v335 : string = "$0.map_err(|x| $1(x))"
                let v336 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v329, v330) v335 
                let _run_target_args'_v332 = v336 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v337 : string = "$0.map_err(|x| $1(x))"
                let v338 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v329, v330) v337 
                let _run_target_args'_v332 = v338 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v339 : Result<std_string_String, std_string_String> = match v329 with Ok x -> Ok x | Error x -> Error (v330 x)
                let _run_target_args'_v332 = v339 
                #endif
#if FABLE_COMPILER_PYTHON
                let v340 : Result<std_string_String, std_string_String> = match v329 with Ok x -> Ok x | Error x -> Error (v330 x)
                let _run_target_args'_v332 = v340 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v341 : Result<std_string_String, std_string_String> = match v329 with Ok x -> Ok x | Error x -> Error (v330 x)
                let _run_target_args'_v332 = v341 
                #endif
#else
                let v342 : Result<std_string_String, std_string_String> = match v329 with Ok x -> Ok x | Error x -> Error (v330 x)
                let _run_target_args'_v332 = v342 
                #endif
                let v343 : Result<std_string_String, std_string_String> = _run_target_args'_v332 
                let v346 : (std_string_String -> string) = method142()
                let v347 : Result<std_string_String, std_string_String> = method143(v343)
                let v348 : string = "v347.map(|x| v346(x))"
                let v349 : Result<string, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v348 
                let v350 : (string -> struct (string * US23 * string * bool * bool)) = method144()
                let v351 : Result<string, std_string_String> = method145(v349)
                let v352 : string = "v351.map(|x| v350(x))"
                let v353 : Result<struct (string * US23 * string * bool * bool), std_string_String> = Fable.Core.RustInterop.emitRustExpr () v352 
                let func1_from_result = v353 //
                let v354 : _ = func1_from_result
                let v355 : string = $"true; $0 /*"
                let v356 : bool = Fable.Core.RustInterop.emitRustExpr v354 v355 
                let v357 : string = $"*/ }}); //"
                let v358 : bool = Fable.Core.RustInterop.emitRustExpr () v357 
                let v359 : string = $"_func1_from_v47"
                let v360 : Func0<struct (string * unativeint * Heap5), Result<struct (string * US23 * string * bool * bool), std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v359 
                let v361 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
                let v362 : (struct (string * unativeint * Heap5) -> Result<struct (string * US23 * string * bool * bool), std_string_String>) = closure114(v360)
                let v363 : Vec<Result<struct (string * US23 * string * bool * bool), std_string_String>> = Fable.Core.RustInterop.emitRustExpr struct (v46, v362) v361 
                let v364 : string = "v363.into_iter().collect()"
                let v365 : Result<Vec<struct (string * US23 * string * bool * bool)>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v364 
                let v366 : string = "$0?"
                let v367 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v365 v366 
                let v368 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                let v369 : (struct (string * US23 * string * bool * bool) []) = Fable.Core.RustInterop.emitRustExpr v367 v368 
                let v370 : US55 = US55_0(v369)
                US54_0(v370)
            | _ ->
                let v372 : US55 = US55_1
                US54_0(v372)
    let v395 : US56 =
        match v378 with
        | US54_1(v392) -> (* Error *)
            US56_1(v392)
        | US54_0(v379) -> (* Ok *)
            let v390 : (struct (string * US23 * string * bool * bool) []) option =
                match v379 with
                | US55_1 -> (* None *)
                    let v386 : (struct (string * US23 * string * bool * bool) []) option = None
                    v386
                | US55_0(v380) -> (* Some *)
                    let v382 : (struct (string * US23 * string * bool * bool) []) option = Some v380 
                    v382
            US56_0(v390)
    let v407 : Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String> =
        match v395 with
        | US56_1(v401) -> (* Error *)
            let v403 : Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String> = Error v401 
            v403
        | US56_0(v396) -> (* Ok *)
            let v398 : Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String> = Ok v396 
            v398
    let v409 : string = $"%A{v407}"
    let v412 : string = "use_transactions.render (10) / rpc_requests new_arc_memo / result: " + string v409 + ""
    let v413 : int64 = 200L
    let v414 : string = method8(v413, v412)
    let v415 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v416 : bool = Fable.Core.RustInterop.emitRustExpr v414 v415 
    v407
and closure116 () (v0 : (struct (string * US23 * string * bool * bool) []) option) : US56 =
    US56_0(v0)
and method147 () : ((struct (string * US23 * string * bool * bool) []) option -> US56) =
    closure116()
and closure117 () (v0 : std_string_String) : US56 =
    US56_1(v0)
and method148 () : (std_string_String -> US56) =
    closure117()
and closure118 () (v0 : (struct (string * US23 * string * bool * bool) [])) : US55 =
    US55_0(v0)
and method149 () : ((struct (string * US23 * string * bool * bool) []) -> US55) =
    closure118()
and closure115 (v0 : leptos_prelude_ArcMemo<Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String>>) () : Vec<struct (string * US23 * string * bool * bool)> =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : ((struct (string * US23 * string * bool * bool) []) option -> US56) = method147()
    let v4 : (std_string_String -> US56) = method148()
    let v6 : US56 = match v2 with Ok x -> v3 x | Error x -> v4 x
    let v42 : US54 =
        match v6 with
        | US56_1(v39) -> (* Error *)
            US54_1(v39)
        | US56_0(v9) -> (* Ok *)
            let v12 : ((struct (string * US23 * string * bool * bool) []) -> US55) = method149()
            let v13 : US55 option = v9 |> Option.map v12 
            let v33 : US55 = US55_1
            let v34 : US55 = v13 |> Option.defaultValue v33 
            US54_0(v34)
    let v48 : (struct (string * US23 * string * bool * bool) []) =
        match v42 with
        | US54_0(v43) -> (* Ok *)
            match v43 with
            | US55_0(v44) -> (* Some *)
                v44
            | _ ->
                [||]
        | _ ->
            [||]
    let v49 : string = "$0.to_vec()"
    let v50 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v48 v49 
    let v52 : string = $"%A{v50}"
    let v55 : string = "use_transactions.render (11) / rpc_requests' new_arc_memo / result: " + string v52 + ""
    let v56 : int64 = 200L
    let v57 : string = method8(v56, v55)
    let v58 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v59 : bool = Fable.Core.RustInterop.emitRustExpr v57 v58 
    v50
and closure121 () (v0 : crate_model_near_rpc_TransferDetail) : struct (std_string_String * std_string_String option * float option * std_string_String option) =
    let v1 : string = "$0.deposit"
    let v2 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "$0.args"
    let v4 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v0 v3 
    let v5 : string = "$0.gas"
    let v6 : float option = Fable.Core.RustInterop.emitRustExpr v0 v5 
    let v7 : string = "$0.method_name"
    let v8 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v0 v7 
    struct (v2, v4, v6, v8)
and method151 (v0 : Func0<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>, std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>>) : Func0<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>, std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>> =
    v0
and closure122 (v0 : Func0<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>, std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>>) (v1 : std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>) : std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> =
    let v2 : Func0<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>, std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>> = method151(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method152 (v0 : Func0<crate_model_near_rpc_Receipt, struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)>) : Func0<crate_model_near_rpc_Receipt, struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)> =
    v0
and closure123 (v0 : Func0<crate_model_near_rpc_Receipt, struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)>) (v1 : crate_model_near_rpc_Receipt) : struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) =
    let v2 : Func0<crate_model_near_rpc_Receipt, struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)> = method152(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []), v7 : std_string_String, v8 : (std_string_String []), v9 : (std_string_String []), v10 : std_string_String, v11 : std_string_String, v12 : std_string_String, v13 : std_string_String) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9, v10, v11, v12, v13)
and method153 (v0 : Func0<crate_model_near_rpc_GasProfile, struct (std_string_String * std_string_String * std_string_String)>) : Func0<crate_model_near_rpc_GasProfile, struct (std_string_String * std_string_String * std_string_String)> =
    v0
and closure124 (v0 : Func0<crate_model_near_rpc_GasProfile, struct (std_string_String * std_string_String * std_string_String)>) (v1 : crate_model_near_rpc_GasProfile) : struct (std_string_String * std_string_String * std_string_String) =
    let v2 : Func0<crate_model_near_rpc_GasProfile, struct (std_string_String * std_string_String * std_string_String)> = method153(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : std_string_String, v7 : std_string_String) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7)
and method155 (v0 : Func0<crate_model_near_rpc_Proof, struct (std_string_String * std_string_String)>) : Func0<crate_model_near_rpc_Proof, struct (std_string_String * std_string_String)> =
    v0
and closure126 (v0 : Func0<crate_model_near_rpc_Proof, struct (std_string_String * std_string_String)>) (v1 : crate_model_near_rpc_Proof) : struct (std_string_String * std_string_String) =
    let v2 : Func0<crate_model_near_rpc_Proof, struct (std_string_String * std_string_String)> = method155(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : std_string_String) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6)
and closure125 () (v0 : Vec<crate_model_near_rpc_Proof>) : (struct (std_string_String * std_string_String) []) =
    let v1 : unit = ()
    let v2 : string = $"true; let _func1_from_v1 = Func1::from(move |value| {{ //"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr () v2 
    let v4 : string = $"value"
    let v5 : crate_model_near_rpc_Proof = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = "$0.direction"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : string = "$0.hash"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5 v8 
    let func1_from_result = struct (v7, v9) //
    let v10 : _ = func1_from_result
    let v11 : string = $"true; $0 /*"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr v10 v11 
    let v13 : string = $"*/ }}); //"
    let v14 : bool = Fable.Core.RustInterop.emitRustExpr () v13 
    let v15 : string = $"_func1_from_v1"
    let v16 : Func0<crate_model_near_rpc_Proof, struct (std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v18 : (crate_model_near_rpc_Proof -> struct (std_string_String * std_string_String)) = closure126(v16)
    let v19 : Vec<struct (std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v0, v18) v17 
    let v20 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v21 : (struct (std_string_String * std_string_String) []) = Fable.Core.RustInterop.emitRustExpr v19 v20 
    v21
and method154 () : (Vec<crate_model_near_rpc_Proof> -> (struct (std_string_String * std_string_String) [])) =
    closure125()
and method156 (v0 : Func0<crate_model_near_rpc_ReceiptsOutcome, struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))>) : Func0<crate_model_near_rpc_ReceiptsOutcome, struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))> =
    v0
and closure127 (v0 : Func0<crate_model_near_rpc_ReceiptsOutcome, struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))>) (v1 : crate_model_near_rpc_ReceiptsOutcome) : struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) =
    let v2 : Func0<crate_model_near_rpc_ReceiptsOutcome, struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))> = method156(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : std_string_String, v7 : std_string_String, v8 : uint64, v9 : (std_string_String []), v10 : (struct (std_string_String * std_string_String * std_string_String) []), v11 : uint8, v12 : (std_string_String []), v13 : std_collections_HashMap<std_string_String, std_string_String>, v14 : std_string_String option, v15 : (struct (std_string_String * std_string_String) [])) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15)
and closure120 () (v0 : crate_model_near_rpc_TransactionStatus) : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) =
    let v1 : string = "$0.receipts"
    let v2 : Vec<crate_model_near_rpc_Receipt> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let v7 : crate_model_near_rpc_Receipt = Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : string = "$0.predecessor_id"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v10 : string = "$0.receipt"
    let v11 : crate_model_near_rpc_ReceiptDetail = Fable.Core.RustInterop.emitRustExpr v7 v10 
    let v12 : string = "$0.action"
    let v13 : crate_model_near_rpc_ActionDetail = Fable.Core.RustInterop.emitRustExpr v11 v12 
    let v14 : string = "$0.actions"
    let v15 : Vec<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>> = Fable.Core.RustInterop.emitRustExpr v13 v14 
    let v16 : unit = ()
    let v17 : string = $"true; let _func1_from_v16 = Func1::from(move |value| {{ //"
    let v18 : bool = Fable.Core.RustInterop.emitRustExpr () v17 
    let v19 : string = $"value"
    let v20 : std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail> = Fable.Core.RustInterop.emitRustExpr () v19 
    let v21 : string = "$0.into_iter().map(|(k, v)| (k, $1(v))).collect()"
    let v22 : (crate_model_near_rpc_TransferDetail -> struct (std_string_String * std_string_String option * float option * std_string_String option)) = closure121()
    let v23 : std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr struct (v20, v22) v21 
    let func1_from_result = v23 //
    let v24 : _ = func1_from_result
    let v25 : string = $"true; $0 /*"
    let v26 : bool = Fable.Core.RustInterop.emitRustExpr v24 v25 
    let v27 : string = $"*/ }}); //"
    let v28 : bool = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : string = $"_func1_from_v16"
    let v30 : Func0<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>, std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>> = Fable.Core.RustInterop.emitRustExpr () v29 
    let v31 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v32 : (std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail> -> std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>) = closure122(v30)
    let v33 : Vec<std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>> = Fable.Core.RustInterop.emitRustExpr struct (v15, v32) v31 
    let v34 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v35 : (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) = Fable.Core.RustInterop.emitRustExpr v33 v34 
    let v36 : string = "$0.gas_price"
    let v37 : std_string_String = Fable.Core.RustInterop.emitRustExpr v13 v36 
    let v38 : string = "$0.input_data_ids"
    let v39 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v13 v38 
    let v40 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v41 : (std_string_String []) = Fable.Core.RustInterop.emitRustExpr v39 v40 
    let v42 : string = "$0.output_data_receivers"
    let v43 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v13 v42 
    let v44 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v45 : (std_string_String []) = Fable.Core.RustInterop.emitRustExpr v43 v44 
    let v46 : string = "$0.signer_id"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v13 v46 
    let v48 : string = "$0.signer_public_key"
    let v49 : std_string_String = Fable.Core.RustInterop.emitRustExpr v13 v48 
    let v50 : string = "$0.receipt_id"
    let v51 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v50 
    let v52 : string = "$0.receiver_id"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v52 
    let func1_from_result = struct (v9, v35, v37, v41, v45, v47, v49, v51, v53) //
    let v54 : _ = func1_from_result
    let v55 : string = $"true; $0 /*"
    let v56 : bool = Fable.Core.RustInterop.emitRustExpr v54 v55 
    let v57 : string = $"*/ }}); //"
    let v58 : bool = Fable.Core.RustInterop.emitRustExpr () v57 
    let v59 : string = $"_func1_from_v3"
    let v60 : Func0<crate_model_near_rpc_Receipt, struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v59 
    let v61 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v62 : (crate_model_near_rpc_Receipt -> struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)) = closure123(v60)
    let v63 : Vec<struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v2, v62) v61 
    let v64 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v65 : (struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) = Fable.Core.RustInterop.emitRustExpr v63 v64 
    let v66 : string = "$0.receipts_outcome"
    let v67 : Vec<crate_model_near_rpc_ReceiptsOutcome> = Fable.Core.RustInterop.emitRustExpr v0 v66 
    let v68 : unit = ()
    let v69 : string = $"true; let _func1_from_v68 = Func1::from(move |value| {{ //"
    let v70 : bool = Fable.Core.RustInterop.emitRustExpr () v69 
    let v71 : string = $"value"
    let v72 : crate_model_near_rpc_ReceiptsOutcome = Fable.Core.RustInterop.emitRustExpr () v71 
    let v73 : string = "$0.block_hash"
    let v74 : std_string_String = Fable.Core.RustInterop.emitRustExpr v72 v73 
    let v75 : string = "$0.id"
    let v76 : std_string_String = Fable.Core.RustInterop.emitRustExpr v72 v75 
    let v77 : string = "$0.outcome"
    let v78 : crate_model_near_rpc_OutcomeDetail = Fable.Core.RustInterop.emitRustExpr v72 v77 
    let v79 : string = "$0.executor_id"
    let v80 : std_string_String = Fable.Core.RustInterop.emitRustExpr v78 v79 
    let v81 : string = "$0.gas_burnt"
    let v82 : uint64 = Fable.Core.RustInterop.emitRustExpr v78 v81 
    let v83 : string = "$0.logs"
    let v84 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v78 v83 
    let v85 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v86 : (std_string_String []) = Fable.Core.RustInterop.emitRustExpr v84 v85 
    let v87 : string = "$0.metadata"
    let v88 : crate_model_near_rpc_Metadata = Fable.Core.RustInterop.emitRustExpr v78 v87 
    let v89 : string = "$0.gas_profile"
    let v90 : Vec<crate_model_near_rpc_GasProfile> = Fable.Core.RustInterop.emitRustExpr v88 v89 
    let v91 : unit = ()
    let v92 : string = $"true; let _func1_from_v91 = Func1::from(move |value| {{ //"
    let v93 : bool = Fable.Core.RustInterop.emitRustExpr () v92 
    let v94 : string = $"value"
    let v95 : crate_model_near_rpc_GasProfile = Fable.Core.RustInterop.emitRustExpr () v94 
    let v96 : string = "$0.cost"
    let v97 : std_string_String = Fable.Core.RustInterop.emitRustExpr v95 v96 
    let v98 : string = "$0.cost_category"
    let v99 : std_string_String = Fable.Core.RustInterop.emitRustExpr v95 v98 
    let v100 : string = "$0.gas_used"
    let v101 : std_string_String = Fable.Core.RustInterop.emitRustExpr v95 v100 
    let func1_from_result = struct (v97, v99, v101) //
    let v102 : _ = func1_from_result
    let v103 : string = $"true; $0 /*"
    let v104 : bool = Fable.Core.RustInterop.emitRustExpr v102 v103 
    let v105 : string = $"*/ }}); //"
    let v106 : bool = Fable.Core.RustInterop.emitRustExpr () v105 
    let v107 : string = $"_func1_from_v91"
    let v108 : Func0<crate_model_near_rpc_GasProfile, struct (std_string_String * std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v107 
    let v109 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v110 : (crate_model_near_rpc_GasProfile -> struct (std_string_String * std_string_String * std_string_String)) = closure124(v108)
    let v111 : Vec<struct (std_string_String * std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v90, v110) v109 
    let v112 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v113 : (struct (std_string_String * std_string_String * std_string_String) []) = Fable.Core.RustInterop.emitRustExpr v111 v112 
    let v114 : string = "$0.version"
    let v115 : uint8 = Fable.Core.RustInterop.emitRustExpr v88 v114 
    let v116 : string = "$0.receipt_ids"
    let v117 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v78 v116 
    let v118 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v119 : (std_string_String []) = Fable.Core.RustInterop.emitRustExpr v117 v118 
    let v120 : string = "$0.status"
    let v121 : std_collections_HashMap<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr v78 v120 
    let v122 : string = "$0.tokens_burnt"
    let v123 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v78 v122 
    let v124 : string = "$0.proof"
    let v125 : Vec<crate_model_near_rpc_Proof> option = Fable.Core.RustInterop.emitRustExpr v72 v124 
    let v128 : (Vec<crate_model_near_rpc_Proof> -> (struct (std_string_String * std_string_String) [])) = method154()
    let v129 : (struct (std_string_String * std_string_String) []) option = v125 |> Option.map v128 
    let v167 : (struct (std_string_String * std_string_String) []) = [||]
    let v169 : (struct (std_string_String * std_string_String) []) = v129 |> Option.defaultValue v167 
    let func1_from_result = struct (v74, v76, v80, v82, v86, v113, v115, v119, v121, v123, v169) //
    let v172 : _ = func1_from_result
    let v173 : string = $"true; $0 /*"
    let v174 : bool = Fable.Core.RustInterop.emitRustExpr v172 v173 
    let v175 : string = $"*/ }}); //"
    let v176 : bool = Fable.Core.RustInterop.emitRustExpr () v175 
    let v177 : string = $"_func1_from_v68"
    let v178 : Func0<crate_model_near_rpc_ReceiptsOutcome, struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))> = Fable.Core.RustInterop.emitRustExpr () v177 
    let v179 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v180 : (crate_model_near_rpc_ReceiptsOutcome -> struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))) = closure127(v178)
    let v181 : Vec<struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))> = Fable.Core.RustInterop.emitRustExpr struct (v67, v180) v179 
    let v182 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v183 : (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) []) = Fable.Core.RustInterop.emitRustExpr v181 v182 
    struct (v65, v183)
and method150 () : (crate_model_near_rpc_TransactionStatus -> struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) []))) =
    closure120()
and closure129 () (v0 : crate_model_near_rpc_ErrorCauseInfo) : struct (std_string_String option * std_string_String option) =
    let v1 : string = "$0.error_message"
    let v2 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "$0.requested_transaction_hash"
    let v4 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v0 v3 
    struct (v2, v4)
and method158 () : (crate_model_near_rpc_ErrorCauseInfo -> struct (std_string_String option * std_string_String option)) =
    closure129()
and closure128 () (v0 : crate_model_near_rpc_RpcError) : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) =
    let v1 : string = "$0.name"
    let v2 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "$0.cause"
    let v4 : crate_model_near_rpc_ErrorCause = Fable.Core.RustInterop.emitRustExpr v0 v3 
    let v5 : string = "$0.name"
    let v6 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : string = "$0.info"
    let v8 : crate_model_near_rpc_ErrorCauseInfo option = Fable.Core.RustInterop.emitRustExpr v4 v7 
    let v11 : (crate_model_near_rpc_ErrorCauseInfo -> struct (std_string_String option * std_string_String option)) = method158()
    let v12 : struct (std_string_String option * std_string_String option) option = v8 |> Option.map v11 
    let v33 : string = "$0.code"
    let v34 : int32 = Fable.Core.RustInterop.emitRustExpr v0 v33 
    let v35 : string = "$0.message"
    let v36 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v35 
    let v37 : string = "$0.data"
    let v38 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v37 
    struct (v2, v6, v12, v34, v36, v38)
and method157 () : (crate_model_near_rpc_RpcError -> struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String)) =
    closure128()
and closure119 () (v0 : crate_model_near_rpc_RpcResponse) : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) =
    let v1 : string = "$0.jsonrpc"
    let v2 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "$0.result"
    let v4 : crate_model_near_rpc_TransactionStatus option = Fable.Core.RustInterop.emitRustExpr v0 v3 
    let v7 : (crate_model_near_rpc_TransactionStatus -> struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) []))) = method150()
    let v8 : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option = v4 |> Option.map v7 
    let v208 : string = "$0.error"
    let v209 : crate_model_near_rpc_RpcError option = Fable.Core.RustInterop.emitRustExpr v0 v208 
    let v212 : (crate_model_near_rpc_RpcError -> struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String)) = method157()
    let v213 : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option = v209 |> Option.map v212 
    let v268 : string = "$0.id"
    let v269 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v0 v268 
    struct (v2, v8, v213, v269)
and closure133 () (v0 : crate_model_near_rpc_RpcResponse) : crate_model_near_rpc_RpcResponse option =
    let v2 : crate_model_near_rpc_RpcResponse option = Some v0 
    v2
and method161 () : (crate_model_near_rpc_RpcResponse -> crate_model_near_rpc_RpcResponse option) =
    closure133()
and method162 (v0 : Result<crate_model_near_rpc_RpcResponse, std_string_String>) : Result<crate_model_near_rpc_RpcResponse, std_string_String> =
    v0
and closure132 (v0 : US35, v1 : US41, v2 : int32) struct (v3 : string, v4 : US23, v5 : string, v6 : bool, v7 : bool) : Result<crate_model_near_rpc_RpcResponse option, std_string_String> =
    let v62 : US29 =
        match v0 with
        | US35_1 -> (* None *)
            US29_1
        | US35_0(v8) -> (* Some *)
            let v58 : US30 =
                match v8 with
                | US36_1(v55) -> (* Error *)
                    US30_1(v55)
                | US36_0(v9) -> (* Ok *)
                    let v10 : US25 option = v9 |> Array.tryItem v2 
                    let v13 : (US25 -> US32) = method87()
                    let v14 : US32 option = v10 |> Option.map v13 
                    let v34 : US32 = US32_1
                    let v35 : US32 = v14 |> Option.defaultValue v34 
                    let v45 : US25 =
                        match v35 with
                        | US32_0(v39) -> (* Some *)
                            match v39 with
                            | US25_0(v40) -> (* Some *)
                                US25_0(v40)
                            | _ ->
                                US25_1
                        | _ ->
                            US25_1
                    let v53 : US31 =
                        match v45 with
                        | US25_1 -> (* None *)
                            US31_1
                        | US25_0(v46) -> (* Some *)
                            let v47 : std_string_String = v46.l0
                            let v48 : string = "fable_library_rust::String_::fromString($0)"
                            let v49 : string = Fable.Core.RustInterop.emitRustExpr v47 v48 
                            US31_0(v49)
                    US30_0(v53)
            US29_0(v58)
    let v64 : string = $"%A{struct (v3, v4, v5, v6, v7)}"
    let v67 : int64 = 400L
    let v68 : string = method8(v67, v64)
    let v70 : string = $"%A{v62}"
    let v73 : int64 = 400L
    let v74 : string = method8(v73, v70)
    let v75 : string = "state_core.use_request (15) / result memo / request: " + string v68 + " / state_data: " + string v74 + ""
    let v76 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v77 : bool = Fable.Core.RustInterop.emitRustExpr v75 v76 
    let v79 : string = $"%A{v1}"
    let v82 : int64 = 400L
    let v83 : string = method8(v82, v79)
    let v84 : string = "state_core.use_request (16) / effect / json: " + string v83 + ""
    let v85 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v86 : bool = Fable.Core.RustInterop.emitRustExpr v84 v85 
    let v129 : US31 =
        match v1 with
        | US41_1(v126) -> (* Error *)
            US31_1
        | US41_0(v87) -> (* Ok *)
            let v88 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
            let v89 : (US31 []) = Fable.Core.RustInterop.emitRustExpr v87 v88 
            let v90 : US31 option = v89 |> Array.tryItem v2 
            let v93 : (US31 -> US42) = method108()
            let v94 : US42 option = v90 |> Option.map v93 
            let v114 : US42 = US42_1
            let v115 : US42 = v94 |> Option.defaultValue v114 
            match v115 with
            | US42_0(v119) -> (* Some *)
                match v119 with
                | US31_0(v120) -> (* Some *)
                    US31_0(v120)
                | _ ->
                    US31_1
            | _ ->
                US31_1
    match v129 with
    | US31_0(v130) -> (* Some *)
        let v131 : string = method41(v130)
        (* run_target_args'
        let v136 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v137 : string = "&*$0"
        let v138 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v131 v137 
        let _run_target_args'_v136 = v138 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v139 : string = "&*$0"
        let v140 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v131 v139 
        let _run_target_args'_v136 = v140 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v141 : string = "&*$0"
        let v142 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v131 v141 
        let _run_target_args'_v136 = v142 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v144 : Ref<Str> = v131 |> unbox<Ref<Str>>
        let _run_target_args'_v136 = v144 
        #endif
#if FABLE_COMPILER_PYTHON
        let v148 : Ref<Str> = v131 |> unbox<Ref<Str>>
        let _run_target_args'_v136 = v148 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v152 : Ref<Str> = v131 |> unbox<Ref<Str>>
        let _run_target_args'_v136 = v152 
        #endif
#else
        let v156 : Ref<Str> = v131 |> unbox<Ref<Str>>
        let _run_target_args'_v136 = v156 
        #endif
        let v159 : Ref<Str> = _run_target_args'_v136 
        let v165 : string = "serde_json::from_str(&$0)"
        let v166 : Result<crate_model_near_rpc_RpcResponse, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v159 v165 
        let v167 : (serde_json_Error -> std_string_String) = method42()
        (* run_target_args'
        let v169 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v170 : string = "$0.map_err(|x| $1(x))"
        let v171 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v166, v167) v170 
        let _run_target_args'_v169 = v171 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v172 : string = "$0.map_err(|x| $1(x))"
        let v173 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v166, v167) v172 
        let _run_target_args'_v169 = v173 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v174 : string = "$0.map_err(|x| $1(x))"
        let v175 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v166, v167) v174 
        let _run_target_args'_v169 = v175 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v176 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v166 with Ok x -> Ok x | Error x -> Error (v167 x)
        let _run_target_args'_v169 = v176 
        #endif
#if FABLE_COMPILER_PYTHON
        let v177 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v166 with Ok x -> Ok x | Error x -> Error (v167 x)
        let _run_target_args'_v169 = v177 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v178 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v166 with Ok x -> Ok x | Error x -> Error (v167 x)
        let _run_target_args'_v169 = v178 
        #endif
#else
        let v179 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v166 with Ok x -> Ok x | Error x -> Error (v167 x)
        let _run_target_args'_v169 = v179 
        #endif
        let v180 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = _run_target_args'_v169 
        let v183 : (crate_model_near_rpc_RpcResponse -> crate_model_near_rpc_RpcResponse option) = method161()
        let v184 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = method162(v180)
        let v185 : string = "v184.map(|x| v183(x))"
        let v186 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v185 
        v186
    | _ ->
        match v62 with
        | US29_0(v187) -> (* Some *)
            match v187 with
            | US30_0(v188) -> (* Ok *)
                match v188 with
                | US31_0(v189) -> (* Some *)
                    let v190 : string = method41(v189)
                    (* run_target_args'
                    let v195 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v196 : string = "&*$0"
                    let v197 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v190 v196 
                    let _run_target_args'_v195 = v197 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v198 : string = "&*$0"
                    let v199 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v190 v198 
                    let _run_target_args'_v195 = v199 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v200 : string = "&*$0"
                    let v201 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v190 v200 
                    let _run_target_args'_v195 = v201 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v203 : Ref<Str> = v190 |> unbox<Ref<Str>>
                    let _run_target_args'_v195 = v203 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v207 : Ref<Str> = v190 |> unbox<Ref<Str>>
                    let _run_target_args'_v195 = v207 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v211 : Ref<Str> = v190 |> unbox<Ref<Str>>
                    let _run_target_args'_v195 = v211 
                    #endif
#else
                    let v215 : Ref<Str> = v190 |> unbox<Ref<Str>>
                    let _run_target_args'_v195 = v215 
                    #endif
                    let v218 : Ref<Str> = _run_target_args'_v195 
                    let v224 : string = "serde_json::from_str(&$0)"
                    let v225 : Result<crate_model_near_rpc_RpcResponse, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v218 v224 
                    let v226 : (serde_json_Error -> std_string_String) = method42()
                    (* run_target_args'
                    let v228 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v229 : string = "$0.map_err(|x| $1(x))"
                    let v230 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v225, v226) v229 
                    let _run_target_args'_v228 = v230 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v231 : string = "$0.map_err(|x| $1(x))"
                    let v232 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v225, v226) v231 
                    let _run_target_args'_v228 = v232 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v233 : string = "$0.map_err(|x| $1(x))"
                    let v234 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v225, v226) v233 
                    let _run_target_args'_v228 = v234 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v235 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v225 with Ok x -> Ok x | Error x -> Error (v226 x)
                    let _run_target_args'_v228 = v235 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v236 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v225 with Ok x -> Ok x | Error x -> Error (v226 x)
                    let _run_target_args'_v228 = v236 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v237 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v225 with Ok x -> Ok x | Error x -> Error (v226 x)
                    let _run_target_args'_v228 = v237 
                    #endif
#else
                    let v238 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v225 with Ok x -> Ok x | Error x -> Error (v226 x)
                    let _run_target_args'_v228 = v238 
                    #endif
                    let v239 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = _run_target_args'_v228 
                    let v242 : (crate_model_near_rpc_RpcResponse -> crate_model_near_rpc_RpcResponse option) = method161()
                    let v243 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = method162(v239)
                    let v244 : string = "v243.map(|x| v242(x))"
                    let v245 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v244 
                    v245
                | _ ->
                    let v247 : string = $"%A{struct (v129, v62)}"
                    let v250 : string = "state_core.use_request (17) / json Error / value: " + string v247 + ""
                    let v251 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                    let v252 : bool = Fable.Core.RustInterop.emitRustExpr v250 v251 
                    let v254 : crate_model_near_rpc_RpcResponse option = None
                    let v258 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Ok v254 
                    v258
            | _ ->
                let v263 : string = $"%A{struct (v129, v62)}"
                let v266 : string = "state_core.use_request (17) / json Error / value: " + string v263 + ""
                let v267 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v268 : bool = Fable.Core.RustInterop.emitRustExpr v266 v267 
                let v270 : crate_model_near_rpc_RpcResponse option = None
                let v274 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Ok v270 
                v274
        | _ ->
            let v279 : string = $"%A{struct (v129, v62)}"
            let v282 : string = "state_core.use_request (17) / json Error / value: " + string v279 + ""
            let v283 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v284 : bool = Fable.Core.RustInterop.emitRustExpr v282 v283 
            let v286 : crate_model_near_rpc_RpcResponse option = None
            let v290 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Ok v286 
            v290
and closure131 (v0 : US35, v1 : US41) (v2 : int32) : (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_rpc_RpcResponse option, std_string_String>) =
    closure132(v0, v1, v2)
and method160 (v0 : US35, v1 : US41) : (int32 -> (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_rpc_RpcResponse option, std_string_String>)) =
    closure131(v0, v1)
and closure130 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>, v1 : leptos_prelude_ArcMemo<Result<Vec<Heap4 option>, std_string_String> option>, v2 : leptos_prelude_ArcLocalResource<Result<Vec<string option>, std_string_String>>, v3 : leptos_prelude_Action<Heap4, Result<Vec<unit>, std_string_String>>) () : (Result<crate_model_near_rpc_RpcResponse option, std_string_String> []) =
    let v4 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v5 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v4 
    let v7 : string = $"%A{v5}"
    let v10 : string = "state_core.use_requests (13) / result memo / requests: " + string v7 + ""
    let v11 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr v10 v11 
    let v13 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v14 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v1 v13 
    let v17 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v18 : US26 option = v14 |> Option.map v17 
    let v38 : US26 = US26_1
    let v39 : US26 = v18 |> Option.defaultValue v38 
    let v97 : US35 =
        match v39 with
        | US26_1 -> (* None *)
            US35_1
        | US26_0(v43) -> (* Some *)
            let v44 : (Vec<Heap4 option> -> US24) = method83()
            let v45 : (std_string_String -> US24) = method84()
            let v47 : US24 = match v43 with Ok x -> v44 x | Error x -> v45 x
            let v93 : US36 =
                match v47 with
                | US24_1(v90) -> (* Error *)
                    US36_1(v90)
                | US24_0(v50) -> (* Ok *)
                    let v51 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v52 : bool = Fable.Core.RustInterop.emitRustExpr v50 v51 
                    let v53 : string = "x"
                    let v54 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v53 
                    let v57 : (Heap4 -> US25) = method85()
                    let v58 : US25 option = v54 |> Option.map v57 
                    let v78 : US25 = US25_1
                    let v79 : US25 = v58 |> Option.defaultValue v78 
                    let v83 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v84 : bool = Fable.Core.RustInterop.emitRustExpr v79 v83 
                    let v85 : string = "_vec_map"
                    let v86 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v85 
                    let v87 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v88 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v86 v87 
                    US36_0(v88)
            US35_0(v93)
    let v99 : string = $"%A{v97}"
    let v102 : int64 = 400L
    let v103 : string = method8(v102, v99)
    let v104 : string = "state_core.use_request (14) / result_memo / state_data: " + string v103 + ""
    let v105 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v106 : bool = Fable.Core.RustInterop.emitRustExpr v104 v105 
    let v107 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v108 : Result<Vec<string option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v2 v107 
    let v111 : (Result<Vec<string option>, std_string_String> -> US37) = method103()
    let v112 : US37 option = v108 |> Option.map v111 
    let v132 : US37 = US37_1
    let v133 : US37 = v112 |> Option.defaultValue v132 
    let v147 : US38 =
        match v133 with
        | US37_1 -> (* None *)
            US38_1
        | US37_0(v137) -> (* Some *)
            let v138 : (Vec<string option> -> US39) = method104()
            let v139 : (std_string_String -> US39) = method105()
            let v141 : US39 = match v137 with Ok x -> v138 x | Error x -> v139 x
            US38_0(v141)
    let v194 : US40 =
        match v147 with
        | US38_1 -> (* None *)
            US40_1
        | US38_0(v148) -> (* Some *)
            let v190 : US41 =
                match v148 with
                | US39_1(v187) -> (* Error *)
                    US41_1(v187)
                | US39_0(v149) -> (* Ok *)
                    let v150 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v151 : bool = Fable.Core.RustInterop.emitRustExpr v149 v150 
                    let v152 : string = "x"
                    let v153 : string option = Fable.Core.RustInterop.emitRustExpr () v152 
                    let v156 : (string -> US31) = method106()
                    let v157 : US31 option = v153 |> Option.map v156 
                    let v177 : US31 = US31_1
                    let v178 : US31 = v157 |> Option.defaultValue v177 
                    let v182 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v183 : bool = Fable.Core.RustInterop.emitRustExpr v178 v182 
                    let v184 : string = "_vec_map"
                    let v185 : Vec<US31> = Fable.Core.RustInterop.emitRustExpr () v184 
                    US41_0(v185)
            US40_0(v190)
    let v195 : (US31 []) = [||]
    let v196 : string = "$0.to_vec()"
    let v197 : Vec<US31> = Fable.Core.RustInterop.emitRustExpr v195 v196 
    let v201 : US41 =
        match v194 with
        | US40_1 -> (* None *)
            US41_0(v197)
        | US40_0(v198) -> (* Some *)
            v198
    let v284 : bool =
        match v201 with
        | US41_1(v282) -> (* Error *)
            false
        | US41_0(v202) -> (* Ok *)
            let v203 : string = "true; $0.into_iter().for_each(|x| { //"
            let v204 : bool = Fable.Core.RustInterop.emitRustExpr v202 v203 
            let v205 : string = "x"
            let v206 : US31 = Fable.Core.RustInterop.emitRustExpr () v205 
            let v277 : bool =
                match v206 with
                | US31_0(v207) -> (* Some *)
                    (* run_target_args'
                    let v212 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v213 : string = "&*$0"
                    let v214 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v207 v213 
                    let _run_target_args'_v212 = v214 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v215 : string = "&*$0"
                    let v216 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v207 v215 
                    let _run_target_args'_v212 = v216 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v217 : string = "&*$0"
                    let v218 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v207 v217 
                    let _run_target_args'_v212 = v218 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v220 : Ref<Str> = v207 |> unbox<Ref<Str>>
                    let _run_target_args'_v212 = v220 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v224 : Ref<Str> = v207 |> unbox<Ref<Str>>
                    let _run_target_args'_v212 = v224 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v228 : Ref<Str> = v207 |> unbox<Ref<Str>>
                    let _run_target_args'_v212 = v228 
                    #endif
#else
                    let v232 : Ref<Str> = v207 |> unbox<Ref<Str>>
                    let _run_target_args'_v212 = v232 
                    #endif
                    let v235 : Ref<Str> = _run_target_args'_v212 
                    (* run_target_args'
                    let v245 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v246 : string = "String::from($0)"
                    let v247 : std_string_String = Fable.Core.RustInterop.emitRustExpr v235 v246 
                    let _run_target_args'_v245 = v247 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v248 : string = "String::from($0)"
                    let v249 : std_string_String = Fable.Core.RustInterop.emitRustExpr v235 v248 
                    let _run_target_args'_v245 = v249 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v250 : string = "String::from($0)"
                    let v251 : std_string_String = Fable.Core.RustInterop.emitRustExpr v235 v250 
                    let _run_target_args'_v245 = v251 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v253 : std_string_String = v235 |> unbox<std_string_String>
                    let _run_target_args'_v245 = v253 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v257 : std_string_String = v235 |> unbox<std_string_String>
                    let _run_target_args'_v245 = v257 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v261 : std_string_String = v235 |> unbox<std_string_String>
                    let _run_target_args'_v245 = v261 
                    #endif
#else
                    let v265 : std_string_String = v235 |> unbox<std_string_String>
                    let _run_target_args'_v245 = v265 
                    #endif
                    let v268 : std_string_String = _run_target_args'_v245 
                    let v274 : Heap4 = {l0 = v268} : Heap4
                    let v275 : string = "true; leptos::prelude::Action::dispatch(&$0, $1.clone())"
                    let v276 : bool = Fable.Core.RustInterop.emitRustExpr struct (v3, v274) v275 
                    true
                | _ ->
                    false
            let v278 : string = $"true"
            let v279 : bool = Fable.Core.RustInterop.emitRustExpr () v278 
            let v280 : string = "true; }); //"
            let v281 : bool = Fable.Core.RustInterop.emitRustExpr () v280 
            false
    let v285 : (int32 -> (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_rpc_RpcResponse option, std_string_String>)) = method160(v97, v201)
    let v286 : Vec<struct (string * US23 * string * bool * bool)> = method96(v5)
    let v287 : string = "v286.iter().enumerate().map(|(i, x)| v285(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v288 : Vec<Result<crate_model_near_rpc_RpcResponse option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v287 
    let v289 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v290 : (Result<crate_model_near_rpc_RpcResponse option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v288 v289 
    let v292 : string = $"%A{v290}"
    let v295 : string = "state_core.use_requests (18) / result_func func0 / result: " + string v292 + ""
    let v296 : int64 = 200L
    let v297 : string = method8(v296, v295)
    let v298 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v299 : bool = Fable.Core.RustInterop.emitRustExpr v297 v298 
    v290
and method164 (v0 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option))) : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option)) =
    v0
and closure135 (v0 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option))) (v1 : crate_model_near_rpc_RpcResponse option) : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option =
    let v3 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option)) = method164(v0)
    let v4 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option = v1 |> Option.map v3 
    v4
and method163 (v0 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option))) : (crate_model_near_rpc_RpcResponse option -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option) =
    closure135(v0)
and method165 (v0 : Result<crate_model_near_rpc_RpcResponse option, std_string_String>) : Result<crate_model_near_rpc_RpcResponse option, std_string_String> =
    v0
and method166 (v0 : Func0<Result<crate_model_near_rpc_RpcResponse option, std_string_String>, Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>) : Func0<Result<crate_model_near_rpc_RpcResponse option, std_string_String>, Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> =
    v0
and closure136 (v0 : Func0<Result<crate_model_near_rpc_RpcResponse option, std_string_String>, Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>) (v1 : Result<crate_model_near_rpc_RpcResponse option, std_string_String>) : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> =
    let v2 : Func0<Result<crate_model_near_rpc_RpcResponse option, std_string_String>, Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> = method166(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure134 (v0 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option)), v1 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>>, v2 : leptos_prelude_ArcLocalResource<Result<Vec<Heap4 option>, std_string_String>>, v3 : leptos_prelude_ArcMemo<(Result<crate_model_near_rpc_RpcResponse option, std_string_String> [])>) () : Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> =
    let v4 : string = $"leptos::prelude::Submission::pending(&$0.into()).into()"
    let v5 : leptos_prelude_ArcSignal<bool> = Fable.Core.RustInterop.emitRustExpr v1 v4 
    let v6 : string = $"leptos::prelude::ArcSignal::get(&$0)"
    let v7 : bool = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : string = $"leptos::prelude::Submission::pending(&$0.into()).into()"
    let v9 : leptos_prelude_ArcSignal<bool> = Fable.Core.RustInterop.emitRustExpr v2 v8 
    let v10 : string = $"leptos::prelude::ArcSignal::get(&$0)"
    let v11 : bool = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v13 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v1 v12 
    let v16 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v17 : US2 option = v13 |> Option.map v16 
    let v37 : US2 = US2_1
    let v38 : US2 = v17 |> Option.defaultValue v37 
    let v42 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v43 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v2 v42 
    let v46 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v47 : US26 option = v43 |> Option.map v46 
    let v67 : US26 = US26_1
    let v68 : US26 = v47 |> Option.defaultValue v67 
    let v126 : US35 =
        match v68 with
        | US26_1 -> (* None *)
            US35_1
        | US26_0(v72) -> (* Some *)
            let v73 : (Vec<Heap4 option> -> US24) = method83()
            let v74 : (std_string_String -> US24) = method84()
            let v76 : US24 = match v72 with Ok x -> v73 x | Error x -> v74 x
            let v122 : US36 =
                match v76 with
                | US24_1(v119) -> (* Error *)
                    US36_1(v119)
                | US24_0(v79) -> (* Ok *)
                    let v80 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v81 : bool = Fable.Core.RustInterop.emitRustExpr v79 v80 
                    let v82 : string = "x"
                    let v83 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v82 
                    let v86 : (Heap4 -> US25) = method85()
                    let v87 : US25 option = v83 |> Option.map v86 
                    let v107 : US25 = US25_1
                    let v108 : US25 = v87 |> Option.defaultValue v107 
                    let v112 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v113 : bool = Fable.Core.RustInterop.emitRustExpr v108 v112 
                    let v114 : string = "_vec_map"
                    let v115 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v114 
                    let v116 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v117 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v115 v116 
                    US36_0(v117)
            US35_0(v122)
    let v128 : string = $"%A{v38}"
    let v131 : int64 = 400L
    let v132 : string = method8(v131, v128)
    let v134 : string = $"%A{v126}"
    let v137 : int64 = 400L
    let v138 : string = method8(v137, v134)
    let v139 : string = "state_core.use_request (19) / result move / database: " + string v132 + " / database_loading: " + string v7 + " / state_data: " + string v138 + " / state_data_loading: " + string v11 + ""
    let v140 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v141 : bool = Fable.Core.RustInterop.emitRustExpr v139 v140 
    let v142 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v143 : (Result<crate_model_near_rpc_RpcResponse option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v3 v142 
    let v144 : string = "$0.to_vec()"
    let v145 : Vec<Result<crate_model_near_rpc_RpcResponse option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v143 v144 
    let v146 : unit = ()
    let v147 : string = $"true; let _func1_from_v146 = Func1::from(move |value| {{ //"
    let v148 : bool = Fable.Core.RustInterop.emitRustExpr () v147 
    let v149 : string = $"value"
    let v150 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v149 
    let v151 : (crate_model_near_rpc_RpcResponse option -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option) = method163(v0)
    let v152 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = method165(v150)
    let v153 : string = "v152.map(|x| v151(x))"
    let v154 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v153 
    let func1_from_result = v154 //
    let v155 : _ = func1_from_result
    let v156 : string = $"true; $0 /*"
    let v157 : bool = Fable.Core.RustInterop.emitRustExpr v155 v156 
    let v158 : string = $"*/ }}); //"
    let v159 : bool = Fable.Core.RustInterop.emitRustExpr () v158 
    let v160 : string = $"_func1_from_v146"
    let v161 : Func0<Result<crate_model_near_rpc_RpcResponse option, std_string_String>, Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v160 
    let v162 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v163 : (Result<crate_model_near_rpc_RpcResponse option, std_string_String> -> Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>) = closure136(v161)
    let v164 : Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr struct (v145, v163) v162 
    let v166 : string = $"%A{v164}"
    let v169 : string = "state_core.use_requests (20) / result func0 / result: " + string v166 + ""
    let v170 : int64 = 200L
    let v171 : string = method8(v170, v169)
    let v172 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v173 : bool = Fable.Core.RustInterop.emitRustExpr v171 v172 
    v164
and method159 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>, v1 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option))) : leptos_prelude_ArcMemo<Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>> =
    let v2 : string = "state_core.use_requests (1)"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = "state_core.use_database (1)"
    let v6 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v7 : bool = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : unit = ()
    let v9 : string = $"true; let _func0_from_v8 = Func0::from(move || {{ //"
    let v10 : bool = Fable.Core.RustInterop.emitRustExpr () v9 
    let v11 : string = "true; let __future_init = Box::pin(/*"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr () v11 
    let v13 : string = "*/ async move { /*"
    let v14 : bool = Fable.Core.RustInterop.emitRustExpr () v13 
    let v15 : string = "*/ ()"
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = "state_core.use_database (2) / database new_local_resource"
    let v18 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v19 : bool = Fable.Core.RustInterop.emitRustExpr v17 v18 
    let v20 : string = "state_core.build_database ()"
    let v21 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : string = "true; let __future_init = Box::pin(/*"
    let v24 : bool = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : string = "*/ async { /*"
    let v26 : bool = Fable.Core.RustInterop.emitRustExpr () v25 
    let v27 : string = "*/ ()"
    let v28 : bool = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : string = "Box::pin(rexie::Rexie::builder(\"database\").version(1).add_object_store(rexie::ObjectStore::new(\"store\")).build())"
    let v30 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v29 
    let v31 : string = "v30.await"
    let v32 : Result<rexie_Rexie, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v31 
    let v33 : (rexie_Error -> std_string_String) = method6()
    (* run_target_args'
    let v35 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v36 : string = "$0.map_err(|x| $1(x))"
    let v37 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v36 
    let _run_target_args'_v35 = v37 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v38 : string = "$0.map_err(|x| $1(x))"
    let v39 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v38 
    let _run_target_args'_v35 = v39 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v40 : string = "$0.map_err(|x| $1(x))"
    let v41 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v40 
    let _run_target_args'_v35 = v41 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v42 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v42 
    #endif
#if FABLE_COMPILER_PYTHON
    let v43 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v43 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v44 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v44 
    #endif
#else
    let v45 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v45 
    #endif
    let v46 : Result<rexie_Rexie, std_string_String> = _run_target_args'_v35 
    let v49 : string = ""
    let v50 : string = "}"
    let v51 : string = v49 + v50 
    let x = v46 //
    let v52 : _ = x
    let v53 : unit = ()
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = $"true; let _fix_closure_v53 = $0"
    let v56 : bool = Fable.Core.RustInterop.emitRustExpr v52 v55 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = $"true; let _fix_closure_v53 = $0"
    let v58 : bool = Fable.Core.RustInterop.emitRustExpr v52 v57 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = $"true; let _fix_closure_v53 = $0"
    let v60 : bool = Fable.Core.RustInterop.emitRustExpr v52 v59 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v54 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v54 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v54 = false 
    #endif
#else
    let _run_target_args'_v54 = false 
    #endif
    let v61 : bool = _run_target_args'_v54 
    let v63 : string = $"true; _fix_closure_v53 " + v51 + "); " + v49 + " // rust.fix_closure'"
    let v64 : bool = Fable.Core.RustInterop.emitRustExpr () v63 
    let v65 : string = "__future_init"
    let v66 : _ = Fable.Core.RustInterop.emitRustExpr () v65 
    let v67 : string = "v66"
    let v68 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v67 
    let v69 : string = "v68.await"
    let v70 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v69 
    (* run_target_args'
    let v72 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v73 : string = "$0.unwrap()"
    let v74 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v70 v73 
    let _run_target_args'_v72 = v74 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v75 : string = "$0.unwrap()"
    let v76 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v70 v75 
    let _run_target_args'_v72 = v76 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v77 : string = "$0.unwrap()"
    let v78 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v70 v77 
    let _run_target_args'_v72 = v78 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v79 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v79 
    #endif
#if FABLE_COMPILER_PYTHON
    let v80 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v80 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v81 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v81 
    #endif
#else
    let v82 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v82 
    #endif
    let v83 : rexie_Rexie = _run_target_args'_v72 
    let v86 : (rexie_Rexie -> rexie_Rexie) = method7()
    let v87 : rexie_Rexie = v86 v83
    let v88 : string = "std::sync::Arc::new(v87)"
    let v89 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v88 
    let v91 : string = $"%A{v89}"
    let v94 : string = "state_core.use_database (3) / database new_local_resource / result: " + string v91 + ""
    let v95 : int64 = 200L
    let v96 : string = method8(v95, v94)
    let v97 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v98 : bool = Fable.Core.RustInterop.emitRustExpr v96 v97 
    let v99 : string = v49 + v50 
    let x = v89 //
    let v100 : _ = x
    let v101 : unit = ()
    (* run_target_args'
    let v102 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v103 : string = $"true; let _fix_closure_v101 = $0"
    let v104 : bool = Fable.Core.RustInterop.emitRustExpr v100 v103 
    let _run_target_args'_v102 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v105 : string = $"true; let _fix_closure_v101 = $0"
    let v106 : bool = Fable.Core.RustInterop.emitRustExpr v100 v105 
    let _run_target_args'_v102 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v107 : string = $"true; let _fix_closure_v101 = $0"
    let v108 : bool = Fable.Core.RustInterop.emitRustExpr v100 v107 
    let _run_target_args'_v102 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v102 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v102 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v102 = false 
    #endif
#else
    let _run_target_args'_v102 = false 
    #endif
    let v109 : bool = _run_target_args'_v102 
    let v111 : string = $"true; _fix_closure_v101 " + v99 + "); " + v49 + " // rust.fix_closure'"
    let v112 : bool = Fable.Core.RustInterop.emitRustExpr () v111 
    let v113 : string = "__future_init"
    let v114 : _ = Fable.Core.RustInterop.emitRustExpr () v113 
    let v115 : string = "v114"
    let v116 : std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>> = Fable.Core.RustInterop.emitRustExpr () v115 
    let v117 : string = $"true; $0 /*"
    let v118 : bool = Fable.Core.RustInterop.emitRustExpr v116 v117 
    let v119 : string = $"*/ }}); //"
    let v120 : bool = Fable.Core.RustInterop.emitRustExpr () v119 
    let v121 : string = $"_func0_from_v8"
    let v122 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>>> = Fable.Core.RustInterop.emitRustExpr () v121 
    let v123 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v124 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v122 v123 
    let v125 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v126 : (unit -> PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option) = closure64(v124)
    let v127 : leptos_prelude_ArcMemo<PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option> = Fable.Core.RustInterop.emitRustExpr v126 v125 
    let v128 : unit = ()
    let v129 : string = $"true; let _func0_from_v128 = Func0::from(move || {{ //"
    let v130 : bool = Fable.Core.RustInterop.emitRustExpr () v129 
    let v131 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v132 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v124 v131 
    let v133 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v134 : bool = Fable.Core.RustInterop.emitRustExpr v132 v133 
    let v135 : string = "x"
    let v136 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v135 
    let v137 : (unit -> unit) = closure8()
    let _v137 = true
    let v138 : string = "PartialEqWrapper($0)"
    let v139 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v136 v138 
    let v140 : string = "true; $0 })"
    let v141 : bool = Fable.Core.RustInterop.emitRustExpr v139 v140 
    let v142 : string = "_optionm_map_"
    let v143 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr () v142 
    let v144 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v145 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v144 
    let v146 : string = "true; let __future_init = Box::pin(/*"
    let v147 : bool = Fable.Core.RustInterop.emitRustExpr () v146 
    let v148 : string = "*/ async move { /*"
    let v149 : bool = Fable.Core.RustInterop.emitRustExpr () v148 
    let v150 : string = "*/ ()"
    let v151 : bool = Fable.Core.RustInterop.emitRustExpr () v150 
    let v153 : string = $"%A{v143}"
    let v157 : string = $"%A{v145}"
    let v160 : int64 = 400L
    let v161 : string = method8(v160, v157)
    let v162 : string = "state_core.use_requests (3) / state_data_resource new_local_resource / request : " + string v161 + " / database: " + string v153 + ""
    let v163 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v164 : bool = Fable.Core.RustInterop.emitRustExpr v162 v163 
    let v165 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v166 : bool = Fable.Core.RustInterop.emitRustExpr v143 v165 
    let v167 : string = "x"
    let v168 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr () v167 
    let v169 : string = "$0.0"
    let v170 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr v168 v169 
    let v171 : string = "true; $0 })"
    let v172 : bool = Fable.Core.RustInterop.emitRustExpr v170 v171 
    let v173 : string = "_optionm_map_"
    let v174 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr () v173 
    let v177 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v178 : US2 option = v174 |> Option.map v177 
    let v198 : US2 = US2_1
    let v199 : US2 = v178 |> Option.defaultValue v198 
    let v699 : US24 =
        match v199 with
        | US2_0(v203) -> (* Some *)
            let v204 : unit = ()
            let v205 : string = $"true; let _func1_from_v204 = Func1::from(move |value| {{ //"
            let v206 : bool = Fable.Core.RustInterop.emitRustExpr () v205 
            let v207 : string = $"value"
            let struct (v208 : string, v209 : US23, v210 : string, v211 : bool, v212 : bool) = Fable.Core.RustInterop.emitRustExpr () v207 
            let v213 : string = "url[" + v208 + "](" + $"%A{v210}" + ")"
            let v214 : string = "state_core.get_data () / id: " + v213 + ""
            let v215 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v216 : bool = Fable.Core.RustInterop.emitRustExpr v214 v215 
            let v217 : string = "true; let __future_init = Box::pin(/*"
            let v218 : bool = Fable.Core.RustInterop.emitRustExpr () v217 
            let v219 : string = "*/ async { /*"
            let v220 : bool = Fable.Core.RustInterop.emitRustExpr () v219 
            let v221 : string = "*/ ()"
            let v222 : bool = Fable.Core.RustInterop.emitRustExpr () v221 
            let v223 : string = "store"
            let v224 : (string []) = [|v223|]
            let v225 : string = "$0.to_vec()"
            let v226 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v224 v225 
            let v227 : unit = ()
            let v228 : string = $"true; let _func1_from_v227 = Func1::from(move |value| {{ //"
            let v229 : bool = Fable.Core.RustInterop.emitRustExpr () v228 
            let v230 : string = $"value"
            let v231 : string = Fable.Core.RustInterop.emitRustExpr () v230 
            (* run_target_args'
            let v236 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v237 : string = "&*$0"
            let v238 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v231 v237 
            let _run_target_args'_v236 = v238 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v239 : string = "&*$0"
            let v240 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v231 v239 
            let _run_target_args'_v236 = v240 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v241 : string = "&*$0"
            let v242 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v231 v241 
            let _run_target_args'_v236 = v242 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v244 : Ref<Str> = v231 |> unbox<Ref<Str>>
            let _run_target_args'_v236 = v244 
            #endif
#if FABLE_COMPILER_PYTHON
            let v248 : Ref<Str> = v231 |> unbox<Ref<Str>>
            let _run_target_args'_v236 = v248 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v252 : Ref<Str> = v231 |> unbox<Ref<Str>>
            let _run_target_args'_v236 = v252 
            #endif
#else
            let v256 : Ref<Str> = v231 |> unbox<Ref<Str>>
            let _run_target_args'_v236 = v256 
            #endif
            let v259 : Ref<Str> = _run_target_args'_v236 
            (* run_target_args'
            let v269 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v270 : string = "String::from($0)"
            let v271 : std_string_String = Fable.Core.RustInterop.emitRustExpr v259 v270 
            let _run_target_args'_v269 = v271 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v272 : string = "String::from($0)"
            let v273 : std_string_String = Fable.Core.RustInterop.emitRustExpr v259 v272 
            let _run_target_args'_v269 = v273 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v274 : string = "String::from($0)"
            let v275 : std_string_String = Fable.Core.RustInterop.emitRustExpr v259 v274 
            let _run_target_args'_v269 = v275 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v277 : std_string_String = v259 |> unbox<std_string_String>
            let _run_target_args'_v269 = v277 
            #endif
#if FABLE_COMPILER_PYTHON
            let v281 : std_string_String = v259 |> unbox<std_string_String>
            let _run_target_args'_v269 = v281 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v285 : std_string_String = v259 |> unbox<std_string_String>
            let _run_target_args'_v269 = v285 
            #endif
#else
            let v289 : std_string_String = v259 |> unbox<std_string_String>
            let _run_target_args'_v269 = v289 
            #endif
            let v292 : std_string_String = _run_target_args'_v269 
            let func1_from_result = v292 //
            let v298 : _ = func1_from_result
            let v299 : string = $"true; $0 /*"
            let v300 : bool = Fable.Core.RustInterop.emitRustExpr v298 v299 
            let v301 : string = $"*/ }}); //"
            let v302 : bool = Fable.Core.RustInterop.emitRustExpr () v301 
            let v303 : string = $"_func1_from_v227"
            let v304 : Func0<string, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v303 
            let v305 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v306 : (string -> std_string_String) = closure10(v304)
            let v307 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v226, v306) v305 
            let v308 : std_sync_Arc<rexie_Rexie> = method11(v203)
            let v309 : string = "$0.transaction(&v307, rexie::TransactionMode::ReadOnly)"
            let v310 : Result<rexie_Transaction, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v308 v309 
            let v311 : (rexie_Error -> std_string_String) = method12()
            (* run_target_args'
            let v313 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v314 : string = "$0.map_err(|x| $1(x))"
            let v315 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v310, v311) v314 
            let _run_target_args'_v313 = v315 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v316 : string = "$0.map_err(|x| $1(x))"
            let v317 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v310, v311) v316 
            let _run_target_args'_v313 = v317 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v318 : string = "$0.map_err(|x| $1(x))"
            let v319 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v310, v311) v318 
            let _run_target_args'_v313 = v319 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v320 : Result<rexie_Transaction, std_string_String> = match v310 with Ok x -> Ok x | Error x -> Error (v311 x)
            let _run_target_args'_v313 = v320 
            #endif
#if FABLE_COMPILER_PYTHON
            let v321 : Result<rexie_Transaction, std_string_String> = match v310 with Ok x -> Ok x | Error x -> Error (v311 x)
            let _run_target_args'_v313 = v321 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v322 : Result<rexie_Transaction, std_string_String> = match v310 with Ok x -> Ok x | Error x -> Error (v311 x)
            let _run_target_args'_v313 = v322 
            #endif
#else
            let v323 : Result<rexie_Transaction, std_string_String> = match v310 with Ok x -> Ok x | Error x -> Error (v311 x)
            let _run_target_args'_v313 = v323 
            #endif
            let v324 : Result<rexie_Transaction, std_string_String> = _run_target_args'_v313 
            let v327 : string = "$0?"
            let v328 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v324 v327 
            let v329 : string = method13()
            (* run_target_args'
            let v334 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v335 : string = "&*$0"
            let v336 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v329 v335 
            let _run_target_args'_v334 = v336 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v337 : string = "&*$0"
            let v338 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v329 v337 
            let _run_target_args'_v334 = v338 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v339 : string = "&*$0"
            let v340 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v329 v339 
            let _run_target_args'_v334 = v340 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v342 : Ref<Str> = v329 |> unbox<Ref<Str>>
            let _run_target_args'_v334 = v342 
            #endif
#if FABLE_COMPILER_PYTHON
            let v346 : Ref<Str> = v329 |> unbox<Ref<Str>>
            let _run_target_args'_v334 = v346 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v350 : Ref<Str> = v329 |> unbox<Ref<Str>>
            let _run_target_args'_v334 = v350 
            #endif
#else
            let v354 : Ref<Str> = v329 |> unbox<Ref<Str>>
            let _run_target_args'_v334 = v354 
            #endif
            let v357 : Ref<Str> = _run_target_args'_v334 
            let v363 : string = "v328.store($0)"
            let v364 : Result<rexie_Store, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v357 v363 
            let v365 : (rexie_Error -> std_string_String) = method14()
            (* run_target_args'
            let v367 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v368 : string = "$0.map_err(|x| $1(x))"
            let v369 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v364, v365) v368 
            let _run_target_args'_v367 = v369 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v370 : string = "$0.map_err(|x| $1(x))"
            let v371 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v364, v365) v370 
            let _run_target_args'_v367 = v371 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v372 : string = "$0.map_err(|x| $1(x))"
            let v373 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v364, v365) v372 
            let _run_target_args'_v367 = v373 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v374 : Result<rexie_Store, std_string_String> = match v364 with Ok x -> Ok x | Error x -> Error (v365 x)
            let _run_target_args'_v367 = v374 
            #endif
#if FABLE_COMPILER_PYTHON
            let v375 : Result<rexie_Store, std_string_String> = match v364 with Ok x -> Ok x | Error x -> Error (v365 x)
            let _run_target_args'_v367 = v375 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v376 : Result<rexie_Store, std_string_String> = match v364 with Ok x -> Ok x | Error x -> Error (v365 x)
            let _run_target_args'_v367 = v376 
            #endif
#else
            let v377 : Result<rexie_Store, std_string_String> = match v364 with Ok x -> Ok x | Error x -> Error (v365 x)
            let _run_target_args'_v367 = v377 
            #endif
            let v378 : Result<rexie_Store, std_string_String> = _run_target_args'_v367 
            let v381 : string = "$0?"
            let v382 : rexie_Store = Fable.Core.RustInterop.emitRustExpr v378 v381 
            let v383 : string = method79(v213)
            (* run_target_args'
            let v388 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v389 : string = "&*$0"
            let v390 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v383 v389 
            let _run_target_args'_v388 = v390 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v391 : string = "&*$0"
            let v392 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v383 v391 
            let _run_target_args'_v388 = v392 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v393 : string = "&*$0"
            let v394 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v383 v393 
            let _run_target_args'_v388 = v394 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v396 : Ref<Str> = v383 |> unbox<Ref<Str>>
            let _run_target_args'_v388 = v396 
            #endif
#if FABLE_COMPILER_PYTHON
            let v400 : Ref<Str> = v383 |> unbox<Ref<Str>>
            let _run_target_args'_v388 = v400 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v404 : Ref<Str> = v383 |> unbox<Ref<Str>>
            let _run_target_args'_v388 = v404 
            #endif
#else
            let v408 : Ref<Str> = v383 |> unbox<Ref<Str>>
            let _run_target_args'_v388 = v408 
            #endif
            let v411 : Ref<Str> = _run_target_args'_v388 
            let v417 : string = "wasm_bindgen::JsValue::from_str($0)"
            let v418 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr v411 v417 
            let v419 : string = $"Box::pin(rexie::Store::get(&v382, v418))"
            let v420 : std_pin_Pin<Box<Dyn<std_future_Future<Result<wasm_bindgen_JsValue option, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v419 
            let v421 : string = "v420.await"
            let v422 : Result<wasm_bindgen_JsValue option, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v421 
            let v423 : (rexie_Error -> std_string_String) = method16()
            (* run_target_args'
            let v425 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v426 : string = "$0.map_err(|x| $1(x))"
            let v427 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v422, v423) v426 
            let _run_target_args'_v425 = v427 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v428 : string = "$0.map_err(|x| $1(x))"
            let v429 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v422, v423) v428 
            let _run_target_args'_v425 = v429 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v430 : string = "$0.map_err(|x| $1(x))"
            let v431 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v422, v423) v430 
            let _run_target_args'_v425 = v431 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v432 : Result<wasm_bindgen_JsValue option, std_string_String> = match v422 with Ok x -> Ok x | Error x -> Error (v423 x)
            let _run_target_args'_v425 = v432 
            #endif
#if FABLE_COMPILER_PYTHON
            let v433 : Result<wasm_bindgen_JsValue option, std_string_String> = match v422 with Ok x -> Ok x | Error x -> Error (v423 x)
            let _run_target_args'_v425 = v433 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v434 : Result<wasm_bindgen_JsValue option, std_string_String> = match v422 with Ok x -> Ok x | Error x -> Error (v423 x)
            let _run_target_args'_v425 = v434 
            #endif
#else
            let v435 : Result<wasm_bindgen_JsValue option, std_string_String> = match v422 with Ok x -> Ok x | Error x -> Error (v423 x)
            let _run_target_args'_v425 = v435 
            #endif
            let v436 : Result<wasm_bindgen_JsValue option, std_string_String> = _run_target_args'_v425 
            let v439 : string = "$0?"
            let v440 : wasm_bindgen_JsValue option = Fable.Core.RustInterop.emitRustExpr v436 v439 
            let v443 : (wasm_bindgen_JsValue -> US4) = method17()
            let v444 : US4 option = v440 |> Option.map v443 
            let v464 : US4 = US4_1
            let v465 : US4 = v444 |> Option.defaultValue v464 
            let v579 : US25 =
                match v465 with
                | US4_1 -> (* None *)
                    US25_1
                | US4_0(v469) -> (* Some *)
                    let v470 : wasm_bindgen_JsValue = method18(v469)
                    let v471 : string = "serde_wasm_bindgen::from_value(v470)"
                    let v472 : Result<serde_json_Value option, serde_wasm_bindgen_Error> = Fable.Core.RustInterop.emitRustExpr () v471 
                    let v473 : (serde_wasm_bindgen_Error -> std_string_String) = method19()
                    (* run_target_args'
                    let v475 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v476 : string = "$0.map_err(|x| $1(x))"
                    let v477 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v472, v473) v476 
                    let _run_target_args'_v475 = v477 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v478 : string = "$0.map_err(|x| $1(x))"
                    let v479 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v472, v473) v478 
                    let _run_target_args'_v475 = v479 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v480 : string = "$0.map_err(|x| $1(x))"
                    let v481 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v472, v473) v480 
                    let _run_target_args'_v475 = v481 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v482 : Result<serde_json_Value option, std_string_String> = match v472 with Ok x -> Ok x | Error x -> Error (v473 x)
                    let _run_target_args'_v475 = v482 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v483 : Result<serde_json_Value option, std_string_String> = match v472 with Ok x -> Ok x | Error x -> Error (v473 x)
                    let _run_target_args'_v475 = v483 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v484 : Result<serde_json_Value option, std_string_String> = match v472 with Ok x -> Ok x | Error x -> Error (v473 x)
                    let _run_target_args'_v475 = v484 
                    #endif
#else
                    let v485 : Result<serde_json_Value option, std_string_String> = match v472 with Ok x -> Ok x | Error x -> Error (v473 x)
                    let _run_target_args'_v475 = v485 
                    #endif
                    let v486 : Result<serde_json_Value option, std_string_String> = _run_target_args'_v475 
                    let v489 : string = "$0?"
                    let v490 : serde_json_Value option = Fable.Core.RustInterop.emitRustExpr v486 v489 
                    let v493 : (serde_json_Value -> US5) = method20()
                    let v494 : US5 option = v490 |> Option.map v493 
                    let v514 : US5 = US5_1
                    let v515 : US5 = v494 |> Option.defaultValue v514 
                    match v515 with
                    | US5_1 -> (* None *)
                        US25_1
                    | US5_0(v519) -> (* Some *)
                        let v520 : serde_json_Value = method21(v519)
                        let v521 : string = "serde_json::from_value(v520)"
                        let v522 : Result<Vec<uint8>, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr () v521 
                        let v523 : (serde_json_Error -> std_string_String) = method22()
                        (* run_target_args'
                        let v525 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v526 : string = "$0.map_err(|x| $1(x))"
                        let v527 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v522, v523) v526 
                        let _run_target_args'_v525 = v527 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v528 : string = "$0.map_err(|x| $1(x))"
                        let v529 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v522, v523) v528 
                        let _run_target_args'_v525 = v529 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v530 : string = "$0.map_err(|x| $1(x))"
                        let v531 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v522, v523) v530 
                        let _run_target_args'_v525 = v531 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v532 : Result<Vec<uint8>, std_string_String> = match v522 with Ok x -> Ok x | Error x -> Error (v523 x)
                        let _run_target_args'_v525 = v532 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v533 : Result<Vec<uint8>, std_string_String> = match v522 with Ok x -> Ok x | Error x -> Error (v523 x)
                        let _run_target_args'_v525 = v533 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v534 : Result<Vec<uint8>, std_string_String> = match v522 with Ok x -> Ok x | Error x -> Error (v523 x)
                        let _run_target_args'_v525 = v534 
                        #endif
#else
                        let v535 : Result<Vec<uint8>, std_string_String> = match v522 with Ok x -> Ok x | Error x -> Error (v523 x)
                        let _run_target_args'_v525 = v535 
                        #endif
                        let v536 : Result<Vec<uint8>, std_string_String> = _run_target_args'_v525 
                        let v539 : string = "$0?"
                        let v540 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v536 v539 
                        let v541 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                        let v542 : (uint8 []) = Fable.Core.RustInterop.emitRustExpr v540 v541 
                        let v543 : int32 = v542.Length
                        let v544 : string = "state_core.get_data () / data_len: " + string v543 + ""
                        let v545 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v546 : bool = Fable.Core.RustInterop.emitRustExpr v544 v545 
                        let v547 : string = "$0.to_vec()"
                        let v548 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v542 v547 
                        let v549 : string = "v548.as_slice()"
                        let v550 : Ref<Slice<uint8>> = Fable.Core.RustInterop.emitRustExpr () v549 
                        let v551 : string = "true; let mut v550 = v550"
                        let v552 : bool = Fable.Core.RustInterop.emitRustExpr () v551 
                        let v553 : string = "borsh::BorshDeserialize::deserialize(&mut v550)"
                        let v554 : Result<Heap4, borsh_io_Error> = Fable.Core.RustInterop.emitRustExpr () v553 
                        let v555 : (borsh_io_Error -> std_string_String) = method23()
                        (* run_target_args'
                        let v557 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v558 : string = "$0.map_err(|x| $1(x))"
                        let v559 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v554, v555) v558 
                        let _run_target_args'_v557 = v559 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v560 : string = "$0.map_err(|x| $1(x))"
                        let v561 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v554, v555) v560 
                        let _run_target_args'_v557 = v561 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v562 : string = "$0.map_err(|x| $1(x))"
                        let v563 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v554, v555) v562 
                        let _run_target_args'_v557 = v563 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v564 : Result<Heap4, std_string_String> = match v554 with Ok x -> Ok x | Error x -> Error (v555 x)
                        let _run_target_args'_v557 = v564 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v565 : Result<Heap4, std_string_String> = match v554 with Ok x -> Ok x | Error x -> Error (v555 x)
                        let _run_target_args'_v557 = v565 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v566 : Result<Heap4, std_string_String> = match v554 with Ok x -> Ok x | Error x -> Error (v555 x)
                        let _run_target_args'_v557 = v566 
                        #endif
#else
                        let v567 : Result<Heap4, std_string_String> = match v554 with Ok x -> Ok x | Error x -> Error (v555 x)
                        let _run_target_args'_v557 = v567 
                        #endif
                        let v568 : Result<Heap4, std_string_String> = _run_target_args'_v557 
                        let v571 : string = "$0?"
                        let v572 : Heap4 = Fable.Core.RustInterop.emitRustExpr v568 v571 
                        US25_0(v572)
            let v590 : Heap4 option =
                match v579 with
                | US25_1 -> (* None *)
                    let v586 : Heap4 option = None
                    v586
                | US25_0(v580) -> (* Some *)
                    let v582 : Heap4 option = Some v580 
                    v582
            let v592 : Result<Heap4 option, std_string_String> = Ok v590 
            let v595 : string = v49 + v50 
            let x = v592 //
            let v596 : _ = x
            let v597 : unit = ()
            (* run_target_args'
            let v598 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v599 : string = $"true; let _fix_closure_v597 = $0"
            let v600 : bool = Fable.Core.RustInterop.emitRustExpr v596 v599 
            let _run_target_args'_v598 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v601 : string = $"true; let _fix_closure_v597 = $0"
            let v602 : bool = Fable.Core.RustInterop.emitRustExpr v596 v601 
            let _run_target_args'_v598 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v603 : string = $"true; let _fix_closure_v597 = $0"
            let v604 : bool = Fable.Core.RustInterop.emitRustExpr v596 v603 
            let _run_target_args'_v598 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v598 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v598 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v598 = false 
            #endif
#else
            let _run_target_args'_v598 = false 
            #endif
            let v605 : bool = _run_target_args'_v598 
            let v607 : string = $"true; _fix_closure_v597 " + v595 + "); " + v49 + " // rust.fix_closure'"
            let v608 : bool = Fable.Core.RustInterop.emitRustExpr () v607 
            let v609 : string = "__future_init"
            let v610 : _ = Fable.Core.RustInterop.emitRustExpr () v609 
            let v611 : string = "v610"
            let v612 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v611 
            let func1_from_result = v612 //
            let v613 : _ = func1_from_result
            let v614 : string = $"true; $0 /*"
            let v615 : bool = Fable.Core.RustInterop.emitRustExpr v613 v614 
            let v616 : string = $"*/ }}); //"
            let v617 : bool = Fable.Core.RustInterop.emitRustExpr () v616 
            let v618 : string = $"_func1_from_v204"
            let v619 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v618 
            let v620 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v621 : (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>) = closure65(v619)
            let v622 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr struct (v145, v621) v620 
            let v623 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = method81(v622)
            let v624 : string = "futures::future::try_join_all(v623)"
            let v625 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v624 
            let v626 : string = "v625.await"
            let v627 : Result<Vec<Heap4 option>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v626 
            let v628 : string = "$0?"
            let v629 : Vec<Heap4 option> = Fable.Core.RustInterop.emitRustExpr v627 v628 
            US24_0(v629)
        | _ ->
            let v631 : string = "database=None"
            (* run_target_args'
            let v636 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v637 : string = "&*$0"
            let v638 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v631 v637 
            let _run_target_args'_v636 = v638 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v639 : string = "&*$0"
            let v640 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v631 v639 
            let _run_target_args'_v636 = v640 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v641 : string = "&*$0"
            let v642 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v631 v641 
            let _run_target_args'_v636 = v642 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v644 : Ref<Str> = v631 |> unbox<Ref<Str>>
            let _run_target_args'_v636 = v644 
            #endif
#if FABLE_COMPILER_PYTHON
            let v648 : Ref<Str> = v631 |> unbox<Ref<Str>>
            let _run_target_args'_v636 = v648 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v652 : Ref<Str> = v631 |> unbox<Ref<Str>>
            let _run_target_args'_v636 = v652 
            #endif
#else
            let v656 : Ref<Str> = v631 |> unbox<Ref<Str>>
            let _run_target_args'_v636 = v656 
            #endif
            let v659 : Ref<Str> = _run_target_args'_v636 
            (* run_target_args'
            let v669 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v670 : string = "String::from($0)"
            let v671 : std_string_String = Fable.Core.RustInterop.emitRustExpr v659 v670 
            let _run_target_args'_v669 = v671 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v672 : string = "String::from($0)"
            let v673 : std_string_String = Fable.Core.RustInterop.emitRustExpr v659 v672 
            let _run_target_args'_v669 = v673 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v674 : string = "String::from($0)"
            let v675 : std_string_String = Fable.Core.RustInterop.emitRustExpr v659 v674 
            let _run_target_args'_v669 = v675 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v677 : std_string_String = v659 |> unbox<std_string_String>
            let _run_target_args'_v669 = v677 
            #endif
#if FABLE_COMPILER_PYTHON
            let v681 : std_string_String = v659 |> unbox<std_string_String>
            let _run_target_args'_v669 = v681 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v685 : std_string_String = v659 |> unbox<std_string_String>
            let _run_target_args'_v669 = v685 
            #endif
#else
            let v689 : std_string_String = v659 |> unbox<std_string_String>
            let _run_target_args'_v669 = v689 
            #endif
            let v692 : std_string_String = _run_target_args'_v669 
            US24_1(v692)
    let v711 : Result<Vec<Heap4 option>, std_string_String> =
        match v699 with
        | US24_1(v705) -> (* Error *)
            let v707 : Result<Vec<Heap4 option>, std_string_String> = Error v705 
            v707
        | US24_0(v700) -> (* Ok *)
            let v702 : Result<Vec<Heap4 option>, std_string_String> = Ok v700 
            v702
    let v713 : string = $"%A{v711}"
    let v716 : string = "state_core.use_requests (4) / state_data_resource new_local_resource / result: " + string v713 + ""
    let v717 : int64 = 200L
    let v718 : string = method8(v717, v716)
    let v719 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v720 : bool = Fable.Core.RustInterop.emitRustExpr v718 v719 
    let v721 : string = v49 + v50 
    let x = v711 //
    let v722 : _ = x
    let v723 : unit = ()
    (* run_target_args'
    let v724 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v725 : string = $"true; let _fix_closure_v723 = $0"
    let v726 : bool = Fable.Core.RustInterop.emitRustExpr v722 v725 
    let _run_target_args'_v724 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v727 : string = $"true; let _fix_closure_v723 = $0"
    let v728 : bool = Fable.Core.RustInterop.emitRustExpr v722 v727 
    let _run_target_args'_v724 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v729 : string = $"true; let _fix_closure_v723 = $0"
    let v730 : bool = Fable.Core.RustInterop.emitRustExpr v722 v729 
    let _run_target_args'_v724 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v724 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v724 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v724 = false 
    #endif
#else
    let _run_target_args'_v724 = false 
    #endif
    let v731 : bool = _run_target_args'_v724 
    let v733 : string = $"true; _fix_closure_v723 " + v721 + "); " + v49 + " // rust.fix_closure'"
    let v734 : bool = Fable.Core.RustInterop.emitRustExpr () v733 
    let v735 : string = "__future_init"
    let v736 : _ = Fable.Core.RustInterop.emitRustExpr () v735 
    let v737 : string = "v736"
    let v738 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<Heap4 option>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v737 
    let v739 : string = $"true; $0 /*"
    let v740 : bool = Fable.Core.RustInterop.emitRustExpr v738 v739 
    let v741 : string = $"*/ }}); //"
    let v742 : bool = Fable.Core.RustInterop.emitRustExpr () v741 
    let v743 : string = $"_func0_from_v128"
    let v744 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<Heap4 option>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v743 
    let v745 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v746 : leptos_prelude_ArcLocalResource<Result<Vec<Heap4 option>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v744 v745 
    let v747 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v748 : (unit -> Result<Vec<Heap4 option>, std_string_String> option) = closure66(v746)
    let v749 : leptos_prelude_ArcMemo<Result<Vec<Heap4 option>, std_string_String> option> = Fable.Core.RustInterop.emitRustExpr v748 v747 
    let v750 : unit = ()
    let v751 : string = $"true; let _func0_from_v750 = Func0::from(move || {{ //"
    let v752 : bool = Fable.Core.RustInterop.emitRustExpr () v751 
    let v753 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v754 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v753 
    let v755 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v756 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v749 v755 
    let v758 : string = $"%A{v754}"
    let v761 : int64 = 400L
    let v762 : string = method8(v761, v758)
    let v763 : string = "state_core.use_requests (7) / json new_local_resource / requests: " + string v762 + ""
    let v764 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v765 : bool = Fable.Core.RustInterop.emitRustExpr v763 v764 
    let v766 : string = "true; let __future_init = Box::pin(/*"
    let v767 : bool = Fable.Core.RustInterop.emitRustExpr () v766 
    let v768 : string = "*/ async move { /*"
    let v769 : bool = Fable.Core.RustInterop.emitRustExpr () v768 
    let v770 : string = "*/ ()"
    let v771 : bool = Fable.Core.RustInterop.emitRustExpr () v770 
    let v774 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v775 : US26 option = v756 |> Option.map v774 
    let v795 : US26 = US26_1
    let v796 : US26 = v775 |> Option.defaultValue v795 
    let v852 : US27 =
        match v796 with
        | US26_1 -> (* None *)
            US27_1
        | US26_0(v800) -> (* Some *)
            let v801 : (Vec<Heap4 option> -> US24) = method83()
            let v802 : (std_string_String -> US24) = method84()
            let v804 : US24 = match v800 with Ok x -> v801 x | Error x -> v802 x
            let v848 : US28 =
                match v804 with
                | US24_1(v845) -> (* Error *)
                    US28_1(v845)
                | US24_0(v807) -> (* Ok *)
                    let v808 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v809 : bool = Fable.Core.RustInterop.emitRustExpr v807 v808 
                    let v810 : string = "x"
                    let v811 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v810 
                    let v814 : (Heap4 -> US25) = method85()
                    let v815 : US25 option = v811 |> Option.map v814 
                    let v835 : US25 = US25_1
                    let v836 : US25 = v815 |> Option.defaultValue v835 
                    let v840 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v841 : bool = Fable.Core.RustInterop.emitRustExpr v836 v840 
                    let v842 : string = "_vec_map"
                    let v843 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v842 
                    US28_0(v843)
            US27_0(v848)
    let v854 : string = $"%A{v852}"
    let v857 : int64 = 400L
    let v858 : string = method8(v857, v854)
    let v859 : string = "state_core.use_requests (8) / result_memo / state_data: " + string v858 + ""
    let v860 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v861 : bool = Fable.Core.RustInterop.emitRustExpr v859 v860 
    let v862 : (int32 -> (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>)) = method86(v852)
    let v863 : Vec<struct (string * US23 * string * bool * bool)> = method96(v754)
    let v864 : string = "v863.iter().enumerate().map(|(i, x)| v862(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v865 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v864 
    let v866 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = method97(v865)
    let v867 : string = "futures::future::try_join_all(v866)"
    let v868 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v867 
    let v869 : string = "v868.await"
    let v870 : Result<Vec<string option>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v869 
    let v871 : string = "$0?"
    let v872 : Vec<string option> = Fable.Core.RustInterop.emitRustExpr v870 v871 
    let v874 : Result<Vec<string option>, std_string_String> = Ok v872 
    let v877 : string = v49 + v50 
    let x = v874 //
    let v878 : _ = x
    let v879 : unit = ()
    (* run_target_args'
    let v880 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v881 : string = $"true; let _fix_closure_v879 = $0"
    let v882 : bool = Fable.Core.RustInterop.emitRustExpr v878 v881 
    let _run_target_args'_v880 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v883 : string = $"true; let _fix_closure_v879 = $0"
    let v884 : bool = Fable.Core.RustInterop.emitRustExpr v878 v883 
    let _run_target_args'_v880 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v885 : string = $"true; let _fix_closure_v879 = $0"
    let v886 : bool = Fable.Core.RustInterop.emitRustExpr v878 v885 
    let _run_target_args'_v880 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v880 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v880 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v880 = false 
    #endif
#else
    let _run_target_args'_v880 = false 
    #endif
    let v887 : bool = _run_target_args'_v880 
    let v889 : string = $"true; _fix_closure_v879 " + v877 + "); " + v49 + " // rust.fix_closure'"
    let v890 : bool = Fable.Core.RustInterop.emitRustExpr () v889 
    let v891 : string = "__future_init"
    let v892 : _ = Fable.Core.RustInterop.emitRustExpr () v891 
    let v893 : string = "v892"
    let v894 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<string option>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v893 
    let v895 : string = $"true; $0 /*"
    let v896 : bool = Fable.Core.RustInterop.emitRustExpr v894 v895 
    let v897 : string = $"*/ }}); //"
    let v898 : bool = Fable.Core.RustInterop.emitRustExpr () v897 
    let v899 : string = $"_func0_from_v750"
    let v900 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<string option>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v899 
    let v901 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v902 : leptos_prelude_ArcLocalResource<Result<Vec<string option>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v900 v901 
    let v903 : unit = ()
    let v904 : string = $"true; let _func1_from_v903 = Func1::from(move |value| {{ //"
    let v905 : bool = Fable.Core.RustInterop.emitRustExpr () v904 
    let v906 : string = $"value"
    let v907 : Heap4 = Fable.Core.RustInterop.emitRustExpr () v906 
    let v909 : string = $"%A{v907}"
    let v912 : int64 = System.Convert.ToInt64 v909.Length
    let v913 : string = "state_core.use_requests (10) / set_state_data_action / value_len: " + string v912 + ""
    let v914 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v915 : bool = Fable.Core.RustInterop.emitRustExpr v913 v914 
    let v916 : string = "true; let __future_init = Box::pin(/*"
    let v917 : bool = Fable.Core.RustInterop.emitRustExpr () v916 
    let v918 : string = "*/ async move { /*"
    let v919 : bool = Fable.Core.RustInterop.emitRustExpr () v918 
    let v920 : string = "*/ ()"
    let v921 : bool = Fable.Core.RustInterop.emitRustExpr () v920 
    let v922 : string = "Box::pin($0)"
    let v923 : std_pin_Pin<Box<leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>>> = Fable.Core.RustInterop.emitRustExpr v0 v922 
    let v924 : string = $"leptos::prelude::ArcMemo::get_untracked(&$0)"
    let v925 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v923 v924 
    let v926 : string = "Box::pin($0)"
    let v927 : std_pin_Pin<Box<leptos_prelude_ArcMemo<PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option>>> = Fable.Core.RustInterop.emitRustExpr v127 v926 
    let v928 : string = $"leptos::prelude::ArcMemo::get_untracked(&$0)"
    let v929 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr v927 v928 
    let v930 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v931 : bool = Fable.Core.RustInterop.emitRustExpr v929 v930 
    let v932 : string = "x"
    let v933 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr () v932 
    let v934 : string = "$0.0"
    let v935 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr v933 v934 
    let v936 : string = "true; $0 })"
    let v937 : bool = Fable.Core.RustInterop.emitRustExpr v935 v936 
    let v938 : string = "_optionm_map_"
    let v939 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr () v938 
    let v942 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v943 : US2 option = v939 |> Option.map v942 
    let v963 : US2 = US2_1
    let v964 : US2 = v943 |> Option.defaultValue v963 
    let v1141 : US34 =
        match v964 with
        | US2_0(v968) -> (* Some *)
            let v969 : unit = ()
            let v970 : string = $"true; let _func1_from_v969 = Func1::from(move |value| {{ //"
            let v971 : bool = Fable.Core.RustInterop.emitRustExpr () v970 
            let v972 : string = $"value"
            let struct (v973 : string, v974 : US23, v975 : string, v976 : bool, v977 : bool) = Fable.Core.RustInterop.emitRustExpr () v972 
            let v978 : string = "true; let __future_init = Box::pin(/*"
            let v979 : bool = Fable.Core.RustInterop.emitRustExpr () v978 
            let v980 : string = "*/ async move { /*"
            let v981 : bool = Fable.Core.RustInterop.emitRustExpr () v980 
            let v982 : string = "*/ ()"
            let v983 : bool = Fable.Core.RustInterop.emitRustExpr () v982 
            let v984 : string = "state_core.use_requests (11) / set_state_data_action / database=Some(_) / url: " + v973 + ""
            let v985 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v986 : bool = Fable.Core.RustInterop.emitRustExpr v984 v985 
            let v987 : string = "url[" + v973 + "](" + $"%A{v975}" + ")"
            let v989 : string = $"%A{v907}"
            let v992 : int64 = System.Convert.ToInt64 v989.Length
            let v993 : string = "state_core.set_data () / data_len: " + string v992 + ""
            let v994 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v995 : bool = Fable.Core.RustInterop.emitRustExpr v993 v994 
            let v996 : string = "true; let __future_init = Box::pin(/*"
            let v997 : bool = Fable.Core.RustInterop.emitRustExpr () v996 
            let v998 : string = "*/ async move { /*"
            let v999 : bool = Fable.Core.RustInterop.emitRustExpr () v998 
            let v1000 : string = "*/ ()"
            let v1001 : bool = Fable.Core.RustInterop.emitRustExpr () v1000 
            let v1002 : string = "true; let mut data = Vec::new()"
            let v1003 : bool = Fable.Core.RustInterop.emitRustExpr () v1002 
            let v1004 : string = "true; borsh::BorshSerialize::serialize(&$0, &mut data).unwrap()"
            let v1005 : bool = Fable.Core.RustInterop.emitRustExpr v907 v1004 
            let v1006 : string = "data"
            let v1007 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr () v1006 
            let v1008 : string = "serde_wasm_bindgen::to_value(&v1007).unwrap()"
            let v1009 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr () v1008 
            let v1010 : string = method98(v987)
            (* run_target_args'
            let v1015 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1016 : string = "&*$0"
            let v1017 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1010 v1016 
            let _run_target_args'_v1015 = v1017 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1018 : string = "&*$0"
            let v1019 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1010 v1018 
            let _run_target_args'_v1015 = v1019 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1020 : string = "&*$0"
            let v1021 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1010 v1020 
            let _run_target_args'_v1015 = v1021 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1023 : Ref<Str> = v1010 |> unbox<Ref<Str>>
            let _run_target_args'_v1015 = v1023 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1027 : Ref<Str> = v1010 |> unbox<Ref<Str>>
            let _run_target_args'_v1015 = v1027 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1031 : Ref<Str> = v1010 |> unbox<Ref<Str>>
            let _run_target_args'_v1015 = v1031 
            #endif
#else
            let v1035 : Ref<Str> = v1010 |> unbox<Ref<Str>>
            let _run_target_args'_v1015 = v1035 
            #endif
            let v1038 : Ref<Str> = _run_target_args'_v1015 
            let v1044 : string = "$0.transaction(&[\"store\"], rexie::TransactionMode::ReadWrite)?"
            let v1045 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v968 v1044 
            let v1046 : string = "v1045.store(\"store\")?"
            let v1047 : rexie_Store = Fable.Core.RustInterop.emitRustExpr () v1046 
            let v1048 : string = "true; v1047.put(&v1009, Some(&$0.into())).await?"
            let v1049 : bool = Fable.Core.RustInterop.emitRustExpr v1038 v1048 
            let v1050 : string = "true; v1045.done().await?"
            let v1051 : bool = Fable.Core.RustInterop.emitRustExpr () v1050 
            let v1053 : Result<unit, rexie_Error> = Ok () 
            let v1056 : string = v49 + v50 
            let x = v1053 //
            let v1057 : _ = x
            let v1058 : unit = ()
            (* run_target_args'
            let v1059 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1060 : string = $"true; let _fix_closure_v1058 = $0"
            let v1061 : bool = Fable.Core.RustInterop.emitRustExpr v1057 v1060 
            let _run_target_args'_v1059 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1062 : string = $"true; let _fix_closure_v1058 = $0"
            let v1063 : bool = Fable.Core.RustInterop.emitRustExpr v1057 v1062 
            let _run_target_args'_v1059 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1064 : string = $"true; let _fix_closure_v1058 = $0"
            let v1065 : bool = Fable.Core.RustInterop.emitRustExpr v1057 v1064 
            let _run_target_args'_v1059 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v1059 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v1059 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v1059 = false 
            #endif
#else
            let _run_target_args'_v1059 = false 
            #endif
            let v1066 : bool = _run_target_args'_v1059 
            let v1068 : string = $"true; _fix_closure_v1058 " + v1056 + "); " + v49 + " // rust.fix_closure'"
            let v1069 : bool = Fable.Core.RustInterop.emitRustExpr () v1068 
            let v1070 : string = "__future_init"
            let v1071 : _ = Fable.Core.RustInterop.emitRustExpr () v1070 
            let v1072 : string = "v1071"
            let v1073 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v1072 
            let v1074 : string = "v1073.await"
            let v1075 : Result<unit, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v1074 
            let v1076 : (rexie_Error -> std_string_String) = method99()
            (* run_target_args'
            let v1078 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1079 : string = "$0.map_err(|x| $1(x))"
            let v1080 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1075, v1076) v1079 
            let _run_target_args'_v1078 = v1080 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1081 : string = "$0.map_err(|x| $1(x))"
            let v1082 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1075, v1076) v1081 
            let _run_target_args'_v1078 = v1082 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1083 : string = "$0.map_err(|x| $1(x))"
            let v1084 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1075, v1076) v1083 
            let _run_target_args'_v1078 = v1084 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1085 : Result<unit, std_string_String> = match v1075 with Ok x -> Ok x | Error x -> Error (v1076 x)
            let _run_target_args'_v1078 = v1085 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1086 : Result<unit, std_string_String> = match v1075 with Ok x -> Ok x | Error x -> Error (v1076 x)
            let _run_target_args'_v1078 = v1086 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1087 : Result<unit, std_string_String> = match v1075 with Ok x -> Ok x | Error x -> Error (v1076 x)
            let _run_target_args'_v1078 = v1087 
            #endif
#else
            let v1088 : Result<unit, std_string_String> = match v1075 with Ok x -> Ok x | Error x -> Error (v1076 x)
            let _run_target_args'_v1078 = v1088 
            #endif
            let v1089 : Result<unit, std_string_String> = _run_target_args'_v1078 
            let v1092 : string = "true; $0?"
            let v1093 : bool = Fable.Core.RustInterop.emitRustExpr v1089 v1092 
            
            let v1095 : Result<unit, std_string_String> = Ok () 
            let v1098 : string = v49 + v50 
            let x = v1095 //
            let v1099 : _ = x
            let v1100 : unit = ()
            (* run_target_args'
            let v1101 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1102 : string = $"true; let _fix_closure_v1100 = $0"
            let v1103 : bool = Fable.Core.RustInterop.emitRustExpr v1099 v1102 
            let _run_target_args'_v1101 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1104 : string = $"true; let _fix_closure_v1100 = $0"
            let v1105 : bool = Fable.Core.RustInterop.emitRustExpr v1099 v1104 
            let _run_target_args'_v1101 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1106 : string = $"true; let _fix_closure_v1100 = $0"
            let v1107 : bool = Fable.Core.RustInterop.emitRustExpr v1099 v1106 
            let _run_target_args'_v1101 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v1101 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v1101 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v1101 = false 
            #endif
#else
            let _run_target_args'_v1101 = false 
            #endif
            let v1108 : bool = _run_target_args'_v1101 
            let v1110 : string = $"true; _fix_closure_v1100 " + v1098 + "); " + v49 + " // rust.fix_closure'"
            let v1111 : bool = Fable.Core.RustInterop.emitRustExpr () v1110 
            let v1112 : string = "__future_init"
            let v1113 : _ = Fable.Core.RustInterop.emitRustExpr () v1112 
            let v1114 : string = "v1113"
            let v1115 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v1114 
            let func1_from_result = v1115 //
            let v1116 : _ = func1_from_result
            let v1117 : string = $"true; $0 /*"
            let v1118 : bool = Fable.Core.RustInterop.emitRustExpr v1116 v1117 
            let v1119 : string = $"*/ }}); //"
            let v1120 : bool = Fable.Core.RustInterop.emitRustExpr () v1119 
            let v1121 : string = $"_func1_from_v969"
            let v1122 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1121 
            let v1123 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v1124 : (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>) = closure76(v1122)
            let v1125 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr struct (v925, v1124) v1123 
            let v1126 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = method101(v1125)
            let v1127 : string = "futures::future::try_join_all(v1126)"
            let v1128 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1127 
            let v1129 : string = "v1128.await"
            let v1130 : Result<Vec<unit>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v1129 
            let v1131 : string = "$0?"
            let v1132 : Vec<unit> = Fable.Core.RustInterop.emitRustExpr v1130 v1131 
            US34_0(v1132)
        | _ ->
            let v1134 : string = "state_core.use_requests (12) / set_state_data_action / database,request=None"
            let v1135 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1136 : bool = Fable.Core.RustInterop.emitRustExpr v1134 v1135 
            let v1137 : (unit []) = [||]
            let v1138 : string = "$0.to_vec()"
            let v1139 : Vec<unit> = Fable.Core.RustInterop.emitRustExpr v1137 v1138 
            US34_0(v1139)
    let v1153 : Result<Vec<unit>, std_string_String> =
        match v1141 with
        | US34_1(v1147) -> (* Error *)
            let v1149 : Result<Vec<unit>, std_string_String> = Error v1147 
            v1149
        | US34_0(v1142) -> (* Ok *)
            let v1144 : Result<Vec<unit>, std_string_String> = Ok v1142 
            v1144
    let v1154 : string = v49 + v50 
    let x = v1153 //
    let v1155 : _ = x
    let v1156 : unit = ()
    (* run_target_args'
    let v1157 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v1158 : string = $"true; let _fix_closure_v1156 = $0"
    let v1159 : bool = Fable.Core.RustInterop.emitRustExpr v1155 v1158 
    let _run_target_args'_v1157 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v1160 : string = $"true; let _fix_closure_v1156 = $0"
    let v1161 : bool = Fable.Core.RustInterop.emitRustExpr v1155 v1160 
    let _run_target_args'_v1157 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v1162 : string = $"true; let _fix_closure_v1156 = $0"
    let v1163 : bool = Fable.Core.RustInterop.emitRustExpr v1155 v1162 
    let _run_target_args'_v1157 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v1157 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v1157 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v1157 = false 
    #endif
#else
    let _run_target_args'_v1157 = false 
    #endif
    let v1164 : bool = _run_target_args'_v1157 
    let v1166 : string = $"true; _fix_closure_v1156 " + v1154 + "); " + v49 + " // rust.fix_closure'"
    let v1167 : bool = Fable.Core.RustInterop.emitRustExpr () v1166 
    let v1168 : string = "__future_init"
    let v1169 : _ = Fable.Core.RustInterop.emitRustExpr () v1168 
    let v1170 : string = "v1169"
    let v1171 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v1170 
    let func1_from_result = v1171 //
    let v1172 : _ = func1_from_result
    let v1173 : string = $"true; $0 /*"
    let v1174 : bool = Fable.Core.RustInterop.emitRustExpr v1172 v1173 
    let v1175 : string = $"*/ }}); //"
    let v1176 : bool = Fable.Core.RustInterop.emitRustExpr () v1175 
    let v1177 : string = $"_func1_from_v903"
    let v1178 : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1177 
    let v1179 : string = "leptos::prelude::Action::new(move |value: &std::sync::Arc<Heap4>| $0(value.clone()))"
    let v1180 : (Heap4 -> std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>) = closure77(v1178)
    let v1181 : leptos_prelude_Action<Heap4, Result<Vec<unit>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v1180 v1179 
    let v1182 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1183 : (unit -> (Result<crate_model_near_rpc_RpcResponse option, std_string_String> [])) = closure130(v0, v749, v902, v1181)
    let v1184 : leptos_prelude_ArcMemo<(Result<crate_model_near_rpc_RpcResponse option, std_string_String> [])> = Fable.Core.RustInterop.emitRustExpr v1183 v1182 
    let v1185 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1186 : (unit -> Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>) = closure134(v1, v124, v746, v1184)
    let v1187 : leptos_prelude_ArcMemo<Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>> = Fable.Core.RustInterop.emitRustExpr v1186 v1185 
    v1187
and method167 () : string =
    let v0 : string = "https://rpc.mainnet.near.org"
    v0
and closure137 () (v0 : US14) : US57 =
    US57_0(v0)
and method168 () : (US14 -> US57) =
    closure137()
and closure138 () (v0 : std_string_String) : US57 =
    US57_1(v0)
and method169 () : (std_string_String -> US57) =
    closure138()
and closure139 () (v0 : crate_model_near_rpc_RpcResponse) : US60 =
    US60_0(v0)
and method170 () : (crate_model_near_rpc_RpcResponse -> US60) =
    closure139()
and closure140 () (v0 : std_string_String) : US60 =
    US60_1(v0)
and method171 () : (std_string_String -> US60) =
    closure140()
and method172 (v0 : Func0<Heap6, std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>>) : Func0<Heap6, std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>> =
    v0
and closure141 (v0 : Func0<Heap6, std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>>) (v1 : Heap6) : std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>> =
    let v2 : Func0<Heap6, std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>> = method172(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure144 () (v0 : US59) : US58 =
    US58_0(v0)
and method174 () : (US59 -> US58) =
    closure144()
and closure145 () (v0 : std_string_String) : US58 =
    US58_1(v0)
and method175 () : (std_string_String -> US58) =
    closure145()
and closure143 () (v0 : Result<US59, std_string_String>) : US58 =
    let v1 : (US59 -> US58) = method174()
    let v2 : (std_string_String -> US58) = method175()
    let v4 : US58 = match v0 with Ok x -> v1 x | Error x -> v2 x
    v4
and method173 () : (Result<US59, std_string_String> -> US58) =
    closure143()
and closure146 () (v0 : US58) : US62 =
    US62_0(v0)
and method176 () : (US58 -> US62) =
    closure146()
and closure142 (v0 : leptos_prelude_ArcAction<Heap6, Result<US59, std_string_String>>) () : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> =
    let v1 : string = "leptos::prelude::ArcAction::value(&$0)"
    let v2 : leptos_prelude_ArcRwSignal<Result<US59, std_string_String> option> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v4 : Result<US59, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v7 : (Result<US59, std_string_String> -> US58) = method173()
    let v8 : US58 option = v4 |> Option.map v7 
    let v33 : (US58 -> US62) = method176()
    let v34 : US62 option = v8 |> Option.map v33 
    let v54 : US62 = US62_1
    let v55 : US62 = v34 |> Option.defaultValue v54 
    let v76 : US58 =
        match v55 with
        | US62_0(v59) -> (* Some *)
            match v59 with
            | US58_1(v60) -> (* Error *)
                US58_1(v60)
            | US58_0(v62) -> (* Ok *)
                match v62 with
                | US59_0(v63, v64, v65, v66) -> (* Some *)
                    let v67 : US59 = US59_0(v63, v64, v65, v66)
                    US58_0(v67)
                | _ ->
                    let v69 : US59 = US59_1
                    US58_0(v69)
        | _ ->
            let v74 : US59 = US59_1
            US58_0(v74)
    let v96 : US63 =
        match v76 with
        | US58_1(v93) -> (* Error *)
            US63_1(v93)
        | US58_0(v77) -> (* Ok *)
            let v91 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option =
                match v77 with
                | US59_1 -> (* None *)
                    let v87 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option = None
                    v87
                | US59_0(v78, v79, v80, v81) -> (* Some *)
                    let v83 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option = Some struct (v78, v79, v80, v81) 
                    v83
            US63_0(v91)
    let v108 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> =
        match v96 with
        | US63_1(v102) -> (* Error *)
            let v104 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = Error v102 
            v104
        | US63_0(v97) -> (* Ok *)
            let v99 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = Ok v97 
            v99
    let v110 : string = $"%A{v108}"
    let v113 : string = "dice_view.render (x) / roll new_arc_memo / result: " + string v110 + ""
    let v114 : int64 = 200L
    let v115 : string = method8(v114, v113)
    let v116 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v117 : bool = Fable.Core.RustInterop.emitRustExpr v115 v116 
    v108
and closure148 () (v0 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option) : US63 =
    US63_0(v0)
and method177 () : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option -> US63) =
    closure148()
and closure149 () (v0 : std_string_String) : US63 =
    US63_1(v0)
and method178 () : (std_string_String -> US63) =
    closure149()
and closure150 () struct (v0 : std_string_String, v1 : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option, v2 : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option, v3 : std_string_String option) : US59 =
    US59_0(v0, v1, v2, v3)
and method179 () : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) -> US59) =
    closure150()
and closure151 () struct (v0 : std_string_String, v1 : std_string_String, v2 : struct (std_string_String option * std_string_String option) option, v3 : int32, v4 : std_string_String, v5 : std_string_String) : US64 =
    US64_0(v0, v1, v2, v3, v4, v5)
and method180 () : (struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) -> US64) =
    closure151()
and closure147 (v0 : leptos_prelude_ArcMemo<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>) () : string option =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option -> US63) = method177()
    let v4 : (std_string_String -> US63) = method178()
    let v6 : US63 = match v2 with Ok x -> v3 x | Error x -> v4 x
    let v45 : US58 =
        match v6 with
        | US63_1(v42) -> (* Error *)
            US58_1(v42)
        | US63_0(v9) -> (* Ok *)
            let v12 : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) -> US59) = method179()
            let v13 : US59 option = v9 |> Option.map v12 
            let v36 : US59 = US59_1
            let v37 : US59 = v13 |> Option.defaultValue v36 
            US58_0(v37)
    let v97 : US31 =
        match v45 with
        | US58_0(v46) -> (* Ok *)
            match v46 with
            | US59_0(v47, v48, v49, v50) -> (* Some *)
                let v53 : (struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) -> US64) = method180()
                let v54 : US64 option = v49 |> Option.map v53 
                let v79 : US64 = US64_1
                let v80 : US64 = v54 |> Option.defaultValue v79 
                match v80 with
                | US64_0(v84, v85, v86, v87, v88, v89) -> (* Some *)
                    let v90 : string = string v84 + ": " + string v88 + " - " + string v89 + " (" + string v85 + ")"
                    US31_0(v90)
                | _ ->
                    US31_1
            | _ ->
                US31_1
        | _ ->
            US31_1
    let v108 : string option =
        match v97 with
        | US31_1 -> (* None *)
            let v104 : string option = None
            v104
        | US31_0(v98) -> (* Some *)
            let v100 : string option = Some v98 
            v100
    let v110 : string = $"%A{v108}"
    let v113 : string = "dice_view.render (x) / error_message new_arc_memo / result: " + string v110 + ""
    let v114 : int64 = 200L
    let v115 : string = method8(v114, v113)
    let v116 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v117 : bool = Fable.Core.RustInterop.emitRustExpr v115 v116 
    v108
and closure152 (v0 : Heap2) () : US31 =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<Heap0> = v5.l3
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : Heap0 = Fable.Core.RustInterop.emitRustExpr v6 v7 
    let v9 : std_string_String option = v8.l1
    let v12 : (std_string_String -> US14) = method39()
    let v13 : US14 option = v9 |> Option.map v12 
    let v33 : US14 = US14_1
    let v34 : US14 = v13 |> Option.defaultValue v33 
    match v34 with
    | US14_1 -> (* None *)
        US31_1
    | US14_0(v38) -> (* Some *)
        let v39 : string = "fable_library_rust::String_::fromString($0)"
        let v40 : string = Fable.Core.RustInterop.emitRustExpr v38 v39 
        US31_0(v40)
and method181 (v0 : Func0<(bool * std_string_String), struct (bool * std_string_String)>) : Func0<(bool * std_string_String), struct (bool * std_string_String)> =
    v0
and closure154 (v0 : Func0<(bool * std_string_String), struct (bool * std_string_String)>) (v1 : (bool * std_string_String)) : struct (bool * std_string_String) =
    let v2 : Func0<(bool * std_string_String), struct (bool * std_string_String)> = method181(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : bool, v6 : std_string_String) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6)
and method182 (v0 : Func0<struct (bool * std_string_String), std_string_String>) : Func0<struct (bool * std_string_String), std_string_String> =
    v0
and closure155 (v0 : Func0<struct (bool * std_string_String), std_string_String>) struct (v1 : bool, v2 : std_string_String) : std_string_String =
    let v3 : Func0<struct (bool * std_string_String), std_string_String> = method182(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let v6 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4 v5 
    v6
and closure157 (v0 : int32) (v1 : std_string_String) : (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)) =
    let v2 : string = $"leptos::prelude::signal($0)"
    let struct (v3 : leptos_prelude_ReadSignal<std_string_String>, v4 : leptos_prelude_WriteSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v6 : (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)) = v0, struct (v3, v4) 
    v6
and closure156 () (v0 : int32) : (std_string_String -> (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))) =
    closure157(v0)
and method183 () : (int32 -> (std_string_String -> (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)))) =
    closure156()
and method184 (v0 : Vec<std_string_String>) : Vec<std_string_String> =
    v0
and closure153 (v0 : Heap2) () : Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))> =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<Heap0> = v5.l3
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : Heap0 = Fable.Core.RustInterop.emitRustExpr v6 v7 
    let v9 : Vec<(bool * std_string_String)> = v8.l0
    let v10 : unit = ()
    let v11 : string = $"true; let _func1_from_v10 = Func1::from(move |value| {{ //"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr () v11 
    let v13 : string = $"value"
    let v14 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr () v13 
    let (a, b) = v14 
    let v17 : bool = a
    let v18 : std_string_String = b
    let func1_from_result = struct (v17, v18) //
    let v23 : _ = func1_from_result
    let v24 : string = $"true; $0 /*"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr v23 v24 
    let v26 : string = $"*/ }}); //"
    let v27 : bool = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : string = $"_func1_from_v10"
    let v29 : Func0<(bool * std_string_String), struct (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v28 
    let v30 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v31 : ((bool * std_string_String) -> struct (bool * std_string_String)) = closure154(v29)
    let v32 : Vec<struct (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v9, v31) v30 
    let v33 : (struct (bool * std_string_String) -> bool) = method55()
    let v34 : Vec<struct (bool * std_string_String)> = method56(v32)
    let v35 : string = "v34.into_iter().filter(|x| v33(x.clone().clone())).collect::<Vec<_>>()"
    let v36 : Vec<struct (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v35 
    let v37 : unit = ()
    let v38 : string = $"true; let _func1_from_v37 = Func1::from(move |value| {{ //"
    let v39 : bool = Fable.Core.RustInterop.emitRustExpr () v38 
    let v40 : string = $"value"
    let struct (v41 : bool, v42 : std_string_String) = Fable.Core.RustInterop.emitRustExpr () v40 
    let func1_from_result = v42 //
    let v43 : _ = func1_from_result
    let v44 : string = $"true; $0 /*"
    let v45 : bool = Fable.Core.RustInterop.emitRustExpr v43 v44 
    let v46 : string = $"*/ }}); //"
    let v47 : bool = Fable.Core.RustInterop.emitRustExpr () v46 
    let v48 : string = $"_func1_from_v37"
    let v49 : Func0<struct (bool * std_string_String), std_string_String> = Fable.Core.RustInterop.emitRustExpr () v48 
    let v50 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v51 : (struct (bool * std_string_String) -> std_string_String) = closure155(v49)
    let v52 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v36, v51) v50 
    let v53 : (int32 -> (std_string_String -> (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)))) = method183()
    let v54 : Vec<std_string_String> = method184(v52)
    let v55 : string = "v54.iter().enumerate().map(|(i, x)| v53(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v56 : Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))> = Fable.Core.RustInterop.emitRustExpr () v55 
    v56
and method185 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)), struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)>) : Func0<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)), struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)> =
    v0
and closure159 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)), struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)>) (v1 : (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))) : struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>) =
    let v2 : Func0<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)), struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)> = method185(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : int32, v6 : leptos_prelude_ReadSignal<std_string_String>, v7 : leptos_prelude_WriteSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7)
and method186 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>), struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>) : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>), struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> =
    v0
and closure160 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>), struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>) struct (v1 : int32, v2 : leptos_prelude_ReadSignal<std_string_String>, v3 : leptos_prelude_WriteSignal<std_string_String>) : struct (int32 * leptos_prelude_ReadSignal<std_string_String>) =
    let v4 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>), struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> = method186(v0)
    let func1_move_x = struct (v1, v2, v3) //
    let v5 : _ = func1_move_x
    let v6 : string = "(move |x| v4(x))($0)"
    let struct (v7 : int32, v8 : leptos_prelude_ReadSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr v5 v6 
    struct (v7, v8)
and closure158 (v0 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))>>) () : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let v7 : (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)) = Fable.Core.RustInterop.emitRustExpr () v6 
    let (a, b) = v7 
    let v11 : int32 = a
    let struct (v12 : leptos_prelude_ReadSignal<std_string_String>, v13 : leptos_prelude_WriteSignal<std_string_String>) = b
    let func1_from_result = struct (v11, v12, v13) //
    let v20 : _ = func1_from_result
    let v21 : string = $"true; $0 /*"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : string = $"*/ }}); //"
    let v24 : bool = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : string = $"_func1_from_v3"
    let v26 : Func0<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)), struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr () v25 
    let v27 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v28 : ((int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)) -> struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)) = closure159(v26)
    let v29 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr struct (v2, v28) v27 
    let v30 : unit = ()
    let v31 : string = $"true; let _func1_from_v30 = Func1::from(move |value| {{ //"
    let v32 : bool = Fable.Core.RustInterop.emitRustExpr () v31 
    let v33 : string = $"value"
    let struct (v34 : int32, v35 : leptos_prelude_ReadSignal<std_string_String>, v36 : leptos_prelude_WriteSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr () v33 
    let func1_from_result = struct (v34, v35) //
    let v37 : _ = func1_from_result
    let v38 : string = $"true; $0 /*"
    let v39 : bool = Fable.Core.RustInterop.emitRustExpr v37 v38 
    let v40 : string = $"*/ }}); //"
    let v41 : bool = Fable.Core.RustInterop.emitRustExpr () v40 
    let v42 : string = $"_func1_from_v30"
    let v43 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>), struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr () v42 
    let v44 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v45 : (struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>) -> struct (int32 * leptos_prelude_ReadSignal<std_string_String>)) = closure160(v43)
    let v46 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr struct (v29, v45) v44 
    v46
and closure161 () () : string =
    let v0 : string = ""
    v0
and closure162 () () : bool =
    true
and closure163 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure164 () () : Ref<Lifetime<StaticLifetime, Str>> =
    let v0 : string = ""
    let v1 : string = "r#\"" + v0 + "\"#"
    let v2 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v1 
    v2
and closure165 () () : string =
    let v0 : string = "Roll"
    v0
and method187 () : (unit -> string) =
    closure165()
and closure166 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and closure168 () () : string =
    let v0 : string = "[align-self:flex-start]"
    v0
and closure169 () () : bool =
    false
and closure170 () () : string =
    let v0 : string = "py-[4px]"
    v0
and closure171 (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option, v1 : leptos_prelude_ArcMemo<US31> option, v2 : Heap2) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v3 : string = ""
    let v4 : string = "r#\"" + v3 + "\"#"
    let v5 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v4 
    v5
and closure173 () (v0 : leptos_prelude_ArcMemo<US31>) : US65 =
    US65_0(v0)
and method189 () : (leptos_prelude_ArcMemo<US31> -> US65) =
    closure173()
and closure172 (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option, v1 : leptos_prelude_ArcMemo<US31> option, v2 : Heap2) () : string =
    let v5 : (leptos_prelude_ArcMemo<US31> -> US65) = method189()
    let v6 : US65 option = v1 |> Option.map v5 
    let v26 : US65 = US65_1
    let v27 : US65 = v6 |> Option.defaultValue v26 
    let v37 : US42 =
        match v27 with
        | US65_1 -> (* None *)
            US42_1
        | US65_0(v31) -> (* Some *)
            let v32 : string = $"leptos::prelude::ArcMemo::get(&$0)"
            let v33 : US31 = Fable.Core.RustInterop.emitRustExpr v31 v32 
            US42_0(v33)
    let v44 : US31 =
        match v37 with
        | US42_0(v38) -> (* Some *)
            match v38 with
            | US31_0(v39) -> (* Some *)
                US31_0(v39)
            | _ ->
                US31_1
        | _ ->
            US31_1
    match v44 with
    | US31_1 -> (* None *)
        let v46 : string = "Select..."
        v46
    | US31_0(v45) -> (* Some *)
        v45
and method188 (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option, v1 : leptos_prelude_ArcMemo<US31> option, v2 : Heap2) : (unit -> string) =
    closure172(v0, v1, v2)
and closure175 () (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>>) : US66 =
    US66_0(v0)
and method190 () : (leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> -> US66) =
    closure175()
and method192 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32>) : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32> =
    v0
and closure176 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32>) struct (v1 : int32, v2 : leptos_prelude_ReadSignal<std_string_String>) : int32 =
    let v3 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32> = method192(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let v6 : int32 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    v6
and method191 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32>) : (struct (int32 * leptos_prelude_ReadSignal<std_string_String>) -> int32) =
    closure176(v0)
and method193 (v0 : std_string_String) : std_string_String =
    v0
and closure177 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and method194 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), leptos_prelude_AnyView_>) : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), leptos_prelude_AnyView_> =
    v0
and closure178 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), leptos_prelude_AnyView_>) struct (v1 : int32, v2 : leptos_prelude_ReadSignal<std_string_String>) : leptos_prelude_AnyView_ =
    let v3 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), leptos_prelude_AnyView_> = method194(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let v6 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4 v5 
    v6
and closure174 (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option, v1 : leptos_prelude_ArcMemo<US31> option, v2 : Heap2) () : leptos_dom_Fragment =
    let v3 : string = "class=\"flex flex-1 flex-col p-[10px] gap-[7px] [border-left-width:1px] [border-bottom-width:1px] border-gray-200 bg-gray-100\""
    let v4 : string = ""
    let v5 : string = " " + v3 + v4 + ""
    let v8 : (leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> -> US66) = method190()
    let v9 : US66 option = v0 |> Option.map v8 
    let v29 : US66 = US66_1
    let v30 : US66 = v9 |> Option.defaultValue v29 
    let v40 : US67 =
        match v30 with
        | US66_1 -> (* None *)
            US67_1
        | US66_0(v34) -> (* Some *)
            let v35 : string = $"leptos::prelude::ArcMemo::get(&$0)"
            let v36 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr v34 v35 
            US67_0(v36)
    let v41 : (struct (int32 * leptos_prelude_ReadSignal<std_string_String>) []) = [||]
    let v42 : string = "$0.to_vec()"
    let v43 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr v41 v42 
    let v46 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> =
        match v40 with
        | US67_1 -> (* None *)
            v43
        | US67_0(v44) -> (* Some *)
            v44
    let v47 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v48 : (struct (int32 * leptos_prelude_ReadSignal<std_string_String>) []) = Fable.Core.RustInterop.emitRustExpr v46 v47 
    let v49 : uint64 = System.Convert.ToUInt64 v48.Length
    let v50 : bool = v49 = 0UL
    let v847 : leptos_dom_Fragment =
        if v50 then
            let v51 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
            let v52 : string = " " + v51 + v4 + ""
            let v53 : string = "class=\"[height:17px]\""
            let v54 : string = " " + v53 + v4 + ""
            let v55 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v56 : string = "fill=\"none\""
            let v57 : string = "height=\"100%\""
            let v58 : string = "viewBox=\"0 0 24 24\""
            let v59 : string = "stroke-width=\"1.5\""
            let v60 : string = "stroke=\"currentColor\""
            let v61 : string = "class=\"text-red-700\""
            let v62 : string = " " + v55 + v4 + ""
            let v63 : string = " " + v56 + v62 + ""
            let v64 : string = " " + v57 + v63 + ""
            let v65 : string = " " + v58 + v64 + ""
            let v66 : string = " " + v59 + v65 + ""
            let v67 : string = " " + v60 + v66 + ""
            let v68 : string = " " + v61 + v67 + ""
            let v69 : string = "stroke-linecap=\"round\""
            let v70 : string = "stroke-linejoin=\"round\""
            let v71 : string = "d=\"M6 18L18 6M6 6l12 12\""
            let v72 : string = " " + v69 + v4 + ""
            let v73 : string = " " + v70 + v72 + ""
            let v74 : string = " " + v71 + v73 + ""
            let v75 : string = "vec![" + v4 + "]"
            let v76 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v75 
            let v77 : string = "leptos::prelude::Fragment::new($0)"
            let v78 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v76 v77 
            let v79 : string = "leptos::prelude::AnyView::from($0)"
            let v80 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v78 v79 
            let v81 : string = "path"
            let v82 : string = "<" + v81 + " " + v74 + ">move || { v80 }</" + v81 + ">"
            let v83 : string = "leptos::prelude::view! { " + v82 + " }"
            let v84 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v83 
            let v85 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v84 |> unbox
            let v86 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v87 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v85 v86 
            let v88 : string = "v87"
            let v89 : string = v88 + v4 
            let v90 : string = v89 + v4 
            let v91 : string = "vec![" + v90 + "]"
            let v92 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v91 
            let v93 : string = "leptos::prelude::Fragment::new($0)"
            let v94 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v92 v93 
            let v95 : string = "leptos::prelude::AnyView::from($0)"
            let v96 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v94 v95 
            let v97 : string = "svg"
            let v98 : string = "<" + v97 + " " + v68 + ">move || { v96 }</" + v97 + ">"
            let v99 : string = "leptos::prelude::view! { " + v98 + " }"
            let v100 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v99 
            let v101 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v100 |> unbox
            let v102 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v103 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v101 v102 
            let v104 : string = "v103"
            let v105 : string = v104 + v4 
            let v106 : string = v105 + v4 
            let v107 : string = "vec![" + v106 + "]"
            let v108 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v107 
            let v109 : string = "leptos::prelude::Fragment::new($0)"
            let v110 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v108 v109 
            let v111 : string = "leptos::prelude::AnyView::from($0)"
            let v112 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v110 v111 
            let v113 : string = "span"
            let v114 : string = "<" + v113 + " " + v54 + ">move || { v112 }</" + v113 + ">"
            let v115 : string = "leptos::prelude::view! { " + v114 + " }"
            let v116 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v115 
            let v117 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v116 |> unbox
            let v118 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v119 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v117 v118 
            let v120 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
            let v121 : string = " " + v120 + v4 + ""
            let v122 : string = "No data"
            (* run_target_args'
            let v127 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v128 : string = "&*$0"
            let v129 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v122 v128 
            let _run_target_args'_v127 = v129 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v130 : string = "&*$0"
            let v131 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v122 v130 
            let _run_target_args'_v127 = v131 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v132 : string = "&*$0"
            let v133 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v122 v132 
            let _run_target_args'_v127 = v133 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v135 : Ref<Str> = v122 |> unbox<Ref<Str>>
            let _run_target_args'_v127 = v135 
            #endif
#if FABLE_COMPILER_PYTHON
            let v139 : Ref<Str> = v122 |> unbox<Ref<Str>>
            let _run_target_args'_v127 = v139 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v143 : Ref<Str> = v122 |> unbox<Ref<Str>>
            let _run_target_args'_v127 = v143 
            #endif
#else
            let v147 : Ref<Str> = v122 |> unbox<Ref<Str>>
            let _run_target_args'_v127 = v147 
            #endif
            let v150 : Ref<Str> = _run_target_args'_v127 
            (* run_target_args'
            let v160 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v161 : string = "String::from($0)"
            let v162 : std_string_String = Fable.Core.RustInterop.emitRustExpr v150 v161 
            let _run_target_args'_v160 = v162 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v163 : string = "String::from($0)"
            let v164 : std_string_String = Fable.Core.RustInterop.emitRustExpr v150 v163 
            let _run_target_args'_v160 = v164 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v165 : string = "String::from($0)"
            let v166 : std_string_String = Fable.Core.RustInterop.emitRustExpr v150 v165 
            let _run_target_args'_v160 = v166 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v168 : std_string_String = v150 |> unbox<std_string_String>
            let _run_target_args'_v160 = v168 
            #endif
#if FABLE_COMPILER_PYTHON
            let v172 : std_string_String = v150 |> unbox<std_string_String>
            let _run_target_args'_v160 = v172 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v176 : std_string_String = v150 |> unbox<std_string_String>
            let _run_target_args'_v160 = v176 
            #endif
#else
            let v180 : std_string_String = v150 |> unbox<std_string_String>
            let _run_target_args'_v160 = v180 
            #endif
            let v183 : std_string_String = _run_target_args'_v160 
            let v189 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v190 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v183 v189 
            let v191 : string = "v190"
            let v192 : string = v191 + v4 
            let v193 : string = v192 + v4 
            let v194 : string = "vec![" + v193 + "]"
            let v195 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v194 
            let v196 : string = "leptos::prelude::Fragment::new($0)"
            let v197 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v195 v196 
            let v198 : string = "leptos::prelude::AnyView::from($0)"
            let v199 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v197 v198 
            let v200 : string = "pre"
            let v201 : string = "<" + v200 + " " + v121 + ">move || { v199 }</" + v200 + ">"
            let v202 : string = "leptos::prelude::view! { " + v201 + " }"
            let v203 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v202 
            let v204 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v203 |> unbox
            let v205 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v206 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v204 v205 
            let v207 : string = "v206"
            let v208 : string = v207 + v4 
            let v209 : string = v208 + v4 
            let v210 : string = "v119"
            let v211 : string = ", "
            let v212 : string = v210 + v211 
            let v213 : string = v212 + v209 
            let v214 : string = "vec![" + v213 + "]"
            let v215 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v214 
            let v216 : string = "leptos::prelude::Fragment::new($0)"
            let v217 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v215 v216 
            let v218 : string = "leptos::prelude::AnyView::from($0)"
            let v219 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v217 v218 
            let v220 : string = "div"
            let v221 : string = "<" + v220 + " " + v52 + ">move || { v219 }</" + v220 + ">"
            let v222 : string = "leptos::prelude::view! { " + v221 + " }"
            let v223 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v222 
            let v224 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v223 |> unbox
            let v225 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v226 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v224 v225 
            let v227 : string = "v226"
            let v228 : string = v227 + v4 
            let v229 : string = v228 + v4 
            let v230 : string = "vec![" + v229 + "]"
            let v231 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v230 
            let v232 : string = "leptos::prelude::Fragment::new($0)"
            let v233 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v231 v232 
            v233
        else
            let v236 : (leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> -> US66) = method190()
            let v237 : US66 option = v0 |> Option.map v236 
            let v257 : US66 = US66_1
            let v258 : US66 = v237 |> Option.defaultValue v257 
            match v258 with
            | US66_1 -> (* None *)
                let v841 : string = "vec![" + v4 + "]"
                let v842 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v841 
                let v843 : string = "leptos::prelude::Fragment::new($0)"
                let v844 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v842 v843 
                v844
            | US66_0(v262) -> (* Some *)
                let v263 : string = "$0"
                let v264 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> = Fable.Core.RustInterop.emitRustExpr v262 v263 
                let v265 : unit = ()
                let v266 : string = $"true; let _func1_from_v265 = Func1::from(move |value| {{ //"
                let v267 : bool = Fable.Core.RustInterop.emitRustExpr () v266 
                let v268 : string = $"value"
                let struct (v269 : int32, v270 : leptos_prelude_ReadSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr () v268 
                let func1_from_result = v269 //
                let v271 : _ = func1_from_result
                let v272 : string = $"true; $0 /*"
                let v273 : bool = Fable.Core.RustInterop.emitRustExpr v271 v272 
                let v274 : string = $"*/ }}); //"
                let v275 : bool = Fable.Core.RustInterop.emitRustExpr () v274 
                let v276 : string = $"_func1_from_v265"
                let v277 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32> = Fable.Core.RustInterop.emitRustExpr () v276 
                let v278 : (struct (int32 * leptos_prelude_ReadSignal<std_string_String>) -> int32) = method191(v277)
                let v279 : unit = ()
                let v280 : string = $"true; let _func1_from_v279 = Func1::from(move |value| {{ //"
                let v281 : bool = Fable.Core.RustInterop.emitRustExpr () v280 
                let v282 : string = $"value"
                let struct (v283 : int32, v284 : leptos_prelude_ReadSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr () v282 
                let v285 : string = $"leptos::prelude::ReadSignal::get(&$0)"
                let v286 : std_string_String = Fable.Core.RustInterop.emitRustExpr v284 v285 
                let v287 : std_string_String = method193(v286)
                let v288 : unit = ()
                let v289 : string = $"true; let _func0_from_v288 = Func0::from(move || {{ //"
                let v290 : bool = Fable.Core.RustInterop.emitRustExpr () v289 
                let v291 : string = "fable_library_rust::String_::fromString($0)"
                let v292 : string = Fable.Core.RustInterop.emitRustExpr v286 v291 
                let v293 : leptos_prelude_ArcRwSignal<Heap1> = v2.l0
                let v294 : string = "Box::pin($0)"
                let v295 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v293 v294 
                let v296 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                let v297 : Heap1 = Fable.Core.RustInterop.emitRustExpr v295 v296 
                let v298 : leptos_prelude_ArcRwSignal<Heap0> = v297.l3
                let v299 : string = "Box::pin($0)"
                let v300 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v298 v299 
                let v301 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                let v302 : Heap0 = Fable.Core.RustInterop.emitRustExpr v300 v301 
                let v303 : Vec<(bool * std_string_String)> = v302.l0
                let v304 : std_string_String option = v302.l1
                let v305 : int32 = v302.l2
                let v306 : int32 = v302.l3
                let v307 : US1 = v302.l4
                let v308 : leptos_prelude_ArcRwSignal<Heap1> = v2.l0
                let v309 : string = "Box::pin($0)"
                let v310 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v308 v309 
                let v311 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                let v312 : Heap1 = Fable.Core.RustInterop.emitRustExpr v310 v311 
                let v313 : leptos_prelude_ArcRwSignal<Heap0> = v312.l3
                (* run_target_args'
                let v318 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v319 : string = "&*$0"
                let v320 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v292 v319 
                let _run_target_args'_v318 = v320 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v321 : string = "&*$0"
                let v322 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v292 v321 
                let _run_target_args'_v318 = v322 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v323 : string = "&*$0"
                let v324 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v292 v323 
                let _run_target_args'_v318 = v324 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v326 : Ref<Str> = v292 |> unbox<Ref<Str>>
                let _run_target_args'_v318 = v326 
                #endif
#if FABLE_COMPILER_PYTHON
                let v330 : Ref<Str> = v292 |> unbox<Ref<Str>>
                let _run_target_args'_v318 = v330 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v334 : Ref<Str> = v292 |> unbox<Ref<Str>>
                let _run_target_args'_v318 = v334 
                #endif
#else
                let v338 : Ref<Str> = v292 |> unbox<Ref<Str>>
                let _run_target_args'_v318 = v338 
                #endif
                let v341 : Ref<Str> = _run_target_args'_v318 
                (* run_target_args'
                let v351 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v352 : string = "String::from($0)"
                let v353 : std_string_String = Fable.Core.RustInterop.emitRustExpr v341 v352 
                let _run_target_args'_v351 = v353 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v354 : string = "String::from($0)"
                let v355 : std_string_String = Fable.Core.RustInterop.emitRustExpr v341 v354 
                let _run_target_args'_v351 = v355 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v356 : string = "String::from($0)"
                let v357 : std_string_String = Fable.Core.RustInterop.emitRustExpr v341 v356 
                let _run_target_args'_v351 = v357 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v359 : std_string_String = v341 |> unbox<std_string_String>
                let _run_target_args'_v351 = v359 
                #endif
#if FABLE_COMPILER_PYTHON
                let v363 : std_string_String = v341 |> unbox<std_string_String>
                let _run_target_args'_v351 = v363 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v367 : std_string_String = v341 |> unbox<std_string_String>
                let _run_target_args'_v351 = v367 
                #endif
#else
                let v371 : std_string_String = v341 |> unbox<std_string_String>
                let _run_target_args'_v351 = v371 
                #endif
                let v374 : std_string_String = _run_target_args'_v351 
                let v381 : std_string_String option = Some v374 
                let v384 : Heap0 = {l0 = v303; l1 = v381; l2 = v305; l3 = v306; l4 = v307} : Heap0
                let v385 : string = $"true; leptos::prelude::ArcRwSignal::set(&$0, $1); //"
                let v386 : bool = Fable.Core.RustInterop.emitRustExpr struct (v313, v384) v385 
                // rust.func0_from / is_unit
                let v387 : string = $"true; /*"
                let v388 : bool = Fable.Core.RustInterop.emitRustExpr () v387 
                let v389 : string = $"*/ }}); //"
                let v390 : bool = Fable.Core.RustInterop.emitRustExpr () v389 
                let v391 : string = $"_func0_from_v288"
                let v392 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v391 
                let v393 : string = "flex"
                let v394 : string = "flex-1"
                let v395 : string = "gap-[10px]"
                let v396 : string = "[align-items:center]"
                let v397 : string = "[justify-content:center]"
                let v398 : string = "inline-block"
                let v399 : string = "rounded"
                let v400 : string = "border"
                let v401 : string = "border-gray-400"
                let v402 : string = "hover:bg-gray-100"
                let v403 : string = "px-[22px]"
                let v404 : string = "py-1"
                let v405 : string = "text-sm"
                let v406 : string = "text-gray-900"
                let v407 : string = "bg-gray-200"
                let v408 : string = "hover:text-gray-600"
                let v409 : string = "focus:outline-none"
                let v410 : string = "focus:ring"
                let v411 : string = "active:text-gray-500"
                let v412 : string list = []
                let v414 : string list = v411 :: v412 
                let v418 : string list = v410 :: v414 
                let v422 : string list = v409 :: v418 
                let v426 : string list = v408 :: v422 
                let v430 : string list = v407 :: v426 
                let v434 : string list = v406 :: v430 
                let v438 : string list = v405 :: v434 
                let v442 : string list = v404 :: v438 
                let v446 : string list = v403 :: v442 
                let v450 : string list = v402 :: v446 
                let v454 : string list = v401 :: v450 
                let v458 : string list = v400 :: v454 
                let v462 : string list = v399 :: v458 
                let v466 : string list = v398 :: v462 
                let v470 : string list = v397 :: v466 
                let v474 : string list = v396 :: v470 
                let v478 : string list = v395 :: v474 
                let v482 : string list = v394 :: v478 
                let v486 : string list = v393 :: v482 
                let v493 : unit = ()
                let _let'_v493 =
                    seq {
                        yield! v486 
                        (* indent
                        ()
                    indent *)
                    }
                    (* indent
                    ()
                indent *)
                let v496 : string seq = _let'_v493 
                let v504 : (string -> (string seq -> string)) = String.concat
                let v505 : string = " "
                let v506 : (string seq -> string) = v504 v505
                let v507 : string = v506 v496
                (* run_target_args'
                let v514 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v515 : string = "&*$0"
                let v516 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v507 v515 
                let _run_target_args'_v514 = v516 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v517 : string = "&*$0"
                let v518 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v507 v517 
                let _run_target_args'_v514 = v518 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v519 : string = "&*$0"
                let v520 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v507 v519 
                let _run_target_args'_v514 = v520 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v522 : Ref<Str> = v507 |> unbox<Ref<Str>>
                let _run_target_args'_v514 = v522 
                #endif
#if FABLE_COMPILER_PYTHON
                let v526 : Ref<Str> = v507 |> unbox<Ref<Str>>
                let _run_target_args'_v514 = v526 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v530 : Ref<Str> = v507 |> unbox<Ref<Str>>
                let _run_target_args'_v514 = v530 
                #endif
#else
                let v534 : Ref<Str> = v507 |> unbox<Ref<Str>>
                let _run_target_args'_v514 = v534 
                #endif
                let v537 : Ref<Str> = _run_target_args'_v514 
                (* run_target_args'
                let v547 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v548 : string = "String::from($0)"
                let v549 : std_string_String = Fable.Core.RustInterop.emitRustExpr v537 v548 
                let _run_target_args'_v547 = v549 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v550 : string = "String::from($0)"
                let v551 : std_string_String = Fable.Core.RustInterop.emitRustExpr v537 v550 
                let _run_target_args'_v547 = v551 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v552 : string = "String::from($0)"
                let v553 : std_string_String = Fable.Core.RustInterop.emitRustExpr v537 v552 
                let _run_target_args'_v547 = v553 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v555 : std_string_String = v537 |> unbox<std_string_String>
                let _run_target_args'_v547 = v555 
                #endif
#if FABLE_COMPILER_PYTHON
                let v559 : std_string_String = v537 |> unbox<std_string_String>
                let _run_target_args'_v547 = v559 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v563 : std_string_String = v537 |> unbox<std_string_String>
                let _run_target_args'_v547 = v563 
                #endif
#else
                let v567 : std_string_String = v537 |> unbox<std_string_String>
                let _run_target_args'_v547 = v567 
                #endif
                let v570 : std_string_String = _run_target_args'_v547 
                let v576 : string = "$0"
                let v577 : std_string_String = Fable.Core.RustInterop.emitRustExpr v570 v576 
                let v578 : string = "class=v577"
                let v579 : string = "on:click=move |_| v392()"
                let v580 : string = "aria-label=v287"
                let v581 : string = " " + v578 + v4 + ""
                let v582 : string = " " + v579 + v581 + ""
                let v583 : string = " " + v580 + v582 + ""
                let v584 : string = "fable_library_rust::String_::fromString($0)"
                let v585 : string = Fable.Core.RustInterop.emitRustExpr v286 v584 
                let v588 : (leptos_prelude_ArcMemo<US31> -> US65) = method189()
                let v589 : US65 option = v1 |> Option.map v588 
                let v609 : US65 = US65_1
                let v610 : US65 = v589 |> Option.defaultValue v609 
                let v620 : US42 =
                    match v610 with
                    | US65_1 -> (* None *)
                        US42_1
                    | US65_0(v614) -> (* Some *)
                        let v615 : string = $"leptos::prelude::ArcMemo::get(&$0)"
                        let v616 : US31 = Fable.Core.RustInterop.emitRustExpr v614 v615 
                        US42_0(v616)
                let v627 : US31 =
                    match v620 with
                    | US42_0(v621) -> (* Some *)
                        match v621 with
                        | US31_0(v622) -> (* Some *)
                            US31_0(v622)
                        | _ ->
                            US31_1
                    | _ ->
                        US31_1
                let v716 : leptos_prelude_AnyView_ =
                    match v627 with
                    | US31_0(v628) -> (* Some *)
                        let v629 : bool = v585 = v628
                        if v629 then
                            let v630 : string = "$0"
                            let v631 : (unit -> string) = closure177()
                            let v632 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v631 v630 
                            let v633 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                            let v634 : string = "fill=\"none\""
                            let v635 : string = "viewBox=\"0 0 24 24\""
                            let v636 : string = "stroke-width=\"1.5\""
                            let v637 : string = "stroke=\"currentColor\""
                            let v638 : string = "class=move || \" \".to_owned() + &v632(())"
                            let v639 : string = " " + v633 + v4 + ""
                            let v640 : string = " " + v634 + v639 + ""
                            let v641 : string = " " + v635 + v640 + ""
                            let v642 : string = " " + v636 + v641 + ""
                            let v643 : string = " " + v637 + v642 + ""
                            let v644 : string = " " + v638 + v643 + ""
                            let v645 : string = "cx=\"12\""
                            let v646 : string = "cy=\"12\""
                            let v647 : string = "r=\"9\""
                            let v648 : string = "stroke-linecap=\"round\""
                            let v649 : string = "stroke-linejoin=\"round\""
                            let v650 : string = " " + v645 + v4 + ""
                            let v651 : string = " " + v646 + v650 + ""
                            let v652 : string = " " + v647 + v651 + ""
                            let v653 : string = " " + v648 + v652 + ""
                            let v654 : string = " " + v649 + v653 + ""
                            let v655 : string = "vec![" + v4 + "]"
                            let v656 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v655 
                            let v657 : string = "leptos::prelude::Fragment::new($0)"
                            let v658 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v656 v657 
                            let v659 : string = "leptos::prelude::AnyView::from($0)"
                            let v660 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v658 v659 
                            let v661 : string = "circle"
                            let v662 : string = "<" + v661 + " " + v654 + ">move || { v660 }</" + v661 + ">"
                            let v663 : string = "leptos::prelude::view! { " + v662 + " }"
                            let v664 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v663 
                            let v665 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v664 |> unbox
                            let v666 : string = "leptos::prelude::IntoAny::into_any($0)"
                            let v667 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v665 v666 
                            let v668 : string = "stroke-linecap=\"round\""
                            let v669 : string = "stroke-linejoin=\"round\""
                            let v670 : string = "d=\"M9 12l2 2l4 -4\""
                            let v671 : string = " " + v668 + v4 + ""
                            let v672 : string = " " + v669 + v671 + ""
                            let v673 : string = " " + v670 + v672 + ""
                            let v674 : string = "vec![" + v4 + "]"
                            let v675 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v674 
                            let v676 : string = "leptos::prelude::Fragment::new($0)"
                            let v677 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v675 v676 
                            let v678 : string = "leptos::prelude::AnyView::from($0)"
                            let v679 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v677 v678 
                            let v680 : string = "path"
                            let v681 : string = "<" + v680 + " " + v673 + ">move || { v679 }</" + v680 + ">"
                            let v682 : string = "leptos::prelude::view! { " + v681 + " }"
                            let v683 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v682 
                            let v684 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v683 |> unbox
                            let v685 : string = "leptos::prelude::IntoAny::into_any($0)"
                            let v686 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v684 v685 
                            let v687 : string = "v686"
                            let v688 : string = v687 + v4 
                            let v689 : string = v688 + v4 
                            let v690 : string = "v667"
                            let v691 : string = ", "
                            let v692 : string = v690 + v691 
                            let v693 : string = v692 + v689 
                            let v694 : string = "vec![" + v693 + "]"
                            let v695 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v694 
                            let v696 : string = "leptos::prelude::Fragment::new($0)"
                            let v697 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v695 v696 
                            let v698 : string = "leptos::prelude::AnyView::from($0)"
                            let v699 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v697 v698 
                            let v700 : string = "svg"
                            let v701 : string = "<" + v700 + " " + v644 + ">move || { v699 }</" + v700 + ">"
                            let v702 : string = "leptos::prelude::view! { " + v701 + " }"
                            let v703 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v702 
                            let v704 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v703 |> unbox
                            let v705 : string = "leptos::prelude::IntoAny::into_any($0)"
                            let v706 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v704 v705 
                            v706
                        else
                            let v707 : string = "vec![" + v4 + "]"
                            let v708 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v707 
                            let v709 : string = "leptos::prelude::IntoAny::into_any($0)"
                            let v710 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v708 v709 
                            v710
                    | _ ->
                        let v712 : string = "vec![" + v4 + "]"
                        let v713 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v712 
                        let v714 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v715 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v713 v714 
                        v715
                (* run_target_args'
                let v721 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v722 : string = "&*$0"
                let v723 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v585 v722 
                let _run_target_args'_v721 = v723 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v724 : string = "&*$0"
                let v725 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v585 v724 
                let _run_target_args'_v721 = v725 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v726 : string = "&*$0"
                let v727 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v585 v726 
                let _run_target_args'_v721 = v727 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v729 : Ref<Str> = v585 |> unbox<Ref<Str>>
                let _run_target_args'_v721 = v729 
                #endif
#if FABLE_COMPILER_PYTHON
                let v733 : Ref<Str> = v585 |> unbox<Ref<Str>>
                let _run_target_args'_v721 = v733 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v737 : Ref<Str> = v585 |> unbox<Ref<Str>>
                let _run_target_args'_v721 = v737 
                #endif
#else
                let v741 : Ref<Str> = v585 |> unbox<Ref<Str>>
                let _run_target_args'_v721 = v741 
                #endif
                let v744 : Ref<Str> = _run_target_args'_v721 
                (* run_target_args'
                let v754 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v755 : string = "String::from($0)"
                let v756 : std_string_String = Fable.Core.RustInterop.emitRustExpr v744 v755 
                let _run_target_args'_v754 = v756 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v757 : string = "String::from($0)"
                let v758 : std_string_String = Fable.Core.RustInterop.emitRustExpr v744 v757 
                let _run_target_args'_v754 = v758 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v759 : string = "String::from($0)"
                let v760 : std_string_String = Fable.Core.RustInterop.emitRustExpr v744 v759 
                let _run_target_args'_v754 = v760 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v762 : std_string_String = v744 |> unbox<std_string_String>
                let _run_target_args'_v754 = v762 
                #endif
#if FABLE_COMPILER_PYTHON
                let v766 : std_string_String = v744 |> unbox<std_string_String>
                let _run_target_args'_v754 = v766 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v770 : std_string_String = v744 |> unbox<std_string_String>
                let _run_target_args'_v754 = v770 
                #endif
#else
                let v774 : std_string_String = v744 |> unbox<std_string_String>
                let _run_target_args'_v754 = v774 
                #endif
                let v777 : std_string_String = _run_target_args'_v754 
                let v783 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                let v784 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v777 v783 
                let v785 : string = "v784"
                let v786 : string = v785 + v4 
                let v787 : string = v786 + v4 
                let v788 : string = "v716"
                let v789 : string = ", "
                let v790 : string = v788 + v789 
                let v791 : string = v790 + v787 
                let v792 : string = "vec![" + v791 + "]"
                let v793 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v792 
                let v794 : string = "leptos::prelude::Fragment::new($0)"
                let v795 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v793 v794 
                let v796 : string = "leptos::prelude::AnyView::from($0)"
                let v797 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v795 v796 
                let v798 : string = "button"
                let v799 : string = "<" + v798 + " " + v583 + ">move || { v797 }</" + v798 + ">"
                let v800 : string = "leptos::prelude::view! { " + v799 + " }"
                let v801 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v800 
                let v802 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Button>> = v801 |> unbox
                let v803 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v804 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v802 v803 
                let v805 : string = "v804"
                let v806 : string = v805 + v4 
                let v807 : string = v806 + v4 
                let v808 : string = "vec![" + v807 + "]"
                let v809 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v808 
                let v810 : string = "leptos::prelude::Fragment::new($0)"
                let v811 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v809 v810 
                let v812 : string = "leptos::prelude::AnyView::from($0)"
                let v813 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v811 v812 
                let func1_from_result = v813 //
                let v814 : _ = func1_from_result
                let v815 : string = $"true; $0 /*"
                let v816 : bool = Fable.Core.RustInterop.emitRustExpr v814 v815 
                let v817 : string = $"*/ }}); //"
                let v818 : bool = Fable.Core.RustInterop.emitRustExpr () v817 
                let v819 : string = $"_func1_from_v279"
                let v820 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v819 
                let v821 : string = "each=v264"
                let v822 : string = "key=move |x| v278(x.to_owned())"
                let v823 : string = "let:x"
                let v824 : (struct (int32 * leptos_prelude_ReadSignal<std_string_String>) -> leptos_prelude_AnyView_) = closure178(v820)
                let v825 : string = "children=move |x| v824(x)"
                let v826 : string = " " + v821 + v4 + ""
                let v827 : string = " " + v822 + v826 + ""
                let v828 : string = " " + v823 + v827 + ""
                let v829 : string = " " + v825 + v828 + ""
                let v830 : string = "leptos::prelude::For"
                let v831 : string = "<" + v830 + " " + v829 + " />"
                let v832 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::view! { " + v831 + " })"
                let v833 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr () v832 
                let v834 : string = "v833"
                let v835 : string = v834 + v4 
                let v836 : string = v835 + v4 
                let v837 : string = "vec![" + v836 + "]"
                let v838 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v837 
                let v839 : string = "leptos::prelude::Fragment::new($0)"
                let v840 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v838 v839 
                v840
    let v848 : string = "leptos::prelude::AnyView::from($0)"
    let v849 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v847 v848 
    let v850 : string = "div"
    let v851 : string = "<" + v850 + " " + v5 + ">move || { v849 }</" + v850 + ">"
    let v852 : string = "leptos::prelude::view! { " + v851 + " }"
    let v853 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v852 
    let v854 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v853 |> unbox
    let v855 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v856 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v854 v855 
    let v857 : string = "v856"
    let v858 : string = v857 + v4 
    let v859 : string = v858 + v4 
    let v860 : string = "vec![" + v859 + "]"
    let v861 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v860 
    let v862 : string = "leptos::prelude::Fragment::new($0)"
    let v863 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v861 v862 
    v863
and method195 (v0 : Func0<leptos_dom_Fragment>) : Func0<leptos_dom_Fragment> =
    v0
and closure179 () () : string =
    let v0 : string = ""
    v0
and method196 (v0 : Func0<std_string_String, unit>) : Func0<std_string_String, unit> =
    v0
and closure180 (v0 : Func0<std_string_String, unit>) (v1 : std_string_String) : unit =
    let v2 : Func0<std_string_String, unit> = method196(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    Fable.Core.RustInterop.emitRustExpr v3 v4 
    ()
and closure181 (v0 : leptos_prelude_ArcAction<Heap6, Result<US59, std_string_String>>) () : bool =
    let v1 : string = "leptos::prelude::ArcAction::pending(&$0)"
    let v2 : leptos_prelude_ArcMemo<bool> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    v4
and method197 (v0 : Func0<bool>) : Func0<bool> =
    v0
and closure182 () () : string =
    let v0 : string = "[width:15px] [height:14px]"
    v0
and closure167 (v0 : Heap2, v1 : leptos_prelude_ArcAction<Heap6, Result<US59, std_string_String>>, v2 : leptos_prelude_ArcMemo<string option>, v3 : leptos_prelude_ArcMemo<US31>, v4 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>>) () : leptos_dom_Fragment =
    let v5 : string = "class=\"flex flex-col p-[10px] gap-[11px]\""
    let v6 : string = ""
    let v7 : string = " " + v5 + v6 + ""
    let v8 : string = "class=\"flex [flex-direction:column] [gap:2px] [align-items:flex-start]\""
    let v9 : string = " " + v8 + v6 + ""
    let v10 : string = "Account"
    (* run_target_args'
    let v15 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v16 : string = "&*$0"
    let v17 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v10 v16 
    let _run_target_args'_v15 = v17 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v18 : string = "&*$0"
    let v19 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v10 v18 
    let _run_target_args'_v15 = v19 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v20 : string = "&*$0"
    let v21 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v10 v20 
    let _run_target_args'_v15 = v21 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v23 : Ref<Str> = v10 |> unbox<Ref<Str>>
    let _run_target_args'_v15 = v23 
    #endif
#if FABLE_COMPILER_PYTHON
    let v27 : Ref<Str> = v10 |> unbox<Ref<Str>>
    let _run_target_args'_v15 = v27 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v31 : Ref<Str> = v10 |> unbox<Ref<Str>>
    let _run_target_args'_v15 = v31 
    #endif
#else
    let v35 : Ref<Str> = v10 |> unbox<Ref<Str>>
    let _run_target_args'_v15 = v35 
    #endif
    let v38 : Ref<Str> = _run_target_args'_v15 
    (* run_target_args'
    let v48 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v49 : string = "String::from($0)"
    let v50 : std_string_String = Fable.Core.RustInterop.emitRustExpr v38 v49 
    let _run_target_args'_v48 = v50 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v51 : string = "String::from($0)"
    let v52 : std_string_String = Fable.Core.RustInterop.emitRustExpr v38 v51 
    let _run_target_args'_v48 = v52 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v53 : string = "String::from($0)"
    let v54 : std_string_String = Fable.Core.RustInterop.emitRustExpr v38 v53 
    let _run_target_args'_v48 = v54 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v56 : std_string_String = v38 |> unbox<std_string_String>
    let _run_target_args'_v48 = v56 
    #endif
#if FABLE_COMPILER_PYTHON
    let v60 : std_string_String = v38 |> unbox<std_string_String>
    let _run_target_args'_v48 = v60 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v64 : std_string_String = v38 |> unbox<std_string_String>
    let _run_target_args'_v48 = v64 
    #endif
#else
    let v68 : std_string_String = v38 |> unbox<std_string_String>
    let _run_target_args'_v48 = v68 
    #endif
    let v71 : std_string_String = _run_target_args'_v48 
    let v77 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v78 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v71 v77 
    let v80 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option = None
    let v84 : leptos_prelude_ArcMemo<US31> option = None
    let v88 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option = Some v4 
    let v92 : leptos_prelude_ArcMemo<US31> option = Some v3 
    let v95 : string = "vec![" + v6 + "]"
    let v96 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v95 
    let v97 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v98 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v96 v97 
    let v99 : string = "class=\"flex flex-col [position:relative]\""
    let v100 : string = " " + v99 + v6 + ""
    let v101 : string = "$0"
    let v102 : (unit -> string) = closure168()
    let v103 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v102 v101 
    let v104 : string = "$0"
    let v105 : (unit -> bool) = closure169()
    let v106 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v105 v104 
    let v107 : string = "class=\"[position:absolute] [right:0] [top:0]\""
    let v108 : string = " " + v107 + v6 + ""
    let v109 : string = "v98"
    let v110 : string = v109 + v6 
    let v111 : string = v110 + v6 
    let v112 : string = "vec![" + v111 + "]"
    let v113 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v112 
    let v114 : string = "leptos::prelude::Fragment::new($0)"
    let v115 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v113 v114 
    let v116 : string = "leptos::prelude::AnyView::from($0)"
    let v117 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v115 v116 
    let v118 : string = "div"
    let v119 : string = "<" + v118 + " " + v108 + ">move || { v117 }</" + v118 + ">"
    let v120 : string = "leptos::prelude::view! { " + v119 + " }"
    let v121 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v120 
    let v122 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v121 |> unbox
    let v123 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v124 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v122 v123 
    let v125 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v103(())"
    let v126 : string = "open=move || v106(())"
    let v127 : string = " " + v125 + v6 + ""
    let v128 : string = " " + v126 + v127 + ""
    let v129 : string = "$0"
    let v130 : (unit -> string) = closure170()
    let v131 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v130 v129 
    let v132 : string = "$0"
    let v133 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure171(v88, v92, v0)
    let v134 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v133 v132 
    let v135 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v134(()) + \" \" + &v131(())"
    let v136 : string = " " + v135 + v6 + ""
    let v137 : string = "class=\"flex items-center gap-2\""
    let v138 : string = " " + v137 + v6 + ""
    let v139 : (unit -> string) = method188(v88, v92, v0)
    let v140 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
    let v141 : string = " " + v140 + v6 + ""
    let v142 : string = v139 ()
    (* run_target_args'
    let v147 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v148 : string = "&*$0"
    let v149 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v142 v148 
    let _run_target_args'_v147 = v149 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v150 : string = "&*$0"
    let v151 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v142 v150 
    let _run_target_args'_v147 = v151 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v152 : string = "&*$0"
    let v153 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v142 v152 
    let _run_target_args'_v147 = v153 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v155 : Ref<Str> = v142 |> unbox<Ref<Str>>
    let _run_target_args'_v147 = v155 
    #endif
#if FABLE_COMPILER_PYTHON
    let v159 : Ref<Str> = v142 |> unbox<Ref<Str>>
    let _run_target_args'_v147 = v159 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v163 : Ref<Str> = v142 |> unbox<Ref<Str>>
    let _run_target_args'_v147 = v163 
    #endif
#else
    let v167 : Ref<Str> = v142 |> unbox<Ref<Str>>
    let _run_target_args'_v147 = v167 
    #endif
    let v170 : Ref<Str> = _run_target_args'_v147 
    (* run_target_args'
    let v180 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v181 : string = "String::from($0)"
    let v182 : std_string_String = Fable.Core.RustInterop.emitRustExpr v170 v181 
    let _run_target_args'_v180 = v182 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v183 : string = "String::from($0)"
    let v184 : std_string_String = Fable.Core.RustInterop.emitRustExpr v170 v183 
    let _run_target_args'_v180 = v184 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v185 : string = "String::from($0)"
    let v186 : std_string_String = Fable.Core.RustInterop.emitRustExpr v170 v185 
    let _run_target_args'_v180 = v186 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v188 : std_string_String = v170 |> unbox<std_string_String>
    let _run_target_args'_v180 = v188 
    #endif
#if FABLE_COMPILER_PYTHON
    let v192 : std_string_String = v170 |> unbox<std_string_String>
    let _run_target_args'_v180 = v192 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v196 : std_string_String = v170 |> unbox<std_string_String>
    let _run_target_args'_v180 = v196 
    #endif
#else
    let v200 : std_string_String = v170 |> unbox<std_string_String>
    let _run_target_args'_v180 = v200 
    #endif
    let v203 : std_string_String = _run_target_args'_v180 
    let v209 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v210 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v203 v209 
    let v211 : string = "v210"
    let v212 : string = v211 + v6 
    let v213 : string = v212 + v6 
    let v214 : string = "vec![" + v213 + "]"
    let v215 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v214 
    let v216 : string = "leptos::prelude::Fragment::new($0)"
    let v217 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v215 v216 
    let v218 : string = "leptos::prelude::AnyView::from($0)"
    let v219 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v217 v218 
    let v220 : string = "span"
    let v221 : string = "<" + v220 + " " + v141 + ">move || { v219 }</" + v220 + ">"
    let v222 : string = "leptos::prelude::view! { " + v221 + " }"
    let v223 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v222 
    let v224 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v223 |> unbox
    let v225 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v226 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v224 v225 
    let v227 : string = "v226"
    let v228 : string = v227 + v6 
    let v229 : string = v228 + v6 
    let v230 : string = "vec![" + v229 + "]"
    let v231 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v230 
    let v232 : string = "leptos::prelude::Fragment::new($0)"
    let v233 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v231 v232 
    let v234 : string = "leptos::prelude::AnyView::from($0)"
    let v235 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v233 v234 
    let v236 : string = "<" + v118 + " " + v138 + ">move || { v235 }</" + v118 + ">"
    let v237 : string = "leptos::prelude::view! { " + v236 + " }"
    let v238 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v237 
    let v239 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v238 |> unbox
    let v240 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v241 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v239 v240 
    let v242 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
    let v243 : string = " " + v242 + v6 + ""
    let v244 : string = "$0"
    let v245 : (unit -> string) = closure166()
    let v246 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v245 v244 
    let v247 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v248 : string = "viewBox=\"0 0 20 20\""
    let v249 : string = "fill=\"currentColor\""
    let v250 : string = "class=move || \" \".to_owned() + &v246(())"
    let v251 : string = " " + v247 + v6 + ""
    let v252 : string = " " + v248 + v251 + ""
    let v253 : string = " " + v249 + v252 + ""
    let v254 : string = " " + v250 + v253 + ""
    let v255 : string = "fill-rule=\"evenodd\""
    let v256 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
    let v257 : string = "clip-rule=\"evenodd\""
    let v258 : string = " " + v255 + v6 + ""
    let v259 : string = " " + v256 + v258 + ""
    let v260 : string = " " + v257 + v259 + ""
    let v261 : string = "vec![" + v6 + "]"
    let v262 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v261 
    let v263 : string = "leptos::prelude::Fragment::new($0)"
    let v264 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v262 v263 
    let v265 : string = "leptos::prelude::AnyView::from($0)"
    let v266 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v264 v265 
    let v267 : string = "path"
    let v268 : string = "<" + v267 + " " + v260 + ">move || { v266 }</" + v267 + ">"
    let v269 : string = "leptos::prelude::view! { " + v268 + " }"
    let v270 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v269 
    let v271 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v270 |> unbox
    let v272 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v273 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v271 v272 
    let v274 : string = "v273"
    let v275 : string = v274 + v6 
    let v276 : string = v275 + v6 
    let v277 : string = "vec![" + v276 + "]"
    let v278 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v277 
    let v279 : string = "leptos::prelude::Fragment::new($0)"
    let v280 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v278 v279 
    let v281 : string = "leptos::prelude::AnyView::from($0)"
    let v282 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v280 v281 
    let v283 : string = "svg"
    let v284 : string = "<" + v283 + " " + v254 + ">move || { v282 }</" + v283 + ">"
    let v285 : string = "leptos::prelude::view! { " + v284 + " }"
    let v286 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v285 
    let v287 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v286 |> unbox
    let v288 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v289 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v287 v288 
    let v290 : string = "v289"
    let v291 : string = v290 + v6 
    let v292 : string = v291 + v6 
    let v293 : string = "vec![" + v292 + "]"
    let v294 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v293 
    let v295 : string = "leptos::prelude::Fragment::new($0)"
    let v296 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v294 v295 
    let v297 : string = "leptos::prelude::AnyView::from($0)"
    let v298 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v296 v297 
    let v299 : string = "<" + v220 + " " + v243 + ">move || { v298 }</" + v220 + ">"
    let v300 : string = "leptos::prelude::view! { " + v299 + " }"
    let v301 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v300 
    let v302 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v301 |> unbox
    let v303 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v304 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v302 v303 
    let v305 : string = "v304"
    let v306 : string = v305 + v6 
    let v307 : string = v306 + v6 
    let v308 : string = "v241"
    let v309 : string = ", "
    let v310 : string = v308 + v309 
    let v311 : string = v310 + v307 
    let v312 : string = "vec![" + v311 + "]"
    let v313 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v312 
    let v314 : string = "leptos::prelude::Fragment::new($0)"
    let v315 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v313 v314 
    let v316 : string = "leptos::prelude::AnyView::from($0)"
    let v317 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v315 v316 
    let v318 : string = "summary"
    let v319 : string = "<" + v318 + " " + v136 + ">move || { v317 }</" + v318 + ">"
    let v320 : string = "leptos::prelude::view! { " + v319 + " }"
    let v321 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v320 
    let v322 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v321 |> unbox
    let v323 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v324 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v322 v323 
    let v325 : string = "class=\"flex flex-1 flex-col\""
    let v326 : string = " " + v325 + v6 + ""
    let v327 : string = "Func0::new(move || $0())"
    let v328 : (unit -> leptos_dom_Fragment) = closure174(v88, v92, v0)
    let v329 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v328 v327 
    let v330 : Func0<leptos_dom_Fragment> = method195(v329)
    let v331 : string = "(move || v330())()"
    let v332 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v331 
    let v333 : string = "leptos::prelude::AnyView::from($0)"
    let v334 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v332 v333 
    let v335 : string = "<" + v118 + " " + v326 + ">move || { v334 }</" + v118 + ">"
    let v336 : string = "leptos::prelude::view! { " + v335 + " }"
    let v337 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v336 
    let v338 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v337 |> unbox
    let v339 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v340 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v338 v339 
    let v341 : string = "v340"
    let v342 : string = v341 + v6 
    let v343 : string = v342 + v6 
    let v344 : string = "v324"
    let v345 : string = v344 + v309 
    let v346 : string = v345 + v343 
    let v347 : string = "vec![" + v346 + "]"
    let v348 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v347 
    let v349 : string = "leptos::prelude::Fragment::new($0)"
    let v350 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v348 v349 
    let v351 : string = "leptos::prelude::AnyView::from($0)"
    let v352 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v350 v351 
    let v353 : string = "details"
    let v354 : string = "<" + v353 + " " + v128 + ">move || { v352 }</" + v353 + ">"
    let v355 : string = "leptos::prelude::view! { " + v354 + " }"
    let v356 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v355 
    let v357 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v356 |> unbox
    let v358 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v359 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v357 v358 
    let v360 : string = "v359"
    let v361 : string = v360 + v6 
    let v362 : string = v361 + v6 
    let v363 : string = "v124"
    let v364 : string = v363 + v309 
    let v365 : string = v364 + v362 
    let v366 : string = "vec![" + v365 + "]"
    let v367 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v366 
    let v368 : string = "leptos::prelude::Fragment::new($0)"
    let v369 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v367 v368 
    let v370 : string = "leptos::prelude::AnyView::from($0)"
    let v371 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v369 v370 
    let v372 : string = "<" + v118 + " " + v100 + ">move || { v371 }</" + v118 + ">"
    let v373 : string = "leptos::prelude::view! { " + v372 + " }"
    let v374 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v373 
    let v375 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v374 |> unbox
    let v376 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v377 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v375 v376 
    let v378 : string = "v377"
    let v379 : string = v378 + v6 
    let v380 : string = v379 + v6 
    let v381 : string = "v78"
    let v382 : string = v381 + v309 
    let v383 : string = v382 + v380 
    let v384 : string = "vec![" + v383 + "]"
    let v385 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v384 
    let v386 : string = "leptos::prelude::Fragment::new($0)"
    let v387 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v385 v386 
    let v388 : string = "leptos::prelude::AnyView::from($0)"
    let v389 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v387 v388 
    let v390 : string = "<" + v118 + " " + v9 + ">move || { v389 }</" + v118 + ">"
    let v391 : string = "leptos::prelude::view! { " + v390 + " }"
    let v392 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v391 
    let v393 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v392 |> unbox
    let v394 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v395 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v393 v394 
    let v396 : string = "class=\"flex [flex-direction:column] [gap:2px] [align-items:flex-start]\""
    let v397 : string = " " + v396 + v6 + ""
    let v398 : string = "Max"
    (* run_target_args'
    let v403 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v404 : string = "&*$0"
    let v405 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v398 v404 
    let _run_target_args'_v403 = v405 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v406 : string = "&*$0"
    let v407 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v398 v406 
    let _run_target_args'_v403 = v407 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v408 : string = "&*$0"
    let v409 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v398 v408 
    let _run_target_args'_v403 = v409 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v411 : Ref<Str> = v398 |> unbox<Ref<Str>>
    let _run_target_args'_v403 = v411 
    #endif
#if FABLE_COMPILER_PYTHON
    let v415 : Ref<Str> = v398 |> unbox<Ref<Str>>
    let _run_target_args'_v403 = v415 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v419 : Ref<Str> = v398 |> unbox<Ref<Str>>
    let _run_target_args'_v403 = v419 
    #endif
#else
    let v423 : Ref<Str> = v398 |> unbox<Ref<Str>>
    let _run_target_args'_v403 = v423 
    #endif
    let v426 : Ref<Str> = _run_target_args'_v403 
    (* run_target_args'
    let v436 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v437 : string = "String::from($0)"
    let v438 : std_string_String = Fable.Core.RustInterop.emitRustExpr v426 v437 
    let _run_target_args'_v436 = v438 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v439 : string = "String::from($0)"
    let v440 : std_string_String = Fable.Core.RustInterop.emitRustExpr v426 v439 
    let _run_target_args'_v436 = v440 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v441 : string = "String::from($0)"
    let v442 : std_string_String = Fable.Core.RustInterop.emitRustExpr v426 v441 
    let _run_target_args'_v436 = v442 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v444 : std_string_String = v426 |> unbox<std_string_String>
    let _run_target_args'_v436 = v444 
    #endif
#if FABLE_COMPILER_PYTHON
    let v448 : std_string_String = v426 |> unbox<std_string_String>
    let _run_target_args'_v436 = v448 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v452 : std_string_String = v426 |> unbox<std_string_String>
    let _run_target_args'_v436 = v452 
    #endif
#else
    let v456 : std_string_String = v426 |> unbox<std_string_String>
    let _run_target_args'_v436 = v456 
    #endif
    let v459 : std_string_String = _run_target_args'_v436 
    let v465 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v466 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v459 v465 
    let v467 : unit = ()
    let v468 : string = $"true; let _func0_from_v467 = Func0::from(move || {{ //"
    let v469 : bool = Fable.Core.RustInterop.emitRustExpr () v468 
    let v470 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v471 : string = "Box::pin($0)"
    let v472 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v470 v471 
    let v473 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v474 : Heap1 = Fable.Core.RustInterop.emitRustExpr v472 v473 
    let v475 : leptos_prelude_ArcRwSignal<Heap0> = v474.l3
    let v476 : string = "Box::pin($0)"
    let v477 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v475 v476 
    let v478 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v479 : Heap0 = Fable.Core.RustInterop.emitRustExpr v477 v478 
    let v480 : int32 = v479.l2
    let v481 : string = $"true; $0 /*"
    let v482 : bool = Fable.Core.RustInterop.emitRustExpr v480 v481 
    let v483 : string = $"*/ }}); //"
    let v484 : bool = Fable.Core.RustInterop.emitRustExpr () v483 
    let v485 : string = $"_func0_from_v467"
    let v486 : Func0<int32> = Fable.Core.RustInterop.emitRustExpr () v485 
    let v487 : unit = ()
    let v488 : string = $"true; let _func1_from_v487 = Func0::from(move || {{ //"
    let v489 : bool = Fable.Core.RustInterop.emitRustExpr () v488 
    let v490 : string = $"value"
    let v491 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v490 
    let v492 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v493 : string = "Box::pin($0)"
    let v494 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v492 v493 
    let v495 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v496 : Heap1 = Fable.Core.RustInterop.emitRustExpr v494 v495 
    let v497 : leptos_prelude_ArcRwSignal<Heap0> = v496.l3
    let v498 : string = "Box::pin($0)"
    let v499 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v497 v498 
    let v500 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v501 : Heap0 = Fable.Core.RustInterop.emitRustExpr v499 v500 
    let v502 : Vec<(bool * std_string_String)> = v501.l0
    let v503 : std_string_String option = v501.l1
    let v504 : int32 = v501.l2
    let v505 : int32 = v501.l3
    let v506 : US1 = v501.l4
    let v507 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v508 : string = "Box::pin($0)"
    let v509 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v507 v508 
    let v510 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v511 : Heap1 = Fable.Core.RustInterop.emitRustExpr v509 v510 
    let v512 : leptos_prelude_ArcRwSignal<Heap0> = v511.l3
    let v514 : (std_string_String -> string) = _.ToString()
    let v515 : string = v514 v491
    let v518 : bool = "" = v515
    let v532 : int32 =
        if v518 then
            1
        else
            let v524 : int32 = v515 |> int32 
            v524
    let v533 : Heap0 = {l0 = v502; l1 = v503; l2 = v532; l3 = v505; l4 = v506} : Heap0
    let v534 : string = $"true; leptos::prelude::ArcRwSignal::set(&$0, $1); //"
    let v535 : bool = Fable.Core.RustInterop.emitRustExpr struct (v512, v533) v534 
    let v536 : string = $"true; /*"
    let v537 : bool = Fable.Core.RustInterop.emitRustExpr () v536 
    let v538 : string = $"*/ }}); //"
    let v539 : bool = Fable.Core.RustInterop.emitRustExpr () v538 
    let v540 : string = $"_func1_from_v487"
    let v541 : Func0<std_string_String, unit> = Fable.Core.RustInterop.emitRustExpr () v540 
    let v542 : string = "$0"
    let v543 : (unit -> string) = closure179()
    let v544 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v543 v542 
    let v545 : string = "class=move || \"bg-gray-50 h-[31px] [font-size:.875rem] \".to_owned() + &v544(())"
    let v546 : string = "prop:value=move || v486()"
    let v547 : (std_string_String -> unit) = closure180(v541)
    let v548 : string = "on:keyup=move |event: web_sys::KeyboardEvent| v547(leptos::prelude::event_target_value(&event))"
    let v549 : string = " " + v545 + v6 + ""
    let v550 : string = " " + v546 + v549 + ""
    let v551 : string = " " + v548 + v550 + ""
    let v552 : string = "input"
    let v553 : string = "<" + v552 + " " + v551 + " />"
    let v554 : string = "leptos::prelude::view! { " + v553 + " }"
    let v555 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v554 
    let v556 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v555 |> unbox
    let v557 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v558 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v556 v557 
    let v559 : string = "v558"
    let v560 : string = v559 + v6 
    let v561 : string = v560 + v6 
    let v562 : string = "v466"
    let v563 : string = v562 + v309 
    let v564 : string = v563 + v561 
    let v565 : string = "vec![" + v564 + "]"
    let v566 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v565 
    let v567 : string = "leptos::prelude::Fragment::new($0)"
    let v568 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v566 v567 
    let v569 : string = "leptos::prelude::AnyView::from($0)"
    let v570 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v568 v569 
    let v571 : string = "<" + v118 + " " + v397 + ">move || { v570 }</" + v118 + ">"
    let v572 : string = "leptos::prelude::view! { " + v571 + " }"
    let v573 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v572 
    let v574 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v573 |> unbox
    let v575 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v576 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v574 v575 
    let v577 : string = "class=\"flex\""
    let v578 : string = " " + v577 + v6 + ""
    let v579 : string = "Func0::new(move || $0())"
    let v580 : (unit -> bool) = closure181(v1)
    let v581 : Func0<bool> = Fable.Core.RustInterop.emitRustExpr v580 v579 
    let v582 : Func0<bool> = method197(v581)
    let v583 : unit = ()
    let v584 : string = $"true; let _func0_from_v583 = Func0::from(move || {{ //"
    let v585 : bool = Fable.Core.RustInterop.emitRustExpr () v584 
    let v586 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v587 : string = "Box::pin($0)"
    let v588 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v586 v587 
    let v589 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v590 : Heap1 = Fable.Core.RustInterop.emitRustExpr v588 v589 
    let v591 : leptos_prelude_ArcRwSignal<Heap0> = v590.l3
    let v592 : string = "Box::pin($0)"
    let v593 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v591 v592 
    let v594 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v595 : Heap0 = Fable.Core.RustInterop.emitRustExpr v593 v594 
    let v596 : int32 = v595.l2
    let v597 : Heap6 = {l0 = v596} : Heap6
    let v598 : string = "true; leptos::prelude::ArcAction::dispatch(&$0, $1.clone())"
    let v599 : bool = Fable.Core.RustInterop.emitRustExpr struct (v1, v597) v598 
    // rust.func0_from / is_unit
    let v600 : string = $"true; /*"
    let v601 : bool = Fable.Core.RustInterop.emitRustExpr () v600 
    let v602 : string = $"*/ }}); //"
    let v603 : bool = Fable.Core.RustInterop.emitRustExpr () v602 
    let v604 : string = $"_func0_from_v583"
    let v605 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v604 
    let v606 : string = "flex"
    let v607 : string = "gap-[10px]"
    let v608 : string = "[align-items:center]"
    let v609 : string = "inline-block"
    let v610 : string = "rounded"
    let v611 : string = "border"
    let v612 : string = "border-gray-400"
    let v613 : string = "hover:bg-gray-400"
    let v614 : string = "px-4"
    let v615 : string = "py-1"
    let v616 : string = "text-sm"
    let v617 : string = "font-medium"
    let v618 : string = "text-gray-900"
    let v619 : string = "bg-transparent"
    let v620 : string = "hover:text-gray-600"
    let v621 : string = "focus:outline-none"
    let v622 : string = "focus:ring"
    let v623 : string = "active:text-gray-500"
    let v624 : string list = []
    let v626 : string list = v623 :: v624 
    let v630 : string list = v622 :: v626 
    let v634 : string list = v621 :: v630 
    let v638 : string list = v620 :: v634 
    let v642 : string list = v619 :: v638 
    let v646 : string list = v618 :: v642 
    let v650 : string list = v617 :: v646 
    let v654 : string list = v616 :: v650 
    let v658 : string list = v615 :: v654 
    let v662 : string list = v614 :: v658 
    let v666 : string list = v613 :: v662 
    let v670 : string list = v612 :: v666 
    let v674 : string list = v611 :: v670 
    let v678 : string list = v610 :: v674 
    let v682 : string list = v609 :: v678 
    let v686 : string list = v608 :: v682 
    let v690 : string list = v607 :: v686 
    let v694 : string list = v606 :: v690 
    let v701 : unit = ()
    let _let'_v701 =
        seq {
            yield! v694 
            (* indent
            ()
        indent *)
        }
        (* indent
        ()
    indent *)
    let v704 : string seq = _let'_v701 
    let v712 : (string -> (string seq -> string)) = String.concat
    let v713 : string = " "
    let v714 : (string seq -> string) = v712 v713
    let v715 : string = v714 v704
    (* run_target_args'
    let v722 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v723 : string = "&*$0"
    let v724 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v715 v723 
    let _run_target_args'_v722 = v724 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v725 : string = "&*$0"
    let v726 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v715 v725 
    let _run_target_args'_v722 = v726 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v727 : string = "&*$0"
    let v728 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v715 v727 
    let _run_target_args'_v722 = v728 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v730 : Ref<Str> = v715 |> unbox<Ref<Str>>
    let _run_target_args'_v722 = v730 
    #endif
#if FABLE_COMPILER_PYTHON
    let v734 : Ref<Str> = v715 |> unbox<Ref<Str>>
    let _run_target_args'_v722 = v734 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v738 : Ref<Str> = v715 |> unbox<Ref<Str>>
    let _run_target_args'_v722 = v738 
    #endif
#else
    let v742 : Ref<Str> = v715 |> unbox<Ref<Str>>
    let _run_target_args'_v722 = v742 
    #endif
    let v745 : Ref<Str> = _run_target_args'_v722 
    (* run_target_args'
    let v755 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v756 : string = "String::from($0)"
    let v757 : std_string_String = Fable.Core.RustInterop.emitRustExpr v745 v756 
    let _run_target_args'_v755 = v757 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v758 : string = "String::from($0)"
    let v759 : std_string_String = Fable.Core.RustInterop.emitRustExpr v745 v758 
    let _run_target_args'_v755 = v759 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v760 : string = "String::from($0)"
    let v761 : std_string_String = Fable.Core.RustInterop.emitRustExpr v745 v760 
    let _run_target_args'_v755 = v761 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v763 : std_string_String = v745 |> unbox<std_string_String>
    let _run_target_args'_v755 = v763 
    #endif
#if FABLE_COMPILER_PYTHON
    let v767 : std_string_String = v745 |> unbox<std_string_String>
    let _run_target_args'_v755 = v767 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v771 : std_string_String = v745 |> unbox<std_string_String>
    let _run_target_args'_v755 = v771 
    #endif
#else
    let v775 : std_string_String = v745 |> unbox<std_string_String>
    let _run_target_args'_v755 = v775 
    #endif
    let v778 : std_string_String = _run_target_args'_v755 
    let v784 : string = "$0"
    let v785 : std_string_String = Fable.Core.RustInterop.emitRustExpr v778 v784 
    let v786 : string = "class=v785"
    let v787 : string = "prop:disabled=move || v582()"
    let v788 : string = "on:click=move |_| v605()"
    let v789 : string = " " + v786 + v6 + ""
    let v790 : string = " " + v787 + v789 + ""
    let v791 : string = " " + v788 + v790 + ""
    let v792 : string = "Roll"
    (* run_target_args'
    let v797 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v798 : string = "&*$0"
    let v799 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v792 v798 
    let _run_target_args'_v797 = v799 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v800 : string = "&*$0"
    let v801 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v792 v800 
    let _run_target_args'_v797 = v801 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v802 : string = "&*$0"
    let v803 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v792 v802 
    let _run_target_args'_v797 = v803 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v805 : Ref<Str> = v792 |> unbox<Ref<Str>>
    let _run_target_args'_v797 = v805 
    #endif
#if FABLE_COMPILER_PYTHON
    let v809 : Ref<Str> = v792 |> unbox<Ref<Str>>
    let _run_target_args'_v797 = v809 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v813 : Ref<Str> = v792 |> unbox<Ref<Str>>
    let _run_target_args'_v797 = v813 
    #endif
#else
    let v817 : Ref<Str> = v792 |> unbox<Ref<Str>>
    let _run_target_args'_v797 = v817 
    #endif
    let v820 : Ref<Str> = _run_target_args'_v797 
    (* run_target_args'
    let v830 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v831 : string = "String::from($0)"
    let v832 : std_string_String = Fable.Core.RustInterop.emitRustExpr v820 v831 
    let _run_target_args'_v830 = v832 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v833 : string = "String::from($0)"
    let v834 : std_string_String = Fable.Core.RustInterop.emitRustExpr v820 v833 
    let _run_target_args'_v830 = v834 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v835 : string = "String::from($0)"
    let v836 : std_string_String = Fable.Core.RustInterop.emitRustExpr v820 v835 
    let _run_target_args'_v830 = v836 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v838 : std_string_String = v820 |> unbox<std_string_String>
    let _run_target_args'_v830 = v838 
    #endif
#if FABLE_COMPILER_PYTHON
    let v842 : std_string_String = v820 |> unbox<std_string_String>
    let _run_target_args'_v830 = v842 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v846 : std_string_String = v820 |> unbox<std_string_String>
    let _run_target_args'_v830 = v846 
    #endif
#else
    let v850 : std_string_String = v820 |> unbox<std_string_String>
    let _run_target_args'_v830 = v850 
    #endif
    let v853 : std_string_String = _run_target_args'_v830 
    let v859 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v860 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v853 v859 
    let v861 : string = "$0()"
    let v862 : bool = Fable.Core.RustInterop.emitRustExpr v581 v861 
    let v1226 : leptos_prelude_AnyView_ =
        if v862 then
            let v863 : string = "$0"
            let v864 : (unit -> string) = closure182()
            let v865 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v864 v863 
            let v866 : string = "version=\"1.1\""
            let v867 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v868 : string = "xmlns:xlink=\"http://www.w3.org/1999/xlink\""
            let v869 : string = "x=\"0px\""
            let v870 : string = "y=\"0px\""
            let v871 : string = "viewBox=\"0 0 24 30\""
            let v872 : string = "style=\"enable-background:new 0 0 50 50;\""
            let v873 : string = "xml:space=\"preserve\""
            let v874 : string = "class=move || \" \".to_owned() + &v865(())"
            let v875 : string = " " + v866 + v6 + ""
            let v876 : string = " " + v867 + v875 + ""
            let v877 : string = " " + v868 + v876 + ""
            let v878 : string = " " + v869 + v877 + ""
            let v879 : string = " " + v870 + v878 + ""
            let v880 : string = " " + v871 + v879 + ""
            let v881 : string = " " + v872 + v880 + ""
            let v882 : string = " " + v873 + v881 + ""
            let v883 : string = " " + v874 + v882 + ""
            let v884 : string = "x=\"0\""
            let v885 : string = "y=\"10\""
            let v886 : string = "width=\"4\""
            let v887 : string = "height=\"10\""
            let v888 : string = "fill=\"#333\""
            let v889 : string = "opacity=\"0.2\""
            let v890 : string = " " + v884 + v6 + ""
            let v891 : string = " " + v885 + v890 + ""
            let v892 : string = " " + v886 + v891 + ""
            let v893 : string = " " + v887 + v892 + ""
            let v894 : string = " " + v888 + v893 + ""
            let v895 : string = " " + v889 + v894 + ""
            let v896 : string = "attributeName=\"opacity\""
            let v897 : string = "attributeType=\"XML\""
            let v898 : string = "values=\"0.2; 1; .2\""
            let v899 : string = "begin=\"0s\""
            let v900 : string = "dur=\"0.6s\""
            let v901 : string = "repeatCount=\"indefinite\""
            let v902 : string = " " + v896 + v6 + ""
            let v903 : string = " " + v897 + v902 + ""
            let v904 : string = " " + v898 + v903 + ""
            let v905 : string = " " + v899 + v904 + ""
            let v906 : string = " " + v900 + v905 + ""
            let v907 : string = " " + v901 + v906 + ""
            let v908 : string = "vec![" + v6 + "]"
            let v909 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v908 
            let v910 : string = "leptos::prelude::Fragment::new($0)"
            let v911 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v909 v910 
            let v912 : string = "leptos::prelude::AnyView::from($0)"
            let v913 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v911 v912 
            let v914 : string = "animate"
            let v915 : string = "<" + v914 + " " + v907 + ">move || { v913 }</" + v914 + ">"
            let v916 : string = "leptos::prelude::view! { " + v915 + " }"
            let v917 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v916 
            let v918 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v917 |> unbox
            let v919 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v920 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v918 v919 
            let v921 : string = "attributeName=\"height\""
            let v922 : string = "attributeType=\"XML\""
            let v923 : string = "values=\"10; 20; 10\""
            let v924 : string = "begin=\"0s\""
            let v925 : string = "dur=\"0.6s\""
            let v926 : string = "repeatCount=\"indefinite\""
            let v927 : string = " " + v921 + v6 + ""
            let v928 : string = " " + v922 + v927 + ""
            let v929 : string = " " + v923 + v928 + ""
            let v930 : string = " " + v924 + v929 + ""
            let v931 : string = " " + v925 + v930 + ""
            let v932 : string = " " + v926 + v931 + ""
            let v933 : string = "vec![" + v6 + "]"
            let v934 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v933 
            let v935 : string = "leptos::prelude::Fragment::new($0)"
            let v936 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v934 v935 
            let v937 : string = "leptos::prelude::AnyView::from($0)"
            let v938 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v936 v937 
            let v939 : string = "<" + v914 + " " + v932 + ">move || { v938 }</" + v914 + ">"
            let v940 : string = "leptos::prelude::view! { " + v939 + " }"
            let v941 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v940 
            let v942 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v941 |> unbox
            let v943 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v944 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v942 v943 
            let v945 : string = "attributeName=\"y\""
            let v946 : string = "attributeType=\"XML\""
            let v947 : string = "values=\"10; 5; 10\""
            let v948 : string = "begin=\"0s\""
            let v949 : string = "dur=\"0.6s\""
            let v950 : string = "repeatCount=\"indefinite\""
            let v951 : string = " " + v945 + v6 + ""
            let v952 : string = " " + v946 + v951 + ""
            let v953 : string = " " + v947 + v952 + ""
            let v954 : string = " " + v948 + v953 + ""
            let v955 : string = " " + v949 + v954 + ""
            let v956 : string = " " + v950 + v955 + ""
            let v957 : string = "vec![" + v6 + "]"
            let v958 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v957 
            let v959 : string = "leptos::prelude::Fragment::new($0)"
            let v960 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v958 v959 
            let v961 : string = "leptos::prelude::AnyView::from($0)"
            let v962 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v960 v961 
            let v963 : string = "<" + v914 + " " + v956 + ">move || { v962 }</" + v914 + ">"
            let v964 : string = "leptos::prelude::view! { " + v963 + " }"
            let v965 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v964 
            let v966 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v965 |> unbox
            let v967 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v968 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v966 v967 
            let v969 : string = "v968"
            let v970 : string = v969 + v6 
            let v971 : string = v970 + v6 
            let v972 : string = "v944"
            let v973 : string = v972 + v309 
            let v974 : string = v973 + v971 
            let v975 : string = "v920"
            let v976 : string = v975 + v309 
            let v977 : string = v976 + v974 
            let v978 : string = "vec![" + v977 + "]"
            let v979 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v978 
            let v980 : string = "leptos::prelude::Fragment::new($0)"
            let v981 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v979 v980 
            let v982 : string = "leptos::prelude::AnyView::from($0)"
            let v983 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v981 v982 
            let v984 : string = "rect"
            let v985 : string = "<" + v984 + " " + v895 + ">move || { v983 }</" + v984 + ">"
            let v986 : string = "leptos::prelude::view! { " + v985 + " }"
            let v987 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v986 
            let v988 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v987 |> unbox
            let v989 : string = "x=\"8\""
            let v990 : string = "y=\"10\""
            let v991 : string = "width=\"4\""
            let v992 : string = "height=\"10\""
            let v993 : string = "fill=\"#333\""
            let v994 : string = "opacity=\"0.2\""
            let v995 : string = " " + v989 + v6 + ""
            let v996 : string = " " + v990 + v995 + ""
            let v997 : string = " " + v991 + v996 + ""
            let v998 : string = " " + v992 + v997 + ""
            let v999 : string = " " + v993 + v998 + ""
            let v1000 : string = " " + v994 + v999 + ""
            let v1001 : string = "attributeName=\"opacity\""
            let v1002 : string = "attributeType=\"XML\""
            let v1003 : string = "values=\"0.2; 1; .2\""
            let v1004 : string = "begin=\"0.15s\""
            let v1005 : string = "dur=\"0.6s\""
            let v1006 : string = "repeatCount=\"indefinite\""
            let v1007 : string = " " + v1001 + v6 + ""
            let v1008 : string = " " + v1002 + v1007 + ""
            let v1009 : string = " " + v1003 + v1008 + ""
            let v1010 : string = " " + v1004 + v1009 + ""
            let v1011 : string = " " + v1005 + v1010 + ""
            let v1012 : string = " " + v1006 + v1011 + ""
            let v1013 : string = "vec![" + v6 + "]"
            let v1014 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1013 
            let v1015 : string = "leptos::prelude::Fragment::new($0)"
            let v1016 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1014 v1015 
            let v1017 : string = "leptos::prelude::AnyView::from($0)"
            let v1018 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1016 v1017 
            let v1019 : string = "<" + v914 + " " + v1012 + ">move || { v1018 }</" + v914 + ">"
            let v1020 : string = "leptos::prelude::view! { " + v1019 + " }"
            let v1021 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1020 
            let v1022 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1021 |> unbox
            let v1023 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1024 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1022 v1023 
            let v1025 : string = "attributeName=\"opacity\""
            let v1026 : string = "attributeType=\"XML\""
            let v1027 : string = "values=\"10; 20; 10\""
            let v1028 : string = "begin=\"0.15s\""
            let v1029 : string = "dur=\"0.6s\""
            let v1030 : string = "repeatCount=\"indefinite\""
            let v1031 : string = " " + v1025 + v6 + ""
            let v1032 : string = " " + v1026 + v1031 + ""
            let v1033 : string = " " + v1027 + v1032 + ""
            let v1034 : string = " " + v1028 + v1033 + ""
            let v1035 : string = " " + v1029 + v1034 + ""
            let v1036 : string = " " + v1030 + v1035 + ""
            let v1037 : string = "vec![" + v6 + "]"
            let v1038 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1037 
            let v1039 : string = "leptos::prelude::Fragment::new($0)"
            let v1040 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1038 v1039 
            let v1041 : string = "leptos::prelude::AnyView::from($0)"
            let v1042 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1040 v1041 
            let v1043 : string = "<" + v914 + " " + v1036 + ">move || { v1042 }</" + v914 + ">"
            let v1044 : string = "leptos::prelude::view! { " + v1043 + " }"
            let v1045 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1044 
            let v1046 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1045 |> unbox
            let v1047 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1048 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1046 v1047 
            let v1049 : string = "attributeName=\"y\""
            let v1050 : string = "attributeType=\"XML\""
            let v1051 : string = "values=\"10; 5; 10\""
            let v1052 : string = "begin=\"0.15s\""
            let v1053 : string = "dur=\"0.6s\""
            let v1054 : string = "repeatCount=\"indefinite\""
            let v1055 : string = " " + v1049 + v6 + ""
            let v1056 : string = " " + v1050 + v1055 + ""
            let v1057 : string = " " + v1051 + v1056 + ""
            let v1058 : string = " " + v1052 + v1057 + ""
            let v1059 : string = " " + v1053 + v1058 + ""
            let v1060 : string = " " + v1054 + v1059 + ""
            let v1061 : string = "vec![" + v6 + "]"
            let v1062 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1061 
            let v1063 : string = "leptos::prelude::Fragment::new($0)"
            let v1064 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1062 v1063 
            let v1065 : string = "leptos::prelude::AnyView::from($0)"
            let v1066 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1064 v1065 
            let v1067 : string = "<" + v914 + " " + v1060 + ">move || { v1066 }</" + v914 + ">"
            let v1068 : string = "leptos::prelude::view! { " + v1067 + " }"
            let v1069 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1068 
            let v1070 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1069 |> unbox
            let v1071 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1072 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1070 v1071 
            let v1073 : string = "v1072"
            let v1074 : string = v1073 + v6 
            let v1075 : string = v1074 + v6 
            let v1076 : string = "v1048"
            let v1077 : string = v1076 + v309 
            let v1078 : string = v1077 + v1075 
            let v1079 : string = "v1024"
            let v1080 : string = v1079 + v309 
            let v1081 : string = v1080 + v1078 
            let v1082 : string = "vec![" + v1081 + "]"
            let v1083 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1082 
            let v1084 : string = "leptos::prelude::Fragment::new($0)"
            let v1085 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1083 v1084 
            let v1086 : string = "leptos::prelude::AnyView::from($0)"
            let v1087 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1085 v1086 
            let v1088 : string = "<" + v984 + " " + v1000 + ">move || { v1087 }</" + v984 + ">"
            let v1089 : string = "leptos::prelude::view! { " + v1088 + " }"
            let v1090 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1089 
            let v1091 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v1090 |> unbox
            let v1092 : string = "x=\"16\""
            let v1093 : string = "y=\"10\""
            let v1094 : string = "width=\"4\""
            let v1095 : string = "height=\"10\""
            let v1096 : string = "fill=\"#333\""
            let v1097 : string = "opacity=\"0.2\""
            let v1098 : string = " " + v1092 + v6 + ""
            let v1099 : string = " " + v1093 + v1098 + ""
            let v1100 : string = " " + v1094 + v1099 + ""
            let v1101 : string = " " + v1095 + v1100 + ""
            let v1102 : string = " " + v1096 + v1101 + ""
            let v1103 : string = " " + v1097 + v1102 + ""
            let v1104 : string = "attributeName=\"opacity\""
            let v1105 : string = "attributeType=\"XML\""
            let v1106 : string = "values=\"0.2; 1; .2\""
            let v1107 : string = "begin=\"0.3s\""
            let v1108 : string = "dur=\"0.6s\""
            let v1109 : string = "repeatCount=\"indefinite\""
            let v1110 : string = " " + v1104 + v6 + ""
            let v1111 : string = " " + v1105 + v1110 + ""
            let v1112 : string = " " + v1106 + v1111 + ""
            let v1113 : string = " " + v1107 + v1112 + ""
            let v1114 : string = " " + v1108 + v1113 + ""
            let v1115 : string = " " + v1109 + v1114 + ""
            let v1116 : string = "vec![" + v6 + "]"
            let v1117 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1116 
            let v1118 : string = "leptos::prelude::Fragment::new($0)"
            let v1119 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1117 v1118 
            let v1120 : string = "leptos::prelude::AnyView::from($0)"
            let v1121 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1119 v1120 
            let v1122 : string = "<" + v914 + " " + v1115 + ">move || { v1121 }</" + v914 + ">"
            let v1123 : string = "leptos::prelude::view! { " + v1122 + " }"
            let v1124 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1123 
            let v1125 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1124 |> unbox
            let v1126 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1127 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1125 v1126 
            let v1128 : string = "attributeName=\"height\""
            let v1129 : string = "attributeType=\"XML\""
            let v1130 : string = "values=\"10; 20; 10\""
            let v1131 : string = "begin=\"0.3s\""
            let v1132 : string = "dur=\"0.6s\""
            let v1133 : string = "repeatCount=\"indefinite\""
            let v1134 : string = " " + v1128 + v6 + ""
            let v1135 : string = " " + v1129 + v1134 + ""
            let v1136 : string = " " + v1130 + v1135 + ""
            let v1137 : string = " " + v1131 + v1136 + ""
            let v1138 : string = " " + v1132 + v1137 + ""
            let v1139 : string = " " + v1133 + v1138 + ""
            let v1140 : string = "vec![" + v6 + "]"
            let v1141 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1140 
            let v1142 : string = "leptos::prelude::Fragment::new($0)"
            let v1143 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1141 v1142 
            let v1144 : string = "leptos::prelude::AnyView::from($0)"
            let v1145 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1143 v1144 
            let v1146 : string = "<" + v914 + " " + v1139 + ">move || { v1145 }</" + v914 + ">"
            let v1147 : string = "leptos::prelude::view! { " + v1146 + " }"
            let v1148 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1147 
            let v1149 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1148 |> unbox
            let v1150 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1151 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1149 v1150 
            let v1152 : string = "attributeName=\"y\""
            let v1153 : string = "attributeType=\"XML\""
            let v1154 : string = "values=\"10; 5; 10\""
            let v1155 : string = "begin=\"0.3s\""
            let v1156 : string = "dur=\"0.6s\""
            let v1157 : string = "repeatCount=\"indefinite\""
            let v1158 : string = " " + v1152 + v6 + ""
            let v1159 : string = " " + v1153 + v1158 + ""
            let v1160 : string = " " + v1154 + v1159 + ""
            let v1161 : string = " " + v1155 + v1160 + ""
            let v1162 : string = " " + v1156 + v1161 + ""
            let v1163 : string = " " + v1157 + v1162 + ""
            let v1164 : string = "vec![" + v6 + "]"
            let v1165 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1164 
            let v1166 : string = "leptos::prelude::Fragment::new($0)"
            let v1167 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1165 v1166 
            let v1168 : string = "leptos::prelude::AnyView::from($0)"
            let v1169 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1167 v1168 
            let v1170 : string = "<" + v914 + " " + v1163 + ">move || { v1169 }</" + v914 + ">"
            let v1171 : string = "leptos::prelude::view! { " + v1170 + " }"
            let v1172 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1171 
            let v1173 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1172 |> unbox
            let v1174 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1175 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1173 v1174 
            let v1176 : string = "v1175"
            let v1177 : string = v1176 + v6 
            let v1178 : string = v1177 + v6 
            let v1179 : string = "v1151"
            let v1180 : string = v1179 + v309 
            let v1181 : string = v1180 + v1178 
            let v1182 : string = "v1127"
            let v1183 : string = v1182 + v309 
            let v1184 : string = v1183 + v1181 
            let v1185 : string = "vec![" + v1184 + "]"
            let v1186 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1185 
            let v1187 : string = "leptos::prelude::Fragment::new($0)"
            let v1188 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1186 v1187 
            let v1189 : string = "leptos::prelude::AnyView::from($0)"
            let v1190 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1188 v1189 
            let v1191 : string = "<" + v984 + " " + v1103 + ">move || { v1190 }</" + v984 + ">"
            let v1192 : string = "leptos::prelude::view! { " + v1191 + " }"
            let v1193 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1192 
            let v1194 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v1193 |> unbox
            let v1195 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1196 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1194 v1195 
            let v1197 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1198 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1091 v1197 
            let v1199 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1200 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v988 v1199 
            let v1201 : string = "v1196"
            let v1202 : string = v1201 + v6 
            let v1203 : string = v1202 + v6 
            let v1204 : string = "v1198"
            let v1205 : string = v1204 + v309 
            let v1206 : string = v1205 + v1203 
            let v1207 : string = "v1200"
            let v1208 : string = v1207 + v309 
            let v1209 : string = v1208 + v1206 
            let v1210 : string = "vec![" + v1209 + "]"
            let v1211 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1210 
            let v1212 : string = "leptos::prelude::Fragment::new($0)"
            let v1213 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1211 v1212 
            let v1214 : string = "leptos::prelude::AnyView::from($0)"
            let v1215 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1213 v1214 
            let v1216 : string = "<" + v283 + " " + v883 + ">move || { v1215 }</" + v283 + ">"
            let v1217 : string = "leptos::prelude::view! { " + v1216 + " }"
            let v1218 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1217 
            let v1219 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v1218 |> unbox
            let v1220 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1221 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1219 v1220 
            v1221
        else
            let v1222 : string = "vec![" + v6 + "]"
            let v1223 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1222 
            let v1224 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1225 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1223 v1224 
            v1225
    let v1227 : string = "v1226"
    let v1228 : string = v1227 + v6 
    let v1229 : string = v1228 + v6 
    let v1230 : string = "v860"
    let v1231 : string = v1230 + v309 
    let v1232 : string = v1231 + v1229 
    let v1233 : string = "vec![" + v1232 + "]"
    let v1234 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1233 
    let v1235 : string = "leptos::prelude::Fragment::new($0)"
    let v1236 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1234 v1235 
    let v1237 : string = "leptos::prelude::AnyView::from($0)"
    let v1238 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1236 v1237 
    let v1239 : string = "button"
    let v1240 : string = "<" + v1239 + " " + v791 + ">move || { v1238 }</" + v1239 + ">"
    let v1241 : string = "leptos::prelude::view! { " + v1240 + " }"
    let v1242 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1241 
    let v1243 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Button>> = v1242 |> unbox
    let v1244 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v1245 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1243 v1244 
    let v1246 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v1247 : string option = Fable.Core.RustInterop.emitRustExpr v2 v1246 
    let v1250 : (string -> US31) = method106()
    let v1251 : US31 option = v1247 |> Option.map v1250 
    let v1271 : US31 = US31_1
    let v1272 : US31 = v1251 |> Option.defaultValue v1271 
    let v1451 : leptos_prelude_AnyView_ =
        match v1272 with
        | US31_0(v1276) -> (* Some *)
            let v1277 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
            let v1278 : string = " " + v1277 + v6 + ""
            let v1279 : string = "class=\"[height:17px]\""
            let v1280 : string = " " + v1279 + v6 + ""
            let v1281 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v1282 : string = "fill=\"none\""
            let v1283 : string = "height=\"100%\""
            let v1284 : string = "viewBox=\"0 0 24 24\""
            let v1285 : string = "stroke-width=\"1.5\""
            let v1286 : string = "stroke=\"currentColor\""
            let v1287 : string = "class=\"text-red-700\""
            let v1288 : string = " " + v1281 + v6 + ""
            let v1289 : string = " " + v1282 + v1288 + ""
            let v1290 : string = " " + v1283 + v1289 + ""
            let v1291 : string = " " + v1284 + v1290 + ""
            let v1292 : string = " " + v1285 + v1291 + ""
            let v1293 : string = " " + v1286 + v1292 + ""
            let v1294 : string = " " + v1287 + v1293 + ""
            let v1295 : string = "stroke-linecap=\"round\""
            let v1296 : string = "stroke-linejoin=\"round\""
            let v1297 : string = "d=\"M6 18L18 6M6 6l12 12\""
            let v1298 : string = " " + v1295 + v6 + ""
            let v1299 : string = " " + v1296 + v1298 + ""
            let v1300 : string = " " + v1297 + v1299 + ""
            let v1301 : string = "vec![" + v6 + "]"
            let v1302 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1301 
            let v1303 : string = "leptos::prelude::Fragment::new($0)"
            let v1304 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1302 v1303 
            let v1305 : string = "leptos::prelude::AnyView::from($0)"
            let v1306 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1304 v1305 
            let v1307 : string = "<" + v267 + " " + v1300 + ">move || { v1306 }</" + v267 + ">"
            let v1308 : string = "leptos::prelude::view! { " + v1307 + " }"
            let v1309 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1308 
            let v1310 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v1309 |> unbox
            let v1311 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1312 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1310 v1311 
            let v1313 : string = "v1312"
            let v1314 : string = v1313 + v6 
            let v1315 : string = v1314 + v6 
            let v1316 : string = "vec![" + v1315 + "]"
            let v1317 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1316 
            let v1318 : string = "leptos::prelude::Fragment::new($0)"
            let v1319 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1317 v1318 
            let v1320 : string = "leptos::prelude::AnyView::from($0)"
            let v1321 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1319 v1320 
            let v1322 : string = "<" + v283 + " " + v1294 + ">move || { v1321 }</" + v283 + ">"
            let v1323 : string = "leptos::prelude::view! { " + v1322 + " }"
            let v1324 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1323 
            let v1325 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v1324 |> unbox
            let v1326 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1327 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1325 v1326 
            let v1328 : string = "v1327"
            let v1329 : string = v1328 + v6 
            let v1330 : string = v1329 + v6 
            let v1331 : string = "vec![" + v1330 + "]"
            let v1332 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1331 
            let v1333 : string = "leptos::prelude::Fragment::new($0)"
            let v1334 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1332 v1333 
            let v1335 : string = "leptos::prelude::AnyView::from($0)"
            let v1336 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1334 v1335 
            let v1337 : string = "<" + v220 + " " + v1280 + ">move || { v1336 }</" + v220 + ">"
            let v1338 : string = "leptos::prelude::view! { " + v1337 + " }"
            let v1339 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1338 
            let v1340 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v1339 |> unbox
            let v1341 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1342 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1340 v1341 
            let v1343 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
            let v1344 : string = " " + v1343 + v6 + ""
            (* run_target_args'
            let v1349 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1350 : string = "&*$0"
            let v1351 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1276 v1350 
            let _run_target_args'_v1349 = v1351 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1352 : string = "&*$0"
            let v1353 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1276 v1352 
            let _run_target_args'_v1349 = v1353 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1354 : string = "&*$0"
            let v1355 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1276 v1354 
            let _run_target_args'_v1349 = v1355 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1357 : Ref<Str> = v1276 |> unbox<Ref<Str>>
            let _run_target_args'_v1349 = v1357 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1361 : Ref<Str> = v1276 |> unbox<Ref<Str>>
            let _run_target_args'_v1349 = v1361 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1365 : Ref<Str> = v1276 |> unbox<Ref<Str>>
            let _run_target_args'_v1349 = v1365 
            #endif
#else
            let v1369 : Ref<Str> = v1276 |> unbox<Ref<Str>>
            let _run_target_args'_v1349 = v1369 
            #endif
            let v1372 : Ref<Str> = _run_target_args'_v1349 
            (* run_target_args'
            let v1382 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1383 : string = "String::from($0)"
            let v1384 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1372 v1383 
            let _run_target_args'_v1382 = v1384 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1385 : string = "String::from($0)"
            let v1386 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1372 v1385 
            let _run_target_args'_v1382 = v1386 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1387 : string = "String::from($0)"
            let v1388 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1372 v1387 
            let _run_target_args'_v1382 = v1388 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1390 : std_string_String = v1372 |> unbox<std_string_String>
            let _run_target_args'_v1382 = v1390 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1394 : std_string_String = v1372 |> unbox<std_string_String>
            let _run_target_args'_v1382 = v1394 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1398 : std_string_String = v1372 |> unbox<std_string_String>
            let _run_target_args'_v1382 = v1398 
            #endif
#else
            let v1402 : std_string_String = v1372 |> unbox<std_string_String>
            let _run_target_args'_v1382 = v1402 
            #endif
            let v1405 : std_string_String = _run_target_args'_v1382 
            let v1411 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v1412 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1405 v1411 
            let v1413 : string = "v1412"
            let v1414 : string = v1413 + v6 
            let v1415 : string = v1414 + v6 
            let v1416 : string = "vec![" + v1415 + "]"
            let v1417 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1416 
            let v1418 : string = "leptos::prelude::Fragment::new($0)"
            let v1419 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1417 v1418 
            let v1420 : string = "leptos::prelude::AnyView::from($0)"
            let v1421 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1419 v1420 
            let v1422 : string = "pre"
            let v1423 : string = "<" + v1422 + " " + v1344 + ">move || { v1421 }</" + v1422 + ">"
            let v1424 : string = "leptos::prelude::view! { " + v1423 + " }"
            let v1425 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1424 
            let v1426 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v1425 |> unbox
            let v1427 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1428 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1426 v1427 
            let v1429 : string = "v1428"
            let v1430 : string = v1429 + v6 
            let v1431 : string = v1430 + v6 
            let v1432 : string = "v1342"
            let v1433 : string = v1432 + v309 
            let v1434 : string = v1433 + v1431 
            let v1435 : string = "vec![" + v1434 + "]"
            let v1436 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1435 
            let v1437 : string = "leptos::prelude::Fragment::new($0)"
            let v1438 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1436 v1437 
            let v1439 : string = "leptos::prelude::AnyView::from($0)"
            let v1440 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1438 v1439 
            let v1441 : string = "<" + v118 + " " + v1278 + ">move || { v1440 }</" + v118 + ">"
            let v1442 : string = "leptos::prelude::view! { " + v1441 + " }"
            let v1443 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1442 
            let v1444 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1443 |> unbox
            let v1445 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1446 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1444 v1445 
            v1446
        | _ ->
            let v1447 : string = "vec![" + v6 + "]"
            let v1448 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1447 
            let v1449 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1450 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1448 v1449 
            v1450
    let v1452 : string = "v1451"
    let v1453 : string = v1452 + v6 
    let v1454 : string = v1453 + v6 
    let v1455 : string = "v1245"
    let v1456 : string = v1455 + v309 
    let v1457 : string = v1456 + v1454 
    let v1458 : string = "vec![" + v1457 + "]"
    let v1459 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1458 
    let v1460 : string = "leptos::prelude::Fragment::new($0)"
    let v1461 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1459 v1460 
    let v1462 : string = "leptos::prelude::AnyView::from($0)"
    let v1463 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1461 v1462 
    let v1464 : string = "<" + v118 + " " + v578 + ">move || { v1463 }</" + v118 + ">"
    let v1465 : string = "leptos::prelude::view! { " + v1464 + " }"
    let v1466 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1465 
    let v1467 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1466 |> unbox
    let v1468 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v1469 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1467 v1468 
    let v1470 : string = "v1469"
    let v1471 : string = v1470 + v6 
    let v1472 : string = v1471 + v6 
    let v1473 : string = "v576"
    let v1474 : string = v1473 + v309 
    let v1475 : string = v1474 + v1472 
    let v1476 : string = "v395"
    let v1477 : string = v1476 + v309 
    let v1478 : string = v1477 + v1475 
    let v1479 : string = "vec![" + v1478 + "]"
    let v1480 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1479 
    let v1481 : string = "leptos::prelude::Fragment::new($0)"
    let v1482 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1480 v1481 
    let v1483 : string = "leptos::prelude::AnyView::from($0)"
    let v1484 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1482 v1483 
    let v1485 : string = "<" + v118 + " " + v7 + ">move || { v1484 }</" + v118 + ">"
    let v1486 : string = "leptos::prelude::view! { " + v1485 + " }"
    let v1487 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1486 
    let v1488 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1487 |> unbox
    let v1489 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v1490 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1488 v1489 
    let v1491 : string = "v1490"
    let v1492 : string = v1491 + v6 
    let v1493 : string = v1492 + v6 
    let v1494 : string = "vec![" + v1493 + "]"
    let v1495 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1494 
    let v1496 : string = "leptos::prelude::Fragment::new($0)"
    let v1497 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1495 v1496 
    v1497
and closure183 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure184 () () : Ref<Lifetime<StaticLifetime, Str>> =
    let v0 : string = ""
    let v1 : string = "r#\"" + v0 + "\"#"
    let v2 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v1 
    v2
and closure185 () () : string =
    let v0 : string = "History"
    v0
and method198 () : (unit -> string) =
    closure185()
and method200 (v0 : Func0<struct (std_string_String * std_string_String option), struct (string * US31)>) : Func0<struct (std_string_String * std_string_String option), struct (string * US31)> =
    v0
and closure188 (v0 : Func0<struct (std_string_String * std_string_String option), struct (string * US31)>) struct (v1 : std_string_String, v2 : std_string_String option) : struct (string * US31) =
    let v3 : Func0<struct (std_string_String * std_string_String option), struct (string * US31)> = method200(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let struct (v6 : string, v7 : US31) = Fable.Core.RustInterop.emitRustExpr v4 v5 
    struct (v6, v7)
and closure189 () struct (v0 : string, v1 : US31) : bool =
    let v2 : bool = "FUNCTION_CALL" = v0
    if v2 then
        match v1 with
        | US31_0(v3) -> (* Some *)
            let v4 : bool = "generate_random_number" = v3
            v4
        | _ ->
            false
    else
        false
and method201 () : (struct (string * US31) -> bool) =
    closure189()
and method202 (v0 : Vec<struct (string * US31)>) : Vec<struct (string * US31)> =
    v0
and closure187 () struct (v0 : string, v1 : unativeint, v2 : Heap5) : bool =
    let v3 : (struct (std_string_String * std_string_String option) []) = v2.l7
    let v4 : string = "$0.to_vec()"
    let v5 : Vec<struct (std_string_String * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : unit = ()
    let v7 : string = $"true; let _func1_from_v6 = Func1::from(move |value| {{ //"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr () v7 
    let v9 : string = $"value"
    let struct (v10 : std_string_String, v11 : std_string_String option) = Fable.Core.RustInterop.emitRustExpr () v9 
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v10 v12 
    let v16 : (std_string_String -> US14) = method39()
    let v17 : US14 option = v11 |> Option.map v16 
    let v37 : US14 = US14_1
    let v38 : US14 = v17 |> Option.defaultValue v37 
    let v48 : US31 =
        match v38 with
        | US14_1 -> (* None *)
            US31_1
        | US14_0(v42) -> (* Some *)
            let v43 : string = "fable_library_rust::String_::fromString($0)"
            let v44 : string = Fable.Core.RustInterop.emitRustExpr v42 v43 
            US31_0(v44)
    let func1_from_result = struct (v13, v48) //
    let v49 : _ = func1_from_result
    let v50 : string = $"true; $0 /*"
    let v51 : bool = Fable.Core.RustInterop.emitRustExpr v49 v50 
    let v52 : string = $"*/ }}); //"
    let v53 : bool = Fable.Core.RustInterop.emitRustExpr () v52 
    let v54 : string = $"_func1_from_v6"
    let v55 : Func0<struct (std_string_String * std_string_String option), struct (string * US31)> = Fable.Core.RustInterop.emitRustExpr () v54 
    let v56 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v57 : (struct (std_string_String * std_string_String option) -> struct (string * US31)) = closure188(v55)
    let v58 : Vec<struct (string * US31)> = Fable.Core.RustInterop.emitRustExpr struct (v5, v57) v56 
    let v59 : (struct (string * US31) -> bool) = method201()
    let v60 : Vec<struct (string * US31)> = method202(v58)
    let v61 : string = "v60.into_iter().filter(|x| v59(x.clone().clone())).collect::<Vec<_>>()"
    let v62 : Vec<struct (string * US31)> = Fable.Core.RustInterop.emitRustExpr () v61 
    let v63 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v64 : (struct (string * US31) []) = Fable.Core.RustInterop.emitRustExpr v62 v63 
    let v65 : int32 = v64.Length
    let v66 : bool = v65 > 0
    let v67 : std_string_String = v2.l2
    let v68 : string = "fable_library_rust::String_::fromString($0)"
    let v69 : string = Fable.Core.RustInterop.emitRustExpr v67 v68 
    let v70 : bool = v0 = v69
    let v71 : bool = v66 && v70
    v71
and method199 () : (struct (string * unativeint * Heap5) -> bool) =
    closure187()
and method203 (v0 : Vec<struct (string * unativeint * Heap5)>) : Vec<struct (string * unativeint * Heap5)> =
    v0
and method204 (v0 : int64) : int64 =
    v0
and closure190 () (v0 : chrono_DateTime<chrono_Utc>) : US68 =
    US68_0(v0)
and method205 () : (chrono_DateTime<chrono_Utc> -> US68) =
    closure190()
and method206 (v0 : int32, v1 : Mut2) : bool =
    let v2 : int32 = v1.l0
    let v3 : bool = v2 < v0
    v3
and closure191 () () : string =
    let v0 : string = "[width:24px] [height:30px]"
    v0
and closure186 (v0 : leptos_prelude_ArcMemo<Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>>, v1 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>, v2 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>>) () : leptos_dom_Fragment =
    let v3 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v4 : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v6 : (struct (string * Vec<struct (string * US23 * string * bool * bool)>) []) = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : uint64 = System.Convert.ToUInt64 v6.Length
    let v8 : bool = v7 = 0UL
    let v2446 : leptos_prelude_AnyView_ =
        if v8 then
            let v9 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
            let v10 : string = ""
            let v11 : string = " " + v9 + v10 + ""
            let v12 : string = "class=\"[height:17px]\""
            let v13 : string = " " + v12 + v10 + ""
            let v14 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v15 : string = "fill=\"none\""
            let v16 : string = "height=\"100%\""
            let v17 : string = "viewBox=\"0 0 24 24\""
            let v18 : string = "stroke-width=\"1.5\""
            let v19 : string = "stroke=\"currentColor\""
            let v20 : string = "class=\"text-red-700\""
            let v21 : string = " " + v14 + v10 + ""
            let v22 : string = " " + v15 + v21 + ""
            let v23 : string = " " + v16 + v22 + ""
            let v24 : string = " " + v17 + v23 + ""
            let v25 : string = " " + v18 + v24 + ""
            let v26 : string = " " + v19 + v25 + ""
            let v27 : string = " " + v20 + v26 + ""
            let v28 : string = "stroke-linecap=\"round\""
            let v29 : string = "stroke-linejoin=\"round\""
            let v30 : string = "d=\"M6 18L18 6M6 6l12 12\""
            let v31 : string = " " + v28 + v10 + ""
            let v32 : string = " " + v29 + v31 + ""
            let v33 : string = " " + v30 + v32 + ""
            let v34 : string = "vec![" + v10 + "]"
            let v35 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v34 
            let v36 : string = "leptos::prelude::Fragment::new($0)"
            let v37 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v35 v36 
            let v38 : string = "leptos::prelude::AnyView::from($0)"
            let v39 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v37 v38 
            let v40 : string = "path"
            let v41 : string = "<" + v40 + " " + v33 + ">move || { v39 }</" + v40 + ">"
            let v42 : string = "leptos::prelude::view! { " + v41 + " }"
            let v43 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v42 
            let v44 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v43 |> unbox
            let v45 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v46 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v44 v45 
            let v47 : string = "v46"
            let v48 : string = v47 + v10 
            let v49 : string = v48 + v10 
            let v50 : string = "vec![" + v49 + "]"
            let v51 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v50 
            let v52 : string = "leptos::prelude::Fragment::new($0)"
            let v53 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v51 v52 
            let v54 : string = "leptos::prelude::AnyView::from($0)"
            let v55 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v53 v54 
            let v56 : string = "svg"
            let v57 : string = "<" + v56 + " " + v27 + ">move || { v55 }</" + v56 + ">"
            let v58 : string = "leptos::prelude::view! { " + v57 + " }"
            let v59 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v58 
            let v60 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v59 |> unbox
            let v61 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v62 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v60 v61 
            let v63 : string = "v62"
            let v64 : string = v63 + v10 
            let v65 : string = v64 + v10 
            let v66 : string = "vec![" + v65 + "]"
            let v67 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v66 
            let v68 : string = "leptos::prelude::Fragment::new($0)"
            let v69 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v67 v68 
            let v70 : string = "leptos::prelude::AnyView::from($0)"
            let v71 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v69 v70 
            let v72 : string = "span"
            let v73 : string = "<" + v72 + " " + v13 + ">move || { v71 }</" + v72 + ">"
            let v74 : string = "leptos::prelude::view! { " + v73 + " }"
            let v75 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v74 
            let v76 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v75 |> unbox
            let v77 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v78 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v76 v77 
            let v79 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
            let v80 : string = " " + v79 + v10 + ""
            let v81 : string = "No account selected"
            (* run_target_args'
            let v86 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v87 : string = "&*$0"
            let v88 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v87 
            let _run_target_args'_v86 = v88 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v89 : string = "&*$0"
            let v90 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v89 
            let _run_target_args'_v86 = v90 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v91 : string = "&*$0"
            let v92 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v91 
            let _run_target_args'_v86 = v92 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v94 : Ref<Str> = v81 |> unbox<Ref<Str>>
            let _run_target_args'_v86 = v94 
            #endif
#if FABLE_COMPILER_PYTHON
            let v98 : Ref<Str> = v81 |> unbox<Ref<Str>>
            let _run_target_args'_v86 = v98 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v102 : Ref<Str> = v81 |> unbox<Ref<Str>>
            let _run_target_args'_v86 = v102 
            #endif
#else
            let v106 : Ref<Str> = v81 |> unbox<Ref<Str>>
            let _run_target_args'_v86 = v106 
            #endif
            let v109 : Ref<Str> = _run_target_args'_v86 
            (* run_target_args'
            let v119 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v120 : string = "String::from($0)"
            let v121 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v120 
            let _run_target_args'_v119 = v121 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v122 : string = "String::from($0)"
            let v123 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v122 
            let _run_target_args'_v119 = v123 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v124 : string = "String::from($0)"
            let v125 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v124 
            let _run_target_args'_v119 = v125 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v127 : std_string_String = v109 |> unbox<std_string_String>
            let _run_target_args'_v119 = v127 
            #endif
#if FABLE_COMPILER_PYTHON
            let v131 : std_string_String = v109 |> unbox<std_string_String>
            let _run_target_args'_v119 = v131 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v135 : std_string_String = v109 |> unbox<std_string_String>
            let _run_target_args'_v119 = v135 
            #endif
#else
            let v139 : std_string_String = v109 |> unbox<std_string_String>
            let _run_target_args'_v119 = v139 
            #endif
            let v142 : std_string_String = _run_target_args'_v119 
            let v148 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v149 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v142 v148 
            let v150 : string = "v149"
            let v151 : string = v150 + v10 
            let v152 : string = v151 + v10 
            let v153 : string = "vec![" + v152 + "]"
            let v154 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v153 
            let v155 : string = "leptos::prelude::Fragment::new($0)"
            let v156 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v154 v155 
            let v157 : string = "leptos::prelude::AnyView::from($0)"
            let v158 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v156 v157 
            let v159 : string = "pre"
            let v160 : string = "<" + v159 + " " + v80 + ">move || { v158 }</" + v159 + ">"
            let v161 : string = "leptos::prelude::view! { " + v160 + " }"
            let v162 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v161 
            let v163 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v162 |> unbox
            let v164 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v165 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v163 v164 
            let v166 : string = "v165"
            let v167 : string = v166 + v10 
            let v168 : string = v167 + v10 
            let v169 : string = "v78"
            let v170 : string = ", "
            let v171 : string = v169 + v170 
            let v172 : string = v171 + v168 
            let v173 : string = "vec![" + v172 + "]"
            let v174 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v173 
            let v175 : string = "leptos::prelude::Fragment::new($0)"
            let v176 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v174 v175 
            let v177 : string = "leptos::prelude::AnyView::from($0)"
            let v178 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v176 v177 
            let v179 : string = "div"
            let v180 : string = "<" + v179 + " " + v11 + ">move || { v178 }</" + v179 + ">"
            let v181 : string = "leptos::prelude::view! { " + v180 + " }"
            let v182 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v181 
            let v183 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v182 |> unbox
            let v184 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v185 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v183 v184 
            v185
        else
            let v186 : string = $"leptos::prelude::ArcMemo::get(&$0)"
            let v187 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v1 v186 
            let v188 : ((struct (string * unativeint * Heap5) []) option -> US53) = method138()
            let v189 : (std_string_String -> US53) = method139()
            let v191 : US53 = match v187 with Ok x -> v188 x | Error x -> v189 x
            let v227 : US46 =
                match v191 with
                | US53_1(v224) -> (* Error *)
                    US46_1(v224)
                | US53_0(v194) -> (* Ok *)
                    let v197 : ((struct (string * unativeint * Heap5) []) -> US47) = method140()
                    let v198 : US47 option = v194 |> Option.map v197 
                    let v218 : US47 = US47_1
                    let v219 : US47 = v198 |> Option.defaultValue v218 
                    US46_0(v219)
            match v227 with
            | US46_1(v2265) -> (* Error *)
                let v2266 : string = "fable_library_rust::String_::fromString($0)"
                let v2267 : string = Fable.Core.RustInterop.emitRustExpr v2265 v2266 
                let v2268 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
                let v2269 : string = ""
                let v2270 : string = " " + v2268 + v2269 + ""
                let v2271 : string = "class=\"[height:17px]\""
                let v2272 : string = " " + v2271 + v2269 + ""
                let v2273 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                let v2274 : string = "fill=\"none\""
                let v2275 : string = "height=\"100%\""
                let v2276 : string = "viewBox=\"0 0 24 24\""
                let v2277 : string = "stroke-width=\"1.5\""
                let v2278 : string = "stroke=\"currentColor\""
                let v2279 : string = "class=\"text-red-700\""
                let v2280 : string = " " + v2273 + v2269 + ""
                let v2281 : string = " " + v2274 + v2280 + ""
                let v2282 : string = " " + v2275 + v2281 + ""
                let v2283 : string = " " + v2276 + v2282 + ""
                let v2284 : string = " " + v2277 + v2283 + ""
                let v2285 : string = " " + v2278 + v2284 + ""
                let v2286 : string = " " + v2279 + v2285 + ""
                let v2287 : string = "stroke-linecap=\"round\""
                let v2288 : string = "stroke-linejoin=\"round\""
                let v2289 : string = "d=\"M6 18L18 6M6 6l12 12\""
                let v2290 : string = " " + v2287 + v2269 + ""
                let v2291 : string = " " + v2288 + v2290 + ""
                let v2292 : string = " " + v2289 + v2291 + ""
                let v2293 : string = "vec![" + v2269 + "]"
                let v2294 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2293 
                let v2295 : string = "leptos::prelude::Fragment::new($0)"
                let v2296 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2294 v2295 
                let v2297 : string = "leptos::prelude::AnyView::from($0)"
                let v2298 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2296 v2297 
                let v2299 : string = "path"
                let v2300 : string = "<" + v2299 + " " + v2292 + ">move || { v2298 }</" + v2299 + ">"
                let v2301 : string = "leptos::prelude::view! { " + v2300 + " }"
                let v2302 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2301 
                let v2303 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v2302 |> unbox
                let v2304 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v2305 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2303 v2304 
                let v2306 : string = "v2305"
                let v2307 : string = v2306 + v2269 
                let v2308 : string = v2307 + v2269 
                let v2309 : string = "vec![" + v2308 + "]"
                let v2310 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2309 
                let v2311 : string = "leptos::prelude::Fragment::new($0)"
                let v2312 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2310 v2311 
                let v2313 : string = "leptos::prelude::AnyView::from($0)"
                let v2314 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2312 v2313 
                let v2315 : string = "svg"
                let v2316 : string = "<" + v2315 + " " + v2286 + ">move || { v2314 }</" + v2315 + ">"
                let v2317 : string = "leptos::prelude::view! { " + v2316 + " }"
                let v2318 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2317 
                let v2319 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v2318 |> unbox
                let v2320 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v2321 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2319 v2320 
                let v2322 : string = "v2321"
                let v2323 : string = v2322 + v2269 
                let v2324 : string = v2323 + v2269 
                let v2325 : string = "vec![" + v2324 + "]"
                let v2326 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2325 
                let v2327 : string = "leptos::prelude::Fragment::new($0)"
                let v2328 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2326 v2327 
                let v2329 : string = "leptos::prelude::AnyView::from($0)"
                let v2330 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2328 v2329 
                let v2331 : string = "span"
                let v2332 : string = "<" + v2331 + " " + v2272 + ">move || { v2330 }</" + v2331 + ">"
                let v2333 : string = "leptos::prelude::view! { " + v2332 + " }"
                let v2334 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2333 
                let v2335 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v2334 |> unbox
                let v2336 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v2337 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2335 v2336 
                let v2338 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
                let v2339 : string = " " + v2338 + v2269 + ""
                (* run_target_args'
                let v2344 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v2345 : string = "&*$0"
                let v2346 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2267 v2345 
                let _run_target_args'_v2344 = v2346 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v2347 : string = "&*$0"
                let v2348 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2267 v2347 
                let _run_target_args'_v2344 = v2348 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v2349 : string = "&*$0"
                let v2350 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2267 v2349 
                let _run_target_args'_v2344 = v2350 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v2352 : Ref<Str> = v2267 |> unbox<Ref<Str>>
                let _run_target_args'_v2344 = v2352 
                #endif
#if FABLE_COMPILER_PYTHON
                let v2356 : Ref<Str> = v2267 |> unbox<Ref<Str>>
                let _run_target_args'_v2344 = v2356 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v2360 : Ref<Str> = v2267 |> unbox<Ref<Str>>
                let _run_target_args'_v2344 = v2360 
                #endif
#else
                let v2364 : Ref<Str> = v2267 |> unbox<Ref<Str>>
                let _run_target_args'_v2344 = v2364 
                #endif
                let v2367 : Ref<Str> = _run_target_args'_v2344 
                (* run_target_args'
                let v2377 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v2378 : string = "String::from($0)"
                let v2379 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2367 v2378 
                let _run_target_args'_v2377 = v2379 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v2380 : string = "String::from($0)"
                let v2381 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2367 v2380 
                let _run_target_args'_v2377 = v2381 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v2382 : string = "String::from($0)"
                let v2383 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2367 v2382 
                let _run_target_args'_v2377 = v2383 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v2385 : std_string_String = v2367 |> unbox<std_string_String>
                let _run_target_args'_v2377 = v2385 
                #endif
#if FABLE_COMPILER_PYTHON
                let v2389 : std_string_String = v2367 |> unbox<std_string_String>
                let _run_target_args'_v2377 = v2389 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v2393 : std_string_String = v2367 |> unbox<std_string_String>
                let _run_target_args'_v2377 = v2393 
                #endif
#else
                let v2397 : std_string_String = v2367 |> unbox<std_string_String>
                let _run_target_args'_v2377 = v2397 
                #endif
                let v2400 : std_string_String = _run_target_args'_v2377 
                let v2406 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                let v2407 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2400 v2406 
                let v2408 : string = "v2407"
                let v2409 : string = v2408 + v2269 
                let v2410 : string = v2409 + v2269 
                let v2411 : string = "vec![" + v2410 + "]"
                let v2412 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2411 
                let v2413 : string = "leptos::prelude::Fragment::new($0)"
                let v2414 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2412 v2413 
                let v2415 : string = "leptos::prelude::AnyView::from($0)"
                let v2416 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2414 v2415 
                let v2417 : string = "pre"
                let v2418 : string = "<" + v2417 + " " + v2339 + ">move || { v2416 }</" + v2417 + ">"
                let v2419 : string = "leptos::prelude::view! { " + v2418 + " }"
                let v2420 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2419 
                let v2421 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v2420 |> unbox
                let v2422 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v2423 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2421 v2422 
                let v2424 : string = "v2423"
                let v2425 : string = v2424 + v2269 
                let v2426 : string = v2425 + v2269 
                let v2427 : string = "v2337"
                let v2428 : string = ", "
                let v2429 : string = v2427 + v2428 
                let v2430 : string = v2429 + v2426 
                let v2431 : string = "vec![" + v2430 + "]"
                let v2432 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2431 
                let v2433 : string = "leptos::prelude::Fragment::new($0)"
                let v2434 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2432 v2433 
                let v2435 : string = "leptos::prelude::AnyView::from($0)"
                let v2436 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2434 v2435 
                let v2437 : string = "div"
                let v2438 : string = "<" + v2437 + " " + v2270 + ">move || { v2436 }</" + v2437 + ">"
                let v2439 : string = "leptos::prelude::view! { " + v2438 + " }"
                let v2440 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2439 
                let v2441 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v2440 |> unbox
                let v2442 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v2443 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2441 v2442 
                v2443
            | US46_0(v228) -> (* Ok *)
                match v228 with
                | US47_0(v229) -> (* Some *)
                    let v230 : string = "$0.to_vec()"
                    let v231 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr v229 v230 
                    let v232 : (struct (string * unativeint * Heap5) -> bool) = method199()
                    let v233 : Vec<struct (string * unativeint * Heap5)> = method203(v231)
                    let v234 : string = "v233.into_iter().filter(|x| v232(x.clone().clone())).collect::<Vec<_>>()"
                    let v235 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr () v234 
                    let v236 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v237 : string = ""
                    let v238 : string = " " + v236 + v237 + ""
                    let v239 : string = "Block Timestamp"
                    (* run_target_args'
                    let v244 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v245 : string = "&*$0"
                    let v246 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v239 v245 
                    let _run_target_args'_v244 = v246 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v247 : string = "&*$0"
                    let v248 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v239 v247 
                    let _run_target_args'_v244 = v248 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v249 : string = "&*$0"
                    let v250 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v239 v249 
                    let _run_target_args'_v244 = v250 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v252 : Ref<Str> = v239 |> unbox<Ref<Str>>
                    let _run_target_args'_v244 = v252 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v256 : Ref<Str> = v239 |> unbox<Ref<Str>>
                    let _run_target_args'_v244 = v256 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v260 : Ref<Str> = v239 |> unbox<Ref<Str>>
                    let _run_target_args'_v244 = v260 
                    #endif
#else
                    let v264 : Ref<Str> = v239 |> unbox<Ref<Str>>
                    let _run_target_args'_v244 = v264 
                    #endif
                    let v267 : Ref<Str> = _run_target_args'_v244 
                    (* run_target_args'
                    let v277 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v278 : string = "String::from($0)"
                    let v279 : std_string_String = Fable.Core.RustInterop.emitRustExpr v267 v278 
                    let _run_target_args'_v277 = v279 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v280 : string = "String::from($0)"
                    let v281 : std_string_String = Fable.Core.RustInterop.emitRustExpr v267 v280 
                    let _run_target_args'_v277 = v281 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v282 : string = "String::from($0)"
                    let v283 : std_string_String = Fable.Core.RustInterop.emitRustExpr v267 v282 
                    let _run_target_args'_v277 = v283 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v285 : std_string_String = v267 |> unbox<std_string_String>
                    let _run_target_args'_v277 = v285 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v289 : std_string_String = v267 |> unbox<std_string_String>
                    let _run_target_args'_v277 = v289 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v293 : std_string_String = v267 |> unbox<std_string_String>
                    let _run_target_args'_v277 = v293 
                    #endif
#else
                    let v297 : std_string_String = v267 |> unbox<std_string_String>
                    let _run_target_args'_v277 = v297 
                    #endif
                    let v300 : std_string_String = _run_target_args'_v277 
                    let v306 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v307 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v300 v306 
                    let v308 : string = "v307"
                    let v309 : string = v308 + v237 
                    let v310 : string = v309 + v237 
                    let v311 : string = "vec![" + v310 + "]"
                    let v312 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v311 
                    let v313 : string = "leptos::prelude::Fragment::new($0)"
                    let v314 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v312 v313 
                    let v315 : string = "leptos::prelude::AnyView::from($0)"
                    let v316 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v314 v315 
                    let v317 : string = "th"
                    let v318 : string = "<" + v317 + " " + v238 + ">move || { v316 }</" + v317 + ">"
                    let v319 : string = "leptos::prelude::view! { " + v318 + " }"
                    let v320 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v319 
                    let v321 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v320 |> unbox
                    let v322 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v323 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v321 v322 
                    let v324 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v325 : string = " " + v324 + v237 + ""
                    let v326 : string = "Predecessor"
                    (* run_target_args'
                    let v331 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v332 : string = "&*$0"
                    let v333 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v326 v332 
                    let _run_target_args'_v331 = v333 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v334 : string = "&*$0"
                    let v335 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v326 v334 
                    let _run_target_args'_v331 = v335 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v336 : string = "&*$0"
                    let v337 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v326 v336 
                    let _run_target_args'_v331 = v337 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v339 : Ref<Str> = v326 |> unbox<Ref<Str>>
                    let _run_target_args'_v331 = v339 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v343 : Ref<Str> = v326 |> unbox<Ref<Str>>
                    let _run_target_args'_v331 = v343 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v347 : Ref<Str> = v326 |> unbox<Ref<Str>>
                    let _run_target_args'_v331 = v347 
                    #endif
#else
                    let v351 : Ref<Str> = v326 |> unbox<Ref<Str>>
                    let _run_target_args'_v331 = v351 
                    #endif
                    let v354 : Ref<Str> = _run_target_args'_v331 
                    (* run_target_args'
                    let v364 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v365 : string = "String::from($0)"
                    let v366 : std_string_String = Fable.Core.RustInterop.emitRustExpr v354 v365 
                    let _run_target_args'_v364 = v366 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v367 : string = "String::from($0)"
                    let v368 : std_string_String = Fable.Core.RustInterop.emitRustExpr v354 v367 
                    let _run_target_args'_v364 = v368 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v369 : string = "String::from($0)"
                    let v370 : std_string_String = Fable.Core.RustInterop.emitRustExpr v354 v369 
                    let _run_target_args'_v364 = v370 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v372 : std_string_String = v354 |> unbox<std_string_String>
                    let _run_target_args'_v364 = v372 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v376 : std_string_String = v354 |> unbox<std_string_String>
                    let _run_target_args'_v364 = v376 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v380 : std_string_String = v354 |> unbox<std_string_String>
                    let _run_target_args'_v364 = v380 
                    #endif
#else
                    let v384 : std_string_String = v354 |> unbox<std_string_String>
                    let _run_target_args'_v364 = v384 
                    #endif
                    let v387 : std_string_String = _run_target_args'_v364 
                    let v393 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v394 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v387 v393 
                    let v395 : string = "v394"
                    let v396 : string = v395 + v237 
                    let v397 : string = v396 + v237 
                    let v398 : string = "vec![" + v397 + "]"
                    let v399 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v398 
                    let v400 : string = "leptos::prelude::Fragment::new($0)"
                    let v401 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v399 v400 
                    let v402 : string = "leptos::prelude::AnyView::from($0)"
                    let v403 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v401 v402 
                    let v404 : string = "<" + v317 + " " + v325 + ">move || { v403 }</" + v317 + ">"
                    let v405 : string = "leptos::prelude::view! { " + v404 + " }"
                    let v406 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v405 
                    let v407 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v406 |> unbox
                    let v408 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v409 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v407 v408 
                    let v410 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v411 : string = " " + v410 + v237 + ""
                    let v412 : string = "Receiver"
                    (* run_target_args'
                    let v417 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v418 : string = "&*$0"
                    let v419 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v412 v418 
                    let _run_target_args'_v417 = v419 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v420 : string = "&*$0"
                    let v421 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v412 v420 
                    let _run_target_args'_v417 = v421 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v422 : string = "&*$0"
                    let v423 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v412 v422 
                    let _run_target_args'_v417 = v423 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v425 : Ref<Str> = v412 |> unbox<Ref<Str>>
                    let _run_target_args'_v417 = v425 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v429 : Ref<Str> = v412 |> unbox<Ref<Str>>
                    let _run_target_args'_v417 = v429 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v433 : Ref<Str> = v412 |> unbox<Ref<Str>>
                    let _run_target_args'_v417 = v433 
                    #endif
#else
                    let v437 : Ref<Str> = v412 |> unbox<Ref<Str>>
                    let _run_target_args'_v417 = v437 
                    #endif
                    let v440 : Ref<Str> = _run_target_args'_v417 
                    (* run_target_args'
                    let v450 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v451 : string = "String::from($0)"
                    let v452 : std_string_String = Fable.Core.RustInterop.emitRustExpr v440 v451 
                    let _run_target_args'_v450 = v452 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v453 : string = "String::from($0)"
                    let v454 : std_string_String = Fable.Core.RustInterop.emitRustExpr v440 v453 
                    let _run_target_args'_v450 = v454 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v455 : string = "String::from($0)"
                    let v456 : std_string_String = Fable.Core.RustInterop.emitRustExpr v440 v455 
                    let _run_target_args'_v450 = v456 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v458 : std_string_String = v440 |> unbox<std_string_String>
                    let _run_target_args'_v450 = v458 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v462 : std_string_String = v440 |> unbox<std_string_String>
                    let _run_target_args'_v450 = v462 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v466 : std_string_String = v440 |> unbox<std_string_String>
                    let _run_target_args'_v450 = v466 
                    #endif
#else
                    let v470 : std_string_String = v440 |> unbox<std_string_String>
                    let _run_target_args'_v450 = v470 
                    #endif
                    let v473 : std_string_String = _run_target_args'_v450 
                    let v479 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v480 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v473 v479 
                    let v481 : string = "v480"
                    let v482 : string = v481 + v237 
                    let v483 : string = v482 + v237 
                    let v484 : string = "vec![" + v483 + "]"
                    let v485 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v484 
                    let v486 : string = "leptos::prelude::Fragment::new($0)"
                    let v487 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v485 v486 
                    let v488 : string = "leptos::prelude::AnyView::from($0)"
                    let v489 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v487 v488 
                    let v490 : string = "<" + v317 + " " + v411 + ">move || { v489 }</" + v317 + ">"
                    let v491 : string = "leptos::prelude::view! { " + v490 + " }"
                    let v492 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v491 
                    let v493 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v492 |> unbox
                    let v494 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v495 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v493 v494 
                    let v496 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v497 : string = " " + v496 + v237 + ""
                    let v498 : string = "Fee"
                    (* run_target_args'
                    let v503 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v504 : string = "&*$0"
                    let v505 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v498 v504 
                    let _run_target_args'_v503 = v505 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v506 : string = "&*$0"
                    let v507 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v498 v506 
                    let _run_target_args'_v503 = v507 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v508 : string = "&*$0"
                    let v509 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v498 v508 
                    let _run_target_args'_v503 = v509 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v511 : Ref<Str> = v498 |> unbox<Ref<Str>>
                    let _run_target_args'_v503 = v511 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v515 : Ref<Str> = v498 |> unbox<Ref<Str>>
                    let _run_target_args'_v503 = v515 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v519 : Ref<Str> = v498 |> unbox<Ref<Str>>
                    let _run_target_args'_v503 = v519 
                    #endif
#else
                    let v523 : Ref<Str> = v498 |> unbox<Ref<Str>>
                    let _run_target_args'_v503 = v523 
                    #endif
                    let v526 : Ref<Str> = _run_target_args'_v503 
                    (* run_target_args'
                    let v536 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v537 : string = "String::from($0)"
                    let v538 : std_string_String = Fable.Core.RustInterop.emitRustExpr v526 v537 
                    let _run_target_args'_v536 = v538 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v539 : string = "String::from($0)"
                    let v540 : std_string_String = Fable.Core.RustInterop.emitRustExpr v526 v539 
                    let _run_target_args'_v536 = v540 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v541 : string = "String::from($0)"
                    let v542 : std_string_String = Fable.Core.RustInterop.emitRustExpr v526 v541 
                    let _run_target_args'_v536 = v542 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v544 : std_string_String = v526 |> unbox<std_string_String>
                    let _run_target_args'_v536 = v544 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v548 : std_string_String = v526 |> unbox<std_string_String>
                    let _run_target_args'_v536 = v548 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v552 : std_string_String = v526 |> unbox<std_string_String>
                    let _run_target_args'_v536 = v552 
                    #endif
#else
                    let v556 : std_string_String = v526 |> unbox<std_string_String>
                    let _run_target_args'_v536 = v556 
                    #endif
                    let v559 : std_string_String = _run_target_args'_v536 
                    let v565 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v566 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v559 v565 
                    let v567 : string = "v566"
                    let v568 : string = v567 + v237 
                    let v569 : string = v568 + v237 
                    let v570 : string = "vec![" + v569 + "]"
                    let v571 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v570 
                    let v572 : string = "leptos::prelude::Fragment::new($0)"
                    let v573 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v571 v572 
                    let v574 : string = "leptos::prelude::AnyView::from($0)"
                    let v575 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v573 v574 
                    let v576 : string = "<" + v317 + " " + v497 + ">move || { v575 }</" + v317 + ">"
                    let v577 : string = "leptos::prelude::view! { " + v576 + " }"
                    let v578 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v577 
                    let v579 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v578 |> unbox
                    let v580 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v581 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v579 v580 
                    let v582 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v583 : string = " " + v582 + v237 + ""
                    let v584 : string = "Result"
                    (* run_target_args'
                    let v589 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v590 : string = "&*$0"
                    let v591 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v584 v590 
                    let _run_target_args'_v589 = v591 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v592 : string = "&*$0"
                    let v593 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v584 v592 
                    let _run_target_args'_v589 = v593 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v594 : string = "&*$0"
                    let v595 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v584 v594 
                    let _run_target_args'_v589 = v595 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v597 : Ref<Str> = v584 |> unbox<Ref<Str>>
                    let _run_target_args'_v589 = v597 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v601 : Ref<Str> = v584 |> unbox<Ref<Str>>
                    let _run_target_args'_v589 = v601 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v605 : Ref<Str> = v584 |> unbox<Ref<Str>>
                    let _run_target_args'_v589 = v605 
                    #endif
#else
                    let v609 : Ref<Str> = v584 |> unbox<Ref<Str>>
                    let _run_target_args'_v589 = v609 
                    #endif
                    let v612 : Ref<Str> = _run_target_args'_v589 
                    (* run_target_args'
                    let v622 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v623 : string = "String::from($0)"
                    let v624 : std_string_String = Fable.Core.RustInterop.emitRustExpr v612 v623 
                    let _run_target_args'_v622 = v624 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v625 : string = "String::from($0)"
                    let v626 : std_string_String = Fable.Core.RustInterop.emitRustExpr v612 v625 
                    let _run_target_args'_v622 = v626 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v627 : string = "String::from($0)"
                    let v628 : std_string_String = Fable.Core.RustInterop.emitRustExpr v612 v627 
                    let _run_target_args'_v622 = v628 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v630 : std_string_String = v612 |> unbox<std_string_String>
                    let _run_target_args'_v622 = v630 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v634 : std_string_String = v612 |> unbox<std_string_String>
                    let _run_target_args'_v622 = v634 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v638 : std_string_String = v612 |> unbox<std_string_String>
                    let _run_target_args'_v622 = v638 
                    #endif
#else
                    let v642 : std_string_String = v612 |> unbox<std_string_String>
                    let _run_target_args'_v622 = v642 
                    #endif
                    let v645 : std_string_String = _run_target_args'_v622 
                    let v651 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v652 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v645 v651 
                    let v653 : string = "v652"
                    let v654 : string = v653 + v237 
                    let v655 : string = v654 + v237 
                    let v656 : string = "vec![" + v655 + "]"
                    let v657 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v656 
                    let v658 : string = "leptos::prelude::Fragment::new($0)"
                    let v659 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v657 v658 
                    let v660 : string = "leptos::prelude::AnyView::from($0)"
                    let v661 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v659 v660 
                    let v662 : string = "<" + v317 + " " + v583 + ">move || { v661 }</" + v317 + ">"
                    let v663 : string = "leptos::prelude::view! { " + v662 + " }"
                    let v664 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v663 
                    let v665 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v664 |> unbox
                    let v666 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v667 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v665 v666 
                    let v668 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v669 : string = " " + v668 + v237 + ""
                    let v670 : string = "Status"
                    (* run_target_args'
                    let v675 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v676 : string = "&*$0"
                    let v677 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v670 v676 
                    let _run_target_args'_v675 = v677 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v678 : string = "&*$0"
                    let v679 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v670 v678 
                    let _run_target_args'_v675 = v679 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v680 : string = "&*$0"
                    let v681 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v670 v680 
                    let _run_target_args'_v675 = v681 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v683 : Ref<Str> = v670 |> unbox<Ref<Str>>
                    let _run_target_args'_v675 = v683 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v687 : Ref<Str> = v670 |> unbox<Ref<Str>>
                    let _run_target_args'_v675 = v687 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v691 : Ref<Str> = v670 |> unbox<Ref<Str>>
                    let _run_target_args'_v675 = v691 
                    #endif
#else
                    let v695 : Ref<Str> = v670 |> unbox<Ref<Str>>
                    let _run_target_args'_v675 = v695 
                    #endif
                    let v698 : Ref<Str> = _run_target_args'_v675 
                    (* run_target_args'
                    let v708 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v709 : string = "String::from($0)"
                    let v710 : std_string_String = Fable.Core.RustInterop.emitRustExpr v698 v709 
                    let _run_target_args'_v708 = v710 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v711 : string = "String::from($0)"
                    let v712 : std_string_String = Fable.Core.RustInterop.emitRustExpr v698 v711 
                    let _run_target_args'_v708 = v712 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v713 : string = "String::from($0)"
                    let v714 : std_string_String = Fable.Core.RustInterop.emitRustExpr v698 v713 
                    let _run_target_args'_v708 = v714 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v716 : std_string_String = v698 |> unbox<std_string_String>
                    let _run_target_args'_v708 = v716 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v720 : std_string_String = v698 |> unbox<std_string_String>
                    let _run_target_args'_v708 = v720 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v724 : std_string_String = v698 |> unbox<std_string_String>
                    let _run_target_args'_v708 = v724 
                    #endif
#else
                    let v728 : std_string_String = v698 |> unbox<std_string_String>
                    let _run_target_args'_v708 = v728 
                    #endif
                    let v731 : std_string_String = _run_target_args'_v708 
                    let v737 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v738 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v731 v737 
                    let v739 : string = "v738"
                    let v740 : string = v739 + v237 
                    let v741 : string = v740 + v237 
                    let v742 : string = "vec![" + v741 + "]"
                    let v743 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v742 
                    let v744 : string = "leptos::prelude::Fragment::new($0)"
                    let v745 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v743 v744 
                    let v746 : string = "leptos::prelude::AnyView::from($0)"
                    let v747 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v745 v746 
                    let v748 : string = "<" + v317 + " " + v669 + ">move || { v747 }</" + v317 + ">"
                    let v749 : string = "leptos::prelude::view! { " + v748 + " }"
                    let v750 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v749 
                    let v751 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v750 |> unbox
                    let v752 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v753 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v751 v752 
                    let v754 : string = "v753"
                    let v755 : string = v754 + v237 
                    let v756 : string = v755 + v237 
                    let v757 : string = "v667"
                    let v758 : string = ", "
                    let v759 : string = v757 + v758 
                    let v760 : string = v759 + v756 
                    let v761 : string = "v581"
                    let v762 : string = v761 + v758 
                    let v763 : string = v762 + v760 
                    let v764 : string = "v495"
                    let v765 : string = v764 + v758 
                    let v766 : string = v765 + v763 
                    let v767 : string = "v409"
                    let v768 : string = v767 + v758 
                    let v769 : string = v768 + v766 
                    let v770 : string = "v323"
                    let v771 : string = v770 + v758 
                    let v772 : string = v771 + v769 
                    let v773 : string = "vec![" + v772 + "]"
                    let v774 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v773 
                    let v775 : string = "leptos::prelude::Fragment::new($0)"
                    let v776 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v774 v775 
                    let v777 : string = "leptos::prelude::AnyView::from($0)"
                    let v778 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v776 v777 
                    let v779 : string = "tr"
                    let v780 : string = "<" + v779 + " " + v237 + ">move || { v778 }</" + v779 + ">"
                    let v781 : string = "leptos::prelude::view! { " + v780 + " }"
                    let v782 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v781 
                    let v783 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>> = v782 |> unbox
                    let v784 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v785 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v783 v784 
                    let v786 : string = "v785"
                    let v787 : string = v786 + v237 
                    let v788 : string = v787 + v237 
                    let v789 : string = "vec![" + v788 + "]"
                    let v790 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v789 
                    let v791 : string = "leptos::prelude::Fragment::new($0)"
                    let v792 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v790 v791 
                    let v793 : string = $"leptos::prelude::ArcMemo::get(&$0)"
                    let v794 : Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v0 v793 
                    let v795 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v796 : bool = Fable.Core.RustInterop.emitRustExpr v235 v795 
                    let v797 : string = "x"
                    let struct (v798 : string, v799 : unativeint, v800 : Heap5) = Fable.Core.RustInterop.emitRustExpr () v797 
                    let v801 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v802 : (Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v794 v801 
                    let v808 : int32 = v799 |> int32 
                    let v817 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = v802.[int v808]
                    let v820 : string = "class=\"odd:bg-gray-50 dark:odd:bg-gray-800/50\""
                    let v821 : string = " " + v820 + v237 + ""
                    let v822 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v823 : string = " " + v822 + v237 + ""
                    let v824 : std_string_String = v800.l5
                    let v825 : string = "fable_library_rust::String_::fromString($0)"
                    let v826 : string = Fable.Core.RustInterop.emitRustExpr v824 v825 
                    let v828 : (string -> int64) = int64
                    let v829 : int64 = v828 v826
                    let v832 : int64 = method204(v829)
                    let v833 : int64 = v832 / 1000L
                    let v834 : string = "chrono::DateTime::from_timestamp_micros($0)"
                    let v835 : chrono_DateTime<chrono_Utc> option = Fable.Core.RustInterop.emitRustExpr v833 v834 
                    let v838 : (chrono_DateTime<chrono_Utc> -> US68) = method205()
                    let v839 : US68 option = v835 |> Option.map v838 
                    let v859 : US68 = US68_1
                    let v860 : US68 = v839 |> Option.defaultValue v859 
                    let v879 : US31 =
                        match v860 with
                        | US68_1 -> (* None *)
                            US31_1
                        | US68_0(v864) -> (* Some *)
                            let v865 : string = "$0.naive_utc()"
                            let v866 : chrono_NaiveDateTime = Fable.Core.RustInterop.emitRustExpr v864 v865 
                            let v867 : string = "chrono::offset::TimeZone::from_utc_datetime(&chrono::Local, &$0)"
                            let v868 : chrono_DateTime<chrono_Local> = Fable.Core.RustInterop.emitRustExpr v866 v867 
                            let v869 : string = "%Y-%m-%d %H:%M:%S"
                            let v870 : string = "r#\"" + v869 + "\"#"
                            let v871 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v870 
                            let v872 : string = "$0.format($1).to_string()"
                            let v873 : std_string_String = Fable.Core.RustInterop.emitRustExpr struct (v868, v871) v872 
                            let v874 : string = "fable_library_rust::String_::fromString($0)"
                            let v875 : string = Fable.Core.RustInterop.emitRustExpr v873 v874 
                            US31_0(v875)
                    let v885 : US69 =
                        match v879 with
                        | US31_1 -> (* None *)
                            let v882 : string = "resultm.from_option / Option does not have a value."
                            US69_1(v882)
                        | US31_0(v880) -> (* Some *)
                            US69_0(v880)
                    let v890 : string =
                        match v885 with
                        | US69_1(v887) -> (* Error *)
                            let v888 : string = "sm'.to_string result / Error: " + v887 + ""
                            v888
                        | US69_0(v886) -> (* Ok *)
                            v886
                    (* run_target_args'
                    let v895 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v896 : string = "&*$0"
                    let v897 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v890 v896 
                    let _run_target_args'_v895 = v897 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v898 : string = "&*$0"
                    let v899 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v890 v898 
                    let _run_target_args'_v895 = v899 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v900 : string = "&*$0"
                    let v901 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v890 v900 
                    let _run_target_args'_v895 = v901 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v903 : Ref<Str> = v890 |> unbox<Ref<Str>>
                    let _run_target_args'_v895 = v903 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v907 : Ref<Str> = v890 |> unbox<Ref<Str>>
                    let _run_target_args'_v895 = v907 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v911 : Ref<Str> = v890 |> unbox<Ref<Str>>
                    let _run_target_args'_v895 = v911 
                    #endif
#else
                    let v915 : Ref<Str> = v890 |> unbox<Ref<Str>>
                    let _run_target_args'_v895 = v915 
                    #endif
                    let v918 : Ref<Str> = _run_target_args'_v895 
                    (* run_target_args'
                    let v928 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v929 : string = "String::from($0)"
                    let v930 : std_string_String = Fable.Core.RustInterop.emitRustExpr v918 v929 
                    let _run_target_args'_v928 = v930 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v931 : string = "String::from($0)"
                    let v932 : std_string_String = Fable.Core.RustInterop.emitRustExpr v918 v931 
                    let _run_target_args'_v928 = v932 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v933 : string = "String::from($0)"
                    let v934 : std_string_String = Fable.Core.RustInterop.emitRustExpr v918 v933 
                    let _run_target_args'_v928 = v934 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v936 : std_string_String = v918 |> unbox<std_string_String>
                    let _run_target_args'_v928 = v936 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v940 : std_string_String = v918 |> unbox<std_string_String>
                    let _run_target_args'_v928 = v940 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v944 : std_string_String = v918 |> unbox<std_string_String>
                    let _run_target_args'_v928 = v944 
                    #endif
#else
                    let v948 : std_string_String = v918 |> unbox<std_string_String>
                    let _run_target_args'_v928 = v948 
                    #endif
                    let v951 : std_string_String = _run_target_args'_v928 
                    let v957 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v958 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v951 v957 
                    let v959 : string = "v958"
                    let v960 : string = v959 + v237 
                    let v961 : string = v960 + v237 
                    let v962 : string = "vec![" + v961 + "]"
                    let v963 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v962 
                    let v964 : string = "leptos::prelude::Fragment::new($0)"
                    let v965 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v963 v964 
                    let v966 : string = "leptos::prelude::AnyView::from($0)"
                    let v967 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v965 v966 
                    let v968 : string = "td"
                    let v969 : string = "<" + v968 + " " + v823 + ">move || { v967 }</" + v968 + ">"
                    let v970 : string = "leptos::prelude::view! { " + v969 + " }"
                    let v971 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v970 
                    let v972 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v971 |> unbox
                    let v973 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v974 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v972 v973 
                    let v975 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v976 : string = " " + v975 + v237 + ""
                    let v977 : std_string_String = v800.l1
                    let v978 : string = "fable_library_rust::String_::fromString($0)"
                    let v979 : string = Fable.Core.RustInterop.emitRustExpr v977 v978 
                    (* run_target_args'
                    let v984 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v985 : string = "&*$0"
                    let v986 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v979 v985 
                    let _run_target_args'_v984 = v986 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v987 : string = "&*$0"
                    let v988 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v979 v987 
                    let _run_target_args'_v984 = v988 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v989 : string = "&*$0"
                    let v990 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v979 v989 
                    let _run_target_args'_v984 = v990 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v992 : Ref<Str> = v979 |> unbox<Ref<Str>>
                    let _run_target_args'_v984 = v992 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v996 : Ref<Str> = v979 |> unbox<Ref<Str>>
                    let _run_target_args'_v984 = v996 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1000 : Ref<Str> = v979 |> unbox<Ref<Str>>
                    let _run_target_args'_v984 = v1000 
                    #endif
#else
                    let v1004 : Ref<Str> = v979 |> unbox<Ref<Str>>
                    let _run_target_args'_v984 = v1004 
                    #endif
                    let v1007 : Ref<Str> = _run_target_args'_v984 
                    (* run_target_args'
                    let v1017 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1018 : string = "String::from($0)"
                    let v1019 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1007 v1018 
                    let _run_target_args'_v1017 = v1019 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1020 : string = "String::from($0)"
                    let v1021 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1007 v1020 
                    let _run_target_args'_v1017 = v1021 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1022 : string = "String::from($0)"
                    let v1023 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1007 v1022 
                    let _run_target_args'_v1017 = v1023 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1025 : std_string_String = v1007 |> unbox<std_string_String>
                    let _run_target_args'_v1017 = v1025 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1029 : std_string_String = v1007 |> unbox<std_string_String>
                    let _run_target_args'_v1017 = v1029 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1033 : std_string_String = v1007 |> unbox<std_string_String>
                    let _run_target_args'_v1017 = v1033 
                    #endif
#else
                    let v1037 : std_string_String = v1007 |> unbox<std_string_String>
                    let _run_target_args'_v1017 = v1037 
                    #endif
                    let v1040 : std_string_String = _run_target_args'_v1017 
                    let v1046 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v1047 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1040 v1046 
                    let v1048 : string = "v1047"
                    let v1049 : string = v1048 + v237 
                    let v1050 : string = v1049 + v237 
                    let v1051 : string = "vec![" + v1050 + "]"
                    let v1052 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1051 
                    let v1053 : string = "leptos::prelude::Fragment::new($0)"
                    let v1054 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1052 v1053 
                    let v1055 : string = "leptos::prelude::AnyView::from($0)"
                    let v1056 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1054 v1055 
                    let v1057 : string = "<" + v968 + " " + v976 + ">move || { v1056 }</" + v968 + ">"
                    let v1058 : string = "leptos::prelude::view! { " + v1057 + " }"
                    let v1059 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1058 
                    let v1060 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1059 |> unbox
                    let v1061 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1062 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1060 v1061 
                    let v1063 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v1064 : string = " " + v1063 + v237 + ""
                    let v1065 : std_string_String = v800.l2
                    let v1066 : string = "fable_library_rust::String_::fromString($0)"
                    let v1067 : string = Fable.Core.RustInterop.emitRustExpr v1065 v1066 
                    (* run_target_args'
                    let v1072 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1073 : string = "&*$0"
                    let v1074 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1067 v1073 
                    let _run_target_args'_v1072 = v1074 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1075 : string = "&*$0"
                    let v1076 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1067 v1075 
                    let _run_target_args'_v1072 = v1076 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1077 : string = "&*$0"
                    let v1078 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1067 v1077 
                    let _run_target_args'_v1072 = v1078 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1080 : Ref<Str> = v1067 |> unbox<Ref<Str>>
                    let _run_target_args'_v1072 = v1080 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1084 : Ref<Str> = v1067 |> unbox<Ref<Str>>
                    let _run_target_args'_v1072 = v1084 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1088 : Ref<Str> = v1067 |> unbox<Ref<Str>>
                    let _run_target_args'_v1072 = v1088 
                    #endif
#else
                    let v1092 : Ref<Str> = v1067 |> unbox<Ref<Str>>
                    let _run_target_args'_v1072 = v1092 
                    #endif
                    let v1095 : Ref<Str> = _run_target_args'_v1072 
                    (* run_target_args'
                    let v1105 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1106 : string = "String::from($0)"
                    let v1107 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1095 v1106 
                    let _run_target_args'_v1105 = v1107 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1108 : string = "String::from($0)"
                    let v1109 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1095 v1108 
                    let _run_target_args'_v1105 = v1109 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1110 : string = "String::from($0)"
                    let v1111 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1095 v1110 
                    let _run_target_args'_v1105 = v1111 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1113 : std_string_String = v1095 |> unbox<std_string_String>
                    let _run_target_args'_v1105 = v1113 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1117 : std_string_String = v1095 |> unbox<std_string_String>
                    let _run_target_args'_v1105 = v1117 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1121 : std_string_String = v1095 |> unbox<std_string_String>
                    let _run_target_args'_v1105 = v1121 
                    #endif
#else
                    let v1125 : std_string_String = v1095 |> unbox<std_string_String>
                    let _run_target_args'_v1105 = v1125 
                    #endif
                    let v1128 : std_string_String = _run_target_args'_v1105 
                    let v1134 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v1135 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1128 v1134 
                    let v1136 : string = "v1135"
                    let v1137 : string = v1136 + v237 
                    let v1138 : string = v1137 + v237 
                    let v1139 : string = "vec![" + v1138 + "]"
                    let v1140 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1139 
                    let v1141 : string = "leptos::prelude::Fragment::new($0)"
                    let v1142 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1140 v1141 
                    let v1143 : string = "leptos::prelude::AnyView::from($0)"
                    let v1144 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1142 v1143 
                    let v1145 : string = "<" + v968 + " " + v1064 + ">move || { v1144 }</" + v968 + ">"
                    let v1146 : string = "leptos::prelude::view! { " + v1145 + " }"
                    let v1147 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1146 
                    let v1148 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1147 |> unbox
                    let v1149 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1150 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1148 v1149 
                    let v1151 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v1152 : string = " " + v1151 + v237 + ""
                    let v1153 : float = v800.l10
                    let v1155 : (float -> string) = _.ToString()
                    let v1156 : string = v1155 v1153
                    (* run_target_args'
                    let v1163 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1164 : string = "&*$0"
                    let v1165 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1156 v1164 
                    let _run_target_args'_v1163 = v1165 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1166 : string = "&*$0"
                    let v1167 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1156 v1166 
                    let _run_target_args'_v1163 = v1167 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1168 : string = "&*$0"
                    let v1169 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1156 v1168 
                    let _run_target_args'_v1163 = v1169 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1171 : Ref<Str> = v1156 |> unbox<Ref<Str>>
                    let _run_target_args'_v1163 = v1171 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1175 : Ref<Str> = v1156 |> unbox<Ref<Str>>
                    let _run_target_args'_v1163 = v1175 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1179 : Ref<Str> = v1156 |> unbox<Ref<Str>>
                    let _run_target_args'_v1163 = v1179 
                    #endif
#else
                    let v1183 : Ref<Str> = v1156 |> unbox<Ref<Str>>
                    let _run_target_args'_v1163 = v1183 
                    #endif
                    let v1186 : Ref<Str> = _run_target_args'_v1163 
                    (* run_target_args'
                    let v1196 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1197 : string = "String::from($0)"
                    let v1198 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1186 v1197 
                    let _run_target_args'_v1196 = v1198 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1199 : string = "String::from($0)"
                    let v1200 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1186 v1199 
                    let _run_target_args'_v1196 = v1200 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1201 : string = "String::from($0)"
                    let v1202 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1186 v1201 
                    let _run_target_args'_v1196 = v1202 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1204 : std_string_String = v1186 |> unbox<std_string_String>
                    let _run_target_args'_v1196 = v1204 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1208 : std_string_String = v1186 |> unbox<std_string_String>
                    let _run_target_args'_v1196 = v1208 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1212 : std_string_String = v1186 |> unbox<std_string_String>
                    let _run_target_args'_v1196 = v1212 
                    #endif
#else
                    let v1216 : std_string_String = v1186 |> unbox<std_string_String>
                    let _run_target_args'_v1196 = v1216 
                    #endif
                    let v1219 : std_string_String = _run_target_args'_v1196 
                    let v1225 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v1226 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1219 v1225 
                    let v1227 : string = "v1226"
                    let v1228 : string = v1227 + v237 
                    let v1229 : string = v1228 + v237 
                    let v1230 : string = "vec![" + v1229 + "]"
                    let v1231 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1230 
                    let v1232 : string = "leptos::prelude::Fragment::new($0)"
                    let v1233 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1231 v1232 
                    let v1234 : string = "leptos::prelude::AnyView::from($0)"
                    let v1235 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1233 v1234 
                    let v1236 : string = "<" + v968 + " " + v1152 + ">move || { v1235 }</" + v968 + ">"
                    let v1237 : string = "leptos::prelude::view! { " + v1236 + " }"
                    let v1238 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1237 
                    let v1239 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1238 |> unbox
                    let v1240 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1241 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1239 v1240 
                    let v1242 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v1243 : string = " " + v1242 + v237 + ""
                    let v1244 : (std_string_String []) = v800.l11
                    let v1245 : uint64 = System.Convert.ToUInt64 v1244.Length
                    let v1246 : bool = v1245 = 0UL
                    let v1434 : leptos_dom_Fragment =
                        if v1246 then
                            (* run_target_args'
                            let v1251 : unit = ()
                            run_target_args' *)
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1252 : string = "&*$0"
                            let v1253 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v237 v1252 
                            let _run_target_args'_v1251 = v1253 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1254 : string = "&*$0"
                            let v1255 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v237 v1254 
                            let _run_target_args'_v1251 = v1255 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1256 : string = "&*$0"
                            let v1257 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v237 v1256 
                            let _run_target_args'_v1251 = v1257 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1259 : Ref<Str> = v237 |> unbox<Ref<Str>>
                            let _run_target_args'_v1251 = v1259 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1263 : Ref<Str> = v237 |> unbox<Ref<Str>>
                            let _run_target_args'_v1251 = v1263 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1267 : Ref<Str> = v237 |> unbox<Ref<Str>>
                            let _run_target_args'_v1251 = v1267 
                            #endif
#else
                            let v1271 : Ref<Str> = v237 |> unbox<Ref<Str>>
                            let _run_target_args'_v1251 = v1271 
                            #endif
                            let v1274 : Ref<Str> = _run_target_args'_v1251 
                            (* run_target_args'
                            let v1284 : unit = ()
                            run_target_args' *)
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1285 : string = "String::from($0)"
                            let v1286 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1274 v1285 
                            let _run_target_args'_v1284 = v1286 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1287 : string = "String::from($0)"
                            let v1288 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1274 v1287 
                            let _run_target_args'_v1284 = v1288 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1289 : string = "String::from($0)"
                            let v1290 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1274 v1289 
                            let _run_target_args'_v1284 = v1290 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1292 : std_string_String = v1274 |> unbox<std_string_String>
                            let _run_target_args'_v1284 = v1292 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1296 : std_string_String = v1274 |> unbox<std_string_String>
                            let _run_target_args'_v1284 = v1296 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1300 : std_string_String = v1274 |> unbox<std_string_String>
                            let _run_target_args'_v1284 = v1300 
                            #endif
#else
                            let v1304 : std_string_String = v1274 |> unbox<std_string_String>
                            let _run_target_args'_v1284 = v1304 
                            #endif
                            let v1307 : std_string_String = _run_target_args'_v1284 
                            let v1313 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                            let v1314 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1307 v1313 
                            let v1315 : string = "v1314"
                            let v1316 : string = v1315 + v237 
                            let v1317 : string = v1316 + v237 
                            let v1318 : string = "vec![" + v1317 + "]"
                            let v1319 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1318 
                            let v1320 : string = "leptos::prelude::Fragment::new($0)"
                            let v1321 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1319 v1320 
                            v1321
                        else
                            let v1322 : (std_string_String []) = v800.l11
                            let v1323 : int32 = v1322.Length
                            let v1324 : US31 = US31_1
                            let v1325 : Mut2 = {l0 = 0; l1 = v1324} : Mut2
                            while method206(v1323, v1325) do
                                let v1327 : int32 = v1325.l0
                                let v1328 : int32 =  -v1327
                                let v1329 : int32 = v1328 + v1323
                                let v1330 : int32 = v1329 - 1
                                let v1331 : US31 = v1325.l1
                                let v1332 : std_string_String = v1322.[int v1330]
                                let v1333 : string = "fable_library_rust::String_::fromString($0)"
                                let v1334 : string = Fable.Core.RustInterop.emitRustExpr v1332 v1333 
                                let v1342 : string = " / result: "
                                let v1343 : (string []) = v1334.Split v1342 
                                let v1352 : US31 =
                                    match v1331 with
                                    | US31_1 -> (* None *)
                                        let v1346 : uint64 = System.Convert.ToUInt64 v1343.Length
                                        let v1347 : bool = v1346 = 2UL
                                        if v1347 then
                                            let v1348 : string = v1343.[int 0]
                                            let v1349 : string = v1343.[int 1]
                                            US31_0(v1349)
                                        else
                                            v1331
                                    | _ ->
                                        v1331
                                let v1353 : int32 = v1327 + 1
                                v1325.l0 <- v1353
                                v1325.l1 <- v1352
                                ()
                            let v1354 : US31 = v1325.l1
                            let v1358 : string =
                                match v1354 with
                                | US31_1 -> (* None *)
                                    let v1356 : string = "?"
                                    v1356
                                | US31_0(v1355) -> (* Some *)
                                    v1355
                            (* run_target_args'
                            let v1363 : unit = ()
                            run_target_args' *)
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1364 : string = "&*$0"
                            let v1365 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1358 v1364 
                            let _run_target_args'_v1363 = v1365 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1366 : string = "&*$0"
                            let v1367 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1358 v1366 
                            let _run_target_args'_v1363 = v1367 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1368 : string = "&*$0"
                            let v1369 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1358 v1368 
                            let _run_target_args'_v1363 = v1369 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1371 : Ref<Str> = v1358 |> unbox<Ref<Str>>
                            let _run_target_args'_v1363 = v1371 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1375 : Ref<Str> = v1358 |> unbox<Ref<Str>>
                            let _run_target_args'_v1363 = v1375 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1379 : Ref<Str> = v1358 |> unbox<Ref<Str>>
                            let _run_target_args'_v1363 = v1379 
                            #endif
#else
                            let v1383 : Ref<Str> = v1358 |> unbox<Ref<Str>>
                            let _run_target_args'_v1363 = v1383 
                            #endif
                            let v1386 : Ref<Str> = _run_target_args'_v1363 
                            (* run_target_args'
                            let v1396 : unit = ()
                            run_target_args' *)
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1397 : string = "String::from($0)"
                            let v1398 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1386 v1397 
                            let _run_target_args'_v1396 = v1398 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1399 : string = "String::from($0)"
                            let v1400 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1386 v1399 
                            let _run_target_args'_v1396 = v1400 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1401 : string = "String::from($0)"
                            let v1402 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1386 v1401 
                            let _run_target_args'_v1396 = v1402 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1404 : std_string_String = v1386 |> unbox<std_string_String>
                            let _run_target_args'_v1396 = v1404 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1408 : std_string_String = v1386 |> unbox<std_string_String>
                            let _run_target_args'_v1396 = v1408 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1412 : std_string_String = v1386 |> unbox<std_string_String>
                            let _run_target_args'_v1396 = v1412 
                            #endif
#else
                            let v1416 : std_string_String = v1386 |> unbox<std_string_String>
                            let _run_target_args'_v1396 = v1416 
                            #endif
                            let v1419 : std_string_String = _run_target_args'_v1396 
                            let v1425 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                            let v1426 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1419 v1425 
                            let v1427 : string = "v1426"
                            let v1428 : string = v1427 + v237 
                            let v1429 : string = v1428 + v237 
                            let v1430 : string = "vec![" + v1429 + "]"
                            let v1431 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1430 
                            let v1432 : string = "leptos::prelude::Fragment::new($0)"
                            let v1433 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1431 v1432 
                            v1433
                    let v1435 : string = "leptos::prelude::AnyView::from($0)"
                    let v1436 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1434 v1435 
                    let v1437 : string = "<" + v968 + " " + v1243 + ">move || { v1436 }</" + v968 + ">"
                    let v1438 : string = "leptos::prelude::view! { " + v1437 + " }"
                    let v1439 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1438 
                    let v1440 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1439 |> unbox
                    let v1441 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1442 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1440 v1441 
                    let v1443 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v1444 : string = " " + v1443 + v237 + ""
                    let v1445 : bool = v800.l9
                    let v1448 : string =
                        if v1445 then
                            let v1446 : string = "Ok"
                            v1446
                        else
                            let v1447 : string = "Outcome Error"
                            v1447
                    let v1449 : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option -> US63) = method177()
                    let v1450 : (std_string_String -> US63) = method178()
                    let v1452 : US63 = match v817 with Ok x -> v1449 x | Error x -> v1450 x
                    let v1491 : US58 =
                        match v1452 with
                        | US63_1(v1488) -> (* Error *)
                            US58_1(v1488)
                        | US63_0(v1455) -> (* Ok *)
                            let v1458 : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) -> US59) = method179()
                            let v1459 : US59 option = v1455 |> Option.map v1458 
                            let v1482 : US59 = US59_1
                            let v1483 : US59 = v1459 |> Option.defaultValue v1482 
                            US58_0(v1483)
                    let v1612 : US69 =
                        match v1491 with
                        | US58_1(v1607) -> (* Error *)
                            let v1608 : string = "fable_library_rust::String_::fromString($0)"
                            let v1609 : string = Fable.Core.RustInterop.emitRustExpr v1607 v1608 
                            US69_1(v1609)
                        | US58_0(v1492) -> (* Ok *)
                            match v1492 with
                            | US59_0(v1493, v1494, v1495, v1496) -> (* Some *)
                                let v1499 : (struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) -> US64) = method180()
                                let v1500 : US64 option = v1495 |> Option.map v1499 
                                let v1525 : US64 = US64_1
                                let v1526 : US64 = v1500 |> Option.defaultValue v1525 
                                match v1526 with
                                | US64_1 -> (* None *)
                                    let v1590 : string = $"%A{struct (v1493, v1494, v1495, v1496)}"
                                    let v1593 : int64 = 400L
                                    let v1594 : string = method8(v1593, v1590)
                                    US69_0(v1594)
                                | US64_0(v1530, v1531, v1532, v1533, v1534, v1535) -> (* Some *)
                                    let v1538 : (struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) -> US64) = method180()
                                    let v1539 : US64 option = v1495 |> Option.map v1538 
                                    let v1564 : US64 = US64_1
                                    let v1565 : US64 = v1539 |> Option.defaultValue v1564 
                                    let v1578 : US31 =
                                        match v1565 with
                                        | US64_0(v1569, v1570, v1571, v1572, v1573, v1574) -> (* Some *)
                                            let v1575 : string = string v1569 + ": " + string v1573 + " - " + string v1574 + " (" + string v1570 + ")"
                                            US31_0(v1575)
                                        | _ ->
                                            US31_1
                                    let v1587 : string =
                                        match v1578 with
                                        | US31_1 -> (* None *)
                                            let v1581 : string = $"%A{()}"
                                            let v1584 : int64 = 400L
                                            method8(v1584, v1581)
                                        | US31_0(v1579) -> (* Some *)
                                            v1579
                                    US69_1(v1587)
                            | _ ->
                                let v1599 : string = $"%A{v1491}"
                                let v1602 : int64 = 400L
                                let v1603 : string = method8(v1602, v1599)
                                let v1604 : string = $"RPC Response: {v1603}"
                                US69_1(v1604)
                    let v1624 : string =
                        match v1612 with
                        | US69_1(v1621) -> (* Error *)
                            let v1622 : string = $"Error: {v1621}"
                            v1622
                        | US69_0(v1613) -> (* Ok *)
                            let v1615 : string = $"%A{v1613}"
                            let v1618 : int64 = 400L
                            let v1619 : string = method8(v1618, v1615)
                            let v1620 : string = $"RPC Response: {v1619}"
                            v1620
                    let v1625 : string = $"{v1448} / {v1624}"
                    (* run_target_args'
                    let v1630 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1631 : string = "&*$0"
                    let v1632 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1625 v1631 
                    let _run_target_args'_v1630 = v1632 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1633 : string = "&*$0"
                    let v1634 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1625 v1633 
                    let _run_target_args'_v1630 = v1634 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1635 : string = "&*$0"
                    let v1636 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1625 v1635 
                    let _run_target_args'_v1630 = v1636 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1638 : Ref<Str> = v1625 |> unbox<Ref<Str>>
                    let _run_target_args'_v1630 = v1638 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1642 : Ref<Str> = v1625 |> unbox<Ref<Str>>
                    let _run_target_args'_v1630 = v1642 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1646 : Ref<Str> = v1625 |> unbox<Ref<Str>>
                    let _run_target_args'_v1630 = v1646 
                    #endif
#else
                    let v1650 : Ref<Str> = v1625 |> unbox<Ref<Str>>
                    let _run_target_args'_v1630 = v1650 
                    #endif
                    let v1653 : Ref<Str> = _run_target_args'_v1630 
                    (* run_target_args'
                    let v1663 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1664 : string = "String::from($0)"
                    let v1665 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1653 v1664 
                    let _run_target_args'_v1663 = v1665 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1666 : string = "String::from($0)"
                    let v1667 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1653 v1666 
                    let _run_target_args'_v1663 = v1667 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1668 : string = "String::from($0)"
                    let v1669 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1653 v1668 
                    let _run_target_args'_v1663 = v1669 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1671 : std_string_String = v1653 |> unbox<std_string_String>
                    let _run_target_args'_v1663 = v1671 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1675 : std_string_String = v1653 |> unbox<std_string_String>
                    let _run_target_args'_v1663 = v1675 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1679 : std_string_String = v1653 |> unbox<std_string_String>
                    let _run_target_args'_v1663 = v1679 
                    #endif
#else
                    let v1683 : std_string_String = v1653 |> unbox<std_string_String>
                    let _run_target_args'_v1663 = v1683 
                    #endif
                    let v1686 : std_string_String = _run_target_args'_v1663 
                    let v1692 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v1693 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1686 v1692 
                    let v1694 : string = "v1693"
                    let v1695 : string = v1694 + v237 
                    let v1696 : string = v1695 + v237 
                    let v1697 : string = "vec![" + v1696 + "]"
                    let v1698 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1697 
                    let v1699 : string = "leptos::prelude::Fragment::new($0)"
                    let v1700 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1698 v1699 
                    let v1701 : string = "leptos::prelude::AnyView::from($0)"
                    let v1702 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1700 v1701 
                    let v1703 : string = "<" + v968 + " " + v1444 + ">move || { v1702 }</" + v968 + ">"
                    let v1704 : string = "leptos::prelude::view! { " + v1703 + " }"
                    let v1705 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1704 
                    let v1706 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1705 |> unbox
                    let v1707 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1708 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1706 v1707 
                    let v1709 : string = "v1708"
                    let v1710 : string = v1709 + v237 
                    let v1711 : string = v1710 + v237 
                    let v1712 : string = "v1442"
                    let v1713 : string = v1712 + v758 
                    let v1714 : string = v1713 + v1711 
                    let v1715 : string = "v1241"
                    let v1716 : string = v1715 + v758 
                    let v1717 : string = v1716 + v1714 
                    let v1718 : string = "v1150"
                    let v1719 : string = v1718 + v758 
                    let v1720 : string = v1719 + v1717 
                    let v1721 : string = "v1062"
                    let v1722 : string = v1721 + v758 
                    let v1723 : string = v1722 + v1720 
                    let v1724 : string = "v974"
                    let v1725 : string = v1724 + v758 
                    let v1726 : string = v1725 + v1723 
                    let v1727 : string = "vec![" + v1726 + "]"
                    let v1728 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1727 
                    let v1729 : string = "leptos::prelude::Fragment::new($0)"
                    let v1730 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1728 v1729 
                    let v1731 : string = "leptos::prelude::AnyView::from($0)"
                    let v1732 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1730 v1731 
                    let v1733 : string = "<" + v779 + " " + v821 + ">move || { v1732 }</" + v779 + ">"
                    let v1734 : string = "leptos::prelude::view! { " + v1733 + " }"
                    let v1735 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1734 
                    let v1736 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>> = v1735 |> unbox
                    let v1737 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1738 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1736 v1737 
                    let v1739 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v1740 : bool = Fable.Core.RustInterop.emitRustExpr v1738 v1739 
                    let v1741 : string = "_vec_map"
                    let v1742 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1741 
                    let v1743 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1744 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1742 v1743 
                    let v1745 : string = "v1744"
                    let v1746 : string = v1745 + v237 
                    let v1747 : string = v1746 + v237 
                    let v1748 : string = "vec![" + v1747 + "]"
                    let v1749 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1748 
                    let v1750 : string = "leptos::prelude::Fragment::new($0)"
                    let v1751 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1749 v1750 
                    let v1752 : string = "class=\"flex-1 min-w-full divide-y-2 divide-gray-200 text-sm dark:divide-gray-700\""
                    let v1753 : string = " " + v1752 + v237 + ""
                    let v1754 : string = "class=\"ltr:text-left rtl:text-right\""
                    let v1755 : string = " " + v1754 + v237 + ""
                    let v1756 : string = "leptos::prelude::AnyView::from($0)"
                    let v1757 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v792 v1756 
                    let v1758 : string = "thead"
                    let v1759 : string = "<" + v1758 + " " + v1755 + ">move || { v1757 }</" + v1758 + ">"
                    let v1760 : string = "leptos::prelude::view! { " + v1759 + " }"
                    let v1761 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1760 
                    let v1762 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Thead>> = v1761 |> unbox
                    let v1763 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1764 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1762 v1763 
                    let v1765 : string = "class=\"divide-y divide-gray-200 dark:divide-gray-700\""
                    let v1766 : string = " " + v1765 + v237 + ""
                    let v1767 : string = "leptos::prelude::AnyView::from($0)"
                    let v1768 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1751 v1767 
                    let v1769 : string = "tbody"
                    let v1770 : string = "<" + v1769 + " " + v1766 + ">move || { v1768 }</" + v1769 + ">"
                    let v1771 : string = "leptos::prelude::view! { " + v1770 + " }"
                    let v1772 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1771 
                    let v1773 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tbody>> = v1772 |> unbox
                    let v1774 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1775 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1773 v1774 
                    let v1776 : string = "v1775"
                    let v1777 : string = v1776 + v237 
                    let v1778 : string = v1777 + v237 
                    let v1779 : string = "v1764"
                    let v1780 : string = v1779 + v758 
                    let v1781 : string = v1780 + v1778 
                    let v1782 : string = "vec![" + v1781 + "]"
                    let v1783 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1782 
                    let v1784 : string = "leptos::prelude::Fragment::new($0)"
                    let v1785 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1783 v1784 
                    let v1786 : string = "leptos::prelude::AnyView::from($0)"
                    let v1787 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1785 v1786 
                    let v1788 : string = "table"
                    let v1789 : string = "<" + v1788 + " " + v1753 + ">move || { v1787 }</" + v1788 + ">"
                    let v1790 : string = "leptos::prelude::view! { " + v1789 + " }"
                    let v1791 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1790 
                    let v1792 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Table>> = v1791 |> unbox
                    let v1793 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1794 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1792 v1793 
                    v1794
                | _ ->
                    let v1795 : string = "class=\"grid place-content-center py-[10vh]\""
                    let v1796 : string = ""
                    let v1797 : string = " " + v1795 + v1796 + ""
                    let v1798 : string = "class=\"flex flex-1 [gap:4px] items-center\""
                    let v1799 : string = " " + v1798 + v1796 + ""
                    let v1800 : string = "$0"
                    let v1801 : (unit -> string) = closure191()
                    let v1802 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1801 v1800 
                    let v1803 : string = "version=\"1.1\""
                    let v1804 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                    let v1805 : string = "xmlns:xlink=\"http://www.w3.org/1999/xlink\""
                    let v1806 : string = "x=\"0px\""
                    let v1807 : string = "y=\"0px\""
                    let v1808 : string = "viewBox=\"0 0 24 30\""
                    let v1809 : string = "style=\"enable-background:new 0 0 50 50;\""
                    let v1810 : string = "xml:space=\"preserve\""
                    let v1811 : string = "class=move || \" \".to_owned() + &v1802(())"
                    let v1812 : string = " " + v1803 + v1796 + ""
                    let v1813 : string = " " + v1804 + v1812 + ""
                    let v1814 : string = " " + v1805 + v1813 + ""
                    let v1815 : string = " " + v1806 + v1814 + ""
                    let v1816 : string = " " + v1807 + v1815 + ""
                    let v1817 : string = " " + v1808 + v1816 + ""
                    let v1818 : string = " " + v1809 + v1817 + ""
                    let v1819 : string = " " + v1810 + v1818 + ""
                    let v1820 : string = " " + v1811 + v1819 + ""
                    let v1821 : string = "x=\"0\""
                    let v1822 : string = "y=\"10\""
                    let v1823 : string = "width=\"4\""
                    let v1824 : string = "height=\"10\""
                    let v1825 : string = "fill=\"#333\""
                    let v1826 : string = "opacity=\"0.2\""
                    let v1827 : string = " " + v1821 + v1796 + ""
                    let v1828 : string = " " + v1822 + v1827 + ""
                    let v1829 : string = " " + v1823 + v1828 + ""
                    let v1830 : string = " " + v1824 + v1829 + ""
                    let v1831 : string = " " + v1825 + v1830 + ""
                    let v1832 : string = " " + v1826 + v1831 + ""
                    let v1833 : string = "attributeName=\"opacity\""
                    let v1834 : string = "attributeType=\"XML\""
                    let v1835 : string = "values=\"0.2; 1; .2\""
                    let v1836 : string = "begin=\"0s\""
                    let v1837 : string = "dur=\"0.6s\""
                    let v1838 : string = "repeatCount=\"indefinite\""
                    let v1839 : string = " " + v1833 + v1796 + ""
                    let v1840 : string = " " + v1834 + v1839 + ""
                    let v1841 : string = " " + v1835 + v1840 + ""
                    let v1842 : string = " " + v1836 + v1841 + ""
                    let v1843 : string = " " + v1837 + v1842 + ""
                    let v1844 : string = " " + v1838 + v1843 + ""
                    let v1845 : string = "vec![" + v1796 + "]"
                    let v1846 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1845 
                    let v1847 : string = "leptos::prelude::Fragment::new($0)"
                    let v1848 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1846 v1847 
                    let v1849 : string = "leptos::prelude::AnyView::from($0)"
                    let v1850 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1848 v1849 
                    let v1851 : string = "animate"
                    let v1852 : string = "<" + v1851 + " " + v1844 + ">move || { v1850 }</" + v1851 + ">"
                    let v1853 : string = "leptos::prelude::view! { " + v1852 + " }"
                    let v1854 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1853 
                    let v1855 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1854 |> unbox
                    let v1856 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1857 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1855 v1856 
                    let v1858 : string = "attributeName=\"height\""
                    let v1859 : string = "attributeType=\"XML\""
                    let v1860 : string = "values=\"10; 20; 10\""
                    let v1861 : string = "begin=\"0s\""
                    let v1862 : string = "dur=\"0.6s\""
                    let v1863 : string = "repeatCount=\"indefinite\""
                    let v1864 : string = " " + v1858 + v1796 + ""
                    let v1865 : string = " " + v1859 + v1864 + ""
                    let v1866 : string = " " + v1860 + v1865 + ""
                    let v1867 : string = " " + v1861 + v1866 + ""
                    let v1868 : string = " " + v1862 + v1867 + ""
                    let v1869 : string = " " + v1863 + v1868 + ""
                    let v1870 : string = "vec![" + v1796 + "]"
                    let v1871 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1870 
                    let v1872 : string = "leptos::prelude::Fragment::new($0)"
                    let v1873 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1871 v1872 
                    let v1874 : string = "leptos::prelude::AnyView::from($0)"
                    let v1875 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1873 v1874 
                    let v1876 : string = "<" + v1851 + " " + v1869 + ">move || { v1875 }</" + v1851 + ">"
                    let v1877 : string = "leptos::prelude::view! { " + v1876 + " }"
                    let v1878 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1877 
                    let v1879 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1878 |> unbox
                    let v1880 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1881 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1879 v1880 
                    let v1882 : string = "attributeName=\"y\""
                    let v1883 : string = "attributeType=\"XML\""
                    let v1884 : string = "values=\"10; 5; 10\""
                    let v1885 : string = "begin=\"0s\""
                    let v1886 : string = "dur=\"0.6s\""
                    let v1887 : string = "repeatCount=\"indefinite\""
                    let v1888 : string = " " + v1882 + v1796 + ""
                    let v1889 : string = " " + v1883 + v1888 + ""
                    let v1890 : string = " " + v1884 + v1889 + ""
                    let v1891 : string = " " + v1885 + v1890 + ""
                    let v1892 : string = " " + v1886 + v1891 + ""
                    let v1893 : string = " " + v1887 + v1892 + ""
                    let v1894 : string = "vec![" + v1796 + "]"
                    let v1895 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1894 
                    let v1896 : string = "leptos::prelude::Fragment::new($0)"
                    let v1897 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1895 v1896 
                    let v1898 : string = "leptos::prelude::AnyView::from($0)"
                    let v1899 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1897 v1898 
                    let v1900 : string = "<" + v1851 + " " + v1893 + ">move || { v1899 }</" + v1851 + ">"
                    let v1901 : string = "leptos::prelude::view! { " + v1900 + " }"
                    let v1902 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1901 
                    let v1903 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1902 |> unbox
                    let v1904 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1905 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1903 v1904 
                    let v1906 : string = "v1905"
                    let v1907 : string = v1906 + v1796 
                    let v1908 : string = v1907 + v1796 
                    let v1909 : string = "v1881"
                    let v1910 : string = ", "
                    let v1911 : string = v1909 + v1910 
                    let v1912 : string = v1911 + v1908 
                    let v1913 : string = "v1857"
                    let v1914 : string = v1913 + v1910 
                    let v1915 : string = v1914 + v1912 
                    let v1916 : string = "vec![" + v1915 + "]"
                    let v1917 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1916 
                    let v1918 : string = "leptos::prelude::Fragment::new($0)"
                    let v1919 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1917 v1918 
                    let v1920 : string = "leptos::prelude::AnyView::from($0)"
                    let v1921 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1919 v1920 
                    let v1922 : string = "rect"
                    let v1923 : string = "<" + v1922 + " " + v1832 + ">move || { v1921 }</" + v1922 + ">"
                    let v1924 : string = "leptos::prelude::view! { " + v1923 + " }"
                    let v1925 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1924 
                    let v1926 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v1925 |> unbox
                    let v1927 : string = "x=\"8\""
                    let v1928 : string = "y=\"10\""
                    let v1929 : string = "width=\"4\""
                    let v1930 : string = "height=\"10\""
                    let v1931 : string = "fill=\"#333\""
                    let v1932 : string = "opacity=\"0.2\""
                    let v1933 : string = " " + v1927 + v1796 + ""
                    let v1934 : string = " " + v1928 + v1933 + ""
                    let v1935 : string = " " + v1929 + v1934 + ""
                    let v1936 : string = " " + v1930 + v1935 + ""
                    let v1937 : string = " " + v1931 + v1936 + ""
                    let v1938 : string = " " + v1932 + v1937 + ""
                    let v1939 : string = "attributeName=\"opacity\""
                    let v1940 : string = "attributeType=\"XML\""
                    let v1941 : string = "values=\"0.2; 1; .2\""
                    let v1942 : string = "begin=\"0.15s\""
                    let v1943 : string = "dur=\"0.6s\""
                    let v1944 : string = "repeatCount=\"indefinite\""
                    let v1945 : string = " " + v1939 + v1796 + ""
                    let v1946 : string = " " + v1940 + v1945 + ""
                    let v1947 : string = " " + v1941 + v1946 + ""
                    let v1948 : string = " " + v1942 + v1947 + ""
                    let v1949 : string = " " + v1943 + v1948 + ""
                    let v1950 : string = " " + v1944 + v1949 + ""
                    let v1951 : string = "vec![" + v1796 + "]"
                    let v1952 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1951 
                    let v1953 : string = "leptos::prelude::Fragment::new($0)"
                    let v1954 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1952 v1953 
                    let v1955 : string = "leptos::prelude::AnyView::from($0)"
                    let v1956 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1954 v1955 
                    let v1957 : string = "<" + v1851 + " " + v1950 + ">move || { v1956 }</" + v1851 + ">"
                    let v1958 : string = "leptos::prelude::view! { " + v1957 + " }"
                    let v1959 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1958 
                    let v1960 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1959 |> unbox
                    let v1961 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1962 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1960 v1961 
                    let v1963 : string = "attributeName=\"opacity\""
                    let v1964 : string = "attributeType=\"XML\""
                    let v1965 : string = "values=\"10; 20; 10\""
                    let v1966 : string = "begin=\"0.15s\""
                    let v1967 : string = "dur=\"0.6s\""
                    let v1968 : string = "repeatCount=\"indefinite\""
                    let v1969 : string = " " + v1963 + v1796 + ""
                    let v1970 : string = " " + v1964 + v1969 + ""
                    let v1971 : string = " " + v1965 + v1970 + ""
                    let v1972 : string = " " + v1966 + v1971 + ""
                    let v1973 : string = " " + v1967 + v1972 + ""
                    let v1974 : string = " " + v1968 + v1973 + ""
                    let v1975 : string = "vec![" + v1796 + "]"
                    let v1976 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1975 
                    let v1977 : string = "leptos::prelude::Fragment::new($0)"
                    let v1978 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1976 v1977 
                    let v1979 : string = "leptos::prelude::AnyView::from($0)"
                    let v1980 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1978 v1979 
                    let v1981 : string = "<" + v1851 + " " + v1974 + ">move || { v1980 }</" + v1851 + ">"
                    let v1982 : string = "leptos::prelude::view! { " + v1981 + " }"
                    let v1983 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1982 
                    let v1984 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1983 |> unbox
                    let v1985 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1986 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1984 v1985 
                    let v1987 : string = "attributeName=\"y\""
                    let v1988 : string = "attributeType=\"XML\""
                    let v1989 : string = "values=\"10; 5; 10\""
                    let v1990 : string = "begin=\"0.15s\""
                    let v1991 : string = "dur=\"0.6s\""
                    let v1992 : string = "repeatCount=\"indefinite\""
                    let v1993 : string = " " + v1987 + v1796 + ""
                    let v1994 : string = " " + v1988 + v1993 + ""
                    let v1995 : string = " " + v1989 + v1994 + ""
                    let v1996 : string = " " + v1990 + v1995 + ""
                    let v1997 : string = " " + v1991 + v1996 + ""
                    let v1998 : string = " " + v1992 + v1997 + ""
                    let v1999 : string = "vec![" + v1796 + "]"
                    let v2000 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1999 
                    let v2001 : string = "leptos::prelude::Fragment::new($0)"
                    let v2002 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2000 v2001 
                    let v2003 : string = "leptos::prelude::AnyView::from($0)"
                    let v2004 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2002 v2003 
                    let v2005 : string = "<" + v1851 + " " + v1998 + ">move || { v2004 }</" + v1851 + ">"
                    let v2006 : string = "leptos::prelude::view! { " + v2005 + " }"
                    let v2007 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2006 
                    let v2008 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v2007 |> unbox
                    let v2009 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2010 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2008 v2009 
                    let v2011 : string = "v2010"
                    let v2012 : string = v2011 + v1796 
                    let v2013 : string = v2012 + v1796 
                    let v2014 : string = "v1986"
                    let v2015 : string = v2014 + v1910 
                    let v2016 : string = v2015 + v2013 
                    let v2017 : string = "v1962"
                    let v2018 : string = v2017 + v1910 
                    let v2019 : string = v2018 + v2016 
                    let v2020 : string = "vec![" + v2019 + "]"
                    let v2021 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2020 
                    let v2022 : string = "leptos::prelude::Fragment::new($0)"
                    let v2023 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2021 v2022 
                    let v2024 : string = "leptos::prelude::AnyView::from($0)"
                    let v2025 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2023 v2024 
                    let v2026 : string = "<" + v1922 + " " + v1938 + ">move || { v2025 }</" + v1922 + ">"
                    let v2027 : string = "leptos::prelude::view! { " + v2026 + " }"
                    let v2028 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2027 
                    let v2029 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v2028 |> unbox
                    let v2030 : string = "x=\"16\""
                    let v2031 : string = "y=\"10\""
                    let v2032 : string = "width=\"4\""
                    let v2033 : string = "height=\"10\""
                    let v2034 : string = "fill=\"#333\""
                    let v2035 : string = "opacity=\"0.2\""
                    let v2036 : string = " " + v2030 + v1796 + ""
                    let v2037 : string = " " + v2031 + v2036 + ""
                    let v2038 : string = " " + v2032 + v2037 + ""
                    let v2039 : string = " " + v2033 + v2038 + ""
                    let v2040 : string = " " + v2034 + v2039 + ""
                    let v2041 : string = " " + v2035 + v2040 + ""
                    let v2042 : string = "attributeName=\"opacity\""
                    let v2043 : string = "attributeType=\"XML\""
                    let v2044 : string = "values=\"0.2; 1; .2\""
                    let v2045 : string = "begin=\"0.3s\""
                    let v2046 : string = "dur=\"0.6s\""
                    let v2047 : string = "repeatCount=\"indefinite\""
                    let v2048 : string = " " + v2042 + v1796 + ""
                    let v2049 : string = " " + v2043 + v2048 + ""
                    let v2050 : string = " " + v2044 + v2049 + ""
                    let v2051 : string = " " + v2045 + v2050 + ""
                    let v2052 : string = " " + v2046 + v2051 + ""
                    let v2053 : string = " " + v2047 + v2052 + ""
                    let v2054 : string = "vec![" + v1796 + "]"
                    let v2055 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2054 
                    let v2056 : string = "leptos::prelude::Fragment::new($0)"
                    let v2057 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2055 v2056 
                    let v2058 : string = "leptos::prelude::AnyView::from($0)"
                    let v2059 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2057 v2058 
                    let v2060 : string = "<" + v1851 + " " + v2053 + ">move || { v2059 }</" + v1851 + ">"
                    let v2061 : string = "leptos::prelude::view! { " + v2060 + " }"
                    let v2062 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2061 
                    let v2063 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v2062 |> unbox
                    let v2064 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2065 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2063 v2064 
                    let v2066 : string = "attributeName=\"height\""
                    let v2067 : string = "attributeType=\"XML\""
                    let v2068 : string = "values=\"10; 20; 10\""
                    let v2069 : string = "begin=\"0.3s\""
                    let v2070 : string = "dur=\"0.6s\""
                    let v2071 : string = "repeatCount=\"indefinite\""
                    let v2072 : string = " " + v2066 + v1796 + ""
                    let v2073 : string = " " + v2067 + v2072 + ""
                    let v2074 : string = " " + v2068 + v2073 + ""
                    let v2075 : string = " " + v2069 + v2074 + ""
                    let v2076 : string = " " + v2070 + v2075 + ""
                    let v2077 : string = " " + v2071 + v2076 + ""
                    let v2078 : string = "vec![" + v1796 + "]"
                    let v2079 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2078 
                    let v2080 : string = "leptos::prelude::Fragment::new($0)"
                    let v2081 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2079 v2080 
                    let v2082 : string = "leptos::prelude::AnyView::from($0)"
                    let v2083 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2081 v2082 
                    let v2084 : string = "<" + v1851 + " " + v2077 + ">move || { v2083 }</" + v1851 + ">"
                    let v2085 : string = "leptos::prelude::view! { " + v2084 + " }"
                    let v2086 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2085 
                    let v2087 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v2086 |> unbox
                    let v2088 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2089 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2087 v2088 
                    let v2090 : string = "attributeName=\"y\""
                    let v2091 : string = "attributeType=\"XML\""
                    let v2092 : string = "values=\"10; 5; 10\""
                    let v2093 : string = "begin=\"0.3s\""
                    let v2094 : string = "dur=\"0.6s\""
                    let v2095 : string = "repeatCount=\"indefinite\""
                    let v2096 : string = " " + v2090 + v1796 + ""
                    let v2097 : string = " " + v2091 + v2096 + ""
                    let v2098 : string = " " + v2092 + v2097 + ""
                    let v2099 : string = " " + v2093 + v2098 + ""
                    let v2100 : string = " " + v2094 + v2099 + ""
                    let v2101 : string = " " + v2095 + v2100 + ""
                    let v2102 : string = "vec![" + v1796 + "]"
                    let v2103 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2102 
                    let v2104 : string = "leptos::prelude::Fragment::new($0)"
                    let v2105 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2103 v2104 
                    let v2106 : string = "leptos::prelude::AnyView::from($0)"
                    let v2107 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2105 v2106 
                    let v2108 : string = "<" + v1851 + " " + v2101 + ">move || { v2107 }</" + v1851 + ">"
                    let v2109 : string = "leptos::prelude::view! { " + v2108 + " }"
                    let v2110 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2109 
                    let v2111 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v2110 |> unbox
                    let v2112 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2113 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2111 v2112 
                    let v2114 : string = "v2113"
                    let v2115 : string = v2114 + v1796 
                    let v2116 : string = v2115 + v1796 
                    let v2117 : string = "v2089"
                    let v2118 : string = v2117 + v1910 
                    let v2119 : string = v2118 + v2116 
                    let v2120 : string = "v2065"
                    let v2121 : string = v2120 + v1910 
                    let v2122 : string = v2121 + v2119 
                    let v2123 : string = "vec![" + v2122 + "]"
                    let v2124 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2123 
                    let v2125 : string = "leptos::prelude::Fragment::new($0)"
                    let v2126 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2124 v2125 
                    let v2127 : string = "leptos::prelude::AnyView::from($0)"
                    let v2128 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2126 v2127 
                    let v2129 : string = "<" + v1922 + " " + v2041 + ">move || { v2128 }</" + v1922 + ">"
                    let v2130 : string = "leptos::prelude::view! { " + v2129 + " }"
                    let v2131 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2130 
                    let v2132 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v2131 |> unbox
                    let v2133 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2134 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2132 v2133 
                    let v2135 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2136 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2029 v2135 
                    let v2137 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2138 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1926 v2137 
                    let v2139 : string = "v2134"
                    let v2140 : string = v2139 + v1796 
                    let v2141 : string = v2140 + v1796 
                    let v2142 : string = "v2136"
                    let v2143 : string = v2142 + v1910 
                    let v2144 : string = v2143 + v2141 
                    let v2145 : string = "v2138"
                    let v2146 : string = v2145 + v1910 
                    let v2147 : string = v2146 + v2144 
                    let v2148 : string = "vec![" + v2147 + "]"
                    let v2149 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2148 
                    let v2150 : string = "leptos::prelude::Fragment::new($0)"
                    let v2151 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2149 v2150 
                    let v2152 : string = "leptos::prelude::AnyView::from($0)"
                    let v2153 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2151 v2152 
                    let v2154 : string = "svg"
                    let v2155 : string = "<" + v2154 + " " + v1820 + ">move || { v2153 }</" + v2154 + ">"
                    let v2156 : string = "leptos::prelude::view! { " + v2155 + " }"
                    let v2157 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2156 
                    let v2158 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v2157 |> unbox
                    let v2159 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2160 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2158 v2159 
                    let v2161 : string = "Loading..."
                    (* run_target_args'
                    let v2166 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v2167 : string = "&*$0"
                    let v2168 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2161 v2167 
                    let _run_target_args'_v2166 = v2168 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v2169 : string = "&*$0"
                    let v2170 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2161 v2169 
                    let _run_target_args'_v2166 = v2170 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v2171 : string = "&*$0"
                    let v2172 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2161 v2171 
                    let _run_target_args'_v2166 = v2172 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v2174 : Ref<Str> = v2161 |> unbox<Ref<Str>>
                    let _run_target_args'_v2166 = v2174 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v2178 : Ref<Str> = v2161 |> unbox<Ref<Str>>
                    let _run_target_args'_v2166 = v2178 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v2182 : Ref<Str> = v2161 |> unbox<Ref<Str>>
                    let _run_target_args'_v2166 = v2182 
                    #endif
#else
                    let v2186 : Ref<Str> = v2161 |> unbox<Ref<Str>>
                    let _run_target_args'_v2166 = v2186 
                    #endif
                    let v2189 : Ref<Str> = _run_target_args'_v2166 
                    (* run_target_args'
                    let v2199 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v2200 : string = "String::from($0)"
                    let v2201 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2189 v2200 
                    let _run_target_args'_v2199 = v2201 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v2202 : string = "String::from($0)"
                    let v2203 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2189 v2202 
                    let _run_target_args'_v2199 = v2203 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v2204 : string = "String::from($0)"
                    let v2205 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2189 v2204 
                    let _run_target_args'_v2199 = v2205 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v2207 : std_string_String = v2189 |> unbox<std_string_String>
                    let _run_target_args'_v2199 = v2207 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v2211 : std_string_String = v2189 |> unbox<std_string_String>
                    let _run_target_args'_v2199 = v2211 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v2215 : std_string_String = v2189 |> unbox<std_string_String>
                    let _run_target_args'_v2199 = v2215 
                    #endif
#else
                    let v2219 : std_string_String = v2189 |> unbox<std_string_String>
                    let _run_target_args'_v2199 = v2219 
                    #endif
                    let v2222 : std_string_String = _run_target_args'_v2199 
                    let v2228 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v2229 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2222 v2228 
                    let v2230 : string = "v2229"
                    let v2231 : string = v2230 + v1796 
                    let v2232 : string = v2231 + v1796 
                    let v2233 : string = "v2160"
                    let v2234 : string = v2233 + v1910 
                    let v2235 : string = v2234 + v2232 
                    let v2236 : string = "vec![" + v2235 + "]"
                    let v2237 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2236 
                    let v2238 : string = "leptos::prelude::Fragment::new($0)"
                    let v2239 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2237 v2238 
                    let v2240 : string = "leptos::prelude::AnyView::from($0)"
                    let v2241 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2239 v2240 
                    let v2242 : string = "div"
                    let v2243 : string = "<" + v2242 + " " + v1799 + ">move || { v2241 }</" + v2242 + ">"
                    let v2244 : string = "leptos::prelude::view! { " + v2243 + " }"
                    let v2245 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2244 
                    let v2246 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v2245 |> unbox
                    let v2247 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2248 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2246 v2247 
                    let v2249 : string = "v2248"
                    let v2250 : string = v2249 + v1796 
                    let v2251 : string = v2250 + v1796 
                    let v2252 : string = "vec![" + v2251 + "]"
                    let v2253 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2252 
                    let v2254 : string = "leptos::prelude::Fragment::new($0)"
                    let v2255 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2253 v2254 
                    let v2256 : string = "leptos::prelude::AnyView::from($0)"
                    let v2257 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2255 v2256 
                    let v2258 : string = "<" + v2242 + " " + v1797 + ">move || { v2257 }</" + v2242 + ">"
                    let v2259 : string = "leptos::prelude::view! { " + v2258 + " }"
                    let v2260 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2259 
                    let v2261 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v2260 |> unbox
                    let v2262 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2263 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2261 v2262 
                    v2263
    let v2447 : string = "v2446"
    let v2448 : string = ""
    let v2449 : string = v2447 + v2448 
    let v2450 : string = v2449 + v2448 
    let v2451 : string = "vec![" + v2450 + "]"
    let v2452 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2451 
    let v2453 : string = "leptos::prelude::Fragment::new($0)"
    let v2454 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2452 v2453 
    v2454
and closure194 (v0 : int32) (v1 : (bool * std_string_String)) : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) =
    let v2 : string = $"leptos::prelude::signal($0)"
    let struct (v3 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v4 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v6 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = v0, struct (v3, v4) 
    v6
and closure193 () (v0 : int32) : ((bool * std_string_String) -> (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))) =
    closure194(v0)
and method207 () : (int32 -> ((bool * std_string_String) -> (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)))) =
    closure193()
and method208 (v0 : Vec<(bool * std_string_String)>) : Vec<(bool * std_string_String)> =
    v0
and closure192 (v0 : Heap2) () : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<Heap0> = v5.l3
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : Heap0 = Fable.Core.RustInterop.emitRustExpr v6 v7 
    let v9 : Vec<(bool * std_string_String)> = v8.l0
    let v10 : (int32 -> ((bool * std_string_String) -> (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)))) = method207()
    let v11 : Vec<(bool * std_string_String)> = method208(v9)
    let v12 : string = "v11.iter().enumerate().map(|(i, x)| v10(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v13 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr () v12 
    v13
and method209 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)>) : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)> =
    v0
and closure196 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)>) (v1 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))) : struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>) =
    let v2 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)> = method209(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : int32, v6 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v7 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7)
and method210 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>), struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>) : Func0<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>), struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> =
    v0
and closure197 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>), struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>) struct (v1 : int32, v2 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v3 : leptos_prelude_WriteSignal<(bool * std_string_String)>) : struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>) =
    let v4 : Func0<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>), struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> = method210(v0)
    let func1_move_x = struct (v1, v2, v3) //
    let v5 : _ = func1_move_x
    let v6 : string = "(move |x| v4(x))($0)"
    let struct (v7 : int32, v8 : int32, v9 : leptos_prelude_ReadSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr v5 v6 
    struct (v7, v8, v9)
and closure195 (v0 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>>, v1 : leptos_prelude_ReadSignal<int32>) () : Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> =
    let v2 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v3 : int32 = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v5 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr v0 v4 
    let v6 : unit = ()
    let v7 : string = $"true; let _func1_from_v6 = Func1::from(move |value| {{ //"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr () v7 
    let v9 : string = $"value"
    let v10 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = Fable.Core.RustInterop.emitRustExpr () v9 
    let (a, b) = v10 
    let v14 : int32 = a
    let struct (v15 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v16 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = b
    let func1_from_result = struct (v14, v15, v16) //
    let v23 : _ = func1_from_result
    let v24 : string = $"true; $0 /*"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr v23 v24 
    let v26 : string = $"*/ }}); //"
    let v27 : bool = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : string = $"_func1_from_v6"
    let v29 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)> = Fable.Core.RustInterop.emitRustExpr () v28 
    let v30 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v31 : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) -> struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = closure196(v29)
    let v32 : Vec<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)> = Fable.Core.RustInterop.emitRustExpr struct (v5, v31) v30 
    let v33 : unit = ()
    let v34 : string = $"true; let _func1_from_v33 = Func1::from(move |value| {{ //"
    let v35 : bool = Fable.Core.RustInterop.emitRustExpr () v34 
    let v36 : string = $"value"
    let struct (v37 : int32, v38 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v39 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr () v36 
    let func1_from_result = struct (v3, v37, v38) //
    let v40 : _ = func1_from_result
    let v41 : string = $"true; $0 /*"
    let v42 : bool = Fable.Core.RustInterop.emitRustExpr v40 v41 
    let v43 : string = $"*/ }}); //"
    let v44 : bool = Fable.Core.RustInterop.emitRustExpr () v43 
    let v45 : string = $"_func1_from_v33"
    let v46 : Func0<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>), struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> = Fable.Core.RustInterop.emitRustExpr () v45 
    let v47 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v48 : (struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>) -> struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)) = closure197(v46)
    let v49 : Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> = Fable.Core.RustInterop.emitRustExpr struct (v32, v48) v47 
    v49
and closure198 (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>>) () : int32 =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v4 : (struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>) []) = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : int32 = v4.Length
    v5
and method211 (v0 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))) : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) =
    v0
and method212 (v0 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>) : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> =
    v0
and method213 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)>) : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)> =
    v0
and closure200 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)>) (v1 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))) : (bool * std_string_String) =
    let v2 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)> = method213(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure199 (v0 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>>) (v1 : Heap0) : Heap0 =
    let v2 : Vec<(bool * std_string_String)> = v1.l0
    let v3 : std_string_String option = v1.l1
    let v4 : int32 = v1.l2
    let v5 : int32 = v1.l3
    let v6 : US1 = v1.l4
    let v7 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v8 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr v0 v7 
    let v9 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v10 : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) []) = Fable.Core.RustInterop.emitRustExpr v8 v9 
    let v11 : int32 = v10.Length
    let v12 : string = ""
    (* run_target_args'
    let v17 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v18 : string = "&*$0"
    let v19 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v12 v18 
    let _run_target_args'_v17 = v19 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v20 : string = "&*$0"
    let v21 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v12 v20 
    let _run_target_args'_v17 = v21 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v22 : string = "&*$0"
    let v23 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v12 v22 
    let _run_target_args'_v17 = v23 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v25 : Ref<Str> = v12 |> unbox<Ref<Str>>
    let _run_target_args'_v17 = v25 
    #endif
#if FABLE_COMPILER_PYTHON
    let v29 : Ref<Str> = v12 |> unbox<Ref<Str>>
    let _run_target_args'_v17 = v29 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v33 : Ref<Str> = v12 |> unbox<Ref<Str>>
    let _run_target_args'_v17 = v33 
    #endif
#else
    let v37 : Ref<Str> = v12 |> unbox<Ref<Str>>
    let _run_target_args'_v17 = v37 
    #endif
    let v40 : Ref<Str> = _run_target_args'_v17 
    (* run_target_args'
    let v50 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v51 : string = "String::from($0)"
    let v52 : std_string_String = Fable.Core.RustInterop.emitRustExpr v40 v51 
    let _run_target_args'_v50 = v52 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v53 : string = "String::from($0)"
    let v54 : std_string_String = Fable.Core.RustInterop.emitRustExpr v40 v53 
    let _run_target_args'_v50 = v54 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v40 v55 
    let _run_target_args'_v50 = v56 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v58 : std_string_String = v40 |> unbox<std_string_String>
    let _run_target_args'_v50 = v58 
    #endif
#if FABLE_COMPILER_PYTHON
    let v62 : std_string_String = v40 |> unbox<std_string_String>
    let _run_target_args'_v50 = v62 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v40 |> unbox<std_string_String>
    let _run_target_args'_v50 = v66 
    #endif
#else
    let v70 : std_string_String = v40 |> unbox<std_string_String>
    let _run_target_args'_v50 = v70 
    #endif
    let v73 : std_string_String = _run_target_args'_v50 
    let v80 : (bool * std_string_String) = false, v73 
    let v83 : string = $"leptos::prelude::signal($0)"
    let struct (v84 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v85 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr v80 v83 
    let v87 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = v11, struct (v84, v85) 
    let v90 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = method211(v87)
    let v91 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = method212(v8)
    let v92 : string = "true; let mut v91 = v91"
    let v93 : bool = Fable.Core.RustInterop.emitRustExpr () v92 
    let v94 : string = "true; v91.push(v90)"
    let v95 : bool = Fable.Core.RustInterop.emitRustExpr () v94 
    let v96 : string = "v91"
    let v97 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr () v96 
    let v98 : unit = ()
    let v99 : string = $"true; let _func1_from_v98 = Func1::from(move |value| {{ //"
    let v100 : bool = Fable.Core.RustInterop.emitRustExpr () v99 
    let v101 : string = $"value"
    let v102 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = Fable.Core.RustInterop.emitRustExpr () v101 
    let (a, b) = v102 
    let v106 : int32 = a
    let struct (v107 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v108 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = b
    let v115 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v116 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr v107 v115 
    let func1_from_result = v116 //
    let v117 : _ = func1_from_result
    let v118 : string = $"true; $0 /*"
    let v119 : bool = Fable.Core.RustInterop.emitRustExpr v117 v118 
    let v120 : string = $"*/ }}); //"
    let v121 : bool = Fable.Core.RustInterop.emitRustExpr () v120 
    let v122 : string = $"_func1_from_v98"
    let v123 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v122 
    let v124 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v125 : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) -> (bool * std_string_String)) = closure200(v123)
    let v126 : Vec<(bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v97, v125) v124 
    {l0 = v126; l1 = v3; l2 = v4; l3 = v5; l4 = v6} : Heap0
and closure201 () (v0 : int32) : int32 =
    let v1 : int32 = 1 + v0
    v1
and closure202 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and closure203 () () : std_string_String =
    let v0 : string = " bg-gray-300 hover:bg-gray-200"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    v61
and closure204 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure205 (v0 : leptos_prelude_AnyView_) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = "[margin-right:40px]"
    let v2 : string = "r#\"" + v1 + "\"#"
    let v3 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v2 
    v3
and closure206 () () : string =
    let v0 : string = "Accounts"
    v0
and method214 (v0 : leptos_prelude_AnyView_) : (unit -> string) =
    closure206()
and method216 (v0 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)>) : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)> =
    v0
and closure208 (v0 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)>) struct (v1 : int32, v2 : int32, v3 : leptos_prelude_ReadSignal<(bool * std_string_String)>) : (int32 * int32) =
    let v4 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)> = method216(v0)
    let func1_move_x = struct (v1, v2, v3) //
    let v5 : _ = func1_move_x
    let v6 : string = "(move |x| v4(x))($0)"
    let v7 : (int32 * int32) = Fable.Core.RustInterop.emitRustExpr v5 v6 
    v7
and method215 (v0 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)>) : (struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>) -> (int32 * int32)) =
    closure208(v0)
and method217 (v0 : int32) : int32 =
    v0
and method219 (v0 : bool) : bool =
    let v1 : bool = v0 = false
    v1
and closure211 (v0 : int32, v1 : int32) (v2 : (bool * std_string_String)) : (bool * std_string_String) =
    let v3 : bool = v1 = v0
    let v4 : bool = method219(v3)
    if v4 then
        v2
    else
        let (a, b) = v2 
        let v7 : bool = a
        let v8 : std_string_String = b
        let v13 : bool = v7 = false
        let v15 : (bool * std_string_String) = v13, v8 
        v15
and closure210 (v0 : int32) (v1 : int32) : ((bool * std_string_String) -> (bool * std_string_String)) =
    closure211(v0, v1)
and method218 (v0 : int32) : (int32 -> ((bool * std_string_String) -> (bool * std_string_String))) =
    closure210(v0)
and closure209 (v0 : Heap2, v1 : int32) (v2 : leptos_ev_Event) : unit =
    let v3 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v4 : string = "Box::pin($0)"
    let v5 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v7 : Heap1 = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : leptos_prelude_ArcRwSignal<Heap0> = v7.l3
    let v9 : string = "Box::pin($0)"
    let v10 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v8 v9 
    let v11 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v12 : Heap0 = Fable.Core.RustInterop.emitRustExpr v10 v11 
    let v13 : Vec<(bool * std_string_String)> = v12.l0
    let v14 : std_string_String option = v12.l1
    let v15 : int32 = v12.l2
    let v16 : int32 = v12.l3
    let v17 : US1 = v12.l4
    let v18 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v19 : string = "Box::pin($0)"
    let v20 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v18 v19 
    let v21 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v22 : Heap1 = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : leptos_prelude_ArcRwSignal<Heap0> = v22.l3
    let v24 : (int32 -> ((bool * std_string_String) -> (bool * std_string_String))) = method218(v1)
    let v25 : Vec<(bool * std_string_String)> = method208(v13)
    let v26 : string = "v25.iter().enumerate().map(|(i, x)| v24(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v27 : Vec<(bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : Heap0 = {l0 = v27; l1 = v14; l2 = v15; l3 = v16; l4 = v17} : Heap0
    let v29 : string = $"true; leptos::prelude::ArcRwSignal::set(&$0, $1); //"
    let v30 : bool = Fable.Core.RustInterop.emitRustExpr struct (v23, v28) v29 
    ()
and closure212 (v0 : leptos_prelude_ReadSignal<(bool * std_string_String)>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let (a, b) = v2 
    let v5 : bool = a
    let v6 : std_string_String = b
    v5
and method220 (v0 : leptos_prelude_ReadSignal<(bool * std_string_String)>) : (unit -> bool) =
    closure212(v0)
and closure213 (v0 : int32) () : std_string_String =
    let v1 : string = "account-" + string v0 + ""
    (* run_target_args'
    let v6 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v7 : string = "&*$0"
    let v8 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v7 
    let _run_target_args'_v6 = v8 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v9 : string = "&*$0"
    let v10 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v9 
    let _run_target_args'_v6 = v10 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v11 : string = "&*$0"
    let v12 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v11 
    let _run_target_args'_v6 = v12 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v14 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v14 
    #endif
#if FABLE_COMPILER_PYTHON
    let v18 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v18 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v22 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v22 
    #endif
#else
    let v26 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v26 
    #endif
    let v29 : Ref<Str> = _run_target_args'_v6 
    (* run_target_args'
    let v39 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v40 : string = "String::from($0)"
    let v41 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v40 
    let _run_target_args'_v39 = v41 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v42 
    let _run_target_args'_v39 = v43 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v44 
    let _run_target_args'_v39 = v45 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v47 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v47 
    #endif
#if FABLE_COMPILER_PYTHON
    let v51 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v51 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v55 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v55 
    #endif
#else
    let v59 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v59 
    #endif
    let v62 : std_string_String = _run_target_args'_v39 
    v62
and method221 (v0 : int32) : (unit -> std_string_String) =
    closure213(v0)
and method223 (v0 : bool) : bool =
    let v1 : bool = v0 = false
    v1
and closure215 (v0 : int32, v1 : std_string_String, v2 : int32) (v3 : (bool * std_string_String)) : (bool * std_string_String) =
    let v4 : bool = v2 = v0
    let v5 : bool = method223(v4)
    if v5 then
        v3
    else
        let (a, b) = v3 
        let v8 : bool = a
        let v9 : std_string_String = b
        let v15 : (bool * std_string_String) = v8, v1 
        v15
and closure214 (v0 : int32, v1 : std_string_String) (v2 : int32) : ((bool * std_string_String) -> (bool * std_string_String)) =
    closure215(v0, v1, v2)
and method222 (v0 : int32, v1 : std_string_String) : (int32 -> ((bool * std_string_String) -> (bool * std_string_String))) =
    closure214(v0, v1)
and closure216 () () : string =
    let v0 : string = "flex-1"
    v0
and method224 (v0 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>) : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> =
    v0
and closure219 () (v0 : bool) : bool =
    let v1 : bool = v0 = false
    v1
and method226 () : (bool -> bool) =
    closure219()
and closure218 (v0 : int32) (v1 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))) : bool =
    let (a, b) = v1 
    let v5 : int32 = a
    let struct (v6 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v7 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = b
    let v14 : bool = v5 = v0
    let v15 : (bool -> bool) = method226()
    v15 v14
and method225 (v0 : int32) : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) -> bool) =
    closure218(v0)
and closure217 (v0 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>>, v1 : int32) (v2 : Heap0) : Heap0 =
    let v3 : Vec<(bool * std_string_String)> = v2.l0
    let v4 : std_string_String option = v2.l1
    let v5 : int32 = v2.l2
    let v6 : int32 = v2.l3
    let v7 : US1 = v2.l4
    let v8 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v9 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let v10 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = method224(v9)
    let v11 : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) -> bool) = method225(v1)
    let v12 : string = "true; let mut v10 = v10"
    let v13 : bool = Fable.Core.RustInterop.emitRustExpr () v12 
    let v14 : string = "true; v10.retain(|x| v11(x.clone()))"
    let v15 : bool = Fable.Core.RustInterop.emitRustExpr () v14 
    let v16 : string = "v10"
    let v17 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr () v16 
    let v18 : unit = ()
    let v19 : string = $"true; let _func1_from_v18 = Func1::from(move |value| {{ //"
    let v20 : bool = Fable.Core.RustInterop.emitRustExpr () v19 
    let v21 : string = $"value"
    let v22 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = Fable.Core.RustInterop.emitRustExpr () v21 
    let (a, b) = v22 
    let v26 : int32 = a
    let struct (v27 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v28 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = b
    let v35 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v36 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr v27 v35 
    let func1_from_result = v36 //
    let v37 : _ = func1_from_result
    let v38 : string = $"true; $0 /*"
    let v39 : bool = Fable.Core.RustInterop.emitRustExpr v37 v38 
    let v40 : string = $"*/ }}); //"
    let v41 : bool = Fable.Core.RustInterop.emitRustExpr () v40 
    let v42 : string = $"_func1_from_v18"
    let v43 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v42 
    let v44 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v45 : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) -> (bool * std_string_String)) = closure200(v43)
    let v46 : Vec<(bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v17, v45) v44 
    {l0 = v46; l1 = v4; l2 = v5; l3 = v6; l4 = v7} : Heap0
and closure220 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and closure221 () () : std_string_String =
    let v0 : string = " pr-[7px] pl-[5px]"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    v61
and method227 (v0 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), leptos_prelude_AnyView_>) : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), leptos_prelude_AnyView_> =
    v0
and closure222 (v0 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), leptos_prelude_AnyView_>) struct (v1 : int32, v2 : int32, v3 : leptos_prelude_ReadSignal<(bool * std_string_String)>) : leptos_prelude_AnyView_ =
    let v4 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), leptos_prelude_AnyView_> = method227(v0)
    let func1_move_x = struct (v1, v2, v3) //
    let v5 : _ = func1_move_x
    let v6 : string = "(move |x| v4(x))($0)"
    let v7 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5 v6 
    v7
and closure207 (v0 : Heap2, v1 : leptos_prelude_ArcMemo<Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>>, v2 : leptos_prelude_ArcMemo<int32>, v3 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>>, v4 : leptos_prelude_WriteSignal<int32>) () : leptos_dom_Fragment =
    let v5 : string = "class=\"flex flex-1 flex-col p-[8px] gap-[8px]\""
    let v6 : string = ""
    let v7 : string = " " + v5 + v6 + ""
    let v8 : string = "$0"
    let v9 : leptos_prelude_ArcMemo<Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>> = Fable.Core.RustInterop.emitRustExpr v1 v8 
    let v10 : unit = ()
    let v11 : string = $"true; let _func1_from_v10 = Func1::from(move |value| {{ //"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr () v11 
    let v13 : string = $"value"
    let struct (v14 : int32, v15 : int32, v16 : leptos_prelude_ReadSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr () v13 
    let v18 : (int32 * int32) = v14, v15 
    let func1_from_result = v18 //
    let v21 : _ = func1_from_result
    let v22 : string = $"true; $0 /*"
    let v23 : bool = Fable.Core.RustInterop.emitRustExpr v21 v22 
    let v24 : string = $"*/ }}); //"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr () v24 
    let v26 : string = $"_func1_from_v10"
    let v27 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)> = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : (struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>) -> (int32 * int32)) = method215(v27)
    let v29 : unit = ()
    let v30 : string = $"true; let _func1_from_v29 = Func1::from(move |value| {{ //"
    let v31 : bool = Fable.Core.RustInterop.emitRustExpr () v30 
    let v32 : string = $"value"
    let struct (v33 : int32, v34 : int32, v35 : leptos_prelude_ReadSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr () v32 
    let v36 : string = "class=\"flex gap-[8px] [align-items:center]\""
    let v37 : string = " " + v36 + v6 + ""
    let v38 : int32 = method217(v34)
    let v39 : unit = ()
    let v40 : string = $"true; let _func0_from_v39 = Func0::from(move || {{ //"
    let v41 : bool = Fable.Core.RustInterop.emitRustExpr () v40 
    let v42 : string = "account-" + string v38 + ""
    (* run_target_args'
    let v47 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v48 : string = "&*$0"
    let v49 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v42 v48 
    let _run_target_args'_v47 = v49 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v50 : string = "&*$0"
    let v51 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v42 v50 
    let _run_target_args'_v47 = v51 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v52 : string = "&*$0"
    let v53 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v42 v52 
    let _run_target_args'_v47 = v53 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v55 : Ref<Str> = v42 |> unbox<Ref<Str>>
    let _run_target_args'_v47 = v55 
    #endif
#if FABLE_COMPILER_PYTHON
    let v59 : Ref<Str> = v42 |> unbox<Ref<Str>>
    let _run_target_args'_v47 = v59 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v63 : Ref<Str> = v42 |> unbox<Ref<Str>>
    let _run_target_args'_v47 = v63 
    #endif
#else
    let v67 : Ref<Str> = v42 |> unbox<Ref<Str>>
    let _run_target_args'_v47 = v67 
    #endif
    let v70 : Ref<Str> = _run_target_args'_v47 
    (* run_target_args'
    let v80 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v81 : string = "String::from($0)"
    let v82 : std_string_String = Fable.Core.RustInterop.emitRustExpr v70 v81 
    let _run_target_args'_v80 = v82 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v83 : string = "String::from($0)"
    let v84 : std_string_String = Fable.Core.RustInterop.emitRustExpr v70 v83 
    let _run_target_args'_v80 = v84 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v85 : string = "String::from($0)"
    let v86 : std_string_String = Fable.Core.RustInterop.emitRustExpr v70 v85 
    let _run_target_args'_v80 = v86 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v88 : std_string_String = v70 |> unbox<std_string_String>
    let _run_target_args'_v80 = v88 
    #endif
#if FABLE_COMPILER_PYTHON
    let v92 : std_string_String = v70 |> unbox<std_string_String>
    let _run_target_args'_v80 = v92 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v96 : std_string_String = v70 |> unbox<std_string_String>
    let _run_target_args'_v80 = v96 
    #endif
#else
    let v100 : std_string_String = v70 |> unbox<std_string_String>
    let _run_target_args'_v80 = v100 
    #endif
    let v103 : std_string_String = _run_target_args'_v80 
    let v109 : string = $"true; $0 /*"
    let v110 : bool = Fable.Core.RustInterop.emitRustExpr v103 v109 
    let v111 : string = $"*/ }}); //"
    let v112 : bool = Fable.Core.RustInterop.emitRustExpr () v111 
    let v113 : string = $"_func0_from_v39"
    let v114 : Func0<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v113 
    let v115 : string = "block"
    let v116 : string = "relative"
    let v117 : string = "h-8"
    let v118 : string = "w-14"
    let v119 : string = "cursor-pointer"
    let v120 : string = "[-webkit-tap-highlight-color:_transparent]"
    let v121 : string list = []
    let v123 : string list = v120 :: v121 
    let v127 : string list = v119 :: v123 
    let v131 : string list = v118 :: v127 
    let v135 : string list = v117 :: v131 
    let v139 : string list = v116 :: v135 
    let v143 : string list = v115 :: v139 
    let v150 : unit = ()
    let _let'_v150 =
        seq {
            yield! v143 
            (* indent
            ()
        indent *)
        }
        (* indent
        ()
    indent *)
    let v153 : string seq = _let'_v150 
    let v161 : (string -> (string seq -> string)) = String.concat
    let v162 : string = " "
    let v163 : (string seq -> string) = v161 v162
    let v164 : string = v163 v153
    (* run_target_args'
    let v171 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v172 : string = "&*$0"
    let v173 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v164 v172 
    let _run_target_args'_v171 = v173 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v174 : string = "&*$0"
    let v175 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v164 v174 
    let _run_target_args'_v171 = v175 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v176 : string = "&*$0"
    let v177 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v164 v176 
    let _run_target_args'_v171 = v177 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v179 : Ref<Str> = v164 |> unbox<Ref<Str>>
    let _run_target_args'_v171 = v179 
    #endif
#if FABLE_COMPILER_PYTHON
    let v183 : Ref<Str> = v164 |> unbox<Ref<Str>>
    let _run_target_args'_v171 = v183 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v187 : Ref<Str> = v164 |> unbox<Ref<Str>>
    let _run_target_args'_v171 = v187 
    #endif
#else
    let v191 : Ref<Str> = v164 |> unbox<Ref<Str>>
    let _run_target_args'_v171 = v191 
    #endif
    let v194 : Ref<Str> = _run_target_args'_v171 
    (* run_target_args'
    let v204 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v205 : string = "String::from($0)"
    let v206 : std_string_String = Fable.Core.RustInterop.emitRustExpr v194 v205 
    let _run_target_args'_v204 = v206 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v207 : string = "String::from($0)"
    let v208 : std_string_String = Fable.Core.RustInterop.emitRustExpr v194 v207 
    let _run_target_args'_v204 = v208 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v209 : string = "String::from($0)"
    let v210 : std_string_String = Fable.Core.RustInterop.emitRustExpr v194 v209 
    let _run_target_args'_v204 = v210 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v212 : std_string_String = v194 |> unbox<std_string_String>
    let _run_target_args'_v204 = v212 
    #endif
#if FABLE_COMPILER_PYTHON
    let v216 : std_string_String = v194 |> unbox<std_string_String>
    let _run_target_args'_v204 = v216 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v220 : std_string_String = v194 |> unbox<std_string_String>
    let _run_target_args'_v204 = v220 
    #endif
#else
    let v224 : std_string_String = v194 |> unbox<std_string_String>
    let _run_target_args'_v204 = v224 
    #endif
    let v227 : std_string_String = _run_target_args'_v204 
    let v233 : string = "$0"
    let v234 : std_string_String = Fable.Core.RustInterop.emitRustExpr v227 v233 
    let v235 : string = "for=move || v114()"
    let v236 : string = "class=v234"
    let v237 : string = " " + v235 + v6 + ""
    let v238 : string = " " + v236 + v237 + ""
    let v239 : (leptos_ev_Event -> unit) = closure209(v0, v38)
    let v240 : string = "true; let v239 = $0; //"
    let v241 : bool = Fable.Core.RustInterop.emitRustExpr v239 v240 
    let v242 : (unit -> bool) = method220(v35)
    let v243 : (unit -> std_string_String) = method221(v38)
    let v244 : string = "class=\"peer sr-only [&:checked_+_span_svg[data-checked-icon]]:block [&:checked_+_span_svg[data-unchecked-icon]]:hidden\""
    let v245 : string = "type=\"checkbox\""
    let v246 : string = "id=move || v243()"
    let v247 : string = "on:change=move |event| v239(event)"
    let v248 : string = "prop:checked=move || v242()"
    let v249 : string = " " + v244 + v6 + ""
    let v250 : string = " " + v245 + v249 + ""
    let v251 : string = " " + v246 + v250 + ""
    let v252 : string = " " + v247 + v251 + ""
    let v253 : string = " " + v248 + v252 + ""
    let v254 : string = "input"
    let v255 : string = "<" + v254 + " " + v253 + " />"
    let v256 : string = "leptos::prelude::view! { " + v255 + " }"
    let v257 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v256 
    let v258 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v257 |> unbox
    let v259 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v260 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v258 v259 
    let v261 : string = "class=\"absolute inset-y-0 start-0 z-10 m-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-white dark:bg-gray-400 peer-checked:bg-white text-gray-200 transition-all peer-checked:start-6 peer-checked:text-gray-400\""
    let v262 : string = " " + v261 + v6 + ""
    let v263 : string = "data-unchecked-icon"
    let v264 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v265 : string = "class=\"h-4 w-4\""
    let v266 : string = "viewBox=\"0 0 20 20\""
    let v267 : string = "fill=\"currentColor\""
    let v268 : string = " " + v263 + v6 + ""
    let v269 : string = " " + v264 + v268 + ""
    let v270 : string = " " + v265 + v269 + ""
    let v271 : string = " " + v266 + v270 + ""
    let v272 : string = " " + v267 + v271 + ""
    let v273 : string = "fill-rule=\"evenodd\""
    let v274 : string = "d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\""
    let v275 : string = "clip-rule=\"evenodd\""
    let v276 : string = " " + v273 + v6 + ""
    let v277 : string = " " + v274 + v276 + ""
    let v278 : string = " " + v275 + v277 + ""
    let v279 : string = "vec![" + v6 + "]"
    let v280 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v279 
    let v281 : string = "leptos::prelude::Fragment::new($0)"
    let v282 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v280 v281 
    let v283 : string = "leptos::prelude::AnyView::from($0)"
    let v284 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v282 v283 
    let v285 : string = "path"
    let v286 : string = "<" + v285 + " " + v278 + ">move || { v284 }</" + v285 + ">"
    let v287 : string = "leptos::prelude::view! { " + v286 + " }"
    let v288 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v287 
    let v289 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v288 |> unbox
    let v290 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v291 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v289 v290 
    let v292 : string = "v291"
    let v293 : string = v292 + v6 
    let v294 : string = v293 + v6 
    let v295 : string = "vec![" + v294 + "]"
    let v296 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v295 
    let v297 : string = "leptos::prelude::Fragment::new($0)"
    let v298 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v296 v297 
    let v299 : string = "leptos::prelude::AnyView::from($0)"
    let v300 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v298 v299 
    let v301 : string = "svg"
    let v302 : string = "<" + v301 + " " + v272 + ">move || { v300 }</" + v301 + ">"
    let v303 : string = "leptos::prelude::view! { " + v302 + " }"
    let v304 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v303 
    let v305 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v304 |> unbox
    let v306 : string = "data-checked-icon"
    let v307 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v308 : string = "class=\"hidden h-4 w-4\""
    let v309 : string = "viewBox=\"0 0 20 20\""
    let v310 : string = "fill=\"currentColor\""
    let v311 : string = " " + v306 + v6 + ""
    let v312 : string = " " + v307 + v311 + ""
    let v313 : string = " " + v308 + v312 + ""
    let v314 : string = " " + v309 + v313 + ""
    let v315 : string = " " + v310 + v314 + ""
    let v316 : string = "fill-rule=\"evenodd\""
    let v317 : string = "d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\""
    let v318 : string = "clip-rule=\"evenodd\""
    let v319 : string = " " + v316 + v6 + ""
    let v320 : string = " " + v317 + v319 + ""
    let v321 : string = " " + v318 + v320 + ""
    let v322 : string = "vec![" + v6 + "]"
    let v323 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v322 
    let v324 : string = "leptos::prelude::Fragment::new($0)"
    let v325 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v323 v324 
    let v326 : string = "leptos::prelude::AnyView::from($0)"
    let v327 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v325 v326 
    let v328 : string = "<" + v285 + " " + v321 + ">move || { v327 }</" + v285 + ">"
    let v329 : string = "leptos::prelude::view! { " + v328 + " }"
    let v330 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v329 
    let v331 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v330 |> unbox
    let v332 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v333 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v331 v332 
    let v334 : string = "v333"
    let v335 : string = v334 + v6 
    let v336 : string = v335 + v6 
    let v337 : string = "vec![" + v336 + "]"
    let v338 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v337 
    let v339 : string = "leptos::prelude::Fragment::new($0)"
    let v340 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v338 v339 
    let v341 : string = "leptos::prelude::AnyView::from($0)"
    let v342 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v340 v341 
    let v343 : string = "<" + v301 + " " + v315 + ">move || { v342 }</" + v301 + ">"
    let v344 : string = "leptos::prelude::view! { " + v343 + " }"
    let v345 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v344 
    let v346 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v345 |> unbox
    let v347 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v348 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v346 v347 
    let v349 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v350 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v305 v349 
    let v351 : string = "v348"
    let v352 : string = v351 + v6 
    let v353 : string = v352 + v6 
    let v354 : string = "v350"
    let v355 : string = ", "
    let v356 : string = v354 + v355 
    let v357 : string = v356 + v353 
    let v358 : string = "vec![" + v357 + "]"
    let v359 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v358 
    let v360 : string = "leptos::prelude::Fragment::new($0)"
    let v361 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v359 v360 
    let v362 : string = "leptos::prelude::AnyView::from($0)"
    let v363 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v361 v362 
    let v364 : string = "span"
    let v365 : string = "<" + v364 + " " + v262 + ">move || { v363 }</" + v364 + ">"
    let v366 : string = "leptos::prelude::view! { " + v365 + " }"
    let v367 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v366 
    let v368 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v367 |> unbox
    let v369 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v370 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v368 v369 
    let v371 : string = "class=\"absolute inset-0 rounded-full bg-gray-200 dark:bg-gray-200 transition peer-checked:bg-gray-300\""
    let v372 : string = " " + v371 + v6 + ""
    let v373 : string = "vec![" + v6 + "]"
    let v374 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v373 
    let v375 : string = "leptos::prelude::Fragment::new($0)"
    let v376 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v374 v375 
    let v377 : string = "leptos::prelude::AnyView::from($0)"
    let v378 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v376 v377 
    let v379 : string = "<" + v364 + " " + v372 + ">move || { v378 }</" + v364 + ">"
    let v380 : string = "leptos::prelude::view! { " + v379 + " }"
    let v381 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v380 
    let v382 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v381 |> unbox
    let v383 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v384 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v382 v383 
    let v385 : string = "v384"
    let v386 : string = v385 + v6 
    let v387 : string = v386 + v6 
    let v388 : string = "v370"
    let v389 : string = v388 + v355 
    let v390 : string = v389 + v387 
    let v391 : string = "v260"
    let v392 : string = v391 + v355 
    let v393 : string = v392 + v390 
    let v394 : string = "vec![" + v393 + "]"
    let v395 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v394 
    let v396 : string = "leptos::prelude::Fragment::new($0)"
    let v397 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v395 v396 
    let v398 : string = "leptos::prelude::AnyView::from($0)"
    let v399 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v397 v398 
    let v400 : string = "label"
    let v401 : string = "<" + v400 + " " + v238 + ">move || { v399 }</" + v400 + ">"
    let v402 : string = "leptos::prelude::view! { " + v401 + " }"
    let v403 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v402 
    let v404 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Label>> = v403 |> unbox
    let v405 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v406 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v404 v405 
    let v407 : unit = ()
    let v408 : string = $"true; let _func0_from_v407 = Func0::from(move || {{ //"
    let v409 : bool = Fable.Core.RustInterop.emitRustExpr () v408 
    let v410 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v411 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr v35 v410 
    let (a, b) = v411 
    let v414 : bool = a
    let v415 : std_string_String = b
    let v420 : string = $"true; $0 /*"
    let v421 : bool = Fable.Core.RustInterop.emitRustExpr v415 v420 
    let v422 : string = $"*/ }}); //"
    let v423 : bool = Fable.Core.RustInterop.emitRustExpr () v422 
    let v424 : string = $"_func0_from_v407"
    let v425 : Func0<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v424 
    let v426 : unit = ()
    let v427 : string = $"true; let _func1_from_v426 = Func0::from(move || {{ //"
    let v428 : bool = Fable.Core.RustInterop.emitRustExpr () v427 
    let v429 : string = $"value"
    let v430 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v429 
    let v431 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v432 : string = "Box::pin($0)"
    let v433 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v431 v432 
    let v434 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v435 : Heap1 = Fable.Core.RustInterop.emitRustExpr v433 v434 
    let v436 : leptos_prelude_ArcRwSignal<Heap0> = v435.l3
    let v437 : string = "Box::pin($0)"
    let v438 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v436 v437 
    let v439 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v440 : Heap0 = Fable.Core.RustInterop.emitRustExpr v438 v439 
    let v441 : Vec<(bool * std_string_String)> = v440.l0
    let v442 : std_string_String option = v440.l1
    let v443 : int32 = v440.l2
    let v444 : int32 = v440.l3
    let v445 : US1 = v440.l4
    let v446 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v447 : string = "Box::pin($0)"
    let v448 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v446 v447 
    let v449 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v450 : Heap1 = Fable.Core.RustInterop.emitRustExpr v448 v449 
    let v451 : leptos_prelude_ArcRwSignal<Heap0> = v450.l3
    let v452 : (int32 -> ((bool * std_string_String) -> (bool * std_string_String))) = method222(v38, v430)
    let v453 : Vec<(bool * std_string_String)> = method208(v441)
    let v454 : string = "v453.iter().enumerate().map(|(i, x)| v452(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v455 : Vec<(bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v454 
    let v456 : Heap0 = {l0 = v455; l1 = v442; l2 = v443; l3 = v444; l4 = v445} : Heap0
    let v457 : string = $"true; leptos::prelude::ArcRwSignal::set(&$0, $1); //"
    let v458 : bool = Fable.Core.RustInterop.emitRustExpr struct (v451, v456) v457 
    let v459 : string = $"true; /*"
    let v460 : bool = Fable.Core.RustInterop.emitRustExpr () v459 
    let v461 : string = $"*/ }}); //"
    let v462 : bool = Fable.Core.RustInterop.emitRustExpr () v461 
    let v463 : string = $"_func1_from_v426"
    let v464 : Func0<std_string_String, unit> = Fable.Core.RustInterop.emitRustExpr () v463 
    let v465 : string = "$0"
    let v466 : (unit -> string) = closure216()
    let v467 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v466 v465 
    let v468 : string = "class=move || \"bg-gray-50 h-[31px] [font-size:.875rem] \".to_owned() + &v467(())"
    let v469 : string = "prop:value=move || v425()"
    let v470 : (std_string_String -> unit) = closure180(v464)
    let v471 : string = "on:keyup=move |event: web_sys::KeyboardEvent| v470(leptos::prelude::event_target_value(&event))"
    let v472 : string = " " + v468 + v6 + ""
    let v473 : string = " " + v469 + v472 + ""
    let v474 : string = " " + v471 + v473 + ""
    let v475 : string = "<" + v254 + " " + v474 + " />"
    let v476 : string = "leptos::prelude::view! { " + v475 + " }"
    let v477 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v476 
    let v478 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v477 |> unbox
    let v479 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v480 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v478 v479 
    let v481 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v482 : int32 = Fable.Core.RustInterop.emitRustExpr v2 v481 
    let v483 : bool = v482 = 1
    let v594 : leptos_prelude_AnyView_ =
        if v483 then
            let v484 : string = "vec![" + v6 + "]"
            let v485 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v484 
            let v486 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v487 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v485 v486 
            v487
        else
            let v488 : unit = ()
            let v489 : string = $"true; let _func0_from_v488 = Func0::from(move || {{ //"
            let v490 : bool = Fable.Core.RustInterop.emitRustExpr () v489 
            let v491 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
            let v492 : string = "Box::pin($0)"
            let v493 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v491 v492 
            let v494 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
            let v495 : Heap1 = Fable.Core.RustInterop.emitRustExpr v493 v494 
            let v496 : leptos_prelude_ArcRwSignal<Heap0> = v495.l3
            let v497 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
            let v498 : bool = Fable.Core.RustInterop.emitRustExpr v496 v497 
            let v500 : TypeEmit<Heap0> = null |> unbox<TypeEmit<Heap0>>
            let v503 : string = "*/ | { *x = $0(x.clone()) }); //"
            let v504 : (Heap0 -> Heap0) = closure217(v3, v38)
            let v505 : bool = Fable.Core.RustInterop.emitRustExpr v504 v503 
            let v506 : string = $"true; leptos::prelude::WriteSignal::update(&$0, |x: &mut /*"
            let v507 : bool = Fable.Core.RustInterop.emitRustExpr v4 v506 
            let v509 : TypeEmit<int32> = null |> unbox<TypeEmit<int32>>
            let v512 : string = "*/ | { *x = $0(x.clone()) }); //"
            let v513 : (int32 -> int32) = closure201()
            let v514 : bool = Fable.Core.RustInterop.emitRustExpr v513 v512 
            // rust.func0_from / is_unit
            let v515 : string = $"true; /*"
            let v516 : bool = Fable.Core.RustInterop.emitRustExpr () v515 
            let v517 : string = $"*/ }}); //"
            let v518 : bool = Fable.Core.RustInterop.emitRustExpr () v517 
            let v519 : string = $"_func0_from_v488"
            let v520 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v519 
            let v521 : string = "$0"
            let v522 : (unit -> string) = closure220()
            let v523 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v522 v521 
            let v524 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v525 : string = "fill=\"none\""
            let v526 : string = "viewBox=\"0 0 24 24\""
            let v527 : string = "stroke-width=\"1.5\""
            let v528 : string = "stroke=\"currentColor\""
            let v529 : string = "class=move || \" \".to_owned() + &v523(())"
            let v530 : string = " " + v524 + v6 + ""
            let v531 : string = " " + v525 + v530 + ""
            let v532 : string = " " + v526 + v531 + ""
            let v533 : string = " " + v527 + v532 + ""
            let v534 : string = " " + v528 + v533 + ""
            let v535 : string = " " + v529 + v534 + ""
            let v536 : string = "stroke-linecap=\"round\""
            let v537 : string = "stroke-linejoin=\"round\""
            let v538 : string = "d=\"M6 6l12 12m0-12L6 18\""
            let v539 : string = " " + v536 + v6 + ""
            let v540 : string = " " + v537 + v539 + ""
            let v541 : string = " " + v538 + v540 + ""
            let v542 : string = "vec![" + v6 + "]"
            let v543 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v542 
            let v544 : string = "leptos::prelude::Fragment::new($0)"
            let v545 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v543 v544 
            let v546 : string = "leptos::prelude::AnyView::from($0)"
            let v547 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v545 v546 
            let v548 : string = "<" + v285 + " " + v541 + ">move || { v547 }</" + v285 + ">"
            let v549 : string = "leptos::prelude::view! { " + v548 + " }"
            let v550 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v549 
            let v551 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v550 |> unbox
            let v552 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v553 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v551 v552 
            let v554 : string = "v553"
            let v555 : string = v554 + v6 
            let v556 : string = v555 + v6 
            let v557 : string = "vec![" + v556 + "]"
            let v558 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v557 
            let v559 : string = "leptos::prelude::Fragment::new($0)"
            let v560 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v558 v559 
            let v561 : string = "leptos::prelude::AnyView::from($0)"
            let v562 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v560 v561 
            let v563 : string = "<" + v301 + " " + v535 + ">move || { v562 }</" + v301 + ">"
            let v564 : string = "leptos::prelude::view! { " + v563 + " }"
            let v565 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v564 
            let v566 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v565 |> unbox
            let v567 : string = "on:click=move |_| v520()"
            let v568 : string = "aria-label=\"Delete\""
            let v569 : string = "$0"
            let v570 : (unit -> std_string_String) = closure221()
            let v571 : (unit -> std_string_String) = Fable.Core.RustInterop.emitRustExpr v570 v569 
            let v572 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] pb-[8px] pt-[8px] px-[12px] \".to_owned() + &v571(())"
            let v573 : string = " " + v572 + v6 + ""
            let v574 : string = " " + v567 + v573 + ""
            let v575 : string = " " + v568 + v574 + ""
            let v576 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v577 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v566 v576 
            let v578 : string = "v577"
            let v579 : string = v578 + v6 
            let v580 : string = v579 + v6 
            let v581 : string = "vec![" + v580 + "]"
            let v582 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v581 
            let v583 : string = "leptos::prelude::Fragment::new($0)"
            let v584 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v582 v583 
            let v585 : string = "leptos::prelude::AnyView::from($0)"
            let v586 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v584 v585 
            let v587 : string = "button"
            let v588 : string = "<" + v587 + " " + v575 + ">move || { v586 }</" + v587 + ">"
            let v589 : string = "leptos::prelude::view! { " + v588 + " }"
            let v590 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v589 
            let v591 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Button>> = v590 |> unbox
            let v592 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v593 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v591 v592 
            v593
    let v595 : string = "v594"
    let v596 : string = v595 + v6 
    let v597 : string = v596 + v6 
    let v598 : string = "v480"
    let v599 : string = v598 + v355 
    let v600 : string = v599 + v597 
    let v601 : string = "v406"
    let v602 : string = v601 + v355 
    let v603 : string = v602 + v600 
    let v604 : string = "vec![" + v603 + "]"
    let v605 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v604 
    let v606 : string = "leptos::prelude::Fragment::new($0)"
    let v607 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v605 v606 
    let v608 : string = "leptos::prelude::AnyView::from($0)"
    let v609 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v607 v608 
    let v610 : string = "div"
    let v611 : string = "<" + v610 + " " + v37 + ">move || { v609 }</" + v610 + ">"
    let v612 : string = "leptos::prelude::view! { " + v611 + " }"
    let v613 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v612 
    let v614 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v613 |> unbox
    let v615 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v616 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v614 v615 
    let v617 : string = "v616"
    let v618 : string = v617 + v6 
    let v619 : string = v618 + v6 
    let v620 : string = "vec![" + v619 + "]"
    let v621 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v620 
    let v622 : string = "leptos::prelude::Fragment::new($0)"
    let v623 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v621 v622 
    let v624 : string = "leptos::prelude::AnyView::from($0)"
    let v625 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v623 v624 
    let func1_from_result = v625 //
    let v626 : _ = func1_from_result
    let v627 : string = $"true; $0 /*"
    let v628 : bool = Fable.Core.RustInterop.emitRustExpr v626 v627 
    let v629 : string = $"*/ }}); //"
    let v630 : bool = Fable.Core.RustInterop.emitRustExpr () v629 
    let v631 : string = $"_func1_from_v29"
    let v632 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v631 
    let v633 : string = "each=v9"
    let v634 : string = "key=move |x| v28(x.to_owned())"
    let v635 : string = "let:x"
    let v636 : (struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>) -> leptos_prelude_AnyView_) = closure222(v632)
    let v637 : string = "children=move |x| v636(x)"
    let v638 : string = " " + v633 + v6 + ""
    let v639 : string = " " + v634 + v638 + ""
    let v640 : string = " " + v635 + v639 + ""
    let v641 : string = " " + v637 + v640 + ""
    let v642 : string = "leptos::prelude::For"
    let v643 : string = "<" + v642 + " " + v641 + " />"
    let v644 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::view! { " + v643 + " })"
    let v645 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr () v644 
    let v646 : string = "v645"
    let v647 : string = v646 + v6 
    let v648 : string = v647 + v6 
    let v649 : string = "vec![" + v648 + "]"
    let v650 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v649 
    let v651 : string = "leptos::prelude::Fragment::new($0)"
    let v652 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v650 v651 
    let v653 : string = "leptos::prelude::AnyView::from($0)"
    let v654 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v652 v653 
    let v655 : string = "<" + v610 + " " + v7 + ">move || { v654 }</" + v610 + ">"
    let v656 : string = "leptos::prelude::view! { " + v655 + " }"
    let v657 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v656 
    let v658 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v657 |> unbox
    let v659 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v660 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v658 v659 
    let v661 : string = "v660"
    let v662 : string = v661 + v6 
    let v663 : string = v662 + v6 
    let v664 : string = "vec![" + v663 + "]"
    let v665 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v664 
    let v666 : string = "leptos::prelude::Fragment::new($0)"
    let v667 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v665 v666 
    v667
and closure223 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure224 () () : Ref<Lifetime<StaticLifetime, Str>> =
    let v0 : string = ""
    let v1 : string = "r#\"" + v0 + "\"#"
    let v2 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v1 
    v2
and closure225 () () : string =
    let v0 : string = "View"
    v0
and method228 () : (unit -> string) =
    closure225()
and closure227 () () : leptos_dom_Fragment =
    let v0 : string = "Dark Mode"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method229 () : (unit -> leptos_dom_Fragment) =
    closure227()
and closure230 () (v0 : bool) : bool =
    let v1 : bool = v0 = false
    v1
and closure229 (v0 : Heap2) (v1 : leptos_ev_Event) : unit =
    let v2 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v3 : string = "Box::pin($0)"
    let v4 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v6 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : leptos_prelude_ArcRwSignal<bool> = v6.l0
    let v8 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
    let v9 : bool = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v11 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
    let v14 : string = "*/ | { *x = $0(x.clone()) }); //"
    let v15 : (bool -> bool) = closure230()
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr v15 v14 
    ()
and closure231 (v0 : Heap2) () : bool =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<bool> = v5.l0
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr v6 v7 
    v8
and method231 (v0 : Heap2) : (unit -> bool) =
    closure231(v0)
and closure232 () () : std_string_String =
    let v0 : string = "dark-mode"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    v61
and method232 () : (unit -> std_string_String) =
    closure232()
and closure228 (v0 : Heap2) () : leptos_dom_Fragment =
    let v1 : unit = ()
    let v2 : string = $"true; let _func0_from_v1 = Func0::from(move || {{ //"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr () v2 
    let v4 : string = "dark-mode"
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    let v71 : string = $"true; $0 /*"
    let v72 : bool = Fable.Core.RustInterop.emitRustExpr v65 v71 
    let v73 : string = $"*/ }}); //"
    let v74 : bool = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = $"_func0_from_v1"
    let v76 : Func0<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v75 
    let v77 : string = "block"
    let v78 : string = "relative"
    let v79 : string = "h-8"
    let v80 : string = "w-14"
    let v81 : string = "cursor-pointer"
    let v82 : string = "[-webkit-tap-highlight-color:_transparent]"
    let v83 : string list = []
    let v85 : string list = v82 :: v83 
    let v89 : string list = v81 :: v85 
    let v93 : string list = v80 :: v89 
    let v97 : string list = v79 :: v93 
    let v101 : string list = v78 :: v97 
    let v105 : string list = v77 :: v101 
    let v112 : unit = ()
    let _let'_v112 =
        seq {
            yield! v105 
            (* indent
            ()
        indent *)
        }
        (* indent
        ()
    indent *)
    let v115 : string seq = _let'_v112 
    let v123 : (string -> (string seq -> string)) = String.concat
    let v124 : string = " "
    let v125 : (string seq -> string) = v123 v124
    let v126 : string = v125 v115
    (* run_target_args'
    let v133 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v134 : string = "&*$0"
    let v135 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v126 v134 
    let _run_target_args'_v133 = v135 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v136 : string = "&*$0"
    let v137 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v126 v136 
    let _run_target_args'_v133 = v137 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v138 : string = "&*$0"
    let v139 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v126 v138 
    let _run_target_args'_v133 = v139 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v141 : Ref<Str> = v126 |> unbox<Ref<Str>>
    let _run_target_args'_v133 = v141 
    #endif
#if FABLE_COMPILER_PYTHON
    let v145 : Ref<Str> = v126 |> unbox<Ref<Str>>
    let _run_target_args'_v133 = v145 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v149 : Ref<Str> = v126 |> unbox<Ref<Str>>
    let _run_target_args'_v133 = v149 
    #endif
#else
    let v153 : Ref<Str> = v126 |> unbox<Ref<Str>>
    let _run_target_args'_v133 = v153 
    #endif
    let v156 : Ref<Str> = _run_target_args'_v133 
    (* run_target_args'
    let v166 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v167 : string = "String::from($0)"
    let v168 : std_string_String = Fable.Core.RustInterop.emitRustExpr v156 v167 
    let _run_target_args'_v166 = v168 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v169 : string = "String::from($0)"
    let v170 : std_string_String = Fable.Core.RustInterop.emitRustExpr v156 v169 
    let _run_target_args'_v166 = v170 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v171 : string = "String::from($0)"
    let v172 : std_string_String = Fable.Core.RustInterop.emitRustExpr v156 v171 
    let _run_target_args'_v166 = v172 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v174 : std_string_String = v156 |> unbox<std_string_String>
    let _run_target_args'_v166 = v174 
    #endif
#if FABLE_COMPILER_PYTHON
    let v178 : std_string_String = v156 |> unbox<std_string_String>
    let _run_target_args'_v166 = v178 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v182 : std_string_String = v156 |> unbox<std_string_String>
    let _run_target_args'_v166 = v182 
    #endif
#else
    let v186 : std_string_String = v156 |> unbox<std_string_String>
    let _run_target_args'_v166 = v186 
    #endif
    let v189 : std_string_String = _run_target_args'_v166 
    let v195 : string = "$0"
    let v196 : std_string_String = Fable.Core.RustInterop.emitRustExpr v189 v195 
    let v197 : string = "for=move || v76()"
    let v198 : string = "class=v196"
    let v199 : string = ""
    let v200 : string = " " + v197 + v199 + ""
    let v201 : string = " " + v198 + v200 + ""
    let v202 : (leptos_ev_Event -> unit) = closure229(v0)
    let v203 : string = "true; let v202 = $0; //"
    let v204 : bool = Fable.Core.RustInterop.emitRustExpr v202 v203 
    let v205 : (unit -> bool) = method231(v0)
    let v206 : (unit -> std_string_String) = method232()
    let v207 : string = "class=\"peer sr-only [&:checked_+_span_svg[data-checked-icon]]:block [&:checked_+_span_svg[data-unchecked-icon]]:hidden\""
    let v208 : string = "type=\"checkbox\""
    let v209 : string = "id=move || v206()"
    let v210 : string = "on:change=move |event| v202(event)"
    let v211 : string = "prop:checked=move || v205()"
    let v212 : string = " " + v207 + v199 + ""
    let v213 : string = " " + v208 + v212 + ""
    let v214 : string = " " + v209 + v213 + ""
    let v215 : string = " " + v210 + v214 + ""
    let v216 : string = " " + v211 + v215 + ""
    let v217 : string = "input"
    let v218 : string = "<" + v217 + " " + v216 + " />"
    let v219 : string = "leptos::prelude::view! { " + v218 + " }"
    let v220 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v219 
    let v221 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v220 |> unbox
    let v222 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v223 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v221 v222 
    let v224 : string = "class=\"absolute inset-y-0 start-0 z-10 m-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-white dark:bg-gray-400 peer-checked:bg-white text-gray-200 transition-all peer-checked:start-6 peer-checked:text-gray-400\""
    let v225 : string = " " + v224 + v199 + ""
    let v226 : string = "data-unchecked-icon"
    let v227 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v228 : string = "class=\"h-4 w-4\""
    let v229 : string = "viewBox=\"0 0 20 20\""
    let v230 : string = "fill=\"currentColor\""
    let v231 : string = " " + v226 + v199 + ""
    let v232 : string = " " + v227 + v231 + ""
    let v233 : string = " " + v228 + v232 + ""
    let v234 : string = " " + v229 + v233 + ""
    let v235 : string = " " + v230 + v234 + ""
    let v236 : string = "fill-rule=\"evenodd\""
    let v237 : string = "d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\""
    let v238 : string = "clip-rule=\"evenodd\""
    let v239 : string = " " + v236 + v199 + ""
    let v240 : string = " " + v237 + v239 + ""
    let v241 : string = " " + v238 + v240 + ""
    let v242 : string = "vec![" + v199 + "]"
    let v243 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v242 
    let v244 : string = "leptos::prelude::Fragment::new($0)"
    let v245 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v243 v244 
    let v246 : string = "leptos::prelude::AnyView::from($0)"
    let v247 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v245 v246 
    let v248 : string = "path"
    let v249 : string = "<" + v248 + " " + v241 + ">move || { v247 }</" + v248 + ">"
    let v250 : string = "leptos::prelude::view! { " + v249 + " }"
    let v251 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v250 
    let v252 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v251 |> unbox
    let v253 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v254 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v252 v253 
    let v255 : string = "v254"
    let v256 : string = v255 + v199 
    let v257 : string = v256 + v199 
    let v258 : string = "vec![" + v257 + "]"
    let v259 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v258 
    let v260 : string = "leptos::prelude::Fragment::new($0)"
    let v261 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v259 v260 
    let v262 : string = "leptos::prelude::AnyView::from($0)"
    let v263 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v261 v262 
    let v264 : string = "svg"
    let v265 : string = "<" + v264 + " " + v235 + ">move || { v263 }</" + v264 + ">"
    let v266 : string = "leptos::prelude::view! { " + v265 + " }"
    let v267 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v266 
    let v268 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v267 |> unbox
    let v269 : string = "data-checked-icon"
    let v270 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v271 : string = "class=\"hidden h-4 w-4\""
    let v272 : string = "viewBox=\"0 0 20 20\""
    let v273 : string = "fill=\"currentColor\""
    let v274 : string = " " + v269 + v199 + ""
    let v275 : string = " " + v270 + v274 + ""
    let v276 : string = " " + v271 + v275 + ""
    let v277 : string = " " + v272 + v276 + ""
    let v278 : string = " " + v273 + v277 + ""
    let v279 : string = "fill-rule=\"evenodd\""
    let v280 : string = "d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\""
    let v281 : string = "clip-rule=\"evenodd\""
    let v282 : string = " " + v279 + v199 + ""
    let v283 : string = " " + v280 + v282 + ""
    let v284 : string = " " + v281 + v283 + ""
    let v285 : string = "vec![" + v199 + "]"
    let v286 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v285 
    let v287 : string = "leptos::prelude::Fragment::new($0)"
    let v288 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v286 v287 
    let v289 : string = "leptos::prelude::AnyView::from($0)"
    let v290 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v288 v289 
    let v291 : string = "<" + v248 + " " + v284 + ">move || { v290 }</" + v248 + ">"
    let v292 : string = "leptos::prelude::view! { " + v291 + " }"
    let v293 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v292 
    let v294 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v293 |> unbox
    let v295 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v296 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v294 v295 
    let v297 : string = "v296"
    let v298 : string = v297 + v199 
    let v299 : string = v298 + v199 
    let v300 : string = "vec![" + v299 + "]"
    let v301 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v300 
    let v302 : string = "leptos::prelude::Fragment::new($0)"
    let v303 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v301 v302 
    let v304 : string = "leptos::prelude::AnyView::from($0)"
    let v305 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v303 v304 
    let v306 : string = "<" + v264 + " " + v278 + ">move || { v305 }</" + v264 + ">"
    let v307 : string = "leptos::prelude::view! { " + v306 + " }"
    let v308 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v307 
    let v309 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v308 |> unbox
    let v310 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v311 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v309 v310 
    let v312 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v313 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v268 v312 
    let v314 : string = "v311"
    let v315 : string = v314 + v199 
    let v316 : string = v315 + v199 
    let v317 : string = "v313"
    let v318 : string = ", "
    let v319 : string = v317 + v318 
    let v320 : string = v319 + v316 
    let v321 : string = "vec![" + v320 + "]"
    let v322 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v321 
    let v323 : string = "leptos::prelude::Fragment::new($0)"
    let v324 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v322 v323 
    let v325 : string = "leptos::prelude::AnyView::from($0)"
    let v326 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v324 v325 
    let v327 : string = "span"
    let v328 : string = "<" + v327 + " " + v225 + ">move || { v326 }</" + v327 + ">"
    let v329 : string = "leptos::prelude::view! { " + v328 + " }"
    let v330 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v329 
    let v331 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v330 |> unbox
    let v332 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v333 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v331 v332 
    let v334 : string = "class=\"absolute inset-0 rounded-full bg-gray-200 dark:bg-gray-200 transition peer-checked:bg-gray-300\""
    let v335 : string = " " + v334 + v199 + ""
    let v336 : string = "vec![" + v199 + "]"
    let v337 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v336 
    let v338 : string = "leptos::prelude::Fragment::new($0)"
    let v339 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v337 v338 
    let v340 : string = "leptos::prelude::AnyView::from($0)"
    let v341 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v339 v340 
    let v342 : string = "<" + v327 + " " + v335 + ">move || { v341 }</" + v327 + ">"
    let v343 : string = "leptos::prelude::view! { " + v342 + " }"
    let v344 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v343 
    let v345 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v344 |> unbox
    let v346 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v347 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v345 v346 
    let v348 : string = "v347"
    let v349 : string = v348 + v199 
    let v350 : string = v349 + v199 
    let v351 : string = "v333"
    let v352 : string = v351 + v318 
    let v353 : string = v352 + v350 
    let v354 : string = "v223"
    let v355 : string = v354 + v318 
    let v356 : string = v355 + v353 
    let v357 : string = "vec![" + v356 + "]"
    let v358 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v357 
    let v359 : string = "leptos::prelude::Fragment::new($0)"
    let v360 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v358 v359 
    let v361 : string = "leptos::prelude::AnyView::from($0)"
    let v362 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v360 v361 
    let v363 : string = "label"
    let v364 : string = "<" + v363 + " " + v201 + ">move || { v362 }</" + v363 + ">"
    let v365 : string = "leptos::prelude::view! { " + v364 + " }"
    let v366 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v365 
    let v367 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Label>> = v366 |> unbox
    let v368 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v369 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v367 v368 
    let v370 : string = "v369"
    let v371 : string = v370 + v199 
    let v372 : string = v371 + v199 
    let v373 : string = "vec![" + v372 + "]"
    let v374 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v373 
    let v375 : string = "leptos::prelude::Fragment::new($0)"
    let v376 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v374 v375 
    v376
and method230 (v0 : Heap2) : (unit -> leptos_dom_Fragment) =
    closure228(v0)
and closure233 () () : string =
    let v0 : string = "items-center p-0"
    v0
and closure234 () () : string =
    let v0 : string = "pt-[9px] pr-[10px] pb-[11px] pl-[10px]"
    v0
and closure235 () () : string =
    let v0 : string = "sm:grid-cols-[150px_repeat(2,minmax(0,1fr))]"
    v0
and closure236 () () : string =
    let v0 : string = "[overflow:auto]"
    v0
and closure237 () () : leptos_dom_Fragment =
    let v0 : string = "Debug"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method233 () : (unit -> leptos_dom_Fragment) =
    closure237()
and closure239 (v0 : Heap2) (v1 : leptos_ev_Event) : unit =
    let v2 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v3 : string = "Box::pin($0)"
    let v4 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v6 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : leptos_prelude_ArcRwSignal<bool> = v6.l1
    let v8 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
    let v9 : bool = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v11 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
    let v14 : string = "*/ | { *x = $0(x.clone()) }); //"
    let v15 : (bool -> bool) = closure230()
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr v15 v14 
    ()
and closure240 (v0 : Heap2) () : bool =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<bool> = v5.l1
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr v6 v7 
    v8
and method235 (v0 : Heap2) : (unit -> bool) =
    closure240(v0)
and closure241 () () : std_string_String =
    let v0 : string = "debug"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    v61
and method236 () : (unit -> std_string_String) =
    closure241()
and closure238 (v0 : Heap2) () : leptos_dom_Fragment =
    let v1 : unit = ()
    let v2 : string = $"true; let _func0_from_v1 = Func0::from(move || {{ //"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr () v2 
    let v4 : string = "debug"
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    let v71 : string = $"true; $0 /*"
    let v72 : bool = Fable.Core.RustInterop.emitRustExpr v65 v71 
    let v73 : string = $"*/ }}); //"
    let v74 : bool = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = $"_func0_from_v1"
    let v76 : Func0<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v75 
    let v77 : string = "block"
    let v78 : string = "relative"
    let v79 : string = "h-8"
    let v80 : string = "w-14"
    let v81 : string = "cursor-pointer"
    let v82 : string = "[-webkit-tap-highlight-color:_transparent]"
    let v83 : string list = []
    let v85 : string list = v82 :: v83 
    let v89 : string list = v81 :: v85 
    let v93 : string list = v80 :: v89 
    let v97 : string list = v79 :: v93 
    let v101 : string list = v78 :: v97 
    let v105 : string list = v77 :: v101 
    let v112 : unit = ()
    let _let'_v112 =
        seq {
            yield! v105 
            (* indent
            ()
        indent *)
        }
        (* indent
        ()
    indent *)
    let v115 : string seq = _let'_v112 
    let v123 : (string -> (string seq -> string)) = String.concat
    let v124 : string = " "
    let v125 : (string seq -> string) = v123 v124
    let v126 : string = v125 v115
    (* run_target_args'
    let v133 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v134 : string = "&*$0"
    let v135 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v126 v134 
    let _run_target_args'_v133 = v135 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v136 : string = "&*$0"
    let v137 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v126 v136 
    let _run_target_args'_v133 = v137 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v138 : string = "&*$0"
    let v139 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v126 v138 
    let _run_target_args'_v133 = v139 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v141 : Ref<Str> = v126 |> unbox<Ref<Str>>
    let _run_target_args'_v133 = v141 
    #endif
#if FABLE_COMPILER_PYTHON
    let v145 : Ref<Str> = v126 |> unbox<Ref<Str>>
    let _run_target_args'_v133 = v145 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v149 : Ref<Str> = v126 |> unbox<Ref<Str>>
    let _run_target_args'_v133 = v149 
    #endif
#else
    let v153 : Ref<Str> = v126 |> unbox<Ref<Str>>
    let _run_target_args'_v133 = v153 
    #endif
    let v156 : Ref<Str> = _run_target_args'_v133 
    (* run_target_args'
    let v166 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v167 : string = "String::from($0)"
    let v168 : std_string_String = Fable.Core.RustInterop.emitRustExpr v156 v167 
    let _run_target_args'_v166 = v168 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v169 : string = "String::from($0)"
    let v170 : std_string_String = Fable.Core.RustInterop.emitRustExpr v156 v169 
    let _run_target_args'_v166 = v170 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v171 : string = "String::from($0)"
    let v172 : std_string_String = Fable.Core.RustInterop.emitRustExpr v156 v171 
    let _run_target_args'_v166 = v172 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v174 : std_string_String = v156 |> unbox<std_string_String>
    let _run_target_args'_v166 = v174 
    #endif
#if FABLE_COMPILER_PYTHON
    let v178 : std_string_String = v156 |> unbox<std_string_String>
    let _run_target_args'_v166 = v178 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v182 : std_string_String = v156 |> unbox<std_string_String>
    let _run_target_args'_v166 = v182 
    #endif
#else
    let v186 : std_string_String = v156 |> unbox<std_string_String>
    let _run_target_args'_v166 = v186 
    #endif
    let v189 : std_string_String = _run_target_args'_v166 
    let v195 : string = "$0"
    let v196 : std_string_String = Fable.Core.RustInterop.emitRustExpr v189 v195 
    let v197 : string = "for=move || v76()"
    let v198 : string = "class=v196"
    let v199 : string = ""
    let v200 : string = " " + v197 + v199 + ""
    let v201 : string = " " + v198 + v200 + ""
    let v202 : (leptos_ev_Event -> unit) = closure239(v0)
    let v203 : string = "true; let v202 = $0; //"
    let v204 : bool = Fable.Core.RustInterop.emitRustExpr v202 v203 
    let v205 : (unit -> bool) = method235(v0)
    let v206 : (unit -> std_string_String) = method236()
    let v207 : string = "class=\"peer sr-only [&:checked_+_span_svg[data-checked-icon]]:block [&:checked_+_span_svg[data-unchecked-icon]]:hidden\""
    let v208 : string = "type=\"checkbox\""
    let v209 : string = "id=move || v206()"
    let v210 : string = "on:change=move |event| v202(event)"
    let v211 : string = "prop:checked=move || v205()"
    let v212 : string = " " + v207 + v199 + ""
    let v213 : string = " " + v208 + v212 + ""
    let v214 : string = " " + v209 + v213 + ""
    let v215 : string = " " + v210 + v214 + ""
    let v216 : string = " " + v211 + v215 + ""
    let v217 : string = "input"
    let v218 : string = "<" + v217 + " " + v216 + " />"
    let v219 : string = "leptos::prelude::view! { " + v218 + " }"
    let v220 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v219 
    let v221 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v220 |> unbox
    let v222 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v223 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v221 v222 
    let v224 : string = "class=\"absolute inset-y-0 start-0 z-10 m-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-white dark:bg-gray-400 peer-checked:bg-white text-gray-200 transition-all peer-checked:start-6 peer-checked:text-gray-400\""
    let v225 : string = " " + v224 + v199 + ""
    let v226 : string = "data-unchecked-icon"
    let v227 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v228 : string = "class=\"h-4 w-4\""
    let v229 : string = "viewBox=\"0 0 20 20\""
    let v230 : string = "fill=\"currentColor\""
    let v231 : string = " " + v226 + v199 + ""
    let v232 : string = " " + v227 + v231 + ""
    let v233 : string = " " + v228 + v232 + ""
    let v234 : string = " " + v229 + v233 + ""
    let v235 : string = " " + v230 + v234 + ""
    let v236 : string = "fill-rule=\"evenodd\""
    let v237 : string = "d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\""
    let v238 : string = "clip-rule=\"evenodd\""
    let v239 : string = " " + v236 + v199 + ""
    let v240 : string = " " + v237 + v239 + ""
    let v241 : string = " " + v238 + v240 + ""
    let v242 : string = "vec![" + v199 + "]"
    let v243 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v242 
    let v244 : string = "leptos::prelude::Fragment::new($0)"
    let v245 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v243 v244 
    let v246 : string = "leptos::prelude::AnyView::from($0)"
    let v247 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v245 v246 
    let v248 : string = "path"
    let v249 : string = "<" + v248 + " " + v241 + ">move || { v247 }</" + v248 + ">"
    let v250 : string = "leptos::prelude::view! { " + v249 + " }"
    let v251 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v250 
    let v252 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v251 |> unbox
    let v253 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v254 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v252 v253 
    let v255 : string = "v254"
    let v256 : string = v255 + v199 
    let v257 : string = v256 + v199 
    let v258 : string = "vec![" + v257 + "]"
    let v259 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v258 
    let v260 : string = "leptos::prelude::Fragment::new($0)"
    let v261 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v259 v260 
    let v262 : string = "leptos::prelude::AnyView::from($0)"
    let v263 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v261 v262 
    let v264 : string = "svg"
    let v265 : string = "<" + v264 + " " + v235 + ">move || { v263 }</" + v264 + ">"
    let v266 : string = "leptos::prelude::view! { " + v265 + " }"
    let v267 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v266 
    let v268 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v267 |> unbox
    let v269 : string = "data-checked-icon"
    let v270 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v271 : string = "class=\"hidden h-4 w-4\""
    let v272 : string = "viewBox=\"0 0 20 20\""
    let v273 : string = "fill=\"currentColor\""
    let v274 : string = " " + v269 + v199 + ""
    let v275 : string = " " + v270 + v274 + ""
    let v276 : string = " " + v271 + v275 + ""
    let v277 : string = " " + v272 + v276 + ""
    let v278 : string = " " + v273 + v277 + ""
    let v279 : string = "fill-rule=\"evenodd\""
    let v280 : string = "d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\""
    let v281 : string = "clip-rule=\"evenodd\""
    let v282 : string = " " + v279 + v199 + ""
    let v283 : string = " " + v280 + v282 + ""
    let v284 : string = " " + v281 + v283 + ""
    let v285 : string = "vec![" + v199 + "]"
    let v286 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v285 
    let v287 : string = "leptos::prelude::Fragment::new($0)"
    let v288 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v286 v287 
    let v289 : string = "leptos::prelude::AnyView::from($0)"
    let v290 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v288 v289 
    let v291 : string = "<" + v248 + " " + v284 + ">move || { v290 }</" + v248 + ">"
    let v292 : string = "leptos::prelude::view! { " + v291 + " }"
    let v293 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v292 
    let v294 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v293 |> unbox
    let v295 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v296 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v294 v295 
    let v297 : string = "v296"
    let v298 : string = v297 + v199 
    let v299 : string = v298 + v199 
    let v300 : string = "vec![" + v299 + "]"
    let v301 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v300 
    let v302 : string = "leptos::prelude::Fragment::new($0)"
    let v303 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v301 v302 
    let v304 : string = "leptos::prelude::AnyView::from($0)"
    let v305 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v303 v304 
    let v306 : string = "<" + v264 + " " + v278 + ">move || { v305 }</" + v264 + ">"
    let v307 : string = "leptos::prelude::view! { " + v306 + " }"
    let v308 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v307 
    let v309 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v308 |> unbox
    let v310 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v311 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v309 v310 
    let v312 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v313 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v268 v312 
    let v314 : string = "v311"
    let v315 : string = v314 + v199 
    let v316 : string = v315 + v199 
    let v317 : string = "v313"
    let v318 : string = ", "
    let v319 : string = v317 + v318 
    let v320 : string = v319 + v316 
    let v321 : string = "vec![" + v320 + "]"
    let v322 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v321 
    let v323 : string = "leptos::prelude::Fragment::new($0)"
    let v324 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v322 v323 
    let v325 : string = "leptos::prelude::AnyView::from($0)"
    let v326 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v324 v325 
    let v327 : string = "span"
    let v328 : string = "<" + v327 + " " + v225 + ">move || { v326 }</" + v327 + ">"
    let v329 : string = "leptos::prelude::view! { " + v328 + " }"
    let v330 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v329 
    let v331 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v330 |> unbox
    let v332 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v333 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v331 v332 
    let v334 : string = "class=\"absolute inset-0 rounded-full bg-gray-200 dark:bg-gray-200 transition peer-checked:bg-gray-300\""
    let v335 : string = " " + v334 + v199 + ""
    let v336 : string = "vec![" + v199 + "]"
    let v337 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v336 
    let v338 : string = "leptos::prelude::Fragment::new($0)"
    let v339 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v337 v338 
    let v340 : string = "leptos::prelude::AnyView::from($0)"
    let v341 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v339 v340 
    let v342 : string = "<" + v327 + " " + v335 + ">move || { v341 }</" + v327 + ">"
    let v343 : string = "leptos::prelude::view! { " + v342 + " }"
    let v344 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v343 
    let v345 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v344 |> unbox
    let v346 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v347 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v345 v346 
    let v348 : string = "v347"
    let v349 : string = v348 + v199 
    let v350 : string = v349 + v199 
    let v351 : string = "v333"
    let v352 : string = v351 + v318 
    let v353 : string = v352 + v350 
    let v354 : string = "v223"
    let v355 : string = v354 + v318 
    let v356 : string = v355 + v353 
    let v357 : string = "vec![" + v356 + "]"
    let v358 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v357 
    let v359 : string = "leptos::prelude::Fragment::new($0)"
    let v360 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v358 v359 
    let v361 : string = "leptos::prelude::AnyView::from($0)"
    let v362 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v360 v361 
    let v363 : string = "label"
    let v364 : string = "<" + v363 + " " + v201 + ">move || { v362 }</" + v363 + ">"
    let v365 : string = "leptos::prelude::view! { " + v364 + " }"
    let v366 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v365 
    let v367 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Label>> = v366 |> unbox
    let v368 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v369 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v367 v368 
    let v370 : string = "v369"
    let v371 : string = v370 + v199 
    let v372 : string = v371 + v199 
    let v373 : string = "vec![" + v372 + "]"
    let v374 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v373 
    let v375 : string = "leptos::prelude::Fragment::new($0)"
    let v376 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v374 v375 
    v376
and method234 (v0 : Heap2) : (unit -> leptos_dom_Fragment) =
    closure238(v0)
and closure242 () () : string =
    let v0 : string = "items-center p-0"
    v0
and closure226 (v0 : Heap2) () : leptos_dom_Fragment =
    let v1 : string = "class=\"flex flex-1 flex-col p-[11px] gap-[11px]\""
    let v2 : string = ""
    let v3 : string = " " + v1 + v2 + ""
    let v4 : (unit -> leptos_dom_Fragment) = method229()
    let v5 : (unit -> leptos_dom_Fragment) = method230(v0)
    let v6 : string = "$0"
    let v7 : (unit -> string) = closure233()
    let v8 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v7 v6 
    let v9 : string = "$0"
    let v10 : (unit -> string) = closure234()
    let v11 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v10 v9 
    let v12 : string = "$0"
    let v13 : (unit -> string) = closure235()
    let v14 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v13 v12 
    let v15 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v14(()) + \" \" + &v11(()) + \" \" + &v8(())"
    let v16 : string = " " + v15 + v2 + ""
    let v17 : string = "$0"
    let v18 : (unit -> string) = closure236()
    let v19 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v18 v17 
    let v20 : string = "class=\"[font-size:12px] text-gray-400\""
    let v21 : string = " " + v20 + v2 + ""
    let v22 : leptos_dom_Fragment = v4 ()
    let v23 : string = "leptos::prelude::AnyView::from($0)"
    let v24 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v22 v23 
    let v25 : string = "dt"
    let v26 : string = "<" + v25 + " " + v21 + ">move || { v24 }</" + v25 + ">"
    let v27 : string = "leptos::prelude::view! { " + v26 + " }"
    let v28 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v28 |> unbox
    let v30 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v31 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v29 v30 
    let v32 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v19(())"
    let v33 : string = " " + v32 + v2 + ""
    let v34 : leptos_dom_Fragment = v5 ()
    let v35 : string = "leptos::prelude::AnyView::from($0)"
    let v36 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v34 v35 
    let v37 : string = "dd"
    let v38 : string = "<" + v37 + " " + v33 + ">move || { v36 }</" + v37 + ">"
    let v39 : string = "leptos::prelude::view! { " + v38 + " }"
    let v40 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v39 
    let v41 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v40 |> unbox
    let v42 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v43 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v41 v42 
    let v44 : string = "v43"
    let v45 : string = v44 + v2 
    let v46 : string = v45 + v2 
    let v47 : string = "v31"
    let v48 : string = ", "
    let v49 : string = v47 + v48 
    let v50 : string = v49 + v46 
    let v51 : string = "vec![" + v50 + "]"
    let v52 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v51 
    let v53 : string = "leptos::prelude::Fragment::new($0)"
    let v54 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v52 v53 
    let v55 : string = "leptos::prelude::AnyView::from($0)"
    let v56 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v54 v55 
    let v57 : string = "dl"
    let v58 : string = "<" + v57 + " " + v16 + ">move || { v56 }</" + v57 + ">"
    let v59 : string = "leptos::prelude::view! { " + v58 + " }"
    let v60 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v59 
    let v61 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v60 |> unbox
    let v62 : (unit -> leptos_dom_Fragment) = method233()
    let v63 : (unit -> leptos_dom_Fragment) = method234(v0)
    let v64 : string = "$0"
    let v65 : (unit -> string) = closure242()
    let v66 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v65 v64 
    let v67 : string = "$0"
    let v68 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v10 v67 
    let v69 : string = "$0"
    let v70 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v13 v69 
    let v71 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v70(()) + \" \" + &v68(()) + \" \" + &v66(())"
    let v72 : string = " " + v71 + v2 + ""
    let v73 : string = "$0"
    let v74 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v18 v73 
    let v75 : string = "class=\"[font-size:12px] text-gray-400\""
    let v76 : string = " " + v75 + v2 + ""
    let v77 : leptos_dom_Fragment = v62 ()
    let v78 : string = "leptos::prelude::AnyView::from($0)"
    let v79 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v78 
    let v80 : string = "<" + v25 + " " + v76 + ">move || { v79 }</" + v25 + ">"
    let v81 : string = "leptos::prelude::view! { " + v80 + " }"
    let v82 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v81 
    let v83 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v82 |> unbox
    let v84 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v85 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v83 v84 
    let v86 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v74(())"
    let v87 : string = " " + v86 + v2 + ""
    let v88 : leptos_dom_Fragment = v63 ()
    let v89 : string = "leptos::prelude::AnyView::from($0)"
    let v90 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v88 v89 
    let v91 : string = "<" + v37 + " " + v87 + ">move || { v90 }</" + v37 + ">"
    let v92 : string = "leptos::prelude::view! { " + v91 + " }"
    let v93 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v92 
    let v94 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v93 |> unbox
    let v95 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v96 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v94 v95 
    let v97 : string = "v96"
    let v98 : string = v97 + v2 
    let v99 : string = v98 + v2 
    let v100 : string = "v85"
    let v101 : string = v100 + v48 
    let v102 : string = v101 + v99 
    let v103 : string = "vec![" + v102 + "]"
    let v104 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v103 
    let v105 : string = "leptos::prelude::Fragment::new($0)"
    let v106 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v104 v105 
    let v107 : string = "leptos::prelude::AnyView::from($0)"
    let v108 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v106 v107 
    let v109 : string = "<" + v57 + " " + v72 + ">move || { v108 }</" + v57 + ">"
    let v110 : string = "leptos::prelude::view! { " + v109 + " }"
    let v111 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v110 
    let v112 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v111 |> unbox
    let v113 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v114 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v112 v113 
    let v115 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v116 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v115 
    let v117 : string = "v114"
    let v118 : string = v117 + v2 
    let v119 : string = v118 + v2 
    let v120 : string = "v116"
    let v121 : string = v120 + v48 
    let v122 : string = v121 + v119 
    let v123 : string = "vec![" + v122 + "]"
    let v124 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v123 
    let v125 : string = "leptos::prelude::Fragment::new($0)"
    let v126 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v124 v125 
    let v127 : string = "leptos::prelude::AnyView::from($0)"
    let v128 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v126 v127 
    let v129 : string = "div"
    let v130 : string = "<" + v129 + " " + v3 + ">move || { v128 }</" + v129 + ">"
    let v131 : string = "leptos::prelude::view! { " + v130 + " }"
    let v132 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v131 
    let v133 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v132 |> unbox
    let v134 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v135 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v133 v134 
    let v136 : string = "v135"
    let v137 : string = v136 + v2 
    let v138 : string = v137 + v2 
    let v139 : string = "vec![" + v138 + "]"
    let v140 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v139 
    let v141 : string = "leptos::prelude::Fragment::new($0)"
    let v142 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v140 v141 
    v142
and closure243 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure244 () () : Ref<Lifetime<StaticLifetime, Str>> =
    let v0 : string = ""
    let v1 : string = "r#\"" + v0 + "\"#"
    let v2 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v1 
    v2
and closure245 () () : string =
    let v0 : string = "Debug"
    v0
and method237 () : (unit -> string) =
    closure245()
and closure247 () () : leptos_dom_Fragment =
    let v0 : string = "Global State"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method238 () : (unit -> leptos_dom_Fragment) =
    closure247()
and closure250 () (v0 : std_string_String) : US70 =
    US70_0(v0)
and method240 () : (std_string_String -> US70) =
    closure250()
and closure251 () (v0 : std_string_String) : US70 =
    US70_1(v0)
and method241 () : (std_string_String -> US70) =
    closure251()
and closure249 (v0 : Heap2) () : string =
    let v1 : string = "settings_view.global_state_log_render () / global_state_json memo"
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "$0.clone()"
    let v5 : Heap2 = Fable.Core.RustInterop.emitRustExpr v0 v4 
    let v6 : string = "serde_json::to_string_pretty(&v5).map_err(|x| x.to_string())"
    let v7 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : (std_string_String -> US70) = method240()
    let v9 : (std_string_String -> US70) = method241()
    let v11 : US70 = match v7 with Ok x -> v8 x | Error x -> v9 x
    match v11 with
    | US70_1(v17) -> (* Error *)
        let v18 : string = "Error: " + string v17 + ""
        v18
    | US70_0(v14) -> (* Ok *)
        let v15 : string = "fable_library_rust::String_::fromString($0)"
        let v16 : string = Fable.Core.RustInterop.emitRustExpr v14 v15 
        v16
and closure252 () () : string =
    let v0 : string = ""
    v0
and closure248 () () : leptos_dom_Fragment =
    let v0 : string = "settings_view.global_state_log_render ()"
    let v1 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v2 : bool = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
    let v4 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v3 
    let v5 : string = "$0.unwrap()"
    let v6 : Heap2 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v8 : (unit -> string) = closure249(v6)
    let v9 : leptos_prelude_ArcMemo<string> = Fable.Core.RustInterop.emitRustExpr v8 v7 
    let v10 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v11 : string = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "$0"
    let v13 : (unit -> string) = closure252()
    let v14 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v13 v12 
    let v15 : string = "class=move || \"[padding:1px] [font-size:12px] [line-height:12px] [text-wrap:pretty] \".to_owned() + &v14(())"
    let v16 : string = ""
    let v17 : string = " " + v15 + v16 + ""
    (* run_target_args'
    let v22 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v23 
    let _run_target_args'_v22 = v24 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v25 : string = "&*$0"
    let v26 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v25 
    let _run_target_args'_v22 = v26 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v27 : string = "&*$0"
    let v28 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v27 
    let _run_target_args'_v22 = v28 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v30 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v22 = v30 
    #endif
#if FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v22 = v34 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v38 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v22 = v38 
    #endif
#else
    let v42 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v22 = v42 
    #endif
    let v45 : Ref<Str> = _run_target_args'_v22 
    (* run_target_args'
    let v55 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v56 : string = "String::from($0)"
    let v57 : std_string_String = Fable.Core.RustInterop.emitRustExpr v45 v56 
    let _run_target_args'_v55 = v57 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v58 : string = "String::from($0)"
    let v59 : std_string_String = Fable.Core.RustInterop.emitRustExpr v45 v58 
    let _run_target_args'_v55 = v59 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v60 : string = "String::from($0)"
    let v61 : std_string_String = Fable.Core.RustInterop.emitRustExpr v45 v60 
    let _run_target_args'_v55 = v61 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v63 : std_string_String = v45 |> unbox<std_string_String>
    let _run_target_args'_v55 = v63 
    #endif
#if FABLE_COMPILER_PYTHON
    let v67 : std_string_String = v45 |> unbox<std_string_String>
    let _run_target_args'_v55 = v67 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v71 : std_string_String = v45 |> unbox<std_string_String>
    let _run_target_args'_v55 = v71 
    #endif
#else
    let v75 : std_string_String = v45 |> unbox<std_string_String>
    let _run_target_args'_v55 = v75 
    #endif
    let v78 : std_string_String = _run_target_args'_v55 
    let v84 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v85 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v78 v84 
    let v86 : string = "v85"
    let v87 : string = v86 + v16 
    let v88 : string = v87 + v16 
    let v89 : string = "vec![" + v88 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::Fragment::new($0)"
    let v92 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v90 v91 
    let v93 : string = "leptos::prelude::AnyView::from($0)"
    let v94 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v92 v93 
    let v95 : string = "pre"
    let v96 : string = "<" + v95 + " " + v17 + ">move || { v94 }</" + v95 + ">"
    let v97 : string = "leptos::prelude::view! { " + v96 + " }"
    let v98 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v97 
    let v99 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v98 |> unbox
    let v100 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v101 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v99 v100 
    let v102 : string = "v101"
    let v103 : string = v102 + v16 
    let v104 : string = v103 + v16 
    let v105 : string = "vec![" + v104 + "]"
    let v106 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v105 
    let v107 : string = "leptos::prelude::Fragment::new($0)"
    let v108 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v106 v107 
    v108
and method239 () : (unit -> leptos_dom_Fragment) =
    closure248()
and closure253 () () : string =
    let v0 : string = ""
    v0
and closure246 () () : leptos_dom_Fragment =
    let v0 : (unit -> leptos_dom_Fragment) = method238()
    let v1 : (unit -> leptos_dom_Fragment) = method239()
    let v2 : string = "$0"
    let v3 : (unit -> string) = closure253()
    let v4 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3 v2 
    let v5 : string = "$0"
    let v6 : (unit -> string) = closure234()
    let v7 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v6 v5 
    let v8 : string = "$0"
    let v9 : (unit -> string) = closure235()
    let v10 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v9 v8 
    let v11 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v10(()) + \" \" + &v7(()) + \" \" + &v4(())"
    let v12 : string = ""
    let v13 : string = " " + v11 + v12 + ""
    let v14 : string = "$0"
    let v15 : (unit -> string) = closure236()
    let v16 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v15 v14 
    let v17 : string = "class=\"[font-size:12px] text-gray-400\""
    let v18 : string = " " + v17 + v12 + ""
    let v19 : leptos_dom_Fragment = v0 ()
    let v20 : string = "leptos::prelude::AnyView::from($0)"
    let v21 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v19 v20 
    let v22 : string = "dt"
    let v23 : string = "<" + v22 + " " + v18 + ">move || { v21 }</" + v22 + ">"
    let v24 : string = "leptos::prelude::view! { " + v23 + " }"
    let v25 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v24 
    let v26 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v25 |> unbox
    let v27 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v28 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v26 v27 
    let v29 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v16(())"
    let v30 : string = " " + v29 + v12 + ""
    let v31 : leptos_dom_Fragment = v1 ()
    let v32 : string = "leptos::prelude::AnyView::from($0)"
    let v33 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v31 v32 
    let v34 : string = "dd"
    let v35 : string = "<" + v34 + " " + v30 + ">move || { v33 }</" + v34 + ">"
    let v36 : string = "leptos::prelude::view! { " + v35 + " }"
    let v37 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v36 
    let v38 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v37 |> unbox
    let v39 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v40 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v38 v39 
    let v41 : string = "v40"
    let v42 : string = v41 + v12 
    let v43 : string = v42 + v12 
    let v44 : string = "v28"
    let v45 : string = ", "
    let v46 : string = v44 + v45 
    let v47 : string = v46 + v43 
    let v48 : string = "vec![" + v47 + "]"
    let v49 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v48 
    let v50 : string = "leptos::prelude::Fragment::new($0)"
    let v51 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v49 v50 
    let v52 : string = "leptos::prelude::AnyView::from($0)"
    let v53 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v51 v52 
    let v54 : string = "dl"
    let v55 : string = "<" + v54 + " " + v13 + ">move || { v53 }</" + v54 + ">"
    let v56 : string = "leptos::prelude::view! { " + v55 + " }"
    let v57 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v56 
    let v58 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v57 |> unbox
    let v59 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v60 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v58 v59 
    let v61 : string = "v60"
    let v62 : string = v61 + v12 
    let v63 : string = v62 + v12 
    let v64 : string = "vec![" + v63 + "]"
    let v65 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v64 
    let v66 : string = "leptos::prelude::Fragment::new($0)"
    let v67 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v65 v66 
    v67
and closure254 (v0 : leptos_prelude_WriteSignal<bool>) () : unit =
    let v1 : string = $"true; leptos::prelude::WriteSignal::update(&$0, |x: &mut /*"
    let v2 : bool = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v4 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
    let v7 : string = "*/ | { *x = $0(x.clone()) }); //"
    let v8 : (bool -> bool) = closure230()
    let v9 : bool = Fable.Core.RustInterop.emitRustExpr v8 v7 
    ()
and closure255 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and method242 (v0 : Ref<Lifetime<StaticLifetime, Str>>) : Ref<Lifetime<StaticLifetime, Str>> =
    v0
and closure256 (v0 : leptos_prelude_ReadSignal<bool>) () : std_string_String =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : bool = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v9 : Ref<Lifetime<StaticLifetime, Str>> =
        if v2 then
            let v3 : string = ""
            let v4 : string = "r#\"" + v3 + "\"#"
            let v5 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v4 
            v5
        else
            let v6 : string = "bg-gray-300 hover:bg-gray-200"
            let v7 : string = "r#\"" + v6 + "\"#"
            let v8 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v7 
            v8
    let v10 : Ref<Lifetime<StaticLifetime, Str>> = method242(v9)
    let v11 : string = "v10.to_owned() + \" hover:bg-gray-200\""
    let v12 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v11 
    v12
and closure257 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure258 (v0 : leptos_prelude_AnyView_) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = "[margin-right:40px]"
    let v2 : string = "r#\"" + v1 + "\"#"
    let v3 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v2 
    v3
and closure259 () () : string =
    let v0 : string = "Transactions"
    v0
and method243 (v0 : leptos_prelude_AnyView_) : (unit -> string) =
    closure259()
and closure261 () () : leptos_dom_Fragment =
    let v0 : string = "Settings"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and closure262 () () : leptos_dom_Fragment =
    let v0 : string = "Table View"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method244 () : (unit -> leptos_dom_Fragment) =
    closure262()
and closure265 () (v0 : Heap0) : Heap0 =
    let v1 : Vec<(bool * std_string_String)> = v0.l0
    let v2 : std_string_String option = v0.l1
    let v3 : int32 = v0.l2
    let v4 : int32 = v0.l3
    let v5 : US1 = v0.l4
    let v6 : bool =
        match v5 with
        | US1_1 -> (* Table *)
            true
        | _ ->
            false
    let v9 : US1 =
        if v6 then
            US1_0
        else
            US1_1
    {l0 = v1; l1 = v2; l2 = v3; l3 = v4; l4 = v9} : Heap0
and closure264 (v0 : Heap2) (v1 : leptos_ev_Event) : unit =
    let v2 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v3 : string = "Box::pin($0)"
    let v4 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v6 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : leptos_prelude_ArcRwSignal<Heap0> = v6.l3
    let v8 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
    let v9 : bool = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v11 : TypeEmit<Heap0> = null |> unbox<TypeEmit<Heap0>>
    let v14 : string = "*/ | { *x = $0(x.clone()) }); //"
    let v15 : (Heap0 -> Heap0) = closure265()
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr v15 v14 
    ()
and closure266 (v0 : Heap2) () : bool =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<Heap0> = v5.l3
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : Heap0 = Fable.Core.RustInterop.emitRustExpr v6 v7 
    let v9 : US1 = v8.l4
    match v9 with
    | US1_1 -> (* Table *)
        true
    | _ ->
        false
and method246 (v0 : Heap2) : (unit -> bool) =
    closure266(v0)
and closure267 () () : std_string_String =
    let v0 : string = "table-view"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    v61
and method247 () : (unit -> std_string_String) =
    closure267()
and closure263 (v0 : Heap2) () : leptos_dom_Fragment =
    let v1 : unit = ()
    let v2 : string = $"true; let _func0_from_v1 = Func0::from(move || {{ //"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr () v2 
    let v4 : string = "table-view"
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    let v71 : string = $"true; $0 /*"
    let v72 : bool = Fable.Core.RustInterop.emitRustExpr v65 v71 
    let v73 : string = $"*/ }}); //"
    let v74 : bool = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = $"_func0_from_v1"
    let v76 : Func0<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v75 
    let v77 : string = "block"
    let v78 : string = "relative"
    let v79 : string = "h-8"
    let v80 : string = "w-14"
    let v81 : string = "cursor-pointer"
    let v82 : string = "[-webkit-tap-highlight-color:_transparent]"
    let v83 : string list = []
    let v85 : string list = v82 :: v83 
    let v89 : string list = v81 :: v85 
    let v93 : string list = v80 :: v89 
    let v97 : string list = v79 :: v93 
    let v101 : string list = v78 :: v97 
    let v105 : string list = v77 :: v101 
    let v112 : unit = ()
    let _let'_v112 =
        seq {
            yield! v105 
            (* indent
            ()
        indent *)
        }
        (* indent
        ()
    indent *)
    let v115 : string seq = _let'_v112 
    let v123 : (string -> (string seq -> string)) = String.concat
    let v124 : string = " "
    let v125 : (string seq -> string) = v123 v124
    let v126 : string = v125 v115
    (* run_target_args'
    let v133 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v134 : string = "&*$0"
    let v135 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v126 v134 
    let _run_target_args'_v133 = v135 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v136 : string = "&*$0"
    let v137 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v126 v136 
    let _run_target_args'_v133 = v137 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v138 : string = "&*$0"
    let v139 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v126 v138 
    let _run_target_args'_v133 = v139 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v141 : Ref<Str> = v126 |> unbox<Ref<Str>>
    let _run_target_args'_v133 = v141 
    #endif
#if FABLE_COMPILER_PYTHON
    let v145 : Ref<Str> = v126 |> unbox<Ref<Str>>
    let _run_target_args'_v133 = v145 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v149 : Ref<Str> = v126 |> unbox<Ref<Str>>
    let _run_target_args'_v133 = v149 
    #endif
#else
    let v153 : Ref<Str> = v126 |> unbox<Ref<Str>>
    let _run_target_args'_v133 = v153 
    #endif
    let v156 : Ref<Str> = _run_target_args'_v133 
    (* run_target_args'
    let v166 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v167 : string = "String::from($0)"
    let v168 : std_string_String = Fable.Core.RustInterop.emitRustExpr v156 v167 
    let _run_target_args'_v166 = v168 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v169 : string = "String::from($0)"
    let v170 : std_string_String = Fable.Core.RustInterop.emitRustExpr v156 v169 
    let _run_target_args'_v166 = v170 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v171 : string = "String::from($0)"
    let v172 : std_string_String = Fable.Core.RustInterop.emitRustExpr v156 v171 
    let _run_target_args'_v166 = v172 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v174 : std_string_String = v156 |> unbox<std_string_String>
    let _run_target_args'_v166 = v174 
    #endif
#if FABLE_COMPILER_PYTHON
    let v178 : std_string_String = v156 |> unbox<std_string_String>
    let _run_target_args'_v166 = v178 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v182 : std_string_String = v156 |> unbox<std_string_String>
    let _run_target_args'_v166 = v182 
    #endif
#else
    let v186 : std_string_String = v156 |> unbox<std_string_String>
    let _run_target_args'_v166 = v186 
    #endif
    let v189 : std_string_String = _run_target_args'_v166 
    let v195 : string = "$0"
    let v196 : std_string_String = Fable.Core.RustInterop.emitRustExpr v189 v195 
    let v197 : string = "for=move || v76()"
    let v198 : string = "class=v196"
    let v199 : string = ""
    let v200 : string = " " + v197 + v199 + ""
    let v201 : string = " " + v198 + v200 + ""
    let v202 : (leptos_ev_Event -> unit) = closure264(v0)
    let v203 : string = "true; let v202 = $0; //"
    let v204 : bool = Fable.Core.RustInterop.emitRustExpr v202 v203 
    let v205 : (unit -> bool) = method246(v0)
    let v206 : (unit -> std_string_String) = method247()
    let v207 : string = "class=\"peer sr-only [&:checked_+_span_svg[data-checked-icon]]:block [&:checked_+_span_svg[data-unchecked-icon]]:hidden\""
    let v208 : string = "type=\"checkbox\""
    let v209 : string = "id=move || v206()"
    let v210 : string = "on:change=move |event| v202(event)"
    let v211 : string = "prop:checked=move || v205()"
    let v212 : string = " " + v207 + v199 + ""
    let v213 : string = " " + v208 + v212 + ""
    let v214 : string = " " + v209 + v213 + ""
    let v215 : string = " " + v210 + v214 + ""
    let v216 : string = " " + v211 + v215 + ""
    let v217 : string = "input"
    let v218 : string = "<" + v217 + " " + v216 + " />"
    let v219 : string = "leptos::prelude::view! { " + v218 + " }"
    let v220 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v219 
    let v221 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v220 |> unbox
    let v222 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v223 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v221 v222 
    let v224 : string = "class=\"absolute inset-y-0 start-0 z-10 m-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-white dark:bg-gray-400 peer-checked:bg-white text-gray-200 transition-all peer-checked:start-6 peer-checked:text-gray-400\""
    let v225 : string = " " + v224 + v199 + ""
    let v226 : string = "data-unchecked-icon"
    let v227 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v228 : string = "class=\"h-4 w-4\""
    let v229 : string = "viewBox=\"0 0 20 20\""
    let v230 : string = "fill=\"currentColor\""
    let v231 : string = " " + v226 + v199 + ""
    let v232 : string = " " + v227 + v231 + ""
    let v233 : string = " " + v228 + v232 + ""
    let v234 : string = " " + v229 + v233 + ""
    let v235 : string = " " + v230 + v234 + ""
    let v236 : string = "fill-rule=\"evenodd\""
    let v237 : string = "d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\""
    let v238 : string = "clip-rule=\"evenodd\""
    let v239 : string = " " + v236 + v199 + ""
    let v240 : string = " " + v237 + v239 + ""
    let v241 : string = " " + v238 + v240 + ""
    let v242 : string = "vec![" + v199 + "]"
    let v243 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v242 
    let v244 : string = "leptos::prelude::Fragment::new($0)"
    let v245 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v243 v244 
    let v246 : string = "leptos::prelude::AnyView::from($0)"
    let v247 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v245 v246 
    let v248 : string = "path"
    let v249 : string = "<" + v248 + " " + v241 + ">move || { v247 }</" + v248 + ">"
    let v250 : string = "leptos::prelude::view! { " + v249 + " }"
    let v251 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v250 
    let v252 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v251 |> unbox
    let v253 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v254 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v252 v253 
    let v255 : string = "v254"
    let v256 : string = v255 + v199 
    let v257 : string = v256 + v199 
    let v258 : string = "vec![" + v257 + "]"
    let v259 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v258 
    let v260 : string = "leptos::prelude::Fragment::new($0)"
    let v261 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v259 v260 
    let v262 : string = "leptos::prelude::AnyView::from($0)"
    let v263 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v261 v262 
    let v264 : string = "svg"
    let v265 : string = "<" + v264 + " " + v235 + ">move || { v263 }</" + v264 + ">"
    let v266 : string = "leptos::prelude::view! { " + v265 + " }"
    let v267 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v266 
    let v268 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v267 |> unbox
    let v269 : string = "data-checked-icon"
    let v270 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v271 : string = "class=\"hidden h-4 w-4\""
    let v272 : string = "viewBox=\"0 0 20 20\""
    let v273 : string = "fill=\"currentColor\""
    let v274 : string = " " + v269 + v199 + ""
    let v275 : string = " " + v270 + v274 + ""
    let v276 : string = " " + v271 + v275 + ""
    let v277 : string = " " + v272 + v276 + ""
    let v278 : string = " " + v273 + v277 + ""
    let v279 : string = "fill-rule=\"evenodd\""
    let v280 : string = "d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\""
    let v281 : string = "clip-rule=\"evenodd\""
    let v282 : string = " " + v279 + v199 + ""
    let v283 : string = " " + v280 + v282 + ""
    let v284 : string = " " + v281 + v283 + ""
    let v285 : string = "vec![" + v199 + "]"
    let v286 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v285 
    let v287 : string = "leptos::prelude::Fragment::new($0)"
    let v288 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v286 v287 
    let v289 : string = "leptos::prelude::AnyView::from($0)"
    let v290 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v288 v289 
    let v291 : string = "<" + v248 + " " + v284 + ">move || { v290 }</" + v248 + ">"
    let v292 : string = "leptos::prelude::view! { " + v291 + " }"
    let v293 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v292 
    let v294 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v293 |> unbox
    let v295 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v296 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v294 v295 
    let v297 : string = "v296"
    let v298 : string = v297 + v199 
    let v299 : string = v298 + v199 
    let v300 : string = "vec![" + v299 + "]"
    let v301 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v300 
    let v302 : string = "leptos::prelude::Fragment::new($0)"
    let v303 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v301 v302 
    let v304 : string = "leptos::prelude::AnyView::from($0)"
    let v305 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v303 v304 
    let v306 : string = "<" + v264 + " " + v278 + ">move || { v305 }</" + v264 + ">"
    let v307 : string = "leptos::prelude::view! { " + v306 + " }"
    let v308 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v307 
    let v309 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v308 |> unbox
    let v310 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v311 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v309 v310 
    let v312 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v313 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v268 v312 
    let v314 : string = "v311"
    let v315 : string = v314 + v199 
    let v316 : string = v315 + v199 
    let v317 : string = "v313"
    let v318 : string = ", "
    let v319 : string = v317 + v318 
    let v320 : string = v319 + v316 
    let v321 : string = "vec![" + v320 + "]"
    let v322 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v321 
    let v323 : string = "leptos::prelude::Fragment::new($0)"
    let v324 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v322 v323 
    let v325 : string = "leptos::prelude::AnyView::from($0)"
    let v326 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v324 v325 
    let v327 : string = "span"
    let v328 : string = "<" + v327 + " " + v225 + ">move || { v326 }</" + v327 + ">"
    let v329 : string = "leptos::prelude::view! { " + v328 + " }"
    let v330 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v329 
    let v331 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v330 |> unbox
    let v332 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v333 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v331 v332 
    let v334 : string = "class=\"absolute inset-0 rounded-full bg-gray-200 dark:bg-gray-200 transition peer-checked:bg-gray-300\""
    let v335 : string = " " + v334 + v199 + ""
    let v336 : string = "vec![" + v199 + "]"
    let v337 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v336 
    let v338 : string = "leptos::prelude::Fragment::new($0)"
    let v339 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v337 v338 
    let v340 : string = "leptos::prelude::AnyView::from($0)"
    let v341 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v339 v340 
    let v342 : string = "<" + v327 + " " + v335 + ">move || { v341 }</" + v327 + ">"
    let v343 : string = "leptos::prelude::view! { " + v342 + " }"
    let v344 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v343 
    let v345 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v344 |> unbox
    let v346 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v347 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v345 v346 
    let v348 : string = "v347"
    let v349 : string = v348 + v199 
    let v350 : string = v349 + v199 
    let v351 : string = "v333"
    let v352 : string = v351 + v318 
    let v353 : string = v352 + v350 
    let v354 : string = "v223"
    let v355 : string = v354 + v318 
    let v356 : string = v355 + v353 
    let v357 : string = "vec![" + v356 + "]"
    let v358 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v357 
    let v359 : string = "leptos::prelude::Fragment::new($0)"
    let v360 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v358 v359 
    let v361 : string = "leptos::prelude::AnyView::from($0)"
    let v362 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v360 v361 
    let v363 : string = "label"
    let v364 : string = "<" + v363 + " " + v201 + ">move || { v362 }</" + v363 + ">"
    let v365 : string = "leptos::prelude::view! { " + v364 + " }"
    let v366 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v365 
    let v367 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Label>> = v366 |> unbox
    let v368 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v369 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v367 v368 
    let v370 : string = "v369"
    let v371 : string = v370 + v199 
    let v372 : string = v371 + v199 
    let v373 : string = "vec![" + v372 + "]"
    let v374 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v373 
    let v375 : string = "leptos::prelude::Fragment::new($0)"
    let v376 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v374 v375 
    v376
and method245 (v0 : Heap2) : (unit -> leptos_dom_Fragment) =
    closure263(v0)
and closure268 () () : string =
    let v0 : string = "items-center"
    v0
and closure269 (v0 : int64) () : leptos_dom_Fragment =
    let v1 : string = "Transaction " + string (v0 + 1L) + ""
    (* run_target_args'
    let v6 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v7 : string = "&*$0"
    let v8 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v7 
    let _run_target_args'_v6 = v8 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v9 : string = "&*$0"
    let v10 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v9 
    let _run_target_args'_v6 = v10 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v11 : string = "&*$0"
    let v12 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v11 
    let _run_target_args'_v6 = v12 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v14 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v14 
    #endif
#if FABLE_COMPILER_PYTHON
    let v18 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v18 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v22 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v22 
    #endif
#else
    let v26 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v26 
    #endif
    let v29 : Ref<Str> = _run_target_args'_v6 
    (* run_target_args'
    let v39 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v40 : string = "String::from($0)"
    let v41 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v40 
    let _run_target_args'_v39 = v41 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v42 
    let _run_target_args'_v39 = v43 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v44 
    let _run_target_args'_v39 = v45 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v47 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v47 
    #endif
#if FABLE_COMPILER_PYTHON
    let v51 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v51 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v55 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v55 
    #endif
#else
    let v59 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v59 
    #endif
    let v62 : std_string_String = _run_target_args'_v39 
    let v68 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v69 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v62 v68 
    let v70 : string = "v69"
    let v71 : string = ""
    let v72 : string = v70 + v71 
    let v73 : string = v72 + v71 
    let v74 : string = "vec![" + v73 + "]"
    let v75 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v74 
    let v76 : string = "leptos::prelude::Fragment::new($0)"
    let v77 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v75 v76 
    v77
and closure270 () () : leptos_dom_Fragment =
    let v0 : string = "Account"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method248 () : (unit -> leptos_dom_Fragment) =
    closure270()
and closure271 (v0 : string) () : leptos_dom_Fragment =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method249 (v0 : string) : (unit -> leptos_dom_Fragment) =
    closure271(v0)
and closure272 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure273 () () : string =
    let v0 : string = ""
    v0
and closure274 () () : leptos_dom_Fragment =
    let v0 : string = "Block Timestamp"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method250 () : (unit -> leptos_dom_Fragment) =
    closure274()
and closure275 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v5 v12 
    let v15 : (string -> int64) = int64
    let v16 : int64 = v15 v13
    let v19 : int64 = method204(v16)
    let v20 : int64 = v19 / 1000L
    let v21 : string = "chrono::DateTime::from_timestamp_micros($0)"
    let v22 : chrono_DateTime<chrono_Utc> option = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v25 : (chrono_DateTime<chrono_Utc> -> US68) = method205()
    let v26 : US68 option = v22 |> Option.map v25 
    let v46 : US68 = US68_1
    let v47 : US68 = v26 |> Option.defaultValue v46 
    let v66 : US31 =
        match v47 with
        | US68_1 -> (* None *)
            US31_1
        | US68_0(v51) -> (* Some *)
            let v52 : string = "$0.naive_utc()"
            let v53 : chrono_NaiveDateTime = Fable.Core.RustInterop.emitRustExpr v51 v52 
            let v54 : string = "chrono::offset::TimeZone::from_utc_datetime(&chrono::Local, &$0)"
            let v55 : chrono_DateTime<chrono_Local> = Fable.Core.RustInterop.emitRustExpr v53 v54 
            let v56 : string = "%Y-%m-%d %H:%M:%S"
            let v57 : string = "r#\"" + v56 + "\"#"
            let v58 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v57 
            let v59 : string = "$0.format($1).to_string()"
            let v60 : std_string_String = Fable.Core.RustInterop.emitRustExpr struct (v55, v58) v59 
            let v61 : string = "fable_library_rust::String_::fromString($0)"
            let v62 : string = Fable.Core.RustInterop.emitRustExpr v60 v61 
            US31_0(v62)
    let v72 : US69 =
        match v66 with
        | US31_1 -> (* None *)
            let v69 : string = "resultm.from_option / Option does not have a value."
            US69_1(v69)
        | US31_0(v67) -> (* Some *)
            US69_0(v67)
    let v77 : string =
        match v72 with
        | US69_1(v74) -> (* Error *)
            let v75 : string = "sm'.to_string result / Error: " + v74 + ""
            v75
        | US69_0(v73) -> (* Ok *)
            v73
    (* run_target_args'
    let v82 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v83 : string = "&*$0"
    let v84 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v77 v83 
    let _run_target_args'_v82 = v84 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v85 : string = "&*$0"
    let v86 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v77 v85 
    let _run_target_args'_v82 = v86 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v87 : string = "&*$0"
    let v88 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v77 v87 
    let _run_target_args'_v82 = v88 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v90 : Ref<Str> = v77 |> unbox<Ref<Str>>
    let _run_target_args'_v82 = v90 
    #endif
#if FABLE_COMPILER_PYTHON
    let v94 : Ref<Str> = v77 |> unbox<Ref<Str>>
    let _run_target_args'_v82 = v94 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v98 : Ref<Str> = v77 |> unbox<Ref<Str>>
    let _run_target_args'_v82 = v98 
    #endif
#else
    let v102 : Ref<Str> = v77 |> unbox<Ref<Str>>
    let _run_target_args'_v82 = v102 
    #endif
    let v105 : Ref<Str> = _run_target_args'_v82 
    (* run_target_args'
    let v115 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v116 : string = "String::from($0)"
    let v117 : std_string_String = Fable.Core.RustInterop.emitRustExpr v105 v116 
    let _run_target_args'_v115 = v117 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v118 : string = "String::from($0)"
    let v119 : std_string_String = Fable.Core.RustInterop.emitRustExpr v105 v118 
    let _run_target_args'_v115 = v119 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v120 : string = "String::from($0)"
    let v121 : std_string_String = Fable.Core.RustInterop.emitRustExpr v105 v120 
    let _run_target_args'_v115 = v121 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v123 : std_string_String = v105 |> unbox<std_string_String>
    let _run_target_args'_v115 = v123 
    #endif
#if FABLE_COMPILER_PYTHON
    let v127 : std_string_String = v105 |> unbox<std_string_String>
    let _run_target_args'_v115 = v127 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v131 : std_string_String = v105 |> unbox<std_string_String>
    let _run_target_args'_v115 = v131 
    #endif
#else
    let v135 : std_string_String = v105 |> unbox<std_string_String>
    let _run_target_args'_v115 = v135 
    #endif
    let v138 : std_string_String = _run_target_args'_v115 
    let v144 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v145 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v138 v144 
    let v146 : string = "v145"
    let v147 : string = ""
    let v148 : string = v146 + v147 
    let v149 : string = v148 + v147 
    let v150 : string = "vec![" + v149 + "]"
    let v151 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v150 
    let v152 : string = "leptos::prelude::Fragment::new($0)"
    let v153 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v151 v152 
    v153
and method251 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure275(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure276 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure277 () () : string =
    let v0 : string = ""
    v0
and closure278 () () : leptos_dom_Fragment =
    let v0 : string = "Predecessor"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method252 () : (unit -> leptos_dom_Fragment) =
    closure278()
and closure279 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v1 v12 
    (* run_target_args'
    let v18 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v19 
    let _run_target_args'_v18 = v20 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v21 
    let _run_target_args'_v18 = v22 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v23 
    let _run_target_args'_v18 = v24 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v26 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v26 
    #endif
#if FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v30 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v34 
    #endif
#else
    let v38 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v38 
    #endif
    let v41 : Ref<Str> = _run_target_args'_v18 
    (* run_target_args'
    let v51 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v52 
    let _run_target_args'_v51 = v53 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v54 : string = "String::from($0)"
    let v55 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v54 
    let _run_target_args'_v51 = v55 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v56 : string = "String::from($0)"
    let v57 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v56 
    let _run_target_args'_v51 = v57 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v59 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v59 
    #endif
#if FABLE_COMPILER_PYTHON
    let v63 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v63 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v67 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v67 
    #endif
#else
    let v71 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v71 
    #endif
    let v74 : std_string_String = _run_target_args'_v51 
    let v80 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v74 v80 
    let v82 : string = "v81"
    let v83 : string = ""
    let v84 : string = v82 + v83 
    let v85 : string = v84 + v83 
    let v86 : string = "vec![" + v85 + "]"
    let v87 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v86 
    let v88 : string = "leptos::prelude::Fragment::new($0)"
    let v89 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v87 v88 
    v89
and method253 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure279(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure280 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure281 () () : string =
    let v0 : string = ""
    v0
and closure282 () () : leptos_dom_Fragment =
    let v0 : string = "Receiver"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method254 () : (unit -> leptos_dom_Fragment) =
    closure282()
and closure283 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v2 v12 
    (* run_target_args'
    let v18 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v19 
    let _run_target_args'_v18 = v20 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v21 
    let _run_target_args'_v18 = v22 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v23 
    let _run_target_args'_v18 = v24 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v26 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v26 
    #endif
#if FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v30 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v34 
    #endif
#else
    let v38 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v38 
    #endif
    let v41 : Ref<Str> = _run_target_args'_v18 
    (* run_target_args'
    let v51 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v52 
    let _run_target_args'_v51 = v53 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v54 : string = "String::from($0)"
    let v55 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v54 
    let _run_target_args'_v51 = v55 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v56 : string = "String::from($0)"
    let v57 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v56 
    let _run_target_args'_v51 = v57 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v59 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v59 
    #endif
#if FABLE_COMPILER_PYTHON
    let v63 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v63 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v67 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v67 
    #endif
#else
    let v71 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v71 
    #endif
    let v74 : std_string_String = _run_target_args'_v51 
    let v80 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v74 v80 
    let v82 : string = "v81"
    let v83 : string = ""
    let v84 : string = v82 + v83 
    let v85 : string = v84 + v83 
    let v86 : string = "vec![" + v85 + "]"
    let v87 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v86 
    let v88 : string = "leptos::prelude::Fragment::new($0)"
    let v89 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v87 v88 
    v89
and method255 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure283(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure284 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure285 () () : string =
    let v0 : string = ""
    v0
and closure286 () () : leptos_dom_Fragment =
    let v0 : string = "Actions"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method256 () : (unit -> leptos_dom_Fragment) =
    closure286()
and closure288 (v0 : std_string_String) () : leptos_dom_Fragment =
    let v1 : string = "fable_library_rust::String_::fromString($0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : bool = "FUNCTION_CALL" = v2
    let v11 : string =
        if v3 then
            let v4 : string = "Function Call:"
            v4
        else
            let v5 : bool = "DEPLOY_CONTRACT" = v2
            if v5 then
                let v6 : string = "Contract Deploy:"
                v6
            else
                let v7 : bool = "TRANSFER" = v2
                if v7 then
                    let v8 : string = "Transfer:"
                    v8
                else
                    v2
    (* run_target_args'
    let v16 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v17 : string = "&*$0"
    let v18 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v17 
    let _run_target_args'_v16 = v18 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v19 
    let _run_target_args'_v16 = v20 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v21 
    let _run_target_args'_v16 = v22 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v24 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v16 = v24 
    #endif
#if FABLE_COMPILER_PYTHON
    let v28 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v16 = v28 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v32 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v16 = v32 
    #endif
#else
    let v36 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v16 = v36 
    #endif
    let v39 : Ref<Str> = _run_target_args'_v16 
    (* run_target_args'
    let v49 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v50 : string = "String::from($0)"
    let v51 : std_string_String = Fable.Core.RustInterop.emitRustExpr v39 v50 
    let _run_target_args'_v49 = v51 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v39 v52 
    let _run_target_args'_v49 = v53 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v54 : string = "String::from($0)"
    let v55 : std_string_String = Fable.Core.RustInterop.emitRustExpr v39 v54 
    let _run_target_args'_v49 = v55 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v57 : std_string_String = v39 |> unbox<std_string_String>
    let _run_target_args'_v49 = v57 
    #endif
#if FABLE_COMPILER_PYTHON
    let v61 : std_string_String = v39 |> unbox<std_string_String>
    let _run_target_args'_v49 = v61 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v65 : std_string_String = v39 |> unbox<std_string_String>
    let _run_target_args'_v49 = v65 
    #endif
#else
    let v69 : std_string_String = v39 |> unbox<std_string_String>
    let _run_target_args'_v49 = v69 
    #endif
    let v72 : std_string_String = _run_target_args'_v49 
    let v78 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v79 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v72 v78 
    let v80 : string = "v79"
    let v81 : string = ""
    let v82 : string = v80 + v81 
    let v83 : string = v82 + v81 
    let v84 : string = "vec![" + v83 + "]"
    let v85 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v84 
    let v86 : string = "leptos::prelude::Fragment::new($0)"
    let v87 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v85 v86 
    v87
and method258 (v0 : std_string_String) : (unit -> leptos_dom_Fragment) =
    closure288(v0)
and closure290 () () : leptos_dom_Fragment =
    let v0 : string = "Method"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method260 () : (unit -> leptos_dom_Fragment) =
    closure290()
and closure291 (v0 : std_string_String option) () : leptos_dom_Fragment =
    let v3 : (std_string_String -> US14) = method39()
    let v4 : US14 option = v0 |> Option.map v3 
    let v24 : US14 = US14_1
    let v25 : US14 = v4 |> Option.defaultValue v24 
    match v25 with
    | US14_1 -> (* None *)
        let v108 : string = "None"
        (* run_target_args'
        let v113 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v114 : string = "&*$0"
        let v115 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v108 v114 
        let _run_target_args'_v113 = v115 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v116 : string = "&*$0"
        let v117 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v108 v116 
        let _run_target_args'_v113 = v117 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v118 : string = "&*$0"
        let v119 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v108 v118 
        let _run_target_args'_v113 = v119 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v121 : Ref<Str> = v108 |> unbox<Ref<Str>>
        let _run_target_args'_v113 = v121 
        #endif
#if FABLE_COMPILER_PYTHON
        let v125 : Ref<Str> = v108 |> unbox<Ref<Str>>
        let _run_target_args'_v113 = v125 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v129 : Ref<Str> = v108 |> unbox<Ref<Str>>
        let _run_target_args'_v113 = v129 
        #endif
#else
        let v133 : Ref<Str> = v108 |> unbox<Ref<Str>>
        let _run_target_args'_v113 = v133 
        #endif
        let v136 : Ref<Str> = _run_target_args'_v113 
        (* run_target_args'
        let v146 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v147 : string = "String::from($0)"
        let v148 : std_string_String = Fable.Core.RustInterop.emitRustExpr v136 v147 
        let _run_target_args'_v146 = v148 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v149 : string = "String::from($0)"
        let v150 : std_string_String = Fable.Core.RustInterop.emitRustExpr v136 v149 
        let _run_target_args'_v146 = v150 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v151 : string = "String::from($0)"
        let v152 : std_string_String = Fable.Core.RustInterop.emitRustExpr v136 v151 
        let _run_target_args'_v146 = v152 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v154 : std_string_String = v136 |> unbox<std_string_String>
        let _run_target_args'_v146 = v154 
        #endif
#if FABLE_COMPILER_PYTHON
        let v158 : std_string_String = v136 |> unbox<std_string_String>
        let _run_target_args'_v146 = v158 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v162 : std_string_String = v136 |> unbox<std_string_String>
        let _run_target_args'_v146 = v162 
        #endif
#else
        let v166 : std_string_String = v136 |> unbox<std_string_String>
        let _run_target_args'_v146 = v166 
        #endif
        let v169 : std_string_String = _run_target_args'_v146 
        let v175 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
        let v176 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v169 v175 
        let v177 : string = "v176"
        let v178 : string = ""
        let v179 : string = v177 + v178 
        let v180 : string = v179 + v178 
        let v181 : string = "vec![" + v180 + "]"
        let v182 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v181 
        let v183 : string = "leptos::prelude::Fragment::new($0)"
        let v184 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v182 v183 
        v184
    | US14_0(v29) -> (* Some *)
        let v30 : string = "fable_library_rust::String_::fromString($0)"
        let v31 : string = Fable.Core.RustInterop.emitRustExpr v29 v30 
        (* run_target_args'
        let v36 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v37 : string = "&*$0"
        let v38 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v31 v37 
        let _run_target_args'_v36 = v38 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v39 : string = "&*$0"
        let v40 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v31 v39 
        let _run_target_args'_v36 = v40 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v41 : string = "&*$0"
        let v42 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v31 v41 
        let _run_target_args'_v36 = v42 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v44 : Ref<Str> = v31 |> unbox<Ref<Str>>
        let _run_target_args'_v36 = v44 
        #endif
#if FABLE_COMPILER_PYTHON
        let v48 : Ref<Str> = v31 |> unbox<Ref<Str>>
        let _run_target_args'_v36 = v48 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v52 : Ref<Str> = v31 |> unbox<Ref<Str>>
        let _run_target_args'_v36 = v52 
        #endif
#else
        let v56 : Ref<Str> = v31 |> unbox<Ref<Str>>
        let _run_target_args'_v36 = v56 
        #endif
        let v59 : Ref<Str> = _run_target_args'_v36 
        (* run_target_args'
        let v69 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v70 : string = "String::from($0)"
        let v71 : std_string_String = Fable.Core.RustInterop.emitRustExpr v59 v70 
        let _run_target_args'_v69 = v71 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v72 : string = "String::from($0)"
        let v73 : std_string_String = Fable.Core.RustInterop.emitRustExpr v59 v72 
        let _run_target_args'_v69 = v73 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v74 : string = "String::from($0)"
        let v75 : std_string_String = Fable.Core.RustInterop.emitRustExpr v59 v74 
        let _run_target_args'_v69 = v75 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v77 : std_string_String = v59 |> unbox<std_string_String>
        let _run_target_args'_v69 = v77 
        #endif
#if FABLE_COMPILER_PYTHON
        let v81 : std_string_String = v59 |> unbox<std_string_String>
        let _run_target_args'_v69 = v81 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v85 : std_string_String = v59 |> unbox<std_string_String>
        let _run_target_args'_v69 = v85 
        #endif
#else
        let v89 : std_string_String = v59 |> unbox<std_string_String>
        let _run_target_args'_v69 = v89 
        #endif
        let v92 : std_string_String = _run_target_args'_v69 
        let v98 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
        let v99 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v92 v98 
        let v100 : string = "v99"
        let v101 : string = ""
        let v102 : string = v100 + v101 
        let v103 : string = v102 + v101 
        let v104 : string = "vec![" + v103 + "]"
        let v105 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v104 
        let v106 : string = "leptos::prelude::Fragment::new($0)"
        let v107 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v105 v106 
        v107
and method261 (v0 : std_string_String option) : (unit -> leptos_dom_Fragment) =
    closure291(v0)
and closure292 () () : string =
    let v0 : string = ""
    v0
and closure293 () () : string =
    let v0 : string = ""
    v0
and closure294 () () : string =
    let v0 : string = ""
    v0
and closure289 (v0 : std_string_String option) () : leptos_dom_Fragment =
    let v1 : string = "class=\"flex flex-1 flex-col\""
    let v2 : string = ""
    let v3 : string = " " + v1 + v2 + ""
    let v4 : (unit -> leptos_dom_Fragment) = method260()
    let v5 : (unit -> leptos_dom_Fragment) = method261(v0)
    let v6 : string = "$0"
    let v7 : (unit -> string) = closure292()
    let v8 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v7 v6 
    let v9 : string = "$0"
    let v10 : (unit -> string) = closure293()
    let v11 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v10 v9 
    let v12 : string = "$0"
    let v13 : (unit -> string) = closure235()
    let v14 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v13 v12 
    let v15 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v14(()) + \" \" + &v11(()) + \" \" + &v8(())"
    let v16 : string = " " + v15 + v2 + ""
    let v17 : string = "$0"
    let v18 : (unit -> string) = closure294()
    let v19 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v18 v17 
    let v20 : string = "class=\"[font-size:12px] text-gray-400\""
    let v21 : string = " " + v20 + v2 + ""
    let v22 : leptos_dom_Fragment = v4 ()
    let v23 : string = "leptos::prelude::AnyView::from($0)"
    let v24 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v22 v23 
    let v25 : string = "dt"
    let v26 : string = "<" + v25 + " " + v21 + ">move || { v24 }</" + v25 + ">"
    let v27 : string = "leptos::prelude::view! { " + v26 + " }"
    let v28 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v28 |> unbox
    let v30 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v31 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v29 v30 
    let v32 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v19(())"
    let v33 : string = " " + v32 + v2 + ""
    let v34 : leptos_dom_Fragment = v5 ()
    let v35 : string = "leptos::prelude::AnyView::from($0)"
    let v36 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v34 v35 
    let v37 : string = "dd"
    let v38 : string = "<" + v37 + " " + v33 + ">move || { v36 }</" + v37 + ">"
    let v39 : string = "leptos::prelude::view! { " + v38 + " }"
    let v40 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v39 
    let v41 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v40 |> unbox
    let v42 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v43 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v41 v42 
    let v44 : string = "v43"
    let v45 : string = v44 + v2 
    let v46 : string = v45 + v2 
    let v47 : string = "v31"
    let v48 : string = ", "
    let v49 : string = v47 + v48 
    let v50 : string = v49 + v46 
    let v51 : string = "vec![" + v50 + "]"
    let v52 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v51 
    let v53 : string = "leptos::prelude::Fragment::new($0)"
    let v54 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v52 v53 
    let v55 : string = "leptos::prelude::AnyView::from($0)"
    let v56 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v54 v55 
    let v57 : string = "dl"
    let v58 : string = "<" + v57 + " " + v16 + ">move || { v56 }</" + v57 + ">"
    let v59 : string = "leptos::prelude::view! { " + v58 + " }"
    let v60 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v59 
    let v61 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v60 |> unbox
    let v62 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v63 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v62 
    let v64 : string = "v63"
    let v65 : string = v64 + v2 
    let v66 : string = v65 + v2 
    let v67 : string = "vec![" + v66 + "]"
    let v68 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v67 
    let v69 : string = "leptos::prelude::Fragment::new($0)"
    let v70 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v68 v69 
    let v71 : string = "leptos::prelude::AnyView::from($0)"
    let v72 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v70 v71 
    let v73 : string = "div"
    let v74 : string = "<" + v73 + " " + v3 + ">move || { v72 }</" + v73 + ">"
    let v75 : string = "leptos::prelude::view! { " + v74 + " }"
    let v76 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v75 
    let v77 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v76 |> unbox
    let v78 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v79 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v78 
    let v80 : string = "v79"
    let v81 : string = v80 + v2 
    let v82 : string = v81 + v2 
    let v83 : string = "vec![" + v82 + "]"
    let v84 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v83 
    let v85 : string = "leptos::prelude::Fragment::new($0)"
    let v86 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v84 v85 
    v86
and method259 (v0 : std_string_String option) : (unit -> leptos_dom_Fragment) =
    closure289(v0)
and closure295 () () : string =
    let v0 : string = ""
    v0
and closure296 () () : string =
    let v0 : string = "items-center"
    v0
and closure297 () () : string =
    let v0 : string = ""
    v0
and closure298 () () : string =
    let v0 : string = ""
    v0
and closure287 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "$0.to_vec()"
    let v13 : Vec<struct (std_string_String * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr v7 v12 
    let v14 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
    let v15 : bool = Fable.Core.RustInterop.emitRustExpr v13 v14 
    let v16 : string = "x"
    let struct (v17 : std_string_String, v18 : std_string_String option) = Fable.Core.RustInterop.emitRustExpr () v16 
    let v19 : (unit -> leptos_dom_Fragment) = method258(v17)
    let v20 : (unit -> leptos_dom_Fragment) = method259(v18)
    let v21 : string = "$0"
    let v22 : (unit -> string) = closure295()
    let v23 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v22 v21 
    let v24 : string = "$0"
    let v25 : (unit -> string) = closure296()
    let v26 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v25 v24 
    let v27 : string = "$0"
    let v28 : (unit -> string) = closure297()
    let v29 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v28 v27 
    let v30 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v29(()) + \" \" + &v26(()) + \" \" + &v23(())"
    let v31 : string = ""
    let v32 : string = " " + v30 + v31 + ""
    let v33 : string = "$0"
    let v34 : (unit -> string) = closure298()
    let v35 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v34 v33 
    let v36 : string = "class=\"[font-size:12px] text-gray-400\""
    let v37 : string = " " + v36 + v31 + ""
    let v38 : leptos_dom_Fragment = v19 ()
    let v39 : string = "leptos::prelude::AnyView::from($0)"
    let v40 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v38 v39 
    let v41 : string = "dt"
    let v42 : string = "<" + v41 + " " + v37 + ">move || { v40 }</" + v41 + ">"
    let v43 : string = "leptos::prelude::view! { " + v42 + " }"
    let v44 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v43 
    let v45 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v44 |> unbox
    let v46 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v47 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v45 v46 
    let v48 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v35(())"
    let v49 : string = " " + v48 + v31 + ""
    let v50 : leptos_dom_Fragment = v20 ()
    let v51 : string = "leptos::prelude::AnyView::from($0)"
    let v52 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v50 v51 
    let v53 : string = "dd"
    let v54 : string = "<" + v53 + " " + v49 + ">move || { v52 }</" + v53 + ">"
    let v55 : string = "leptos::prelude::view! { " + v54 + " }"
    let v56 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v55 
    let v57 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v56 |> unbox
    let v58 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v59 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v57 v58 
    let v60 : string = "v59"
    let v61 : string = v60 + v31 
    let v62 : string = v61 + v31 
    let v63 : string = "v47"
    let v64 : string = ", "
    let v65 : string = v63 + v64 
    let v66 : string = v65 + v62 
    let v67 : string = "vec![" + v66 + "]"
    let v68 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v67 
    let v69 : string = "leptos::prelude::Fragment::new($0)"
    let v70 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v68 v69 
    let v71 : string = "leptos::prelude::AnyView::from($0)"
    let v72 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v70 v71 
    let v73 : string = "dl"
    let v74 : string = "<" + v73 + " " + v32 + ">move || { v72 }</" + v73 + ">"
    let v75 : string = "leptos::prelude::view! { " + v74 + " }"
    let v76 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v75 
    let v77 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v76 |> unbox
    let v78 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v79 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v78 
    let v80 : string = "true; $0 }).collect::<Vec<_>>()"
    let v81 : bool = Fable.Core.RustInterop.emitRustExpr v79 v80 
    let v82 : string = "_vec_map"
    let v83 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v82 
    let v84 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v85 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v83 v84 
    let v86 : string = "v85"
    let v87 : string = v86 + v31 
    let v88 : string = v87 + v31 
    let v89 : string = "vec![" + v88 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::Fragment::new($0)"
    let v92 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v90 v91 
    v92
and method257 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure287(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure299 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure300 () () : string =
    let v0 : string = "sm:pr-[10px]"
    v0
and closure301 () () : string =
    let v0 : string = "[flex-direction:column]"
    v0
and closure302 () () : leptos_dom_Fragment =
    let v0 : string = "Deposit"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method262 () : (unit -> leptos_dom_Fragment) =
    closure302()
and closure303 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v13 : (float -> string) = _.ToString()
    let v14 : string = v13 v8
    (* run_target_args'
    let v21 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v22 : string = "&*$0"
    let v23 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v22 
    let _run_target_args'_v21 = v23 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v24 : string = "&*$0"
    let v25 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v24 
    let _run_target_args'_v21 = v25 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v26 : string = "&*$0"
    let v27 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v26 
    let _run_target_args'_v21 = v27 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v29 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v29 
    #endif
#if FABLE_COMPILER_PYTHON
    let v33 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v33 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v37 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v37 
    #endif
#else
    let v41 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v41 
    #endif
    let v44 : Ref<Str> = _run_target_args'_v21 
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v55 
    let _run_target_args'_v54 = v56 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = "String::from($0)"
    let v58 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v57 
    let _run_target_args'_v54 = v58 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = "String::from($0)"
    let v60 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v59 
    let _run_target_args'_v54 = v60 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v62 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v62 
    #endif
#if FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v66 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v70 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v70 
    #endif
#else
    let v74 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v74 
    #endif
    let v77 : std_string_String = _run_target_args'_v54 
    let v83 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v84 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v83 
    let v85 : string = "v84"
    let v86 : string = ""
    let v87 : string = v85 + v86 
    let v88 : string = v87 + v86 
    let v89 : string = "vec![" + v88 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::Fragment::new($0)"
    let v92 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v90 v91 
    v92
and method263 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure303(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure304 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure305 () () : string =
    let v0 : string = ""
    v0
and closure306 () () : leptos_dom_Fragment =
    let v0 : string = "Outcome Status"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method264 () : (unit -> leptos_dom_Fragment) =
    closure306()
and closure307 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v13 : (bool -> string) = _.ToString()
    let v14 : string = v13 v9
    (* run_target_args'
    let v21 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v22 : string = "&*$0"
    let v23 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v22 
    let _run_target_args'_v21 = v23 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v24 : string = "&*$0"
    let v25 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v24 
    let _run_target_args'_v21 = v25 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v26 : string = "&*$0"
    let v27 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v26 
    let _run_target_args'_v21 = v27 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v29 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v29 
    #endif
#if FABLE_COMPILER_PYTHON
    let v33 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v33 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v37 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v37 
    #endif
#else
    let v41 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v41 
    #endif
    let v44 : Ref<Str> = _run_target_args'_v21 
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v55 
    let _run_target_args'_v54 = v56 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = "String::from($0)"
    let v58 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v57 
    let _run_target_args'_v54 = v58 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = "String::from($0)"
    let v60 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v59 
    let _run_target_args'_v54 = v60 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v62 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v62 
    #endif
#if FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v66 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v70 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v70 
    #endif
#else
    let v74 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v74 
    #endif
    let v77 : std_string_String = _run_target_args'_v54 
    let v83 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v84 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v83 
    let v85 : string = "v84"
    let v86 : string = ""
    let v87 : string = v85 + v86 
    let v88 : string = v87 + v86 
    let v89 : string = "vec![" + v88 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::Fragment::new($0)"
    let v92 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v90 v91 
    v92
and method265 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure307(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure308 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure309 () () : string =
    let v0 : string = ""
    v0
and closure310 () () : leptos_dom_Fragment =
    let v0 : string = "Fee"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method266 () : (unit -> leptos_dom_Fragment) =
    closure310()
and closure311 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v13 : (float -> string) = _.ToString()
    let v14 : string = v13 v10
    (* run_target_args'
    let v21 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v22 : string = "&*$0"
    let v23 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v22 
    let _run_target_args'_v21 = v23 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v24 : string = "&*$0"
    let v25 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v24 
    let _run_target_args'_v21 = v25 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v26 : string = "&*$0"
    let v27 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v26 
    let _run_target_args'_v21 = v27 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v29 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v29 
    #endif
#if FABLE_COMPILER_PYTHON
    let v33 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v33 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v37 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v37 
    #endif
#else
    let v41 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v41 
    #endif
    let v44 : Ref<Str> = _run_target_args'_v21 
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v55 
    let _run_target_args'_v54 = v56 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = "String::from($0)"
    let v58 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v57 
    let _run_target_args'_v54 = v58 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = "String::from($0)"
    let v60 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v59 
    let _run_target_args'_v54 = v60 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v62 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v62 
    #endif
#if FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v66 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v70 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v70 
    #endif
#else
    let v74 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v74 
    #endif
    let v77 : std_string_String = _run_target_args'_v54 
    let v83 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v84 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v83 
    let v85 : string = "v84"
    let v86 : string = ""
    let v87 : string = v85 + v86 
    let v88 : string = v87 + v86 
    let v89 : string = "vec![" + v88 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::Fragment::new($0)"
    let v92 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v90 v91 
    v92
and method267 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure311(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure312 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure313 () () : string =
    let v0 : string = ""
    v0
and closure314 () () : leptos_dom_Fragment =
    let v0 : string = "Block Height"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method268 () : (unit -> leptos_dom_Fragment) =
    closure314()
and closure315 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v13 : (uint32 -> string) = _.ToString()
    let v14 : string = v13 v6
    (* run_target_args'
    let v21 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v22 : string = "&*$0"
    let v23 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v22 
    let _run_target_args'_v21 = v23 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v24 : string = "&*$0"
    let v25 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v24 
    let _run_target_args'_v21 = v25 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v26 : string = "&*$0"
    let v27 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v26 
    let _run_target_args'_v21 = v27 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v29 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v29 
    #endif
#if FABLE_COMPILER_PYTHON
    let v33 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v33 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v37 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v37 
    #endif
#else
    let v41 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v41 
    #endif
    let v44 : Ref<Str> = _run_target_args'_v21 
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v55 
    let _run_target_args'_v54 = v56 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = "String::from($0)"
    let v58 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v57 
    let _run_target_args'_v54 = v58 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = "String::from($0)"
    let v60 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v59 
    let _run_target_args'_v54 = v60 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v62 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v62 
    #endif
#if FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v66 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v70 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v70 
    #endif
#else
    let v74 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v74 
    #endif
    let v77 : std_string_String = _run_target_args'_v54 
    let v83 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v84 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v83 
    let v85 : string = "v84"
    let v86 : string = ""
    let v87 : string = v85 + v86 
    let v88 : string = v87 + v86 
    let v89 : string = "vec![" + v88 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::Fragment::new($0)"
    let v92 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v90 v91 
    v92
and method269 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure315(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure316 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure317 () () : string =
    let v0 : string = ""
    v0
and closure318 () () : leptos_dom_Fragment =
    let v0 : string = "Hash"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method270 () : (unit -> leptos_dom_Fragment) =
    closure318()
and closure319 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v3 v12 
    (* run_target_args'
    let v18 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v19 
    let _run_target_args'_v18 = v20 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v21 
    let _run_target_args'_v18 = v22 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v23 
    let _run_target_args'_v18 = v24 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v26 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v26 
    #endif
#if FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v30 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v34 
    #endif
#else
    let v38 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v38 
    #endif
    let v41 : Ref<Str> = _run_target_args'_v18 
    (* run_target_args'
    let v51 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v52 
    let _run_target_args'_v51 = v53 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v54 : string = "String::from($0)"
    let v55 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v54 
    let _run_target_args'_v51 = v55 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v56 : string = "String::from($0)"
    let v57 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v56 
    let _run_target_args'_v51 = v57 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v59 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v59 
    #endif
#if FABLE_COMPILER_PYTHON
    let v63 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v63 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v67 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v67 
    #endif
#else
    let v71 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v71 
    #endif
    let v74 : std_string_String = _run_target_args'_v51 
    let v80 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v74 v80 
    let v82 : string = "v81"
    let v83 : string = ""
    let v84 : string = v82 + v83 
    let v85 : string = v84 + v83 
    let v86 : string = "vec![" + v85 + "]"
    let v87 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v86 
    let v88 : string = "leptos::prelude::Fragment::new($0)"
    let v89 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v87 v88 
    v89
and method271 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure319(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure320 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure321 () () : string =
    let v0 : string = ""
    v0
and closure322 () () : leptos_dom_Fragment =
    let v0 : string = "Block Hash"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method272 () : (unit -> leptos_dom_Fragment) =
    closure322()
and closure323 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v4 v12 
    (* run_target_args'
    let v18 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v19 
    let _run_target_args'_v18 = v20 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v21 
    let _run_target_args'_v18 = v22 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v23 
    let _run_target_args'_v18 = v24 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v26 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v26 
    #endif
#if FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v30 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v34 
    #endif
#else
    let v38 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v38 
    #endif
    let v41 : Ref<Str> = _run_target_args'_v18 
    (* run_target_args'
    let v51 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v52 
    let _run_target_args'_v51 = v53 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v54 : string = "String::from($0)"
    let v55 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v54 
    let _run_target_args'_v51 = v55 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v56 : string = "String::from($0)"
    let v57 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v56 
    let _run_target_args'_v51 = v57 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v59 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v59 
    #endif
#if FABLE_COMPILER_PYTHON
    let v63 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v63 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v67 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v67 
    #endif
#else
    let v71 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v71 
    #endif
    let v74 : std_string_String = _run_target_args'_v51 
    let v80 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v74 v80 
    let v82 : string = "v81"
    let v83 : string = ""
    let v84 : string = v82 + v83 
    let v85 : string = v84 + v83 
    let v86 : string = "vec![" + v85 + "]"
    let v87 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v86 
    let v88 : string = "leptos::prelude::Fragment::new($0)"
    let v89 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v87 v88 
    v89
and method273 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure323(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure324 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure325 () () : string =
    let v0 : string = ""
    v0
and closure326 () () : leptos_dom_Fragment =
    let v0 : string = "Receipt ID"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method274 () : (unit -> leptos_dom_Fragment) =
    closure326()
and closure327 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v0 v12 
    (* run_target_args'
    let v18 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v19 
    let _run_target_args'_v18 = v20 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v21 
    let _run_target_args'_v18 = v22 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v23 
    let _run_target_args'_v18 = v24 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v26 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v26 
    #endif
#if FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v30 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v34 
    #endif
#else
    let v38 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v38 
    #endif
    let v41 : Ref<Str> = _run_target_args'_v18 
    (* run_target_args'
    let v51 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v52 
    let _run_target_args'_v51 = v53 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v54 : string = "String::from($0)"
    let v55 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v54 
    let _run_target_args'_v51 = v55 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v56 : string = "String::from($0)"
    let v57 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v56 
    let _run_target_args'_v51 = v57 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v59 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v59 
    #endif
#if FABLE_COMPILER_PYTHON
    let v63 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v63 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v67 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v67 
    #endif
#else
    let v71 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v71 
    #endif
    let v74 : std_string_String = _run_target_args'_v51 
    let v80 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v74 v80 
    let v82 : string = "v81"
    let v83 : string = ""
    let v84 : string = v82 + v83 
    let v85 : string = v84 + v83 
    let v86 : string = "vec![" + v85 + "]"
    let v87 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v86 
    let v88 : string = "leptos::prelude::Fragment::new($0)"
    let v89 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v87 v88 
    v89
and method275 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure327(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure328 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure329 () () : string =
    let v0 : string = ""
    v0
and closure330 () () : leptos_dom_Fragment =
    let v0 : string = "Logs"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method276 () : (unit -> leptos_dom_Fragment) =
    closure330()
and method278 (v0 : Func0<std_string_String, string>) : Func0<std_string_String, string> =
    v0
and closure332 (v0 : Func0<std_string_String, string>) (v1 : std_string_String) : string =
    let v2 : Func0<std_string_String, string> = method278(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : string = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method279 () : string =
    let v0 : string = "\n"
    v0
and closure333 () () : string =
    let v0 : string = "[max-height:20vh]"
    v0
and closure331 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "$0.to_vec()"
    let v13 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v11 v12 
    let v14 : unit = ()
    let v15 : string = $"true; let _func1_from_v14 = Func1::from(move |value| {{ //"
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = $"value"
    let v18 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v17 
    let v19 : string = "fable_library_rust::String_::fromString($0)"
    let v20 : string = Fable.Core.RustInterop.emitRustExpr v18 v19 
    let func1_from_result = v20 //
    let v21 : _ = func1_from_result
    let v22 : string = $"true; $0 /*"
    let v23 : bool = Fable.Core.RustInterop.emitRustExpr v21 v22 
    let v24 : string = $"*/ }}); //"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr () v24 
    let v26 : string = $"_func1_from_v14"
    let v27 : Func0<std_string_String, string> = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v29 : (std_string_String -> string) = closure332(v27)
    let v30 : Vec<string> = Fable.Core.RustInterop.emitRustExpr struct (v13, v29) v28 
    let v31 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v32 : (string []) = Fable.Core.RustInterop.emitRustExpr v30 v31 
    let v34 : string seq = v32 |> Seq.ofArray
    let v39 : string = method279()
    let v40 : (string -> (string seq -> string)) = String.concat
    let v41 : (string seq -> string) = v40 v39
    let v42 : string = v41 v34
    let v46 : string = "\\n"
    let v47 : string = "\n"
    let v48 : string = v42.Replace (v46, v47)
    let v49 : string = "$0"
    let v50 : (unit -> string) = closure333()
    let v51 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v50 v49 
    let v52 : string = "class=move || \"[padding:1px] [font-size:12px] [line-height:12px] [text-wrap:pretty] \".to_owned() + &v51(())"
    let v53 : string = ""
    let v54 : string = " " + v52 + v53 + ""
    (* run_target_args'
    let v59 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v60 : string = "&*$0"
    let v61 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v48 v60 
    let _run_target_args'_v59 = v61 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v62 : string = "&*$0"
    let v63 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v48 v62 
    let _run_target_args'_v59 = v63 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v64 : string = "&*$0"
    let v65 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v48 v64 
    let _run_target_args'_v59 = v65 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v67 : Ref<Str> = v48 |> unbox<Ref<Str>>
    let _run_target_args'_v59 = v67 
    #endif
#if FABLE_COMPILER_PYTHON
    let v71 : Ref<Str> = v48 |> unbox<Ref<Str>>
    let _run_target_args'_v59 = v71 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v75 : Ref<Str> = v48 |> unbox<Ref<Str>>
    let _run_target_args'_v59 = v75 
    #endif
#else
    let v79 : Ref<Str> = v48 |> unbox<Ref<Str>>
    let _run_target_args'_v59 = v79 
    #endif
    let v82 : Ref<Str> = _run_target_args'_v59 
    (* run_target_args'
    let v92 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v93 : string = "String::from($0)"
    let v94 : std_string_String = Fable.Core.RustInterop.emitRustExpr v82 v93 
    let _run_target_args'_v92 = v94 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v95 : string = "String::from($0)"
    let v96 : std_string_String = Fable.Core.RustInterop.emitRustExpr v82 v95 
    let _run_target_args'_v92 = v96 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v97 : string = "String::from($0)"
    let v98 : std_string_String = Fable.Core.RustInterop.emitRustExpr v82 v97 
    let _run_target_args'_v92 = v98 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v100 : std_string_String = v82 |> unbox<std_string_String>
    let _run_target_args'_v92 = v100 
    #endif
#if FABLE_COMPILER_PYTHON
    let v104 : std_string_String = v82 |> unbox<std_string_String>
    let _run_target_args'_v92 = v104 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v108 : std_string_String = v82 |> unbox<std_string_String>
    let _run_target_args'_v92 = v108 
    #endif
#else
    let v112 : std_string_String = v82 |> unbox<std_string_String>
    let _run_target_args'_v92 = v112 
    #endif
    let v115 : std_string_String = _run_target_args'_v92 
    let v121 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v122 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v115 v121 
    let v123 : string = "v122"
    let v124 : string = v123 + v53 
    let v125 : string = v124 + v53 
    let v126 : string = "vec![" + v125 + "]"
    let v127 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v126 
    let v128 : string = "leptos::prelude::Fragment::new($0)"
    let v129 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v127 v128 
    let v130 : string = "leptos::prelude::AnyView::from($0)"
    let v131 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v129 v130 
    let v132 : string = "pre"
    let v133 : string = "<" + v132 + " " + v54 + ">move || { v131 }</" + v132 + ">"
    let v134 : string = "leptos::prelude::view! { " + v133 + " }"
    let v135 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v134 
    let v136 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v135 |> unbox
    let v137 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v138 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v136 v137 
    let v139 : string = "v138"
    let v140 : string = v139 + v53 
    let v141 : string = v140 + v53 
    let v142 : string = "vec![" + v141 + "]"
    let v143 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v142 
    let v144 : string = "leptos::prelude::Fragment::new($0)"
    let v145 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v143 v144 
    v145
and method277 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure331(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure334 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure335 () () : string =
    let v0 : string = ""
    v0
and closure336 () () : string =
    let v0 : string = "[max-height:20vh] [width:100vw] [max-width:100vw]"
    v0
and method281 (v0 : (std_string_String []), v1 : int32) : bool =
    let v2 : int32 = v0.Length
    let v3 : bool = v1 < v2
    if v3 then
        let v4 : std_string_String = v0.[int v1]
        let v5 : string = "fable_library_rust::String_::fromString($0)"
        let v6 : string = Fable.Core.RustInterop.emitRustExpr v4 v5 
        let v7 : int32 = v6.Length
        let v8 : bool = v7 > 0
        if v8 then
            true
        else
            let v9 : int32 = v1 + 1
            method281(v0, v9)
    else
        false
and method280 (v0 : (struct (string * unativeint * Heap5) []), v1 : int32) : bool =
    let v2 : int32 = v0.Length
    let v3 : bool = v1 < v2
    if v3 then
        let struct (v4 : string, v5 : unativeint, v6 : Heap5) = v0.[int v1]
        let v7 : (std_string_String []) = v6.l11
        let v8 : int32 = 0
        let v9 : bool = method281(v7, v8)
        if v9 then
            true
        else
            let v10 : int32 = v1 + 1
            method280(v0, v10)
    else
        false
and closure260 (v0 : Heap2, v1 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>, v2 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>>, v3 : leptos_prelude_ReadSignal<bool>) () : leptos_dom_Fragment =
    let v4 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v144 : leptos_prelude_AnyView_ =
        if v5 then
            let v6 : string = "class=\"px-[12px] py-[10px]\""
            let v7 : string = ""
            let v8 : string = " " + v6 + v7 + ""
            let v9 : string = "class=\"flex items-center pb-[6px]\""
            let v10 : string = " " + v9 + v7 + ""
            let v11 : string = "class=\"pr-[15px] [font-size:13px]\""
            let v12 : string = " " + v11 + v7 + ""
            let v13 : string = "Func0::new(move || $0())"
            let v14 : (unit -> leptos_dom_Fragment) = closure261()
            let v15 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v14 v13 
            let v16 : Func0<leptos_dom_Fragment> = method195(v15)
            let v17 : string = "(move || v16())()"
            let v18 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v17 
            let v19 : string = "leptos::prelude::AnyView::from($0)"
            let v20 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v18 v19 
            let v21 : string = "span"
            let v22 : string = "<" + v21 + " " + v12 + ">move || { v20 }</" + v21 + ">"
            let v23 : string = "leptos::prelude::view! { " + v22 + " }"
            let v24 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v23 
            let v25 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v24 |> unbox
            let v26 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v27 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v25 v26 
            let v28 : string = "class=\"h-px flex-1 bg-gray-300\""
            let v29 : string = " " + v28 + v7 + ""
            let v30 : string = "vec![" + v7 + "]"
            let v31 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v30 
            let v32 : string = "leptos::prelude::Fragment::new($0)"
            let v33 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v31 v32 
            let v34 : string = "leptos::prelude::AnyView::from($0)"
            let v35 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v33 v34 
            let v36 : string = "<" + v21 + " " + v29 + ">move || { v35 }</" + v21 + ">"
            let v37 : string = "leptos::prelude::view! { " + v36 + " }"
            let v38 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v37 
            let v39 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v38 |> unbox
            let v40 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v41 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v39 v40 
            let v42 : string = "v41"
            let v43 : string = v42 + v7 
            let v44 : string = v43 + v7 
            let v45 : string = "v27"
            let v46 : string = ", "
            let v47 : string = v45 + v46 
            let v48 : string = v47 + v44 
            let v49 : string = "vec![" + v48 + "]"
            let v50 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v49 
            let v51 : string = "leptos::prelude::Fragment::new($0)"
            let v52 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v50 v51 
            let v53 : string = "leptos::prelude::AnyView::from($0)"
            let v54 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v52 v53 
            let v55 : string = "<" + v21 + " " + v10 + ">move || { v54 }</" + v21 + ">"
            let v56 : string = "leptos::prelude::view! { " + v55 + " }"
            let v57 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v56 
            let v58 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v57 |> unbox
            let v59 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v60 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v58 v59 
            let v61 : (unit -> leptos_dom_Fragment) = method244()
            let v62 : (unit -> leptos_dom_Fragment) = method245(v0)
            let v63 : string = "$0"
            let v64 : (unit -> string) = closure268()
            let v65 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v64 v63 
            let v66 : string = "$0"
            let v67 : (unit -> string) = closure234()
            let v68 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v67 v66 
            let v69 : string = "$0"
            let v70 : (unit -> string) = closure235()
            let v71 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v70 v69 
            let v72 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v71(()) + \" \" + &v68(()) + \" \" + &v65(())"
            let v73 : string = " " + v72 + v7 + ""
            let v74 : string = "$0"
            let v75 : (unit -> string) = closure236()
            let v76 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v75 v74 
            let v77 : string = "class=\"[font-size:12px] text-gray-400\""
            let v78 : string = " " + v77 + v7 + ""
            let v79 : leptos_dom_Fragment = v61 ()
            let v80 : string = "leptos::prelude::AnyView::from($0)"
            let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v79 v80 
            let v82 : string = "dt"
            let v83 : string = "<" + v82 + " " + v78 + ">move || { v81 }</" + v82 + ">"
            let v84 : string = "leptos::prelude::view! { " + v83 + " }"
            let v85 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v84 
            let v86 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v85 |> unbox
            let v87 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v88 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v86 v87 
            let v89 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v76(())"
            let v90 : string = " " + v89 + v7 + ""
            let v91 : leptos_dom_Fragment = v62 ()
            let v92 : string = "leptos::prelude::AnyView::from($0)"
            let v93 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v91 v92 
            let v94 : string = "dd"
            let v95 : string = "<" + v94 + " " + v90 + ">move || { v93 }</" + v94 + ">"
            let v96 : string = "leptos::prelude::view! { " + v95 + " }"
            let v97 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v96 
            let v98 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v97 |> unbox
            let v99 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v100 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v98 v99 
            let v101 : string = "v100"
            let v102 : string = v101 + v7 
            let v103 : string = v102 + v7 
            let v104 : string = "v88"
            let v105 : string = v104 + v46 
            let v106 : string = v105 + v103 
            let v107 : string = "vec![" + v106 + "]"
            let v108 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v107 
            let v109 : string = "leptos::prelude::Fragment::new($0)"
            let v110 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v108 v109 
            let v111 : string = "leptos::prelude::AnyView::from($0)"
            let v112 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v110 v111 
            let v113 : string = "dl"
            let v114 : string = "<" + v113 + " " + v73 + ">move || { v112 }</" + v113 + ">"
            let v115 : string = "leptos::prelude::view! { " + v114 + " }"
            let v116 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v115 
            let v117 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v116 |> unbox
            let v118 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v119 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v117 v118 
            let v120 : string = "v119"
            let v121 : string = v120 + v7 
            let v122 : string = v121 + v7 
            let v123 : string = "v60"
            let v124 : string = v123 + v46 
            let v125 : string = v124 + v122 
            let v126 : string = "vec![" + v125 + "]"
            let v127 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v126 
            let v128 : string = "leptos::prelude::Fragment::new($0)"
            let v129 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v127 v128 
            let v130 : string = "leptos::prelude::AnyView::from($0)"
            let v131 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v129 v130 
            let v132 : string = "div"
            let v133 : string = "<" + v132 + " " + v8 + ">move || { v131 }</" + v132 + ">"
            let v134 : string = "leptos::prelude::view! { " + v133 + " }"
            let v135 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v134 
            let v136 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v135 |> unbox
            let v137 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v138 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v136 v137 
            v138
        else
            let v139 : string = ""
            let v140 : string = "vec![" + v139 + "]"
            let v141 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v140 
            let v142 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v143 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v141 v142 
            v143
    let v145 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v146 : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr v2 v145 
    let v147 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v148 : (struct (string * Vec<struct (string * US23 * string * bool * bool)>) []) = Fable.Core.RustInterop.emitRustExpr v146 v147 
    let v149 : uint64 = System.Convert.ToUInt64 v148.Length
    let v150 : bool = v149 = 0UL
    let v4601 : leptos_prelude_AnyView_ =
        if v150 then
            let v151 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
            let v152 : string = ""
            let v153 : string = " " + v151 + v152 + ""
            let v154 : string = "class=\"[height:17px]\""
            let v155 : string = " " + v154 + v152 + ""
            let v156 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v157 : string = "fill=\"none\""
            let v158 : string = "height=\"100%\""
            let v159 : string = "viewBox=\"0 0 24 24\""
            let v160 : string = "stroke-width=\"1.5\""
            let v161 : string = "stroke=\"currentColor\""
            let v162 : string = "class=\"text-red-700\""
            let v163 : string = " " + v156 + v152 + ""
            let v164 : string = " " + v157 + v163 + ""
            let v165 : string = " " + v158 + v164 + ""
            let v166 : string = " " + v159 + v165 + ""
            let v167 : string = " " + v160 + v166 + ""
            let v168 : string = " " + v161 + v167 + ""
            let v169 : string = " " + v162 + v168 + ""
            let v170 : string = "stroke-linecap=\"round\""
            let v171 : string = "stroke-linejoin=\"round\""
            let v172 : string = "d=\"M6 18L18 6M6 6l12 12\""
            let v173 : string = " " + v170 + v152 + ""
            let v174 : string = " " + v171 + v173 + ""
            let v175 : string = " " + v172 + v174 + ""
            let v176 : string = "vec![" + v152 + "]"
            let v177 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v176 
            let v178 : string = "leptos::prelude::Fragment::new($0)"
            let v179 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v177 v178 
            let v180 : string = "leptos::prelude::AnyView::from($0)"
            let v181 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v179 v180 
            let v182 : string = "path"
            let v183 : string = "<" + v182 + " " + v175 + ">move || { v181 }</" + v182 + ">"
            let v184 : string = "leptos::prelude::view! { " + v183 + " }"
            let v185 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v184 
            let v186 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v185 |> unbox
            let v187 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v188 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v186 v187 
            let v189 : string = "v188"
            let v190 : string = v189 + v152 
            let v191 : string = v190 + v152 
            let v192 : string = "vec![" + v191 + "]"
            let v193 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v192 
            let v194 : string = "leptos::prelude::Fragment::new($0)"
            let v195 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v193 v194 
            let v196 : string = "leptos::prelude::AnyView::from($0)"
            let v197 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v195 v196 
            let v198 : string = "svg"
            let v199 : string = "<" + v198 + " " + v169 + ">move || { v197 }</" + v198 + ">"
            let v200 : string = "leptos::prelude::view! { " + v199 + " }"
            let v201 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v200 
            let v202 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v201 |> unbox
            let v203 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v204 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v202 v203 
            let v205 : string = "v204"
            let v206 : string = v205 + v152 
            let v207 : string = v206 + v152 
            let v208 : string = "vec![" + v207 + "]"
            let v209 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v208 
            let v210 : string = "leptos::prelude::Fragment::new($0)"
            let v211 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v209 v210 
            let v212 : string = "leptos::prelude::AnyView::from($0)"
            let v213 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v211 v212 
            let v214 : string = "span"
            let v215 : string = "<" + v214 + " " + v155 + ">move || { v213 }</" + v214 + ">"
            let v216 : string = "leptos::prelude::view! { " + v215 + " }"
            let v217 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v216 
            let v218 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v217 |> unbox
            let v219 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v220 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v218 v219 
            let v221 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
            let v222 : string = " " + v221 + v152 + ""
            let v223 : string = "No account selected"
            (* run_target_args'
            let v228 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v229 : string = "&*$0"
            let v230 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v223 v229 
            let _run_target_args'_v228 = v230 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v231 : string = "&*$0"
            let v232 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v223 v231 
            let _run_target_args'_v228 = v232 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v233 : string = "&*$0"
            let v234 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v223 v233 
            let _run_target_args'_v228 = v234 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v236 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v236 
            #endif
#if FABLE_COMPILER_PYTHON
            let v240 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v240 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v244 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v244 
            #endif
#else
            let v248 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v248 
            #endif
            let v251 : Ref<Str> = _run_target_args'_v228 
            (* run_target_args'
            let v261 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v262 : string = "String::from($0)"
            let v263 : std_string_String = Fable.Core.RustInterop.emitRustExpr v251 v262 
            let _run_target_args'_v261 = v263 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v264 : string = "String::from($0)"
            let v265 : std_string_String = Fable.Core.RustInterop.emitRustExpr v251 v264 
            let _run_target_args'_v261 = v265 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v266 : string = "String::from($0)"
            let v267 : std_string_String = Fable.Core.RustInterop.emitRustExpr v251 v266 
            let _run_target_args'_v261 = v267 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v269 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v261 = v269 
            #endif
#if FABLE_COMPILER_PYTHON
            let v273 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v261 = v273 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v277 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v261 = v277 
            #endif
#else
            let v281 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v261 = v281 
            #endif
            let v284 : std_string_String = _run_target_args'_v261 
            let v290 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v291 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v284 v290 
            let v292 : string = "v291"
            let v293 : string = v292 + v152 
            let v294 : string = v293 + v152 
            let v295 : string = "vec![" + v294 + "]"
            let v296 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v295 
            let v297 : string = "leptos::prelude::Fragment::new($0)"
            let v298 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v296 v297 
            let v299 : string = "leptos::prelude::AnyView::from($0)"
            let v300 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v298 v299 
            let v301 : string = "pre"
            let v302 : string = "<" + v301 + " " + v222 + ">move || { v300 }</" + v301 + ">"
            let v303 : string = "leptos::prelude::view! { " + v302 + " }"
            let v304 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v303 
            let v305 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v304 |> unbox
            let v306 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v307 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v305 v306 
            let v308 : string = "v307"
            let v309 : string = v308 + v152 
            let v310 : string = v309 + v152 
            let v311 : string = "v220"
            let v312 : string = ", "
            let v313 : string = v311 + v312 
            let v314 : string = v313 + v310 
            let v315 : string = "vec![" + v314 + "]"
            let v316 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v315 
            let v317 : string = "leptos::prelude::Fragment::new($0)"
            let v318 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v316 v317 
            let v319 : string = "leptos::prelude::AnyView::from($0)"
            let v320 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v318 v319 
            let v321 : string = "div"
            let v322 : string = "<" + v321 + " " + v153 + ">move || { v320 }</" + v321 + ">"
            let v323 : string = "leptos::prelude::view! { " + v322 + " }"
            let v324 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v323 
            let v325 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v324 |> unbox
            let v326 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v327 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v325 v326 
            v327
        else
            let v328 : string = $"leptos::prelude::ArcMemo::get(&$0)"
            let v329 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v1 v328 
            let v330 : ((struct (string * unativeint * Heap5) []) option -> US53) = method138()
            let v331 : (std_string_String -> US53) = method139()
            let v333 : US53 = match v329 with Ok x -> v330 x | Error x -> v331 x
            let v369 : US46 =
                match v333 with
                | US53_1(v366) -> (* Error *)
                    US46_1(v366)
                | US53_0(v336) -> (* Ok *)
                    let v339 : ((struct (string * unativeint * Heap5) []) -> US47) = method140()
                    let v340 : US47 option = v336 |> Option.map v339 
                    let v360 : US47 = US47_1
                    let v361 : US47 = v340 |> Option.defaultValue v360 
                    US46_0(v361)
            match v369 with
            | US46_1(v4420) -> (* Error *)
                let v4421 : string = "fable_library_rust::String_::fromString($0)"
                let v4422 : string = Fable.Core.RustInterop.emitRustExpr v4420 v4421 
                let v4423 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
                let v4424 : string = ""
                let v4425 : string = " " + v4423 + v4424 + ""
                let v4426 : string = "class=\"[height:17px]\""
                let v4427 : string = " " + v4426 + v4424 + ""
                let v4428 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                let v4429 : string = "fill=\"none\""
                let v4430 : string = "height=\"100%\""
                let v4431 : string = "viewBox=\"0 0 24 24\""
                let v4432 : string = "stroke-width=\"1.5\""
                let v4433 : string = "stroke=\"currentColor\""
                let v4434 : string = "class=\"text-red-700\""
                let v4435 : string = " " + v4428 + v4424 + ""
                let v4436 : string = " " + v4429 + v4435 + ""
                let v4437 : string = " " + v4430 + v4436 + ""
                let v4438 : string = " " + v4431 + v4437 + ""
                let v4439 : string = " " + v4432 + v4438 + ""
                let v4440 : string = " " + v4433 + v4439 + ""
                let v4441 : string = " " + v4434 + v4440 + ""
                let v4442 : string = "stroke-linecap=\"round\""
                let v4443 : string = "stroke-linejoin=\"round\""
                let v4444 : string = "d=\"M6 18L18 6M6 6l12 12\""
                let v4445 : string = " " + v4442 + v4424 + ""
                let v4446 : string = " " + v4443 + v4445 + ""
                let v4447 : string = " " + v4444 + v4446 + ""
                let v4448 : string = "vec![" + v4424 + "]"
                let v4449 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4448 
                let v4450 : string = "leptos::prelude::Fragment::new($0)"
                let v4451 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4449 v4450 
                let v4452 : string = "leptos::prelude::AnyView::from($0)"
                let v4453 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4451 v4452 
                let v4454 : string = "path"
                let v4455 : string = "<" + v4454 + " " + v4447 + ">move || { v4453 }</" + v4454 + ">"
                let v4456 : string = "leptos::prelude::view! { " + v4455 + " }"
                let v4457 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4456 
                let v4458 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4457 |> unbox
                let v4459 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v4460 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4458 v4459 
                let v4461 : string = "v4460"
                let v4462 : string = v4461 + v4424 
                let v4463 : string = v4462 + v4424 
                let v4464 : string = "vec![" + v4463 + "]"
                let v4465 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4464 
                let v4466 : string = "leptos::prelude::Fragment::new($0)"
                let v4467 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4465 v4466 
                let v4468 : string = "leptos::prelude::AnyView::from($0)"
                let v4469 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4467 v4468 
                let v4470 : string = "svg"
                let v4471 : string = "<" + v4470 + " " + v4441 + ">move || { v4469 }</" + v4470 + ">"
                let v4472 : string = "leptos::prelude::view! { " + v4471 + " }"
                let v4473 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4472 
                let v4474 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4473 |> unbox
                let v4475 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v4476 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4474 v4475 
                let v4477 : string = "v4476"
                let v4478 : string = v4477 + v4424 
                let v4479 : string = v4478 + v4424 
                let v4480 : string = "vec![" + v4479 + "]"
                let v4481 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4480 
                let v4482 : string = "leptos::prelude::Fragment::new($0)"
                let v4483 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4481 v4482 
                let v4484 : string = "leptos::prelude::AnyView::from($0)"
                let v4485 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4483 v4484 
                let v4486 : string = "span"
                let v4487 : string = "<" + v4486 + " " + v4427 + ">move || { v4485 }</" + v4486 + ">"
                let v4488 : string = "leptos::prelude::view! { " + v4487 + " }"
                let v4489 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4488 
                let v4490 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4489 |> unbox
                let v4491 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v4492 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4490 v4491 
                let v4493 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
                let v4494 : string = " " + v4493 + v4424 + ""
                (* run_target_args'
                let v4499 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v4500 : string = "&*$0"
                let v4501 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4422 v4500 
                let _run_target_args'_v4499 = v4501 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v4502 : string = "&*$0"
                let v4503 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4422 v4502 
                let _run_target_args'_v4499 = v4503 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v4504 : string = "&*$0"
                let v4505 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4422 v4504 
                let _run_target_args'_v4499 = v4505 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v4507 : Ref<Str> = v4422 |> unbox<Ref<Str>>
                let _run_target_args'_v4499 = v4507 
                #endif
#if FABLE_COMPILER_PYTHON
                let v4511 : Ref<Str> = v4422 |> unbox<Ref<Str>>
                let _run_target_args'_v4499 = v4511 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v4515 : Ref<Str> = v4422 |> unbox<Ref<Str>>
                let _run_target_args'_v4499 = v4515 
                #endif
#else
                let v4519 : Ref<Str> = v4422 |> unbox<Ref<Str>>
                let _run_target_args'_v4499 = v4519 
                #endif
                let v4522 : Ref<Str> = _run_target_args'_v4499 
                (* run_target_args'
                let v4532 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v4533 : string = "String::from($0)"
                let v4534 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4522 v4533 
                let _run_target_args'_v4532 = v4534 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v4535 : string = "String::from($0)"
                let v4536 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4522 v4535 
                let _run_target_args'_v4532 = v4536 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v4537 : string = "String::from($0)"
                let v4538 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4522 v4537 
                let _run_target_args'_v4532 = v4538 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v4540 : std_string_String = v4522 |> unbox<std_string_String>
                let _run_target_args'_v4532 = v4540 
                #endif
#if FABLE_COMPILER_PYTHON
                let v4544 : std_string_String = v4522 |> unbox<std_string_String>
                let _run_target_args'_v4532 = v4544 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v4548 : std_string_String = v4522 |> unbox<std_string_String>
                let _run_target_args'_v4532 = v4548 
                #endif
#else
                let v4552 : std_string_String = v4522 |> unbox<std_string_String>
                let _run_target_args'_v4532 = v4552 
                #endif
                let v4555 : std_string_String = _run_target_args'_v4532 
                let v4561 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                let v4562 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4555 v4561 
                let v4563 : string = "v4562"
                let v4564 : string = v4563 + v4424 
                let v4565 : string = v4564 + v4424 
                let v4566 : string = "vec![" + v4565 + "]"
                let v4567 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4566 
                let v4568 : string = "leptos::prelude::Fragment::new($0)"
                let v4569 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4567 v4568 
                let v4570 : string = "leptos::prelude::AnyView::from($0)"
                let v4571 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4569 v4570 
                let v4572 : string = "pre"
                let v4573 : string = "<" + v4572 + " " + v4494 + ">move || { v4571 }</" + v4572 + ">"
                let v4574 : string = "leptos::prelude::view! { " + v4573 + " }"
                let v4575 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4574 
                let v4576 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v4575 |> unbox
                let v4577 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v4578 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4576 v4577 
                let v4579 : string = "v4578"
                let v4580 : string = v4579 + v4424 
                let v4581 : string = v4580 + v4424 
                let v4582 : string = "v4492"
                let v4583 : string = ", "
                let v4584 : string = v4582 + v4583 
                let v4585 : string = v4584 + v4581 
                let v4586 : string = "vec![" + v4585 + "]"
                let v4587 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4586 
                let v4588 : string = "leptos::prelude::Fragment::new($0)"
                let v4589 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4587 v4588 
                let v4590 : string = "leptos::prelude::AnyView::from($0)"
                let v4591 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4589 v4590 
                let v4592 : string = "div"
                let v4593 : string = "<" + v4592 + " " + v4425 + ">move || { v4591 }</" + v4592 + ">"
                let v4594 : string = "leptos::prelude::view! { " + v4593 + " }"
                let v4595 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4594 
                let v4596 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4595 |> unbox
                let v4597 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v4598 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4596 v4597 
                v4598
            | US46_0(v370) -> (* Ok *)
                match v370 with
                | US47_0(v371) -> (* Some *)
                    let v372 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
                    let v373 : string = "Box::pin($0)"
                    let v374 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v372 v373 
                    let v375 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                    let v376 : Heap1 = Fable.Core.RustInterop.emitRustExpr v374 v375 
                    let v377 : leptos_prelude_ArcRwSignal<Heap0> = v376.l3
                    let v378 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
                    let v379 : Heap0 = Fable.Core.RustInterop.emitRustExpr v377 v378 
                    let v380 : US1 = v379.l4
                    let v381 : bool =
                        match v380 with
                        | US1_0 -> (* Details *)
                            true
                        | _ ->
                            false
                    if v381 then
                        let v382 : string = "class=\"grid flex-1 py-[10px] px-[12px] [gap:15px] sm:[grid-template-columns:repeat(auto-fill,minmax(500px,1fr))]\""
                        let v383 : string = ""
                        let v384 : string = " " + v382 + v383 + ""
                        let v385 : string = "$0.to_vec()"
                        let v386 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr v371 v385 
                        let v387 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                        let v388 : bool = Fable.Core.RustInterop.emitRustExpr v386 v387 
                        let v389 : string = "x"
                        let struct (v390 : string, v391 : unativeint, v392 : Heap5) = Fable.Core.RustInterop.emitRustExpr () v389 
                        let v393 : std_string_String = v392.l0
                        let v394 : std_string_String = v392.l1
                        let v395 : std_string_String = v392.l2
                        let v396 : std_string_String = v392.l3
                        let v397 : std_string_String = v392.l4
                        let v398 : std_string_String = v392.l5
                        let v399 : uint32 = v392.l6
                        let v400 : (struct (std_string_String * std_string_String option) []) = v392.l7
                        let v401 : float = v392.l8
                        let v402 : bool = v392.l9
                        let v403 : float = v392.l10
                        let v404 : (std_string_String []) = v392.l11
                        let v406 : (unativeint -> int64) = int64
                        let v407 : int64 = v406 v391
                        let v410 : string = "transaction.render (1)"
                        let v411 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v412 : bool = Fable.Core.RustInterop.emitRustExpr v410 v411 
                        let v413 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
                        let v414 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v413 
                        let v415 : string = "$0.unwrap()"
                        let v416 : Heap2 = Fable.Core.RustInterop.emitRustExpr v414 v415 
                        let v417 : string = "class=\"flex flex-1 flex-col overflow-x-auto\""
                        let v418 : string = " " + v417 + v383 + ""
                        let v419 : string = "class=\"flex items-center pb-[6px]\""
                        let v420 : string = " " + v419 + v383 + ""
                        let v421 : string = "class=\"pr-[15px] [font-size:13px]\""
                        let v422 : string = " " + v421 + v383 + ""
                        let v423 : string = "Func0::new(move || $0())"
                        let v424 : (unit -> leptos_dom_Fragment) = closure269(v407)
                        let v425 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v424 v423 
                        let v426 : Func0<leptos_dom_Fragment> = method195(v425)
                        let v427 : string = "(move || v426())()"
                        let v428 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v427 
                        let v429 : string = "leptos::prelude::AnyView::from($0)"
                        let v430 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v428 v429 
                        let v431 : string = "span"
                        let v432 : string = "<" + v431 + " " + v422 + ">move || { v430 }</" + v431 + ">"
                        let v433 : string = "leptos::prelude::view! { " + v432 + " }"
                        let v434 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v433 
                        let v435 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v434 |> unbox
                        let v436 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v437 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v435 v436 
                        let v438 : string = "class=\"h-px flex-1 bg-gray-300\""
                        let v439 : string = " " + v438 + v383 + ""
                        let v440 : string = "vec![" + v383 + "]"
                        let v441 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v440 
                        let v442 : string = "leptos::prelude::Fragment::new($0)"
                        let v443 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v441 v442 
                        let v444 : string = "leptos::prelude::AnyView::from($0)"
                        let v445 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v443 v444 
                        let v446 : string = "<" + v431 + " " + v439 + ">move || { v445 }</" + v431 + ">"
                        let v447 : string = "leptos::prelude::view! { " + v446 + " }"
                        let v448 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v447 
                        let v449 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v448 |> unbox
                        let v450 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v451 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v449 v450 
                        let v452 : string = "v451"
                        let v453 : string = v452 + v383 
                        let v454 : string = v453 + v383 
                        let v455 : string = "v437"
                        let v456 : string = ", "
                        let v457 : string = v455 + v456 
                        let v458 : string = v457 + v454 
                        let v459 : string = "vec![" + v458 + "]"
                        let v460 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v459 
                        let v461 : string = "leptos::prelude::Fragment::new($0)"
                        let v462 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v460 v461 
                        let v463 : string = "leptos::prelude::AnyView::from($0)"
                        let v464 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v462 v463 
                        let v465 : string = "<" + v431 + " " + v420 + ">move || { v464 }</" + v431 + ">"
                        let v466 : string = "leptos::prelude::view! { " + v465 + " }"
                        let v467 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v466 
                        let v468 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v467 |> unbox
                        let v469 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v470 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v468 v469 
                        let v471 : string = "class=\"grid flex-1 divide-y-[1px] divide-gray-500/[.10]\""
                        let v472 : string = " " + v471 + v383 + ""
                        let v473 : (unit -> leptos_dom_Fragment) = method248()
                        let v474 : (unit -> leptos_dom_Fragment) = method249(v390)
                        let v475 : string = "$0"
                        let v476 : (unit -> string) = closure272()
                        let v477 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v475 
                        let v478 : string = "$0"
                        let v479 : (unit -> string) = closure273()
                        let v480 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v479 v478 
                        let v481 : string = "$0"
                        let v482 : (unit -> string) = closure235()
                        let v483 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v482 v481 
                        let v484 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v483(()) + \" \" + &v480(()) + \" \" + &v477(())"
                        let v485 : string = " " + v484 + v383 + ""
                        let v486 : string = "$0"
                        let v487 : (unit -> string) = closure236()
                        let v488 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v487 v486 
                        let v489 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v490 : string = " " + v489 + v383 + ""
                        let v491 : leptos_dom_Fragment = v473 ()
                        let v492 : string = "leptos::prelude::AnyView::from($0)"
                        let v493 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v491 v492 
                        let v494 : string = "dt"
                        let v495 : string = "<" + v494 + " " + v490 + ">move || { v493 }</" + v494 + ">"
                        let v496 : string = "leptos::prelude::view! { " + v495 + " }"
                        let v497 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v496 
                        let v498 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v497 |> unbox
                        let v499 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v500 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v498 v499 
                        let v501 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v488(())"
                        let v502 : string = " " + v501 + v383 + ""
                        let v503 : leptos_dom_Fragment = v474 ()
                        let v504 : string = "leptos::prelude::AnyView::from($0)"
                        let v505 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v503 v504 
                        let v506 : string = "dd"
                        let v507 : string = "<" + v506 + " " + v502 + ">move || { v505 }</" + v506 + ">"
                        let v508 : string = "leptos::prelude::view! { " + v507 + " }"
                        let v509 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v508 
                        let v510 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v509 |> unbox
                        let v511 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v512 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v510 v511 
                        let v513 : string = "v512"
                        let v514 : string = v513 + v383 
                        let v515 : string = v514 + v383 
                        let v516 : string = "v500"
                        let v517 : string = v516 + v456 
                        let v518 : string = v517 + v515 
                        let v519 : string = "vec![" + v518 + "]"
                        let v520 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v519 
                        let v521 : string = "leptos::prelude::Fragment::new($0)"
                        let v522 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v520 v521 
                        let v523 : string = "leptos::prelude::AnyView::from($0)"
                        let v524 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v522 v523 
                        let v525 : string = "dl"
                        let v526 : string = "<" + v525 + " " + v485 + ">move || { v524 }</" + v525 + ">"
                        let v527 : string = "leptos::prelude::view! { " + v526 + " }"
                        let v528 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v527 
                        let v529 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v528 |> unbox
                        let v530 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v531 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v529 v530 
                        let v532 : (unit -> leptos_dom_Fragment) = method250()
                        let v533 : (unit -> leptos_dom_Fragment) = method251(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, v403, v404)
                        let v534 : string = "$0"
                        let v535 : (unit -> string) = closure276()
                        let v536 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v535 v534 
                        let v537 : string = "$0"
                        let v538 : (unit -> string) = closure277()
                        let v539 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v538 v537 
                        let v540 : string = "$0"
                        let v541 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v482 v540 
                        let v542 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v541(()) + \" \" + &v539(()) + \" \" + &v536(())"
                        let v543 : string = " " + v542 + v383 + ""
                        let v544 : string = "$0"
                        let v545 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v487 v544 
                        let v546 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v547 : string = " " + v546 + v383 + ""
                        let v548 : leptos_dom_Fragment = v532 ()
                        let v549 : string = "leptos::prelude::AnyView::from($0)"
                        let v550 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v548 v549 
                        let v551 : string = "<" + v494 + " " + v547 + ">move || { v550 }</" + v494 + ">"
                        let v552 : string = "leptos::prelude::view! { " + v551 + " }"
                        let v553 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v552 
                        let v554 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v553 |> unbox
                        let v555 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v556 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v554 v555 
                        let v557 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v545(())"
                        let v558 : string = " " + v557 + v383 + ""
                        let v559 : leptos_dom_Fragment = v533 ()
                        let v560 : string = "leptos::prelude::AnyView::from($0)"
                        let v561 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v559 v560 
                        let v562 : string = "<" + v506 + " " + v558 + ">move || { v561 }</" + v506 + ">"
                        let v563 : string = "leptos::prelude::view! { " + v562 + " }"
                        let v564 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v563 
                        let v565 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v564 |> unbox
                        let v566 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v567 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v565 v566 
                        let v568 : string = "v567"
                        let v569 : string = v568 + v383 
                        let v570 : string = v569 + v383 
                        let v571 : string = "v556"
                        let v572 : string = v571 + v456 
                        let v573 : string = v572 + v570 
                        let v574 : string = "vec![" + v573 + "]"
                        let v575 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v574 
                        let v576 : string = "leptos::prelude::Fragment::new($0)"
                        let v577 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v575 v576 
                        let v578 : string = "leptos::prelude::AnyView::from($0)"
                        let v579 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v577 v578 
                        let v580 : string = "<" + v525 + " " + v543 + ">move || { v579 }</" + v525 + ">"
                        let v581 : string = "leptos::prelude::view! { " + v580 + " }"
                        let v582 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v581 
                        let v583 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v582 |> unbox
                        let v584 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v585 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v583 v584 
                        let v586 : (unit -> leptos_dom_Fragment) = method252()
                        let v587 : (unit -> leptos_dom_Fragment) = method253(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, v403, v404)
                        let v588 : string = "$0"
                        let v589 : (unit -> string) = closure280()
                        let v590 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v589 v588 
                        let v591 : string = "$0"
                        let v592 : (unit -> string) = closure281()
                        let v593 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v592 v591 
                        let v594 : string = "$0"
                        let v595 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v482 v594 
                        let v596 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v595(()) + \" \" + &v593(()) + \" \" + &v590(())"
                        let v597 : string = " " + v596 + v383 + ""
                        let v598 : string = "$0"
                        let v599 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v487 v598 
                        let v600 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v601 : string = " " + v600 + v383 + ""
                        let v602 : leptos_dom_Fragment = v586 ()
                        let v603 : string = "leptos::prelude::AnyView::from($0)"
                        let v604 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v602 v603 
                        let v605 : string = "<" + v494 + " " + v601 + ">move || { v604 }</" + v494 + ">"
                        let v606 : string = "leptos::prelude::view! { " + v605 + " }"
                        let v607 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v606 
                        let v608 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v607 |> unbox
                        let v609 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v610 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v608 v609 
                        let v611 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v599(())"
                        let v612 : string = " " + v611 + v383 + ""
                        let v613 : leptos_dom_Fragment = v587 ()
                        let v614 : string = "leptos::prelude::AnyView::from($0)"
                        let v615 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v613 v614 
                        let v616 : string = "<" + v506 + " " + v612 + ">move || { v615 }</" + v506 + ">"
                        let v617 : string = "leptos::prelude::view! { " + v616 + " }"
                        let v618 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v617 
                        let v619 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v618 |> unbox
                        let v620 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v621 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v619 v620 
                        let v622 : string = "v621"
                        let v623 : string = v622 + v383 
                        let v624 : string = v623 + v383 
                        let v625 : string = "v610"
                        let v626 : string = v625 + v456 
                        let v627 : string = v626 + v624 
                        let v628 : string = "vec![" + v627 + "]"
                        let v629 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v628 
                        let v630 : string = "leptos::prelude::Fragment::new($0)"
                        let v631 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v629 v630 
                        let v632 : string = "leptos::prelude::AnyView::from($0)"
                        let v633 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v631 v632 
                        let v634 : string = "<" + v525 + " " + v597 + ">move || { v633 }</" + v525 + ">"
                        let v635 : string = "leptos::prelude::view! { " + v634 + " }"
                        let v636 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v635 
                        let v637 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v636 |> unbox
                        let v638 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v639 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v637 v638 
                        let v640 : (unit -> leptos_dom_Fragment) = method254()
                        let v641 : (unit -> leptos_dom_Fragment) = method255(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, v403, v404)
                        let v642 : string = "$0"
                        let v643 : (unit -> string) = closure284()
                        let v644 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v643 v642 
                        let v645 : string = "$0"
                        let v646 : (unit -> string) = closure285()
                        let v647 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v646 v645 
                        let v648 : string = "$0"
                        let v649 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v482 v648 
                        let v650 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v649(()) + \" \" + &v647(()) + \" \" + &v644(())"
                        let v651 : string = " " + v650 + v383 + ""
                        let v652 : string = "$0"
                        let v653 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v487 v652 
                        let v654 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v655 : string = " " + v654 + v383 + ""
                        let v656 : leptos_dom_Fragment = v640 ()
                        let v657 : string = "leptos::prelude::AnyView::from($0)"
                        let v658 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v656 v657 
                        let v659 : string = "<" + v494 + " " + v655 + ">move || { v658 }</" + v494 + ">"
                        let v660 : string = "leptos::prelude::view! { " + v659 + " }"
                        let v661 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v660 
                        let v662 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v661 |> unbox
                        let v663 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v664 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v662 v663 
                        let v665 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v653(())"
                        let v666 : string = " " + v665 + v383 + ""
                        let v667 : leptos_dom_Fragment = v641 ()
                        let v668 : string = "leptos::prelude::AnyView::from($0)"
                        let v669 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v667 v668 
                        let v670 : string = "<" + v506 + " " + v666 + ">move || { v669 }</" + v506 + ">"
                        let v671 : string = "leptos::prelude::view! { " + v670 + " }"
                        let v672 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v671 
                        let v673 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v672 |> unbox
                        let v674 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v675 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v673 v674 
                        let v676 : string = "v675"
                        let v677 : string = v676 + v383 
                        let v678 : string = v677 + v383 
                        let v679 : string = "v664"
                        let v680 : string = v679 + v456 
                        let v681 : string = v680 + v678 
                        let v682 : string = "vec![" + v681 + "]"
                        let v683 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v682 
                        let v684 : string = "leptos::prelude::Fragment::new($0)"
                        let v685 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v683 v684 
                        let v686 : string = "leptos::prelude::AnyView::from($0)"
                        let v687 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v685 v686 
                        let v688 : string = "<" + v525 + " " + v651 + ">move || { v687 }</" + v525 + ">"
                        let v689 : string = "leptos::prelude::view! { " + v688 + " }"
                        let v690 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v689 
                        let v691 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v690 |> unbox
                        let v692 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v693 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v691 v692 
                        let v694 : (unit -> leptos_dom_Fragment) = method256()
                        let v695 : (unit -> leptos_dom_Fragment) = method257(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, v403, v404)
                        let v696 : string = "$0"
                        let v697 : (unit -> string) = closure299()
                        let v698 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v697 v696 
                        let v699 : string = "$0"
                        let v700 : (unit -> string) = closure300()
                        let v701 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v700 v699 
                        let v702 : string = "$0"
                        let v703 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v482 v702 
                        let v704 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v703(()) + \" \" + &v701(()) + \" \" + &v698(())"
                        let v705 : string = " " + v704 + v383 + ""
                        let v706 : string = "$0"
                        let v707 : (unit -> string) = closure301()
                        let v708 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v707 v706 
                        let v709 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v710 : string = " " + v709 + v383 + ""
                        let v711 : leptos_dom_Fragment = v694 ()
                        let v712 : string = "leptos::prelude::AnyView::from($0)"
                        let v713 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v711 v712 
                        let v714 : string = "<" + v494 + " " + v710 + ">move || { v713 }</" + v494 + ">"
                        let v715 : string = "leptos::prelude::view! { " + v714 + " }"
                        let v716 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v715 
                        let v717 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v716 |> unbox
                        let v718 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v719 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v717 v718 
                        let v720 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v708(())"
                        let v721 : string = " " + v720 + v383 + ""
                        let v722 : leptos_dom_Fragment = v695 ()
                        let v723 : string = "leptos::prelude::AnyView::from($0)"
                        let v724 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v722 v723 
                        let v725 : string = "<" + v506 + " " + v721 + ">move || { v724 }</" + v506 + ">"
                        let v726 : string = "leptos::prelude::view! { " + v725 + " }"
                        let v727 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v726 
                        let v728 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v727 |> unbox
                        let v729 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v730 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v728 v729 
                        let v731 : string = "v730"
                        let v732 : string = v731 + v383 
                        let v733 : string = v732 + v383 
                        let v734 : string = "v719"
                        let v735 : string = v734 + v456 
                        let v736 : string = v735 + v733 
                        let v737 : string = "vec![" + v736 + "]"
                        let v738 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v737 
                        let v739 : string = "leptos::prelude::Fragment::new($0)"
                        let v740 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v738 v739 
                        let v741 : string = "leptos::prelude::AnyView::from($0)"
                        let v742 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v740 v741 
                        let v743 : string = "<" + v525 + " " + v705 + ">move || { v742 }</" + v525 + ">"
                        let v744 : string = "leptos::prelude::view! { " + v743 + " }"
                        let v745 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v744 
                        let v746 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v745 |> unbox
                        let v747 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v748 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v746 v747 
                        let v749 : (unit -> leptos_dom_Fragment) = method262()
                        let v750 : (unit -> leptos_dom_Fragment) = method263(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, v403, v404)
                        let v751 : string = "$0"
                        let v752 : (unit -> string) = closure304()
                        let v753 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v752 v751 
                        let v754 : string = "$0"
                        let v755 : (unit -> string) = closure305()
                        let v756 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v755 v754 
                        let v757 : string = "$0"
                        let v758 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v482 v757 
                        let v759 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v758(()) + \" \" + &v756(()) + \" \" + &v753(())"
                        let v760 : string = " " + v759 + v383 + ""
                        let v761 : string = "$0"
                        let v762 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v487 v761 
                        let v763 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v764 : string = " " + v763 + v383 + ""
                        let v765 : leptos_dom_Fragment = v749 ()
                        let v766 : string = "leptos::prelude::AnyView::from($0)"
                        let v767 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v765 v766 
                        let v768 : string = "<" + v494 + " " + v764 + ">move || { v767 }</" + v494 + ">"
                        let v769 : string = "leptos::prelude::view! { " + v768 + " }"
                        let v770 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v769 
                        let v771 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v770 |> unbox
                        let v772 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v773 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v771 v772 
                        let v774 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v762(())"
                        let v775 : string = " " + v774 + v383 + ""
                        let v776 : leptos_dom_Fragment = v750 ()
                        let v777 : string = "leptos::prelude::AnyView::from($0)"
                        let v778 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v776 v777 
                        let v779 : string = "<" + v506 + " " + v775 + ">move || { v778 }</" + v506 + ">"
                        let v780 : string = "leptos::prelude::view! { " + v779 + " }"
                        let v781 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v780 
                        let v782 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v781 |> unbox
                        let v783 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v784 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v782 v783 
                        let v785 : string = "v784"
                        let v786 : string = v785 + v383 
                        let v787 : string = v786 + v383 
                        let v788 : string = "v773"
                        let v789 : string = v788 + v456 
                        let v790 : string = v789 + v787 
                        let v791 : string = "vec![" + v790 + "]"
                        let v792 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v791 
                        let v793 : string = "leptos::prelude::Fragment::new($0)"
                        let v794 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v792 v793 
                        let v795 : string = "leptos::prelude::AnyView::from($0)"
                        let v796 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v794 v795 
                        let v797 : string = "<" + v525 + " " + v760 + ">move || { v796 }</" + v525 + ">"
                        let v798 : string = "leptos::prelude::view! { " + v797 + " }"
                        let v799 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v798 
                        let v800 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v799 |> unbox
                        let v801 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v802 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v800 v801 
                        let v803 : (unit -> leptos_dom_Fragment) = method264()
                        let v804 : (unit -> leptos_dom_Fragment) = method265(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, v403, v404)
                        let v805 : string = "$0"
                        let v806 : (unit -> string) = closure308()
                        let v807 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v806 v805 
                        let v808 : string = "$0"
                        let v809 : (unit -> string) = closure309()
                        let v810 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v809 v808 
                        let v811 : string = "$0"
                        let v812 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v482 v811 
                        let v813 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v812(()) + \" \" + &v810(()) + \" \" + &v807(())"
                        let v814 : string = " " + v813 + v383 + ""
                        let v815 : string = "$0"
                        let v816 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v487 v815 
                        let v817 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v818 : string = " " + v817 + v383 + ""
                        let v819 : leptos_dom_Fragment = v803 ()
                        let v820 : string = "leptos::prelude::AnyView::from($0)"
                        let v821 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v819 v820 
                        let v822 : string = "<" + v494 + " " + v818 + ">move || { v821 }</" + v494 + ">"
                        let v823 : string = "leptos::prelude::view! { " + v822 + " }"
                        let v824 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v823 
                        let v825 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v824 |> unbox
                        let v826 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v827 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v825 v826 
                        let v828 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v816(())"
                        let v829 : string = " " + v828 + v383 + ""
                        let v830 : leptos_dom_Fragment = v804 ()
                        let v831 : string = "leptos::prelude::AnyView::from($0)"
                        let v832 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v830 v831 
                        let v833 : string = "<" + v506 + " " + v829 + ">move || { v832 }</" + v506 + ">"
                        let v834 : string = "leptos::prelude::view! { " + v833 + " }"
                        let v835 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v834 
                        let v836 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v835 |> unbox
                        let v837 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v838 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v836 v837 
                        let v839 : string = "v838"
                        let v840 : string = v839 + v383 
                        let v841 : string = v840 + v383 
                        let v842 : string = "v827"
                        let v843 : string = v842 + v456 
                        let v844 : string = v843 + v841 
                        let v845 : string = "vec![" + v844 + "]"
                        let v846 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v845 
                        let v847 : string = "leptos::prelude::Fragment::new($0)"
                        let v848 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v846 v847 
                        let v849 : string = "leptos::prelude::AnyView::from($0)"
                        let v850 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v848 v849 
                        let v851 : string = "<" + v525 + " " + v814 + ">move || { v850 }</" + v525 + ">"
                        let v852 : string = "leptos::prelude::view! { " + v851 + " }"
                        let v853 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v852 
                        let v854 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v853 |> unbox
                        let v855 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v856 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v854 v855 
                        let v857 : (unit -> leptos_dom_Fragment) = method266()
                        let v858 : (unit -> leptos_dom_Fragment) = method267(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, v403, v404)
                        let v859 : string = "$0"
                        let v860 : (unit -> string) = closure312()
                        let v861 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v860 v859 
                        let v862 : string = "$0"
                        let v863 : (unit -> string) = closure313()
                        let v864 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v863 v862 
                        let v865 : string = "$0"
                        let v866 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v482 v865 
                        let v867 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v866(()) + \" \" + &v864(()) + \" \" + &v861(())"
                        let v868 : string = " " + v867 + v383 + ""
                        let v869 : string = "$0"
                        let v870 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v487 v869 
                        let v871 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v872 : string = " " + v871 + v383 + ""
                        let v873 : leptos_dom_Fragment = v857 ()
                        let v874 : string = "leptos::prelude::AnyView::from($0)"
                        let v875 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v873 v874 
                        let v876 : string = "<" + v494 + " " + v872 + ">move || { v875 }</" + v494 + ">"
                        let v877 : string = "leptos::prelude::view! { " + v876 + " }"
                        let v878 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v877 
                        let v879 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v878 |> unbox
                        let v880 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v881 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v879 v880 
                        let v882 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v870(())"
                        let v883 : string = " " + v882 + v383 + ""
                        let v884 : leptos_dom_Fragment = v858 ()
                        let v885 : string = "leptos::prelude::AnyView::from($0)"
                        let v886 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v884 v885 
                        let v887 : string = "<" + v506 + " " + v883 + ">move || { v886 }</" + v506 + ">"
                        let v888 : string = "leptos::prelude::view! { " + v887 + " }"
                        let v889 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v888 
                        let v890 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v889 |> unbox
                        let v891 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v892 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v890 v891 
                        let v893 : string = "v892"
                        let v894 : string = v893 + v383 
                        let v895 : string = v894 + v383 
                        let v896 : string = "v881"
                        let v897 : string = v896 + v456 
                        let v898 : string = v897 + v895 
                        let v899 : string = "vec![" + v898 + "]"
                        let v900 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v899 
                        let v901 : string = "leptos::prelude::Fragment::new($0)"
                        let v902 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v900 v901 
                        let v903 : string = "leptos::prelude::AnyView::from($0)"
                        let v904 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v902 v903 
                        let v905 : string = "<" + v525 + " " + v868 + ">move || { v904 }</" + v525 + ">"
                        let v906 : string = "leptos::prelude::view! { " + v905 + " }"
                        let v907 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v906 
                        let v908 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v907 |> unbox
                        let v909 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v910 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v908 v909 
                        let v911 : (unit -> leptos_dom_Fragment) = method268()
                        let v912 : (unit -> leptos_dom_Fragment) = method269(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, v403, v404)
                        let v913 : string = "$0"
                        let v914 : (unit -> string) = closure316()
                        let v915 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v914 v913 
                        let v916 : string = "$0"
                        let v917 : (unit -> string) = closure317()
                        let v918 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v917 v916 
                        let v919 : string = "$0"
                        let v920 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v482 v919 
                        let v921 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v920(()) + \" \" + &v918(()) + \" \" + &v915(())"
                        let v922 : string = " " + v921 + v383 + ""
                        let v923 : string = "$0"
                        let v924 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v487 v923 
                        let v925 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v926 : string = " " + v925 + v383 + ""
                        let v927 : leptos_dom_Fragment = v911 ()
                        let v928 : string = "leptos::prelude::AnyView::from($0)"
                        let v929 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v927 v928 
                        let v930 : string = "<" + v494 + " " + v926 + ">move || { v929 }</" + v494 + ">"
                        let v931 : string = "leptos::prelude::view! { " + v930 + " }"
                        let v932 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v931 
                        let v933 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v932 |> unbox
                        let v934 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v935 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v933 v934 
                        let v936 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v924(())"
                        let v937 : string = " " + v936 + v383 + ""
                        let v938 : leptos_dom_Fragment = v912 ()
                        let v939 : string = "leptos::prelude::AnyView::from($0)"
                        let v940 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v938 v939 
                        let v941 : string = "<" + v506 + " " + v937 + ">move || { v940 }</" + v506 + ">"
                        let v942 : string = "leptos::prelude::view! { " + v941 + " }"
                        let v943 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v942 
                        let v944 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v943 |> unbox
                        let v945 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v946 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v944 v945 
                        let v947 : string = "v946"
                        let v948 : string = v947 + v383 
                        let v949 : string = v948 + v383 
                        let v950 : string = "v935"
                        let v951 : string = v950 + v456 
                        let v952 : string = v951 + v949 
                        let v953 : string = "vec![" + v952 + "]"
                        let v954 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v953 
                        let v955 : string = "leptos::prelude::Fragment::new($0)"
                        let v956 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v954 v955 
                        let v957 : string = "leptos::prelude::AnyView::from($0)"
                        let v958 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v956 v957 
                        let v959 : string = "<" + v525 + " " + v922 + ">move || { v958 }</" + v525 + ">"
                        let v960 : string = "leptos::prelude::view! { " + v959 + " }"
                        let v961 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v960 
                        let v962 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v961 |> unbox
                        let v963 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v964 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v962 v963 
                        let v965 : (unit -> leptos_dom_Fragment) = method270()
                        let v966 : (unit -> leptos_dom_Fragment) = method271(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, v403, v404)
                        let v967 : string = "$0"
                        let v968 : (unit -> string) = closure320()
                        let v969 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v968 v967 
                        let v970 : string = "$0"
                        let v971 : (unit -> string) = closure321()
                        let v972 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v971 v970 
                        let v973 : string = "$0"
                        let v974 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v482 v973 
                        let v975 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v974(()) + \" \" + &v972(()) + \" \" + &v969(())"
                        let v976 : string = " " + v975 + v383 + ""
                        let v977 : string = "$0"
                        let v978 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v487 v977 
                        let v979 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v980 : string = " " + v979 + v383 + ""
                        let v981 : leptos_dom_Fragment = v965 ()
                        let v982 : string = "leptos::prelude::AnyView::from($0)"
                        let v983 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v981 v982 
                        let v984 : string = "<" + v494 + " " + v980 + ">move || { v983 }</" + v494 + ">"
                        let v985 : string = "leptos::prelude::view! { " + v984 + " }"
                        let v986 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v985 
                        let v987 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v986 |> unbox
                        let v988 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v989 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v987 v988 
                        let v990 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v978(())"
                        let v991 : string = " " + v990 + v383 + ""
                        let v992 : leptos_dom_Fragment = v966 ()
                        let v993 : string = "leptos::prelude::AnyView::from($0)"
                        let v994 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v992 v993 
                        let v995 : string = "<" + v506 + " " + v991 + ">move || { v994 }</" + v506 + ">"
                        let v996 : string = "leptos::prelude::view! { " + v995 + " }"
                        let v997 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v996 
                        let v998 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v997 |> unbox
                        let v999 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1000 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v998 v999 
                        let v1001 : string = "v1000"
                        let v1002 : string = v1001 + v383 
                        let v1003 : string = v1002 + v383 
                        let v1004 : string = "v989"
                        let v1005 : string = v1004 + v456 
                        let v1006 : string = v1005 + v1003 
                        let v1007 : string = "vec![" + v1006 + "]"
                        let v1008 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1007 
                        let v1009 : string = "leptos::prelude::Fragment::new($0)"
                        let v1010 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1008 v1009 
                        let v1011 : string = "leptos::prelude::AnyView::from($0)"
                        let v1012 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1010 v1011 
                        let v1013 : string = "<" + v525 + " " + v976 + ">move || { v1012 }</" + v525 + ">"
                        let v1014 : string = "leptos::prelude::view! { " + v1013 + " }"
                        let v1015 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1014 
                        let v1016 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v1015 |> unbox
                        let v1017 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1018 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1016 v1017 
                        let v1019 : (unit -> leptos_dom_Fragment) = method272()
                        let v1020 : (unit -> leptos_dom_Fragment) = method273(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, v403, v404)
                        let v1021 : string = "$0"
                        let v1022 : (unit -> string) = closure324()
                        let v1023 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1022 v1021 
                        let v1024 : string = "$0"
                        let v1025 : (unit -> string) = closure325()
                        let v1026 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1025 v1024 
                        let v1027 : string = "$0"
                        let v1028 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v482 v1027 
                        let v1029 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v1028(()) + \" \" + &v1026(()) + \" \" + &v1023(())"
                        let v1030 : string = " " + v1029 + v383 + ""
                        let v1031 : string = "$0"
                        let v1032 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v487 v1031 
                        let v1033 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v1034 : string = " " + v1033 + v383 + ""
                        let v1035 : leptos_dom_Fragment = v1019 ()
                        let v1036 : string = "leptos::prelude::AnyView::from($0)"
                        let v1037 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1035 v1036 
                        let v1038 : string = "<" + v494 + " " + v1034 + ">move || { v1037 }</" + v494 + ">"
                        let v1039 : string = "leptos::prelude::view! { " + v1038 + " }"
                        let v1040 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1039 
                        let v1041 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v1040 |> unbox
                        let v1042 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1043 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1041 v1042 
                        let v1044 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v1032(())"
                        let v1045 : string = " " + v1044 + v383 + ""
                        let v1046 : leptos_dom_Fragment = v1020 ()
                        let v1047 : string = "leptos::prelude::AnyView::from($0)"
                        let v1048 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1046 v1047 
                        let v1049 : string = "<" + v506 + " " + v1045 + ">move || { v1048 }</" + v506 + ">"
                        let v1050 : string = "leptos::prelude::view! { " + v1049 + " }"
                        let v1051 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1050 
                        let v1052 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v1051 |> unbox
                        let v1053 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1054 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1052 v1053 
                        let v1055 : string = "v1054"
                        let v1056 : string = v1055 + v383 
                        let v1057 : string = v1056 + v383 
                        let v1058 : string = "v1043"
                        let v1059 : string = v1058 + v456 
                        let v1060 : string = v1059 + v1057 
                        let v1061 : string = "vec![" + v1060 + "]"
                        let v1062 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1061 
                        let v1063 : string = "leptos::prelude::Fragment::new($0)"
                        let v1064 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1062 v1063 
                        let v1065 : string = "leptos::prelude::AnyView::from($0)"
                        let v1066 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1064 v1065 
                        let v1067 : string = "<" + v525 + " " + v1030 + ">move || { v1066 }</" + v525 + ">"
                        let v1068 : string = "leptos::prelude::view! { " + v1067 + " }"
                        let v1069 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1068 
                        let v1070 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v1069 |> unbox
                        let v1071 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1072 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1070 v1071 
                        let v1073 : (unit -> leptos_dom_Fragment) = method274()
                        let v1074 : (unit -> leptos_dom_Fragment) = method275(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, v403, v404)
                        let v1075 : string = "$0"
                        let v1076 : (unit -> string) = closure328()
                        let v1077 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1076 v1075 
                        let v1078 : string = "$0"
                        let v1079 : (unit -> string) = closure329()
                        let v1080 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1079 v1078 
                        let v1081 : string = "$0"
                        let v1082 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v482 v1081 
                        let v1083 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v1082(()) + \" \" + &v1080(()) + \" \" + &v1077(())"
                        let v1084 : string = " " + v1083 + v383 + ""
                        let v1085 : string = "$0"
                        let v1086 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v487 v1085 
                        let v1087 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v1088 : string = " " + v1087 + v383 + ""
                        let v1089 : leptos_dom_Fragment = v1073 ()
                        let v1090 : string = "leptos::prelude::AnyView::from($0)"
                        let v1091 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1089 v1090 
                        let v1092 : string = "<" + v494 + " " + v1088 + ">move || { v1091 }</" + v494 + ">"
                        let v1093 : string = "leptos::prelude::view! { " + v1092 + " }"
                        let v1094 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1093 
                        let v1095 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v1094 |> unbox
                        let v1096 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1097 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1095 v1096 
                        let v1098 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v1086(())"
                        let v1099 : string = " " + v1098 + v383 + ""
                        let v1100 : leptos_dom_Fragment = v1074 ()
                        let v1101 : string = "leptos::prelude::AnyView::from($0)"
                        let v1102 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1100 v1101 
                        let v1103 : string = "<" + v506 + " " + v1099 + ">move || { v1102 }</" + v506 + ">"
                        let v1104 : string = "leptos::prelude::view! { " + v1103 + " }"
                        let v1105 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1104 
                        let v1106 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v1105 |> unbox
                        let v1107 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1108 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1106 v1107 
                        let v1109 : string = "v1108"
                        let v1110 : string = v1109 + v383 
                        let v1111 : string = v1110 + v383 
                        let v1112 : string = "v1097"
                        let v1113 : string = v1112 + v456 
                        let v1114 : string = v1113 + v1111 
                        let v1115 : string = "vec![" + v1114 + "]"
                        let v1116 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1115 
                        let v1117 : string = "leptos::prelude::Fragment::new($0)"
                        let v1118 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1116 v1117 
                        let v1119 : string = "leptos::prelude::AnyView::from($0)"
                        let v1120 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1118 v1119 
                        let v1121 : string = "<" + v525 + " " + v1084 + ">move || { v1120 }</" + v525 + ">"
                        let v1122 : string = "leptos::prelude::view! { " + v1121 + " }"
                        let v1123 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1122 
                        let v1124 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v1123 |> unbox
                        let v1125 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1126 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1124 v1125 
                        let v1127 : uint64 = System.Convert.ToUInt64 v404.Length
                        let v1128 : bool = v1127 = 0UL
                        let v1187 : leptos_prelude_AnyView_ =
                            if v1128 then
                                let v1129 : string = "vec![" + v383 + "]"
                                let v1130 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1129 
                                let v1131 : string = "leptos::prelude::IntoAny::into_any($0)"
                                let v1132 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1130 v1131 
                                v1132
                            else
                                let v1133 : (unit -> leptos_dom_Fragment) = method276()
                                let v1134 : (unit -> leptos_dom_Fragment) = method277(v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, v403, v404)
                                let v1135 : string = "$0"
                                let v1136 : (unit -> string) = closure334()
                                let v1137 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1136 v1135 
                                let v1138 : string = "$0"
                                let v1139 : (unit -> string) = closure335()
                                let v1140 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1139 v1138 
                                let v1141 : string = "$0"
                                let v1142 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v482 v1141 
                                let v1143 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v1142(()) + \" \" + &v1140(()) + \" \" + &v1137(())"
                                let v1144 : string = " " + v1143 + v383 + ""
                                let v1145 : string = "$0"
                                let v1146 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v487 v1145 
                                let v1147 : string = "class=\"[font-size:12px] text-gray-400\""
                                let v1148 : string = " " + v1147 + v383 + ""
                                let v1149 : leptos_dom_Fragment = v1133 ()
                                let v1150 : string = "leptos::prelude::AnyView::from($0)"
                                let v1151 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1149 v1150 
                                let v1152 : string = "<" + v494 + " " + v1148 + ">move || { v1151 }</" + v494 + ">"
                                let v1153 : string = "leptos::prelude::view! { " + v1152 + " }"
                                let v1154 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1153 
                                let v1155 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v1154 |> unbox
                                let v1156 : string = "leptos::prelude::IntoAny::into_any($0)"
                                let v1157 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1155 v1156 
                                let v1158 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v1146(())"
                                let v1159 : string = " " + v1158 + v383 + ""
                                let v1160 : leptos_dom_Fragment = v1134 ()
                                let v1161 : string = "leptos::prelude::AnyView::from($0)"
                                let v1162 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1160 v1161 
                                let v1163 : string = "<" + v506 + " " + v1159 + ">move || { v1162 }</" + v506 + ">"
                                let v1164 : string = "leptos::prelude::view! { " + v1163 + " }"
                                let v1165 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1164 
                                let v1166 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v1165 |> unbox
                                let v1167 : string = "leptos::prelude::IntoAny::into_any($0)"
                                let v1168 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1166 v1167 
                                let v1169 : string = "v1168"
                                let v1170 : string = v1169 + v383 
                                let v1171 : string = v1170 + v383 
                                let v1172 : string = "v1157"
                                let v1173 : string = v1172 + v456 
                                let v1174 : string = v1173 + v1171 
                                let v1175 : string = "vec![" + v1174 + "]"
                                let v1176 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1175 
                                let v1177 : string = "leptos::prelude::Fragment::new($0)"
                                let v1178 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1176 v1177 
                                let v1179 : string = "leptos::prelude::AnyView::from($0)"
                                let v1180 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1178 v1179 
                                let v1181 : string = "<" + v525 + " " + v1144 + ">move || { v1180 }</" + v525 + ">"
                                let v1182 : string = "leptos::prelude::view! { " + v1181 + " }"
                                let v1183 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1182 
                                let v1184 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v1183 |> unbox
                                let v1185 : string = "leptos::prelude::IntoAny::into_any($0)"
                                let v1186 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1184 v1185 
                                v1186
                        let v1188 : string = "v1187"
                        let v1189 : string = v1188 + v383 
                        let v1190 : string = v1189 + v383 
                        let v1191 : string = "v1126"
                        let v1192 : string = v1191 + v456 
                        let v1193 : string = v1192 + v1190 
                        let v1194 : string = "v1072"
                        let v1195 : string = v1194 + v456 
                        let v1196 : string = v1195 + v1193 
                        let v1197 : string = "v1018"
                        let v1198 : string = v1197 + v456 
                        let v1199 : string = v1198 + v1196 
                        let v1200 : string = "v964"
                        let v1201 : string = v1200 + v456 
                        let v1202 : string = v1201 + v1199 
                        let v1203 : string = "v910"
                        let v1204 : string = v1203 + v456 
                        let v1205 : string = v1204 + v1202 
                        let v1206 : string = "v856"
                        let v1207 : string = v1206 + v456 
                        let v1208 : string = v1207 + v1205 
                        let v1209 : string = "v802"
                        let v1210 : string = v1209 + v456 
                        let v1211 : string = v1210 + v1208 
                        let v1212 : string = "v748"
                        let v1213 : string = v1212 + v456 
                        let v1214 : string = v1213 + v1211 
                        let v1215 : string = "v693"
                        let v1216 : string = v1215 + v456 
                        let v1217 : string = v1216 + v1214 
                        let v1218 : string = "v639"
                        let v1219 : string = v1218 + v456 
                        let v1220 : string = v1219 + v1217 
                        let v1221 : string = "v585"
                        let v1222 : string = v1221 + v456 
                        let v1223 : string = v1222 + v1220 
                        let v1224 : string = "v531"
                        let v1225 : string = v1224 + v456 
                        let v1226 : string = v1225 + v1223 
                        let v1227 : string = "vec![" + v1226 + "]"
                        let v1228 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1227 
                        let v1229 : string = "leptos::prelude::Fragment::new($0)"
                        let v1230 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1228 v1229 
                        let v1231 : string = "leptos::prelude::AnyView::from($0)"
                        let v1232 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1230 v1231 
                        let v1233 : string = "div"
                        let v1234 : string = "<" + v1233 + " " + v472 + ">move || { v1232 }</" + v1233 + ">"
                        let v1235 : string = "leptos::prelude::view! { " + v1234 + " }"
                        let v1236 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1235 
                        let v1237 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1236 |> unbox
                        let v1238 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1239 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1237 v1238 
                        let v1240 : string = "v1239"
                        let v1241 : string = v1240 + v383 
                        let v1242 : string = v1241 + v383 
                        let v1243 : string = "v470"
                        let v1244 : string = v1243 + v456 
                        let v1245 : string = v1244 + v1242 
                        let v1246 : string = "vec![" + v1245 + "]"
                        let v1247 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1246 
                        let v1248 : string = "leptos::prelude::Fragment::new($0)"
                        let v1249 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1247 v1248 
                        let v1250 : string = "leptos::prelude::AnyView::from($0)"
                        let v1251 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1249 v1250 
                        let v1252 : string = "<" + v1233 + " " + v418 + ">move || { v1251 }</" + v1233 + ">"
                        let v1253 : string = "leptos::prelude::view! { " + v1252 + " }"
                        let v1254 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1253 
                        let v1255 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1254 |> unbox
                        let v1256 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1257 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1255 v1256 
                        let v1258 : string = "true; $0 }).collect::<Vec<_>>()"
                        let v1259 : bool = Fable.Core.RustInterop.emitRustExpr v1257 v1258 
                        let v1260 : string = "_vec_map"
                        let v1261 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1260 
                        let v1262 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1263 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1261 v1262 
                        let v1264 : string = "v1263"
                        let v1265 : string = v1264 + v383 
                        let v1266 : string = v1265 + v383 
                        let v1267 : string = "vec![" + v1266 + "]"
                        let v1268 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1267 
                        let v1269 : string = "leptos::prelude::Fragment::new($0)"
                        let v1270 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1268 v1269 
                        let v1271 : string = "leptos::prelude::AnyView::from($0)"
                        let v1272 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1270 v1271 
                        let v1273 : string = "<" + v1233 + " " + v384 + ">move || { v1272 }</" + v1233 + ">"
                        let v1274 : string = "leptos::prelude::view! { " + v1273 + " }"
                        let v1275 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1274 
                        let v1276 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1275 |> unbox
                        let v1277 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1278 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1276 v1277 
                        v1278
                    else
                        let v1279 : string = "$0.to_vec()"
                        let v1280 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr v371 v1279 
                        let v1281 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                        let v1282 : bool = Fable.Core.RustInterop.emitRustExpr v1280 v1281 
                        let v1283 : string = "x"
                        let struct (v1284 : string, v1285 : unativeint, v1286 : Heap5) = Fable.Core.RustInterop.emitRustExpr () v1283 
                        let v1287 : string = "transaction.tr_render (1)"
                        let v1288 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v1289 : bool = Fable.Core.RustInterop.emitRustExpr v1287 v1288 
                        let v1290 : string = "class=\"odd:bg-gray-50 dark:odd:bg-gray-800/50\""
                        let v1291 : string = ""
                        let v1292 : string = " " + v1290 + v1291 + ""
                        let v1293 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1294 : string = " " + v1293 + v1291 + ""
                        (* run_target_args'
                        let v1299 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1300 : string = "&*$0"
                        let v1301 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1284 v1300 
                        let _run_target_args'_v1299 = v1301 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1302 : string = "&*$0"
                        let v1303 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1284 v1302 
                        let _run_target_args'_v1299 = v1303 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1304 : string = "&*$0"
                        let v1305 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1284 v1304 
                        let _run_target_args'_v1299 = v1305 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1307 : Ref<Str> = v1284 |> unbox<Ref<Str>>
                        let _run_target_args'_v1299 = v1307 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1311 : Ref<Str> = v1284 |> unbox<Ref<Str>>
                        let _run_target_args'_v1299 = v1311 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1315 : Ref<Str> = v1284 |> unbox<Ref<Str>>
                        let _run_target_args'_v1299 = v1315 
                        #endif
#else
                        let v1319 : Ref<Str> = v1284 |> unbox<Ref<Str>>
                        let _run_target_args'_v1299 = v1319 
                        #endif
                        let v1322 : Ref<Str> = _run_target_args'_v1299 
                        (* run_target_args'
                        let v1332 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1333 : string = "String::from($0)"
                        let v1334 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1322 v1333 
                        let _run_target_args'_v1332 = v1334 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1335 : string = "String::from($0)"
                        let v1336 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1322 v1335 
                        let _run_target_args'_v1332 = v1336 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1337 : string = "String::from($0)"
                        let v1338 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1322 v1337 
                        let _run_target_args'_v1332 = v1338 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1340 : std_string_String = v1322 |> unbox<std_string_String>
                        let _run_target_args'_v1332 = v1340 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1344 : std_string_String = v1322 |> unbox<std_string_String>
                        let _run_target_args'_v1332 = v1344 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1348 : std_string_String = v1322 |> unbox<std_string_String>
                        let _run_target_args'_v1332 = v1348 
                        #endif
#else
                        let v1352 : std_string_String = v1322 |> unbox<std_string_String>
                        let _run_target_args'_v1332 = v1352 
                        #endif
                        let v1355 : std_string_String = _run_target_args'_v1332 
                        let v1361 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1362 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1355 v1361 
                        let v1363 : string = "v1362"
                        let v1364 : string = v1363 + v1291 
                        let v1365 : string = v1364 + v1291 
                        let v1366 : string = "vec![" + v1365 + "]"
                        let v1367 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1366 
                        let v1368 : string = "leptos::prelude::Fragment::new($0)"
                        let v1369 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1367 v1368 
                        let v1370 : string = "leptos::prelude::AnyView::from($0)"
                        let v1371 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1369 v1370 
                        let v1372 : string = "td"
                        let v1373 : string = "<" + v1372 + " " + v1294 + ">move || { v1371 }</" + v1372 + ">"
                        let v1374 : string = "leptos::prelude::view! { " + v1373 + " }"
                        let v1375 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1374 
                        let v1376 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1375 |> unbox
                        let v1377 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1378 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1376 v1377 
                        let v1379 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1380 : string = " " + v1379 + v1291 + ""
                        let v1381 : std_string_String = v1286.l5
                        let v1382 : string = "fable_library_rust::String_::fromString($0)"
                        let v1383 : string = Fable.Core.RustInterop.emitRustExpr v1381 v1382 
                        let v1385 : (string -> int64) = int64
                        let v1386 : int64 = v1385 v1383
                        let v1389 : int64 = method204(v1386)
                        let v1390 : int64 = v1389 / 1000L
                        let v1391 : string = "chrono::DateTime::from_timestamp_micros($0)"
                        let v1392 : chrono_DateTime<chrono_Utc> option = Fable.Core.RustInterop.emitRustExpr v1390 v1391 
                        let v1395 : (chrono_DateTime<chrono_Utc> -> US68) = method205()
                        let v1396 : US68 option = v1392 |> Option.map v1395 
                        let v1416 : US68 = US68_1
                        let v1417 : US68 = v1396 |> Option.defaultValue v1416 
                        let v1436 : US31 =
                            match v1417 with
                            | US68_1 -> (* None *)
                                US31_1
                            | US68_0(v1421) -> (* Some *)
                                let v1422 : string = "$0.naive_utc()"
                                let v1423 : chrono_NaiveDateTime = Fable.Core.RustInterop.emitRustExpr v1421 v1422 
                                let v1424 : string = "chrono::offset::TimeZone::from_utc_datetime(&chrono::Local, &$0)"
                                let v1425 : chrono_DateTime<chrono_Local> = Fable.Core.RustInterop.emitRustExpr v1423 v1424 
                                let v1426 : string = "%Y-%m-%d %H:%M:%S"
                                let v1427 : string = "r#\"" + v1426 + "\"#"
                                let v1428 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v1427 
                                let v1429 : string = "$0.format($1).to_string()"
                                let v1430 : std_string_String = Fable.Core.RustInterop.emitRustExpr struct (v1425, v1428) v1429 
                                let v1431 : string = "fable_library_rust::String_::fromString($0)"
                                let v1432 : string = Fable.Core.RustInterop.emitRustExpr v1430 v1431 
                                US31_0(v1432)
                        let v1442 : US69 =
                            match v1436 with
                            | US31_1 -> (* None *)
                                let v1439 : string = "resultm.from_option / Option does not have a value."
                                US69_1(v1439)
                            | US31_0(v1437) -> (* Some *)
                                US69_0(v1437)
                        let v1447 : string =
                            match v1442 with
                            | US69_1(v1444) -> (* Error *)
                                let v1445 : string = "sm'.to_string result / Error: " + v1444 + ""
                                v1445
                            | US69_0(v1443) -> (* Ok *)
                                v1443
                        (* run_target_args'
                        let v1452 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1453 : string = "&*$0"
                        let v1454 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1447 v1453 
                        let _run_target_args'_v1452 = v1454 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1455 : string = "&*$0"
                        let v1456 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1447 v1455 
                        let _run_target_args'_v1452 = v1456 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1457 : string = "&*$0"
                        let v1458 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1447 v1457 
                        let _run_target_args'_v1452 = v1458 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1460 : Ref<Str> = v1447 |> unbox<Ref<Str>>
                        let _run_target_args'_v1452 = v1460 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1464 : Ref<Str> = v1447 |> unbox<Ref<Str>>
                        let _run_target_args'_v1452 = v1464 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1468 : Ref<Str> = v1447 |> unbox<Ref<Str>>
                        let _run_target_args'_v1452 = v1468 
                        #endif
#else
                        let v1472 : Ref<Str> = v1447 |> unbox<Ref<Str>>
                        let _run_target_args'_v1452 = v1472 
                        #endif
                        let v1475 : Ref<Str> = _run_target_args'_v1452 
                        (* run_target_args'
                        let v1485 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1486 : string = "String::from($0)"
                        let v1487 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1475 v1486 
                        let _run_target_args'_v1485 = v1487 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1488 : string = "String::from($0)"
                        let v1489 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1475 v1488 
                        let _run_target_args'_v1485 = v1489 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1490 : string = "String::from($0)"
                        let v1491 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1475 v1490 
                        let _run_target_args'_v1485 = v1491 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1493 : std_string_String = v1475 |> unbox<std_string_String>
                        let _run_target_args'_v1485 = v1493 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1497 : std_string_String = v1475 |> unbox<std_string_String>
                        let _run_target_args'_v1485 = v1497 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1501 : std_string_String = v1475 |> unbox<std_string_String>
                        let _run_target_args'_v1485 = v1501 
                        #endif
#else
                        let v1505 : std_string_String = v1475 |> unbox<std_string_String>
                        let _run_target_args'_v1485 = v1505 
                        #endif
                        let v1508 : std_string_String = _run_target_args'_v1485 
                        let v1514 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1515 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1508 v1514 
                        let v1516 : string = "v1515"
                        let v1517 : string = v1516 + v1291 
                        let v1518 : string = v1517 + v1291 
                        let v1519 : string = "vec![" + v1518 + "]"
                        let v1520 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1519 
                        let v1521 : string = "leptos::prelude::Fragment::new($0)"
                        let v1522 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1520 v1521 
                        let v1523 : string = "leptos::prelude::AnyView::from($0)"
                        let v1524 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1522 v1523 
                        let v1525 : string = "<" + v1372 + " " + v1380 + ">move || { v1524 }</" + v1372 + ">"
                        let v1526 : string = "leptos::prelude::view! { " + v1525 + " }"
                        let v1527 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1526 
                        let v1528 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1527 |> unbox
                        let v1529 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1530 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1528 v1529 
                        let v1531 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1532 : string = " " + v1531 + v1291 + ""
                        let v1533 : std_string_String = v1286.l1
                        let v1534 : string = "fable_library_rust::String_::fromString($0)"
                        let v1535 : string = Fable.Core.RustInterop.emitRustExpr v1533 v1534 
                        (* run_target_args'
                        let v1540 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1541 : string = "&*$0"
                        let v1542 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1535 v1541 
                        let _run_target_args'_v1540 = v1542 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1543 : string = "&*$0"
                        let v1544 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1535 v1543 
                        let _run_target_args'_v1540 = v1544 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1545 : string = "&*$0"
                        let v1546 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1535 v1545 
                        let _run_target_args'_v1540 = v1546 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1548 : Ref<Str> = v1535 |> unbox<Ref<Str>>
                        let _run_target_args'_v1540 = v1548 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1552 : Ref<Str> = v1535 |> unbox<Ref<Str>>
                        let _run_target_args'_v1540 = v1552 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1556 : Ref<Str> = v1535 |> unbox<Ref<Str>>
                        let _run_target_args'_v1540 = v1556 
                        #endif
#else
                        let v1560 : Ref<Str> = v1535 |> unbox<Ref<Str>>
                        let _run_target_args'_v1540 = v1560 
                        #endif
                        let v1563 : Ref<Str> = _run_target_args'_v1540 
                        (* run_target_args'
                        let v1573 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1574 : string = "String::from($0)"
                        let v1575 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1563 v1574 
                        let _run_target_args'_v1573 = v1575 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1576 : string = "String::from($0)"
                        let v1577 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1563 v1576 
                        let _run_target_args'_v1573 = v1577 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1578 : string = "String::from($0)"
                        let v1579 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1563 v1578 
                        let _run_target_args'_v1573 = v1579 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1581 : std_string_String = v1563 |> unbox<std_string_String>
                        let _run_target_args'_v1573 = v1581 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1585 : std_string_String = v1563 |> unbox<std_string_String>
                        let _run_target_args'_v1573 = v1585 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1589 : std_string_String = v1563 |> unbox<std_string_String>
                        let _run_target_args'_v1573 = v1589 
                        #endif
#else
                        let v1593 : std_string_String = v1563 |> unbox<std_string_String>
                        let _run_target_args'_v1573 = v1593 
                        #endif
                        let v1596 : std_string_String = _run_target_args'_v1573 
                        let v1602 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1603 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1596 v1602 
                        let v1604 : string = "v1603"
                        let v1605 : string = v1604 + v1291 
                        let v1606 : string = v1605 + v1291 
                        let v1607 : string = "vec![" + v1606 + "]"
                        let v1608 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1607 
                        let v1609 : string = "leptos::prelude::Fragment::new($0)"
                        let v1610 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1608 v1609 
                        let v1611 : string = "leptos::prelude::AnyView::from($0)"
                        let v1612 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1610 v1611 
                        let v1613 : string = "<" + v1372 + " " + v1532 + ">move || { v1612 }</" + v1372 + ">"
                        let v1614 : string = "leptos::prelude::view! { " + v1613 + " }"
                        let v1615 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1614 
                        let v1616 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1615 |> unbox
                        let v1617 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1618 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1616 v1617 
                        let v1619 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1620 : string = " " + v1619 + v1291 + ""
                        let v1621 : std_string_String = v1286.l2
                        let v1622 : string = "fable_library_rust::String_::fromString($0)"
                        let v1623 : string = Fable.Core.RustInterop.emitRustExpr v1621 v1622 
                        (* run_target_args'
                        let v1628 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1629 : string = "&*$0"
                        let v1630 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1623 v1629 
                        let _run_target_args'_v1628 = v1630 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1631 : string = "&*$0"
                        let v1632 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1623 v1631 
                        let _run_target_args'_v1628 = v1632 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1633 : string = "&*$0"
                        let v1634 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1623 v1633 
                        let _run_target_args'_v1628 = v1634 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1636 : Ref<Str> = v1623 |> unbox<Ref<Str>>
                        let _run_target_args'_v1628 = v1636 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1640 : Ref<Str> = v1623 |> unbox<Ref<Str>>
                        let _run_target_args'_v1628 = v1640 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1644 : Ref<Str> = v1623 |> unbox<Ref<Str>>
                        let _run_target_args'_v1628 = v1644 
                        #endif
#else
                        let v1648 : Ref<Str> = v1623 |> unbox<Ref<Str>>
                        let _run_target_args'_v1628 = v1648 
                        #endif
                        let v1651 : Ref<Str> = _run_target_args'_v1628 
                        (* run_target_args'
                        let v1661 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1662 : string = "String::from($0)"
                        let v1663 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1651 v1662 
                        let _run_target_args'_v1661 = v1663 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1664 : string = "String::from($0)"
                        let v1665 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1651 v1664 
                        let _run_target_args'_v1661 = v1665 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1666 : string = "String::from($0)"
                        let v1667 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1651 v1666 
                        let _run_target_args'_v1661 = v1667 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1669 : std_string_String = v1651 |> unbox<std_string_String>
                        let _run_target_args'_v1661 = v1669 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1673 : std_string_String = v1651 |> unbox<std_string_String>
                        let _run_target_args'_v1661 = v1673 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1677 : std_string_String = v1651 |> unbox<std_string_String>
                        let _run_target_args'_v1661 = v1677 
                        #endif
#else
                        let v1681 : std_string_String = v1651 |> unbox<std_string_String>
                        let _run_target_args'_v1661 = v1681 
                        #endif
                        let v1684 : std_string_String = _run_target_args'_v1661 
                        let v1690 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1691 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1684 v1690 
                        let v1692 : string = "v1691"
                        let v1693 : string = v1692 + v1291 
                        let v1694 : string = v1693 + v1291 
                        let v1695 : string = "vec![" + v1694 + "]"
                        let v1696 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1695 
                        let v1697 : string = "leptos::prelude::Fragment::new($0)"
                        let v1698 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1696 v1697 
                        let v1699 : string = "leptos::prelude::AnyView::from($0)"
                        let v1700 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1698 v1699 
                        let v1701 : string = "<" + v1372 + " " + v1620 + ">move || { v1700 }</" + v1372 + ">"
                        let v1702 : string = "leptos::prelude::view! { " + v1701 + " }"
                        let v1703 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1702 
                        let v1704 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1703 |> unbox
                        let v1705 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1706 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1704 v1705 
                        let v1707 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1708 : string = " " + v1707 + v1291 + ""
                        let v1709 : (struct (std_string_String * std_string_String option) []) = v1286.l7
                        let v1710 : string = "$0.to_vec()"
                        let v1711 : Vec<struct (std_string_String * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr v1709 v1710 
                        let v1712 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                        let v1713 : bool = Fable.Core.RustInterop.emitRustExpr v1711 v1712 
                        let v1714 : string = "x"
                        let struct (v1715 : std_string_String, v1716 : std_string_String option) = Fable.Core.RustInterop.emitRustExpr () v1714 
                        let v1717 : (unit -> leptos_dom_Fragment) = method258(v1715)
                        let v1718 : (unit -> leptos_dom_Fragment) = method259(v1716)
                        let v1719 : string = "$0"
                        let v1720 : (unit -> string) = closure295()
                        let v1721 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1720 v1719 
                        let v1722 : string = "$0"
                        let v1723 : (unit -> string) = closure296()
                        let v1724 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1723 v1722 
                        let v1725 : string = "$0"
                        let v1726 : (unit -> string) = closure297()
                        let v1727 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1726 v1725 
                        let v1728 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v1727(()) + \" \" + &v1724(()) + \" \" + &v1721(())"
                        let v1729 : string = " " + v1728 + v1291 + ""
                        let v1730 : string = "$0"
                        let v1731 : (unit -> string) = closure298()
                        let v1732 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1731 v1730 
                        let v1733 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v1734 : string = " " + v1733 + v1291 + ""
                        let v1735 : leptos_dom_Fragment = v1717 ()
                        let v1736 : string = "leptos::prelude::AnyView::from($0)"
                        let v1737 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1735 v1736 
                        let v1738 : string = "dt"
                        let v1739 : string = "<" + v1738 + " " + v1734 + ">move || { v1737 }</" + v1738 + ">"
                        let v1740 : string = "leptos::prelude::view! { " + v1739 + " }"
                        let v1741 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1740 
                        let v1742 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v1741 |> unbox
                        let v1743 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1744 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1742 v1743 
                        let v1745 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v1732(())"
                        let v1746 : string = " " + v1745 + v1291 + ""
                        let v1747 : leptos_dom_Fragment = v1718 ()
                        let v1748 : string = "leptos::prelude::AnyView::from($0)"
                        let v1749 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1747 v1748 
                        let v1750 : string = "dd"
                        let v1751 : string = "<" + v1750 + " " + v1746 + ">move || { v1749 }</" + v1750 + ">"
                        let v1752 : string = "leptos::prelude::view! { " + v1751 + " }"
                        let v1753 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1752 
                        let v1754 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v1753 |> unbox
                        let v1755 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1756 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1754 v1755 
                        let v1757 : string = "v1756"
                        let v1758 : string = v1757 + v1291 
                        let v1759 : string = v1758 + v1291 
                        let v1760 : string = "v1744"
                        let v1761 : string = ", "
                        let v1762 : string = v1760 + v1761 
                        let v1763 : string = v1762 + v1759 
                        let v1764 : string = "vec![" + v1763 + "]"
                        let v1765 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1764 
                        let v1766 : string = "leptos::prelude::Fragment::new($0)"
                        let v1767 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1765 v1766 
                        let v1768 : string = "leptos::prelude::AnyView::from($0)"
                        let v1769 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1767 v1768 
                        let v1770 : string = "dl"
                        let v1771 : string = "<" + v1770 + " " + v1729 + ">move || { v1769 }</" + v1770 + ">"
                        let v1772 : string = "leptos::prelude::view! { " + v1771 + " }"
                        let v1773 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1772 
                        let v1774 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v1773 |> unbox
                        let v1775 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1776 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1774 v1775 
                        let v1777 : string = "true; $0 }).collect::<Vec<_>>()"
                        let v1778 : bool = Fable.Core.RustInterop.emitRustExpr v1776 v1777 
                        let v1779 : string = "_vec_map"
                        let v1780 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1779 
                        let v1781 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1782 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1780 v1781 
                        let v1783 : string = "v1782"
                        let v1784 : string = v1783 + v1291 
                        let v1785 : string = v1784 + v1291 
                        let v1786 : string = "vec![" + v1785 + "]"
                        let v1787 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1786 
                        let v1788 : string = "leptos::prelude::Fragment::new($0)"
                        let v1789 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1787 v1788 
                        let v1790 : string = "leptos::prelude::AnyView::from($0)"
                        let v1791 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1789 v1790 
                        let v1792 : string = "<" + v1372 + " " + v1708 + ">move || { v1791 }</" + v1372 + ">"
                        let v1793 : string = "leptos::prelude::view! { " + v1792 + " }"
                        let v1794 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1793 
                        let v1795 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1794 |> unbox
                        let v1796 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1797 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1795 v1796 
                        let v1798 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1799 : string = " " + v1798 + v1291 + ""
                        let v1800 : float = v1286.l8
                        let v1802 : (float -> string) = _.ToString()
                        let v1803 : string = v1802 v1800
                        (* run_target_args'
                        let v1810 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1811 : string = "&*$0"
                        let v1812 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1803 v1811 
                        let _run_target_args'_v1810 = v1812 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1813 : string = "&*$0"
                        let v1814 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1803 v1813 
                        let _run_target_args'_v1810 = v1814 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1815 : string = "&*$0"
                        let v1816 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1803 v1815 
                        let _run_target_args'_v1810 = v1816 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1818 : Ref<Str> = v1803 |> unbox<Ref<Str>>
                        let _run_target_args'_v1810 = v1818 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1822 : Ref<Str> = v1803 |> unbox<Ref<Str>>
                        let _run_target_args'_v1810 = v1822 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1826 : Ref<Str> = v1803 |> unbox<Ref<Str>>
                        let _run_target_args'_v1810 = v1826 
                        #endif
#else
                        let v1830 : Ref<Str> = v1803 |> unbox<Ref<Str>>
                        let _run_target_args'_v1810 = v1830 
                        #endif
                        let v1833 : Ref<Str> = _run_target_args'_v1810 
                        (* run_target_args'
                        let v1843 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1844 : string = "String::from($0)"
                        let v1845 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1833 v1844 
                        let _run_target_args'_v1843 = v1845 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1846 : string = "String::from($0)"
                        let v1847 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1833 v1846 
                        let _run_target_args'_v1843 = v1847 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1848 : string = "String::from($0)"
                        let v1849 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1833 v1848 
                        let _run_target_args'_v1843 = v1849 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1851 : std_string_String = v1833 |> unbox<std_string_String>
                        let _run_target_args'_v1843 = v1851 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1855 : std_string_String = v1833 |> unbox<std_string_String>
                        let _run_target_args'_v1843 = v1855 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1859 : std_string_String = v1833 |> unbox<std_string_String>
                        let _run_target_args'_v1843 = v1859 
                        #endif
#else
                        let v1863 : std_string_String = v1833 |> unbox<std_string_String>
                        let _run_target_args'_v1843 = v1863 
                        #endif
                        let v1866 : std_string_String = _run_target_args'_v1843 
                        let v1872 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1873 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1866 v1872 
                        let v1874 : string = "v1873"
                        let v1875 : string = v1874 + v1291 
                        let v1876 : string = v1875 + v1291 
                        let v1877 : string = "vec![" + v1876 + "]"
                        let v1878 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1877 
                        let v1879 : string = "leptos::prelude::Fragment::new($0)"
                        let v1880 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1878 v1879 
                        let v1881 : string = "leptos::prelude::AnyView::from($0)"
                        let v1882 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1880 v1881 
                        let v1883 : string = "<" + v1372 + " " + v1799 + ">move || { v1882 }</" + v1372 + ">"
                        let v1884 : string = "leptos::prelude::view! { " + v1883 + " }"
                        let v1885 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1884 
                        let v1886 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1885 |> unbox
                        let v1887 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1888 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1886 v1887 
                        let v1889 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1890 : string = " " + v1889 + v1291 + ""
                        let v1891 : float = v1286.l10
                        let v1893 : (float -> string) = _.ToString()
                        let v1894 : string = v1893 v1891
                        (* run_target_args'
                        let v1901 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1902 : string = "&*$0"
                        let v1903 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1894 v1902 
                        let _run_target_args'_v1901 = v1903 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1904 : string = "&*$0"
                        let v1905 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1894 v1904 
                        let _run_target_args'_v1901 = v1905 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1906 : string = "&*$0"
                        let v1907 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1894 v1906 
                        let _run_target_args'_v1901 = v1907 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1909 : Ref<Str> = v1894 |> unbox<Ref<Str>>
                        let _run_target_args'_v1901 = v1909 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1913 : Ref<Str> = v1894 |> unbox<Ref<Str>>
                        let _run_target_args'_v1901 = v1913 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1917 : Ref<Str> = v1894 |> unbox<Ref<Str>>
                        let _run_target_args'_v1901 = v1917 
                        #endif
#else
                        let v1921 : Ref<Str> = v1894 |> unbox<Ref<Str>>
                        let _run_target_args'_v1901 = v1921 
                        #endif
                        let v1924 : Ref<Str> = _run_target_args'_v1901 
                        (* run_target_args'
                        let v1934 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1935 : string = "String::from($0)"
                        let v1936 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1924 v1935 
                        let _run_target_args'_v1934 = v1936 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1937 : string = "String::from($0)"
                        let v1938 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1924 v1937 
                        let _run_target_args'_v1934 = v1938 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1939 : string = "String::from($0)"
                        let v1940 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1924 v1939 
                        let _run_target_args'_v1934 = v1940 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1942 : std_string_String = v1924 |> unbox<std_string_String>
                        let _run_target_args'_v1934 = v1942 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1946 : std_string_String = v1924 |> unbox<std_string_String>
                        let _run_target_args'_v1934 = v1946 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1950 : std_string_String = v1924 |> unbox<std_string_String>
                        let _run_target_args'_v1934 = v1950 
                        #endif
#else
                        let v1954 : std_string_String = v1924 |> unbox<std_string_String>
                        let _run_target_args'_v1934 = v1954 
                        #endif
                        let v1957 : std_string_String = _run_target_args'_v1934 
                        let v1963 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1964 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1957 v1963 
                        let v1965 : string = "v1964"
                        let v1966 : string = v1965 + v1291 
                        let v1967 : string = v1966 + v1291 
                        let v1968 : string = "vec![" + v1967 + "]"
                        let v1969 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1968 
                        let v1970 : string = "leptos::prelude::Fragment::new($0)"
                        let v1971 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1969 v1970 
                        let v1972 : string = "leptos::prelude::AnyView::from($0)"
                        let v1973 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1971 v1972 
                        let v1974 : string = "<" + v1372 + " " + v1890 + ">move || { v1973 }</" + v1372 + ">"
                        let v1975 : string = "leptos::prelude::view! { " + v1974 + " }"
                        let v1976 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1975 
                        let v1977 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1976 |> unbox
                        let v1978 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1979 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1977 v1978 
                        let v1980 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1981 : string = " " + v1980 + v1291 + ""
                        let v1982 : uint32 = v1286.l6
                        let v1984 : (uint32 -> string) = _.ToString()
                        let v1985 : string = v1984 v1982
                        (* run_target_args'
                        let v1992 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1993 : string = "&*$0"
                        let v1994 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1985 v1993 
                        let _run_target_args'_v1992 = v1994 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1995 : string = "&*$0"
                        let v1996 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1985 v1995 
                        let _run_target_args'_v1992 = v1996 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1997 : string = "&*$0"
                        let v1998 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1985 v1997 
                        let _run_target_args'_v1992 = v1998 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2000 : Ref<Str> = v1985 |> unbox<Ref<Str>>
                        let _run_target_args'_v1992 = v2000 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2004 : Ref<Str> = v1985 |> unbox<Ref<Str>>
                        let _run_target_args'_v1992 = v2004 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2008 : Ref<Str> = v1985 |> unbox<Ref<Str>>
                        let _run_target_args'_v1992 = v2008 
                        #endif
#else
                        let v2012 : Ref<Str> = v1985 |> unbox<Ref<Str>>
                        let _run_target_args'_v1992 = v2012 
                        #endif
                        let v2015 : Ref<Str> = _run_target_args'_v1992 
                        (* run_target_args'
                        let v2025 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2026 : string = "String::from($0)"
                        let v2027 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2015 v2026 
                        let _run_target_args'_v2025 = v2027 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2028 : string = "String::from($0)"
                        let v2029 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2015 v2028 
                        let _run_target_args'_v2025 = v2029 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2030 : string = "String::from($0)"
                        let v2031 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2015 v2030 
                        let _run_target_args'_v2025 = v2031 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2033 : std_string_String = v2015 |> unbox<std_string_String>
                        let _run_target_args'_v2025 = v2033 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2037 : std_string_String = v2015 |> unbox<std_string_String>
                        let _run_target_args'_v2025 = v2037 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2041 : std_string_String = v2015 |> unbox<std_string_String>
                        let _run_target_args'_v2025 = v2041 
                        #endif
#else
                        let v2045 : std_string_String = v2015 |> unbox<std_string_String>
                        let _run_target_args'_v2025 = v2045 
                        #endif
                        let v2048 : std_string_String = _run_target_args'_v2025 
                        let v2054 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2055 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2048 v2054 
                        let v2056 : string = "v2055"
                        let v2057 : string = v2056 + v1291 
                        let v2058 : string = v2057 + v1291 
                        let v2059 : string = "vec![" + v2058 + "]"
                        let v2060 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2059 
                        let v2061 : string = "leptos::prelude::Fragment::new($0)"
                        let v2062 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2060 v2061 
                        let v2063 : string = "leptos::prelude::AnyView::from($0)"
                        let v2064 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2062 v2063 
                        let v2065 : string = "<" + v1372 + " " + v1981 + ">move || { v2064 }</" + v1372 + ">"
                        let v2066 : string = "leptos::prelude::view! { " + v2065 + " }"
                        let v2067 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2066 
                        let v2068 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2067 |> unbox
                        let v2069 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2070 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2068 v2069 
                        let v2071 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500 [overflow:auto]\""
                        let v2072 : string = " " + v2071 + v1291 + ""
                        let v2073 : (std_string_String []) = v1286.l11
                        let v2074 : uint64 = System.Convert.ToUInt64 v2073.Length
                        let v2075 : bool = v2074 = 0UL
                        let v2285 : leptos_dom_Fragment =
                            if v2075 then
                                (* run_target_args'
                                let v2080 : unit = ()
                                run_target_args' *)
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v2081 : string = "&*$0"
                                let v2082 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1291 v2081 
                                let _run_target_args'_v2080 = v2082 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v2083 : string = "&*$0"
                                let v2084 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1291 v2083 
                                let _run_target_args'_v2080 = v2084 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v2085 : string = "&*$0"
                                let v2086 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1291 v2085 
                                let _run_target_args'_v2080 = v2086 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v2088 : Ref<Str> = v1291 |> unbox<Ref<Str>>
                                let _run_target_args'_v2080 = v2088 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v2092 : Ref<Str> = v1291 |> unbox<Ref<Str>>
                                let _run_target_args'_v2080 = v2092 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v2096 : Ref<Str> = v1291 |> unbox<Ref<Str>>
                                let _run_target_args'_v2080 = v2096 
                                #endif
#else
                                let v2100 : Ref<Str> = v1291 |> unbox<Ref<Str>>
                                let _run_target_args'_v2080 = v2100 
                                #endif
                                let v2103 : Ref<Str> = _run_target_args'_v2080 
                                (* run_target_args'
                                let v2113 : unit = ()
                                run_target_args' *)
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v2114 : string = "String::from($0)"
                                let v2115 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2103 v2114 
                                let _run_target_args'_v2113 = v2115 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v2116 : string = "String::from($0)"
                                let v2117 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2103 v2116 
                                let _run_target_args'_v2113 = v2117 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v2118 : string = "String::from($0)"
                                let v2119 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2103 v2118 
                                let _run_target_args'_v2113 = v2119 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v2121 : std_string_String = v2103 |> unbox<std_string_String>
                                let _run_target_args'_v2113 = v2121 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v2125 : std_string_String = v2103 |> unbox<std_string_String>
                                let _run_target_args'_v2113 = v2125 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v2129 : std_string_String = v2103 |> unbox<std_string_String>
                                let _run_target_args'_v2113 = v2129 
                                #endif
#else
                                let v2133 : std_string_String = v2103 |> unbox<std_string_String>
                                let _run_target_args'_v2113 = v2133 
                                #endif
                                let v2136 : std_string_String = _run_target_args'_v2113 
                                let v2142 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                                let v2143 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2136 v2142 
                                let v2144 : string = "v2143"
                                let v2145 : string = v2144 + v1291 
                                let v2146 : string = v2145 + v1291 
                                let v2147 : string = "vec![" + v2146 + "]"
                                let v2148 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2147 
                                let v2149 : string = "leptos::prelude::Fragment::new($0)"
                                let v2150 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2148 v2149 
                                v2150
                            else
                                let v2151 : (std_string_String []) = v1286.l11
                                let v2152 : string = "$0.to_vec()"
                                let v2153 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v2151 v2152 
                                let v2154 : unit = ()
                                let v2155 : string = $"true; let _func1_from_v2154 = Func1::from(move |value| {{ //"
                                let v2156 : bool = Fable.Core.RustInterop.emitRustExpr () v2155 
                                let v2157 : string = $"value"
                                let v2158 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v2157 
                                let v2159 : string = "fable_library_rust::String_::fromString($0)"
                                let v2160 : string = Fable.Core.RustInterop.emitRustExpr v2158 v2159 
                                let func1_from_result = v2160 //
                                let v2161 : _ = func1_from_result
                                let v2162 : string = $"true; $0 /*"
                                let v2163 : bool = Fable.Core.RustInterop.emitRustExpr v2161 v2162 
                                let v2164 : string = $"*/ }}); //"
                                let v2165 : bool = Fable.Core.RustInterop.emitRustExpr () v2164 
                                let v2166 : string = $"_func1_from_v2154"
                                let v2167 : Func0<std_string_String, string> = Fable.Core.RustInterop.emitRustExpr () v2166 
                                let v2168 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
                                let v2169 : (std_string_String -> string) = closure332(v2167)
                                let v2170 : Vec<string> = Fable.Core.RustInterop.emitRustExpr struct (v2153, v2169) v2168 
                                let v2171 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                                let v2172 : (string []) = Fable.Core.RustInterop.emitRustExpr v2170 v2171 
                                let v2174 : string seq = v2172 |> Seq.ofArray
                                let v2179 : string = method279()
                                let v2180 : (string -> (string seq -> string)) = String.concat
                                let v2181 : (string seq -> string) = v2180 v2179
                                let v2182 : string = v2181 v2174
                                let v2186 : string = "\\n"
                                let v2187 : string = "\n"
                                let v2188 : string = v2182.Replace (v2186, v2187)
                                let v2189 : string = "$0"
                                let v2190 : (unit -> string) = closure336()
                                let v2191 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v2190 v2189 
                                let v2192 : string = "class=move || \"[padding:1px] [font-size:12px] [line-height:12px] [text-wrap:pretty] \".to_owned() + &v2191(())"
                                let v2193 : string = " " + v2192 + v1291 + ""
                                (* run_target_args'
                                let v2198 : unit = ()
                                run_target_args' *)
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v2199 : string = "&*$0"
                                let v2200 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2188 v2199 
                                let _run_target_args'_v2198 = v2200 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v2201 : string = "&*$0"
                                let v2202 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2188 v2201 
                                let _run_target_args'_v2198 = v2202 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v2203 : string = "&*$0"
                                let v2204 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2188 v2203 
                                let _run_target_args'_v2198 = v2204 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v2206 : Ref<Str> = v2188 |> unbox<Ref<Str>>
                                let _run_target_args'_v2198 = v2206 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v2210 : Ref<Str> = v2188 |> unbox<Ref<Str>>
                                let _run_target_args'_v2198 = v2210 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v2214 : Ref<Str> = v2188 |> unbox<Ref<Str>>
                                let _run_target_args'_v2198 = v2214 
                                #endif
#else
                                let v2218 : Ref<Str> = v2188 |> unbox<Ref<Str>>
                                let _run_target_args'_v2198 = v2218 
                                #endif
                                let v2221 : Ref<Str> = _run_target_args'_v2198 
                                (* run_target_args'
                                let v2231 : unit = ()
                                run_target_args' *)
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v2232 : string = "String::from($0)"
                                let v2233 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2221 v2232 
                                let _run_target_args'_v2231 = v2233 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v2234 : string = "String::from($0)"
                                let v2235 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2221 v2234 
                                let _run_target_args'_v2231 = v2235 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v2236 : string = "String::from($0)"
                                let v2237 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2221 v2236 
                                let _run_target_args'_v2231 = v2237 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v2239 : std_string_String = v2221 |> unbox<std_string_String>
                                let _run_target_args'_v2231 = v2239 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v2243 : std_string_String = v2221 |> unbox<std_string_String>
                                let _run_target_args'_v2231 = v2243 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v2247 : std_string_String = v2221 |> unbox<std_string_String>
                                let _run_target_args'_v2231 = v2247 
                                #endif
#else
                                let v2251 : std_string_String = v2221 |> unbox<std_string_String>
                                let _run_target_args'_v2231 = v2251 
                                #endif
                                let v2254 : std_string_String = _run_target_args'_v2231 
                                let v2260 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                                let v2261 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2254 v2260 
                                let v2262 : string = "v2261"
                                let v2263 : string = v2262 + v1291 
                                let v2264 : string = v2263 + v1291 
                                let v2265 : string = "vec![" + v2264 + "]"
                                let v2266 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2265 
                                let v2267 : string = "leptos::prelude::Fragment::new($0)"
                                let v2268 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2266 v2267 
                                let v2269 : string = "leptos::prelude::AnyView::from($0)"
                                let v2270 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2268 v2269 
                                let v2271 : string = "pre"
                                let v2272 : string = "<" + v2271 + " " + v2193 + ">move || { v2270 }</" + v2271 + ">"
                                let v2273 : string = "leptos::prelude::view! { " + v2272 + " }"
                                let v2274 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2273 
                                let v2275 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v2274 |> unbox
                                let v2276 : string = "leptos::prelude::IntoAny::into_any($0)"
                                let v2277 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2275 v2276 
                                let v2278 : string = "v2277"
                                let v2279 : string = v2278 + v1291 
                                let v2280 : string = v2279 + v1291 
                                let v2281 : string = "vec![" + v2280 + "]"
                                let v2282 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2281 
                                let v2283 : string = "leptos::prelude::Fragment::new($0)"
                                let v2284 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2282 v2283 
                                v2284
                        let v2286 : string = "leptos::prelude::AnyView::from($0)"
                        let v2287 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2285 v2286 
                        let v2288 : string = "<" + v1372 + " " + v2072 + ">move || { v2287 }</" + v1372 + ">"
                        let v2289 : string = "leptos::prelude::view! { " + v2288 + " }"
                        let v2290 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2289 
                        let v2291 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2290 |> unbox
                        let v2292 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2293 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2291 v2292 
                        let v2294 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v2295 : string = " " + v2294 + v1291 + ""
                        let v2296 : bool = v1286.l9
                        let v2298 : (bool -> string) = _.ToString()
                        let v2299 : string = v2298 v2296
                        (* run_target_args'
                        let v2306 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2307 : string = "&*$0"
                        let v2308 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2299 v2307 
                        let _run_target_args'_v2306 = v2308 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2309 : string = "&*$0"
                        let v2310 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2299 v2309 
                        let _run_target_args'_v2306 = v2310 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2311 : string = "&*$0"
                        let v2312 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2299 v2311 
                        let _run_target_args'_v2306 = v2312 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2314 : Ref<Str> = v2299 |> unbox<Ref<Str>>
                        let _run_target_args'_v2306 = v2314 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2318 : Ref<Str> = v2299 |> unbox<Ref<Str>>
                        let _run_target_args'_v2306 = v2318 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2322 : Ref<Str> = v2299 |> unbox<Ref<Str>>
                        let _run_target_args'_v2306 = v2322 
                        #endif
#else
                        let v2326 : Ref<Str> = v2299 |> unbox<Ref<Str>>
                        let _run_target_args'_v2306 = v2326 
                        #endif
                        let v2329 : Ref<Str> = _run_target_args'_v2306 
                        (* run_target_args'
                        let v2339 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2340 : string = "String::from($0)"
                        let v2341 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2329 v2340 
                        let _run_target_args'_v2339 = v2341 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2342 : string = "String::from($0)"
                        let v2343 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2329 v2342 
                        let _run_target_args'_v2339 = v2343 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2344 : string = "String::from($0)"
                        let v2345 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2329 v2344 
                        let _run_target_args'_v2339 = v2345 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2347 : std_string_String = v2329 |> unbox<std_string_String>
                        let _run_target_args'_v2339 = v2347 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2351 : std_string_String = v2329 |> unbox<std_string_String>
                        let _run_target_args'_v2339 = v2351 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2355 : std_string_String = v2329 |> unbox<std_string_String>
                        let _run_target_args'_v2339 = v2355 
                        #endif
#else
                        let v2359 : std_string_String = v2329 |> unbox<std_string_String>
                        let _run_target_args'_v2339 = v2359 
                        #endif
                        let v2362 : std_string_String = _run_target_args'_v2339 
                        let v2368 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2369 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2362 v2368 
                        let v2370 : string = "v2369"
                        let v2371 : string = v2370 + v1291 
                        let v2372 : string = v2371 + v1291 
                        let v2373 : string = "vec![" + v2372 + "]"
                        let v2374 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2373 
                        let v2375 : string = "leptos::prelude::Fragment::new($0)"
                        let v2376 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2374 v2375 
                        let v2377 : string = "leptos::prelude::AnyView::from($0)"
                        let v2378 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2376 v2377 
                        let v2379 : string = "<" + v1372 + " " + v2295 + ">move || { v2378 }</" + v1372 + ">"
                        let v2380 : string = "leptos::prelude::view! { " + v2379 + " }"
                        let v2381 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2380 
                        let v2382 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2381 |> unbox
                        let v2383 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2384 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2382 v2383 
                        let v2385 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v2386 : string = " " + v2385 + v1291 + ""
                        let v2387 : std_string_String = v1286.l3
                        let v2388 : string = "fable_library_rust::String_::fromString($0)"
                        let v2389 : string = Fable.Core.RustInterop.emitRustExpr v2387 v2388 
                        (* run_target_args'
                        let v2394 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2395 : string = "&*$0"
                        let v2396 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2389 v2395 
                        let _run_target_args'_v2394 = v2396 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2397 : string = "&*$0"
                        let v2398 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2389 v2397 
                        let _run_target_args'_v2394 = v2398 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2399 : string = "&*$0"
                        let v2400 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2389 v2399 
                        let _run_target_args'_v2394 = v2400 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2402 : Ref<Str> = v2389 |> unbox<Ref<Str>>
                        let _run_target_args'_v2394 = v2402 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2406 : Ref<Str> = v2389 |> unbox<Ref<Str>>
                        let _run_target_args'_v2394 = v2406 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2410 : Ref<Str> = v2389 |> unbox<Ref<Str>>
                        let _run_target_args'_v2394 = v2410 
                        #endif
#else
                        let v2414 : Ref<Str> = v2389 |> unbox<Ref<Str>>
                        let _run_target_args'_v2394 = v2414 
                        #endif
                        let v2417 : Ref<Str> = _run_target_args'_v2394 
                        (* run_target_args'
                        let v2427 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2428 : string = "String::from($0)"
                        let v2429 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2417 v2428 
                        let _run_target_args'_v2427 = v2429 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2430 : string = "String::from($0)"
                        let v2431 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2417 v2430 
                        let _run_target_args'_v2427 = v2431 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2432 : string = "String::from($0)"
                        let v2433 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2417 v2432 
                        let _run_target_args'_v2427 = v2433 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2435 : std_string_String = v2417 |> unbox<std_string_String>
                        let _run_target_args'_v2427 = v2435 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2439 : std_string_String = v2417 |> unbox<std_string_String>
                        let _run_target_args'_v2427 = v2439 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2443 : std_string_String = v2417 |> unbox<std_string_String>
                        let _run_target_args'_v2427 = v2443 
                        #endif
#else
                        let v2447 : std_string_String = v2417 |> unbox<std_string_String>
                        let _run_target_args'_v2427 = v2447 
                        #endif
                        let v2450 : std_string_String = _run_target_args'_v2427 
                        let v2456 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2457 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2450 v2456 
                        let v2458 : string = "v2457"
                        let v2459 : string = v2458 + v1291 
                        let v2460 : string = v2459 + v1291 
                        let v2461 : string = "vec![" + v2460 + "]"
                        let v2462 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2461 
                        let v2463 : string = "leptos::prelude::Fragment::new($0)"
                        let v2464 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2462 v2463 
                        let v2465 : string = "leptos::prelude::AnyView::from($0)"
                        let v2466 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2464 v2465 
                        let v2467 : string = "<" + v1372 + " " + v2386 + ">move || { v2466 }</" + v1372 + ">"
                        let v2468 : string = "leptos::prelude::view! { " + v2467 + " }"
                        let v2469 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2468 
                        let v2470 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2469 |> unbox
                        let v2471 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2472 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2470 v2471 
                        let v2473 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v2474 : string = " " + v2473 + v1291 + ""
                        let v2475 : std_string_String = v1286.l4
                        let v2476 : string = "fable_library_rust::String_::fromString($0)"
                        let v2477 : string = Fable.Core.RustInterop.emitRustExpr v2475 v2476 
                        (* run_target_args'
                        let v2482 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2483 : string = "&*$0"
                        let v2484 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2477 v2483 
                        let _run_target_args'_v2482 = v2484 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2485 : string = "&*$0"
                        let v2486 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2477 v2485 
                        let _run_target_args'_v2482 = v2486 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2487 : string = "&*$0"
                        let v2488 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2477 v2487 
                        let _run_target_args'_v2482 = v2488 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2490 : Ref<Str> = v2477 |> unbox<Ref<Str>>
                        let _run_target_args'_v2482 = v2490 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2494 : Ref<Str> = v2477 |> unbox<Ref<Str>>
                        let _run_target_args'_v2482 = v2494 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2498 : Ref<Str> = v2477 |> unbox<Ref<Str>>
                        let _run_target_args'_v2482 = v2498 
                        #endif
#else
                        let v2502 : Ref<Str> = v2477 |> unbox<Ref<Str>>
                        let _run_target_args'_v2482 = v2502 
                        #endif
                        let v2505 : Ref<Str> = _run_target_args'_v2482 
                        (* run_target_args'
                        let v2515 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2516 : string = "String::from($0)"
                        let v2517 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2505 v2516 
                        let _run_target_args'_v2515 = v2517 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2518 : string = "String::from($0)"
                        let v2519 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2505 v2518 
                        let _run_target_args'_v2515 = v2519 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2520 : string = "String::from($0)"
                        let v2521 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2505 v2520 
                        let _run_target_args'_v2515 = v2521 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2523 : std_string_String = v2505 |> unbox<std_string_String>
                        let _run_target_args'_v2515 = v2523 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2527 : std_string_String = v2505 |> unbox<std_string_String>
                        let _run_target_args'_v2515 = v2527 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2531 : std_string_String = v2505 |> unbox<std_string_String>
                        let _run_target_args'_v2515 = v2531 
                        #endif
#else
                        let v2535 : std_string_String = v2505 |> unbox<std_string_String>
                        let _run_target_args'_v2515 = v2535 
                        #endif
                        let v2538 : std_string_String = _run_target_args'_v2515 
                        let v2544 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2545 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2538 v2544 
                        let v2546 : string = "v2545"
                        let v2547 : string = v2546 + v1291 
                        let v2548 : string = v2547 + v1291 
                        let v2549 : string = "vec![" + v2548 + "]"
                        let v2550 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2549 
                        let v2551 : string = "leptos::prelude::Fragment::new($0)"
                        let v2552 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2550 v2551 
                        let v2553 : string = "leptos::prelude::AnyView::from($0)"
                        let v2554 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2552 v2553 
                        let v2555 : string = "<" + v1372 + " " + v2474 + ">move || { v2554 }</" + v1372 + ">"
                        let v2556 : string = "leptos::prelude::view! { " + v2555 + " }"
                        let v2557 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2556 
                        let v2558 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2557 |> unbox
                        let v2559 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2560 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2558 v2559 
                        let v2561 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v2562 : string = " " + v2561 + v1291 + ""
                        let v2563 : std_string_String = v1286.l0
                        let v2564 : string = "fable_library_rust::String_::fromString($0)"
                        let v2565 : string = Fable.Core.RustInterop.emitRustExpr v2563 v2564 
                        (* run_target_args'
                        let v2570 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2571 : string = "&*$0"
                        let v2572 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2565 v2571 
                        let _run_target_args'_v2570 = v2572 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2573 : string = "&*$0"
                        let v2574 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2565 v2573 
                        let _run_target_args'_v2570 = v2574 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2575 : string = "&*$0"
                        let v2576 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2565 v2575 
                        let _run_target_args'_v2570 = v2576 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2578 : Ref<Str> = v2565 |> unbox<Ref<Str>>
                        let _run_target_args'_v2570 = v2578 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2582 : Ref<Str> = v2565 |> unbox<Ref<Str>>
                        let _run_target_args'_v2570 = v2582 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2586 : Ref<Str> = v2565 |> unbox<Ref<Str>>
                        let _run_target_args'_v2570 = v2586 
                        #endif
#else
                        let v2590 : Ref<Str> = v2565 |> unbox<Ref<Str>>
                        let _run_target_args'_v2570 = v2590 
                        #endif
                        let v2593 : Ref<Str> = _run_target_args'_v2570 
                        (* run_target_args'
                        let v2603 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2604 : string = "String::from($0)"
                        let v2605 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2593 v2604 
                        let _run_target_args'_v2603 = v2605 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2606 : string = "String::from($0)"
                        let v2607 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2593 v2606 
                        let _run_target_args'_v2603 = v2607 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2608 : string = "String::from($0)"
                        let v2609 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2593 v2608 
                        let _run_target_args'_v2603 = v2609 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2611 : std_string_String = v2593 |> unbox<std_string_String>
                        let _run_target_args'_v2603 = v2611 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2615 : std_string_String = v2593 |> unbox<std_string_String>
                        let _run_target_args'_v2603 = v2615 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2619 : std_string_String = v2593 |> unbox<std_string_String>
                        let _run_target_args'_v2603 = v2619 
                        #endif
#else
                        let v2623 : std_string_String = v2593 |> unbox<std_string_String>
                        let _run_target_args'_v2603 = v2623 
                        #endif
                        let v2626 : std_string_String = _run_target_args'_v2603 
                        let v2632 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2633 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2626 v2632 
                        let v2634 : string = "v2633"
                        let v2635 : string = v2634 + v1291 
                        let v2636 : string = v2635 + v1291 
                        let v2637 : string = "vec![" + v2636 + "]"
                        let v2638 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2637 
                        let v2639 : string = "leptos::prelude::Fragment::new($0)"
                        let v2640 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2638 v2639 
                        let v2641 : string = "leptos::prelude::AnyView::from($0)"
                        let v2642 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2640 v2641 
                        let v2643 : string = "<" + v1372 + " " + v2562 + ">move || { v2642 }</" + v1372 + ">"
                        let v2644 : string = "leptos::prelude::view! { " + v2643 + " }"
                        let v2645 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2644 
                        let v2646 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2645 |> unbox
                        let v2647 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2648 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2646 v2647 
                        let v2649 : string = "v2648"
                        let v2650 : string = v2649 + v1291 
                        let v2651 : string = v2650 + v1291 
                        let v2652 : string = "v2560"
                        let v2653 : string = v2652 + v1761 
                        let v2654 : string = v2653 + v2651 
                        let v2655 : string = "v2472"
                        let v2656 : string = v2655 + v1761 
                        let v2657 : string = v2656 + v2654 
                        let v2658 : string = "v2384"
                        let v2659 : string = v2658 + v1761 
                        let v2660 : string = v2659 + v2657 
                        let v2661 : string = "v2293"
                        let v2662 : string = v2661 + v1761 
                        let v2663 : string = v2662 + v2660 
                        let v2664 : string = "v2070"
                        let v2665 : string = v2664 + v1761 
                        let v2666 : string = v2665 + v2663 
                        let v2667 : string = "v1979"
                        let v2668 : string = v2667 + v1761 
                        let v2669 : string = v2668 + v2666 
                        let v2670 : string = "v1888"
                        let v2671 : string = v2670 + v1761 
                        let v2672 : string = v2671 + v2669 
                        let v2673 : string = "v1797"
                        let v2674 : string = v2673 + v1761 
                        let v2675 : string = v2674 + v2672 
                        let v2676 : string = "v1706"
                        let v2677 : string = v2676 + v1761 
                        let v2678 : string = v2677 + v2675 
                        let v2679 : string = "v1618"
                        let v2680 : string = v2679 + v1761 
                        let v2681 : string = v2680 + v2678 
                        let v2682 : string = "v1530"
                        let v2683 : string = v2682 + v1761 
                        let v2684 : string = v2683 + v2681 
                        let v2685 : string = "v1378"
                        let v2686 : string = v2685 + v1761 
                        let v2687 : string = v2686 + v2684 
                        let v2688 : string = "vec![" + v2687 + "]"
                        let v2689 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2688 
                        let v2690 : string = "leptos::prelude::Fragment::new($0)"
                        let v2691 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2689 v2690 
                        let v2692 : string = "leptos::prelude::AnyView::from($0)"
                        let v2693 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2691 v2692 
                        let v2694 : string = "tr"
                        let v2695 : string = "<" + v2694 + " " + v1292 + ">move || { v2693 }</" + v2694 + ">"
                        let v2696 : string = "leptos::prelude::view! { " + v2695 + " }"
                        let v2697 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2696 
                        let v2698 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>> = v2697 |> unbox
                        let v2699 : string = "true; $0 }).collect::<Vec<_>>()"
                        let v2700 : bool = Fable.Core.RustInterop.emitRustExpr v2698 v2699 
                        let v2701 : string = "_vec_map"
                        let v2702 : Vec<leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>>> = Fable.Core.RustInterop.emitRustExpr () v2701 
                        let v2703 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                        let v2704 : bool = Fable.Core.RustInterop.emitRustExpr v2702 v2703 
                        let v2705 : string = "x"
                        let v2706 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>> = Fable.Core.RustInterop.emitRustExpr () v2705 
                        let v2707 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2708 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2706 v2707 
                        let v2709 : string = "true; $0 }).collect::<Vec<_>>()"
                        let v2710 : bool = Fable.Core.RustInterop.emitRustExpr v2708 v2709 
                        let v2711 : string = "_vec_map"
                        let v2712 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2711 
                        let v2713 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2714 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2712 v2713 
                        let v2715 : string = "v2714"
                        let v2716 : string = v2715 + v1291 
                        let v2717 : string = v2716 + v1291 
                        let v2718 : string = "vec![" + v2717 + "]"
                        let v2719 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2718 
                        let v2720 : string = "leptos::prelude::Fragment::new($0)"
                        let v2721 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2719 v2720 
                        let v2722 : string = "transaction.tr_head_render (1)"
                        let v2723 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v2724 : bool = Fable.Core.RustInterop.emitRustExpr v2722 v2723 
                        let v2725 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v2726 : string = " " + v2725 + v1291 + ""
                        let v2727 : string = "Account"
                        (* run_target_args'
                        let v2732 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2733 : string = "&*$0"
                        let v2734 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2727 v2733 
                        let _run_target_args'_v2732 = v2734 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2735 : string = "&*$0"
                        let v2736 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2727 v2735 
                        let _run_target_args'_v2732 = v2736 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2737 : string = "&*$0"
                        let v2738 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2727 v2737 
                        let _run_target_args'_v2732 = v2738 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2740 : Ref<Str> = v2727 |> unbox<Ref<Str>>
                        let _run_target_args'_v2732 = v2740 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2744 : Ref<Str> = v2727 |> unbox<Ref<Str>>
                        let _run_target_args'_v2732 = v2744 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2748 : Ref<Str> = v2727 |> unbox<Ref<Str>>
                        let _run_target_args'_v2732 = v2748 
                        #endif
#else
                        let v2752 : Ref<Str> = v2727 |> unbox<Ref<Str>>
                        let _run_target_args'_v2732 = v2752 
                        #endif
                        let v2755 : Ref<Str> = _run_target_args'_v2732 
                        (* run_target_args'
                        let v2765 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2766 : string = "String::from($0)"
                        let v2767 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2755 v2766 
                        let _run_target_args'_v2765 = v2767 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2768 : string = "String::from($0)"
                        let v2769 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2755 v2768 
                        let _run_target_args'_v2765 = v2769 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2770 : string = "String::from($0)"
                        let v2771 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2755 v2770 
                        let _run_target_args'_v2765 = v2771 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2773 : std_string_String = v2755 |> unbox<std_string_String>
                        let _run_target_args'_v2765 = v2773 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2777 : std_string_String = v2755 |> unbox<std_string_String>
                        let _run_target_args'_v2765 = v2777 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2781 : std_string_String = v2755 |> unbox<std_string_String>
                        let _run_target_args'_v2765 = v2781 
                        #endif
#else
                        let v2785 : std_string_String = v2755 |> unbox<std_string_String>
                        let _run_target_args'_v2765 = v2785 
                        #endif
                        let v2788 : std_string_String = _run_target_args'_v2765 
                        let v2794 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2795 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2788 v2794 
                        let v2796 : string = "v2795"
                        let v2797 : string = v2796 + v1291 
                        let v2798 : string = v2797 + v1291 
                        let v2799 : string = "vec![" + v2798 + "]"
                        let v2800 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2799 
                        let v2801 : string = "leptos::prelude::Fragment::new($0)"
                        let v2802 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2800 v2801 
                        let v2803 : string = "leptos::prelude::AnyView::from($0)"
                        let v2804 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2802 v2803 
                        let v2805 : string = "th"
                        let v2806 : string = "<" + v2805 + " " + v2726 + ">move || { v2804 }</" + v2805 + ">"
                        let v2807 : string = "leptos::prelude::view! { " + v2806 + " }"
                        let v2808 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2807 
                        let v2809 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v2808 |> unbox
                        let v2810 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2811 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2809 v2810 
                        let v2812 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v2813 : string = " " + v2812 + v1291 + ""
                        let v2814 : string = "Block Timestamp"
                        (* run_target_args'
                        let v2819 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2820 : string = "&*$0"
                        let v2821 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2814 v2820 
                        let _run_target_args'_v2819 = v2821 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2822 : string = "&*$0"
                        let v2823 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2814 v2822 
                        let _run_target_args'_v2819 = v2823 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2824 : string = "&*$0"
                        let v2825 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2814 v2824 
                        let _run_target_args'_v2819 = v2825 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2827 : Ref<Str> = v2814 |> unbox<Ref<Str>>
                        let _run_target_args'_v2819 = v2827 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2831 : Ref<Str> = v2814 |> unbox<Ref<Str>>
                        let _run_target_args'_v2819 = v2831 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2835 : Ref<Str> = v2814 |> unbox<Ref<Str>>
                        let _run_target_args'_v2819 = v2835 
                        #endif
#else
                        let v2839 : Ref<Str> = v2814 |> unbox<Ref<Str>>
                        let _run_target_args'_v2819 = v2839 
                        #endif
                        let v2842 : Ref<Str> = _run_target_args'_v2819 
                        (* run_target_args'
                        let v2852 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2853 : string = "String::from($0)"
                        let v2854 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2842 v2853 
                        let _run_target_args'_v2852 = v2854 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2855 : string = "String::from($0)"
                        let v2856 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2842 v2855 
                        let _run_target_args'_v2852 = v2856 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2857 : string = "String::from($0)"
                        let v2858 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2842 v2857 
                        let _run_target_args'_v2852 = v2858 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2860 : std_string_String = v2842 |> unbox<std_string_String>
                        let _run_target_args'_v2852 = v2860 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2864 : std_string_String = v2842 |> unbox<std_string_String>
                        let _run_target_args'_v2852 = v2864 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2868 : std_string_String = v2842 |> unbox<std_string_String>
                        let _run_target_args'_v2852 = v2868 
                        #endif
#else
                        let v2872 : std_string_String = v2842 |> unbox<std_string_String>
                        let _run_target_args'_v2852 = v2872 
                        #endif
                        let v2875 : std_string_String = _run_target_args'_v2852 
                        let v2881 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2882 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2875 v2881 
                        let v2883 : string = "v2882"
                        let v2884 : string = v2883 + v1291 
                        let v2885 : string = v2884 + v1291 
                        let v2886 : string = "vec![" + v2885 + "]"
                        let v2887 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2886 
                        let v2888 : string = "leptos::prelude::Fragment::new($0)"
                        let v2889 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2887 v2888 
                        let v2890 : string = "leptos::prelude::AnyView::from($0)"
                        let v2891 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2889 v2890 
                        let v2892 : string = "<" + v2805 + " " + v2813 + ">move || { v2891 }</" + v2805 + ">"
                        let v2893 : string = "leptos::prelude::view! { " + v2892 + " }"
                        let v2894 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2893 
                        let v2895 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v2894 |> unbox
                        let v2896 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2897 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2895 v2896 
                        let v2898 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v2899 : string = " " + v2898 + v1291 + ""
                        let v2900 : string = "Predecessor"
                        (* run_target_args'
                        let v2905 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2906 : string = "&*$0"
                        let v2907 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2900 v2906 
                        let _run_target_args'_v2905 = v2907 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2908 : string = "&*$0"
                        let v2909 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2900 v2908 
                        let _run_target_args'_v2905 = v2909 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2910 : string = "&*$0"
                        let v2911 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2900 v2910 
                        let _run_target_args'_v2905 = v2911 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2913 : Ref<Str> = v2900 |> unbox<Ref<Str>>
                        let _run_target_args'_v2905 = v2913 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2917 : Ref<Str> = v2900 |> unbox<Ref<Str>>
                        let _run_target_args'_v2905 = v2917 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2921 : Ref<Str> = v2900 |> unbox<Ref<Str>>
                        let _run_target_args'_v2905 = v2921 
                        #endif
#else
                        let v2925 : Ref<Str> = v2900 |> unbox<Ref<Str>>
                        let _run_target_args'_v2905 = v2925 
                        #endif
                        let v2928 : Ref<Str> = _run_target_args'_v2905 
                        (* run_target_args'
                        let v2938 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2939 : string = "String::from($0)"
                        let v2940 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2928 v2939 
                        let _run_target_args'_v2938 = v2940 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2941 : string = "String::from($0)"
                        let v2942 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2928 v2941 
                        let _run_target_args'_v2938 = v2942 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2943 : string = "String::from($0)"
                        let v2944 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2928 v2943 
                        let _run_target_args'_v2938 = v2944 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2946 : std_string_String = v2928 |> unbox<std_string_String>
                        let _run_target_args'_v2938 = v2946 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2950 : std_string_String = v2928 |> unbox<std_string_String>
                        let _run_target_args'_v2938 = v2950 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2954 : std_string_String = v2928 |> unbox<std_string_String>
                        let _run_target_args'_v2938 = v2954 
                        #endif
#else
                        let v2958 : std_string_String = v2928 |> unbox<std_string_String>
                        let _run_target_args'_v2938 = v2958 
                        #endif
                        let v2961 : std_string_String = _run_target_args'_v2938 
                        let v2967 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2968 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2961 v2967 
                        let v2969 : string = "v2968"
                        let v2970 : string = v2969 + v1291 
                        let v2971 : string = v2970 + v1291 
                        let v2972 : string = "vec![" + v2971 + "]"
                        let v2973 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2972 
                        let v2974 : string = "leptos::prelude::Fragment::new($0)"
                        let v2975 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2973 v2974 
                        let v2976 : string = "leptos::prelude::AnyView::from($0)"
                        let v2977 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2975 v2976 
                        let v2978 : string = "<" + v2805 + " " + v2899 + ">move || { v2977 }</" + v2805 + ">"
                        let v2979 : string = "leptos::prelude::view! { " + v2978 + " }"
                        let v2980 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2979 
                        let v2981 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v2980 |> unbox
                        let v2982 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2983 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2981 v2982 
                        let v2984 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v2985 : string = " " + v2984 + v1291 + ""
                        let v2986 : string = "Receiver"
                        (* run_target_args'
                        let v2991 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2992 : string = "&*$0"
                        let v2993 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2986 v2992 
                        let _run_target_args'_v2991 = v2993 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2994 : string = "&*$0"
                        let v2995 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2986 v2994 
                        let _run_target_args'_v2991 = v2995 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2996 : string = "&*$0"
                        let v2997 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2986 v2996 
                        let _run_target_args'_v2991 = v2997 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2999 : Ref<Str> = v2986 |> unbox<Ref<Str>>
                        let _run_target_args'_v2991 = v2999 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3003 : Ref<Str> = v2986 |> unbox<Ref<Str>>
                        let _run_target_args'_v2991 = v3003 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3007 : Ref<Str> = v2986 |> unbox<Ref<Str>>
                        let _run_target_args'_v2991 = v3007 
                        #endif
#else
                        let v3011 : Ref<Str> = v2986 |> unbox<Ref<Str>>
                        let _run_target_args'_v2991 = v3011 
                        #endif
                        let v3014 : Ref<Str> = _run_target_args'_v2991 
                        (* run_target_args'
                        let v3024 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3025 : string = "String::from($0)"
                        let v3026 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3014 v3025 
                        let _run_target_args'_v3024 = v3026 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3027 : string = "String::from($0)"
                        let v3028 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3014 v3027 
                        let _run_target_args'_v3024 = v3028 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3029 : string = "String::from($0)"
                        let v3030 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3014 v3029 
                        let _run_target_args'_v3024 = v3030 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3032 : std_string_String = v3014 |> unbox<std_string_String>
                        let _run_target_args'_v3024 = v3032 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3036 : std_string_String = v3014 |> unbox<std_string_String>
                        let _run_target_args'_v3024 = v3036 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3040 : std_string_String = v3014 |> unbox<std_string_String>
                        let _run_target_args'_v3024 = v3040 
                        #endif
#else
                        let v3044 : std_string_String = v3014 |> unbox<std_string_String>
                        let _run_target_args'_v3024 = v3044 
                        #endif
                        let v3047 : std_string_String = _run_target_args'_v3024 
                        let v3053 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3054 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3047 v3053 
                        let v3055 : string = "v3054"
                        let v3056 : string = v3055 + v1291 
                        let v3057 : string = v3056 + v1291 
                        let v3058 : string = "vec![" + v3057 + "]"
                        let v3059 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3058 
                        let v3060 : string = "leptos::prelude::Fragment::new($0)"
                        let v3061 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3059 v3060 
                        let v3062 : string = "leptos::prelude::AnyView::from($0)"
                        let v3063 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3061 v3062 
                        let v3064 : string = "<" + v2805 + " " + v2985 + ">move || { v3063 }</" + v2805 + ">"
                        let v3065 : string = "leptos::prelude::view! { " + v3064 + " }"
                        let v3066 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3065 
                        let v3067 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3066 |> unbox
                        let v3068 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3069 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3067 v3068 
                        let v3070 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3071 : string = " " + v3070 + v1291 + ""
                        let v3072 : string = "Action"
                        (* run_target_args'
                        let v3077 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3078 : string = "&*$0"
                        let v3079 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3072 v3078 
                        let _run_target_args'_v3077 = v3079 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3080 : string = "&*$0"
                        let v3081 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3072 v3080 
                        let _run_target_args'_v3077 = v3081 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3082 : string = "&*$0"
                        let v3083 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3072 v3082 
                        let _run_target_args'_v3077 = v3083 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3085 : Ref<Str> = v3072 |> unbox<Ref<Str>>
                        let _run_target_args'_v3077 = v3085 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3089 : Ref<Str> = v3072 |> unbox<Ref<Str>>
                        let _run_target_args'_v3077 = v3089 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3093 : Ref<Str> = v3072 |> unbox<Ref<Str>>
                        let _run_target_args'_v3077 = v3093 
                        #endif
#else
                        let v3097 : Ref<Str> = v3072 |> unbox<Ref<Str>>
                        let _run_target_args'_v3077 = v3097 
                        #endif
                        let v3100 : Ref<Str> = _run_target_args'_v3077 
                        (* run_target_args'
                        let v3110 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3111 : string = "String::from($0)"
                        let v3112 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3100 v3111 
                        let _run_target_args'_v3110 = v3112 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3113 : string = "String::from($0)"
                        let v3114 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3100 v3113 
                        let _run_target_args'_v3110 = v3114 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3115 : string = "String::from($0)"
                        let v3116 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3100 v3115 
                        let _run_target_args'_v3110 = v3116 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3118 : std_string_String = v3100 |> unbox<std_string_String>
                        let _run_target_args'_v3110 = v3118 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3122 : std_string_String = v3100 |> unbox<std_string_String>
                        let _run_target_args'_v3110 = v3122 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3126 : std_string_String = v3100 |> unbox<std_string_String>
                        let _run_target_args'_v3110 = v3126 
                        #endif
#else
                        let v3130 : std_string_String = v3100 |> unbox<std_string_String>
                        let _run_target_args'_v3110 = v3130 
                        #endif
                        let v3133 : std_string_String = _run_target_args'_v3110 
                        let v3139 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3140 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3133 v3139 
                        let v3141 : string = "v3140"
                        let v3142 : string = v3141 + v1291 
                        let v3143 : string = v3142 + v1291 
                        let v3144 : string = "vec![" + v3143 + "]"
                        let v3145 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3144 
                        let v3146 : string = "leptos::prelude::Fragment::new($0)"
                        let v3147 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3145 v3146 
                        let v3148 : string = "leptos::prelude::AnyView::from($0)"
                        let v3149 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3147 v3148 
                        let v3150 : string = "<" + v2805 + " " + v3071 + ">move || { v3149 }</" + v2805 + ">"
                        let v3151 : string = "leptos::prelude::view! { " + v3150 + " }"
                        let v3152 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3151 
                        let v3153 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3152 |> unbox
                        let v3154 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3155 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3153 v3154 
                        let v3156 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3157 : string = " " + v3156 + v1291 + ""
                        let v3158 : string = "Deposit"
                        (* run_target_args'
                        let v3163 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3164 : string = "&*$0"
                        let v3165 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3158 v3164 
                        let _run_target_args'_v3163 = v3165 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3166 : string = "&*$0"
                        let v3167 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3158 v3166 
                        let _run_target_args'_v3163 = v3167 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3168 : string = "&*$0"
                        let v3169 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3158 v3168 
                        let _run_target_args'_v3163 = v3169 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3171 : Ref<Str> = v3158 |> unbox<Ref<Str>>
                        let _run_target_args'_v3163 = v3171 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3175 : Ref<Str> = v3158 |> unbox<Ref<Str>>
                        let _run_target_args'_v3163 = v3175 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3179 : Ref<Str> = v3158 |> unbox<Ref<Str>>
                        let _run_target_args'_v3163 = v3179 
                        #endif
#else
                        let v3183 : Ref<Str> = v3158 |> unbox<Ref<Str>>
                        let _run_target_args'_v3163 = v3183 
                        #endif
                        let v3186 : Ref<Str> = _run_target_args'_v3163 
                        (* run_target_args'
                        let v3196 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3197 : string = "String::from($0)"
                        let v3198 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3186 v3197 
                        let _run_target_args'_v3196 = v3198 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3199 : string = "String::from($0)"
                        let v3200 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3186 v3199 
                        let _run_target_args'_v3196 = v3200 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3201 : string = "String::from($0)"
                        let v3202 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3186 v3201 
                        let _run_target_args'_v3196 = v3202 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3204 : std_string_String = v3186 |> unbox<std_string_String>
                        let _run_target_args'_v3196 = v3204 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3208 : std_string_String = v3186 |> unbox<std_string_String>
                        let _run_target_args'_v3196 = v3208 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3212 : std_string_String = v3186 |> unbox<std_string_String>
                        let _run_target_args'_v3196 = v3212 
                        #endif
#else
                        let v3216 : std_string_String = v3186 |> unbox<std_string_String>
                        let _run_target_args'_v3196 = v3216 
                        #endif
                        let v3219 : std_string_String = _run_target_args'_v3196 
                        let v3225 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3226 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3219 v3225 
                        let v3227 : string = "v3226"
                        let v3228 : string = v3227 + v1291 
                        let v3229 : string = v3228 + v1291 
                        let v3230 : string = "vec![" + v3229 + "]"
                        let v3231 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3230 
                        let v3232 : string = "leptos::prelude::Fragment::new($0)"
                        let v3233 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3231 v3232 
                        let v3234 : string = "leptos::prelude::AnyView::from($0)"
                        let v3235 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3233 v3234 
                        let v3236 : string = "<" + v2805 + " " + v3157 + ">move || { v3235 }</" + v2805 + ">"
                        let v3237 : string = "leptos::prelude::view! { " + v3236 + " }"
                        let v3238 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3237 
                        let v3239 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3238 |> unbox
                        let v3240 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3241 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3239 v3240 
                        let v3242 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3243 : string = " " + v3242 + v1291 + ""
                        let v3244 : string = "Fee"
                        (* run_target_args'
                        let v3249 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3250 : string = "&*$0"
                        let v3251 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3244 v3250 
                        let _run_target_args'_v3249 = v3251 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3252 : string = "&*$0"
                        let v3253 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3244 v3252 
                        let _run_target_args'_v3249 = v3253 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3254 : string = "&*$0"
                        let v3255 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3244 v3254 
                        let _run_target_args'_v3249 = v3255 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3257 : Ref<Str> = v3244 |> unbox<Ref<Str>>
                        let _run_target_args'_v3249 = v3257 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3261 : Ref<Str> = v3244 |> unbox<Ref<Str>>
                        let _run_target_args'_v3249 = v3261 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3265 : Ref<Str> = v3244 |> unbox<Ref<Str>>
                        let _run_target_args'_v3249 = v3265 
                        #endif
#else
                        let v3269 : Ref<Str> = v3244 |> unbox<Ref<Str>>
                        let _run_target_args'_v3249 = v3269 
                        #endif
                        let v3272 : Ref<Str> = _run_target_args'_v3249 
                        (* run_target_args'
                        let v3282 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3283 : string = "String::from($0)"
                        let v3284 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3272 v3283 
                        let _run_target_args'_v3282 = v3284 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3285 : string = "String::from($0)"
                        let v3286 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3272 v3285 
                        let _run_target_args'_v3282 = v3286 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3287 : string = "String::from($0)"
                        let v3288 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3272 v3287 
                        let _run_target_args'_v3282 = v3288 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3290 : std_string_String = v3272 |> unbox<std_string_String>
                        let _run_target_args'_v3282 = v3290 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3294 : std_string_String = v3272 |> unbox<std_string_String>
                        let _run_target_args'_v3282 = v3294 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3298 : std_string_String = v3272 |> unbox<std_string_String>
                        let _run_target_args'_v3282 = v3298 
                        #endif
#else
                        let v3302 : std_string_String = v3272 |> unbox<std_string_String>
                        let _run_target_args'_v3282 = v3302 
                        #endif
                        let v3305 : std_string_String = _run_target_args'_v3282 
                        let v3311 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3312 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3305 v3311 
                        let v3313 : string = "v3312"
                        let v3314 : string = v3313 + v1291 
                        let v3315 : string = v3314 + v1291 
                        let v3316 : string = "vec![" + v3315 + "]"
                        let v3317 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3316 
                        let v3318 : string = "leptos::prelude::Fragment::new($0)"
                        let v3319 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3317 v3318 
                        let v3320 : string = "leptos::prelude::AnyView::from($0)"
                        let v3321 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3319 v3320 
                        let v3322 : string = "<" + v2805 + " " + v3243 + ">move || { v3321 }</" + v2805 + ">"
                        let v3323 : string = "leptos::prelude::view! { " + v3322 + " }"
                        let v3324 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3323 
                        let v3325 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3324 |> unbox
                        let v3326 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3327 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3325 v3326 
                        let v3328 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3329 : string = " " + v3328 + v1291 + ""
                        let v3330 : string = "Block Height"
                        (* run_target_args'
                        let v3335 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3336 : string = "&*$0"
                        let v3337 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3330 v3336 
                        let _run_target_args'_v3335 = v3337 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3338 : string = "&*$0"
                        let v3339 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3330 v3338 
                        let _run_target_args'_v3335 = v3339 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3340 : string = "&*$0"
                        let v3341 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3330 v3340 
                        let _run_target_args'_v3335 = v3341 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3343 : Ref<Str> = v3330 |> unbox<Ref<Str>>
                        let _run_target_args'_v3335 = v3343 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3347 : Ref<Str> = v3330 |> unbox<Ref<Str>>
                        let _run_target_args'_v3335 = v3347 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3351 : Ref<Str> = v3330 |> unbox<Ref<Str>>
                        let _run_target_args'_v3335 = v3351 
                        #endif
#else
                        let v3355 : Ref<Str> = v3330 |> unbox<Ref<Str>>
                        let _run_target_args'_v3335 = v3355 
                        #endif
                        let v3358 : Ref<Str> = _run_target_args'_v3335 
                        (* run_target_args'
                        let v3368 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3369 : string = "String::from($0)"
                        let v3370 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3358 v3369 
                        let _run_target_args'_v3368 = v3370 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3371 : string = "String::from($0)"
                        let v3372 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3358 v3371 
                        let _run_target_args'_v3368 = v3372 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3373 : string = "String::from($0)"
                        let v3374 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3358 v3373 
                        let _run_target_args'_v3368 = v3374 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3376 : std_string_String = v3358 |> unbox<std_string_String>
                        let _run_target_args'_v3368 = v3376 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3380 : std_string_String = v3358 |> unbox<std_string_String>
                        let _run_target_args'_v3368 = v3380 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3384 : std_string_String = v3358 |> unbox<std_string_String>
                        let _run_target_args'_v3368 = v3384 
                        #endif
#else
                        let v3388 : std_string_String = v3358 |> unbox<std_string_String>
                        let _run_target_args'_v3368 = v3388 
                        #endif
                        let v3391 : std_string_String = _run_target_args'_v3368 
                        let v3397 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3398 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3391 v3397 
                        let v3399 : string = "v3398"
                        let v3400 : string = v3399 + v1291 
                        let v3401 : string = v3400 + v1291 
                        let v3402 : string = "vec![" + v3401 + "]"
                        let v3403 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3402 
                        let v3404 : string = "leptos::prelude::Fragment::new($0)"
                        let v3405 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3403 v3404 
                        let v3406 : string = "leptos::prelude::AnyView::from($0)"
                        let v3407 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3405 v3406 
                        let v3408 : string = "<" + v2805 + " " + v3329 + ">move || { v3407 }</" + v2805 + ">"
                        let v3409 : string = "leptos::prelude::view! { " + v3408 + " }"
                        let v3410 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3409 
                        let v3411 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3410 |> unbox
                        let v3412 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3413 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3411 v3412 
                        let v3414 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3415 : string = " " + v3414 + v1291 + ""
                        let v3416 : int32 = 0
                        let v3417 : bool = method280(v371, v3416)
                        let v3418 : bool = false = v3417
                        let v3420 : string =
                            if v3418 then
                                v1291
                            else
                                let v3419 : string = "Logs"
                                v3419
                        (* run_target_args'
                        let v3425 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3426 : string = "&*$0"
                        let v3427 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3420 v3426 
                        let _run_target_args'_v3425 = v3427 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3428 : string = "&*$0"
                        let v3429 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3420 v3428 
                        let _run_target_args'_v3425 = v3429 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3430 : string = "&*$0"
                        let v3431 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3420 v3430 
                        let _run_target_args'_v3425 = v3431 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3433 : Ref<Str> = v3420 |> unbox<Ref<Str>>
                        let _run_target_args'_v3425 = v3433 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3437 : Ref<Str> = v3420 |> unbox<Ref<Str>>
                        let _run_target_args'_v3425 = v3437 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3441 : Ref<Str> = v3420 |> unbox<Ref<Str>>
                        let _run_target_args'_v3425 = v3441 
                        #endif
#else
                        let v3445 : Ref<Str> = v3420 |> unbox<Ref<Str>>
                        let _run_target_args'_v3425 = v3445 
                        #endif
                        let v3448 : Ref<Str> = _run_target_args'_v3425 
                        (* run_target_args'
                        let v3458 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3459 : string = "String::from($0)"
                        let v3460 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3448 v3459 
                        let _run_target_args'_v3458 = v3460 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3461 : string = "String::from($0)"
                        let v3462 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3448 v3461 
                        let _run_target_args'_v3458 = v3462 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3463 : string = "String::from($0)"
                        let v3464 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3448 v3463 
                        let _run_target_args'_v3458 = v3464 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3466 : std_string_String = v3448 |> unbox<std_string_String>
                        let _run_target_args'_v3458 = v3466 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3470 : std_string_String = v3448 |> unbox<std_string_String>
                        let _run_target_args'_v3458 = v3470 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3474 : std_string_String = v3448 |> unbox<std_string_String>
                        let _run_target_args'_v3458 = v3474 
                        #endif
#else
                        let v3478 : std_string_String = v3448 |> unbox<std_string_String>
                        let _run_target_args'_v3458 = v3478 
                        #endif
                        let v3481 : std_string_String = _run_target_args'_v3458 
                        let v3487 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3488 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3481 v3487 
                        let v3489 : string = "v3488"
                        let v3490 : string = v3489 + v1291 
                        let v3491 : string = v3490 + v1291 
                        let v3492 : string = "vec![" + v3491 + "]"
                        let v3493 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3492 
                        let v3494 : string = "leptos::prelude::Fragment::new($0)"
                        let v3495 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3493 v3494 
                        let v3496 : string = "leptos::prelude::AnyView::from($0)"
                        let v3497 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3495 v3496 
                        let v3498 : string = "<" + v2805 + " " + v3415 + ">move || { v3497 }</" + v2805 + ">"
                        let v3499 : string = "leptos::prelude::view! { " + v3498 + " }"
                        let v3500 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3499 
                        let v3501 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3500 |> unbox
                        let v3502 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3503 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3501 v3502 
                        let v3504 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3505 : string = " " + v3504 + v1291 + ""
                        let v3506 : string = "Outcome Status"
                        (* run_target_args'
                        let v3511 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3512 : string = "&*$0"
                        let v3513 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3506 v3512 
                        let _run_target_args'_v3511 = v3513 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3514 : string = "&*$0"
                        let v3515 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3506 v3514 
                        let _run_target_args'_v3511 = v3515 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3516 : string = "&*$0"
                        let v3517 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3506 v3516 
                        let _run_target_args'_v3511 = v3517 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3519 : Ref<Str> = v3506 |> unbox<Ref<Str>>
                        let _run_target_args'_v3511 = v3519 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3523 : Ref<Str> = v3506 |> unbox<Ref<Str>>
                        let _run_target_args'_v3511 = v3523 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3527 : Ref<Str> = v3506 |> unbox<Ref<Str>>
                        let _run_target_args'_v3511 = v3527 
                        #endif
#else
                        let v3531 : Ref<Str> = v3506 |> unbox<Ref<Str>>
                        let _run_target_args'_v3511 = v3531 
                        #endif
                        let v3534 : Ref<Str> = _run_target_args'_v3511 
                        (* run_target_args'
                        let v3544 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3545 : string = "String::from($0)"
                        let v3546 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3534 v3545 
                        let _run_target_args'_v3544 = v3546 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3547 : string = "String::from($0)"
                        let v3548 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3534 v3547 
                        let _run_target_args'_v3544 = v3548 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3549 : string = "String::from($0)"
                        let v3550 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3534 v3549 
                        let _run_target_args'_v3544 = v3550 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3552 : std_string_String = v3534 |> unbox<std_string_String>
                        let _run_target_args'_v3544 = v3552 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3556 : std_string_String = v3534 |> unbox<std_string_String>
                        let _run_target_args'_v3544 = v3556 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3560 : std_string_String = v3534 |> unbox<std_string_String>
                        let _run_target_args'_v3544 = v3560 
                        #endif
#else
                        let v3564 : std_string_String = v3534 |> unbox<std_string_String>
                        let _run_target_args'_v3544 = v3564 
                        #endif
                        let v3567 : std_string_String = _run_target_args'_v3544 
                        let v3573 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3574 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3567 v3573 
                        let v3575 : string = "v3574"
                        let v3576 : string = v3575 + v1291 
                        let v3577 : string = v3576 + v1291 
                        let v3578 : string = "vec![" + v3577 + "]"
                        let v3579 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3578 
                        let v3580 : string = "leptos::prelude::Fragment::new($0)"
                        let v3581 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3579 v3580 
                        let v3582 : string = "leptos::prelude::AnyView::from($0)"
                        let v3583 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3581 v3582 
                        let v3584 : string = "<" + v2805 + " " + v3505 + ">move || { v3583 }</" + v2805 + ">"
                        let v3585 : string = "leptos::prelude::view! { " + v3584 + " }"
                        let v3586 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3585 
                        let v3587 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3586 |> unbox
                        let v3588 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3589 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3587 v3588 
                        let v3590 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3591 : string = " " + v3590 + v1291 + ""
                        let v3592 : string = "Hash"
                        (* run_target_args'
                        let v3597 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3598 : string = "&*$0"
                        let v3599 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3592 v3598 
                        let _run_target_args'_v3597 = v3599 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3600 : string = "&*$0"
                        let v3601 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3592 v3600 
                        let _run_target_args'_v3597 = v3601 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3602 : string = "&*$0"
                        let v3603 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3592 v3602 
                        let _run_target_args'_v3597 = v3603 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3605 : Ref<Str> = v3592 |> unbox<Ref<Str>>
                        let _run_target_args'_v3597 = v3605 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3609 : Ref<Str> = v3592 |> unbox<Ref<Str>>
                        let _run_target_args'_v3597 = v3609 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3613 : Ref<Str> = v3592 |> unbox<Ref<Str>>
                        let _run_target_args'_v3597 = v3613 
                        #endif
#else
                        let v3617 : Ref<Str> = v3592 |> unbox<Ref<Str>>
                        let _run_target_args'_v3597 = v3617 
                        #endif
                        let v3620 : Ref<Str> = _run_target_args'_v3597 
                        (* run_target_args'
                        let v3630 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3631 : string = "String::from($0)"
                        let v3632 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3620 v3631 
                        let _run_target_args'_v3630 = v3632 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3633 : string = "String::from($0)"
                        let v3634 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3620 v3633 
                        let _run_target_args'_v3630 = v3634 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3635 : string = "String::from($0)"
                        let v3636 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3620 v3635 
                        let _run_target_args'_v3630 = v3636 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3638 : std_string_String = v3620 |> unbox<std_string_String>
                        let _run_target_args'_v3630 = v3638 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3642 : std_string_String = v3620 |> unbox<std_string_String>
                        let _run_target_args'_v3630 = v3642 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3646 : std_string_String = v3620 |> unbox<std_string_String>
                        let _run_target_args'_v3630 = v3646 
                        #endif
#else
                        let v3650 : std_string_String = v3620 |> unbox<std_string_String>
                        let _run_target_args'_v3630 = v3650 
                        #endif
                        let v3653 : std_string_String = _run_target_args'_v3630 
                        let v3659 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3660 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3653 v3659 
                        let v3661 : string = "v3660"
                        let v3662 : string = v3661 + v1291 
                        let v3663 : string = v3662 + v1291 
                        let v3664 : string = "vec![" + v3663 + "]"
                        let v3665 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3664 
                        let v3666 : string = "leptos::prelude::Fragment::new($0)"
                        let v3667 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3665 v3666 
                        let v3668 : string = "leptos::prelude::AnyView::from($0)"
                        let v3669 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3667 v3668 
                        let v3670 : string = "<" + v2805 + " " + v3591 + ">move || { v3669 }</" + v2805 + ">"
                        let v3671 : string = "leptos::prelude::view! { " + v3670 + " }"
                        let v3672 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3671 
                        let v3673 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3672 |> unbox
                        let v3674 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3675 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3673 v3674 
                        let v3676 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3677 : string = " " + v3676 + v1291 + ""
                        let v3678 : string = "Block Hash"
                        (* run_target_args'
                        let v3683 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3684 : string = "&*$0"
                        let v3685 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3678 v3684 
                        let _run_target_args'_v3683 = v3685 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3686 : string = "&*$0"
                        let v3687 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3678 v3686 
                        let _run_target_args'_v3683 = v3687 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3688 : string = "&*$0"
                        let v3689 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3678 v3688 
                        let _run_target_args'_v3683 = v3689 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3691 : Ref<Str> = v3678 |> unbox<Ref<Str>>
                        let _run_target_args'_v3683 = v3691 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3695 : Ref<Str> = v3678 |> unbox<Ref<Str>>
                        let _run_target_args'_v3683 = v3695 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3699 : Ref<Str> = v3678 |> unbox<Ref<Str>>
                        let _run_target_args'_v3683 = v3699 
                        #endif
#else
                        let v3703 : Ref<Str> = v3678 |> unbox<Ref<Str>>
                        let _run_target_args'_v3683 = v3703 
                        #endif
                        let v3706 : Ref<Str> = _run_target_args'_v3683 
                        (* run_target_args'
                        let v3716 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3717 : string = "String::from($0)"
                        let v3718 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3706 v3717 
                        let _run_target_args'_v3716 = v3718 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3719 : string = "String::from($0)"
                        let v3720 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3706 v3719 
                        let _run_target_args'_v3716 = v3720 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3721 : string = "String::from($0)"
                        let v3722 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3706 v3721 
                        let _run_target_args'_v3716 = v3722 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3724 : std_string_String = v3706 |> unbox<std_string_String>
                        let _run_target_args'_v3716 = v3724 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3728 : std_string_String = v3706 |> unbox<std_string_String>
                        let _run_target_args'_v3716 = v3728 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3732 : std_string_String = v3706 |> unbox<std_string_String>
                        let _run_target_args'_v3716 = v3732 
                        #endif
#else
                        let v3736 : std_string_String = v3706 |> unbox<std_string_String>
                        let _run_target_args'_v3716 = v3736 
                        #endif
                        let v3739 : std_string_String = _run_target_args'_v3716 
                        let v3745 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3746 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3739 v3745 
                        let v3747 : string = "v3746"
                        let v3748 : string = v3747 + v1291 
                        let v3749 : string = v3748 + v1291 
                        let v3750 : string = "vec![" + v3749 + "]"
                        let v3751 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3750 
                        let v3752 : string = "leptos::prelude::Fragment::new($0)"
                        let v3753 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3751 v3752 
                        let v3754 : string = "leptos::prelude::AnyView::from($0)"
                        let v3755 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3753 v3754 
                        let v3756 : string = "<" + v2805 + " " + v3677 + ">move || { v3755 }</" + v2805 + ">"
                        let v3757 : string = "leptos::prelude::view! { " + v3756 + " }"
                        let v3758 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3757 
                        let v3759 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3758 |> unbox
                        let v3760 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3761 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3759 v3760 
                        let v3762 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3763 : string = " " + v3762 + v1291 + ""
                        let v3764 : string = "Receipt ID"
                        (* run_target_args'
                        let v3769 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3770 : string = "&*$0"
                        let v3771 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3764 v3770 
                        let _run_target_args'_v3769 = v3771 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3772 : string = "&*$0"
                        let v3773 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3764 v3772 
                        let _run_target_args'_v3769 = v3773 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3774 : string = "&*$0"
                        let v3775 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3764 v3774 
                        let _run_target_args'_v3769 = v3775 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3777 : Ref<Str> = v3764 |> unbox<Ref<Str>>
                        let _run_target_args'_v3769 = v3777 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3781 : Ref<Str> = v3764 |> unbox<Ref<Str>>
                        let _run_target_args'_v3769 = v3781 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3785 : Ref<Str> = v3764 |> unbox<Ref<Str>>
                        let _run_target_args'_v3769 = v3785 
                        #endif
#else
                        let v3789 : Ref<Str> = v3764 |> unbox<Ref<Str>>
                        let _run_target_args'_v3769 = v3789 
                        #endif
                        let v3792 : Ref<Str> = _run_target_args'_v3769 
                        (* run_target_args'
                        let v3802 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3803 : string = "String::from($0)"
                        let v3804 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3792 v3803 
                        let _run_target_args'_v3802 = v3804 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3805 : string = "String::from($0)"
                        let v3806 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3792 v3805 
                        let _run_target_args'_v3802 = v3806 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3807 : string = "String::from($0)"
                        let v3808 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3792 v3807 
                        let _run_target_args'_v3802 = v3808 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3810 : std_string_String = v3792 |> unbox<std_string_String>
                        let _run_target_args'_v3802 = v3810 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3814 : std_string_String = v3792 |> unbox<std_string_String>
                        let _run_target_args'_v3802 = v3814 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3818 : std_string_String = v3792 |> unbox<std_string_String>
                        let _run_target_args'_v3802 = v3818 
                        #endif
#else
                        let v3822 : std_string_String = v3792 |> unbox<std_string_String>
                        let _run_target_args'_v3802 = v3822 
                        #endif
                        let v3825 : std_string_String = _run_target_args'_v3802 
                        let v3831 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3832 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3825 v3831 
                        let v3833 : string = "v3832"
                        let v3834 : string = v3833 + v1291 
                        let v3835 : string = v3834 + v1291 
                        let v3836 : string = "vec![" + v3835 + "]"
                        let v3837 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3836 
                        let v3838 : string = "leptos::prelude::Fragment::new($0)"
                        let v3839 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3837 v3838 
                        let v3840 : string = "leptos::prelude::AnyView::from($0)"
                        let v3841 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3839 v3840 
                        let v3842 : string = "<" + v2805 + " " + v3763 + ">move || { v3841 }</" + v2805 + ">"
                        let v3843 : string = "leptos::prelude::view! { " + v3842 + " }"
                        let v3844 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3843 
                        let v3845 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3844 |> unbox
                        let v3846 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3847 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3845 v3846 
                        let v3848 : string = "v3847"
                        let v3849 : string = v3848 + v1291 
                        let v3850 : string = v3849 + v1291 
                        let v3851 : string = "v3761"
                        let v3852 : string = v3851 + v1761 
                        let v3853 : string = v3852 + v3850 
                        let v3854 : string = "v3675"
                        let v3855 : string = v3854 + v1761 
                        let v3856 : string = v3855 + v3853 
                        let v3857 : string = "v3589"
                        let v3858 : string = v3857 + v1761 
                        let v3859 : string = v3858 + v3856 
                        let v3860 : string = "v3503"
                        let v3861 : string = v3860 + v1761 
                        let v3862 : string = v3861 + v3859 
                        let v3863 : string = "v3413"
                        let v3864 : string = v3863 + v1761 
                        let v3865 : string = v3864 + v3862 
                        let v3866 : string = "v3327"
                        let v3867 : string = v3866 + v1761 
                        let v3868 : string = v3867 + v3865 
                        let v3869 : string = "v3241"
                        let v3870 : string = v3869 + v1761 
                        let v3871 : string = v3870 + v3868 
                        let v3872 : string = "v3155"
                        let v3873 : string = v3872 + v1761 
                        let v3874 : string = v3873 + v3871 
                        let v3875 : string = "v3069"
                        let v3876 : string = v3875 + v1761 
                        let v3877 : string = v3876 + v3874 
                        let v3878 : string = "v2983"
                        let v3879 : string = v3878 + v1761 
                        let v3880 : string = v3879 + v3877 
                        let v3881 : string = "v2897"
                        let v3882 : string = v3881 + v1761 
                        let v3883 : string = v3882 + v3880 
                        let v3884 : string = "v2811"
                        let v3885 : string = v3884 + v1761 
                        let v3886 : string = v3885 + v3883 
                        let v3887 : string = "vec![" + v3886 + "]"
                        let v3888 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3887 
                        let v3889 : string = "leptos::prelude::Fragment::new($0)"
                        let v3890 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3888 v3889 
                        let v3891 : string = "leptos::prelude::AnyView::from($0)"
                        let v3892 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3890 v3891 
                        let v3893 : string = "<" + v2694 + " " + v1291 + ">move || { v3892 }</" + v2694 + ">"
                        let v3894 : string = "leptos::prelude::view! { " + v3893 + " }"
                        let v3895 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3894 
                        let v3896 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>> = v3895 |> unbox
                        let v3897 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3898 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3896 v3897 
                        let v3899 : string = "v3898"
                        let v3900 : string = v3899 + v1291 
                        let v3901 : string = v3900 + v1291 
                        let v3902 : string = "vec![" + v3901 + "]"
                        let v3903 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3902 
                        let v3904 : string = "leptos::prelude::Fragment::new($0)"
                        let v3905 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3903 v3904 
                        let v3906 : string = "class=\"flex-1 min-w-full divide-y-2 divide-gray-200 text-sm dark:divide-gray-700\""
                        let v3907 : string = " " + v3906 + v1291 + ""
                        let v3908 : string = "class=\"ltr:text-left rtl:text-right\""
                        let v3909 : string = " " + v3908 + v1291 + ""
                        let v3910 : string = "leptos::prelude::AnyView::from($0)"
                        let v3911 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3905 v3910 
                        let v3912 : string = "thead"
                        let v3913 : string = "<" + v3912 + " " + v3909 + ">move || { v3911 }</" + v3912 + ">"
                        let v3914 : string = "leptos::prelude::view! { " + v3913 + " }"
                        let v3915 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3914 
                        let v3916 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Thead>> = v3915 |> unbox
                        let v3917 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3918 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3916 v3917 
                        let v3919 : string = "class=\"divide-y divide-gray-200 dark:divide-gray-700\""
                        let v3920 : string = " " + v3919 + v1291 + ""
                        let v3921 : string = "leptos::prelude::AnyView::from($0)"
                        let v3922 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2721 v3921 
                        let v3923 : string = "tbody"
                        let v3924 : string = "<" + v3923 + " " + v3920 + ">move || { v3922 }</" + v3923 + ">"
                        let v3925 : string = "leptos::prelude::view! { " + v3924 + " }"
                        let v3926 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3925 
                        let v3927 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tbody>> = v3926 |> unbox
                        let v3928 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3929 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3927 v3928 
                        let v3930 : string = "v3929"
                        let v3931 : string = v3930 + v1291 
                        let v3932 : string = v3931 + v1291 
                        let v3933 : string = "v3918"
                        let v3934 : string = v3933 + v1761 
                        let v3935 : string = v3934 + v3932 
                        let v3936 : string = "vec![" + v3935 + "]"
                        let v3937 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3936 
                        let v3938 : string = "leptos::prelude::Fragment::new($0)"
                        let v3939 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3937 v3938 
                        let v3940 : string = "leptos::prelude::AnyView::from($0)"
                        let v3941 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3939 v3940 
                        let v3942 : string = "table"
                        let v3943 : string = "<" + v3942 + " " + v3907 + ">move || { v3941 }</" + v3942 + ">"
                        let v3944 : string = "leptos::prelude::view! { " + v3943 + " }"
                        let v3945 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3944 
                        let v3946 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Table>> = v3945 |> unbox
                        let v3947 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3948 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3946 v3947 
                        v3948
                | _ ->
                    let v3950 : string = "class=\"grid place-content-center py-[10vh]\""
                    let v3951 : string = ""
                    let v3952 : string = " " + v3950 + v3951 + ""
                    let v3953 : string = "class=\"flex flex-1 [gap:4px] items-center\""
                    let v3954 : string = " " + v3953 + v3951 + ""
                    let v3955 : string = "$0"
                    let v3956 : (unit -> string) = closure191()
                    let v3957 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3956 v3955 
                    let v3958 : string = "version=\"1.1\""
                    let v3959 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                    let v3960 : string = "xmlns:xlink=\"http://www.w3.org/1999/xlink\""
                    let v3961 : string = "x=\"0px\""
                    let v3962 : string = "y=\"0px\""
                    let v3963 : string = "viewBox=\"0 0 24 30\""
                    let v3964 : string = "style=\"enable-background:new 0 0 50 50;\""
                    let v3965 : string = "xml:space=\"preserve\""
                    let v3966 : string = "class=move || \" \".to_owned() + &v3957(())"
                    let v3967 : string = " " + v3958 + v3951 + ""
                    let v3968 : string = " " + v3959 + v3967 + ""
                    let v3969 : string = " " + v3960 + v3968 + ""
                    let v3970 : string = " " + v3961 + v3969 + ""
                    let v3971 : string = " " + v3962 + v3970 + ""
                    let v3972 : string = " " + v3963 + v3971 + ""
                    let v3973 : string = " " + v3964 + v3972 + ""
                    let v3974 : string = " " + v3965 + v3973 + ""
                    let v3975 : string = " " + v3966 + v3974 + ""
                    let v3976 : string = "x=\"0\""
                    let v3977 : string = "y=\"10\""
                    let v3978 : string = "width=\"4\""
                    let v3979 : string = "height=\"10\""
                    let v3980 : string = "fill=\"#333\""
                    let v3981 : string = "opacity=\"0.2\""
                    let v3982 : string = " " + v3976 + v3951 + ""
                    let v3983 : string = " " + v3977 + v3982 + ""
                    let v3984 : string = " " + v3978 + v3983 + ""
                    let v3985 : string = " " + v3979 + v3984 + ""
                    let v3986 : string = " " + v3980 + v3985 + ""
                    let v3987 : string = " " + v3981 + v3986 + ""
                    let v3988 : string = "attributeName=\"opacity\""
                    let v3989 : string = "attributeType=\"XML\""
                    let v3990 : string = "values=\"0.2; 1; .2\""
                    let v3991 : string = "begin=\"0s\""
                    let v3992 : string = "dur=\"0.6s\""
                    let v3993 : string = "repeatCount=\"indefinite\""
                    let v3994 : string = " " + v3988 + v3951 + ""
                    let v3995 : string = " " + v3989 + v3994 + ""
                    let v3996 : string = " " + v3990 + v3995 + ""
                    let v3997 : string = " " + v3991 + v3996 + ""
                    let v3998 : string = " " + v3992 + v3997 + ""
                    let v3999 : string = " " + v3993 + v3998 + ""
                    let v4000 : string = "vec![" + v3951 + "]"
                    let v4001 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4000 
                    let v4002 : string = "leptos::prelude::Fragment::new($0)"
                    let v4003 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4001 v4002 
                    let v4004 : string = "leptos::prelude::AnyView::from($0)"
                    let v4005 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4003 v4004 
                    let v4006 : string = "animate"
                    let v4007 : string = "<" + v4006 + " " + v3999 + ">move || { v4005 }</" + v4006 + ">"
                    let v4008 : string = "leptos::prelude::view! { " + v4007 + " }"
                    let v4009 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4008 
                    let v4010 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4009 |> unbox
                    let v4011 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4012 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4010 v4011 
                    let v4013 : string = "attributeName=\"height\""
                    let v4014 : string = "attributeType=\"XML\""
                    let v4015 : string = "values=\"10; 20; 10\""
                    let v4016 : string = "begin=\"0s\""
                    let v4017 : string = "dur=\"0.6s\""
                    let v4018 : string = "repeatCount=\"indefinite\""
                    let v4019 : string = " " + v4013 + v3951 + ""
                    let v4020 : string = " " + v4014 + v4019 + ""
                    let v4021 : string = " " + v4015 + v4020 + ""
                    let v4022 : string = " " + v4016 + v4021 + ""
                    let v4023 : string = " " + v4017 + v4022 + ""
                    let v4024 : string = " " + v4018 + v4023 + ""
                    let v4025 : string = "vec![" + v3951 + "]"
                    let v4026 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4025 
                    let v4027 : string = "leptos::prelude::Fragment::new($0)"
                    let v4028 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4026 v4027 
                    let v4029 : string = "leptos::prelude::AnyView::from($0)"
                    let v4030 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4028 v4029 
                    let v4031 : string = "<" + v4006 + " " + v4024 + ">move || { v4030 }</" + v4006 + ">"
                    let v4032 : string = "leptos::prelude::view! { " + v4031 + " }"
                    let v4033 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4032 
                    let v4034 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4033 |> unbox
                    let v4035 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4036 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4034 v4035 
                    let v4037 : string = "attributeName=\"y\""
                    let v4038 : string = "attributeType=\"XML\""
                    let v4039 : string = "values=\"10; 5; 10\""
                    let v4040 : string = "begin=\"0s\""
                    let v4041 : string = "dur=\"0.6s\""
                    let v4042 : string = "repeatCount=\"indefinite\""
                    let v4043 : string = " " + v4037 + v3951 + ""
                    let v4044 : string = " " + v4038 + v4043 + ""
                    let v4045 : string = " " + v4039 + v4044 + ""
                    let v4046 : string = " " + v4040 + v4045 + ""
                    let v4047 : string = " " + v4041 + v4046 + ""
                    let v4048 : string = " " + v4042 + v4047 + ""
                    let v4049 : string = "vec![" + v3951 + "]"
                    let v4050 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4049 
                    let v4051 : string = "leptos::prelude::Fragment::new($0)"
                    let v4052 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4050 v4051 
                    let v4053 : string = "leptos::prelude::AnyView::from($0)"
                    let v4054 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4052 v4053 
                    let v4055 : string = "<" + v4006 + " " + v4048 + ">move || { v4054 }</" + v4006 + ">"
                    let v4056 : string = "leptos::prelude::view! { " + v4055 + " }"
                    let v4057 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4056 
                    let v4058 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4057 |> unbox
                    let v4059 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4060 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4058 v4059 
                    let v4061 : string = "v4060"
                    let v4062 : string = v4061 + v3951 
                    let v4063 : string = v4062 + v3951 
                    let v4064 : string = "v4036"
                    let v4065 : string = ", "
                    let v4066 : string = v4064 + v4065 
                    let v4067 : string = v4066 + v4063 
                    let v4068 : string = "v4012"
                    let v4069 : string = v4068 + v4065 
                    let v4070 : string = v4069 + v4067 
                    let v4071 : string = "vec![" + v4070 + "]"
                    let v4072 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4071 
                    let v4073 : string = "leptos::prelude::Fragment::new($0)"
                    let v4074 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4072 v4073 
                    let v4075 : string = "leptos::prelude::AnyView::from($0)"
                    let v4076 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4074 v4075 
                    let v4077 : string = "rect"
                    let v4078 : string = "<" + v4077 + " " + v3987 + ">move || { v4076 }</" + v4077 + ">"
                    let v4079 : string = "leptos::prelude::view! { " + v4078 + " }"
                    let v4080 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4079 
                    let v4081 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v4080 |> unbox
                    let v4082 : string = "x=\"8\""
                    let v4083 : string = "y=\"10\""
                    let v4084 : string = "width=\"4\""
                    let v4085 : string = "height=\"10\""
                    let v4086 : string = "fill=\"#333\""
                    let v4087 : string = "opacity=\"0.2\""
                    let v4088 : string = " " + v4082 + v3951 + ""
                    let v4089 : string = " " + v4083 + v4088 + ""
                    let v4090 : string = " " + v4084 + v4089 + ""
                    let v4091 : string = " " + v4085 + v4090 + ""
                    let v4092 : string = " " + v4086 + v4091 + ""
                    let v4093 : string = " " + v4087 + v4092 + ""
                    let v4094 : string = "attributeName=\"opacity\""
                    let v4095 : string = "attributeType=\"XML\""
                    let v4096 : string = "values=\"0.2; 1; .2\""
                    let v4097 : string = "begin=\"0.15s\""
                    let v4098 : string = "dur=\"0.6s\""
                    let v4099 : string = "repeatCount=\"indefinite\""
                    let v4100 : string = " " + v4094 + v3951 + ""
                    let v4101 : string = " " + v4095 + v4100 + ""
                    let v4102 : string = " " + v4096 + v4101 + ""
                    let v4103 : string = " " + v4097 + v4102 + ""
                    let v4104 : string = " " + v4098 + v4103 + ""
                    let v4105 : string = " " + v4099 + v4104 + ""
                    let v4106 : string = "vec![" + v3951 + "]"
                    let v4107 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4106 
                    let v4108 : string = "leptos::prelude::Fragment::new($0)"
                    let v4109 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4107 v4108 
                    let v4110 : string = "leptos::prelude::AnyView::from($0)"
                    let v4111 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4109 v4110 
                    let v4112 : string = "<" + v4006 + " " + v4105 + ">move || { v4111 }</" + v4006 + ">"
                    let v4113 : string = "leptos::prelude::view! { " + v4112 + " }"
                    let v4114 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4113 
                    let v4115 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4114 |> unbox
                    let v4116 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4117 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4115 v4116 
                    let v4118 : string = "attributeName=\"opacity\""
                    let v4119 : string = "attributeType=\"XML\""
                    let v4120 : string = "values=\"10; 20; 10\""
                    let v4121 : string = "begin=\"0.15s\""
                    let v4122 : string = "dur=\"0.6s\""
                    let v4123 : string = "repeatCount=\"indefinite\""
                    let v4124 : string = " " + v4118 + v3951 + ""
                    let v4125 : string = " " + v4119 + v4124 + ""
                    let v4126 : string = " " + v4120 + v4125 + ""
                    let v4127 : string = " " + v4121 + v4126 + ""
                    let v4128 : string = " " + v4122 + v4127 + ""
                    let v4129 : string = " " + v4123 + v4128 + ""
                    let v4130 : string = "vec![" + v3951 + "]"
                    let v4131 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4130 
                    let v4132 : string = "leptos::prelude::Fragment::new($0)"
                    let v4133 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4131 v4132 
                    let v4134 : string = "leptos::prelude::AnyView::from($0)"
                    let v4135 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4133 v4134 
                    let v4136 : string = "<" + v4006 + " " + v4129 + ">move || { v4135 }</" + v4006 + ">"
                    let v4137 : string = "leptos::prelude::view! { " + v4136 + " }"
                    let v4138 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4137 
                    let v4139 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4138 |> unbox
                    let v4140 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4141 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4139 v4140 
                    let v4142 : string = "attributeName=\"y\""
                    let v4143 : string = "attributeType=\"XML\""
                    let v4144 : string = "values=\"10; 5; 10\""
                    let v4145 : string = "begin=\"0.15s\""
                    let v4146 : string = "dur=\"0.6s\""
                    let v4147 : string = "repeatCount=\"indefinite\""
                    let v4148 : string = " " + v4142 + v3951 + ""
                    let v4149 : string = " " + v4143 + v4148 + ""
                    let v4150 : string = " " + v4144 + v4149 + ""
                    let v4151 : string = " " + v4145 + v4150 + ""
                    let v4152 : string = " " + v4146 + v4151 + ""
                    let v4153 : string = " " + v4147 + v4152 + ""
                    let v4154 : string = "vec![" + v3951 + "]"
                    let v4155 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4154 
                    let v4156 : string = "leptos::prelude::Fragment::new($0)"
                    let v4157 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4155 v4156 
                    let v4158 : string = "leptos::prelude::AnyView::from($0)"
                    let v4159 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4157 v4158 
                    let v4160 : string = "<" + v4006 + " " + v4153 + ">move || { v4159 }</" + v4006 + ">"
                    let v4161 : string = "leptos::prelude::view! { " + v4160 + " }"
                    let v4162 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4161 
                    let v4163 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4162 |> unbox
                    let v4164 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4165 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4163 v4164 
                    let v4166 : string = "v4165"
                    let v4167 : string = v4166 + v3951 
                    let v4168 : string = v4167 + v3951 
                    let v4169 : string = "v4141"
                    let v4170 : string = v4169 + v4065 
                    let v4171 : string = v4170 + v4168 
                    let v4172 : string = "v4117"
                    let v4173 : string = v4172 + v4065 
                    let v4174 : string = v4173 + v4171 
                    let v4175 : string = "vec![" + v4174 + "]"
                    let v4176 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4175 
                    let v4177 : string = "leptos::prelude::Fragment::new($0)"
                    let v4178 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4176 v4177 
                    let v4179 : string = "leptos::prelude::AnyView::from($0)"
                    let v4180 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4178 v4179 
                    let v4181 : string = "<" + v4077 + " " + v4093 + ">move || { v4180 }</" + v4077 + ">"
                    let v4182 : string = "leptos::prelude::view! { " + v4181 + " }"
                    let v4183 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4182 
                    let v4184 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v4183 |> unbox
                    let v4185 : string = "x=\"16\""
                    let v4186 : string = "y=\"10\""
                    let v4187 : string = "width=\"4\""
                    let v4188 : string = "height=\"10\""
                    let v4189 : string = "fill=\"#333\""
                    let v4190 : string = "opacity=\"0.2\""
                    let v4191 : string = " " + v4185 + v3951 + ""
                    let v4192 : string = " " + v4186 + v4191 + ""
                    let v4193 : string = " " + v4187 + v4192 + ""
                    let v4194 : string = " " + v4188 + v4193 + ""
                    let v4195 : string = " " + v4189 + v4194 + ""
                    let v4196 : string = " " + v4190 + v4195 + ""
                    let v4197 : string = "attributeName=\"opacity\""
                    let v4198 : string = "attributeType=\"XML\""
                    let v4199 : string = "values=\"0.2; 1; .2\""
                    let v4200 : string = "begin=\"0.3s\""
                    let v4201 : string = "dur=\"0.6s\""
                    let v4202 : string = "repeatCount=\"indefinite\""
                    let v4203 : string = " " + v4197 + v3951 + ""
                    let v4204 : string = " " + v4198 + v4203 + ""
                    let v4205 : string = " " + v4199 + v4204 + ""
                    let v4206 : string = " " + v4200 + v4205 + ""
                    let v4207 : string = " " + v4201 + v4206 + ""
                    let v4208 : string = " " + v4202 + v4207 + ""
                    let v4209 : string = "vec![" + v3951 + "]"
                    let v4210 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4209 
                    let v4211 : string = "leptos::prelude::Fragment::new($0)"
                    let v4212 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4210 v4211 
                    let v4213 : string = "leptos::prelude::AnyView::from($0)"
                    let v4214 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4212 v4213 
                    let v4215 : string = "<" + v4006 + " " + v4208 + ">move || { v4214 }</" + v4006 + ">"
                    let v4216 : string = "leptos::prelude::view! { " + v4215 + " }"
                    let v4217 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4216 
                    let v4218 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4217 |> unbox
                    let v4219 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4220 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4218 v4219 
                    let v4221 : string = "attributeName=\"height\""
                    let v4222 : string = "attributeType=\"XML\""
                    let v4223 : string = "values=\"10; 20; 10\""
                    let v4224 : string = "begin=\"0.3s\""
                    let v4225 : string = "dur=\"0.6s\""
                    let v4226 : string = "repeatCount=\"indefinite\""
                    let v4227 : string = " " + v4221 + v3951 + ""
                    let v4228 : string = " " + v4222 + v4227 + ""
                    let v4229 : string = " " + v4223 + v4228 + ""
                    let v4230 : string = " " + v4224 + v4229 + ""
                    let v4231 : string = " " + v4225 + v4230 + ""
                    let v4232 : string = " " + v4226 + v4231 + ""
                    let v4233 : string = "vec![" + v3951 + "]"
                    let v4234 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4233 
                    let v4235 : string = "leptos::prelude::Fragment::new($0)"
                    let v4236 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4234 v4235 
                    let v4237 : string = "leptos::prelude::AnyView::from($0)"
                    let v4238 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4236 v4237 
                    let v4239 : string = "<" + v4006 + " " + v4232 + ">move || { v4238 }</" + v4006 + ">"
                    let v4240 : string = "leptos::prelude::view! { " + v4239 + " }"
                    let v4241 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4240 
                    let v4242 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4241 |> unbox
                    let v4243 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4244 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4242 v4243 
                    let v4245 : string = "attributeName=\"y\""
                    let v4246 : string = "attributeType=\"XML\""
                    let v4247 : string = "values=\"10; 5; 10\""
                    let v4248 : string = "begin=\"0.3s\""
                    let v4249 : string = "dur=\"0.6s\""
                    let v4250 : string = "repeatCount=\"indefinite\""
                    let v4251 : string = " " + v4245 + v3951 + ""
                    let v4252 : string = " " + v4246 + v4251 + ""
                    let v4253 : string = " " + v4247 + v4252 + ""
                    let v4254 : string = " " + v4248 + v4253 + ""
                    let v4255 : string = " " + v4249 + v4254 + ""
                    let v4256 : string = " " + v4250 + v4255 + ""
                    let v4257 : string = "vec![" + v3951 + "]"
                    let v4258 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4257 
                    let v4259 : string = "leptos::prelude::Fragment::new($0)"
                    let v4260 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4258 v4259 
                    let v4261 : string = "leptos::prelude::AnyView::from($0)"
                    let v4262 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4260 v4261 
                    let v4263 : string = "<" + v4006 + " " + v4256 + ">move || { v4262 }</" + v4006 + ">"
                    let v4264 : string = "leptos::prelude::view! { " + v4263 + " }"
                    let v4265 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4264 
                    let v4266 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4265 |> unbox
                    let v4267 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4268 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4266 v4267 
                    let v4269 : string = "v4268"
                    let v4270 : string = v4269 + v3951 
                    let v4271 : string = v4270 + v3951 
                    let v4272 : string = "v4244"
                    let v4273 : string = v4272 + v4065 
                    let v4274 : string = v4273 + v4271 
                    let v4275 : string = "v4220"
                    let v4276 : string = v4275 + v4065 
                    let v4277 : string = v4276 + v4274 
                    let v4278 : string = "vec![" + v4277 + "]"
                    let v4279 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4278 
                    let v4280 : string = "leptos::prelude::Fragment::new($0)"
                    let v4281 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4279 v4280 
                    let v4282 : string = "leptos::prelude::AnyView::from($0)"
                    let v4283 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4281 v4282 
                    let v4284 : string = "<" + v4077 + " " + v4196 + ">move || { v4283 }</" + v4077 + ">"
                    let v4285 : string = "leptos::prelude::view! { " + v4284 + " }"
                    let v4286 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4285 
                    let v4287 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v4286 |> unbox
                    let v4288 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4289 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4287 v4288 
                    let v4290 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4291 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4184 v4290 
                    let v4292 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4293 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4081 v4292 
                    let v4294 : string = "v4289"
                    let v4295 : string = v4294 + v3951 
                    let v4296 : string = v4295 + v3951 
                    let v4297 : string = "v4291"
                    let v4298 : string = v4297 + v4065 
                    let v4299 : string = v4298 + v4296 
                    let v4300 : string = "v4293"
                    let v4301 : string = v4300 + v4065 
                    let v4302 : string = v4301 + v4299 
                    let v4303 : string = "vec![" + v4302 + "]"
                    let v4304 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4303 
                    let v4305 : string = "leptos::prelude::Fragment::new($0)"
                    let v4306 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4304 v4305 
                    let v4307 : string = "leptos::prelude::AnyView::from($0)"
                    let v4308 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4306 v4307 
                    let v4309 : string = "svg"
                    let v4310 : string = "<" + v4309 + " " + v3975 + ">move || { v4308 }</" + v4309 + ">"
                    let v4311 : string = "leptos::prelude::view! { " + v4310 + " }"
                    let v4312 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4311 
                    let v4313 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4312 |> unbox
                    let v4314 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4315 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4313 v4314 
                    let v4316 : string = "Loading..."
                    (* run_target_args'
                    let v4321 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v4322 : string = "&*$0"
                    let v4323 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4316 v4322 
                    let _run_target_args'_v4321 = v4323 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v4324 : string = "&*$0"
                    let v4325 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4316 v4324 
                    let _run_target_args'_v4321 = v4325 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v4326 : string = "&*$0"
                    let v4327 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4316 v4326 
                    let _run_target_args'_v4321 = v4327 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v4329 : Ref<Str> = v4316 |> unbox<Ref<Str>>
                    let _run_target_args'_v4321 = v4329 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v4333 : Ref<Str> = v4316 |> unbox<Ref<Str>>
                    let _run_target_args'_v4321 = v4333 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v4337 : Ref<Str> = v4316 |> unbox<Ref<Str>>
                    let _run_target_args'_v4321 = v4337 
                    #endif
#else
                    let v4341 : Ref<Str> = v4316 |> unbox<Ref<Str>>
                    let _run_target_args'_v4321 = v4341 
                    #endif
                    let v4344 : Ref<Str> = _run_target_args'_v4321 
                    (* run_target_args'
                    let v4354 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v4355 : string = "String::from($0)"
                    let v4356 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4344 v4355 
                    let _run_target_args'_v4354 = v4356 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v4357 : string = "String::from($0)"
                    let v4358 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4344 v4357 
                    let _run_target_args'_v4354 = v4358 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v4359 : string = "String::from($0)"
                    let v4360 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4344 v4359 
                    let _run_target_args'_v4354 = v4360 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v4362 : std_string_String = v4344 |> unbox<std_string_String>
                    let _run_target_args'_v4354 = v4362 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v4366 : std_string_String = v4344 |> unbox<std_string_String>
                    let _run_target_args'_v4354 = v4366 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v4370 : std_string_String = v4344 |> unbox<std_string_String>
                    let _run_target_args'_v4354 = v4370 
                    #endif
#else
                    let v4374 : std_string_String = v4344 |> unbox<std_string_String>
                    let _run_target_args'_v4354 = v4374 
                    #endif
                    let v4377 : std_string_String = _run_target_args'_v4354 
                    let v4383 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v4384 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4377 v4383 
                    let v4385 : string = "v4384"
                    let v4386 : string = v4385 + v3951 
                    let v4387 : string = v4386 + v3951 
                    let v4388 : string = "v4315"
                    let v4389 : string = v4388 + v4065 
                    let v4390 : string = v4389 + v4387 
                    let v4391 : string = "vec![" + v4390 + "]"
                    let v4392 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4391 
                    let v4393 : string = "leptos::prelude::Fragment::new($0)"
                    let v4394 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4392 v4393 
                    let v4395 : string = "leptos::prelude::AnyView::from($0)"
                    let v4396 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4394 v4395 
                    let v4397 : string = "div"
                    let v4398 : string = "<" + v4397 + " " + v3954 + ">move || { v4396 }</" + v4397 + ">"
                    let v4399 : string = "leptos::prelude::view! { " + v4398 + " }"
                    let v4400 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4399 
                    let v4401 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4400 |> unbox
                    let v4402 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4403 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4401 v4402 
                    let v4404 : string = "v4403"
                    let v4405 : string = v4404 + v3951 
                    let v4406 : string = v4405 + v3951 
                    let v4407 : string = "vec![" + v4406 + "]"
                    let v4408 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4407 
                    let v4409 : string = "leptos::prelude::Fragment::new($0)"
                    let v4410 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4408 v4409 
                    let v4411 : string = "leptos::prelude::AnyView::from($0)"
                    let v4412 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4410 v4411 
                    let v4413 : string = "<" + v4397 + " " + v3952 + ">move || { v4412 }</" + v4397 + ">"
                    let v4414 : string = "leptos::prelude::view! { " + v4413 + " }"
                    let v4415 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4414 
                    let v4416 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4415 |> unbox
                    let v4417 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4418 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4416 v4417 
                    v4418
    let v4602 : string = "v4601"
    let v4603 : string = ""
    let v4604 : string = v4602 + v4603 
    let v4605 : string = v4604 + v4603 
    let v4606 : string = "v144"
    let v4607 : string = ", "
    let v4608 : string = v4606 + v4607 
    let v4609 : string = v4608 + v4605 
    let v4610 : string = "vec![" + v4609 + "]"
    let v4611 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4610 
    let v4612 : string = "leptos::prelude::Fragment::new($0)"
    let v4613 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4611 v4612 
    v4613
and closure337 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure338 () () : Ref<Lifetime<StaticLifetime, Str>> =
    let v0 : string = ""
    let v1 : string = "r#\"" + v0 + "\"#"
    let v2 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v1 
    v2
and closure339 () () : string =
    let v0 : string = "Debug"
    v0
and method282 () : (unit -> string) =
    closure339()
and closure341 () () : leptos_dom_Fragment =
    let v0 : string = "Transactions"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method283 () : (unit -> leptos_dom_Fragment) =
    closure341()
and closure343 () () : string =
    let v0 : string = "[max-height:70vh]"
    v0
and closure342 (v0 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>) () : leptos_dom_Fragment =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    (* run_target_args'
    let v7 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v8 : string = "format!(\"{:#?}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2 v8 
    let v10 : string = "fable_library_rust::String_::fromString($0)"
    let v11 : string = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let _run_target_args'_v7 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "format!(\"{:#?}\", $0)"
    let v13 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2 v12 
    let v14 : string = "fable_library_rust::String_::fromString($0)"
    let v15 : string = Fable.Core.RustInterop.emitRustExpr v13 v14 
    let _run_target_args'_v7 = v15 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v16 : string = "format!(\"{:#?}\", $0)"
    let v17 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2 v16 
    let v18 : string = "fable_library_rust::String_::fromString($0)"
    let v19 : string = Fable.Core.RustInterop.emitRustExpr v17 v18 
    let _run_target_args'_v7 = v19 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v21 : string = $"%A{v2}"
    let _run_target_args'_v7 = v21 
    #endif
#if FABLE_COMPILER_PYTHON
    let v25 : string = $"%A{v2}"
    let _run_target_args'_v7 = v25 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v29 : string = $"%A{v2}"
    let _run_target_args'_v7 = v29 
    #endif
#else
    let v33 : string = $"%A{v2}"
    let _run_target_args'_v7 = v33 
    #endif
    let v36 : string = _run_target_args'_v7 
    let v42 : string = "$0"
    let v43 : (unit -> string) = closure343()
    let v44 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v43 v42 
    let v45 : string = "class=move || \"[padding:1px] [font-size:12px] [line-height:12px] [text-wrap:pretty] \".to_owned() + &v44(())"
    let v46 : string = ""
    let v47 : string = " " + v45 + v46 + ""
    (* run_target_args'
    let v52 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v53 : string = "&*$0"
    let v54 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v36 v53 
    let _run_target_args'_v52 = v54 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v55 : string = "&*$0"
    let v56 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v36 v55 
    let _run_target_args'_v52 = v56 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v57 : string = "&*$0"
    let v58 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v36 v57 
    let _run_target_args'_v52 = v58 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v60 : Ref<Str> = v36 |> unbox<Ref<Str>>
    let _run_target_args'_v52 = v60 
    #endif
#if FABLE_COMPILER_PYTHON
    let v64 : Ref<Str> = v36 |> unbox<Ref<Str>>
    let _run_target_args'_v52 = v64 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v68 : Ref<Str> = v36 |> unbox<Ref<Str>>
    let _run_target_args'_v52 = v68 
    #endif
#else
    let v72 : Ref<Str> = v36 |> unbox<Ref<Str>>
    let _run_target_args'_v52 = v72 
    #endif
    let v75 : Ref<Str> = _run_target_args'_v52 
    (* run_target_args'
    let v85 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v86 : string = "String::from($0)"
    let v87 : std_string_String = Fable.Core.RustInterop.emitRustExpr v75 v86 
    let _run_target_args'_v85 = v87 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v88 : string = "String::from($0)"
    let v89 : std_string_String = Fable.Core.RustInterop.emitRustExpr v75 v88 
    let _run_target_args'_v85 = v89 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v90 : string = "String::from($0)"
    let v91 : std_string_String = Fable.Core.RustInterop.emitRustExpr v75 v90 
    let _run_target_args'_v85 = v91 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v93 : std_string_String = v75 |> unbox<std_string_String>
    let _run_target_args'_v85 = v93 
    #endif
#if FABLE_COMPILER_PYTHON
    let v97 : std_string_String = v75 |> unbox<std_string_String>
    let _run_target_args'_v85 = v97 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v101 : std_string_String = v75 |> unbox<std_string_String>
    let _run_target_args'_v85 = v101 
    #endif
#else
    let v105 : std_string_String = v75 |> unbox<std_string_String>
    let _run_target_args'_v85 = v105 
    #endif
    let v108 : std_string_String = _run_target_args'_v85 
    let v114 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v115 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v108 v114 
    let v116 : string = "v115"
    let v117 : string = v116 + v46 
    let v118 : string = v117 + v46 
    let v119 : string = "vec![" + v118 + "]"
    let v120 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v119 
    let v121 : string = "leptos::prelude::Fragment::new($0)"
    let v122 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v120 v121 
    let v123 : string = "leptos::prelude::AnyView::from($0)"
    let v124 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v122 v123 
    let v125 : string = "pre"
    let v126 : string = "<" + v125 + " " + v47 + ">move || { v124 }</" + v125 + ">"
    let v127 : string = "leptos::prelude::view! { " + v126 + " }"
    let v128 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v127 
    let v129 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v128 |> unbox
    let v130 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v131 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v129 v130 
    let v132 : string = "v131"
    let v133 : string = v132 + v46 
    let v134 : string = v133 + v46 
    let v135 : string = "vec![" + v134 + "]"
    let v136 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v135 
    let v137 : string = "leptos::prelude::Fragment::new($0)"
    let v138 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v136 v137 
    v138
and method284 (v0 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>) : (unit -> leptos_dom_Fragment) =
    closure342(v0)
and closure340 (v0 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>) () : leptos_dom_Fragment =
    let v1 : (unit -> leptos_dom_Fragment) = method283()
    let v2 : (unit -> leptos_dom_Fragment) = method284(v0)
    let v3 : string = "$0"
    let v4 : (unit -> string) = closure253()
    let v5 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4 v3 
    let v6 : string = "$0"
    let v7 : (unit -> string) = closure234()
    let v8 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v7 v6 
    let v9 : string = "$0"
    let v10 : (unit -> string) = closure235()
    let v11 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v10 v9 
    let v12 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v11(()) + \" \" + &v8(()) + \" \" + &v5(())"
    let v13 : string = ""
    let v14 : string = " " + v12 + v13 + ""
    let v15 : string = "$0"
    let v16 : (unit -> string) = closure236()
    let v17 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v16 v15 
    let v18 : string = "class=\"[font-size:12px] text-gray-400\""
    let v19 : string = " " + v18 + v13 + ""
    let v20 : leptos_dom_Fragment = v1 ()
    let v21 : string = "leptos::prelude::AnyView::from($0)"
    let v22 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : string = "dt"
    let v24 : string = "<" + v23 + " " + v19 + ">move || { v22 }</" + v23 + ">"
    let v25 : string = "leptos::prelude::view! { " + v24 + " }"
    let v26 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v25 
    let v27 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v26 |> unbox
    let v28 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v29 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v27 v28 
    let v30 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v17(())"
    let v31 : string = " " + v30 + v13 + ""
    let v32 : leptos_dom_Fragment = v2 ()
    let v33 : string = "leptos::prelude::AnyView::from($0)"
    let v34 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v32 v33 
    let v35 : string = "dd"
    let v36 : string = "<" + v35 + " " + v31 + ">move || { v34 }</" + v35 + ">"
    let v37 : string = "leptos::prelude::view! { " + v36 + " }"
    let v38 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v37 
    let v39 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v38 |> unbox
    let v40 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v41 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v39 v40 
    let v42 : string = "v41"
    let v43 : string = v42 + v13 
    let v44 : string = v43 + v13 
    let v45 : string = "v29"
    let v46 : string = ", "
    let v47 : string = v45 + v46 
    let v48 : string = v47 + v44 
    let v49 : string = "vec![" + v48 + "]"
    let v50 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v49 
    let v51 : string = "leptos::prelude::Fragment::new($0)"
    let v52 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v50 v51 
    let v53 : string = "leptos::prelude::AnyView::from($0)"
    let v54 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v52 v53 
    let v55 : string = "dl"
    let v56 : string = "<" + v55 + " " + v14 + ">move || { v54 }</" + v55 + ">"
    let v57 : string = "leptos::prelude::view! { " + v56 + " }"
    let v58 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v57 
    let v59 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v58 |> unbox
    let v60 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v61 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v59 v60 
    let v62 : string = "v61"
    let v63 : string = v62 + v13 
    let v64 : string = v63 + v13 
    let v65 : string = "vec![" + v64 + "]"
    let v66 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v65 
    let v67 : string = "leptos::prelude::Fragment::new($0)"
    let v68 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v66 v67 
    v68
and closure344 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_4 -> (* Settings *)
        true
    | _ ->
        false
and method285 (v0 : leptos_prelude_ReadSignal<US18>) : (unit -> bool) =
    closure344(v0)
and closure345 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_3 -> (* Transactions *)
        true
    | _ ->
        false
and method286 (v0 : leptos_prelude_ReadSignal<US18>) : (unit -> bool) =
    closure345(v0)
and closure346 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_2 -> (* Lists *)
        true
    | _ ->
        false
and method287 (v0 : leptos_prelude_ReadSignal<US18>) : (unit -> bool) =
    closure346(v0)
and closure347 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_1(v3) -> (* Dice *)
        match v3 with
        | US19_0 -> (* Dice' *)
            true
        | _ ->
            false
    | _ ->
        false
and method288 (v0 : leptos_prelude_ReadSignal<US18>) : (unit -> bool) =
    closure347(v0)
and closure348 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and closure349 (v0 : leptos_prelude_ArcMemo<string>) () : std_string_String =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "settings"
    let v4 : string = v2 + "#/" + v3 + ""
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    v65
and closure350 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_4 -> (* Settings *)
        true
    | _ ->
        false
and closure351 (v0 : leptos_prelude_ReadSignal<US18>) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : bool =
        match v2 with
        | US18_4 -> (* Settings *)
            true
        | _ ->
            false
    if v3 then
        let v4 : string = "border-grey-200 text-grey-900"
        let v5 : string = "r#\"" + v4 + "\"#"
        let v6 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v5 
        v6
    else
        let v7 : string = "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700"
        let v8 : string = "r#\"" + v7 + "\"#"
        let v9 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v8 
        v9
and closure352 (v0 : leptos_prelude_ArcMemo<string>) () : std_string_String =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "transactions"
    let v4 : string = v2 + "#/" + v3 + ""
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    v65
and closure353 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_3 -> (* Transactions *)
        true
    | _ ->
        false
and closure354 (v0 : leptos_prelude_ReadSignal<US18>) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : bool =
        match v2 with
        | US18_3 -> (* Transactions *)
            true
        | _ ->
            false
    if v3 then
        let v4 : string = "border-grey-200 text-grey-900"
        let v5 : string = "r#\"" + v4 + "\"#"
        let v6 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v5 
        v6
    else
        let v7 : string = "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700"
        let v8 : string = "r#\"" + v7 + "\"#"
        let v9 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v8 
        v9
and closure355 (v0 : leptos_prelude_ArcMemo<string>) () : std_string_String =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "lists"
    let v4 : string = v2 + "#/" + v3 + ""
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    v65
and closure356 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_2 -> (* Lists *)
        true
    | _ ->
        false
and closure357 (v0 : leptos_prelude_ReadSignal<US18>) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : bool =
        match v2 with
        | US18_2 -> (* Lists *)
            true
        | _ ->
            false
    if v3 then
        let v4 : string = "border-grey-200 text-grey-900"
        let v5 : string = "r#\"" + v4 + "\"#"
        let v6 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v5 
        v6
    else
        let v7 : string = "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700"
        let v8 : string = "r#\"" + v7 + "\"#"
        let v9 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v8 
        v9
and closure358 (v0 : leptos_prelude_ArcMemo<string>) () : std_string_String =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "dice"
    let v4 : string = v2 + "#/" + v3 + ""
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    v65
and closure359 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_1(v3) -> (* Dice *)
        match v3 with
        | US19_0 -> (* Dice' *)
            true
        | _ ->
            false
    | _ ->
        false
and closure360 (v0 : leptos_prelude_ReadSignal<US18>) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v5 : bool =
        match v2 with
        | US18_1(v3) -> (* Dice *)
            match v3 with
            | US19_0 -> (* Dice' *)
                true
            | _ ->
                false
        | _ ->
            false
    if v5 then
        let v6 : string = "border-grey-200 text-grey-900"
        let v7 : string = "r#\"" + v6 + "\"#"
        let v8 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v7 
        v8
    else
        let v9 : string = "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700"
        let v10 : string = "r#\"" + v9 + "\"#"
        let v11 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v10 
        v11
and closure5 () (v0 : int32) : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> =
    let v1 : string = "home.render () / router: " + string v0 + ""
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
    let v5 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = "$0.unwrap()"
    let v7 : Heap2 = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : string = "state_core.use_database (1)"
    let v9 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v10 : bool = Fable.Core.RustInterop.emitRustExpr v8 v9 
    let v11 : unit = ()
    let v12 : string = $"true; let _func0_from_v11 = Func0::from(move || {{ //"
    let v13 : bool = Fable.Core.RustInterop.emitRustExpr () v12 
    let v14 : string = "true; let __future_init = Box::pin(/*"
    let v15 : bool = Fable.Core.RustInterop.emitRustExpr () v14 
    let v16 : string = "*/ async move { /*"
    let v17 : bool = Fable.Core.RustInterop.emitRustExpr () v16 
    let v18 : string = "*/ ()"
    let v19 : bool = Fable.Core.RustInterop.emitRustExpr () v18 
    let v20 : string = "state_core.use_database (2) / database new_local_resource"
    let v21 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : string = "state_core.build_database ()"
    let v24 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr v23 v24 
    let v26 : string = "true; let __future_init = Box::pin(/*"
    let v27 : bool = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : string = "*/ async { /*"
    let v29 : bool = Fable.Core.RustInterop.emitRustExpr () v28 
    let v30 : string = "*/ ()"
    let v31 : bool = Fable.Core.RustInterop.emitRustExpr () v30 
    let v32 : string = "Box::pin(rexie::Rexie::builder(\"database\").version(1).add_object_store(rexie::ObjectStore::new(\"store\")).build())"
    let v33 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v32 
    let v34 : string = "v33.await"
    let v35 : Result<rexie_Rexie, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v34 
    let v36 : (rexie_Error -> std_string_String) = method6()
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "$0.map_err(|x| $1(x))"
    let v40 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v35, v36) v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "$0.map_err(|x| $1(x))"
    let v42 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v35, v36) v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "$0.map_err(|x| $1(x))"
    let v44 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v35, v36) v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v45 : Result<rexie_Rexie, std_string_String> = match v35 with Ok x -> Ok x | Error x -> Error (v36 x)
    let _run_target_args'_v38 = v45 
    #endif
#if FABLE_COMPILER_PYTHON
    let v46 : Result<rexie_Rexie, std_string_String> = match v35 with Ok x -> Ok x | Error x -> Error (v36 x)
    let _run_target_args'_v38 = v46 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v47 : Result<rexie_Rexie, std_string_String> = match v35 with Ok x -> Ok x | Error x -> Error (v36 x)
    let _run_target_args'_v38 = v47 
    #endif
#else
    let v48 : Result<rexie_Rexie, std_string_String> = match v35 with Ok x -> Ok x | Error x -> Error (v36 x)
    let _run_target_args'_v38 = v48 
    #endif
    let v49 : Result<rexie_Rexie, std_string_String> = _run_target_args'_v38 
    let v52 : string = ""
    let v53 : string = "}"
    let v54 : string = v52 + v53 
    let x = v49 //
    let v55 : _ = x
    let v56 : unit = ()
    (* run_target_args'
    let v57 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v58 : string = $"true; let _fix_closure_v56 = $0"
    let v59 : bool = Fable.Core.RustInterop.emitRustExpr v55 v58 
    let _run_target_args'_v57 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v60 : string = $"true; let _fix_closure_v56 = $0"
    let v61 : bool = Fable.Core.RustInterop.emitRustExpr v55 v60 
    let _run_target_args'_v57 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v62 : string = $"true; let _fix_closure_v56 = $0"
    let v63 : bool = Fable.Core.RustInterop.emitRustExpr v55 v62 
    let _run_target_args'_v57 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v57 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v57 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v57 = false 
    #endif
#else
    let _run_target_args'_v57 = false 
    #endif
    let v64 : bool = _run_target_args'_v57 
    let v66 : string = $"true; _fix_closure_v56 " + v54 + "); " + v52 + " // rust.fix_closure'"
    let v67 : bool = Fable.Core.RustInterop.emitRustExpr () v66 
    let v68 : string = "__future_init"
    let v69 : _ = Fable.Core.RustInterop.emitRustExpr () v68 
    let v70 : string = "v69"
    let v71 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v70 
    let v72 : string = "v71.await"
    let v73 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v72 
    (* run_target_args'
    let v75 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v76 : string = "$0.unwrap()"
    let v77 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v73 v76 
    let _run_target_args'_v75 = v77 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v78 : string = "$0.unwrap()"
    let v79 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v73 v78 
    let _run_target_args'_v75 = v79 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v80 : string = "$0.unwrap()"
    let v81 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v73 v80 
    let _run_target_args'_v75 = v81 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v82 : rexie_Rexie = match v73 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v75 = v82 
    #endif
#if FABLE_COMPILER_PYTHON
    let v83 : rexie_Rexie = match v73 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v75 = v83 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v84 : rexie_Rexie = match v73 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v75 = v84 
    #endif
#else
    let v85 : rexie_Rexie = match v73 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v75 = v85 
    #endif
    let v86 : rexie_Rexie = _run_target_args'_v75 
    let v89 : (rexie_Rexie -> rexie_Rexie) = method7()
    let v90 : rexie_Rexie = v89 v86
    let v91 : string = "std::sync::Arc::new(v90)"
    let v92 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v91 
    let v94 : string = $"%A{v92}"
    let v97 : string = "state_core.use_database (3) / database new_local_resource / result: " + string v94 + ""
    let v98 : int64 = 200L
    let v99 : string = method8(v98, v97)
    let v100 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v101 : bool = Fable.Core.RustInterop.emitRustExpr v99 v100 
    let v102 : string = v52 + v53 
    let x = v92 //
    let v103 : _ = x
    let v104 : unit = ()
    (* run_target_args'
    let v105 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v106 : string = $"true; let _fix_closure_v104 = $0"
    let v107 : bool = Fable.Core.RustInterop.emitRustExpr v103 v106 
    let _run_target_args'_v105 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v108 : string = $"true; let _fix_closure_v104 = $0"
    let v109 : bool = Fable.Core.RustInterop.emitRustExpr v103 v108 
    let _run_target_args'_v105 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v110 : string = $"true; let _fix_closure_v104 = $0"
    let v111 : bool = Fable.Core.RustInterop.emitRustExpr v103 v110 
    let _run_target_args'_v105 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v105 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v105 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v105 = false 
    #endif
#else
    let _run_target_args'_v105 = false 
    #endif
    let v112 : bool = _run_target_args'_v105 
    let v114 : string = $"true; _fix_closure_v104 " + v102 + "); " + v52 + " // rust.fix_closure'"
    let v115 : bool = Fable.Core.RustInterop.emitRustExpr () v114 
    let v116 : string = "__future_init"
    let v117 : _ = Fable.Core.RustInterop.emitRustExpr () v116 
    let v118 : string = "v117"
    let v119 : std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>> = Fable.Core.RustInterop.emitRustExpr () v118 
    let v120 : string = $"true; $0 /*"
    let v121 : bool = Fable.Core.RustInterop.emitRustExpr v119 v120 
    let v122 : string = $"*/ }}); //"
    let v123 : bool = Fable.Core.RustInterop.emitRustExpr () v122 
    let v124 : string = $"_func0_from_v11"
    let v125 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>>> = Fable.Core.RustInterop.emitRustExpr () v124 
    let v126 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v127 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v125 v126 
    let v128 : string = "state_core.use_core_database (1)"
    let v129 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v130 : bool = Fable.Core.RustInterop.emitRustExpr v128 v129 
    let v131 : unit = ()
    let v132 : string = $"true; let _func0_from_v131 = Func0::from(move || {{ //"
    let v133 : bool = Fable.Core.RustInterop.emitRustExpr () v132 
    let v134 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v135 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v127 v134 
    let v136 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v137 : bool = Fable.Core.RustInterop.emitRustExpr v135 v136 
    let v138 : string = "x"
    let v139 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v138 
    let v140 : (unit -> unit) = closure8()
    let _v140 = true
    let v141 : string = "PartialEqWrapper($0)"
    let v142 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v139 v141 
    let v143 : string = "true; $0 })"
    let v144 : bool = Fable.Core.RustInterop.emitRustExpr v142 v143 
    let v145 : string = "_optionm_map_"
    let v146 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr () v145 
    let v147 : string = "true; let __future_init = Box::pin(/*"
    let v148 : bool = Fable.Core.RustInterop.emitRustExpr () v147 
    let v149 : string = "*/ async move { /*"
    let v150 : bool = Fable.Core.RustInterop.emitRustExpr () v149 
    let v151 : string = "*/ ()"
    let v152 : bool = Fable.Core.RustInterop.emitRustExpr () v151 
    let v154 : string = $"%A{v146}"
    let v157 : string = "state_core.use_core_database (2) / core_state_heap new_local_resource / database: " + v154 + ""
    let v158 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v159 : bool = Fable.Core.RustInterop.emitRustExpr v157 v158 
    let v160 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v161 : bool = Fable.Core.RustInterop.emitRustExpr v146 v160 
    let v162 : string = "x"
    let v163 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr () v162 
    let v164 : string = "$0.0"
    let v165 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr v163 v164 
    let v166 : string = "true; $0 })"
    let v167 : bool = Fable.Core.RustInterop.emitRustExpr v165 v166 
    let v168 : string = "_optionm_map_"
    let v169 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr () v168 
    let v172 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v173 : US2 option = v169 |> Option.map v172 
    let v193 : US2 = US2_1
    let v194 : US2 = v173 |> Option.defaultValue v193 
    let v645 : US3 =
        match v194 with
        | US2_1 -> (* None *)
            US3_1
        | US2_0(v198) -> (* Some *)
            let v199 : string = "core-state-heap"
            let v200 : string = "state_core.get_data () / id: " + v199 + ""
            let v201 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v202 : bool = Fable.Core.RustInterop.emitRustExpr v200 v201 
            let v203 : string = "true; let __future_init = Box::pin(/*"
            let v204 : bool = Fable.Core.RustInterop.emitRustExpr () v203 
            let v205 : string = "*/ async { /*"
            let v206 : bool = Fable.Core.RustInterop.emitRustExpr () v205 
            let v207 : string = "*/ ()"
            let v208 : bool = Fable.Core.RustInterop.emitRustExpr () v207 
            let v209 : string = "store"
            let v210 : (string []) = [|v209|]
            let v211 : string = "$0.to_vec()"
            let v212 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v210 v211 
            let v213 : unit = ()
            let v214 : string = $"true; let _func1_from_v213 = Func1::from(move |value| {{ //"
            let v215 : bool = Fable.Core.RustInterop.emitRustExpr () v214 
            let v216 : string = $"value"
            let v217 : string = Fable.Core.RustInterop.emitRustExpr () v216 
            (* run_target_args'
            let v222 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v223 : string = "&*$0"
            let v224 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v217 v223 
            let _run_target_args'_v222 = v224 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v225 : string = "&*$0"
            let v226 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v217 v225 
            let _run_target_args'_v222 = v226 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v227 : string = "&*$0"
            let v228 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v217 v227 
            let _run_target_args'_v222 = v228 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v230 : Ref<Str> = v217 |> unbox<Ref<Str>>
            let _run_target_args'_v222 = v230 
            #endif
#if FABLE_COMPILER_PYTHON
            let v234 : Ref<Str> = v217 |> unbox<Ref<Str>>
            let _run_target_args'_v222 = v234 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v238 : Ref<Str> = v217 |> unbox<Ref<Str>>
            let _run_target_args'_v222 = v238 
            #endif
#else
            let v242 : Ref<Str> = v217 |> unbox<Ref<Str>>
            let _run_target_args'_v222 = v242 
            #endif
            let v245 : Ref<Str> = _run_target_args'_v222 
            (* run_target_args'
            let v255 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v256 : string = "String::from($0)"
            let v257 : std_string_String = Fable.Core.RustInterop.emitRustExpr v245 v256 
            let _run_target_args'_v255 = v257 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v258 : string = "String::from($0)"
            let v259 : std_string_String = Fable.Core.RustInterop.emitRustExpr v245 v258 
            let _run_target_args'_v255 = v259 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v260 : string = "String::from($0)"
            let v261 : std_string_String = Fable.Core.RustInterop.emitRustExpr v245 v260 
            let _run_target_args'_v255 = v261 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v263 : std_string_String = v245 |> unbox<std_string_String>
            let _run_target_args'_v255 = v263 
            #endif
#if FABLE_COMPILER_PYTHON
            let v267 : std_string_String = v245 |> unbox<std_string_String>
            let _run_target_args'_v255 = v267 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v271 : std_string_String = v245 |> unbox<std_string_String>
            let _run_target_args'_v255 = v271 
            #endif
#else
            let v275 : std_string_String = v245 |> unbox<std_string_String>
            let _run_target_args'_v255 = v275 
            #endif
            let v278 : std_string_String = _run_target_args'_v255 
            let func1_from_result = v278 //
            let v284 : _ = func1_from_result
            let v285 : string = $"true; $0 /*"
            let v286 : bool = Fable.Core.RustInterop.emitRustExpr v284 v285 
            let v287 : string = $"*/ }}); //"
            let v288 : bool = Fable.Core.RustInterop.emitRustExpr () v287 
            let v289 : string = $"_func1_from_v213"
            let v290 : Func0<string, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v289 
            let v291 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v292 : (string -> std_string_String) = closure10(v290)
            let v293 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v212, v292) v291 
            let v294 : std_sync_Arc<rexie_Rexie> = method11(v198)
            let v295 : string = "$0.transaction(&v293, rexie::TransactionMode::ReadOnly)"
            let v296 : Result<rexie_Transaction, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v294 v295 
            let v297 : (rexie_Error -> std_string_String) = method12()
            (* run_target_args'
            let v299 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v300 : string = "$0.map_err(|x| $1(x))"
            let v301 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v296, v297) v300 
            let _run_target_args'_v299 = v301 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v302 : string = "$0.map_err(|x| $1(x))"
            let v303 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v296, v297) v302 
            let _run_target_args'_v299 = v303 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v304 : string = "$0.map_err(|x| $1(x))"
            let v305 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v296, v297) v304 
            let _run_target_args'_v299 = v305 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v306 : Result<rexie_Transaction, std_string_String> = match v296 with Ok x -> Ok x | Error x -> Error (v297 x)
            let _run_target_args'_v299 = v306 
            #endif
#if FABLE_COMPILER_PYTHON
            let v307 : Result<rexie_Transaction, std_string_String> = match v296 with Ok x -> Ok x | Error x -> Error (v297 x)
            let _run_target_args'_v299 = v307 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v308 : Result<rexie_Transaction, std_string_String> = match v296 with Ok x -> Ok x | Error x -> Error (v297 x)
            let _run_target_args'_v299 = v308 
            #endif
#else
            let v309 : Result<rexie_Transaction, std_string_String> = match v296 with Ok x -> Ok x | Error x -> Error (v297 x)
            let _run_target_args'_v299 = v309 
            #endif
            let v310 : Result<rexie_Transaction, std_string_String> = _run_target_args'_v299 
            let v313 : string = "$0?"
            let v314 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v310 v313 
            let v315 : string = method13()
            (* run_target_args'
            let v320 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v321 : string = "&*$0"
            let v322 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v315 v321 
            let _run_target_args'_v320 = v322 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v323 : string = "&*$0"
            let v324 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v315 v323 
            let _run_target_args'_v320 = v324 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v325 : string = "&*$0"
            let v326 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v315 v325 
            let _run_target_args'_v320 = v326 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v328 : Ref<Str> = v315 |> unbox<Ref<Str>>
            let _run_target_args'_v320 = v328 
            #endif
#if FABLE_COMPILER_PYTHON
            let v332 : Ref<Str> = v315 |> unbox<Ref<Str>>
            let _run_target_args'_v320 = v332 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v336 : Ref<Str> = v315 |> unbox<Ref<Str>>
            let _run_target_args'_v320 = v336 
            #endif
#else
            let v340 : Ref<Str> = v315 |> unbox<Ref<Str>>
            let _run_target_args'_v320 = v340 
            #endif
            let v343 : Ref<Str> = _run_target_args'_v320 
            let v349 : string = "v314.store($0)"
            let v350 : Result<rexie_Store, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v343 v349 
            let v351 : (rexie_Error -> std_string_String) = method14()
            (* run_target_args'
            let v353 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v354 : string = "$0.map_err(|x| $1(x))"
            let v355 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v350, v351) v354 
            let _run_target_args'_v353 = v355 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v356 : string = "$0.map_err(|x| $1(x))"
            let v357 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v350, v351) v356 
            let _run_target_args'_v353 = v357 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v358 : string = "$0.map_err(|x| $1(x))"
            let v359 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v350, v351) v358 
            let _run_target_args'_v353 = v359 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v360 : Result<rexie_Store, std_string_String> = match v350 with Ok x -> Ok x | Error x -> Error (v351 x)
            let _run_target_args'_v353 = v360 
            #endif
#if FABLE_COMPILER_PYTHON
            let v361 : Result<rexie_Store, std_string_String> = match v350 with Ok x -> Ok x | Error x -> Error (v351 x)
            let _run_target_args'_v353 = v361 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v362 : Result<rexie_Store, std_string_String> = match v350 with Ok x -> Ok x | Error x -> Error (v351 x)
            let _run_target_args'_v353 = v362 
            #endif
#else
            let v363 : Result<rexie_Store, std_string_String> = match v350 with Ok x -> Ok x | Error x -> Error (v351 x)
            let _run_target_args'_v353 = v363 
            #endif
            let v364 : Result<rexie_Store, std_string_String> = _run_target_args'_v353 
            let v367 : string = "$0?"
            let v368 : rexie_Store = Fable.Core.RustInterop.emitRustExpr v364 v367 
            let v369 : string = method15()
            (* run_target_args'
            let v374 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v375 : string = "&*$0"
            let v376 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v369 v375 
            let _run_target_args'_v374 = v376 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v377 : string = "&*$0"
            let v378 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v369 v377 
            let _run_target_args'_v374 = v378 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v379 : string = "&*$0"
            let v380 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v369 v379 
            let _run_target_args'_v374 = v380 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v382 : Ref<Str> = v369 |> unbox<Ref<Str>>
            let _run_target_args'_v374 = v382 
            #endif
#if FABLE_COMPILER_PYTHON
            let v386 : Ref<Str> = v369 |> unbox<Ref<Str>>
            let _run_target_args'_v374 = v386 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v390 : Ref<Str> = v369 |> unbox<Ref<Str>>
            let _run_target_args'_v374 = v390 
            #endif
#else
            let v394 : Ref<Str> = v369 |> unbox<Ref<Str>>
            let _run_target_args'_v374 = v394 
            #endif
            let v397 : Ref<Str> = _run_target_args'_v374 
            let v403 : string = "wasm_bindgen::JsValue::from_str($0)"
            let v404 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr v397 v403 
            let v405 : string = $"Box::pin(rexie::Store::get(&v368, v404))"
            let v406 : std_pin_Pin<Box<Dyn<std_future_Future<Result<wasm_bindgen_JsValue option, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v405 
            let v407 : string = "v406.await"
            let v408 : Result<wasm_bindgen_JsValue option, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v407 
            let v409 : (rexie_Error -> std_string_String) = method16()
            (* run_target_args'
            let v411 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v412 : string = "$0.map_err(|x| $1(x))"
            let v413 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v408, v409) v412 
            let _run_target_args'_v411 = v413 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v414 : string = "$0.map_err(|x| $1(x))"
            let v415 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v408, v409) v414 
            let _run_target_args'_v411 = v415 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v416 : string = "$0.map_err(|x| $1(x))"
            let v417 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v408, v409) v416 
            let _run_target_args'_v411 = v417 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v418 : Result<wasm_bindgen_JsValue option, std_string_String> = match v408 with Ok x -> Ok x | Error x -> Error (v409 x)
            let _run_target_args'_v411 = v418 
            #endif
#if FABLE_COMPILER_PYTHON
            let v419 : Result<wasm_bindgen_JsValue option, std_string_String> = match v408 with Ok x -> Ok x | Error x -> Error (v409 x)
            let _run_target_args'_v411 = v419 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v420 : Result<wasm_bindgen_JsValue option, std_string_String> = match v408 with Ok x -> Ok x | Error x -> Error (v409 x)
            let _run_target_args'_v411 = v420 
            #endif
#else
            let v421 : Result<wasm_bindgen_JsValue option, std_string_String> = match v408 with Ok x -> Ok x | Error x -> Error (v409 x)
            let _run_target_args'_v411 = v421 
            #endif
            let v422 : Result<wasm_bindgen_JsValue option, std_string_String> = _run_target_args'_v411 
            let v425 : string = "$0?"
            let v426 : wasm_bindgen_JsValue option = Fable.Core.RustInterop.emitRustExpr v422 v425 
            let v429 : (wasm_bindgen_JsValue -> US4) = method17()
            let v430 : US4 option = v426 |> Option.map v429 
            let v450 : US4 = US4_1
            let v451 : US4 = v430 |> Option.defaultValue v450 
            let v565 : US3 =
                match v451 with
                | US4_1 -> (* None *)
                    US3_1
                | US4_0(v455) -> (* Some *)
                    let v456 : wasm_bindgen_JsValue = method18(v455)
                    let v457 : string = "serde_wasm_bindgen::from_value(v456)"
                    let v458 : Result<serde_json_Value option, serde_wasm_bindgen_Error> = Fable.Core.RustInterop.emitRustExpr () v457 
                    let v459 : (serde_wasm_bindgen_Error -> std_string_String) = method19()
                    (* run_target_args'
                    let v461 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v462 : string = "$0.map_err(|x| $1(x))"
                    let v463 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v458, v459) v462 
                    let _run_target_args'_v461 = v463 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v464 : string = "$0.map_err(|x| $1(x))"
                    let v465 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v458, v459) v464 
                    let _run_target_args'_v461 = v465 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v466 : string = "$0.map_err(|x| $1(x))"
                    let v467 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v458, v459) v466 
                    let _run_target_args'_v461 = v467 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v468 : Result<serde_json_Value option, std_string_String> = match v458 with Ok x -> Ok x | Error x -> Error (v459 x)
                    let _run_target_args'_v461 = v468 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v469 : Result<serde_json_Value option, std_string_String> = match v458 with Ok x -> Ok x | Error x -> Error (v459 x)
                    let _run_target_args'_v461 = v469 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v470 : Result<serde_json_Value option, std_string_String> = match v458 with Ok x -> Ok x | Error x -> Error (v459 x)
                    let _run_target_args'_v461 = v470 
                    #endif
#else
                    let v471 : Result<serde_json_Value option, std_string_String> = match v458 with Ok x -> Ok x | Error x -> Error (v459 x)
                    let _run_target_args'_v461 = v471 
                    #endif
                    let v472 : Result<serde_json_Value option, std_string_String> = _run_target_args'_v461 
                    let v475 : string = "$0?"
                    let v476 : serde_json_Value option = Fable.Core.RustInterop.emitRustExpr v472 v475 
                    let v479 : (serde_json_Value -> US5) = method20()
                    let v480 : US5 option = v476 |> Option.map v479 
                    let v500 : US5 = US5_1
                    let v501 : US5 = v480 |> Option.defaultValue v500 
                    match v501 with
                    | US5_1 -> (* None *)
                        US3_1
                    | US5_0(v505) -> (* Some *)
                        let v506 : serde_json_Value = method21(v505)
                        let v507 : string = "serde_json::from_value(v506)"
                        let v508 : Result<Vec<uint8>, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr () v507 
                        let v509 : (serde_json_Error -> std_string_String) = method22()
                        (* run_target_args'
                        let v511 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v512 : string = "$0.map_err(|x| $1(x))"
                        let v513 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v508, v509) v512 
                        let _run_target_args'_v511 = v513 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v514 : string = "$0.map_err(|x| $1(x))"
                        let v515 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v508, v509) v514 
                        let _run_target_args'_v511 = v515 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v516 : string = "$0.map_err(|x| $1(x))"
                        let v517 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v508, v509) v516 
                        let _run_target_args'_v511 = v517 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v518 : Result<Vec<uint8>, std_string_String> = match v508 with Ok x -> Ok x | Error x -> Error (v509 x)
                        let _run_target_args'_v511 = v518 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v519 : Result<Vec<uint8>, std_string_String> = match v508 with Ok x -> Ok x | Error x -> Error (v509 x)
                        let _run_target_args'_v511 = v519 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v520 : Result<Vec<uint8>, std_string_String> = match v508 with Ok x -> Ok x | Error x -> Error (v509 x)
                        let _run_target_args'_v511 = v520 
                        #endif
#else
                        let v521 : Result<Vec<uint8>, std_string_String> = match v508 with Ok x -> Ok x | Error x -> Error (v509 x)
                        let _run_target_args'_v511 = v521 
                        #endif
                        let v522 : Result<Vec<uint8>, std_string_String> = _run_target_args'_v511 
                        let v525 : string = "$0?"
                        let v526 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v522 v525 
                        let v527 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                        let v528 : (uint8 []) = Fable.Core.RustInterop.emitRustExpr v526 v527 
                        let v529 : int32 = v528.Length
                        let v530 : string = "state_core.get_data () / data_len: " + string v529 + ""
                        let v531 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v532 : bool = Fable.Core.RustInterop.emitRustExpr v530 v531 
                        let v533 : string = "$0.to_vec()"
                        let v534 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v528 v533 
                        let v535 : string = "v534.as_slice()"
                        let v536 : Ref<Slice<uint8>> = Fable.Core.RustInterop.emitRustExpr () v535 
                        let v537 : string = "true; let mut v536 = v536"
                        let v538 : bool = Fable.Core.RustInterop.emitRustExpr () v537 
                        let v539 : string = "borsh::BorshDeserialize::deserialize(&mut v536)"
                        let v540 : Result<Heap3 option, borsh_io_Error> = Fable.Core.RustInterop.emitRustExpr () v539 
                        let v541 : (borsh_io_Error -> std_string_String) = method23()
                        (* run_target_args'
                        let v543 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v544 : string = "$0.map_err(|x| $1(x))"
                        let v545 : Result<Heap3 option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v540, v541) v544 
                        let _run_target_args'_v543 = v545 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v546 : string = "$0.map_err(|x| $1(x))"
                        let v547 : Result<Heap3 option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v540, v541) v546 
                        let _run_target_args'_v543 = v547 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v548 : string = "$0.map_err(|x| $1(x))"
                        let v549 : Result<Heap3 option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v540, v541) v548 
                        let _run_target_args'_v543 = v549 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v550 : Result<Heap3 option, std_string_String> = match v540 with Ok x -> Ok x | Error x -> Error (v541 x)
                        let _run_target_args'_v543 = v550 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v551 : Result<Heap3 option, std_string_String> = match v540 with Ok x -> Ok x | Error x -> Error (v541 x)
                        let _run_target_args'_v543 = v551 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v552 : Result<Heap3 option, std_string_String> = match v540 with Ok x -> Ok x | Error x -> Error (v541 x)
                        let _run_target_args'_v543 = v552 
                        #endif
#else
                        let v553 : Result<Heap3 option, std_string_String> = match v540 with Ok x -> Ok x | Error x -> Error (v541 x)
                        let _run_target_args'_v543 = v553 
                        #endif
                        let v554 : Result<Heap3 option, std_string_String> = _run_target_args'_v543 
                        let v557 : string = "$0?"
                        let v558 : Heap3 option = Fable.Core.RustInterop.emitRustExpr v554 v557 
                        US3_0(v558)
            let v576 : Heap3 option option =
                match v565 with
                | US3_1 -> (* None *)
                    let v572 : Heap3 option option = None
                    v572
                | US3_0(v566) -> (* Some *)
                    let v568 : Heap3 option option = Some v566 
                    v568
            let v578 : Result<Heap3 option option, std_string_String> = Ok v576 
            let v581 : string = v52 + v53 
            let x = v578 //
            let v582 : _ = x
            let v583 : unit = ()
            (* run_target_args'
            let v584 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v585 : string = $"true; let _fix_closure_v583 = $0"
            let v586 : bool = Fable.Core.RustInterop.emitRustExpr v582 v585 
            let _run_target_args'_v584 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v587 : string = $"true; let _fix_closure_v583 = $0"
            let v588 : bool = Fable.Core.RustInterop.emitRustExpr v582 v587 
            let _run_target_args'_v584 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v589 : string = $"true; let _fix_closure_v583 = $0"
            let v590 : bool = Fable.Core.RustInterop.emitRustExpr v582 v589 
            let _run_target_args'_v584 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v584 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v584 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v584 = false 
            #endif
#else
            let _run_target_args'_v584 = false 
            #endif
            let v591 : bool = _run_target_args'_v584 
            let v593 : string = $"true; _fix_closure_v583 " + v581 + "); " + v52 + " // rust.fix_closure'"
            let v594 : bool = Fable.Core.RustInterop.emitRustExpr () v593 
            let v595 : string = "__future_init"
            let v596 : _ = Fable.Core.RustInterop.emitRustExpr () v595 
            let v597 : string = "v596"
            let v598 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap3 option option, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v597 
            let v599 : string = "v598.await"
            let v600 : Result<Heap3 option option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v599 
            let v601 : (Heap3 option option -> US6) = method24()
            let v602 : (std_string_String -> US6) = method25()
            let v604 : US6 = match v600 with Ok x -> v601 x | Error x -> v602 x
            match v604 with
            | US6_1(v636) -> (* Error *)
                let v637 : string = "state_core.use_core_database (3) / error: " + string v636 + ""
                let v638 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v639 : bool = Fable.Core.RustInterop.emitRustExpr v637 v638 
                US3_1
            | US6_0(v607) -> (* Ok *)
                let v610 : (Heap3 option -> US3) = method26()
                let v611 : US3 option = v607 |> Option.map v610 
                let v631 : US3 = US3_1
                let v632 : US3 = v611 |> Option.defaultValue v631 
                v632
    let v678 : US7 =
        match v645 with
        | US3_1 -> (* None *)
            US7_1
        | US3_0(v646) -> (* Some *)
            let v649 : (Heap3 -> US8) = method27()
            let v650 : US8 option = v646 |> Option.map v649 
            let v670 : US8 = US8_1
            let v671 : US8 = v650 |> Option.defaultValue v670 
            US7_0(v671)
    let v685 : US8 =
        match v678 with
        | US7_0(v679) -> (* Some *)
            match v679 with
            | US8_0(v680) -> (* Some *)
                US8_0(v680)
            | _ ->
                US8_1
        | _ ->
            US8_1
    let v686 : string = v52 + v53 
    let x = v685 //
    let v687 : _ = x
    let v688 : unit = ()
    (* run_target_args'
    let v689 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v690 : string = $"true; let _fix_closure_v688 = $0"
    let v691 : bool = Fable.Core.RustInterop.emitRustExpr v687 v690 
    let _run_target_args'_v689 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v692 : string = $"true; let _fix_closure_v688 = $0"
    let v693 : bool = Fable.Core.RustInterop.emitRustExpr v687 v692 
    let _run_target_args'_v689 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v694 : string = $"true; let _fix_closure_v688 = $0"
    let v695 : bool = Fable.Core.RustInterop.emitRustExpr v687 v694 
    let _run_target_args'_v689 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v689 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v689 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v689 = false 
    #endif
#else
    let _run_target_args'_v689 = false 
    #endif
    let v696 : bool = _run_target_args'_v689 
    let v698 : string = $"true; _fix_closure_v688 " + v686 + "); " + v52 + " // rust.fix_closure'"
    let v699 : bool = Fable.Core.RustInterop.emitRustExpr () v698 
    let v700 : string = "__future_init"
    let v701 : _ = Fable.Core.RustInterop.emitRustExpr () v700 
    let v702 : string = "v701"
    let v703 : std_pin_Pin<Box<Dyn<std_future_Future<US8>>>> = Fable.Core.RustInterop.emitRustExpr () v702 
    let v704 : string = $"true; $0 /*"
    let v705 : bool = Fable.Core.RustInterop.emitRustExpr v703 v704 
    let v706 : string = $"*/ }}); //"
    let v707 : bool = Fable.Core.RustInterop.emitRustExpr () v706 
    let v708 : string = $"_func0_from_v131"
    let v709 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<US8>>>>> = Fable.Core.RustInterop.emitRustExpr () v708 
    let v710 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v711 : leptos_prelude_ArcLocalResource<US8> = Fable.Core.RustInterop.emitRustExpr v709 v710 
    let v712 : unit = ()
    let v713 : string = $"true; let _func0_from_v712 = Func0::from(move || {{ //"
    let v714 : bool = Fable.Core.RustInterop.emitRustExpr () v713 
    let v715 : string = "state_core.use_core_database (4) / effect core_state_heap / ##1"
    let v716 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v717 : bool = Fable.Core.RustInterop.emitRustExpr v715 v716 
    let v718 : web_sys_Window = method28()
    let v719 : Result<web_sys_Storage option, wasm_bindgen_JsValue> = method29(v718)
    let v720 : (web_sys_Storage option -> US9) = method30()
    let v721 : (wasm_bindgen_JsValue -> US9) = method31()
    let v723 : US9 = match v719 with Ok x -> v720 x | Error x -> v721 x
    let v759 : US10 =
        match v723 with
        | US9_1(v756) -> (* Error *)
            US10_1(v756)
        | US9_0(v726) -> (* Ok *)
            let v729 : (web_sys_Storage -> US11) = method32()
            let v730 : US11 option = v726 |> Option.map v729 
            let v750 : US11 = US11_1
            let v751 : US11 = v730 |> Option.defaultValue v750 
            US10_0(v751)
    let v1386 : bool =
        match v759 with
        | US10_0(v760) -> (* Ok *)
            match v760 with
            | US11_0(v761) -> (* Some *)
                let v762 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
                let v763 : US8 option = Fable.Core.RustInterop.emitRustExpr v711 v762 
                let v766 : (US8 -> US7) = method33()
                let v767 : US7 option = v763 |> Option.map v766 
                let v787 : US7 = US7_1
                let v788 : US7 = v767 |> Option.defaultValue v787 
                let v793 : string = $"%A{v788}"
                let v796 : string = "state_core.use_core_database (5) / effect core_state_heap / ##2 / core_state_heap: " + v793 + ""
                let v797 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v798 : bool = Fable.Core.RustInterop.emitRustExpr v796 v797 
                let v1315 : US8 =
                    match v788 with
                    | US7_0(v799) -> (* Some *)
                        match v799 with
                        | US8_0(v800) -> (* Some *)
                            US8_0(v800)
                        | _ ->
                            let v802 : web_sys_Storage = method34(v761)
                            let v803 : string = method35()
                            (* run_target_args'
                            let v808 : unit = ()
                            run_target_args' *)
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v809 : string = "&*$0"
                            let v810 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v803 v809 
                            let _run_target_args'_v808 = v810 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v811 : string = "&*$0"
                            let v812 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v803 v811 
                            let _run_target_args'_v808 = v812 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v813 : string = "&*$0"
                            let v814 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v803 v813 
                            let _run_target_args'_v808 = v814 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v816 : Ref<Str> = v803 |> unbox<Ref<Str>>
                            let _run_target_args'_v808 = v816 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v820 : Ref<Str> = v803 |> unbox<Ref<Str>>
                            let _run_target_args'_v808 = v820 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v824 : Ref<Str> = v803 |> unbox<Ref<Str>>
                            let _run_target_args'_v808 = v824 
                            #endif
#else
                            let v828 : Ref<Str> = v803 |> unbox<Ref<Str>>
                            let _run_target_args'_v808 = v828 
                            #endif
                            let v831 : Ref<Str> = _run_target_args'_v808 
                            let v837 : string = $"web_sys::Storage::get_item(&v802, $0)"
                            let v838 : Result<std_string_String option, wasm_bindgen_JsValue> = Fable.Core.RustInterop.emitRustExpr v831 v837 
                            let v839 : (std_string_String option -> US12) = method36()
                            let v840 : (wasm_bindgen_JsValue -> US12) = method37()
                            let v842 : US12 = match v838 with Ok x -> v839 x | Error x -> v840 x
                            let v881 : US13 =
                                match v842 with
                                | US12_1(v878) -> (* Error *)
                                    US13_1(v878)
                                | US12_0(v845) -> (* Ok *)
                                    let v846 : std_string_String option = method38(v845)
                                    let v847 : string = "serde_json::from_value(v846.into()).unwrap()"
                                    let v848 : std_string_String option = Fable.Core.RustInterop.emitRustExpr () v847 
                                    let v851 : (std_string_String -> US14) = method39()
                                    let v852 : US14 option = v848 |> Option.map v851 
                                    let v872 : US14 = US14_1
                                    let v873 : US14 = v852 |> Option.defaultValue v872 
                                    US13_0(v873)
                            let v887 : US15 =
                                match v881 with
                                | US13_1(v884) -> (* Error *)
                                    US15_1
                                | US13_0(v882) -> (* Ok *)
                                    US15_0(v882)
                            let v894 : US14 =
                                match v887 with
                                | US15_0(v888) -> (* Some *)
                                    match v888 with
                                    | US14_0(v889) -> (* Some *)
                                        US14_0(v889)
                                    | _ ->
                                        US14_1
                                | _ ->
                                    US14_1
                            let v905 : std_string_String option =
                                match v894 with
                                | US14_1 -> (* None *)
                                    let v901 : std_string_String option = None
                                    v901
                                | US14_0(v895) -> (* Some *)
                                    let v897 : std_string_String option = Some v895 
                                    v897
                            let v908 : (std_string_String -> US8) = method40()
                            let v909 : US8 option = v905 |> Option.map v908 
                            let v1025 : (US8 -> US7) = method33()
                            let v1026 : US7 option = v909 |> Option.map v1025 
                            let v1046 : US7 = US7_1
                            let v1047 : US7 = v1026 |> Option.defaultValue v1046 
                            match v1047 with
                            | US7_0(v1051) -> (* Some *)
                                match v1051 with
                                | US8_0(v1052) -> (* Some *)
                                    US8_0(v1052)
                                | _ ->
                                    US8_1
                            | _ ->
                                US8_1
                    | _ ->
                        let v1059 : web_sys_Storage = method34(v761)
                        let v1060 : string = method35()
                        (* run_target_args'
                        let v1065 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1066 : string = "&*$0"
                        let v1067 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1060 v1066 
                        let _run_target_args'_v1065 = v1067 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1068 : string = "&*$0"
                        let v1069 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1060 v1068 
                        let _run_target_args'_v1065 = v1069 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1070 : string = "&*$0"
                        let v1071 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1060 v1070 
                        let _run_target_args'_v1065 = v1071 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1073 : Ref<Str> = v1060 |> unbox<Ref<Str>>
                        let _run_target_args'_v1065 = v1073 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1077 : Ref<Str> = v1060 |> unbox<Ref<Str>>
                        let _run_target_args'_v1065 = v1077 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1081 : Ref<Str> = v1060 |> unbox<Ref<Str>>
                        let _run_target_args'_v1065 = v1081 
                        #endif
#else
                        let v1085 : Ref<Str> = v1060 |> unbox<Ref<Str>>
                        let _run_target_args'_v1065 = v1085 
                        #endif
                        let v1088 : Ref<Str> = _run_target_args'_v1065 
                        let v1094 : string = $"web_sys::Storage::get_item(&v1059, $0)"
                        let v1095 : Result<std_string_String option, wasm_bindgen_JsValue> = Fable.Core.RustInterop.emitRustExpr v1088 v1094 
                        let v1096 : (std_string_String option -> US12) = method36()
                        let v1097 : (wasm_bindgen_JsValue -> US12) = method37()
                        let v1099 : US12 = match v1095 with Ok x -> v1096 x | Error x -> v1097 x
                        let v1138 : US13 =
                            match v1099 with
                            | US12_1(v1135) -> (* Error *)
                                US13_1(v1135)
                            | US12_0(v1102) -> (* Ok *)
                                let v1103 : std_string_String option = method38(v1102)
                                let v1104 : string = "serde_json::from_value(v1103.into()).unwrap()"
                                let v1105 : std_string_String option = Fable.Core.RustInterop.emitRustExpr () v1104 
                                let v1108 : (std_string_String -> US14) = method39()
                                let v1109 : US14 option = v1105 |> Option.map v1108 
                                let v1129 : US14 = US14_1
                                let v1130 : US14 = v1109 |> Option.defaultValue v1129 
                                US13_0(v1130)
                        let v1144 : US15 =
                            match v1138 with
                            | US13_1(v1141) -> (* Error *)
                                US15_1
                            | US13_0(v1139) -> (* Ok *)
                                US15_0(v1139)
                        let v1151 : US14 =
                            match v1144 with
                            | US15_0(v1145) -> (* Some *)
                                match v1145 with
                                | US14_0(v1146) -> (* Some *)
                                    US14_0(v1146)
                                | _ ->
                                    US14_1
                            | _ ->
                                US14_1
                        let v1162 : std_string_String option =
                            match v1151 with
                            | US14_1 -> (* None *)
                                let v1158 : std_string_String option = None
                                v1158
                            | US14_0(v1152) -> (* Some *)
                                let v1154 : std_string_String option = Some v1152 
                                v1154
                        let v1165 : (std_string_String -> US8) = method40()
                        let v1166 : US8 option = v1162 |> Option.map v1165 
                        let v1282 : (US8 -> US7) = method33()
                        let v1283 : US7 option = v1166 |> Option.map v1282 
                        let v1303 : US7 = US7_1
                        let v1304 : US7 = v1283 |> Option.defaultValue v1303 
                        match v1304 with
                        | US7_0(v1308) -> (* Some *)
                            match v1308 with
                            | US8_0(v1309) -> (* Some *)
                                US8_0(v1309)
                            | _ ->
                                US8_1
                        | _ ->
                            US8_1
                let v1317 : string = $"%A{v1315}"
                let v1320 : string = "state_core.use_core_database (6) / effect core_state_heap / ##3 / core_state_heap: " + v1317 + ""
                let v1321 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v1322 : bool = Fable.Core.RustInterop.emitRustExpr v1320 v1321 
                match v1315 with
                | US8_0(v1323) -> (* Some *)
                    let v1324 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
                    let v1325 : string = "Box::pin($0)"
                    let v1326 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1324 v1325 
                    let v1327 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                    let v1328 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1326 v1327 
                    let v1329 : leptos_prelude_ArcRwSignal<bool> = v1328.l0
                    let v1330 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
                    let v1331 : bool = Fable.Core.RustInterop.emitRustExpr v1329 v1330 
                    let v1333 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
                    let v1336 : string = "*/ | { *x = $0(x.clone()) }); //"
                    let v1337 : (bool -> bool) = closure32(v1323)
                    let v1338 : bool = Fable.Core.RustInterop.emitRustExpr v1337 v1336 
                    let v1339 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
                    let v1340 : string = "Box::pin($0)"
                    let v1341 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1339 v1340 
                    let v1342 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                    let v1343 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1341 v1342 
                    let v1344 : leptos_prelude_ArcRwSignal<bool> = v1343.l1
                    let v1345 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
                    let v1346 : bool = Fable.Core.RustInterop.emitRustExpr v1344 v1345 
                    let v1348 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
                    let v1351 : string = "*/ | { *x = $0(x.clone()) }); //"
                    let v1352 : (bool -> bool) = closure33(v1323)
                    let v1353 : bool = Fable.Core.RustInterop.emitRustExpr v1352 v1351 
                    let v1354 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
                    let v1355 : string = "Box::pin($0)"
                    let v1356 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1354 v1355 
                    let v1357 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                    let v1358 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1356 v1357 
                    let v1359 : leptos_prelude_ArcRwSignal<std_string_String> = v1358.l2
                    let v1360 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
                    let v1361 : bool = Fable.Core.RustInterop.emitRustExpr v1359 v1360 
                    let v1363 : TypeEmit<std_string_String> = null |> unbox<TypeEmit<std_string_String>>
                    let v1366 : string = "*/ | { *x = $0(x.clone()) }); //"
                    let v1367 : (std_string_String -> std_string_String) = closure34(v1323)
                    let v1368 : bool = Fable.Core.RustInterop.emitRustExpr v1367 v1366 
                    let v1369 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
                    let v1370 : string = "Box::pin($0)"
                    let v1371 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1369 v1370 
                    let v1372 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                    let v1373 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1371 v1372 
                    let v1374 : leptos_prelude_ArcRwSignal<Heap0> = v1373.l3
                    let v1375 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
                    let v1376 : bool = Fable.Core.RustInterop.emitRustExpr v1374 v1375 
                    let v1378 : TypeEmit<Heap0> = null |> unbox<TypeEmit<Heap0>>
                    let v1381 : string = "*/ | { *x = $0(x.clone()) }); //"
                    let v1382 : (Heap0 -> Heap0) = closure35(v1323)
                    let v1383 : bool = Fable.Core.RustInterop.emitRustExpr v1382 v1381 
                    true
                | _ ->
                    false
            | _ ->
                false
        | _ ->
            false
    // rust.func0_from / is_unit
    let v1387 : string = $"true; /*"
    let v1388 : bool = Fable.Core.RustInterop.emitRustExpr () v1387 
    let v1389 : string = $"*/ }}); //"
    let v1390 : bool = Fable.Core.RustInterop.emitRustExpr () v1389 
    let v1391 : string = $"_func0_from_v712"
    let v1392 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v1391 
    let v1393 : string = "true; leptos::prelude::Effect::new(move |_| { v1392() })"
    let v1394 : bool = Fable.Core.RustInterop.emitRustExpr () v1393 
    let v1395 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1396 : (unit -> std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>) = closure36(v7)
    let v1397 : leptos_prelude_ArcMemo<std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>> = Fable.Core.RustInterop.emitRustExpr v1396 v1395 
    let v1398 : string = $"leptos::prelude::signal($0)"
    let struct (v1399 : leptos_prelude_ReadSignal<bool>, v1400 : leptos_prelude_WriteSignal<bool>) = Fable.Core.RustInterop.emitRustExpr false v1398 
    let v1401 : unit = ()
    let v1402 : string = $"true; let _func1_from_v1401 = Func1::from(move |value| {{ //"
    let v1403 : bool = Fable.Core.RustInterop.emitRustExpr () v1402 
    let v1404 : string = $"value"
    let v1405 : Heap3 = Fable.Core.RustInterop.emitRustExpr () v1404 
    let v1407 : string = $"%A{v1405}"
    let v1410 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v1411 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v127 v1410 
    let v1414 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v1415 : US2 option = v1411 |> Option.map v1414 
    let v1435 : US2 = US2_1
    let v1436 : US2 = v1415 |> Option.defaultValue v1435 
    let v1440 : string = "true; let __future_init = Box::pin(/*"
    let v1441 : bool = Fable.Core.RustInterop.emitRustExpr () v1440 
    let v1442 : string = "*/ async move { /*"
    let v1443 : bool = Fable.Core.RustInterop.emitRustExpr () v1442 
    let v1444 : string = "*/ ()"
    let v1445 : bool = Fable.Core.RustInterop.emitRustExpr () v1444 
    let v1546 : bool =
        match v1436 with
        | US2_1 -> (* None *)
            let v1542 : string = "state_core.use_core_database (13) / set_core_state_heap_action / database=None"
            let v1543 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1544 : bool = Fable.Core.RustInterop.emitRustExpr v1542 v1543 
            false
        | US2_0(v1446) -> (* Some *)
            let v1447 : string = "state_core.use_core_database (12) / set_core_state_heap_action / value: " + string v1407 + ""
            let v1448 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1449 : bool = Fable.Core.RustInterop.emitRustExpr v1447 v1448 
            let v1451 : string = $"%A{v1405}"
            let v1454 : int64 = System.Convert.ToInt64 v1451.Length
            let v1455 : string = "state_core.set_data () / data_len: " + string v1454 + ""
            let v1456 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1457 : bool = Fable.Core.RustInterop.emitRustExpr v1455 v1456 
            let v1458 : string = "true; let __future_init = Box::pin(/*"
            let v1459 : bool = Fable.Core.RustInterop.emitRustExpr () v1458 
            let v1460 : string = "*/ async move { /*"
            let v1461 : bool = Fable.Core.RustInterop.emitRustExpr () v1460 
            let v1462 : string = "*/ ()"
            let v1463 : bool = Fable.Core.RustInterop.emitRustExpr () v1462 
            let v1464 : string = "true; let mut data = Vec::new()"
            let v1465 : bool = Fable.Core.RustInterop.emitRustExpr () v1464 
            let v1466 : string = "true; borsh::BorshSerialize::serialize(&$0, &mut data).unwrap()"
            let v1467 : bool = Fable.Core.RustInterop.emitRustExpr v1405 v1466 
            let v1468 : string = "data"
            let v1469 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr () v1468 
            let v1470 : string = "serde_wasm_bindgen::to_value(&v1469).unwrap()"
            let v1471 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr () v1470 
            let v1472 : string = method43()
            (* run_target_args'
            let v1477 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1478 : string = "&*$0"
            let v1479 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1472 v1478 
            let _run_target_args'_v1477 = v1479 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1480 : string = "&*$0"
            let v1481 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1472 v1480 
            let _run_target_args'_v1477 = v1481 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1482 : string = "&*$0"
            let v1483 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1472 v1482 
            let _run_target_args'_v1477 = v1483 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1485 : Ref<Str> = v1472 |> unbox<Ref<Str>>
            let _run_target_args'_v1477 = v1485 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1489 : Ref<Str> = v1472 |> unbox<Ref<Str>>
            let _run_target_args'_v1477 = v1489 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1493 : Ref<Str> = v1472 |> unbox<Ref<Str>>
            let _run_target_args'_v1477 = v1493 
            #endif
#else
            let v1497 : Ref<Str> = v1472 |> unbox<Ref<Str>>
            let _run_target_args'_v1477 = v1497 
            #endif
            let v1500 : Ref<Str> = _run_target_args'_v1477 
            let v1506 : string = "$0.transaction(&[\"store\"], rexie::TransactionMode::ReadWrite)?"
            let v1507 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v1446 v1506 
            let v1508 : string = "v1507.store(\"store\")?"
            let v1509 : rexie_Store = Fable.Core.RustInterop.emitRustExpr () v1508 
            let v1510 : string = "true; v1509.put(&v1471, Some(&$0.into())).await?"
            let v1511 : bool = Fable.Core.RustInterop.emitRustExpr v1500 v1510 
            let v1512 : string = "true; v1507.done().await?"
            let v1513 : bool = Fable.Core.RustInterop.emitRustExpr () v1512 
            let v1515 : Result<unit, rexie_Error> = Ok () 
            let v1518 : string = v52 + v53 
            let x = v1515 //
            let v1519 : _ = x
            let v1520 : unit = ()
            (* run_target_args'
            let v1521 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1522 : string = $"true; let _fix_closure_v1520 = $0"
            let v1523 : bool = Fable.Core.RustInterop.emitRustExpr v1519 v1522 
            let _run_target_args'_v1521 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1524 : string = $"true; let _fix_closure_v1520 = $0"
            let v1525 : bool = Fable.Core.RustInterop.emitRustExpr v1519 v1524 
            let _run_target_args'_v1521 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1526 : string = $"true; let _fix_closure_v1520 = $0"
            let v1527 : bool = Fable.Core.RustInterop.emitRustExpr v1519 v1526 
            let _run_target_args'_v1521 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v1521 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v1521 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v1521 = false 
            #endif
#else
            let _run_target_args'_v1521 = false 
            #endif
            let v1528 : bool = _run_target_args'_v1521 
            let v1530 : string = $"true; _fix_closure_v1520 " + v1518 + "); " + v52 + " // rust.fix_closure'"
            let v1531 : bool = Fable.Core.RustInterop.emitRustExpr () v1530 
            let v1532 : string = "__future_init"
            let v1533 : _ = Fable.Core.RustInterop.emitRustExpr () v1532 
            let v1534 : string = "v1533"
            let v1535 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v1534 
            let v1536 : string = "v1535.await"
            let v1537 : Result<unit, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v1536 
            (* run_target_args'
            let v1538 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1539 : string = "$0.unwrap()"
            Fable.Core.RustInterop.emitRustExpr v1537 v1539 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1540 : string = "$0.unwrap()"
            Fable.Core.RustInterop.emitRustExpr v1537 v1540 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1541 : string = "$0.unwrap()"
            Fable.Core.RustInterop.emitRustExpr v1537 v1541 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            match v1537 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
            #endif
#if FABLE_COMPILER_PYTHON
            match v1537 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            match v1537 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
            #endif
#else
            match v1537 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
            #endif
            // run_target_args' is_unit
            true
    let v1547 : string = v52 + v53 
    let x = () //
    let v1548 : _ = x
    let v1549 : unit = ()
    (* run_target_args'
    let v1550 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let _run_target_args'_v1550 = false 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let _run_target_args'_v1550 = false 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let _run_target_args'_v1550 = false 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v1550 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v1550 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v1550 = false 
    #endif
#else
    let _run_target_args'_v1550 = false 
    #endif
    let v1551 : bool = _run_target_args'_v1550 
    let v1553 : string = $"true; _fix_closure_v1549 " + v1547 + "); " + v52 + " // rust.fix_closure'"
    let v1554 : bool = Fable.Core.RustInterop.emitRustExpr () v1553 
    let v1555 : string = "__future_init"
    let v1556 : _ = Fable.Core.RustInterop.emitRustExpr () v1555 
    let v1557 : string = "v1556"
    let v1558 : std_pin_Pin<Box<Dyn<std_future_Future<unit>>>> = Fable.Core.RustInterop.emitRustExpr () v1557 
    let func1_from_result = v1558 //
    let v1559 : _ = func1_from_result
    let v1560 : string = $"true; $0 /*"
    let v1561 : bool = Fable.Core.RustInterop.emitRustExpr v1559 v1560 
    let v1562 : string = $"*/ }}); //"
    let v1563 : bool = Fable.Core.RustInterop.emitRustExpr () v1562 
    let v1564 : string = $"_func1_from_v1401"
    let v1565 : Func0<Heap3, std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>> = Fable.Core.RustInterop.emitRustExpr () v1564 
    let v1566 : string = "leptos::prelude::ArcAction::new(move |value: &std::sync::Arc<Heap3>| $0(value.clone()))"
    let v1567 : (Heap3 -> std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>) = closure37(v1565)
    let v1568 : leptos_prelude_ArcAction<Heap3, unit> = Fable.Core.RustInterop.emitRustExpr v1567 v1566 
    let v1569 : unit = ()
    let v1570 : string = $"true; let _func0_from_v1569 = Func0::from(move || {{ //"
    let v1571 : bool = Fable.Core.RustInterop.emitRustExpr () v1570 
    let v1572 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v1573 : bool = Fable.Core.RustInterop.emitRustExpr v1399 v1572 
    let v1574 : string = "state_core.use_core_database (14) / effect new_core_state_heap / ##1 / loaded: " + string v1573 + ""
    let v1575 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1576 : bool = Fable.Core.RustInterop.emitRustExpr v1574 v1575 
    let v1577 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
    let v1578 : string = "Box::pin($0)"
    let v1579 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1577 v1578 
    let v1580 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v1581 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1579 v1580 
    let v1582 : leptos_prelude_ArcRwSignal<bool> = v1581.l0
    let v1583 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v1584 : bool = Fable.Core.RustInterop.emitRustExpr v1582 v1583 
    let v1585 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
    let v1586 : string = "Box::pin($0)"
    let v1587 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1585 v1586 
    let v1588 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v1589 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1587 v1588 
    let v1590 : leptos_prelude_ArcRwSignal<bool> = v1589.l1
    let v1591 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v1592 : bool = Fable.Core.RustInterop.emitRustExpr v1590 v1591 
    let v1593 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
    let v1594 : string = "Box::pin($0)"
    let v1595 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1593 v1594 
    let v1596 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v1597 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1595 v1596 
    let v1598 : leptos_prelude_ArcRwSignal<std_string_String> = v1597.l2
    let v1599 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v1600 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1598 v1599 
    let v1601 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
    let v1602 : string = "Box::pin($0)"
    let v1603 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1601 v1602 
    let v1604 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v1605 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1603 v1604 
    let v1606 : leptos_prelude_ArcRwSignal<Heap0> = v1605.l3
    let v1607 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v1608 : Heap0 = Fable.Core.RustInterop.emitRustExpr v1606 v1607 
    let v1609 : Heap3 = {l0 = v1584; l1 = v1592; l2 = v1600; l3 = v1608} : Heap3
    let v1611 : string = $"%A{v1609}"
    let v1614 : string = "state_core.use_core_database (15) / effect new_core_state_heap / ##2 / new_core_state_heap: " + string v1611 + ""
    let v1615 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1616 : bool = Fable.Core.RustInterop.emitRustExpr v1614 v1615 
    let v1617 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v1618 : std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>> = Fable.Core.RustInterop.emitRustExpr v1397 v1617 
    let v1619 : string = "dark_mode_key"
    (* run_target_args'
    let v1624 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v1625 : string = "&*$0"
    let v1626 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1619 v1625 
    let _run_target_args'_v1624 = v1626 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v1627 : string = "&*$0"
    let v1628 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1619 v1627 
    let _run_target_args'_v1624 = v1628 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v1629 : string = "&*$0"
    let v1630 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1619 v1629 
    let _run_target_args'_v1624 = v1630 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v1632 : Ref<Str> = v1619 |> unbox<Ref<Str>>
    let _run_target_args'_v1624 = v1632 
    #endif
#if FABLE_COMPILER_PYTHON
    let v1636 : Ref<Str> = v1619 |> unbox<Ref<Str>>
    let _run_target_args'_v1624 = v1636 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v1640 : Ref<Str> = v1619 |> unbox<Ref<Str>>
    let _run_target_args'_v1624 = v1640 
    #endif
#else
    let v1644 : Ref<Str> = v1619 |> unbox<Ref<Str>>
    let _run_target_args'_v1624 = v1644 
    #endif
    let v1647 : Ref<Str> = _run_target_args'_v1624 
    (* run_target_args'
    let v1657 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v1658 : string = "String::from($0)"
    let v1659 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1647 v1658 
    let _run_target_args'_v1657 = v1659 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v1660 : string = "String::from($0)"
    let v1661 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1647 v1660 
    let _run_target_args'_v1657 = v1661 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v1662 : string = "String::from($0)"
    let v1663 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1647 v1662 
    let _run_target_args'_v1657 = v1663 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v1665 : std_string_String = v1647 |> unbox<std_string_String>
    let _run_target_args'_v1657 = v1665 
    #endif
#if FABLE_COMPILER_PYTHON
    let v1669 : std_string_String = v1647 |> unbox<std_string_String>
    let _run_target_args'_v1657 = v1669 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v1673 : std_string_String = v1647 |> unbox<std_string_String>
    let _run_target_args'_v1657 = v1673 
    #endif
#else
    let v1677 : std_string_String = v1647 |> unbox<std_string_String>
    let _run_target_args'_v1657 = v1677 
    #endif
    let v1680 : std_string_String = _run_target_args'_v1657 
    let v1686 : std_string_String = method45(v1680)
    let v1687 : string = "std::collections::HashMap::get(&$0, &v1686).map(|x| x).cloned()"
    let v1688 : leptos_prelude_ArcRwSignal<bool> option = Fable.Core.RustInterop.emitRustExpr v1618 v1687 
    let v1691 : (leptos_prelude_ArcRwSignal<bool> -> US16) = method46()
    let v1692 : US16 option = v1688 |> Option.map v1691 
    let v1712 : US16 = US16_1
    let v1713 : US16 = v1692 |> Option.defaultValue v1712 
    let v1723 : US17 =
        match v1713 with
        | US16_1 -> (* None *)
            US17_1
        | US16_0(v1717) -> (* Some *)
            let v1718 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
            let v1719 : bool = Fable.Core.RustInterop.emitRustExpr v1717 v1718 
            US17_0(v1719)
    let v1726 : bool =
        match v1723 with
        | US17_1 -> (* None *)
            false
        | US17_0(v1724) -> (* Some *)
            v1724
    let v1727 : string = "state_core.use_core_database (16) / effect new_core_state_heap / ##3 / dark_mode_loading: " + string v1726 + ""
    let v1728 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1729 : bool = Fable.Core.RustInterop.emitRustExpr v1727 v1728 
    let v1730 : bool = v1726 = false
    let v1835 : bool =
        if v1730 then
            let v1731 : bool = v1573 = false
            if v1731 then
                let v1732 : string = $"true; leptos::prelude::WriteSignal::update(&$0, |x: &mut /*"
                let v1733 : bool = Fable.Core.RustInterop.emitRustExpr v1400 v1732 
                let v1735 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
                let v1738 : string = "*/ | { *x = $0(x.clone()) }); //"
                let v1739 : (bool -> bool) = closure39()
                let v1740 : bool = Fable.Core.RustInterop.emitRustExpr v1739 v1738 
                true
            else
                let v1741 : string = "state_core.use_core_database (18) / effect new_core_state_heap / ##4"
                let v1742 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v1743 : bool = Fable.Core.RustInterop.emitRustExpr v1741 v1742 
                let v1744 : web_sys_Window = method28()
                let v1745 : Result<web_sys_Storage option, wasm_bindgen_JsValue> = method29(v1744)
                let v1746 : (web_sys_Storage option -> US9) = method30()
                let v1747 : (wasm_bindgen_JsValue -> US9) = method31()
                let v1749 : US9 = match v1745 with Ok x -> v1746 x | Error x -> v1747 x
                let v1785 : US10 =
                    match v1749 with
                    | US9_1(v1782) -> (* Error *)
                        US10_1(v1782)
                    | US9_0(v1752) -> (* Ok *)
                        let v1755 : (web_sys_Storage -> US11) = method32()
                        let v1756 : US11 option = v1752 |> Option.map v1755 
                        let v1776 : US11 = US11_1
                        let v1777 : US11 = v1756 |> Option.defaultValue v1776 
                        US10_0(v1777)
                match v1785 with
                | US10_0(v1786) -> (* Ok *)
                    match v1786 with
                    | US11_0(v1787) -> (* Some *)
                        let v1788 : string = "true; leptos::prelude::ArcAction::dispatch(&$0, $1.clone())"
                        let v1789 : bool = Fable.Core.RustInterop.emitRustExpr struct (v1568, v1609) v1788 
                        let v1790 : web_sys_Storage = method47(v1787)
                        let v1791 : string = method48()
                        (* run_target_args'
                        let v1796 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1797 : string = "&*$0"
                        let v1798 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1791 v1797 
                        let _run_target_args'_v1796 = v1798 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1799 : string = "&*$0"
                        let v1800 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1791 v1799 
                        let _run_target_args'_v1796 = v1800 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1801 : string = "&*$0"
                        let v1802 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1791 v1801 
                        let _run_target_args'_v1796 = v1802 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1804 : Ref<Str> = v1791 |> unbox<Ref<Str>>
                        let _run_target_args'_v1796 = v1804 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1808 : Ref<Str> = v1791 |> unbox<Ref<Str>>
                        let _run_target_args'_v1796 = v1808 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1812 : Ref<Str> = v1791 |> unbox<Ref<Str>>
                        let _run_target_args'_v1796 = v1812 
                        #endif
#else
                        let v1816 : Ref<Str> = v1791 |> unbox<Ref<Str>>
                        let _run_target_args'_v1796 = v1816 
                        #endif
                        let v1819 : Ref<Str> = _run_target_args'_v1796 
                        let v1825 : Heap3 = method49(v1609)
                        let v1826 : string = "serde_json::json!(v1825).to_string()"
                        let v1827 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v1826 
                        let v1828 : string = "$0.as_str()"
                        let v1829 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1827 v1828 
                        let v1830 : string = $"true; web_sys::Storage::set(&v1790, $0, v1829).unwrap()"
                        let v1831 : bool = Fable.Core.RustInterop.emitRustExpr v1819 v1830 
                        true
                    | _ ->
                        false
                | _ ->
                    false
        else
            false
    // rust.func0_from / is_unit
    let v1836 : string = $"true; /*"
    let v1837 : bool = Fable.Core.RustInterop.emitRustExpr () v1836 
    let v1838 : string = $"*/ }}); //"
    let v1839 : bool = Fable.Core.RustInterop.emitRustExpr () v1838 
    let v1840 : string = $"_func0_from_v1569"
    let v1841 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v1840 
    let v1842 : string = "true; leptos::prelude::Effect::new(move |_| { v1841() })"
    let v1843 : bool = Fable.Core.RustInterop.emitRustExpr () v1842 
    let v1844 : string = "class=\"flex flex-1\""
    let v1845 : (unit -> bool) = method50(v7)
    let v1846 : string = "class:dark"
    let v1847 : string = "" + v1846 + "={move || v1845()}"
    let v1848 : string = " " + v1844 + v52 + ""
    let v1849 : string = " " + v1847 + v1848 + ""
    let v1850 : string = "content.render ()"
    let v1851 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1852 : bool = Fable.Core.RustInterop.emitRustExpr v1850 v1851 
    let v1853 : string = "leptos_router::hooks::use_location()"
    let v1854 : leptos_router_location_Location = Fable.Core.RustInterop.emitRustExpr () v1853 
    let v1855 : string = "std::sync::Arc::new(leptos_router::hooks::use_navigate())"
    let v1856 : std_sync_Arc<Dyn<ActionFn2<Ref<Str>, leptos_router_NavigateOptions>>> = Fable.Core.RustInterop.emitRustExpr () v1855 
    let v1857 : string = "leptos_router::hooks::use_location()"
    let v1858 : leptos_router_location_Location = Fable.Core.RustInterop.emitRustExpr () v1857 
    let v1859 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1860 : (unit -> string) = closure41(v1858)
    let v1861 : leptos_prelude_ArcMemo<string> = Fable.Core.RustInterop.emitRustExpr v1860 v1859 
    let v1862 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
    let v1863 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v1862 
    let v1864 : string = "$0.unwrap()"
    let v1865 : Heap2 = Fable.Core.RustInterop.emitRustExpr v1863 v1864 
    let v1866 : string = $"leptos::prelude::signal($0)"
    let v1867 : US18 = US18_0
    let struct (v1868 : leptos_prelude_ReadSignal<US18>, v1869 : leptos_prelude_WriteSignal<US18>) = Fable.Core.RustInterop.emitRustExpr v1867 v1866 
    let v1870 : string = $"leptos::prelude::signal($0)"
    let struct (v1871 : leptos_prelude_ReadSignal<bool>, v1872 : leptos_prelude_WriteSignal<bool>) = Fable.Core.RustInterop.emitRustExpr false v1870 
    let v1873 : unit = ()
    let v1874 : string = $"true; let _func0_from_v1873 = Func0::from(move || {{ //"
    let v1875 : bool = Fable.Core.RustInterop.emitRustExpr () v1874 
    let v1876 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v1877 : bool = Fable.Core.RustInterop.emitRustExpr v1871 v1876 
    let v1878 : string = "$0.hash"
    let v1879 : leptos_prelude_Memo<std_string_String> = Fable.Core.RustInterop.emitRustExpr v1854 v1878 
    let v1880 : string = $"leptos::prelude::Memo::get(&$0)"
    let v1881 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1879 v1880 
    let v1882 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v1883 : string = Fable.Core.RustInterop.emitRustExpr v1861 v1882 
    let v1884 : string = $"{v1883}{v1881}"
    let v1885 : string = "content.render () / effect 1 / new_url_hash: " + v1884 + " / loaded: " + string v1877 + ""
    let v1886 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1887 : bool = Fable.Core.RustInterop.emitRustExpr v1885 v1886 
    let v1888 : bool = v1877 = false
    let v2021 : bool =
        if v1888 then
            let v1889 : std_string_String = method51(v1881)
            let v1890 : string = "v1889 == \"\""
            let v1891 : bool = Fable.Core.RustInterop.emitRustExpr () v1890 
            if v1891 then
                let v1892 : leptos_prelude_ArcRwSignal<Heap1> = v1865.l0
                let v1893 : string = "Box::pin($0)"
                let v1894 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1892 v1893 
                let v1895 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                let v1896 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1894 v1895 
                let v1897 : leptos_prelude_ArcRwSignal<std_string_String> = v1896.l2
                let v1898 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
                let v1899 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1897 v1898 
                let v1900 : string = "fable_library_rust::String_::fromString($0)"
                let v1901 : string = Fable.Core.RustInterop.emitRustExpr v1899 v1900 
                let v1902 : string = "content.render () / effect 1 / url_hash: " + v1901 + ""
                let v1903 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v1904 : bool = Fable.Core.RustInterop.emitRustExpr v1902 v1903 
                let v1907 : string = "#"
                let v1908 : bool = v1901.Contains v1907 
                if v1908 then
                    (* run_target_args'
                    let v1915 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1916 : string = "&*$0"
                    let v1917 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1901 v1916 
                    let _run_target_args'_v1915 = v1917 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1918 : string = "&*$0"
                    let v1919 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1901 v1918 
                    let _run_target_args'_v1915 = v1919 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1920 : string = "&*$0"
                    let v1921 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1901 v1920 
                    let _run_target_args'_v1915 = v1921 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1923 : Ref<Str> = v1901 |> unbox<Ref<Str>>
                    let _run_target_args'_v1915 = v1923 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1927 : Ref<Str> = v1901 |> unbox<Ref<Str>>
                    let _run_target_args'_v1915 = v1927 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1931 : Ref<Str> = v1901 |> unbox<Ref<Str>>
                    let _run_target_args'_v1915 = v1931 
                    #endif
#else
                    let v1935 : Ref<Str> = v1901 |> unbox<Ref<Str>>
                    let _run_target_args'_v1915 = v1935 
                    #endif
                    let v1938 : Ref<Str> = _run_target_args'_v1915 
                    let v1944 : string = "$0($1, Default::default())"
                    Fable.Core.RustInterop.emitRustExpr struct (v1856, v1938) v1944 
                    ()
            let v1945 : string = $"true; leptos::prelude::WriteSignal::set(&$0, $1); //"
            let v1946 : bool = Fable.Core.RustInterop.emitRustExpr struct (v1872, true) v1945 
            true
        else
            let v1947 : leptos_prelude_ArcRwSignal<Heap1> = v1865.l0
            let v1948 : string = "Box::pin($0)"
            let v1949 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1947 v1948 
            let v1950 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
            let v1951 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1949 v1950 
            let v1952 : leptos_prelude_ArcRwSignal<std_string_String> = v1951.l2
            (* run_target_args'
            let v1957 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1958 : string = "&*$0"
            let v1959 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1884 v1958 
            let _run_target_args'_v1957 = v1959 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1960 : string = "&*$0"
            let v1961 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1884 v1960 
            let _run_target_args'_v1957 = v1961 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1962 : string = "&*$0"
            let v1963 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1884 v1962 
            let _run_target_args'_v1957 = v1963 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1965 : Ref<Str> = v1884 |> unbox<Ref<Str>>
            let _run_target_args'_v1957 = v1965 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1969 : Ref<Str> = v1884 |> unbox<Ref<Str>>
            let _run_target_args'_v1957 = v1969 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1973 : Ref<Str> = v1884 |> unbox<Ref<Str>>
            let _run_target_args'_v1957 = v1973 
            #endif
#else
            let v1977 : Ref<Str> = v1884 |> unbox<Ref<Str>>
            let _run_target_args'_v1957 = v1977 
            #endif
            let v1980 : Ref<Str> = _run_target_args'_v1957 
            (* run_target_args'
            let v1990 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1991 : string = "String::from($0)"
            let v1992 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1980 v1991 
            let _run_target_args'_v1990 = v1992 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1993 : string = "String::from($0)"
            let v1994 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1980 v1993 
            let _run_target_args'_v1990 = v1994 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1995 : string = "String::from($0)"
            let v1996 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1980 v1995 
            let _run_target_args'_v1990 = v1996 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1998 : std_string_String = v1980 |> unbox<std_string_String>
            let _run_target_args'_v1990 = v1998 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2002 : std_string_String = v1980 |> unbox<std_string_String>
            let _run_target_args'_v1990 = v2002 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2006 : std_string_String = v1980 |> unbox<std_string_String>
            let _run_target_args'_v1990 = v2006 
            #endif
#else
            let v2010 : std_string_String = v1980 |> unbox<std_string_String>
            let _run_target_args'_v1990 = v2010 
            #endif
            let v2013 : std_string_String = _run_target_args'_v1990 
            let v2019 : string = $"true; leptos::prelude::ArcRwSignal::set(&$0, $1); //"
            let v2020 : bool = Fable.Core.RustInterop.emitRustExpr struct (v1952, v2013) v2019 
            false
    // rust.func0_from / is_unit
    let v2022 : string = $"true; /*"
    let v2023 : bool = Fable.Core.RustInterop.emitRustExpr () v2022 
    let v2024 : string = $"*/ }}); //"
    let v2025 : bool = Fable.Core.RustInterop.emitRustExpr () v2024 
    let v2026 : string = $"_func0_from_v1873"
    let v2027 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v2026 
    let v2028 : string = "true; leptos::prelude::Effect::new(move |_| { v2027() })"
    let v2029 : bool = Fable.Core.RustInterop.emitRustExpr () v2028 
    let v2030 : unit = ()
    let v2031 : string = $"true; let _func0_from_v2030 = Func0::from(move || {{ //"
    let v2032 : bool = Fable.Core.RustInterop.emitRustExpr () v2031 
    let v2033 : string = "$0.hash"
    let v2034 : leptos_prelude_Memo<std_string_String> = Fable.Core.RustInterop.emitRustExpr v1854 v2033 
    let v2035 : string = $"leptos::prelude::Memo::get(&$0)"
    let v2036 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2034 v2035 
    let v2037 : std_string_String = method52(v2036)
    let v2038 : string = "v2037.strip_prefix('#')"
    let v2039 : Ref<Str> option = Fable.Core.RustInterop.emitRustExpr () v2038 
    let v2040 : string = "r#\"" + v52 + "\"#"
    let v2041 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v2040 
    let v2042 : string = "v2039.unwrap_or(v2041)"
    let v2043 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v2042 
    let v2044 : string = "leptos_router::location::Url::try_from($0)"
    let v2045 : Result<leptos_router_Url, std_string_String> = Fable.Core.RustInterop.emitRustExpr v2043 v2044 
    let v2046 : (leptos_router_Url -> US20) = method53()
    let v2047 : (std_string_String -> US20) = method54()
    let v2049 : US20 = match v2045 with Ok x -> v2046 x | Error x -> v2047 x
    (* run_target_args'
    let v2056 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v2057 : string = "format!(\"{:#?}\", $0)"
    let v2058 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2049 v2057 
    let v2059 : string = "fable_library_rust::String_::fromString($0)"
    let v2060 : string = Fable.Core.RustInterop.emitRustExpr v2058 v2059 
    let _run_target_args'_v2056 = v2060 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v2061 : string = "format!(\"{:#?}\", $0)"
    let v2062 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2049 v2061 
    let v2063 : string = "fable_library_rust::String_::fromString($0)"
    let v2064 : string = Fable.Core.RustInterop.emitRustExpr v2062 v2063 
    let _run_target_args'_v2056 = v2064 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v2065 : string = "format!(\"{:#?}\", $0)"
    let v2066 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2049 v2065 
    let v2067 : string = "fable_library_rust::String_::fromString($0)"
    let v2068 : string = Fable.Core.RustInterop.emitRustExpr v2066 v2067 
    let _run_target_args'_v2056 = v2068 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v2070 : string = $"%A{v2049}"
    let _run_target_args'_v2056 = v2070 
    #endif
#if FABLE_COMPILER_PYTHON
    let v2074 : string = $"%A{v2049}"
    let _run_target_args'_v2056 = v2074 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v2078 : string = $"%A{v2049}"
    let _run_target_args'_v2056 = v2078 
    #endif
#else
    let v2082 : string = $"%A{v2049}"
    let _run_target_args'_v2056 = v2082 
    #endif
    let v2085 : string = _run_target_args'_v2056 
    let v2091 : string = "content.render () / effect 2 / hash_url: " + v2085 + ""
    let v2092 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v2093 : bool = Fable.Core.RustInterop.emitRustExpr v2091 v2092 
    let v2218 : bool =
        match v2049 with
        | US20_1(v2213) -> (* Error *)
            let v2214 : string = "content.render () / effect 2 / hash_url error: " + string v2213 + ""
            let v2215 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2216 : bool = Fable.Core.RustInterop.emitRustExpr v2214 v2215 
            false
        | US20_0(v2094) -> (* Ok *)
            let v2095 : string = "$0.pathname"
            let v2096 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2094 v2095 
            let v2097 : string = "fable_library_rust::String_::fromString($0)"
            let v2098 : string = Fable.Core.RustInterop.emitRustExpr v2096 v2097 
            let v2099 : string = "dice"
            let v2100 : string = "/" + v2099 + ""
            let v2102 : bool = v2098.StartsWith (v2100, false, null)
            let v2109 : US21 =
                if v2102 then
                    let v2105 : US19 = US19_0
                    let v2106 : US18 = US18_1(v2105)
                    US21_0(v2106)
                else
                    US21_1
            let v2127 : US21 =
                match v2109 with
                | US21_1 -> (* None *)
                    let v2112 : string = "$0.pathname"
                    let v2113 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2094 v2112 
                    let v2114 : string = "fable_library_rust::String_::fromString($0)"
                    let v2115 : string = Fable.Core.RustInterop.emitRustExpr v2113 v2114 
                    let v2116 : string = "lists"
                    let v2117 : string = "/" + v2116 + ""
                    let v2119 : bool = v2115.StartsWith (v2117, false, null)
                    if v2119 then
                        let v2122 : US18 = US18_2
                        US21_0(v2122)
                    else
                        US21_1
                | US21_0(v2110) -> (* Some *)
                    US21_0(v2110)
            let v2145 : US21 =
                match v2127 with
                | US21_1 -> (* None *)
                    let v2130 : string = "$0.pathname"
                    let v2131 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2094 v2130 
                    let v2132 : string = "fable_library_rust::String_::fromString($0)"
                    let v2133 : string = Fable.Core.RustInterop.emitRustExpr v2131 v2132 
                    let v2134 : string = "transactions"
                    let v2135 : string = "/" + v2134 + ""
                    let v2137 : bool = v2133.StartsWith (v2135, false, null)
                    if v2137 then
                        let v2140 : US18 = US18_3
                        US21_0(v2140)
                    else
                        US21_1
                | US21_0(v2128) -> (* Some *)
                    US21_0(v2128)
            let v2163 : US21 =
                match v2145 with
                | US21_1 -> (* None *)
                    let v2148 : string = "$0.pathname"
                    let v2149 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2094 v2148 
                    let v2150 : string = "fable_library_rust::String_::fromString($0)"
                    let v2151 : string = Fable.Core.RustInterop.emitRustExpr v2149 v2150 
                    let v2152 : string = "settings"
                    let v2153 : string = "/" + v2152 + ""
                    let v2155 : bool = v2151.StartsWith (v2153, false, null)
                    if v2155 then
                        let v2158 : US18 = US18_4
                        US21_0(v2158)
                    else
                        US21_1
                | US21_0(v2146) -> (* Some *)
                    US21_0(v2146)
            let v2168 : US18 =
                match v2163 with
                | US21_1 -> (* None *)
                    let v2165 : US19 = US19_0
                    US18_1(v2165)
                | US21_0(v2164) -> (* Some *)
                    v2164
            (* run_target_args'
            let v2173 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2174 : string = "format!(\"{:#?}\", $0)"
            let v2175 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2168 v2174 
            let v2176 : string = "fable_library_rust::String_::fromString($0)"
            let v2177 : string = Fable.Core.RustInterop.emitRustExpr v2175 v2176 
            let _run_target_args'_v2173 = v2177 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2178 : string = "format!(\"{:#?}\", $0)"
            let v2179 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2168 v2178 
            let v2180 : string = "fable_library_rust::String_::fromString($0)"
            let v2181 : string = Fable.Core.RustInterop.emitRustExpr v2179 v2180 
            let _run_target_args'_v2173 = v2181 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2182 : string = "format!(\"{:#?}\", $0)"
            let v2183 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2168 v2182 
            let v2184 : string = "fable_library_rust::String_::fromString($0)"
            let v2185 : string = Fable.Core.RustInterop.emitRustExpr v2183 v2184 
            let _run_target_args'_v2173 = v2185 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2187 : string = $"%A{v2168}"
            let _run_target_args'_v2173 = v2187 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2191 : string = $"%A{v2168}"
            let _run_target_args'_v2173 = v2191 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2195 : string = $"%A{v2168}"
            let _run_target_args'_v2173 = v2195 
            #endif
#else
            let v2199 : string = $"%A{v2168}"
            let _run_target_args'_v2173 = v2199 
            #endif
            let v2202 : string = _run_target_args'_v2173 
            let v2208 : string = "content.render () / effect 2 / new_tab: " + v2202 + ""
            let v2209 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2210 : bool = Fable.Core.RustInterop.emitRustExpr v2208 v2209 
            let v2211 : string = $"true; leptos::prelude::WriteSignal::set(&$0, $1); //"
            let v2212 : bool = Fable.Core.RustInterop.emitRustExpr struct (v1869, v2168) v2211 
            true
    // rust.func0_from / is_unit
    let v2219 : string = $"true; /*"
    let v2220 : bool = Fable.Core.RustInterop.emitRustExpr () v2219 
    let v2221 : string = $"*/ }}); //"
    let v2222 : bool = Fable.Core.RustInterop.emitRustExpr () v2221 
    let v2223 : string = $"_func0_from_v2030"
    let v2224 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v2223 
    let v2225 : string = "true; leptos::prelude::Effect::new(move |_| { v2224() })"
    let v2226 : bool = Fable.Core.RustInterop.emitRustExpr () v2225 
    let v2227 : string = "class=\"flex flex-1 max-[100px]:[overflow-x:auto]\""
    let v2228 : string = " " + v2227 + v52 + ""
    let v2229 : string = "class=\"flex flex-1 flex-col [width:100vw] [max-width:100vw] max-[100px]:[min-width:800px] [height:100vh] [max-height:100dvh] [max-height:-webkit-fill-available] max-[60px]:[min-height:600px] bg-gray-50 text-gray-700 text-sm\""
    let v2230 : string = " " + v2229 + v52 + ""
    let v2231 : string = "class=\"flex flex-1 flex-col [overflow:hidden]\""
    let v2232 : string = " " + v2231 + v52 + ""
    let v2233 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2234 : US18 = Fable.Core.RustInterop.emitRustExpr v1868 v2233 
    let v5577 : US22 =
        match v2234 with
        | US18_1(v2235) -> (* Dice *)
            let v2236 : string = "dice_view.render (1)"
            let v2237 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2238 : bool = Fable.Core.RustInterop.emitRustExpr v2236 v2237 
            let v2239 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
            let v2240 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v2239 
            let v2241 : string = "$0.unwrap()"
            let v2242 : Heap2 = Fable.Core.RustInterop.emitRustExpr v2240 v2241 
            let v2243 : string = "use_transactions.render (1)"
            let v2244 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2245 : bool = Fable.Core.RustInterop.emitRustExpr v2243 v2244 
            let v2246 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2247 : (unit -> Vec<string>) = closure44(v2242)
            let v2248 : leptos_prelude_ArcMemo<Vec<string>> = Fable.Core.RustInterop.emitRustExpr v2247 v2246 
            let v2249 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2250 : (unit -> (struct (string * US23 * string * bool * bool) [])) = closure46(v2248)
            let v2251 : leptos_prelude_ArcMemo<(struct (string * US23 * string * bool * bool) [])> = Fable.Core.RustInterop.emitRustExpr v2250 v2249 
            let v2252 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2253 : (unit -> Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>) = closure48(v2242, v2248)
            let v2254 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>> = Fable.Core.RustInterop.emitRustExpr v2253 v2252 
            let v2255 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2256 : (unit -> Vec<struct (string * US23 * string * bool * bool)>) = closure51(v2254)
            let v2257 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr v2256 v2255 
            let v2258 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2259 : (unit -> (string [])) = closure55(v2254)
            let v2260 : leptos_prelude_ArcMemo<(string [])> = Fable.Core.RustInterop.emitRustExpr v2259 v2258 
            let v2261 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) = closure60()
            let v2262 : leptos_prelude_ArcMemo<Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>> = method78(v2257, v2261)
            let v2264 : string = $"%A{v2262}"
            let v2267 : string = "use_transactions.render (7) / root func0 / result: " + string v2264 + ""
            let v2268 : int64 = 200L
            let v2269 : string = method8(v2268, v2267)
            let v2270 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2271 : bool = Fable.Core.RustInterop.emitRustExpr v2269 v2270 
            let v2272 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2273 : (unit -> Result<(struct (string * unativeint * Heap5) []) option, std_string_String>) = closure90(v2260, v2262)
            let v2274 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v2273 v2272 
            let v2275 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2276 : (unit -> Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String>) = closure107(v2274)
            let v2277 : leptos_prelude_ArcMemo<Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v2276 v2275 
            let v2278 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2279 : (unit -> Vec<struct (string * US23 * string * bool * bool)>) = closure115(v2277)
            let v2280 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr v2279 v2278 
            let v2281 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option)) = closure119()
            let v2282 : leptos_prelude_ArcMemo<Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>> = method159(v2280, v2281)
            let v2284 : string = $"%A{v2282}"
            let v2287 : string = "use_transactions.render (12) / rpc_response func0 / result: " + string v2284 + ""
            let v2288 : int64 = 200L
            let v2289 : string = method8(v2288, v2287)
            let v2290 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2291 : bool = Fable.Core.RustInterop.emitRustExpr v2289 v2290 
            let v2292 : unit = ()
            let v2293 : string = $"true; let _func1_from_v2292 = Func1::from(move |value| {{ //"
            let v2294 : bool = Fable.Core.RustInterop.emitRustExpr () v2293 
            let v2295 : string = $"value"
            let v2296 : Heap6 = Fable.Core.RustInterop.emitRustExpr () v2295 
            let v2298 : string = $"%A{v2296}"
            let v2301 : string = "dice_view.render (2) / set_max_action / value: " + string v2298 + ""
            let v2302 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2303 : bool = Fable.Core.RustInterop.emitRustExpr v2301 v2302 
            let v2304 : string = "true; let __future_init = Box::pin(/*"
            let v2305 : bool = Fable.Core.RustInterop.emitRustExpr () v2304 
            let v2306 : string = "*/ async move { /*"
            let v2307 : bool = Fable.Core.RustInterop.emitRustExpr () v2306 
            let v2308 : string = "*/ ()"
            let v2309 : bool = Fable.Core.RustInterop.emitRustExpr () v2308 
            let v2310 : string = "2.0"
            (* run_target_args'
            let v2315 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2316 : string = "&*$0"
            let v2317 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2310 v2316 
            let _run_target_args'_v2315 = v2317 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2318 : string = "&*$0"
            let v2319 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2310 v2318 
            let _run_target_args'_v2315 = v2319 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2320 : string = "&*$0"
            let v2321 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2310 v2320 
            let _run_target_args'_v2315 = v2321 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2323 : Ref<Str> = v2310 |> unbox<Ref<Str>>
            let _run_target_args'_v2315 = v2323 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2327 : Ref<Str> = v2310 |> unbox<Ref<Str>>
            let _run_target_args'_v2315 = v2327 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2331 : Ref<Str> = v2310 |> unbox<Ref<Str>>
            let _run_target_args'_v2315 = v2331 
            #endif
#else
            let v2335 : Ref<Str> = v2310 |> unbox<Ref<Str>>
            let _run_target_args'_v2315 = v2335 
            #endif
            let v2338 : Ref<Str> = _run_target_args'_v2315 
            (* run_target_args'
            let v2348 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2349 : string = "String::from($0)"
            let v2350 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2338 v2349 
            let _run_target_args'_v2348 = v2350 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2351 : string = "String::from($0)"
            let v2352 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2338 v2351 
            let _run_target_args'_v2348 = v2352 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2353 : string = "String::from($0)"
            let v2354 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2338 v2353 
            let _run_target_args'_v2348 = v2354 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2356 : std_string_String = v2338 |> unbox<std_string_String>
            let _run_target_args'_v2348 = v2356 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2360 : std_string_String = v2338 |> unbox<std_string_String>
            let _run_target_args'_v2348 = v2360 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2364 : std_string_String = v2338 |> unbox<std_string_String>
            let _run_target_args'_v2348 = v2364 
            #endif
#else
            let v2368 : std_string_String = v2338 |> unbox<std_string_String>
            let _run_target_args'_v2348 = v2368 
            #endif
            let v2371 : std_string_String = _run_target_args'_v2348 
            let v2377 : string = "dontcare"
            (* run_target_args'
            let v2382 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2383 : string = "&*$0"
            let v2384 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2377 v2383 
            let _run_target_args'_v2382 = v2384 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2385 : string = "&*$0"
            let v2386 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2377 v2385 
            let _run_target_args'_v2382 = v2386 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2387 : string = "&*$0"
            let v2388 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2377 v2387 
            let _run_target_args'_v2382 = v2388 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2390 : Ref<Str> = v2377 |> unbox<Ref<Str>>
            let _run_target_args'_v2382 = v2390 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2394 : Ref<Str> = v2377 |> unbox<Ref<Str>>
            let _run_target_args'_v2382 = v2394 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2398 : Ref<Str> = v2377 |> unbox<Ref<Str>>
            let _run_target_args'_v2382 = v2398 
            #endif
#else
            let v2402 : Ref<Str> = v2377 |> unbox<Ref<Str>>
            let _run_target_args'_v2382 = v2402 
            #endif
            let v2405 : Ref<Str> = _run_target_args'_v2382 
            (* run_target_args'
            let v2415 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2416 : string = "String::from($0)"
            let v2417 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2405 v2416 
            let _run_target_args'_v2415 = v2417 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2418 : string = "String::from($0)"
            let v2419 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2405 v2418 
            let _run_target_args'_v2415 = v2419 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2420 : string = "String::from($0)"
            let v2421 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2405 v2420 
            let _run_target_args'_v2415 = v2421 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2423 : std_string_String = v2405 |> unbox<std_string_String>
            let _run_target_args'_v2415 = v2423 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2427 : std_string_String = v2405 |> unbox<std_string_String>
            let _run_target_args'_v2415 = v2427 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2431 : std_string_String = v2405 |> unbox<std_string_String>
            let _run_target_args'_v2415 = v2431 
            #endif
#else
            let v2435 : std_string_String = v2405 |> unbox<std_string_String>
            let _run_target_args'_v2415 = v2435 
            #endif
            let v2438 : std_string_String = _run_target_args'_v2415 
            let v2444 : string = "EXPERIMENTAL_tx_status"
            (* run_target_args'
            let v2449 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2450 : string = "&*$0"
            let v2451 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2444 v2450 
            let _run_target_args'_v2449 = v2451 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2452 : string = "&*$0"
            let v2453 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2444 v2452 
            let _run_target_args'_v2449 = v2453 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2454 : string = "&*$0"
            let v2455 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2444 v2454 
            let _run_target_args'_v2449 = v2455 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2457 : Ref<Str> = v2444 |> unbox<Ref<Str>>
            let _run_target_args'_v2449 = v2457 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2461 : Ref<Str> = v2444 |> unbox<Ref<Str>>
            let _run_target_args'_v2449 = v2461 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2465 : Ref<Str> = v2444 |> unbox<Ref<Str>>
            let _run_target_args'_v2449 = v2465 
            #endif
#else
            let v2469 : Ref<Str> = v2444 |> unbox<Ref<Str>>
            let _run_target_args'_v2449 = v2469 
            #endif
            let v2472 : Ref<Str> = _run_target_args'_v2449 
            (* run_target_args'
            let v2482 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2483 : string = "String::from($0)"
            let v2484 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2472 v2483 
            let _run_target_args'_v2482 = v2484 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2485 : string = "String::from($0)"
            let v2486 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2472 v2485 
            let _run_target_args'_v2482 = v2486 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2487 : string = "String::from($0)"
            let v2488 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2472 v2487 
            let _run_target_args'_v2482 = v2488 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2490 : std_string_String = v2472 |> unbox<std_string_String>
            let _run_target_args'_v2482 = v2490 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2494 : std_string_String = v2472 |> unbox<std_string_String>
            let _run_target_args'_v2482 = v2494 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2498 : std_string_String = v2472 |> unbox<std_string_String>
            let _run_target_args'_v2482 = v2498 
            #endif
#else
            let v2502 : std_string_String = v2472 |> unbox<std_string_String>
            let _run_target_args'_v2482 = v2502 
            #endif
            let v2505 : std_string_String = _run_target_args'_v2482 
            let v2511 : string = "9JgptZpFQGtUvusnoF9ysVqHXD8fXCri8mFxPTMnt3kS"
            (* run_target_args'
            let v2516 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2517 : string = "&*$0"
            let v2518 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2511 v2517 
            let _run_target_args'_v2516 = v2518 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2519 : string = "&*$0"
            let v2520 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2511 v2519 
            let _run_target_args'_v2516 = v2520 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2521 : string = "&*$0"
            let v2522 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2511 v2521 
            let _run_target_args'_v2516 = v2522 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2524 : Ref<Str> = v2511 |> unbox<Ref<Str>>
            let _run_target_args'_v2516 = v2524 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2528 : Ref<Str> = v2511 |> unbox<Ref<Str>>
            let _run_target_args'_v2516 = v2528 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2532 : Ref<Str> = v2511 |> unbox<Ref<Str>>
            let _run_target_args'_v2516 = v2532 
            #endif
#else
            let v2536 : Ref<Str> = v2511 |> unbox<Ref<Str>>
            let _run_target_args'_v2516 = v2536 
            #endif
            let v2539 : Ref<Str> = _run_target_args'_v2516 
            (* run_target_args'
            let v2549 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2550 : string = "String::from($0)"
            let v2551 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2539 v2550 
            let _run_target_args'_v2549 = v2551 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2552 : string = "String::from($0)"
            let v2553 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2539 v2552 
            let _run_target_args'_v2549 = v2553 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2554 : string = "String::from($0)"
            let v2555 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2539 v2554 
            let _run_target_args'_v2549 = v2555 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2557 : std_string_String = v2539 |> unbox<std_string_String>
            let _run_target_args'_v2549 = v2557 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2561 : std_string_String = v2539 |> unbox<std_string_String>
            let _run_target_args'_v2549 = v2561 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2565 : std_string_String = v2539 |> unbox<std_string_String>
            let _run_target_args'_v2549 = v2565 
            #endif
#else
            let v2569 : std_string_String = v2539 |> unbox<std_string_String>
            let _run_target_args'_v2549 = v2569 
            #endif
            let v2572 : std_string_String = _run_target_args'_v2549 
            let v2578 : string = "bowen"
            (* run_target_args'
            let v2583 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2584 : string = "&*$0"
            let v2585 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2578 v2584 
            let _run_target_args'_v2583 = v2585 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2586 : string = "&*$0"
            let v2587 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2578 v2586 
            let _run_target_args'_v2583 = v2587 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2588 : string = "&*$0"
            let v2589 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2578 v2588 
            let _run_target_args'_v2583 = v2589 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2591 : Ref<Str> = v2578 |> unbox<Ref<Str>>
            let _run_target_args'_v2583 = v2591 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2595 : Ref<Str> = v2578 |> unbox<Ref<Str>>
            let _run_target_args'_v2583 = v2595 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2599 : Ref<Str> = v2578 |> unbox<Ref<Str>>
            let _run_target_args'_v2583 = v2599 
            #endif
#else
            let v2603 : Ref<Str> = v2578 |> unbox<Ref<Str>>
            let _run_target_args'_v2583 = v2603 
            #endif
            let v2606 : Ref<Str> = _run_target_args'_v2583 
            (* run_target_args'
            let v2616 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2617 : string = "String::from($0)"
            let v2618 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2606 v2617 
            let _run_target_args'_v2616 = v2618 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2619 : string = "String::from($0)"
            let v2620 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2606 v2619 
            let _run_target_args'_v2616 = v2620 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2621 : string = "String::from($0)"
            let v2622 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2606 v2621 
            let _run_target_args'_v2616 = v2622 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2624 : std_string_String = v2606 |> unbox<std_string_String>
            let _run_target_args'_v2616 = v2624 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2628 : std_string_String = v2606 |> unbox<std_string_String>
            let _run_target_args'_v2616 = v2628 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2632 : std_string_String = v2606 |> unbox<std_string_String>
            let _run_target_args'_v2616 = v2632 
            #endif
#else
            let v2636 : std_string_String = v2606 |> unbox<std_string_String>
            let _run_target_args'_v2616 = v2636 
            #endif
            let v2639 : std_string_String = _run_target_args'_v2616 
            let v2645 : (std_string_String []) = [|v2572; v2639|]
            let v2646 : string = "$0.to_vec()"
            let v2647 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v2645 v2646 
            let v2648 : string = "crate::model::near::rpc::RpcInput { jsonrpc: $0, id: $1, method: $2, params: v2647 }"
            let v2649 : crate_model_near_rpc_RpcInput = Fable.Core.RustInterop.emitRustExpr struct (v2371, v2438, v2505) v2648 
            let v2650 : string = method167()
            (* run_target_args'
            let v2655 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2656 : string = "&*$0"
            let v2657 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2650 v2656 
            let _run_target_args'_v2655 = v2657 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2658 : string = "&*$0"
            let v2659 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2650 v2658 
            let _run_target_args'_v2655 = v2659 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2660 : string = "&*$0"
            let v2661 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2650 v2660 
            let _run_target_args'_v2655 = v2661 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2663 : Ref<Str> = v2650 |> unbox<Ref<Str>>
            let _run_target_args'_v2655 = v2663 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2667 : Ref<Str> = v2650 |> unbox<Ref<Str>>
            let _run_target_args'_v2655 = v2667 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2671 : Ref<Str> = v2650 |> unbox<Ref<Str>>
            let _run_target_args'_v2655 = v2671 
            #endif
#else
            let v2675 : Ref<Str> = v2650 |> unbox<Ref<Str>>
            let _run_target_args'_v2655 = v2675 
            #endif
            let v2678 : Ref<Str> = _run_target_args'_v2655 
            (* run_target_args'
            let v2688 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2689 : string = "String::from($0)"
            let v2690 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2678 v2689 
            let _run_target_args'_v2688 = v2690 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2691 : string = "String::from($0)"
            let v2692 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2678 v2691 
            let _run_target_args'_v2688 = v2692 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2693 : string = "String::from($0)"
            let v2694 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2678 v2693 
            let _run_target_args'_v2688 = v2694 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2696 : std_string_String = v2678 |> unbox<std_string_String>
            let _run_target_args'_v2688 = v2696 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2700 : std_string_String = v2678 |> unbox<std_string_String>
            let _run_target_args'_v2688 = v2700 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2704 : std_string_String = v2678 |> unbox<std_string_String>
            let _run_target_args'_v2688 = v2704 
            #endif
#else
            let v2708 : std_string_String = v2678 |> unbox<std_string_String>
            let _run_target_args'_v2688 = v2708 
            #endif
            let v2711 : std_string_String = _run_target_args'_v2688 
            let v2717 : std_string_String = method92(v2711)
            let v2718 : string = "reqwest_wasm::Client::builder().build().map_err(|err| err.to_string())?.post(v2717)"
            let v2719 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr () v2718 
            let v2720 : string = "reqwest_wasm::RequestBuilder::json(v2719, &v2649)"
            let v2721 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr () v2720 
            let v2722 : reqwest_RequestBuilder = method94(v2721)
            let v2723 : string = "Box::pin(reqwest_wasm::RequestBuilder::send(v2722))"
            let v2724 : std_pin_Pin<Box<Dyn<std_future_Future<Result<reqwest_Response, reqwest_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v2723 
            let v2725 : string = "v2724.await"
            let v2726 : Result<reqwest_Response, reqwest_Error> = Fable.Core.RustInterop.emitRustExpr () v2725 
            let v2727 : (reqwest_Error -> std_string_String) = method95()
            (* run_target_args'
            let v2729 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2730 : string = "$0.map_err(|x| $1(x))"
            let v2731 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2726, v2727) v2730 
            let _run_target_args'_v2729 = v2731 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2732 : string = "$0.map_err(|x| $1(x))"
            let v2733 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2726, v2727) v2732 
            let _run_target_args'_v2729 = v2733 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2734 : string = "$0.map_err(|x| $1(x))"
            let v2735 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2726, v2727) v2734 
            let _run_target_args'_v2729 = v2735 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2736 : Result<reqwest_Response, std_string_String> = match v2726 with Ok x -> Ok x | Error x -> Error (v2727 x)
            let _run_target_args'_v2729 = v2736 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2737 : Result<reqwest_Response, std_string_String> = match v2726 with Ok x -> Ok x | Error x -> Error (v2727 x)
            let _run_target_args'_v2729 = v2737 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2738 : Result<reqwest_Response, std_string_String> = match v2726 with Ok x -> Ok x | Error x -> Error (v2727 x)
            let _run_target_args'_v2729 = v2738 
            #endif
#else
            let v2739 : Result<reqwest_Response, std_string_String> = match v2726 with Ok x -> Ok x | Error x -> Error (v2727 x)
            let _run_target_args'_v2729 = v2739 
            #endif
            let v2740 : Result<reqwest_Response, std_string_String> = _run_target_args'_v2729 
            let v2743 : string = "$0?"
            let v2744 : reqwest_Response = Fable.Core.RustInterop.emitRustExpr v2740 v2743 
            let v2745 : string = "Box::pin(reqwest_wasm::Response::text(v2744))"
            let v2746 : std_pin_Pin<Box<Dyn<std_future_Future<Result<std_string_String, reqwest_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v2745 
            let v2747 : string = "v2746.await"
            let v2748 : Result<std_string_String, reqwest_Error> = Fable.Core.RustInterop.emitRustExpr () v2747 
            let v2749 : (reqwest_Error -> std_string_String) = method95()
            (* run_target_args'
            let v2751 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2752 : string = "$0.map_err(|x| $1(x))"
            let v2753 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2748, v2749) v2752 
            let _run_target_args'_v2751 = v2753 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2754 : string = "$0.map_err(|x| $1(x))"
            let v2755 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2748, v2749) v2754 
            let _run_target_args'_v2751 = v2755 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2756 : string = "$0.map_err(|x| $1(x))"
            let v2757 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2748, v2749) v2756 
            let _run_target_args'_v2751 = v2757 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2758 : Result<std_string_String, std_string_String> = match v2748 with Ok x -> Ok x | Error x -> Error (v2749 x)
            let _run_target_args'_v2751 = v2758 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2759 : Result<std_string_String, std_string_String> = match v2748 with Ok x -> Ok x | Error x -> Error (v2749 x)
            let _run_target_args'_v2751 = v2759 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2760 : Result<std_string_String, std_string_String> = match v2748 with Ok x -> Ok x | Error x -> Error (v2749 x)
            let _run_target_args'_v2751 = v2760 
            #endif
#else
            let v2761 : Result<std_string_String, std_string_String> = match v2748 with Ok x -> Ok x | Error x -> Error (v2749 x)
            let _run_target_args'_v2751 = v2761 
            #endif
            let v2762 : Result<std_string_String, std_string_String> = _run_target_args'_v2751 
            let v2765 : string = "$0?"
            let v2766 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2762 v2765 
            let v2769 : US14 = US14_0(v2766)
            let v2770 : Result<US14, std_string_String> = Ok v2769 
            let v2775 : string = $"%A{v2770}"
            let v2778 : string = "dice_view.render (x) / roll_action new_arc_action / result1 / result: " + string v2775 + ""
            let v2779 : int64 = 200L
            let v2780 : string = method8(v2779, v2778)
            let v2781 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2782 : bool = Fable.Core.RustInterop.emitRustExpr v2780 v2781 
            let v2783 : (US14 -> US57) = method168()
            let v2784 : (std_string_String -> US57) = method169()
            let v2786 : US57 = match v2770 with Ok x -> v2783 x | Error x -> v2784 x
            let v3141 : US58 =
                match v2786 with
                | US57_0(v2789) -> (* Ok *)
                    match v2789 with
                    | US14_0(v2790) -> (* Some *)
                        let v2791 : string = "fable_library_rust::String_::fromString($0)"
                        let v2792 : string = Fable.Core.RustInterop.emitRustExpr v2790 v2791 
                        let v2793 : string = method41(v2792)
                        (* run_target_args'
                        let v2798 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2799 : string = "&*$0"
                        let v2800 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2793 v2799 
                        let _run_target_args'_v2798 = v2800 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2801 : string = "&*$0"
                        let v2802 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2793 v2801 
                        let _run_target_args'_v2798 = v2802 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2803 : string = "&*$0"
                        let v2804 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2793 v2803 
                        let _run_target_args'_v2798 = v2804 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2806 : Ref<Str> = v2793 |> unbox<Ref<Str>>
                        let _run_target_args'_v2798 = v2806 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2810 : Ref<Str> = v2793 |> unbox<Ref<Str>>
                        let _run_target_args'_v2798 = v2810 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2814 : Ref<Str> = v2793 |> unbox<Ref<Str>>
                        let _run_target_args'_v2798 = v2814 
                        #endif
#else
                        let v2818 : Ref<Str> = v2793 |> unbox<Ref<Str>>
                        let _run_target_args'_v2798 = v2818 
                        #endif
                        let v2821 : Ref<Str> = _run_target_args'_v2798 
                        let v2827 : string = "serde_json::from_str(&$0)"
                        let v2828 : Result<crate_model_near_rpc_RpcResponse, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v2821 v2827 
                        let v2829 : (serde_json_Error -> std_string_String) = method42()
                        (* run_target_args'
                        let v2831 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2832 : string = "$0.map_err(|x| $1(x))"
                        let v2833 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2828, v2829) v2832 
                        let _run_target_args'_v2831 = v2833 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2834 : string = "$0.map_err(|x| $1(x))"
                        let v2835 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2828, v2829) v2834 
                        let _run_target_args'_v2831 = v2835 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2836 : string = "$0.map_err(|x| $1(x))"
                        let v2837 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2828, v2829) v2836 
                        let _run_target_args'_v2831 = v2837 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2838 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v2828 with Ok x -> Ok x | Error x -> Error (v2829 x)
                        let _run_target_args'_v2831 = v2838 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2839 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v2828 with Ok x -> Ok x | Error x -> Error (v2829 x)
                        let _run_target_args'_v2831 = v2839 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2840 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v2828 with Ok x -> Ok x | Error x -> Error (v2829 x)
                        let _run_target_args'_v2831 = v2840 
                        #endif
#else
                        let v2841 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v2828 with Ok x -> Ok x | Error x -> Error (v2829 x)
                        let _run_target_args'_v2831 = v2841 
                        #endif
                        let v2842 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = _run_target_args'_v2831 
                        let v2845 : (crate_model_near_rpc_RpcResponse -> US60) = method170()
                        let v2846 : (std_string_String -> US60) = method171()
                        let v2848 : US60 = match v2842 with Ok x -> v2845 x | Error x -> v2846 x
                        let v3125 : US61 =
                            match v2848 with
                            | US60_1(v3122) -> (* Error *)
                                US61_1(v3122)
                            | US60_0(v2851) -> (* Ok *)
                                let v2852 : string = "$0.jsonrpc"
                                let v2853 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2851 v2852 
                                let v2854 : string = "$0.result"
                                let v2855 : crate_model_near_rpc_TransactionStatus option = Fable.Core.RustInterop.emitRustExpr v2851 v2854 
                                let v2858 : (crate_model_near_rpc_TransactionStatus -> struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) []))) = method150()
                                let v2859 : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option = v2855 |> Option.map v2858 
                                let v3059 : string = "$0.error"
                                let v3060 : crate_model_near_rpc_RpcError option = Fable.Core.RustInterop.emitRustExpr v2851 v3059 
                                let v3063 : (crate_model_near_rpc_RpcError -> struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String)) = method157()
                                let v3064 : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option = v3060 |> Option.map v3063 
                                let v3119 : string = "$0.id"
                                let v3120 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v2851 v3119 
                                US61_0(v2853, v2859, v3064, v3120)
                        match v3125 with
                        | US61_1(v3132) -> (* Error *)
                            US58_1(v3132)
                        | US61_0(v3126, v3127, v3128, v3129) -> (* Ok *)
                            let v3130 : US59 = US59_0(v3126, v3127, v3128, v3129)
                            US58_0(v3130)
                    | _ ->
                        let v3136 : US59 = US59_1
                        US58_0(v3136)
                | _ ->
                    let v3139 : US59 = US59_1
                    US58_0(v3139)
            let v3153 : Result<US59, std_string_String> =
                match v3141 with
                | US58_1(v3147) -> (* Error *)
                    let v3149 : Result<US59, std_string_String> = Error v3147 
                    v3149
                | US58_0(v3142) -> (* Ok *)
                    let v3144 : Result<US59, std_string_String> = Ok v3142 
                    v3144
            let v3155 : string = $"%A{v3153}"
            let v3158 : string = "dice_view.render (x) / roll_action new_arc_action / result2 / result: " + string v3155 + ""
            let v3159 : int64 = 200L
            let v3160 : string = method8(v3159, v3158)
            let v3161 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3162 : bool = Fable.Core.RustInterop.emitRustExpr v3160 v3161 
            let v3163 : string = v52 + v53 
            let x = v3153 //
            let v3164 : _ = x
            let v3165 : unit = ()
            (* run_target_args'
            let v3166 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3167 : string = $"true; let _fix_closure_v3165 = $0"
            let v3168 : bool = Fable.Core.RustInterop.emitRustExpr v3164 v3167 
            let _run_target_args'_v3166 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3169 : string = $"true; let _fix_closure_v3165 = $0"
            let v3170 : bool = Fable.Core.RustInterop.emitRustExpr v3164 v3169 
            let _run_target_args'_v3166 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3171 : string = $"true; let _fix_closure_v3165 = $0"
            let v3172 : bool = Fable.Core.RustInterop.emitRustExpr v3164 v3171 
            let _run_target_args'_v3166 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v3166 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v3166 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v3166 = false 
            #endif
#else
            let _run_target_args'_v3166 = false 
            #endif
            let v3173 : bool = _run_target_args'_v3166 
            let v3175 : string = $"true; _fix_closure_v3165 " + v3163 + "); " + v52 + " // rust.fix_closure'"
            let v3176 : bool = Fable.Core.RustInterop.emitRustExpr () v3175 
            let v3177 : string = "__future_init"
            let v3178 : _ = Fable.Core.RustInterop.emitRustExpr () v3177 
            let v3179 : string = "v3178"
            let v3180 : std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v3179 
            let func1_from_result = v3180 //
            let v3181 : _ = func1_from_result
            let v3182 : string = $"true; $0 /*"
            let v3183 : bool = Fable.Core.RustInterop.emitRustExpr v3181 v3182 
            let v3184 : string = $"*/ }}); //"
            let v3185 : bool = Fable.Core.RustInterop.emitRustExpr () v3184 
            let v3186 : string = $"_func1_from_v2292"
            let v3187 : Func0<Heap6, std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v3186 
            let v3188 : string = "leptos::prelude::ArcAction::new(move |value: &std::sync::Arc<Heap6>| $0(value.clone()))"
            let v3189 : (Heap6 -> std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>) = closure141(v3187)
            let v3190 : leptos_prelude_ArcAction<Heap6, Result<US59, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v3189 v3188 
            let v3191 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3192 : (unit -> Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>) = closure142(v3190)
            let v3193 : leptos_prelude_ArcMemo<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v3192 v3191 
            let v3194 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3195 : (unit -> string option) = closure147(v3193)
            let v3196 : leptos_prelude_ArcMemo<string option> = Fable.Core.RustInterop.emitRustExpr v3195 v3194 
            let v3197 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3198 : (unit -> US31) = closure152(v2242)
            let v3199 : leptos_prelude_ArcMemo<US31> = Fable.Core.RustInterop.emitRustExpr v3198 v3197 
            let v3200 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3201 : (unit -> Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))>) = closure153(v2242)
            let v3202 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))>> = Fable.Core.RustInterop.emitRustExpr v3201 v3200 
            let v3203 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3204 : (unit -> Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>) = closure158(v3202)
            let v3205 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> = Fable.Core.RustInterop.emitRustExpr v3204 v3203 
            let v3206 : string = "vec![" + v52 + "]"
            let v3207 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3206 
            let v3208 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3209 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3207 v3208 
            let v3210 : string = "class=\"flex flex-col [position:relative]\""
            let v3211 : string = " " + v3210 + v52 + ""
            let v3212 : string = "$0"
            let v3213 : (unit -> string) = closure161()
            let v3214 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3213 v3212 
            let v3215 : string = "$0"
            let v3216 : (unit -> bool) = closure162()
            let v3217 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v3216 v3215 
            let v3218 : string = "class=\"[position:absolute] [right:0] [top:0]\""
            let v3219 : string = " " + v3218 + v52 + ""
            let v3220 : string = "v3209"
            let v3221 : string = v3220 + v52 
            let v3222 : string = v3221 + v52 
            let v3223 : string = "vec![" + v3222 + "]"
            let v3224 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3223 
            let v3225 : string = "leptos::prelude::Fragment::new($0)"
            let v3226 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3224 v3225 
            let v3227 : string = "leptos::prelude::AnyView::from($0)"
            let v3228 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3226 v3227 
            let v3229 : string = "div"
            let v3230 : string = "<" + v3229 + " " + v3219 + ">move || { v3228 }</" + v3229 + ">"
            let v3231 : string = "leptos::prelude::view! { " + v3230 + " }"
            let v3232 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3231 
            let v3233 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3232 |> unbox
            let v3234 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3235 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3233 v3234 
            let v3236 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v3214(())"
            let v3237 : string = "open=move || v3217(())"
            let v3238 : string = " " + v3236 + v52 + ""
            let v3239 : string = " " + v3237 + v3238 + ""
            let v3240 : string = "$0"
            let v3241 : (unit -> string) = closure163()
            let v3242 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3241 v3240 
            let v3243 : string = "$0"
            let v3244 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure164()
            let v3245 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v3244 v3243 
            let v3246 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v3245(()) + \" \" + &v3242(())"
            let v3247 : string = " " + v3246 + v52 + ""
            let v3248 : string = "class=\"flex items-center gap-2\""
            let v3249 : string = " " + v3248 + v52 + ""
            let v3250 : (unit -> string) = method187()
            let v3251 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
            let v3252 : string = " " + v3251 + v52 + ""
            let v3253 : string = v3250 ()
            (* run_target_args'
            let v3258 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3259 : string = "&*$0"
            let v3260 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3253 v3259 
            let _run_target_args'_v3258 = v3260 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3261 : string = "&*$0"
            let v3262 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3253 v3261 
            let _run_target_args'_v3258 = v3262 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3263 : string = "&*$0"
            let v3264 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3253 v3263 
            let _run_target_args'_v3258 = v3264 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3266 : Ref<Str> = v3253 |> unbox<Ref<Str>>
            let _run_target_args'_v3258 = v3266 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3270 : Ref<Str> = v3253 |> unbox<Ref<Str>>
            let _run_target_args'_v3258 = v3270 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3274 : Ref<Str> = v3253 |> unbox<Ref<Str>>
            let _run_target_args'_v3258 = v3274 
            #endif
#else
            let v3278 : Ref<Str> = v3253 |> unbox<Ref<Str>>
            let _run_target_args'_v3258 = v3278 
            #endif
            let v3281 : Ref<Str> = _run_target_args'_v3258 
            (* run_target_args'
            let v3291 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3292 : string = "String::from($0)"
            let v3293 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3281 v3292 
            let _run_target_args'_v3291 = v3293 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3294 : string = "String::from($0)"
            let v3295 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3281 v3294 
            let _run_target_args'_v3291 = v3295 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3296 : string = "String::from($0)"
            let v3297 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3281 v3296 
            let _run_target_args'_v3291 = v3297 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3299 : std_string_String = v3281 |> unbox<std_string_String>
            let _run_target_args'_v3291 = v3299 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3303 : std_string_String = v3281 |> unbox<std_string_String>
            let _run_target_args'_v3291 = v3303 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3307 : std_string_String = v3281 |> unbox<std_string_String>
            let _run_target_args'_v3291 = v3307 
            #endif
#else
            let v3311 : std_string_String = v3281 |> unbox<std_string_String>
            let _run_target_args'_v3291 = v3311 
            #endif
            let v3314 : std_string_String = _run_target_args'_v3291 
            let v3320 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v3321 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3314 v3320 
            let v3322 : string = "v3321"
            let v3323 : string = v3322 + v52 
            let v3324 : string = v3323 + v52 
            let v3325 : string = "vec![" + v3324 + "]"
            let v3326 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3325 
            let v3327 : string = "leptos::prelude::Fragment::new($0)"
            let v3328 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3326 v3327 
            let v3329 : string = "leptos::prelude::AnyView::from($0)"
            let v3330 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3328 v3329 
            let v3331 : string = "span"
            let v3332 : string = "<" + v3331 + " " + v3252 + ">move || { v3330 }</" + v3331 + ">"
            let v3333 : string = "leptos::prelude::view! { " + v3332 + " }"
            let v3334 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3333 
            let v3335 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v3334 |> unbox
            let v3336 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3337 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3335 v3336 
            let v3338 : string = "v3337"
            let v3339 : string = v3338 + v52 
            let v3340 : string = v3339 + v52 
            let v3341 : string = "vec![" + v3340 + "]"
            let v3342 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3341 
            let v3343 : string = "leptos::prelude::Fragment::new($0)"
            let v3344 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3342 v3343 
            let v3345 : string = "leptos::prelude::AnyView::from($0)"
            let v3346 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3344 v3345 
            let v3347 : string = "<" + v3229 + " " + v3249 + ">move || { v3346 }</" + v3229 + ">"
            let v3348 : string = "leptos::prelude::view! { " + v3347 + " }"
            let v3349 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3348 
            let v3350 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3349 |> unbox
            let v3351 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3352 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3350 v3351 
            let v3353 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
            let v3354 : string = " " + v3353 + v52 + ""
            let v3355 : string = "$0"
            let v3356 : (unit -> string) = closure166()
            let v3357 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3356 v3355 
            let v3358 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v3359 : string = "viewBox=\"0 0 20 20\""
            let v3360 : string = "fill=\"currentColor\""
            let v3361 : string = "class=move || \" \".to_owned() + &v3357(())"
            let v3362 : string = " " + v3358 + v52 + ""
            let v3363 : string = " " + v3359 + v3362 + ""
            let v3364 : string = " " + v3360 + v3363 + ""
            let v3365 : string = " " + v3361 + v3364 + ""
            let v3366 : string = "fill-rule=\"evenodd\""
            let v3367 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
            let v3368 : string = "clip-rule=\"evenodd\""
            let v3369 : string = " " + v3366 + v52 + ""
            let v3370 : string = " " + v3367 + v3369 + ""
            let v3371 : string = " " + v3368 + v3370 + ""
            let v3372 : string = "vec![" + v52 + "]"
            let v3373 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3372 
            let v3374 : string = "leptos::prelude::Fragment::new($0)"
            let v3375 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3373 v3374 
            let v3376 : string = "leptos::prelude::AnyView::from($0)"
            let v3377 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3375 v3376 
            let v3378 : string = "path"
            let v3379 : string = "<" + v3378 + " " + v3371 + ">move || { v3377 }</" + v3378 + ">"
            let v3380 : string = "leptos::prelude::view! { " + v3379 + " }"
            let v3381 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3380 
            let v3382 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v3381 |> unbox
            let v3383 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3384 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3382 v3383 
            let v3385 : string = "v3384"
            let v3386 : string = v3385 + v52 
            let v3387 : string = v3386 + v52 
            let v3388 : string = "vec![" + v3387 + "]"
            let v3389 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3388 
            let v3390 : string = "leptos::prelude::Fragment::new($0)"
            let v3391 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3389 v3390 
            let v3392 : string = "leptos::prelude::AnyView::from($0)"
            let v3393 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3391 v3392 
            let v3394 : string = "svg"
            let v3395 : string = "<" + v3394 + " " + v3365 + ">move || { v3393 }</" + v3394 + ">"
            let v3396 : string = "leptos::prelude::view! { " + v3395 + " }"
            let v3397 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3396 
            let v3398 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v3397 |> unbox
            let v3399 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3400 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3398 v3399 
            let v3401 : string = "v3400"
            let v3402 : string = v3401 + v52 
            let v3403 : string = v3402 + v52 
            let v3404 : string = "vec![" + v3403 + "]"
            let v3405 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3404 
            let v3406 : string = "leptos::prelude::Fragment::new($0)"
            let v3407 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3405 v3406 
            let v3408 : string = "leptos::prelude::AnyView::from($0)"
            let v3409 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3407 v3408 
            let v3410 : string = "<" + v3331 + " " + v3354 + ">move || { v3409 }</" + v3331 + ">"
            let v3411 : string = "leptos::prelude::view! { " + v3410 + " }"
            let v3412 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3411 
            let v3413 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v3412 |> unbox
            let v3414 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3415 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3413 v3414 
            let v3416 : string = "v3415"
            let v3417 : string = v3416 + v52 
            let v3418 : string = v3417 + v52 
            let v3419 : string = "v3352"
            let v3420 : string = ", "
            let v3421 : string = v3419 + v3420 
            let v3422 : string = v3421 + v3418 
            let v3423 : string = "vec![" + v3422 + "]"
            let v3424 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3423 
            let v3425 : string = "leptos::prelude::Fragment::new($0)"
            let v3426 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3424 v3425 
            let v3427 : string = "leptos::prelude::AnyView::from($0)"
            let v3428 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3426 v3427 
            let v3429 : string = "summary"
            let v3430 : string = "<" + v3429 + " " + v3247 + ">move || { v3428 }</" + v3429 + ">"
            let v3431 : string = "leptos::prelude::view! { " + v3430 + " }"
            let v3432 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3431 
            let v3433 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v3432 |> unbox
            let v3434 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3435 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3433 v3434 
            let v3436 : string = "class=\"flex flex-1 flex-col\""
            let v3437 : string = " " + v3436 + v52 + ""
            let v3438 : string = "Func0::new(move || $0())"
            let v3439 : (unit -> leptos_dom_Fragment) = closure167(v2242, v3190, v3196, v3199, v3205)
            let v3440 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v3439 v3438 
            let v3441 : Func0<leptos_dom_Fragment> = method195(v3440)
            let v3442 : string = "(move || v3441())()"
            let v3443 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v3442 
            let v3444 : string = "leptos::prelude::AnyView::from($0)"
            let v3445 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3443 v3444 
            let v3446 : string = "<" + v3229 + " " + v3437 + ">move || { v3445 }</" + v3229 + ">"
            let v3447 : string = "leptos::prelude::view! { " + v3446 + " }"
            let v3448 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3447 
            let v3449 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3448 |> unbox
            let v3450 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3451 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3449 v3450 
            let v3452 : string = "v3451"
            let v3453 : string = v3452 + v52 
            let v3454 : string = v3453 + v52 
            let v3455 : string = "v3435"
            let v3456 : string = v3455 + v3420 
            let v3457 : string = v3456 + v3454 
            let v3458 : string = "vec![" + v3457 + "]"
            let v3459 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3458 
            let v3460 : string = "leptos::prelude::Fragment::new($0)"
            let v3461 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3459 v3460 
            let v3462 : string = "leptos::prelude::AnyView::from($0)"
            let v3463 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3461 v3462 
            let v3464 : string = "details"
            let v3465 : string = "<" + v3464 + " " + v3239 + ">move || { v3463 }</" + v3464 + ">"
            let v3466 : string = "leptos::prelude::view! { " + v3465 + " }"
            let v3467 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3466 
            let v3468 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v3467 |> unbox
            let v3469 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3470 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3468 v3469 
            let v3471 : string = "v3470"
            let v3472 : string = v3471 + v52 
            let v3473 : string = v3472 + v52 
            let v3474 : string = "v3235"
            let v3475 : string = v3474 + v3420 
            let v3476 : string = v3475 + v3473 
            let v3477 : string = "vec![" + v3476 + "]"
            let v3478 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3477 
            let v3479 : string = "leptos::prelude::Fragment::new($0)"
            let v3480 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3478 v3479 
            let v3481 : string = "leptos::prelude::AnyView::from($0)"
            let v3482 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3480 v3481 
            let v3483 : string = "<" + v3229 + " " + v3211 + ">move || { v3482 }</" + v3229 + ">"
            let v3484 : string = "leptos::prelude::view! { " + v3483 + " }"
            let v3485 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3484 
            let v3486 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3485 |> unbox
            let v3487 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3488 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3486 v3487 
            let v3489 : string = "vec![" + v52 + "]"
            let v3490 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3489 
            let v3491 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3492 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3490 v3491 
            let v3493 : string = "class=\"flex flex-col [position:relative]\""
            let v3494 : string = " " + v3493 + v52 + ""
            let v3495 : string = "$0"
            let v3496 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3213 v3495 
            let v3497 : string = "$0"
            let v3498 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v3216 v3497 
            let v3499 : string = "class=\"[position:absolute] [right:0] [top:0]\""
            let v3500 : string = " " + v3499 + v52 + ""
            let v3501 : string = "v3492"
            let v3502 : string = v3501 + v52 
            let v3503 : string = v3502 + v52 
            let v3504 : string = "vec![" + v3503 + "]"
            let v3505 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3504 
            let v3506 : string = "leptos::prelude::Fragment::new($0)"
            let v3507 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3505 v3506 
            let v3508 : string = "leptos::prelude::AnyView::from($0)"
            let v3509 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3507 v3508 
            let v3510 : string = "<" + v3229 + " " + v3500 + ">move || { v3509 }</" + v3229 + ">"
            let v3511 : string = "leptos::prelude::view! { " + v3510 + " }"
            let v3512 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3511 
            let v3513 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3512 |> unbox
            let v3514 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3515 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3513 v3514 
            let v3516 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v3496(())"
            let v3517 : string = "open=move || v3498(())"
            let v3518 : string = " " + v3516 + v52 + ""
            let v3519 : string = " " + v3517 + v3518 + ""
            let v3520 : string = "$0"
            let v3521 : (unit -> string) = closure183()
            let v3522 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3521 v3520 
            let v3523 : string = "$0"
            let v3524 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure184()
            let v3525 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v3524 v3523 
            let v3526 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v3525(()) + \" \" + &v3522(())"
            let v3527 : string = " " + v3526 + v52 + ""
            let v3528 : string = "class=\"flex items-center gap-2\""
            let v3529 : string = " " + v3528 + v52 + ""
            let v3530 : (unit -> string) = method198()
            let v3531 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
            let v3532 : string = " " + v3531 + v52 + ""
            let v3533 : string = v3530 ()
            (* run_target_args'
            let v3538 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3539 : string = "&*$0"
            let v3540 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3533 v3539 
            let _run_target_args'_v3538 = v3540 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3541 : string = "&*$0"
            let v3542 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3533 v3541 
            let _run_target_args'_v3538 = v3542 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3543 : string = "&*$0"
            let v3544 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3533 v3543 
            let _run_target_args'_v3538 = v3544 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3546 : Ref<Str> = v3533 |> unbox<Ref<Str>>
            let _run_target_args'_v3538 = v3546 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3550 : Ref<Str> = v3533 |> unbox<Ref<Str>>
            let _run_target_args'_v3538 = v3550 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3554 : Ref<Str> = v3533 |> unbox<Ref<Str>>
            let _run_target_args'_v3538 = v3554 
            #endif
#else
            let v3558 : Ref<Str> = v3533 |> unbox<Ref<Str>>
            let _run_target_args'_v3538 = v3558 
            #endif
            let v3561 : Ref<Str> = _run_target_args'_v3538 
            (* run_target_args'
            let v3571 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3572 : string = "String::from($0)"
            let v3573 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3561 v3572 
            let _run_target_args'_v3571 = v3573 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3574 : string = "String::from($0)"
            let v3575 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3561 v3574 
            let _run_target_args'_v3571 = v3575 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3576 : string = "String::from($0)"
            let v3577 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3561 v3576 
            let _run_target_args'_v3571 = v3577 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3579 : std_string_String = v3561 |> unbox<std_string_String>
            let _run_target_args'_v3571 = v3579 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3583 : std_string_String = v3561 |> unbox<std_string_String>
            let _run_target_args'_v3571 = v3583 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3587 : std_string_String = v3561 |> unbox<std_string_String>
            let _run_target_args'_v3571 = v3587 
            #endif
#else
            let v3591 : std_string_String = v3561 |> unbox<std_string_String>
            let _run_target_args'_v3571 = v3591 
            #endif
            let v3594 : std_string_String = _run_target_args'_v3571 
            let v3600 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v3601 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3594 v3600 
            let v3602 : string = "v3601"
            let v3603 : string = v3602 + v52 
            let v3604 : string = v3603 + v52 
            let v3605 : string = "vec![" + v3604 + "]"
            let v3606 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3605 
            let v3607 : string = "leptos::prelude::Fragment::new($0)"
            let v3608 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3606 v3607 
            let v3609 : string = "leptos::prelude::AnyView::from($0)"
            let v3610 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3608 v3609 
            let v3611 : string = "<" + v3331 + " " + v3532 + ">move || { v3610 }</" + v3331 + ">"
            let v3612 : string = "leptos::prelude::view! { " + v3611 + " }"
            let v3613 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3612 
            let v3614 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v3613 |> unbox
            let v3615 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3616 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3614 v3615 
            let v3617 : string = "v3616"
            let v3618 : string = v3617 + v52 
            let v3619 : string = v3618 + v52 
            let v3620 : string = "vec![" + v3619 + "]"
            let v3621 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3620 
            let v3622 : string = "leptos::prelude::Fragment::new($0)"
            let v3623 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3621 v3622 
            let v3624 : string = "leptos::prelude::AnyView::from($0)"
            let v3625 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3623 v3624 
            let v3626 : string = "<" + v3229 + " " + v3529 + ">move || { v3625 }</" + v3229 + ">"
            let v3627 : string = "leptos::prelude::view! { " + v3626 + " }"
            let v3628 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3627 
            let v3629 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3628 |> unbox
            let v3630 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3631 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3629 v3630 
            let v3632 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
            let v3633 : string = " " + v3632 + v52 + ""
            let v3634 : string = "$0"
            let v3635 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3356 v3634 
            let v3636 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v3637 : string = "viewBox=\"0 0 20 20\""
            let v3638 : string = "fill=\"currentColor\""
            let v3639 : string = "class=move || \" \".to_owned() + &v3635(())"
            let v3640 : string = " " + v3636 + v52 + ""
            let v3641 : string = " " + v3637 + v3640 + ""
            let v3642 : string = " " + v3638 + v3641 + ""
            let v3643 : string = " " + v3639 + v3642 + ""
            let v3644 : string = "fill-rule=\"evenodd\""
            let v3645 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
            let v3646 : string = "clip-rule=\"evenodd\""
            let v3647 : string = " " + v3644 + v52 + ""
            let v3648 : string = " " + v3645 + v3647 + ""
            let v3649 : string = " " + v3646 + v3648 + ""
            let v3650 : string = "vec![" + v52 + "]"
            let v3651 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3650 
            let v3652 : string = "leptos::prelude::Fragment::new($0)"
            let v3653 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3651 v3652 
            let v3654 : string = "leptos::prelude::AnyView::from($0)"
            let v3655 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3653 v3654 
            let v3656 : string = "<" + v3378 + " " + v3649 + ">move || { v3655 }</" + v3378 + ">"
            let v3657 : string = "leptos::prelude::view! { " + v3656 + " }"
            let v3658 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3657 
            let v3659 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v3658 |> unbox
            let v3660 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3661 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3659 v3660 
            let v3662 : string = "v3661"
            let v3663 : string = v3662 + v52 
            let v3664 : string = v3663 + v52 
            let v3665 : string = "vec![" + v3664 + "]"
            let v3666 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3665 
            let v3667 : string = "leptos::prelude::Fragment::new($0)"
            let v3668 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3666 v3667 
            let v3669 : string = "leptos::prelude::AnyView::from($0)"
            let v3670 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3668 v3669 
            let v3671 : string = "<" + v3394 + " " + v3643 + ">move || { v3670 }</" + v3394 + ">"
            let v3672 : string = "leptos::prelude::view! { " + v3671 + " }"
            let v3673 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3672 
            let v3674 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v3673 |> unbox
            let v3675 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3676 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3674 v3675 
            let v3677 : string = "v3676"
            let v3678 : string = v3677 + v52 
            let v3679 : string = v3678 + v52 
            let v3680 : string = "vec![" + v3679 + "]"
            let v3681 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3680 
            let v3682 : string = "leptos::prelude::Fragment::new($0)"
            let v3683 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3681 v3682 
            let v3684 : string = "leptos::prelude::AnyView::from($0)"
            let v3685 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3683 v3684 
            let v3686 : string = "<" + v3331 + " " + v3633 + ">move || { v3685 }</" + v3331 + ">"
            let v3687 : string = "leptos::prelude::view! { " + v3686 + " }"
            let v3688 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3687 
            let v3689 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v3688 |> unbox
            let v3690 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3691 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3689 v3690 
            let v3692 : string = "v3691"
            let v3693 : string = v3692 + v52 
            let v3694 : string = v3693 + v52 
            let v3695 : string = "v3631"
            let v3696 : string = v3695 + v3420 
            let v3697 : string = v3696 + v3694 
            let v3698 : string = "vec![" + v3697 + "]"
            let v3699 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3698 
            let v3700 : string = "leptos::prelude::Fragment::new($0)"
            let v3701 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3699 v3700 
            let v3702 : string = "leptos::prelude::AnyView::from($0)"
            let v3703 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3701 v3702 
            let v3704 : string = "<" + v3429 + " " + v3527 + ">move || { v3703 }</" + v3429 + ">"
            let v3705 : string = "leptos::prelude::view! { " + v3704 + " }"
            let v3706 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3705 
            let v3707 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v3706 |> unbox
            let v3708 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3709 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3707 v3708 
            let v3710 : string = "class=\"flex flex-1 flex-col\""
            let v3711 : string = " " + v3710 + v52 + ""
            let v3712 : string = "Func0::new(move || $0())"
            let v3713 : (unit -> leptos_dom_Fragment) = closure186(v2282, v2274, v2254)
            let v3714 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v3713 v3712 
            let v3715 : Func0<leptos_dom_Fragment> = method195(v3714)
            let v3716 : string = "(move || v3715())()"
            let v3717 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v3716 
            let v3718 : string = "leptos::prelude::AnyView::from($0)"
            let v3719 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3717 v3718 
            let v3720 : string = "<" + v3229 + " " + v3711 + ">move || { v3719 }</" + v3229 + ">"
            let v3721 : string = "leptos::prelude::view! { " + v3720 + " }"
            let v3722 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3721 
            let v3723 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3722 |> unbox
            let v3724 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3725 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3723 v3724 
            let v3726 : string = "v3725"
            let v3727 : string = v3726 + v52 
            let v3728 : string = v3727 + v52 
            let v3729 : string = "v3709"
            let v3730 : string = v3729 + v3420 
            let v3731 : string = v3730 + v3728 
            let v3732 : string = "vec![" + v3731 + "]"
            let v3733 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3732 
            let v3734 : string = "leptos::prelude::Fragment::new($0)"
            let v3735 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3733 v3734 
            let v3736 : string = "leptos::prelude::AnyView::from($0)"
            let v3737 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3735 v3736 
            let v3738 : string = "<" + v3464 + " " + v3519 + ">move || { v3737 }</" + v3464 + ">"
            let v3739 : string = "leptos::prelude::view! { " + v3738 + " }"
            let v3740 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3739 
            let v3741 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v3740 |> unbox
            let v3742 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3743 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3741 v3742 
            let v3744 : string = "v3743"
            let v3745 : string = v3744 + v52 
            let v3746 : string = v3745 + v52 
            let v3747 : string = "v3515"
            let v3748 : string = v3747 + v3420 
            let v3749 : string = v3748 + v3746 
            let v3750 : string = "vec![" + v3749 + "]"
            let v3751 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3750 
            let v3752 : string = "leptos::prelude::Fragment::new($0)"
            let v3753 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3751 v3752 
            let v3754 : string = "leptos::prelude::AnyView::from($0)"
            let v3755 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3753 v3754 
            let v3756 : string = "<" + v3229 + " " + v3494 + ">move || { v3755 }</" + v3229 + ">"
            let v3757 : string = "leptos::prelude::view! { " + v3756 + " }"
            let v3758 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3757 
            let v3759 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3758 |> unbox
            let v3760 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3761 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3759 v3760 
            let v3762 : string = "v3761"
            let v3763 : string = v3762 + v52 
            let v3764 : string = v3763 + v52 
            let v3765 : string = "v3488"
            let v3766 : string = v3765 + v3420 
            let v3767 : string = v3766 + v3764 
            let v3768 : string = "vec![" + v3767 + "]"
            let v3769 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3768 
            let v3770 : string = "leptos::prelude::Fragment::new($0)"
            let v3771 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3769 v3770 
            US22_0(v3771)
        | US18_2 -> (* Lists *)
            let v3773 : string = "lists_view.render ()"
            let v3774 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3775 : bool = Fable.Core.RustInterop.emitRustExpr v3773 v3774 
            let v3776 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
            let v3777 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v3776 
            let v3778 : string = "$0.unwrap()"
            let v3779 : Heap2 = Fable.Core.RustInterop.emitRustExpr v3777 v3778 
            let v3780 : string = "???"
            (* run_target_args'
            let v3785 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3786 : string = "&*$0"
            let v3787 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3780 v3786 
            let _run_target_args'_v3785 = v3787 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3788 : string = "&*$0"
            let v3789 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3780 v3788 
            let _run_target_args'_v3785 = v3789 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3790 : string = "&*$0"
            let v3791 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3780 v3790 
            let _run_target_args'_v3785 = v3791 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3793 : Ref<Str> = v3780 |> unbox<Ref<Str>>
            let _run_target_args'_v3785 = v3793 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3797 : Ref<Str> = v3780 |> unbox<Ref<Str>>
            let _run_target_args'_v3785 = v3797 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3801 : Ref<Str> = v3780 |> unbox<Ref<Str>>
            let _run_target_args'_v3785 = v3801 
            #endif
#else
            let v3805 : Ref<Str> = v3780 |> unbox<Ref<Str>>
            let _run_target_args'_v3785 = v3805 
            #endif
            let v3808 : Ref<Str> = _run_target_args'_v3785 
            (* run_target_args'
            let v3818 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3819 : string = "String::from($0)"
            let v3820 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3808 v3819 
            let _run_target_args'_v3818 = v3820 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3821 : string = "String::from($0)"
            let v3822 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3808 v3821 
            let _run_target_args'_v3818 = v3822 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3823 : string = "String::from($0)"
            let v3824 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3808 v3823 
            let _run_target_args'_v3818 = v3824 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3826 : std_string_String = v3808 |> unbox<std_string_String>
            let _run_target_args'_v3818 = v3826 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3830 : std_string_String = v3808 |> unbox<std_string_String>
            let _run_target_args'_v3818 = v3830 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3834 : std_string_String = v3808 |> unbox<std_string_String>
            let _run_target_args'_v3818 = v3834 
            #endif
#else
            let v3838 : std_string_String = v3808 |> unbox<std_string_String>
            let _run_target_args'_v3818 = v3838 
            #endif
            let v3841 : std_string_String = _run_target_args'_v3818 
            let v3847 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v3848 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3841 v3847 
            let v3849 : string = "v3848"
            let v3850 : string = v3849 + v52 
            let v3851 : string = v3850 + v52 
            let v3852 : string = "vec![" + v3851 + "]"
            let v3853 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3852 
            let v3854 : string = "leptos::prelude::Fragment::new($0)"
            let v3855 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3853 v3854 
            US22_0(v3855)
        | US18_4 -> (* Settings *)
            let v4592 : string = "settings_view.render ()"
            let v4593 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v4594 : bool = Fable.Core.RustInterop.emitRustExpr v4592 v4593 
            let v4595 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
            let v4596 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v4595 
            let v4597 : string = "$0.unwrap()"
            let v4598 : Heap2 = Fable.Core.RustInterop.emitRustExpr v4596 v4597 
            let v4599 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v4600 : (unit -> Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>) = closure192(v4598)
            let v4601 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>> = Fable.Core.RustInterop.emitRustExpr v4600 v4599 
            let v4602 : string = $"leptos::prelude::signal($0)"
            let struct (v4603 : leptos_prelude_ReadSignal<int32>, v4604 : leptos_prelude_WriteSignal<int32>) = Fable.Core.RustInterop.emitRustExpr 0 v4602 
            let v4605 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v4606 : (unit -> Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>) = closure195(v4601, v4603)
            let v4607 : leptos_prelude_ArcMemo<Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>> = Fable.Core.RustInterop.emitRustExpr v4606 v4605 
            let v4608 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v4609 : (unit -> int32) = closure198(v4607)
            let v4610 : leptos_prelude_ArcMemo<int32> = Fable.Core.RustInterop.emitRustExpr v4609 v4608 
            let v4611 : unit = ()
            let v4612 : string = $"true; let _func0_from_v4611 = Func0::from(move || {{ //"
            let v4613 : bool = Fable.Core.RustInterop.emitRustExpr () v4612 
            let v4614 : leptos_prelude_ArcRwSignal<Heap1> = v4598.l0
            let v4615 : string = "Box::pin($0)"
            let v4616 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v4614 v4615 
            let v4617 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
            let v4618 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4616 v4617 
            let v4619 : leptos_prelude_ArcRwSignal<Heap0> = v4618.l3
            let v4620 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
            let v4621 : bool = Fable.Core.RustInterop.emitRustExpr v4619 v4620 
            let v4623 : TypeEmit<Heap0> = null |> unbox<TypeEmit<Heap0>>
            let v4626 : string = "*/ | { *x = $0(x.clone()) }); //"
            let v4627 : (Heap0 -> Heap0) = closure199(v4601)
            let v4628 : bool = Fable.Core.RustInterop.emitRustExpr v4627 v4626 
            let v4629 : string = $"true; leptos::prelude::WriteSignal::update(&$0, |x: &mut /*"
            let v4630 : bool = Fable.Core.RustInterop.emitRustExpr v4604 v4629 
            let v4632 : TypeEmit<int32> = null |> unbox<TypeEmit<int32>>
            let v4635 : string = "*/ | { *x = $0(x.clone()) }); //"
            let v4636 : (int32 -> int32) = closure201()
            let v4637 : bool = Fable.Core.RustInterop.emitRustExpr v4636 v4635 
            // rust.func0_from / is_unit
            let v4638 : string = $"true; /*"
            let v4639 : bool = Fable.Core.RustInterop.emitRustExpr () v4638 
            let v4640 : string = $"*/ }}); //"
            let v4641 : bool = Fable.Core.RustInterop.emitRustExpr () v4640 
            let v4642 : string = $"_func0_from_v4611"
            let v4643 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v4642 
            let v4644 : string = "$0"
            let v4645 : (unit -> string) = closure202()
            let v4646 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4645 v4644 
            let v4647 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v4648 : string = "fill=\"none\""
            let v4649 : string = "viewBox=\"0 0 24 24\""
            let v4650 : string = "stroke-width=\"1.5\""
            let v4651 : string = "stroke=\"currentColor\""
            let v4652 : string = "class=move || \" \".to_owned() + &v4646(())"
            let v4653 : string = " " + v4647 + v52 + ""
            let v4654 : string = " " + v4648 + v4653 + ""
            let v4655 : string = " " + v4649 + v4654 + ""
            let v4656 : string = " " + v4650 + v4655 + ""
            let v4657 : string = " " + v4651 + v4656 + ""
            let v4658 : string = " " + v4652 + v4657 + ""
            let v4659 : string = "stroke-linecap=\"round\""
            let v4660 : string = "stroke-linejoin=\"round\""
            let v4661 : string = "d=\"M12 6v12m6-6H6\""
            let v4662 : string = " " + v4659 + v52 + ""
            let v4663 : string = " " + v4660 + v4662 + ""
            let v4664 : string = " " + v4661 + v4663 + ""
            let v4665 : string = "vec![" + v52 + "]"
            let v4666 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4665 
            let v4667 : string = "leptos::prelude::Fragment::new($0)"
            let v4668 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4666 v4667 
            let v4669 : string = "leptos::prelude::AnyView::from($0)"
            let v4670 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4668 v4669 
            let v4671 : string = "path"
            let v4672 : string = "<" + v4671 + " " + v4664 + ">move || { v4670 }</" + v4671 + ">"
            let v4673 : string = "leptos::prelude::view! { " + v4672 + " }"
            let v4674 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4673 
            let v4675 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4674 |> unbox
            let v4676 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4677 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4675 v4676 
            let v4678 : string = "v4677"
            let v4679 : string = v4678 + v52 
            let v4680 : string = v4679 + v52 
            let v4681 : string = "vec![" + v4680 + "]"
            let v4682 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4681 
            let v4683 : string = "leptos::prelude::Fragment::new($0)"
            let v4684 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4682 v4683 
            let v4685 : string = "leptos::prelude::AnyView::from($0)"
            let v4686 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4684 v4685 
            let v4687 : string = "svg"
            let v4688 : string = "<" + v4687 + " " + v4658 + ">move || { v4686 }</" + v4687 + ">"
            let v4689 : string = "leptos::prelude::view! { " + v4688 + " }"
            let v4690 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4689 
            let v4691 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4690 |> unbox
            let v4692 : string = "on:click=move |_| v4643()"
            let v4693 : string = "aria-label=\"Add\""
            let v4694 : string = "$0"
            let v4695 : (unit -> std_string_String) = closure203()
            let v4696 : (unit -> std_string_String) = Fable.Core.RustInterop.emitRustExpr v4695 v4694 
            let v4697 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] pb-[8px] pt-[8px] px-[12px] \".to_owned() + &v4696(())"
            let v4698 : string = " " + v4697 + v52 + ""
            let v4699 : string = " " + v4692 + v4698 + ""
            let v4700 : string = " " + v4693 + v4699 + ""
            let v4701 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4702 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4691 v4701 
            let v4703 : string = "v4702"
            let v4704 : string = v4703 + v52 
            let v4705 : string = v4704 + v52 
            let v4706 : string = "vec![" + v4705 + "]"
            let v4707 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4706 
            let v4708 : string = "leptos::prelude::Fragment::new($0)"
            let v4709 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4707 v4708 
            let v4710 : string = "leptos::prelude::AnyView::from($0)"
            let v4711 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4709 v4710 
            let v4712 : string = "button"
            let v4713 : string = "<" + v4712 + " " + v4700 + ">move || { v4711 }</" + v4712 + ">"
            let v4714 : string = "leptos::prelude::view! { " + v4713 + " }"
            let v4715 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4714 
            let v4716 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Button>> = v4715 |> unbox
            let v4717 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4718 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4716 v4717 
            let v4719 : string = "vec![" + v52 + "]"
            let v4720 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4719 
            let v4721 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4722 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4720 v4721 
            let v4723 : string = "class=\"flex flex-col [position:relative]\""
            let v4724 : string = " " + v4723 + v52 + ""
            let v4725 : string = "$0"
            let v4726 : (unit -> string) = closure161()
            let v4727 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4726 v4725 
            let v4728 : string = "$0"
            let v4729 : (unit -> bool) = closure162()
            let v4730 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v4729 v4728 
            let v4731 : string = "class=\"[position:absolute] [right:0] [top:0]\""
            let v4732 : string = " " + v4731 + v52 + ""
            let v4733 : string = "v4718"
            let v4734 : string = v4733 + v52 
            let v4735 : string = v4734 + v52 
            let v4736 : string = "vec![" + v4735 + "]"
            let v4737 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4736 
            let v4738 : string = "leptos::prelude::Fragment::new($0)"
            let v4739 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4737 v4738 
            let v4740 : string = "leptos::prelude::AnyView::from($0)"
            let v4741 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4739 v4740 
            let v4742 : string = "div"
            let v4743 : string = "<" + v4742 + " " + v4732 + ">move || { v4741 }</" + v4742 + ">"
            let v4744 : string = "leptos::prelude::view! { " + v4743 + " }"
            let v4745 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4744 
            let v4746 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4745 |> unbox
            let v4747 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4748 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4746 v4747 
            let v4749 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v4727(())"
            let v4750 : string = "open=move || v4730(())"
            let v4751 : string = " " + v4749 + v52 + ""
            let v4752 : string = " " + v4750 + v4751 + ""
            let v4753 : string = "$0"
            let v4754 : (unit -> string) = closure204()
            let v4755 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4754 v4753 
            let v4756 : string = "$0"
            let v4757 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure205(v4718)
            let v4758 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v4757 v4756 
            let v4759 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v4758(()) + \" \" + &v4755(())"
            let v4760 : string = " " + v4759 + v52 + ""
            let v4761 : string = "class=\"flex items-center gap-2\""
            let v4762 : string = " " + v4761 + v52 + ""
            let v4763 : (unit -> string) = method214(v4718)
            let v4764 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
            let v4765 : string = " " + v4764 + v52 + ""
            let v4766 : string = v4763 ()
            (* run_target_args'
            let v4771 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v4772 : string = "&*$0"
            let v4773 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4766 v4772 
            let _run_target_args'_v4771 = v4773 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v4774 : string = "&*$0"
            let v4775 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4766 v4774 
            let _run_target_args'_v4771 = v4775 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v4776 : string = "&*$0"
            let v4777 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4766 v4776 
            let _run_target_args'_v4771 = v4777 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v4779 : Ref<Str> = v4766 |> unbox<Ref<Str>>
            let _run_target_args'_v4771 = v4779 
            #endif
#if FABLE_COMPILER_PYTHON
            let v4783 : Ref<Str> = v4766 |> unbox<Ref<Str>>
            let _run_target_args'_v4771 = v4783 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v4787 : Ref<Str> = v4766 |> unbox<Ref<Str>>
            let _run_target_args'_v4771 = v4787 
            #endif
#else
            let v4791 : Ref<Str> = v4766 |> unbox<Ref<Str>>
            let _run_target_args'_v4771 = v4791 
            #endif
            let v4794 : Ref<Str> = _run_target_args'_v4771 
            (* run_target_args'
            let v4804 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v4805 : string = "String::from($0)"
            let v4806 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4794 v4805 
            let _run_target_args'_v4804 = v4806 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v4807 : string = "String::from($0)"
            let v4808 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4794 v4807 
            let _run_target_args'_v4804 = v4808 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v4809 : string = "String::from($0)"
            let v4810 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4794 v4809 
            let _run_target_args'_v4804 = v4810 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v4812 : std_string_String = v4794 |> unbox<std_string_String>
            let _run_target_args'_v4804 = v4812 
            #endif
#if FABLE_COMPILER_PYTHON
            let v4816 : std_string_String = v4794 |> unbox<std_string_String>
            let _run_target_args'_v4804 = v4816 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v4820 : std_string_String = v4794 |> unbox<std_string_String>
            let _run_target_args'_v4804 = v4820 
            #endif
#else
            let v4824 : std_string_String = v4794 |> unbox<std_string_String>
            let _run_target_args'_v4804 = v4824 
            #endif
            let v4827 : std_string_String = _run_target_args'_v4804 
            let v4833 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v4834 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4827 v4833 
            let v4835 : string = "v4834"
            let v4836 : string = v4835 + v52 
            let v4837 : string = v4836 + v52 
            let v4838 : string = "vec![" + v4837 + "]"
            let v4839 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4838 
            let v4840 : string = "leptos::prelude::Fragment::new($0)"
            let v4841 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4839 v4840 
            let v4842 : string = "leptos::prelude::AnyView::from($0)"
            let v4843 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4841 v4842 
            let v4844 : string = "span"
            let v4845 : string = "<" + v4844 + " " + v4765 + ">move || { v4843 }</" + v4844 + ">"
            let v4846 : string = "leptos::prelude::view! { " + v4845 + " }"
            let v4847 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4846 
            let v4848 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4847 |> unbox
            let v4849 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4850 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4848 v4849 
            let v4851 : string = "v4850"
            let v4852 : string = v4851 + v52 
            let v4853 : string = v4852 + v52 
            let v4854 : string = "vec![" + v4853 + "]"
            let v4855 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4854 
            let v4856 : string = "leptos::prelude::Fragment::new($0)"
            let v4857 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4855 v4856 
            let v4858 : string = "leptos::prelude::AnyView::from($0)"
            let v4859 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4857 v4858 
            let v4860 : string = "<" + v4742 + " " + v4762 + ">move || { v4859 }</" + v4742 + ">"
            let v4861 : string = "leptos::prelude::view! { " + v4860 + " }"
            let v4862 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4861 
            let v4863 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4862 |> unbox
            let v4864 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4865 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4863 v4864 
            let v4866 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
            let v4867 : string = " " + v4866 + v52 + ""
            let v4868 : string = "$0"
            let v4869 : (unit -> string) = closure166()
            let v4870 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4869 v4868 
            let v4871 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v4872 : string = "viewBox=\"0 0 20 20\""
            let v4873 : string = "fill=\"currentColor\""
            let v4874 : string = "class=move || \" \".to_owned() + &v4870(())"
            let v4875 : string = " " + v4871 + v52 + ""
            let v4876 : string = " " + v4872 + v4875 + ""
            let v4877 : string = " " + v4873 + v4876 + ""
            let v4878 : string = " " + v4874 + v4877 + ""
            let v4879 : string = "fill-rule=\"evenodd\""
            let v4880 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
            let v4881 : string = "clip-rule=\"evenodd\""
            let v4882 : string = " " + v4879 + v52 + ""
            let v4883 : string = " " + v4880 + v4882 + ""
            let v4884 : string = " " + v4881 + v4883 + ""
            let v4885 : string = "vec![" + v52 + "]"
            let v4886 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4885 
            let v4887 : string = "leptos::prelude::Fragment::new($0)"
            let v4888 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4886 v4887 
            let v4889 : string = "leptos::prelude::AnyView::from($0)"
            let v4890 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4888 v4889 
            let v4891 : string = "<" + v4671 + " " + v4884 + ">move || { v4890 }</" + v4671 + ">"
            let v4892 : string = "leptos::prelude::view! { " + v4891 + " }"
            let v4893 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4892 
            let v4894 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4893 |> unbox
            let v4895 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4896 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4894 v4895 
            let v4897 : string = "v4896"
            let v4898 : string = v4897 + v52 
            let v4899 : string = v4898 + v52 
            let v4900 : string = "vec![" + v4899 + "]"
            let v4901 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4900 
            let v4902 : string = "leptos::prelude::Fragment::new($0)"
            let v4903 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4901 v4902 
            let v4904 : string = "leptos::prelude::AnyView::from($0)"
            let v4905 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4903 v4904 
            let v4906 : string = "<" + v4687 + " " + v4878 + ">move || { v4905 }</" + v4687 + ">"
            let v4907 : string = "leptos::prelude::view! { " + v4906 + " }"
            let v4908 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4907 
            let v4909 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4908 |> unbox
            let v4910 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4911 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4909 v4910 
            let v4912 : string = "v4911"
            let v4913 : string = v4912 + v52 
            let v4914 : string = v4913 + v52 
            let v4915 : string = "vec![" + v4914 + "]"
            let v4916 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4915 
            let v4917 : string = "leptos::prelude::Fragment::new($0)"
            let v4918 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4916 v4917 
            let v4919 : string = "leptos::prelude::AnyView::from($0)"
            let v4920 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4918 v4919 
            let v4921 : string = "<" + v4844 + " " + v4867 + ">move || { v4920 }</" + v4844 + ">"
            let v4922 : string = "leptos::prelude::view! { " + v4921 + " }"
            let v4923 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4922 
            let v4924 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4923 |> unbox
            let v4925 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4926 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4924 v4925 
            let v4927 : string = "v4926"
            let v4928 : string = v4927 + v52 
            let v4929 : string = v4928 + v52 
            let v4930 : string = "v4865"
            let v4931 : string = ", "
            let v4932 : string = v4930 + v4931 
            let v4933 : string = v4932 + v4929 
            let v4934 : string = "vec![" + v4933 + "]"
            let v4935 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4934 
            let v4936 : string = "leptos::prelude::Fragment::new($0)"
            let v4937 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4935 v4936 
            let v4938 : string = "leptos::prelude::AnyView::from($0)"
            let v4939 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4937 v4938 
            let v4940 : string = "summary"
            let v4941 : string = "<" + v4940 + " " + v4760 + ">move || { v4939 }</" + v4940 + ">"
            let v4942 : string = "leptos::prelude::view! { " + v4941 + " }"
            let v4943 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4942 
            let v4944 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v4943 |> unbox
            let v4945 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4946 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4944 v4945 
            let v4947 : string = "class=\"flex flex-1 flex-col\""
            let v4948 : string = " " + v4947 + v52 + ""
            let v4949 : string = "Func0::new(move || $0())"
            let v4950 : (unit -> leptos_dom_Fragment) = closure207(v4598, v4607, v4610, v4601, v4604)
            let v4951 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v4950 v4949 
            let v4952 : Func0<leptos_dom_Fragment> = method195(v4951)
            let v4953 : string = "(move || v4952())()"
            let v4954 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v4953 
            let v4955 : string = "leptos::prelude::AnyView::from($0)"
            let v4956 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4954 v4955 
            let v4957 : string = "<" + v4742 + " " + v4948 + ">move || { v4956 }</" + v4742 + ">"
            let v4958 : string = "leptos::prelude::view! { " + v4957 + " }"
            let v4959 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4958 
            let v4960 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4959 |> unbox
            let v4961 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4962 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4960 v4961 
            let v4963 : string = "v4962"
            let v4964 : string = v4963 + v52 
            let v4965 : string = v4964 + v52 
            let v4966 : string = "v4946"
            let v4967 : string = v4966 + v4931 
            let v4968 : string = v4967 + v4965 
            let v4969 : string = "vec![" + v4968 + "]"
            let v4970 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4969 
            let v4971 : string = "leptos::prelude::Fragment::new($0)"
            let v4972 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4970 v4971 
            let v4973 : string = "leptos::prelude::AnyView::from($0)"
            let v4974 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4972 v4973 
            let v4975 : string = "details"
            let v4976 : string = "<" + v4975 + " " + v4752 + ">move || { v4974 }</" + v4975 + ">"
            let v4977 : string = "leptos::prelude::view! { " + v4976 + " }"
            let v4978 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4977 
            let v4979 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v4978 |> unbox
            let v4980 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4981 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4979 v4980 
            let v4982 : string = "v4981"
            let v4983 : string = v4982 + v52 
            let v4984 : string = v4983 + v52 
            let v4985 : string = "v4748"
            let v4986 : string = v4985 + v4931 
            let v4987 : string = v4986 + v4984 
            let v4988 : string = "vec![" + v4987 + "]"
            let v4989 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4988 
            let v4990 : string = "leptos::prelude::Fragment::new($0)"
            let v4991 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4989 v4990 
            let v4992 : string = "leptos::prelude::AnyView::from($0)"
            let v4993 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4991 v4992 
            let v4994 : string = "<" + v4742 + " " + v4724 + ">move || { v4993 }</" + v4742 + ">"
            let v4995 : string = "leptos::prelude::view! { " + v4994 + " }"
            let v4996 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4995 
            let v4997 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4996 |> unbox
            let v4998 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4999 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4997 v4998 
            let v5000 : string = "vec![" + v52 + "]"
            let v5001 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5000 
            let v5002 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5003 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5001 v5002 
            let v5004 : string = "class=\"flex flex-col [position:relative]\""
            let v5005 : string = " " + v5004 + v52 + ""
            let v5006 : string = "$0"
            let v5007 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4726 v5006 
            let v5008 : string = "$0"
            let v5009 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v4729 v5008 
            let v5010 : string = "class=\"[position:absolute] [right:0] [top:0]\""
            let v5011 : string = " " + v5010 + v52 + ""
            let v5012 : string = "v5003"
            let v5013 : string = v5012 + v52 
            let v5014 : string = v5013 + v52 
            let v5015 : string = "vec![" + v5014 + "]"
            let v5016 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5015 
            let v5017 : string = "leptos::prelude::Fragment::new($0)"
            let v5018 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5016 v5017 
            let v5019 : string = "leptos::prelude::AnyView::from($0)"
            let v5020 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5018 v5019 
            let v5021 : string = "<" + v4742 + " " + v5011 + ">move || { v5020 }</" + v4742 + ">"
            let v5022 : string = "leptos::prelude::view! { " + v5021 + " }"
            let v5023 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5022 
            let v5024 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5023 |> unbox
            let v5025 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5026 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5024 v5025 
            let v5027 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v5007(())"
            let v5028 : string = "open=move || v5009(())"
            let v5029 : string = " " + v5027 + v52 + ""
            let v5030 : string = " " + v5028 + v5029 + ""
            let v5031 : string = "$0"
            let v5032 : (unit -> string) = closure223()
            let v5033 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v5032 v5031 
            let v5034 : string = "$0"
            let v5035 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure224()
            let v5036 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v5035 v5034 
            let v5037 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v5036(()) + \" \" + &v5033(())"
            let v5038 : string = " " + v5037 + v52 + ""
            let v5039 : string = "class=\"flex items-center gap-2\""
            let v5040 : string = " " + v5039 + v52 + ""
            let v5041 : (unit -> string) = method228()
            let v5042 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
            let v5043 : string = " " + v5042 + v52 + ""
            let v5044 : string = v5041 ()
            (* run_target_args'
            let v5049 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v5050 : string = "&*$0"
            let v5051 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5044 v5050 
            let _run_target_args'_v5049 = v5051 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v5052 : string = "&*$0"
            let v5053 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5044 v5052 
            let _run_target_args'_v5049 = v5053 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v5054 : string = "&*$0"
            let v5055 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5044 v5054 
            let _run_target_args'_v5049 = v5055 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v5057 : Ref<Str> = v5044 |> unbox<Ref<Str>>
            let _run_target_args'_v5049 = v5057 
            #endif
#if FABLE_COMPILER_PYTHON
            let v5061 : Ref<Str> = v5044 |> unbox<Ref<Str>>
            let _run_target_args'_v5049 = v5061 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v5065 : Ref<Str> = v5044 |> unbox<Ref<Str>>
            let _run_target_args'_v5049 = v5065 
            #endif
#else
            let v5069 : Ref<Str> = v5044 |> unbox<Ref<Str>>
            let _run_target_args'_v5049 = v5069 
            #endif
            let v5072 : Ref<Str> = _run_target_args'_v5049 
            (* run_target_args'
            let v5082 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v5083 : string = "String::from($0)"
            let v5084 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5072 v5083 
            let _run_target_args'_v5082 = v5084 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v5085 : string = "String::from($0)"
            let v5086 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5072 v5085 
            let _run_target_args'_v5082 = v5086 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v5087 : string = "String::from($0)"
            let v5088 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5072 v5087 
            let _run_target_args'_v5082 = v5088 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v5090 : std_string_String = v5072 |> unbox<std_string_String>
            let _run_target_args'_v5082 = v5090 
            #endif
#if FABLE_COMPILER_PYTHON
            let v5094 : std_string_String = v5072 |> unbox<std_string_String>
            let _run_target_args'_v5082 = v5094 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v5098 : std_string_String = v5072 |> unbox<std_string_String>
            let _run_target_args'_v5082 = v5098 
            #endif
#else
            let v5102 : std_string_String = v5072 |> unbox<std_string_String>
            let _run_target_args'_v5082 = v5102 
            #endif
            let v5105 : std_string_String = _run_target_args'_v5082 
            let v5111 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v5112 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5105 v5111 
            let v5113 : string = "v5112"
            let v5114 : string = v5113 + v52 
            let v5115 : string = v5114 + v52 
            let v5116 : string = "vec![" + v5115 + "]"
            let v5117 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5116 
            let v5118 : string = "leptos::prelude::Fragment::new($0)"
            let v5119 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5117 v5118 
            let v5120 : string = "leptos::prelude::AnyView::from($0)"
            let v5121 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5119 v5120 
            let v5122 : string = "<" + v4844 + " " + v5043 + ">move || { v5121 }</" + v4844 + ">"
            let v5123 : string = "leptos::prelude::view! { " + v5122 + " }"
            let v5124 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5123 
            let v5125 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v5124 |> unbox
            let v5126 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5127 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5125 v5126 
            let v5128 : string = "v5127"
            let v5129 : string = v5128 + v52 
            let v5130 : string = v5129 + v52 
            let v5131 : string = "vec![" + v5130 + "]"
            let v5132 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5131 
            let v5133 : string = "leptos::prelude::Fragment::new($0)"
            let v5134 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5132 v5133 
            let v5135 : string = "leptos::prelude::AnyView::from($0)"
            let v5136 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5134 v5135 
            let v5137 : string = "<" + v4742 + " " + v5040 + ">move || { v5136 }</" + v4742 + ">"
            let v5138 : string = "leptos::prelude::view! { " + v5137 + " }"
            let v5139 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5138 
            let v5140 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5139 |> unbox
            let v5141 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5142 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5140 v5141 
            let v5143 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
            let v5144 : string = " " + v5143 + v52 + ""
            let v5145 : string = "$0"
            let v5146 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4869 v5145 
            let v5147 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v5148 : string = "viewBox=\"0 0 20 20\""
            let v5149 : string = "fill=\"currentColor\""
            let v5150 : string = "class=move || \" \".to_owned() + &v5146(())"
            let v5151 : string = " " + v5147 + v52 + ""
            let v5152 : string = " " + v5148 + v5151 + ""
            let v5153 : string = " " + v5149 + v5152 + ""
            let v5154 : string = " " + v5150 + v5153 + ""
            let v5155 : string = "fill-rule=\"evenodd\""
            let v5156 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
            let v5157 : string = "clip-rule=\"evenodd\""
            let v5158 : string = " " + v5155 + v52 + ""
            let v5159 : string = " " + v5156 + v5158 + ""
            let v5160 : string = " " + v5157 + v5159 + ""
            let v5161 : string = "vec![" + v52 + "]"
            let v5162 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5161 
            let v5163 : string = "leptos::prelude::Fragment::new($0)"
            let v5164 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5162 v5163 
            let v5165 : string = "leptos::prelude::AnyView::from($0)"
            let v5166 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5164 v5165 
            let v5167 : string = "<" + v4671 + " " + v5160 + ">move || { v5166 }</" + v4671 + ">"
            let v5168 : string = "leptos::prelude::view! { " + v5167 + " }"
            let v5169 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5168 
            let v5170 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v5169 |> unbox
            let v5171 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5172 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5170 v5171 
            let v5173 : string = "v5172"
            let v5174 : string = v5173 + v52 
            let v5175 : string = v5174 + v52 
            let v5176 : string = "vec![" + v5175 + "]"
            let v5177 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5176 
            let v5178 : string = "leptos::prelude::Fragment::new($0)"
            let v5179 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5177 v5178 
            let v5180 : string = "leptos::prelude::AnyView::from($0)"
            let v5181 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5179 v5180 
            let v5182 : string = "<" + v4687 + " " + v5154 + ">move || { v5181 }</" + v4687 + ">"
            let v5183 : string = "leptos::prelude::view! { " + v5182 + " }"
            let v5184 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5183 
            let v5185 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v5184 |> unbox
            let v5186 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5187 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5185 v5186 
            let v5188 : string = "v5187"
            let v5189 : string = v5188 + v52 
            let v5190 : string = v5189 + v52 
            let v5191 : string = "vec![" + v5190 + "]"
            let v5192 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5191 
            let v5193 : string = "leptos::prelude::Fragment::new($0)"
            let v5194 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5192 v5193 
            let v5195 : string = "leptos::prelude::AnyView::from($0)"
            let v5196 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5194 v5195 
            let v5197 : string = "<" + v4844 + " " + v5144 + ">move || { v5196 }</" + v4844 + ">"
            let v5198 : string = "leptos::prelude::view! { " + v5197 + " }"
            let v5199 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5198 
            let v5200 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v5199 |> unbox
            let v5201 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5202 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5200 v5201 
            let v5203 : string = "v5202"
            let v5204 : string = v5203 + v52 
            let v5205 : string = v5204 + v52 
            let v5206 : string = "v5142"
            let v5207 : string = v5206 + v4931 
            let v5208 : string = v5207 + v5205 
            let v5209 : string = "vec![" + v5208 + "]"
            let v5210 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5209 
            let v5211 : string = "leptos::prelude::Fragment::new($0)"
            let v5212 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5210 v5211 
            let v5213 : string = "leptos::prelude::AnyView::from($0)"
            let v5214 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5212 v5213 
            let v5215 : string = "<" + v4940 + " " + v5038 + ">move || { v5214 }</" + v4940 + ">"
            let v5216 : string = "leptos::prelude::view! { " + v5215 + " }"
            let v5217 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5216 
            let v5218 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v5217 |> unbox
            let v5219 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5220 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5218 v5219 
            let v5221 : string = "class=\"flex flex-1 flex-col\""
            let v5222 : string = " " + v5221 + v52 + ""
            let v5223 : string = "Func0::new(move || $0())"
            let v5224 : (unit -> leptos_dom_Fragment) = closure226(v4598)
            let v5225 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v5224 v5223 
            let v5226 : Func0<leptos_dom_Fragment> = method195(v5225)
            let v5227 : string = "(move || v5226())()"
            let v5228 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v5227 
            let v5229 : string = "leptos::prelude::AnyView::from($0)"
            let v5230 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5228 v5229 
            let v5231 : string = "<" + v4742 + " " + v5222 + ">move || { v5230 }</" + v4742 + ">"
            let v5232 : string = "leptos::prelude::view! { " + v5231 + " }"
            let v5233 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5232 
            let v5234 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5233 |> unbox
            let v5235 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5236 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5234 v5235 
            let v5237 : string = "v5236"
            let v5238 : string = v5237 + v52 
            let v5239 : string = v5238 + v52 
            let v5240 : string = "v5220"
            let v5241 : string = v5240 + v4931 
            let v5242 : string = v5241 + v5239 
            let v5243 : string = "vec![" + v5242 + "]"
            let v5244 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5243 
            let v5245 : string = "leptos::prelude::Fragment::new($0)"
            let v5246 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5244 v5245 
            let v5247 : string = "leptos::prelude::AnyView::from($0)"
            let v5248 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5246 v5247 
            let v5249 : string = "<" + v4975 + " " + v5030 + ">move || { v5248 }</" + v4975 + ">"
            let v5250 : string = "leptos::prelude::view! { " + v5249 + " }"
            let v5251 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5250 
            let v5252 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v5251 |> unbox
            let v5253 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5254 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5252 v5253 
            let v5255 : string = "v5254"
            let v5256 : string = v5255 + v52 
            let v5257 : string = v5256 + v52 
            let v5258 : string = "v5026"
            let v5259 : string = v5258 + v4931 
            let v5260 : string = v5259 + v5257 
            let v5261 : string = "vec![" + v5260 + "]"
            let v5262 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5261 
            let v5263 : string = "leptos::prelude::Fragment::new($0)"
            let v5264 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5262 v5263 
            let v5265 : string = "leptos::prelude::AnyView::from($0)"
            let v5266 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5264 v5265 
            let v5267 : string = "<" + v4742 + " " + v5005 + ">move || { v5266 }</" + v4742 + ">"
            let v5268 : string = "leptos::prelude::view! { " + v5267 + " }"
            let v5269 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5268 
            let v5270 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5269 |> unbox
            let v5271 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5272 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5270 v5271 
            let v5273 : leptos_prelude_ArcRwSignal<Heap1> = v4598.l0
            let v5274 : string = "Box::pin($0)"
            let v5275 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v5273 v5274 
            let v5276 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
            let v5277 : Heap1 = Fable.Core.RustInterop.emitRustExpr v5275 v5276 
            let v5278 : leptos_prelude_ArcRwSignal<bool> = v5277.l1
            let v5279 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
            let v5280 : bool = Fable.Core.RustInterop.emitRustExpr v5278 v5279 
            let v5558 : leptos_prelude_AnyView_ =
                if v5280 then
                    let v5281 : string = "vec![" + v52 + "]"
                    let v5282 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5281 
                    let v5283 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5284 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5282 v5283 
                    let v5285 : string = "class=\"flex flex-col [position:relative]\""
                    let v5286 : string = " " + v5285 + v52 + ""
                    let v5287 : string = "$0"
                    let v5288 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4726 v5287 
                    let v5289 : string = "$0"
                    let v5290 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v4729 v5289 
                    let v5291 : string = "class=\"[position:absolute] [right:0] [top:0]\""
                    let v5292 : string = " " + v5291 + v52 + ""
                    let v5293 : string = "v5284"
                    let v5294 : string = v5293 + v52 
                    let v5295 : string = v5294 + v52 
                    let v5296 : string = "vec![" + v5295 + "]"
                    let v5297 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5296 
                    let v5298 : string = "leptos::prelude::Fragment::new($0)"
                    let v5299 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5297 v5298 
                    let v5300 : string = "leptos::prelude::AnyView::from($0)"
                    let v5301 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5299 v5300 
                    let v5302 : string = "<" + v4742 + " " + v5292 + ">move || { v5301 }</" + v4742 + ">"
                    let v5303 : string = "leptos::prelude::view! { " + v5302 + " }"
                    let v5304 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5303 
                    let v5305 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5304 |> unbox
                    let v5306 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5307 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5305 v5306 
                    let v5308 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v5288(())"
                    let v5309 : string = "open=move || v5290(())"
                    let v5310 : string = " " + v5308 + v52 + ""
                    let v5311 : string = " " + v5309 + v5310 + ""
                    let v5312 : string = "$0"
                    let v5313 : (unit -> string) = closure243()
                    let v5314 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v5313 v5312 
                    let v5315 : string = "$0"
                    let v5316 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure244()
                    let v5317 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v5316 v5315 
                    let v5318 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v5317(()) + \" \" + &v5314(())"
                    let v5319 : string = " " + v5318 + v52 + ""
                    let v5320 : string = "class=\"flex items-center gap-2\""
                    let v5321 : string = " " + v5320 + v52 + ""
                    let v5322 : (unit -> string) = method237()
                    let v5323 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
                    let v5324 : string = " " + v5323 + v52 + ""
                    let v5325 : string = v5322 ()
                    (* run_target_args'
                    let v5330 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v5331 : string = "&*$0"
                    let v5332 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5325 v5331 
                    let _run_target_args'_v5330 = v5332 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v5333 : string = "&*$0"
                    let v5334 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5325 v5333 
                    let _run_target_args'_v5330 = v5334 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v5335 : string = "&*$0"
                    let v5336 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5325 v5335 
                    let _run_target_args'_v5330 = v5336 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v5338 : Ref<Str> = v5325 |> unbox<Ref<Str>>
                    let _run_target_args'_v5330 = v5338 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v5342 : Ref<Str> = v5325 |> unbox<Ref<Str>>
                    let _run_target_args'_v5330 = v5342 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v5346 : Ref<Str> = v5325 |> unbox<Ref<Str>>
                    let _run_target_args'_v5330 = v5346 
                    #endif
#else
                    let v5350 : Ref<Str> = v5325 |> unbox<Ref<Str>>
                    let _run_target_args'_v5330 = v5350 
                    #endif
                    let v5353 : Ref<Str> = _run_target_args'_v5330 
                    (* run_target_args'
                    let v5363 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v5364 : string = "String::from($0)"
                    let v5365 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5353 v5364 
                    let _run_target_args'_v5363 = v5365 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v5366 : string = "String::from($0)"
                    let v5367 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5353 v5366 
                    let _run_target_args'_v5363 = v5367 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v5368 : string = "String::from($0)"
                    let v5369 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5353 v5368 
                    let _run_target_args'_v5363 = v5369 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v5371 : std_string_String = v5353 |> unbox<std_string_String>
                    let _run_target_args'_v5363 = v5371 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v5375 : std_string_String = v5353 |> unbox<std_string_String>
                    let _run_target_args'_v5363 = v5375 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v5379 : std_string_String = v5353 |> unbox<std_string_String>
                    let _run_target_args'_v5363 = v5379 
                    #endif
#else
                    let v5383 : std_string_String = v5353 |> unbox<std_string_String>
                    let _run_target_args'_v5363 = v5383 
                    #endif
                    let v5386 : std_string_String = _run_target_args'_v5363 
                    let v5392 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v5393 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5386 v5392 
                    let v5394 : string = "v5393"
                    let v5395 : string = v5394 + v52 
                    let v5396 : string = v5395 + v52 
                    let v5397 : string = "vec![" + v5396 + "]"
                    let v5398 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5397 
                    let v5399 : string = "leptos::prelude::Fragment::new($0)"
                    let v5400 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5398 v5399 
                    let v5401 : string = "leptos::prelude::AnyView::from($0)"
                    let v5402 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5400 v5401 
                    let v5403 : string = "<" + v4844 + " " + v5324 + ">move || { v5402 }</" + v4844 + ">"
                    let v5404 : string = "leptos::prelude::view! { " + v5403 + " }"
                    let v5405 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5404 
                    let v5406 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v5405 |> unbox
                    let v5407 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5408 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5406 v5407 
                    let v5409 : string = "v5408"
                    let v5410 : string = v5409 + v52 
                    let v5411 : string = v5410 + v52 
                    let v5412 : string = "vec![" + v5411 + "]"
                    let v5413 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5412 
                    let v5414 : string = "leptos::prelude::Fragment::new($0)"
                    let v5415 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5413 v5414 
                    let v5416 : string = "leptos::prelude::AnyView::from($0)"
                    let v5417 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5415 v5416 
                    let v5418 : string = "<" + v4742 + " " + v5321 + ">move || { v5417 }</" + v4742 + ">"
                    let v5419 : string = "leptos::prelude::view! { " + v5418 + " }"
                    let v5420 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5419 
                    let v5421 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5420 |> unbox
                    let v5422 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5423 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5421 v5422 
                    let v5424 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
                    let v5425 : string = " " + v5424 + v52 + ""
                    let v5426 : string = "$0"
                    let v5427 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4869 v5426 
                    let v5428 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                    let v5429 : string = "viewBox=\"0 0 20 20\""
                    let v5430 : string = "fill=\"currentColor\""
                    let v5431 : string = "class=move || \" \".to_owned() + &v5427(())"
                    let v5432 : string = " " + v5428 + v52 + ""
                    let v5433 : string = " " + v5429 + v5432 + ""
                    let v5434 : string = " " + v5430 + v5433 + ""
                    let v5435 : string = " " + v5431 + v5434 + ""
                    let v5436 : string = "fill-rule=\"evenodd\""
                    let v5437 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
                    let v5438 : string = "clip-rule=\"evenodd\""
                    let v5439 : string = " " + v5436 + v52 + ""
                    let v5440 : string = " " + v5437 + v5439 + ""
                    let v5441 : string = " " + v5438 + v5440 + ""
                    let v5442 : string = "vec![" + v52 + "]"
                    let v5443 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5442 
                    let v5444 : string = "leptos::prelude::Fragment::new($0)"
                    let v5445 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5443 v5444 
                    let v5446 : string = "leptos::prelude::AnyView::from($0)"
                    let v5447 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5445 v5446 
                    let v5448 : string = "<" + v4671 + " " + v5441 + ">move || { v5447 }</" + v4671 + ">"
                    let v5449 : string = "leptos::prelude::view! { " + v5448 + " }"
                    let v5450 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5449 
                    let v5451 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v5450 |> unbox
                    let v5452 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5453 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5451 v5452 
                    let v5454 : string = "v5453"
                    let v5455 : string = v5454 + v52 
                    let v5456 : string = v5455 + v52 
                    let v5457 : string = "vec![" + v5456 + "]"
                    let v5458 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5457 
                    let v5459 : string = "leptos::prelude::Fragment::new($0)"
                    let v5460 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5458 v5459 
                    let v5461 : string = "leptos::prelude::AnyView::from($0)"
                    let v5462 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5460 v5461 
                    let v5463 : string = "<" + v4687 + " " + v5435 + ">move || { v5462 }</" + v4687 + ">"
                    let v5464 : string = "leptos::prelude::view! { " + v5463 + " }"
                    let v5465 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5464 
                    let v5466 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v5465 |> unbox
                    let v5467 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5468 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5466 v5467 
                    let v5469 : string = "v5468"
                    let v5470 : string = v5469 + v52 
                    let v5471 : string = v5470 + v52 
                    let v5472 : string = "vec![" + v5471 + "]"
                    let v5473 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5472 
                    let v5474 : string = "leptos::prelude::Fragment::new($0)"
                    let v5475 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5473 v5474 
                    let v5476 : string = "leptos::prelude::AnyView::from($0)"
                    let v5477 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5475 v5476 
                    let v5478 : string = "<" + v4844 + " " + v5425 + ">move || { v5477 }</" + v4844 + ">"
                    let v5479 : string = "leptos::prelude::view! { " + v5478 + " }"
                    let v5480 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5479 
                    let v5481 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v5480 |> unbox
                    let v5482 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5483 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5481 v5482 
                    let v5484 : string = "v5483"
                    let v5485 : string = v5484 + v52 
                    let v5486 : string = v5485 + v52 
                    let v5487 : string = "v5423"
                    let v5488 : string = v5487 + v4931 
                    let v5489 : string = v5488 + v5486 
                    let v5490 : string = "vec![" + v5489 + "]"
                    let v5491 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5490 
                    let v5492 : string = "leptos::prelude::Fragment::new($0)"
                    let v5493 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5491 v5492 
                    let v5494 : string = "leptos::prelude::AnyView::from($0)"
                    let v5495 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5493 v5494 
                    let v5496 : string = "<" + v4940 + " " + v5319 + ">move || { v5495 }</" + v4940 + ">"
                    let v5497 : string = "leptos::prelude::view! { " + v5496 + " }"
                    let v5498 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5497 
                    let v5499 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v5498 |> unbox
                    let v5500 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5501 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5499 v5500 
                    let v5502 : string = "class=\"flex flex-1 flex-col\""
                    let v5503 : string = " " + v5502 + v52 + ""
                    let v5504 : string = "Func0::new(move || $0())"
                    let v5505 : (unit -> leptos_dom_Fragment) = closure246()
                    let v5506 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v5505 v5504 
                    let v5507 : Func0<leptos_dom_Fragment> = method195(v5506)
                    let v5508 : string = "(move || v5507())()"
                    let v5509 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v5508 
                    let v5510 : string = "leptos::prelude::AnyView::from($0)"
                    let v5511 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5509 v5510 
                    let v5512 : string = "<" + v4742 + " " + v5503 + ">move || { v5511 }</" + v4742 + ">"
                    let v5513 : string = "leptos::prelude::view! { " + v5512 + " }"
                    let v5514 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5513 
                    let v5515 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5514 |> unbox
                    let v5516 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5517 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5515 v5516 
                    let v5518 : string = "v5517"
                    let v5519 : string = v5518 + v52 
                    let v5520 : string = v5519 + v52 
                    let v5521 : string = "v5501"
                    let v5522 : string = v5521 + v4931 
                    let v5523 : string = v5522 + v5520 
                    let v5524 : string = "vec![" + v5523 + "]"
                    let v5525 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5524 
                    let v5526 : string = "leptos::prelude::Fragment::new($0)"
                    let v5527 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5525 v5526 
                    let v5528 : string = "leptos::prelude::AnyView::from($0)"
                    let v5529 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5527 v5528 
                    let v5530 : string = "<" + v4975 + " " + v5311 + ">move || { v5529 }</" + v4975 + ">"
                    let v5531 : string = "leptos::prelude::view! { " + v5530 + " }"
                    let v5532 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5531 
                    let v5533 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v5532 |> unbox
                    let v5534 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5535 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5533 v5534 
                    let v5536 : string = "v5535"
                    let v5537 : string = v5536 + v52 
                    let v5538 : string = v5537 + v52 
                    let v5539 : string = "v5307"
                    let v5540 : string = v5539 + v4931 
                    let v5541 : string = v5540 + v5538 
                    let v5542 : string = "vec![" + v5541 + "]"
                    let v5543 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5542 
                    let v5544 : string = "leptos::prelude::Fragment::new($0)"
                    let v5545 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5543 v5544 
                    let v5546 : string = "leptos::prelude::AnyView::from($0)"
                    let v5547 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5545 v5546 
                    let v5548 : string = "<" + v4742 + " " + v5286 + ">move || { v5547 }</" + v4742 + ">"
                    let v5549 : string = "leptos::prelude::view! { " + v5548 + " }"
                    let v5550 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5549 
                    let v5551 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5550 |> unbox
                    let v5552 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5553 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5551 v5552 
                    v5553
                else
                    let v5554 : string = "vec![" + v52 + "]"
                    let v5555 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5554 
                    let v5556 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5557 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5555 v5556 
                    v5557
            let v5559 : string = "v5558"
            let v5560 : string = v5559 + v52 
            let v5561 : string = v5560 + v52 
            let v5562 : string = "v5272"
            let v5563 : string = v5562 + v4931 
            let v5564 : string = v5563 + v5561 
            let v5565 : string = "v4999"
            let v5566 : string = v5565 + v4931 
            let v5567 : string = v5566 + v5564 
            let v5568 : string = "vec![" + v5567 + "]"
            let v5569 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5568 
            let v5570 : string = "leptos::prelude::Fragment::new($0)"
            let v5571 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5569 v5570 
            US22_0(v5571)
        | US18_3 -> (* Transactions *)
            let v3857 : string = "transactions_view.render (1)"
            let v3858 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3859 : bool = Fable.Core.RustInterop.emitRustExpr v3857 v3858 
            let v3860 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
            let v3861 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v3860 
            let v3862 : string = "$0.unwrap()"
            let v3863 : Heap2 = Fable.Core.RustInterop.emitRustExpr v3861 v3862 
            let v3864 : string = "use_transactions.render (1)"
            let v3865 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3866 : bool = Fable.Core.RustInterop.emitRustExpr v3864 v3865 
            let v3867 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3868 : (unit -> Vec<string>) = closure44(v3863)
            let v3869 : leptos_prelude_ArcMemo<Vec<string>> = Fable.Core.RustInterop.emitRustExpr v3868 v3867 
            let v3870 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3871 : (unit -> (struct (string * US23 * string * bool * bool) [])) = closure46(v3869)
            let v3872 : leptos_prelude_ArcMemo<(struct (string * US23 * string * bool * bool) [])> = Fable.Core.RustInterop.emitRustExpr v3871 v3870 
            let v3873 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3874 : (unit -> Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>) = closure48(v3863, v3869)
            let v3875 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>> = Fable.Core.RustInterop.emitRustExpr v3874 v3873 
            let v3876 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3877 : (unit -> Vec<struct (string * US23 * string * bool * bool)>) = closure51(v3875)
            let v3878 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr v3877 v3876 
            let v3879 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3880 : (unit -> (string [])) = closure55(v3875)
            let v3881 : leptos_prelude_ArcMemo<(string [])> = Fable.Core.RustInterop.emitRustExpr v3880 v3879 
            let v3882 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) = closure60()
            let v3883 : leptos_prelude_ArcMemo<Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>> = method78(v3878, v3882)
            let v3885 : string = $"%A{v3883}"
            let v3888 : string = "use_transactions.render (7) / root func0 / result: " + string v3885 + ""
            let v3889 : int64 = 200L
            let v3890 : string = method8(v3889, v3888)
            let v3891 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3892 : bool = Fable.Core.RustInterop.emitRustExpr v3890 v3891 
            let v3893 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3894 : (unit -> Result<(struct (string * unativeint * Heap5) []) option, std_string_String>) = closure90(v3881, v3883)
            let v3895 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v3894 v3893 
            let v3896 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3897 : (unit -> Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String>) = closure107(v3895)
            let v3898 : leptos_prelude_ArcMemo<Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v3897 v3896 
            let v3899 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3900 : (unit -> Vec<struct (string * US23 * string * bool * bool)>) = closure115(v3898)
            let v3901 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr v3900 v3899 
            let v3902 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option)) = closure119()
            let v3903 : leptos_prelude_ArcMemo<Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>> = method159(v3901, v3902)
            let v3905 : string = $"%A{v3903}"
            let v3908 : string = "use_transactions.render (12) / rpc_response func0 / result: " + string v3905 + ""
            let v3909 : int64 = 200L
            let v3910 : string = method8(v3909, v3908)
            let v3911 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3912 : bool = Fable.Core.RustInterop.emitRustExpr v3910 v3911 
            let v3913 : string = $"leptos::prelude::signal($0)"
            let struct (v3914 : leptos_prelude_ReadSignal<bool>, v3915 : leptos_prelude_WriteSignal<bool>) = Fable.Core.RustInterop.emitRustExpr false v3913 
            let v3916 : (unit -> unit) = closure254(v3915)
            let v3917 : string = "let v3916 = $0"
            Fable.Core.RustInterop.emitRustExpr v3916 v3917 
            let v3918 : string = "$0"
            let v3919 : (unit -> string) = closure255()
            let v3920 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3919 v3918 
            let v3921 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v3922 : string = "fill=\"none\""
            let v3923 : string = "viewBox=\"0 0 24 24\""
            let v3924 : string = "stroke-width=\"1.5\""
            let v3925 : string = "stroke=\"currentColor\""
            let v3926 : string = "class=move || \" \".to_owned() + &v3920(())"
            let v3927 : string = " " + v3921 + v52 + ""
            let v3928 : string = " " + v3922 + v3927 + ""
            let v3929 : string = " " + v3923 + v3928 + ""
            let v3930 : string = " " + v3924 + v3929 + ""
            let v3931 : string = " " + v3925 + v3930 + ""
            let v3932 : string = " " + v3926 + v3931 + ""
            let v3933 : string = "stroke-linecap=\"round\""
            let v3934 : string = "stroke-linejoin=\"round\""
            let v3935 : string = "d=\"M10.343 3.94c.09-.542.56-.94 1.11-.94h1.093c.55 0 1.02.398 1.11.94l.149.894c.07.424.384.764.78.93.398.164.855.142 1.205-.108l.737-.527a1.125 1.125 0 011.45.12l.773.774c.39.389.44 1.002.12 1.45l-.527.737c-.25.35-.272.806-.107 1.204.165.397.505.71.93.78l.893.15c.543.09.94.56.94 1.109v1.094c0 .55-.397 1.02-.94 1.11l-.893.149c-.425.07-.765.383-.93.78-.165.398-.143.854.107 1.204l.527.738c.32.447.269 1.06-.12 1.45l-.774.773a1.125 1.125 0 01-1.449.12l-.738-.527c-.35-.25-.806-.272-1.203-.107-.397.165-.71.505-.781.929l-.149.894c-.09.542-.56.94-1.11.94h-1.094c-.55 0-1.019-.398-1.11-.94l-.148-.894c-.071-.424-.384-.764-.781-.93-.398-.164-.854-.142-1.204.108l-.738.527c-.447.32-1.06.269-1.45-.12l-.773-.774a1.125 1.125 0 01-.12-1.45l.527-.737c.25-.35.273-.806.108-1.204-.165-.397-.505-.71-.93-.78l-.894-.15c-.542-.09-.94-.56-.94-1.109v-1.094c0-.55.398-1.02.94-1.11l.894-.149c.424-.07.765-.383.93-.78.165-.398.143-.854-.107-1.204l-.527-.738a1.125 1.125 0 01.12-1.45l.773-.773a1.125 1.125 0 011.45-.12l.737.527c.35.25.807.272 1.204.107.397-.165.71-.505.78-.929l.15-.894z\""
            let v3936 : string = " " + v3933 + v52 + ""
            let v3937 : string = " " + v3934 + v3936 + ""
            let v3938 : string = " " + v3935 + v3937 + ""
            let v3939 : string = "vec![" + v52 + "]"
            let v3940 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3939 
            let v3941 : string = "leptos::prelude::Fragment::new($0)"
            let v3942 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3940 v3941 
            let v3943 : string = "leptos::prelude::AnyView::from($0)"
            let v3944 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3942 v3943 
            let v3945 : string = "path"
            let v3946 : string = "<" + v3945 + " " + v3938 + ">move || { v3944 }</" + v3945 + ">"
            let v3947 : string = "leptos::prelude::view! { " + v3946 + " }"
            let v3948 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3947 
            let v3949 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v3948 |> unbox
            let v3950 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3951 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3949 v3950 
            let v3952 : string = "stroke-linecap=\"round\""
            let v3953 : string = "stroke-linejoin=\"round\""
            let v3954 : string = "d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\""
            let v3955 : string = " " + v3952 + v52 + ""
            let v3956 : string = " " + v3953 + v3955 + ""
            let v3957 : string = " " + v3954 + v3956 + ""
            let v3958 : string = "vec![" + v52 + "]"
            let v3959 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3958 
            let v3960 : string = "leptos::prelude::Fragment::new($0)"
            let v3961 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3959 v3960 
            let v3962 : string = "leptos::prelude::AnyView::from($0)"
            let v3963 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3961 v3962 
            let v3964 : string = "<" + v3945 + " " + v3957 + ">move || { v3963 }</" + v3945 + ">"
            let v3965 : string = "leptos::prelude::view! { " + v3964 + " }"
            let v3966 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3965 
            let v3967 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v3966 |> unbox
            let v3968 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3969 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3967 v3968 
            let v3970 : string = "v3969"
            let v3971 : string = v3970 + v52 
            let v3972 : string = v3971 + v52 
            let v3973 : string = "v3951"
            let v3974 : string = ", "
            let v3975 : string = v3973 + v3974 
            let v3976 : string = v3975 + v3972 
            let v3977 : string = "vec![" + v3976 + "]"
            let v3978 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3977 
            let v3979 : string = "leptos::prelude::Fragment::new($0)"
            let v3980 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3978 v3979 
            let v3981 : string = "leptos::prelude::AnyView::from($0)"
            let v3982 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3980 v3981 
            let v3983 : string = "svg"
            let v3984 : string = "<" + v3983 + " " + v3932 + ">move || { v3982 }</" + v3983 + ">"
            let v3985 : string = "leptos::prelude::view! { " + v3984 + " }"
            let v3986 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3985 
            let v3987 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v3986 |> unbox
            let v3988 : string = "on:click=move |_| v3916()"
            let v3989 : string = "aria-label=\"Settings\""
            let v3990 : string = "$0"
            let v3991 : (unit -> std_string_String) = closure256(v3914)
            let v3992 : (unit -> std_string_String) = Fable.Core.RustInterop.emitRustExpr v3991 v3990 
            let v3993 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] pb-[8px] pt-[8px] px-[12px] \".to_owned() + &v3992(())"
            let v3994 : string = " " + v3993 + v52 + ""
            let v3995 : string = " " + v3988 + v3994 + ""
            let v3996 : string = " " + v3989 + v3995 + ""
            let v3997 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3998 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3987 v3997 
            let v3999 : string = "v3998"
            let v4000 : string = v3999 + v52 
            let v4001 : string = v4000 + v52 
            let v4002 : string = "vec![" + v4001 + "]"
            let v4003 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4002 
            let v4004 : string = "leptos::prelude::Fragment::new($0)"
            let v4005 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4003 v4004 
            let v4006 : string = "leptos::prelude::AnyView::from($0)"
            let v4007 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4005 v4006 
            let v4008 : string = "button"
            let v4009 : string = "<" + v4008 + " " + v3996 + ">move || { v4007 }</" + v4008 + ">"
            let v4010 : string = "leptos::prelude::view! { " + v4009 + " }"
            let v4011 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4010 
            let v4012 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Button>> = v4011 |> unbox
            let v4013 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4014 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4012 v4013 
            let v4015 : string = "vec![" + v52 + "]"
            let v4016 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4015 
            let v4017 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4018 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4016 v4017 
            let v4019 : string = "class=\"flex flex-col [position:relative]\""
            let v4020 : string = " " + v4019 + v52 + ""
            let v4021 : string = "$0"
            let v4022 : (unit -> string) = closure161()
            let v4023 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4022 v4021 
            let v4024 : string = "$0"
            let v4025 : (unit -> bool) = closure162()
            let v4026 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v4025 v4024 
            let v4027 : string = "class=\"[position:absolute] [right:0] [top:0]\""
            let v4028 : string = " " + v4027 + v52 + ""
            let v4029 : string = "v4014"
            let v4030 : string = v4029 + v52 
            let v4031 : string = v4030 + v52 
            let v4032 : string = "vec![" + v4031 + "]"
            let v4033 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4032 
            let v4034 : string = "leptos::prelude::Fragment::new($0)"
            let v4035 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4033 v4034 
            let v4036 : string = "leptos::prelude::AnyView::from($0)"
            let v4037 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4035 v4036 
            let v4038 : string = "div"
            let v4039 : string = "<" + v4038 + " " + v4028 + ">move || { v4037 }</" + v4038 + ">"
            let v4040 : string = "leptos::prelude::view! { " + v4039 + " }"
            let v4041 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4040 
            let v4042 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4041 |> unbox
            let v4043 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4044 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4042 v4043 
            let v4045 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v4023(())"
            let v4046 : string = "open=move || v4026(())"
            let v4047 : string = " " + v4045 + v52 + ""
            let v4048 : string = " " + v4046 + v4047 + ""
            let v4049 : string = "$0"
            let v4050 : (unit -> string) = closure257()
            let v4051 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4050 v4049 
            let v4052 : string = "$0"
            let v4053 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure258(v4014)
            let v4054 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v4053 v4052 
            let v4055 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v4054(()) + \" \" + &v4051(())"
            let v4056 : string = " " + v4055 + v52 + ""
            let v4057 : string = "class=\"flex items-center gap-2\""
            let v4058 : string = " " + v4057 + v52 + ""
            let v4059 : (unit -> string) = method243(v4014)
            let v4060 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
            let v4061 : string = " " + v4060 + v52 + ""
            let v4062 : string = v4059 ()
            (* run_target_args'
            let v4067 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v4068 : string = "&*$0"
            let v4069 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4062 v4068 
            let _run_target_args'_v4067 = v4069 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v4070 : string = "&*$0"
            let v4071 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4062 v4070 
            let _run_target_args'_v4067 = v4071 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v4072 : string = "&*$0"
            let v4073 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4062 v4072 
            let _run_target_args'_v4067 = v4073 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v4075 : Ref<Str> = v4062 |> unbox<Ref<Str>>
            let _run_target_args'_v4067 = v4075 
            #endif
#if FABLE_COMPILER_PYTHON
            let v4079 : Ref<Str> = v4062 |> unbox<Ref<Str>>
            let _run_target_args'_v4067 = v4079 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v4083 : Ref<Str> = v4062 |> unbox<Ref<Str>>
            let _run_target_args'_v4067 = v4083 
            #endif
#else
            let v4087 : Ref<Str> = v4062 |> unbox<Ref<Str>>
            let _run_target_args'_v4067 = v4087 
            #endif
            let v4090 : Ref<Str> = _run_target_args'_v4067 
            (* run_target_args'
            let v4100 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v4101 : string = "String::from($0)"
            let v4102 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4090 v4101 
            let _run_target_args'_v4100 = v4102 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v4103 : string = "String::from($0)"
            let v4104 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4090 v4103 
            let _run_target_args'_v4100 = v4104 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v4105 : string = "String::from($0)"
            let v4106 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4090 v4105 
            let _run_target_args'_v4100 = v4106 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v4108 : std_string_String = v4090 |> unbox<std_string_String>
            let _run_target_args'_v4100 = v4108 
            #endif
#if FABLE_COMPILER_PYTHON
            let v4112 : std_string_String = v4090 |> unbox<std_string_String>
            let _run_target_args'_v4100 = v4112 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v4116 : std_string_String = v4090 |> unbox<std_string_String>
            let _run_target_args'_v4100 = v4116 
            #endif
#else
            let v4120 : std_string_String = v4090 |> unbox<std_string_String>
            let _run_target_args'_v4100 = v4120 
            #endif
            let v4123 : std_string_String = _run_target_args'_v4100 
            let v4129 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v4130 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4123 v4129 
            let v4131 : string = "v4130"
            let v4132 : string = v4131 + v52 
            let v4133 : string = v4132 + v52 
            let v4134 : string = "vec![" + v4133 + "]"
            let v4135 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4134 
            let v4136 : string = "leptos::prelude::Fragment::new($0)"
            let v4137 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4135 v4136 
            let v4138 : string = "leptos::prelude::AnyView::from($0)"
            let v4139 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4137 v4138 
            let v4140 : string = "span"
            let v4141 : string = "<" + v4140 + " " + v4061 + ">move || { v4139 }</" + v4140 + ">"
            let v4142 : string = "leptos::prelude::view! { " + v4141 + " }"
            let v4143 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4142 
            let v4144 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4143 |> unbox
            let v4145 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4146 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4144 v4145 
            let v4147 : string = "v4146"
            let v4148 : string = v4147 + v52 
            let v4149 : string = v4148 + v52 
            let v4150 : string = "vec![" + v4149 + "]"
            let v4151 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4150 
            let v4152 : string = "leptos::prelude::Fragment::new($0)"
            let v4153 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4151 v4152 
            let v4154 : string = "leptos::prelude::AnyView::from($0)"
            let v4155 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4153 v4154 
            let v4156 : string = "<" + v4038 + " " + v4058 + ">move || { v4155 }</" + v4038 + ">"
            let v4157 : string = "leptos::prelude::view! { " + v4156 + " }"
            let v4158 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4157 
            let v4159 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4158 |> unbox
            let v4160 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4161 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4159 v4160 
            let v4162 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
            let v4163 : string = " " + v4162 + v52 + ""
            let v4164 : string = "$0"
            let v4165 : (unit -> string) = closure166()
            let v4166 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4165 v4164 
            let v4167 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v4168 : string = "viewBox=\"0 0 20 20\""
            let v4169 : string = "fill=\"currentColor\""
            let v4170 : string = "class=move || \" \".to_owned() + &v4166(())"
            let v4171 : string = " " + v4167 + v52 + ""
            let v4172 : string = " " + v4168 + v4171 + ""
            let v4173 : string = " " + v4169 + v4172 + ""
            let v4174 : string = " " + v4170 + v4173 + ""
            let v4175 : string = "fill-rule=\"evenodd\""
            let v4176 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
            let v4177 : string = "clip-rule=\"evenodd\""
            let v4178 : string = " " + v4175 + v52 + ""
            let v4179 : string = " " + v4176 + v4178 + ""
            let v4180 : string = " " + v4177 + v4179 + ""
            let v4181 : string = "vec![" + v52 + "]"
            let v4182 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4181 
            let v4183 : string = "leptos::prelude::Fragment::new($0)"
            let v4184 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4182 v4183 
            let v4185 : string = "leptos::prelude::AnyView::from($0)"
            let v4186 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4184 v4185 
            let v4187 : string = "<" + v3945 + " " + v4180 + ">move || { v4186 }</" + v3945 + ">"
            let v4188 : string = "leptos::prelude::view! { " + v4187 + " }"
            let v4189 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4188 
            let v4190 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4189 |> unbox
            let v4191 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4192 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4190 v4191 
            let v4193 : string = "v4192"
            let v4194 : string = v4193 + v52 
            let v4195 : string = v4194 + v52 
            let v4196 : string = "vec![" + v4195 + "]"
            let v4197 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4196 
            let v4198 : string = "leptos::prelude::Fragment::new($0)"
            let v4199 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4197 v4198 
            let v4200 : string = "leptos::prelude::AnyView::from($0)"
            let v4201 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4199 v4200 
            let v4202 : string = "<" + v3983 + " " + v4174 + ">move || { v4201 }</" + v3983 + ">"
            let v4203 : string = "leptos::prelude::view! { " + v4202 + " }"
            let v4204 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4203 
            let v4205 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4204 |> unbox
            let v4206 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4207 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4205 v4206 
            let v4208 : string = "v4207"
            let v4209 : string = v4208 + v52 
            let v4210 : string = v4209 + v52 
            let v4211 : string = "vec![" + v4210 + "]"
            let v4212 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4211 
            let v4213 : string = "leptos::prelude::Fragment::new($0)"
            let v4214 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4212 v4213 
            let v4215 : string = "leptos::prelude::AnyView::from($0)"
            let v4216 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4214 v4215 
            let v4217 : string = "<" + v4140 + " " + v4163 + ">move || { v4216 }</" + v4140 + ">"
            let v4218 : string = "leptos::prelude::view! { " + v4217 + " }"
            let v4219 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4218 
            let v4220 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4219 |> unbox
            let v4221 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4222 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4220 v4221 
            let v4223 : string = "v4222"
            let v4224 : string = v4223 + v52 
            let v4225 : string = v4224 + v52 
            let v4226 : string = "v4161"
            let v4227 : string = v4226 + v3974 
            let v4228 : string = v4227 + v4225 
            let v4229 : string = "vec![" + v4228 + "]"
            let v4230 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4229 
            let v4231 : string = "leptos::prelude::Fragment::new($0)"
            let v4232 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4230 v4231 
            let v4233 : string = "leptos::prelude::AnyView::from($0)"
            let v4234 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4232 v4233 
            let v4235 : string = "summary"
            let v4236 : string = "<" + v4235 + " " + v4056 + ">move || { v4234 }</" + v4235 + ">"
            let v4237 : string = "leptos::prelude::view! { " + v4236 + " }"
            let v4238 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4237 
            let v4239 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v4238 |> unbox
            let v4240 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4241 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4239 v4240 
            let v4242 : string = "class=\"flex flex-1 flex-col\""
            let v4243 : string = " " + v4242 + v52 + ""
            let v4244 : string = "Func0::new(move || $0())"
            let v4245 : (unit -> leptos_dom_Fragment) = closure260(v3863, v3895, v3875, v3914)
            let v4246 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v4245 v4244 
            let v4247 : Func0<leptos_dom_Fragment> = method195(v4246)
            let v4248 : string = "(move || v4247())()"
            let v4249 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v4248 
            let v4250 : string = "leptos::prelude::AnyView::from($0)"
            let v4251 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4249 v4250 
            let v4252 : string = "<" + v4038 + " " + v4243 + ">move || { v4251 }</" + v4038 + ">"
            let v4253 : string = "leptos::prelude::view! { " + v4252 + " }"
            let v4254 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4253 
            let v4255 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4254 |> unbox
            let v4256 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4257 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4255 v4256 
            let v4258 : string = "v4257"
            let v4259 : string = v4258 + v52 
            let v4260 : string = v4259 + v52 
            let v4261 : string = "v4241"
            let v4262 : string = v4261 + v3974 
            let v4263 : string = v4262 + v4260 
            let v4264 : string = "vec![" + v4263 + "]"
            let v4265 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4264 
            let v4266 : string = "leptos::prelude::Fragment::new($0)"
            let v4267 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4265 v4266 
            let v4268 : string = "leptos::prelude::AnyView::from($0)"
            let v4269 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4267 v4268 
            let v4270 : string = "details"
            let v4271 : string = "<" + v4270 + " " + v4048 + ">move || { v4269 }</" + v4270 + ">"
            let v4272 : string = "leptos::prelude::view! { " + v4271 + " }"
            let v4273 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4272 
            let v4274 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v4273 |> unbox
            let v4275 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4276 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4274 v4275 
            let v4277 : string = "v4276"
            let v4278 : string = v4277 + v52 
            let v4279 : string = v4278 + v52 
            let v4280 : string = "v4044"
            let v4281 : string = v4280 + v3974 
            let v4282 : string = v4281 + v4279 
            let v4283 : string = "vec![" + v4282 + "]"
            let v4284 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4283 
            let v4285 : string = "leptos::prelude::Fragment::new($0)"
            let v4286 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4284 v4285 
            let v4287 : string = "leptos::prelude::AnyView::from($0)"
            let v4288 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4286 v4287 
            let v4289 : string = "<" + v4038 + " " + v4020 + ">move || { v4288 }</" + v4038 + ">"
            let v4290 : string = "leptos::prelude::view! { " + v4289 + " }"
            let v4291 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4290 
            let v4292 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4291 |> unbox
            let v4293 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4294 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4292 v4293 
            let v4295 : leptos_prelude_ArcRwSignal<Heap1> = v3863.l0
            let v4296 : string = "Box::pin($0)"
            let v4297 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v4295 v4296 
            let v4298 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
            let v4299 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4297 v4298 
            let v4300 : leptos_prelude_ArcRwSignal<bool> = v4299.l1
            let v4301 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
            let v4302 : bool = Fable.Core.RustInterop.emitRustExpr v4300 v4301 
            let v4580 : leptos_prelude_AnyView_ =
                if v4302 then
                    let v4303 : string = "vec![" + v52 + "]"
                    let v4304 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4303 
                    let v4305 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4306 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4304 v4305 
                    let v4307 : string = "class=\"flex flex-col [position:relative]\""
                    let v4308 : string = " " + v4307 + v52 + ""
                    let v4309 : string = "$0"
                    let v4310 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4022 v4309 
                    let v4311 : string = "$0"
                    let v4312 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v4025 v4311 
                    let v4313 : string = "class=\"[position:absolute] [right:0] [top:0]\""
                    let v4314 : string = " " + v4313 + v52 + ""
                    let v4315 : string = "v4306"
                    let v4316 : string = v4315 + v52 
                    let v4317 : string = v4316 + v52 
                    let v4318 : string = "vec![" + v4317 + "]"
                    let v4319 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4318 
                    let v4320 : string = "leptos::prelude::Fragment::new($0)"
                    let v4321 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4319 v4320 
                    let v4322 : string = "leptos::prelude::AnyView::from($0)"
                    let v4323 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4321 v4322 
                    let v4324 : string = "<" + v4038 + " " + v4314 + ">move || { v4323 }</" + v4038 + ">"
                    let v4325 : string = "leptos::prelude::view! { " + v4324 + " }"
                    let v4326 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4325 
                    let v4327 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4326 |> unbox
                    let v4328 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4329 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4327 v4328 
                    let v4330 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v4310(())"
                    let v4331 : string = "open=move || v4312(())"
                    let v4332 : string = " " + v4330 + v52 + ""
                    let v4333 : string = " " + v4331 + v4332 + ""
                    let v4334 : string = "$0"
                    let v4335 : (unit -> string) = closure337()
                    let v4336 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4335 v4334 
                    let v4337 : string = "$0"
                    let v4338 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure338()
                    let v4339 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v4338 v4337 
                    let v4340 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v4339(()) + \" \" + &v4336(())"
                    let v4341 : string = " " + v4340 + v52 + ""
                    let v4342 : string = "class=\"flex items-center gap-2\""
                    let v4343 : string = " " + v4342 + v52 + ""
                    let v4344 : (unit -> string) = method282()
                    let v4345 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
                    let v4346 : string = " " + v4345 + v52 + ""
                    let v4347 : string = v4344 ()
                    (* run_target_args'
                    let v4352 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v4353 : string = "&*$0"
                    let v4354 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4347 v4353 
                    let _run_target_args'_v4352 = v4354 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v4355 : string = "&*$0"
                    let v4356 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4347 v4355 
                    let _run_target_args'_v4352 = v4356 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v4357 : string = "&*$0"
                    let v4358 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4347 v4357 
                    let _run_target_args'_v4352 = v4358 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v4360 : Ref<Str> = v4347 |> unbox<Ref<Str>>
                    let _run_target_args'_v4352 = v4360 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v4364 : Ref<Str> = v4347 |> unbox<Ref<Str>>
                    let _run_target_args'_v4352 = v4364 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v4368 : Ref<Str> = v4347 |> unbox<Ref<Str>>
                    let _run_target_args'_v4352 = v4368 
                    #endif
#else
                    let v4372 : Ref<Str> = v4347 |> unbox<Ref<Str>>
                    let _run_target_args'_v4352 = v4372 
                    #endif
                    let v4375 : Ref<Str> = _run_target_args'_v4352 
                    (* run_target_args'
                    let v4385 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v4386 : string = "String::from($0)"
                    let v4387 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4375 v4386 
                    let _run_target_args'_v4385 = v4387 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v4388 : string = "String::from($0)"
                    let v4389 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4375 v4388 
                    let _run_target_args'_v4385 = v4389 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v4390 : string = "String::from($0)"
                    let v4391 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4375 v4390 
                    let _run_target_args'_v4385 = v4391 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v4393 : std_string_String = v4375 |> unbox<std_string_String>
                    let _run_target_args'_v4385 = v4393 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v4397 : std_string_String = v4375 |> unbox<std_string_String>
                    let _run_target_args'_v4385 = v4397 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v4401 : std_string_String = v4375 |> unbox<std_string_String>
                    let _run_target_args'_v4385 = v4401 
                    #endif
#else
                    let v4405 : std_string_String = v4375 |> unbox<std_string_String>
                    let _run_target_args'_v4385 = v4405 
                    #endif
                    let v4408 : std_string_String = _run_target_args'_v4385 
                    let v4414 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v4415 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4408 v4414 
                    let v4416 : string = "v4415"
                    let v4417 : string = v4416 + v52 
                    let v4418 : string = v4417 + v52 
                    let v4419 : string = "vec![" + v4418 + "]"
                    let v4420 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4419 
                    let v4421 : string = "leptos::prelude::Fragment::new($0)"
                    let v4422 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4420 v4421 
                    let v4423 : string = "leptos::prelude::AnyView::from($0)"
                    let v4424 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4422 v4423 
                    let v4425 : string = "<" + v4140 + " " + v4346 + ">move || { v4424 }</" + v4140 + ">"
                    let v4426 : string = "leptos::prelude::view! { " + v4425 + " }"
                    let v4427 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4426 
                    let v4428 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4427 |> unbox
                    let v4429 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4430 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4428 v4429 
                    let v4431 : string = "v4430"
                    let v4432 : string = v4431 + v52 
                    let v4433 : string = v4432 + v52 
                    let v4434 : string = "vec![" + v4433 + "]"
                    let v4435 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4434 
                    let v4436 : string = "leptos::prelude::Fragment::new($0)"
                    let v4437 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4435 v4436 
                    let v4438 : string = "leptos::prelude::AnyView::from($0)"
                    let v4439 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4437 v4438 
                    let v4440 : string = "<" + v4038 + " " + v4343 + ">move || { v4439 }</" + v4038 + ">"
                    let v4441 : string = "leptos::prelude::view! { " + v4440 + " }"
                    let v4442 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4441 
                    let v4443 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4442 |> unbox
                    let v4444 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4445 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4443 v4444 
                    let v4446 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
                    let v4447 : string = " " + v4446 + v52 + ""
                    let v4448 : string = "$0"
                    let v4449 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4165 v4448 
                    let v4450 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                    let v4451 : string = "viewBox=\"0 0 20 20\""
                    let v4452 : string = "fill=\"currentColor\""
                    let v4453 : string = "class=move || \" \".to_owned() + &v4449(())"
                    let v4454 : string = " " + v4450 + v52 + ""
                    let v4455 : string = " " + v4451 + v4454 + ""
                    let v4456 : string = " " + v4452 + v4455 + ""
                    let v4457 : string = " " + v4453 + v4456 + ""
                    let v4458 : string = "fill-rule=\"evenodd\""
                    let v4459 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
                    let v4460 : string = "clip-rule=\"evenodd\""
                    let v4461 : string = " " + v4458 + v52 + ""
                    let v4462 : string = " " + v4459 + v4461 + ""
                    let v4463 : string = " " + v4460 + v4462 + ""
                    let v4464 : string = "vec![" + v52 + "]"
                    let v4465 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4464 
                    let v4466 : string = "leptos::prelude::Fragment::new($0)"
                    let v4467 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4465 v4466 
                    let v4468 : string = "leptos::prelude::AnyView::from($0)"
                    let v4469 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4467 v4468 
                    let v4470 : string = "<" + v3945 + " " + v4463 + ">move || { v4469 }</" + v3945 + ">"
                    let v4471 : string = "leptos::prelude::view! { " + v4470 + " }"
                    let v4472 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4471 
                    let v4473 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4472 |> unbox
                    let v4474 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4475 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4473 v4474 
                    let v4476 : string = "v4475"
                    let v4477 : string = v4476 + v52 
                    let v4478 : string = v4477 + v52 
                    let v4479 : string = "vec![" + v4478 + "]"
                    let v4480 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4479 
                    let v4481 : string = "leptos::prelude::Fragment::new($0)"
                    let v4482 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4480 v4481 
                    let v4483 : string = "leptos::prelude::AnyView::from($0)"
                    let v4484 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4482 v4483 
                    let v4485 : string = "<" + v3983 + " " + v4457 + ">move || { v4484 }</" + v3983 + ">"
                    let v4486 : string = "leptos::prelude::view! { " + v4485 + " }"
                    let v4487 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4486 
                    let v4488 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4487 |> unbox
                    let v4489 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4490 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4488 v4489 
                    let v4491 : string = "v4490"
                    let v4492 : string = v4491 + v52 
                    let v4493 : string = v4492 + v52 
                    let v4494 : string = "vec![" + v4493 + "]"
                    let v4495 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4494 
                    let v4496 : string = "leptos::prelude::Fragment::new($0)"
                    let v4497 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4495 v4496 
                    let v4498 : string = "leptos::prelude::AnyView::from($0)"
                    let v4499 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4497 v4498 
                    let v4500 : string = "<" + v4140 + " " + v4447 + ">move || { v4499 }</" + v4140 + ">"
                    let v4501 : string = "leptos::prelude::view! { " + v4500 + " }"
                    let v4502 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4501 
                    let v4503 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4502 |> unbox
                    let v4504 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4505 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4503 v4504 
                    let v4506 : string = "v4505"
                    let v4507 : string = v4506 + v52 
                    let v4508 : string = v4507 + v52 
                    let v4509 : string = "v4445"
                    let v4510 : string = v4509 + v3974 
                    let v4511 : string = v4510 + v4508 
                    let v4512 : string = "vec![" + v4511 + "]"
                    let v4513 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4512 
                    let v4514 : string = "leptos::prelude::Fragment::new($0)"
                    let v4515 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4513 v4514 
                    let v4516 : string = "leptos::prelude::AnyView::from($0)"
                    let v4517 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4515 v4516 
                    let v4518 : string = "<" + v4235 + " " + v4341 + ">move || { v4517 }</" + v4235 + ">"
                    let v4519 : string = "leptos::prelude::view! { " + v4518 + " }"
                    let v4520 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4519 
                    let v4521 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v4520 |> unbox
                    let v4522 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4523 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4521 v4522 
                    let v4524 : string = "class=\"flex flex-1 flex-col\""
                    let v4525 : string = " " + v4524 + v52 + ""
                    let v4526 : string = "Func0::new(move || $0())"
                    let v4527 : (unit -> leptos_dom_Fragment) = closure340(v3895)
                    let v4528 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v4527 v4526 
                    let v4529 : Func0<leptos_dom_Fragment> = method195(v4528)
                    let v4530 : string = "(move || v4529())()"
                    let v4531 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v4530 
                    let v4532 : string = "leptos::prelude::AnyView::from($0)"
                    let v4533 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4531 v4532 
                    let v4534 : string = "<" + v4038 + " " + v4525 + ">move || { v4533 }</" + v4038 + ">"
                    let v4535 : string = "leptos::prelude::view! { " + v4534 + " }"
                    let v4536 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4535 
                    let v4537 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4536 |> unbox
                    let v4538 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4539 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4537 v4538 
                    let v4540 : string = "v4539"
                    let v4541 : string = v4540 + v52 
                    let v4542 : string = v4541 + v52 
                    let v4543 : string = "v4523"
                    let v4544 : string = v4543 + v3974 
                    let v4545 : string = v4544 + v4542 
                    let v4546 : string = "vec![" + v4545 + "]"
                    let v4547 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4546 
                    let v4548 : string = "leptos::prelude::Fragment::new($0)"
                    let v4549 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4547 v4548 
                    let v4550 : string = "leptos::prelude::AnyView::from($0)"
                    let v4551 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4549 v4550 
                    let v4552 : string = "<" + v4270 + " " + v4333 + ">move || { v4551 }</" + v4270 + ">"
                    let v4553 : string = "leptos::prelude::view! { " + v4552 + " }"
                    let v4554 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4553 
                    let v4555 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v4554 |> unbox
                    let v4556 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4557 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4555 v4556 
                    let v4558 : string = "v4557"
                    let v4559 : string = v4558 + v52 
                    let v4560 : string = v4559 + v52 
                    let v4561 : string = "v4329"
                    let v4562 : string = v4561 + v3974 
                    let v4563 : string = v4562 + v4560 
                    let v4564 : string = "vec![" + v4563 + "]"
                    let v4565 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4564 
                    let v4566 : string = "leptos::prelude::Fragment::new($0)"
                    let v4567 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4565 v4566 
                    let v4568 : string = "leptos::prelude::AnyView::from($0)"
                    let v4569 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4567 v4568 
                    let v4570 : string = "<" + v4038 + " " + v4308 + ">move || { v4569 }</" + v4038 + ">"
                    let v4571 : string = "leptos::prelude::view! { " + v4570 + " }"
                    let v4572 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4571 
                    let v4573 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4572 |> unbox
                    let v4574 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4575 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4573 v4574 
                    v4575
                else
                    let v4576 : string = "vec![" + v52 + "]"
                    let v4577 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4576 
                    let v4578 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4579 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4577 v4578 
                    v4579
            let v4581 : string = "v4580"
            let v4582 : string = v4581 + v52 
            let v4583 : string = v4582 + v52 
            let v4584 : string = "v4294"
            let v4585 : string = v4584 + v3974 
            let v4586 : string = v4585 + v4583 
            let v4587 : string = "vec![" + v4586 + "]"
            let v4588 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4587 
            let v4589 : string = "leptos::prelude::Fragment::new($0)"
            let v4590 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4588 v4589 
            US22_0(v4590)
        | _ ->
            US22_1
    let v5595 : leptos_prelude_AnyView_ =
        match v5577 with
        | US22_1 -> (* None *)
            let v5590 : string = "vec![" + v52 + "]"
            let v5591 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5590 
            let v5592 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5593 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5591 v5592 
            v5593
        | US22_0(v5578) -> (* Some *)
            let v5579 : string = "class=\"flex flex-1 flex-col [overflow-y:auto]\""
            let v5580 : string = " " + v5579 + v52 + ""
            let v5581 : string = "leptos::prelude::AnyView::from($0)"
            let v5582 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5578 v5581 
            let v5583 : string = "div"
            let v5584 : string = "<" + v5583 + " " + v5580 + ">move || { v5582 }</" + v5583 + ">"
            let v5585 : string = "leptos::prelude::view! { " + v5584 + " }"
            let v5586 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5585 
            let v5587 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5586 |> unbox
            let v5588 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5589 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5587 v5588 
            v5589
    let v5596 : string = "v5595"
    let v5597 : string = v5596 + v52 
    let v5598 : string = v5597 + v52 
    let v5599 : string = "vec![" + v5598 + "]"
    let v5600 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5599 
    let v5601 : string = "leptos::prelude::Fragment::new($0)"
    let v5602 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5600 v5601 
    let v5603 : string = "leptos::prelude::AnyView::from($0)"
    let v5604 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5602 v5603 
    let v5605 : string = "main"
    let v5606 : string = "<" + v5605 + " " + v2232 + ">move || { v5604 }</" + v5605 + ">"
    let v5607 : string = "leptos::prelude::view! { " + v5606 + " }"
    let v5608 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5607 
    let v5609 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Main>> = v5608 |> unbox
    let v5610 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5611 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5609 v5610 
    let v5612 : string = "class=\"flex\""
    let v5613 : string = " " + v5612 + v52 + ""
    let v5614 : string = "menu_tabs.render ()"
    let v5615 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v5616 : bool = Fable.Core.RustInterop.emitRustExpr v5614 v5615 
    let v5617 : string = "leptos_router::hooks::use_location()"
    let v5618 : leptos_router_location_Location = Fable.Core.RustInterop.emitRustExpr () v5617 
    let v5619 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v5620 : (unit -> string) = closure41(v5618)
    let v5621 : leptos_prelude_ArcMemo<string> = Fable.Core.RustInterop.emitRustExpr v5620 v5619 
    let v5622 : string = "class=\"hidden\""
    let v5623 : string = " " + v5622 + v52 + ""
    let v5624 : string = "for=\"Tab\""
    let v5625 : string = "class=\"sr-only\""
    let v5626 : string = " " + v5624 + v52 + ""
    let v5627 : string = " " + v5625 + v5626 + ""
    let v5628 : string = "Tab"
    (* run_target_args'
    let v5633 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5634 : string = "&*$0"
    let v5635 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5628 v5634 
    let _run_target_args'_v5633 = v5635 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5636 : string = "&*$0"
    let v5637 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5628 v5636 
    let _run_target_args'_v5633 = v5637 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5638 : string = "&*$0"
    let v5639 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5628 v5638 
    let _run_target_args'_v5633 = v5639 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5641 : Ref<Str> = v5628 |> unbox<Ref<Str>>
    let _run_target_args'_v5633 = v5641 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5645 : Ref<Str> = v5628 |> unbox<Ref<Str>>
    let _run_target_args'_v5633 = v5645 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5649 : Ref<Str> = v5628 |> unbox<Ref<Str>>
    let _run_target_args'_v5633 = v5649 
    #endif
#else
    let v5653 : Ref<Str> = v5628 |> unbox<Ref<Str>>
    let _run_target_args'_v5633 = v5653 
    #endif
    let v5656 : Ref<Str> = _run_target_args'_v5633 
    (* run_target_args'
    let v5666 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5667 : string = "String::from($0)"
    let v5668 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5656 v5667 
    let _run_target_args'_v5666 = v5668 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5669 : string = "String::from($0)"
    let v5670 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5656 v5669 
    let _run_target_args'_v5666 = v5670 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5671 : string = "String::from($0)"
    let v5672 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5656 v5671 
    let _run_target_args'_v5666 = v5672 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5674 : std_string_String = v5656 |> unbox<std_string_String>
    let _run_target_args'_v5666 = v5674 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5678 : std_string_String = v5656 |> unbox<std_string_String>
    let _run_target_args'_v5666 = v5678 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5682 : std_string_String = v5656 |> unbox<std_string_String>
    let _run_target_args'_v5666 = v5682 
    #endif
#else
    let v5686 : std_string_String = v5656 |> unbox<std_string_String>
    let _run_target_args'_v5666 = v5686 
    #endif
    let v5689 : std_string_String = _run_target_args'_v5666 
    let v5695 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v5696 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5689 v5695 
    let v5697 : string = "v5696"
    let v5698 : string = v5697 + v52 
    let v5699 : string = v5698 + v52 
    let v5700 : string = "vec![" + v5699 + "]"
    let v5701 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5700 
    let v5702 : string = "leptos::prelude::Fragment::new($0)"
    let v5703 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5701 v5702 
    let v5704 : string = "leptos::prelude::AnyView::from($0)"
    let v5705 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5703 v5704 
    let v5706 : string = "label"
    let v5707 : string = "<" + v5706 + " " + v5627 + ">move || { v5705 }</" + v5706 + ">"
    let v5708 : string = "leptos::prelude::view! { " + v5707 + " }"
    let v5709 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5708 
    let v5710 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Label>> = v5709 |> unbox
    let v5711 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5712 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5710 v5711 
    let v5713 : string = "id=\"Tab\""
    let v5714 : string = "class=\"w-full rounded-md border-gray-200\""
    let v5715 : string = " " + v5713 + v52 + ""
    let v5716 : string = " " + v5714 + v5715 + ""
    let v5717 : (unit -> bool) = method285(v1868)
    let v5718 : string = "selected=v5717()"
    let v5719 : string = " " + v5718 + v52 + ""
    let v5720 : string = "Settings"
    (* run_target_args'
    let v5725 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5726 : string = "&*$0"
    let v5727 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5720 v5726 
    let _run_target_args'_v5725 = v5727 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5728 : string = "&*$0"
    let v5729 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5720 v5728 
    let _run_target_args'_v5725 = v5729 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5730 : string = "&*$0"
    let v5731 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5720 v5730 
    let _run_target_args'_v5725 = v5731 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5733 : Ref<Str> = v5720 |> unbox<Ref<Str>>
    let _run_target_args'_v5725 = v5733 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5737 : Ref<Str> = v5720 |> unbox<Ref<Str>>
    let _run_target_args'_v5725 = v5737 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5741 : Ref<Str> = v5720 |> unbox<Ref<Str>>
    let _run_target_args'_v5725 = v5741 
    #endif
#else
    let v5745 : Ref<Str> = v5720 |> unbox<Ref<Str>>
    let _run_target_args'_v5725 = v5745 
    #endif
    let v5748 : Ref<Str> = _run_target_args'_v5725 
    (* run_target_args'
    let v5758 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5759 : string = "String::from($0)"
    let v5760 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5748 v5759 
    let _run_target_args'_v5758 = v5760 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5761 : string = "String::from($0)"
    let v5762 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5748 v5761 
    let _run_target_args'_v5758 = v5762 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5763 : string = "String::from($0)"
    let v5764 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5748 v5763 
    let _run_target_args'_v5758 = v5764 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5766 : std_string_String = v5748 |> unbox<std_string_String>
    let _run_target_args'_v5758 = v5766 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5770 : std_string_String = v5748 |> unbox<std_string_String>
    let _run_target_args'_v5758 = v5770 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5774 : std_string_String = v5748 |> unbox<std_string_String>
    let _run_target_args'_v5758 = v5774 
    #endif
#else
    let v5778 : std_string_String = v5748 |> unbox<std_string_String>
    let _run_target_args'_v5758 = v5778 
    #endif
    let v5781 : std_string_String = _run_target_args'_v5758 
    let v5787 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v5788 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5781 v5787 
    let v5789 : string = "v5788"
    let v5790 : string = v5789 + v52 
    let v5791 : string = v5790 + v52 
    let v5792 : string = "vec![" + v5791 + "]"
    let v5793 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5792 
    let v5794 : string = "leptos::prelude::Fragment::new($0)"
    let v5795 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5793 v5794 
    let v5796 : string = "leptos::prelude::AnyView::from($0)"
    let v5797 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5795 v5796 
    let v5798 : string = "option"
    let v5799 : string = "<" + v5798 + " " + v5719 + ">move || { v5797 }</" + v5798 + ">"
    let v5800 : string = "leptos::prelude::view! { " + v5799 + " }"
    let v5801 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5800 
    let v5802 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Option>> = v5801 |> unbox
    let v5803 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5804 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5802 v5803 
    let v5805 : (unit -> bool) = method286(v1868)
    let v5806 : string = "selected=v5805()"
    let v5807 : string = " " + v5806 + v52 + ""
    let v5808 : string = "Transactions"
    (* run_target_args'
    let v5813 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5814 : string = "&*$0"
    let v5815 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5808 v5814 
    let _run_target_args'_v5813 = v5815 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5816 : string = "&*$0"
    let v5817 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5808 v5816 
    let _run_target_args'_v5813 = v5817 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5818 : string = "&*$0"
    let v5819 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5808 v5818 
    let _run_target_args'_v5813 = v5819 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5821 : Ref<Str> = v5808 |> unbox<Ref<Str>>
    let _run_target_args'_v5813 = v5821 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5825 : Ref<Str> = v5808 |> unbox<Ref<Str>>
    let _run_target_args'_v5813 = v5825 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5829 : Ref<Str> = v5808 |> unbox<Ref<Str>>
    let _run_target_args'_v5813 = v5829 
    #endif
#else
    let v5833 : Ref<Str> = v5808 |> unbox<Ref<Str>>
    let _run_target_args'_v5813 = v5833 
    #endif
    let v5836 : Ref<Str> = _run_target_args'_v5813 
    (* run_target_args'
    let v5846 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5847 : string = "String::from($0)"
    let v5848 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5836 v5847 
    let _run_target_args'_v5846 = v5848 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5849 : string = "String::from($0)"
    let v5850 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5836 v5849 
    let _run_target_args'_v5846 = v5850 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5851 : string = "String::from($0)"
    let v5852 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5836 v5851 
    let _run_target_args'_v5846 = v5852 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5854 : std_string_String = v5836 |> unbox<std_string_String>
    let _run_target_args'_v5846 = v5854 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5858 : std_string_String = v5836 |> unbox<std_string_String>
    let _run_target_args'_v5846 = v5858 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5862 : std_string_String = v5836 |> unbox<std_string_String>
    let _run_target_args'_v5846 = v5862 
    #endif
#else
    let v5866 : std_string_String = v5836 |> unbox<std_string_String>
    let _run_target_args'_v5846 = v5866 
    #endif
    let v5869 : std_string_String = _run_target_args'_v5846 
    let v5875 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v5876 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5869 v5875 
    let v5877 : string = "v5876"
    let v5878 : string = v5877 + v52 
    let v5879 : string = v5878 + v52 
    let v5880 : string = "vec![" + v5879 + "]"
    let v5881 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5880 
    let v5882 : string = "leptos::prelude::Fragment::new($0)"
    let v5883 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5881 v5882 
    let v5884 : string = "leptos::prelude::AnyView::from($0)"
    let v5885 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5883 v5884 
    let v5886 : string = "<" + v5798 + " " + v5807 + ">move || { v5885 }</" + v5798 + ">"
    let v5887 : string = "leptos::prelude::view! { " + v5886 + " }"
    let v5888 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5887 
    let v5889 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Option>> = v5888 |> unbox
    let v5890 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5891 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5889 v5890 
    let v5892 : (unit -> bool) = method287(v1868)
    let v5893 : string = "selected=v5892()"
    let v5894 : string = " " + v5893 + v52 + ""
    let v5895 : string = "Lists"
    (* run_target_args'
    let v5900 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5901 : string = "&*$0"
    let v5902 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5895 v5901 
    let _run_target_args'_v5900 = v5902 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5903 : string = "&*$0"
    let v5904 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5895 v5903 
    let _run_target_args'_v5900 = v5904 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5905 : string = "&*$0"
    let v5906 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5895 v5905 
    let _run_target_args'_v5900 = v5906 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5908 : Ref<Str> = v5895 |> unbox<Ref<Str>>
    let _run_target_args'_v5900 = v5908 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5912 : Ref<Str> = v5895 |> unbox<Ref<Str>>
    let _run_target_args'_v5900 = v5912 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5916 : Ref<Str> = v5895 |> unbox<Ref<Str>>
    let _run_target_args'_v5900 = v5916 
    #endif
#else
    let v5920 : Ref<Str> = v5895 |> unbox<Ref<Str>>
    let _run_target_args'_v5900 = v5920 
    #endif
    let v5923 : Ref<Str> = _run_target_args'_v5900 
    (* run_target_args'
    let v5933 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5934 : string = "String::from($0)"
    let v5935 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5923 v5934 
    let _run_target_args'_v5933 = v5935 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5936 : string = "String::from($0)"
    let v5937 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5923 v5936 
    let _run_target_args'_v5933 = v5937 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5938 : string = "String::from($0)"
    let v5939 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5923 v5938 
    let _run_target_args'_v5933 = v5939 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5941 : std_string_String = v5923 |> unbox<std_string_String>
    let _run_target_args'_v5933 = v5941 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5945 : std_string_String = v5923 |> unbox<std_string_String>
    let _run_target_args'_v5933 = v5945 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5949 : std_string_String = v5923 |> unbox<std_string_String>
    let _run_target_args'_v5933 = v5949 
    #endif
#else
    let v5953 : std_string_String = v5923 |> unbox<std_string_String>
    let _run_target_args'_v5933 = v5953 
    #endif
    let v5956 : std_string_String = _run_target_args'_v5933 
    let v5962 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v5963 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5956 v5962 
    let v5964 : string = "v5963"
    let v5965 : string = v5964 + v52 
    let v5966 : string = v5965 + v52 
    let v5967 : string = "vec![" + v5966 + "]"
    let v5968 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5967 
    let v5969 : string = "leptos::prelude::Fragment::new($0)"
    let v5970 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5968 v5969 
    let v5971 : string = "leptos::prelude::AnyView::from($0)"
    let v5972 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5970 v5971 
    let v5973 : string = "<" + v5798 + " " + v5894 + ">move || { v5972 }</" + v5798 + ">"
    let v5974 : string = "leptos::prelude::view! { " + v5973 + " }"
    let v5975 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5974 
    let v5976 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Option>> = v5975 |> unbox
    let v5977 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5978 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5976 v5977 
    let v5979 : (unit -> bool) = method288(v1868)
    let v5980 : string = "selected=v5979()"
    let v5981 : string = " " + v5980 + v52 + ""
    let v5982 : string = "Dice"
    (* run_target_args'
    let v5987 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5988 : string = "&*$0"
    let v5989 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5982 v5988 
    let _run_target_args'_v5987 = v5989 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5990 : string = "&*$0"
    let v5991 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5982 v5990 
    let _run_target_args'_v5987 = v5991 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5992 : string = "&*$0"
    let v5993 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5982 v5992 
    let _run_target_args'_v5987 = v5993 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5995 : Ref<Str> = v5982 |> unbox<Ref<Str>>
    let _run_target_args'_v5987 = v5995 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5999 : Ref<Str> = v5982 |> unbox<Ref<Str>>
    let _run_target_args'_v5987 = v5999 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6003 : Ref<Str> = v5982 |> unbox<Ref<Str>>
    let _run_target_args'_v5987 = v6003 
    #endif
#else
    let v6007 : Ref<Str> = v5982 |> unbox<Ref<Str>>
    let _run_target_args'_v5987 = v6007 
    #endif
    let v6010 : Ref<Str> = _run_target_args'_v5987 
    (* run_target_args'
    let v6020 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6021 : string = "String::from($0)"
    let v6022 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6010 v6021 
    let _run_target_args'_v6020 = v6022 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6023 : string = "String::from($0)"
    let v6024 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6010 v6023 
    let _run_target_args'_v6020 = v6024 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6025 : string = "String::from($0)"
    let v6026 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6010 v6025 
    let _run_target_args'_v6020 = v6026 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6028 : std_string_String = v6010 |> unbox<std_string_String>
    let _run_target_args'_v6020 = v6028 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6032 : std_string_String = v6010 |> unbox<std_string_String>
    let _run_target_args'_v6020 = v6032 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6036 : std_string_String = v6010 |> unbox<std_string_String>
    let _run_target_args'_v6020 = v6036 
    #endif
#else
    let v6040 : std_string_String = v6010 |> unbox<std_string_String>
    let _run_target_args'_v6020 = v6040 
    #endif
    let v6043 : std_string_String = _run_target_args'_v6020 
    let v6049 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v6050 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6043 v6049 
    let v6051 : string = "v6050"
    let v6052 : string = v6051 + v52 
    let v6053 : string = v6052 + v52 
    let v6054 : string = "vec![" + v6053 + "]"
    let v6055 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6054 
    let v6056 : string = "leptos::prelude::Fragment::new($0)"
    let v6057 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6055 v6056 
    let v6058 : string = "leptos::prelude::AnyView::from($0)"
    let v6059 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6057 v6058 
    let v6060 : string = "<" + v5798 + " " + v5981 + ">move || { v6059 }</" + v5798 + ">"
    let v6061 : string = "leptos::prelude::view! { " + v6060 + " }"
    let v6062 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6061 
    let v6063 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Option>> = v6062 |> unbox
    let v6064 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6065 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6063 v6064 
    let v6066 : string = "v5804"
    let v6067 : string = v6066 + v52 
    let v6068 : string = v6067 + v52 
    let v6069 : string = "v5891"
    let v6070 : string = ", "
    let v6071 : string = v6069 + v6070 
    let v6072 : string = v6071 + v6068 
    let v6073 : string = "v5978"
    let v6074 : string = v6073 + v6070 
    let v6075 : string = v6074 + v6072 
    let v6076 : string = "v6065"
    let v6077 : string = v6076 + v6070 
    let v6078 : string = v6077 + v6075 
    let v6079 : string = "vec![" + v6078 + "]"
    let v6080 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6079 
    let v6081 : string = "leptos::prelude::Fragment::new($0)"
    let v6082 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6080 v6081 
    let v6083 : string = "leptos::prelude::AnyView::from($0)"
    let v6084 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6082 v6083 
    let v6085 : string = "select"
    let v6086 : string = "<" + v6085 + " " + v5716 + ">move || { v6084 }</" + v6085 + ">"
    let v6087 : string = "leptos::prelude::view! { " + v6086 + " }"
    let v6088 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6087 
    let v6089 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Select>> = v6088 |> unbox
    let v6090 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6091 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6089 v6090 
    let v6092 : string = "v6091"
    let v6093 : string = v6092 + v52 
    let v6094 : string = v6093 + v52 
    let v6095 : string = "v5712"
    let v6096 : string = v6095 + v6070 
    let v6097 : string = v6096 + v6094 
    let v6098 : string = "vec![" + v6097 + "]"
    let v6099 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6098 
    let v6100 : string = "leptos::prelude::Fragment::new($0)"
    let v6101 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6099 v6100 
    let v6102 : string = "leptos::prelude::AnyView::from($0)"
    let v6103 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6101 v6102 
    let v6104 : string = "div"
    let v6105 : string = "<" + v6104 + " " + v5623 + ">move || { v6103 }</" + v6104 + ">"
    let v6106 : string = "leptos::prelude::view! { " + v6105 + " }"
    let v6107 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6106 
    let v6108 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v6107 |> unbox
    let v6109 : string = "class=\"flex flex-1 [overflow-x:auto] [overflow-y:hidden]\""
    let v6110 : string = " " + v6109 + v52 + ""
    let v6111 : string = "class=\"flex flex-1 border-t border-gray-200\""
    let v6112 : string = " " + v6111 + v52 + ""
    let v6113 : string = "class=\"-mb-px flex [flex-flow:wrap] [flex-grow:1] [flex-shrink:0] gap-[3px] [overflow-wrap:anywhere]\""
    let v6114 : string = "aria-label=\"Tabs\""
    let v6115 : string = " " + v6113 + v52 + ""
    let v6116 : string = " " + v6114 + v6115 + ""
    let v6117 : string = "$0"
    let v6118 : (unit -> string) = closure348()
    let v6119 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v6118 v6117 
    let v6120 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v6121 : string = "fill=\"none\""
    let v6122 : string = "viewBox=\"0 0 24 24\""
    let v6123 : string = "stroke-width=\"1.5\""
    let v6124 : string = "stroke=\"currentColor\""
    let v6125 : string = "class=move || \" \".to_owned() + &v6119(())"
    let v6126 : string = " " + v6120 + v52 + ""
    let v6127 : string = " " + v6121 + v6126 + ""
    let v6128 : string = " " + v6122 + v6127 + ""
    let v6129 : string = " " + v6123 + v6128 + ""
    let v6130 : string = " " + v6124 + v6129 + ""
    let v6131 : string = " " + v6125 + v6130 + ""
    let v6132 : string = "stroke-linecap=\"round\""
    let v6133 : string = "stroke-linejoin=\"round\""
    let v6134 : string = "d=\"M10.343 3.94c.09-.542.56-.94 1.11-.94h1.093c.55 0 1.02.398 1.11.94l.149.894c.07.424.384.764.78.93.398.164.855.142 1.205-.108l.737-.527a1.125 1.125 0 011.45.12l.773.774c.39.389.44 1.002.12 1.45l-.527.737c-.25.35-.272.806-.107 1.204.165.397.505.71.93.78l.893.15c.543.09.94.56.94 1.109v1.094c0 .55-.397 1.02-.94 1.11l-.893.149c-.425.07-.765.383-.93.78-.165.398-.143.854.107 1.204l.527.738c.32.447.269 1.06-.12 1.45l-.774.773a1.125 1.125 0 01-1.449.12l-.738-.527c-.35-.25-.806-.272-1.203-.107-.397.165-.71.505-.781.929l-.149.894c-.09.542-.56.94-1.11.94h-1.094c-.55 0-1.019-.398-1.11-.94l-.148-.894c-.071-.424-.384-.764-.781-.93-.398-.164-.854-.142-1.204.108l-.738.527c-.447.32-1.06.269-1.45-.12l-.773-.774a1.125 1.125 0 01-.12-1.45l.527-.737c.25-.35.273-.806.108-1.204-.165-.397-.505-.71-.93-.78l-.894-.15c-.542-.09-.94-.56-.94-1.109v-1.094c0-.55.398-1.02.94-1.11l.894-.149c.424-.07.765-.383.93-.78.165-.398.143-.854-.107-1.204l-.527-.738a1.125 1.125 0 01.12-1.45l.773-.773a1.125 1.125 0 011.45-.12l.737.527c.35.25.807.272 1.204.107.397-.165.71-.505.78-.929l.15-.894z\""
    let v6135 : string = " " + v6132 + v52 + ""
    let v6136 : string = " " + v6133 + v6135 + ""
    let v6137 : string = " " + v6134 + v6136 + ""
    let v6138 : string = "vec![" + v52 + "]"
    let v6139 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6138 
    let v6140 : string = "leptos::prelude::Fragment::new($0)"
    let v6141 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6139 v6140 
    let v6142 : string = "leptos::prelude::AnyView::from($0)"
    let v6143 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6141 v6142 
    let v6144 : string = "path"
    let v6145 : string = "<" + v6144 + " " + v6137 + ">move || { v6143 }</" + v6144 + ">"
    let v6146 : string = "leptos::prelude::view! { " + v6145 + " }"
    let v6147 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6146 
    let v6148 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v6147 |> unbox
    let v6149 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6150 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6148 v6149 
    let v6151 : string = "stroke-linecap=\"round\""
    let v6152 : string = "stroke-linejoin=\"round\""
    let v6153 : string = "d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\""
    let v6154 : string = " " + v6151 + v52 + ""
    let v6155 : string = " " + v6152 + v6154 + ""
    let v6156 : string = " " + v6153 + v6155 + ""
    let v6157 : string = "vec![" + v52 + "]"
    let v6158 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6157 
    let v6159 : string = "leptos::prelude::Fragment::new($0)"
    let v6160 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6158 v6159 
    let v6161 : string = "leptos::prelude::AnyView::from($0)"
    let v6162 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6160 v6161 
    let v6163 : string = "<" + v6144 + " " + v6156 + ">move || { v6162 }</" + v6144 + ">"
    let v6164 : string = "leptos::prelude::view! { " + v6163 + " }"
    let v6165 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6164 
    let v6166 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v6165 |> unbox
    let v6167 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6168 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6166 v6167 
    let v6169 : string = "v6168"
    let v6170 : string = v6169 + v52 
    let v6171 : string = v6170 + v52 
    let v6172 : string = "v6150"
    let v6173 : string = v6172 + v6070 
    let v6174 : string = v6173 + v6171 
    let v6175 : string = "vec![" + v6174 + "]"
    let v6176 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6175 
    let v6177 : string = "leptos::prelude::Fragment::new($0)"
    let v6178 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6176 v6177 
    let v6179 : string = "leptos::prelude::AnyView::from($0)"
    let v6180 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6178 v6179 
    let v6181 : string = "svg"
    let v6182 : string = "<" + v6181 + " " + v6131 + ">move || { v6180 }</" + v6181 + ">"
    let v6183 : string = "leptos::prelude::view! { " + v6182 + " }"
    let v6184 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6183 
    let v6185 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v6184 |> unbox
    let v6186 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6187 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6185 v6186 
    let v6188 : string = "v6187"
    let v6189 : string = v6188 + v52 
    let v6190 : string = v6189 + v52 
    let v6191 : string = "vec![" + v6190 + "]"
    let v6192 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6191 
    let v6193 : string = "leptos::prelude::Fragment::new($0)"
    let v6194 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6192 v6193 
    let v6195 : (unit -> std_string_String) = closure349(v5621)
    let v6196 : string = "let v6195 = $0"
    Fable.Core.RustInterop.emitRustExpr v6195 v6196 
    let v6197 : string = "$0"
    let v6198 : (unit -> bool) = closure350(v1868)
    let v6199 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v6198 v6197 
    let v6200 : string = "$0"
    let v6201 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure351(v1868)
    let v6202 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v6201 v6200 
    let v6203 : string = "href=move || v6195()"
    let v6204 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] flex-1 gap-2 border-t-2 [white-space:nowrap] mb-[11px] pt-[8px] pr-[15px] pl-[15px] text-sm font-medium \".to_owned() + v6202(())"
    let v6205 : string = "aria-current=move || if v6199(()) { \"page\" } else { \"\" }"
    let v6206 : string = " " + v6203 + v52 + ""
    let v6207 : string = " " + v6204 + v6206 + ""
    let v6208 : string = " " + v6205 + v6207 + ""
    let v6209 : string = "leptos::prelude::AnyView::from($0)"
    let v6210 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6194 v6209 
    (* run_target_args'
    let v6215 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6216 : string = "&*$0"
    let v6217 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5720 v6216 
    let _run_target_args'_v6215 = v6217 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6218 : string = "&*$0"
    let v6219 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5720 v6218 
    let _run_target_args'_v6215 = v6219 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6220 : string = "&*$0"
    let v6221 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5720 v6220 
    let _run_target_args'_v6215 = v6221 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6223 : Ref<Str> = v5720 |> unbox<Ref<Str>>
    let _run_target_args'_v6215 = v6223 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6227 : Ref<Str> = v5720 |> unbox<Ref<Str>>
    let _run_target_args'_v6215 = v6227 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6231 : Ref<Str> = v5720 |> unbox<Ref<Str>>
    let _run_target_args'_v6215 = v6231 
    #endif
#else
    let v6235 : Ref<Str> = v5720 |> unbox<Ref<Str>>
    let _run_target_args'_v6215 = v6235 
    #endif
    let v6238 : Ref<Str> = _run_target_args'_v6215 
    (* run_target_args'
    let v6248 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6249 : string = "String::from($0)"
    let v6250 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6238 v6249 
    let _run_target_args'_v6248 = v6250 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6251 : string = "String::from($0)"
    let v6252 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6238 v6251 
    let _run_target_args'_v6248 = v6252 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6253 : string = "String::from($0)"
    let v6254 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6238 v6253 
    let _run_target_args'_v6248 = v6254 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6256 : std_string_String = v6238 |> unbox<std_string_String>
    let _run_target_args'_v6248 = v6256 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6260 : std_string_String = v6238 |> unbox<std_string_String>
    let _run_target_args'_v6248 = v6260 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6264 : std_string_String = v6238 |> unbox<std_string_String>
    let _run_target_args'_v6248 = v6264 
    #endif
#else
    let v6268 : std_string_String = v6238 |> unbox<std_string_String>
    let _run_target_args'_v6248 = v6268 
    #endif
    let v6271 : std_string_String = _run_target_args'_v6248 
    let v6277 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v6278 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6271 v6277 
    let v6279 : string = "v6278"
    let v6280 : string = v6279 + v52 
    let v6281 : string = v6280 + v52 
    let v6282 : string = "v6210"
    let v6283 : string = v6282 + v6070 
    let v6284 : string = v6283 + v6281 
    let v6285 : string = "vec![" + v6284 + "]"
    let v6286 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6285 
    let v6287 : string = "leptos::prelude::Fragment::new($0)"
    let v6288 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6286 v6287 
    let v6289 : string = "leptos::prelude::AnyView::from($0)"
    let v6290 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6288 v6289 
    let v6291 : string = "a"
    let v6292 : string = "<" + v6291 + " " + v6208 + ">move || { v6290 }</" + v6291 + ">"
    let v6293 : string = "leptos::prelude::view! { " + v6292 + " }"
    let v6294 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6293 
    let v6295 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_A>> = v6294 |> unbox
    let v6296 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6297 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6295 v6296 
    let v6298 : string = "$0"
    let v6299 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v6118 v6298 
    let v6300 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v6301 : string = "fill=\"none\""
    let v6302 : string = "height=\"100%\""
    let v6303 : string = "viewBox=\"0 0 24 24\""
    let v6304 : string = "stroke-width=\"1.5\""
    let v6305 : string = "stroke=\"currentColor\""
    let v6306 : string = "class=move || \"text-gray-700 \".to_owned() + &v6299(())"
    let v6307 : string = " " + v6300 + v52 + ""
    let v6308 : string = " " + v6301 + v6307 + ""
    let v6309 : string = " " + v6302 + v6308 + ""
    let v6310 : string = " " + v6303 + v6309 + ""
    let v6311 : string = " " + v6304 + v6310 + ""
    let v6312 : string = " " + v6305 + v6311 + ""
    let v6313 : string = " " + v6306 + v6312 + ""
    let v6314 : string = "stroke-linecap=\"round\""
    let v6315 : string = "stroke-linejoin=\"round\""
    let v6316 : string = "d=\"M4 12h16m-7-7l7 7-7 7m-2-14l-7 7 7 7\""
    let v6317 : string = " " + v6314 + v52 + ""
    let v6318 : string = " " + v6315 + v6317 + ""
    let v6319 : string = " " + v6316 + v6318 + ""
    let v6320 : string = "vec![" + v52 + "]"
    let v6321 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6320 
    let v6322 : string = "leptos::prelude::Fragment::new($0)"
    let v6323 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6321 v6322 
    let v6324 : string = "leptos::prelude::AnyView::from($0)"
    let v6325 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6323 v6324 
    let v6326 : string = "<" + v6144 + " " + v6319 + ">move || { v6325 }</" + v6144 + ">"
    let v6327 : string = "leptos::prelude::view! { " + v6326 + " }"
    let v6328 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6327 
    let v6329 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v6328 |> unbox
    let v6330 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6331 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6329 v6330 
    let v6332 : string = "v6331"
    let v6333 : string = v6332 + v52 
    let v6334 : string = v6333 + v52 
    let v6335 : string = "vec![" + v6334 + "]"
    let v6336 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6335 
    let v6337 : string = "leptos::prelude::Fragment::new($0)"
    let v6338 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6336 v6337 
    let v6339 : string = "leptos::prelude::AnyView::from($0)"
    let v6340 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6338 v6339 
    let v6341 : string = "<" + v6181 + " " + v6313 + ">move || { v6340 }</" + v6181 + ">"
    let v6342 : string = "leptos::prelude::view! { " + v6341 + " }"
    let v6343 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6342 
    let v6344 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v6343 |> unbox
    let v6345 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6346 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6344 v6345 
    let v6347 : string = "v6346"
    let v6348 : string = v6347 + v52 
    let v6349 : string = v6348 + v52 
    let v6350 : string = "vec![" + v6349 + "]"
    let v6351 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6350 
    let v6352 : string = "leptos::prelude::Fragment::new($0)"
    let v6353 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6351 v6352 
    let v6354 : (unit -> std_string_String) = closure352(v5621)
    let v6355 : string = "let v6354 = $0"
    Fable.Core.RustInterop.emitRustExpr v6354 v6355 
    let v6356 : string = "$0"
    let v6357 : (unit -> bool) = closure353(v1868)
    let v6358 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v6357 v6356 
    let v6359 : string = "$0"
    let v6360 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure354(v1868)
    let v6361 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v6360 v6359 
    let v6362 : string = "href=move || v6354()"
    let v6363 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] flex-1 gap-2 border-t-2 [white-space:nowrap] mb-[11px] pt-[8px] pr-[15px] pl-[15px] text-sm font-medium \".to_owned() + v6361(())"
    let v6364 : string = "aria-current=move || if v6358(()) { \"page\" } else { \"\" }"
    let v6365 : string = " " + v6362 + v52 + ""
    let v6366 : string = " " + v6363 + v6365 + ""
    let v6367 : string = " " + v6364 + v6366 + ""
    let v6368 : string = "leptos::prelude::AnyView::from($0)"
    let v6369 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6353 v6368 
    (* run_target_args'
    let v6374 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6375 : string = "&*$0"
    let v6376 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5808 v6375 
    let _run_target_args'_v6374 = v6376 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6377 : string = "&*$0"
    let v6378 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5808 v6377 
    let _run_target_args'_v6374 = v6378 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6379 : string = "&*$0"
    let v6380 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5808 v6379 
    let _run_target_args'_v6374 = v6380 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6382 : Ref<Str> = v5808 |> unbox<Ref<Str>>
    let _run_target_args'_v6374 = v6382 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6386 : Ref<Str> = v5808 |> unbox<Ref<Str>>
    let _run_target_args'_v6374 = v6386 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6390 : Ref<Str> = v5808 |> unbox<Ref<Str>>
    let _run_target_args'_v6374 = v6390 
    #endif
#else
    let v6394 : Ref<Str> = v5808 |> unbox<Ref<Str>>
    let _run_target_args'_v6374 = v6394 
    #endif
    let v6397 : Ref<Str> = _run_target_args'_v6374 
    (* run_target_args'
    let v6407 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6408 : string = "String::from($0)"
    let v6409 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6397 v6408 
    let _run_target_args'_v6407 = v6409 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6410 : string = "String::from($0)"
    let v6411 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6397 v6410 
    let _run_target_args'_v6407 = v6411 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6412 : string = "String::from($0)"
    let v6413 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6397 v6412 
    let _run_target_args'_v6407 = v6413 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6415 : std_string_String = v6397 |> unbox<std_string_String>
    let _run_target_args'_v6407 = v6415 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6419 : std_string_String = v6397 |> unbox<std_string_String>
    let _run_target_args'_v6407 = v6419 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6423 : std_string_String = v6397 |> unbox<std_string_String>
    let _run_target_args'_v6407 = v6423 
    #endif
#else
    let v6427 : std_string_String = v6397 |> unbox<std_string_String>
    let _run_target_args'_v6407 = v6427 
    #endif
    let v6430 : std_string_String = _run_target_args'_v6407 
    let v6436 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v6437 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6430 v6436 
    let v6438 : string = "v6437"
    let v6439 : string = v6438 + v52 
    let v6440 : string = v6439 + v52 
    let v6441 : string = "v6369"
    let v6442 : string = v6441 + v6070 
    let v6443 : string = v6442 + v6440 
    let v6444 : string = "vec![" + v6443 + "]"
    let v6445 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6444 
    let v6446 : string = "leptos::prelude::Fragment::new($0)"
    let v6447 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6445 v6446 
    let v6448 : string = "leptos::prelude::AnyView::from($0)"
    let v6449 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6447 v6448 
    let v6450 : string = "<" + v6291 + " " + v6367 + ">move || { v6449 }</" + v6291 + ">"
    let v6451 : string = "leptos::prelude::view! { " + v6450 + " }"
    let v6452 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6451 
    let v6453 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_A>> = v6452 |> unbox
    let v6454 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6455 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6453 v6454 
    let v6456 : string = "$0"
    let v6457 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v6118 v6456 
    let v6458 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v6459 : string = "fill=\"none\""
    let v6460 : string = "height=\"100%\""
    let v6461 : string = "viewBox=\"0 0 24 24\""
    let v6462 : string = "stroke-width=\"1.5\""
    let v6463 : string = "stroke=\"currentColor\""
    let v6464 : string = "class=move || \"text-gray-700 \".to_owned() + &v6457(())"
    let v6465 : string = " " + v6458 + v52 + ""
    let v6466 : string = " " + v6459 + v6465 + ""
    let v6467 : string = " " + v6460 + v6466 + ""
    let v6468 : string = " " + v6461 + v6467 + ""
    let v6469 : string = " " + v6462 + v6468 + ""
    let v6470 : string = " " + v6463 + v6469 + ""
    let v6471 : string = " " + v6464 + v6470 + ""
    let v6472 : string = "stroke-linecap=\"round\""
    let v6473 : string = "stroke-linejoin=\"round\""
    let v6474 : string = "d=\"M4.75 6.75h14.5M4.75 12h14.5M4.75 17.25h14.5\""
    let v6475 : string = " " + v6472 + v52 + ""
    let v6476 : string = " " + v6473 + v6475 + ""
    let v6477 : string = " " + v6474 + v6476 + ""
    let v6478 : string = "vec![" + v52 + "]"
    let v6479 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6478 
    let v6480 : string = "leptos::prelude::Fragment::new($0)"
    let v6481 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6479 v6480 
    let v6482 : string = "leptos::prelude::AnyView::from($0)"
    let v6483 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6481 v6482 
    let v6484 : string = "<" + v6144 + " " + v6477 + ">move || { v6483 }</" + v6144 + ">"
    let v6485 : string = "leptos::prelude::view! { " + v6484 + " }"
    let v6486 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6485 
    let v6487 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v6486 |> unbox
    let v6488 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6489 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6487 v6488 
    let v6490 : string = "cx=\"3\""
    let v6491 : string = "cy=\"6.75\""
    let v6492 : string = "r=\"1\""
    let v6493 : string = "fill=\"currentColor\""
    let v6494 : string = " " + v6490 + v52 + ""
    let v6495 : string = " " + v6491 + v6494 + ""
    let v6496 : string = " " + v6492 + v6495 + ""
    let v6497 : string = " " + v6493 + v6496 + ""
    let v6498 : string = "vec![" + v52 + "]"
    let v6499 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6498 
    let v6500 : string = "leptos::prelude::Fragment::new($0)"
    let v6501 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6499 v6500 
    let v6502 : string = "leptos::prelude::AnyView::from($0)"
    let v6503 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6501 v6502 
    let v6504 : string = "circle"
    let v6505 : string = "<" + v6504 + " " + v6497 + ">move || { v6503 }</" + v6504 + ">"
    let v6506 : string = "leptos::prelude::view! { " + v6505 + " }"
    let v6507 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6506 
    let v6508 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6507 |> unbox
    let v6509 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6510 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6508 v6509 
    let v6511 : string = "cx=\"3\""
    let v6512 : string = "cy=\"12\""
    let v6513 : string = "r=\"1\""
    let v6514 : string = "fill=\"currentColor\""
    let v6515 : string = " " + v6511 + v52 + ""
    let v6516 : string = " " + v6512 + v6515 + ""
    let v6517 : string = " " + v6513 + v6516 + ""
    let v6518 : string = " " + v6514 + v6517 + ""
    let v6519 : string = "vec![" + v52 + "]"
    let v6520 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6519 
    let v6521 : string = "leptos::prelude::Fragment::new($0)"
    let v6522 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6520 v6521 
    let v6523 : string = "leptos::prelude::AnyView::from($0)"
    let v6524 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6522 v6523 
    let v6525 : string = "<" + v6504 + " " + v6518 + ">move || { v6524 }</" + v6504 + ">"
    let v6526 : string = "leptos::prelude::view! { " + v6525 + " }"
    let v6527 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6526 
    let v6528 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6527 |> unbox
    let v6529 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6530 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6528 v6529 
    let v6531 : string = "cx=\"3\""
    let v6532 : string = "cy=\"17.25\""
    let v6533 : string = "r=\"1\""
    let v6534 : string = "fill=\"currentColor\""
    let v6535 : string = " " + v6531 + v52 + ""
    let v6536 : string = " " + v6532 + v6535 + ""
    let v6537 : string = " " + v6533 + v6536 + ""
    let v6538 : string = " " + v6534 + v6537 + ""
    let v6539 : string = "vec![" + v52 + "]"
    let v6540 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6539 
    let v6541 : string = "leptos::prelude::Fragment::new($0)"
    let v6542 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6540 v6541 
    let v6543 : string = "leptos::prelude::AnyView::from($0)"
    let v6544 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6542 v6543 
    let v6545 : string = "<" + v6504 + " " + v6538 + ">move || { v6544 }</" + v6504 + ">"
    let v6546 : string = "leptos::prelude::view! { " + v6545 + " }"
    let v6547 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6546 
    let v6548 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6547 |> unbox
    let v6549 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6550 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6548 v6549 
    let v6551 : string = "v6550"
    let v6552 : string = v6551 + v52 
    let v6553 : string = v6552 + v52 
    let v6554 : string = "v6530"
    let v6555 : string = v6554 + v6070 
    let v6556 : string = v6555 + v6553 
    let v6557 : string = "v6510"
    let v6558 : string = v6557 + v6070 
    let v6559 : string = v6558 + v6556 
    let v6560 : string = "v6489"
    let v6561 : string = v6560 + v6070 
    let v6562 : string = v6561 + v6559 
    let v6563 : string = "vec![" + v6562 + "]"
    let v6564 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6563 
    let v6565 : string = "leptos::prelude::Fragment::new($0)"
    let v6566 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6564 v6565 
    let v6567 : string = "leptos::prelude::AnyView::from($0)"
    let v6568 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6566 v6567 
    let v6569 : string = "<" + v6181 + " " + v6471 + ">move || { v6568 }</" + v6181 + ">"
    let v6570 : string = "leptos::prelude::view! { " + v6569 + " }"
    let v6571 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6570 
    let v6572 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v6571 |> unbox
    let v6573 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6574 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6572 v6573 
    let v6575 : string = "v6574"
    let v6576 : string = v6575 + v52 
    let v6577 : string = v6576 + v52 
    let v6578 : string = "vec![" + v6577 + "]"
    let v6579 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6578 
    let v6580 : string = "leptos::prelude::Fragment::new($0)"
    let v6581 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6579 v6580 
    let v6582 : (unit -> std_string_String) = closure355(v5621)
    let v6583 : string = "let v6582 = $0"
    Fable.Core.RustInterop.emitRustExpr v6582 v6583 
    let v6584 : string = "$0"
    let v6585 : (unit -> bool) = closure356(v1868)
    let v6586 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v6585 v6584 
    let v6587 : string = "$0"
    let v6588 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure357(v1868)
    let v6589 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v6588 v6587 
    let v6590 : string = "href=move || v6582()"
    let v6591 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] flex-1 gap-2 border-t-2 [white-space:nowrap] mb-[11px] pt-[8px] pr-[15px] pl-[15px] text-sm font-medium \".to_owned() + v6589(())"
    let v6592 : string = "aria-current=move || if v6586(()) { \"page\" } else { \"\" }"
    let v6593 : string = " " + v6590 + v52 + ""
    let v6594 : string = " " + v6591 + v6593 + ""
    let v6595 : string = " " + v6592 + v6594 + ""
    let v6596 : string = "leptos::prelude::AnyView::from($0)"
    let v6597 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6581 v6596 
    (* run_target_args'
    let v6602 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6603 : string = "&*$0"
    let v6604 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5895 v6603 
    let _run_target_args'_v6602 = v6604 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6605 : string = "&*$0"
    let v6606 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5895 v6605 
    let _run_target_args'_v6602 = v6606 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6607 : string = "&*$0"
    let v6608 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5895 v6607 
    let _run_target_args'_v6602 = v6608 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6610 : Ref<Str> = v5895 |> unbox<Ref<Str>>
    let _run_target_args'_v6602 = v6610 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6614 : Ref<Str> = v5895 |> unbox<Ref<Str>>
    let _run_target_args'_v6602 = v6614 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6618 : Ref<Str> = v5895 |> unbox<Ref<Str>>
    let _run_target_args'_v6602 = v6618 
    #endif
#else
    let v6622 : Ref<Str> = v5895 |> unbox<Ref<Str>>
    let _run_target_args'_v6602 = v6622 
    #endif
    let v6625 : Ref<Str> = _run_target_args'_v6602 
    (* run_target_args'
    let v6635 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6636 : string = "String::from($0)"
    let v6637 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6625 v6636 
    let _run_target_args'_v6635 = v6637 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6638 : string = "String::from($0)"
    let v6639 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6625 v6638 
    let _run_target_args'_v6635 = v6639 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6640 : string = "String::from($0)"
    let v6641 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6625 v6640 
    let _run_target_args'_v6635 = v6641 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6643 : std_string_String = v6625 |> unbox<std_string_String>
    let _run_target_args'_v6635 = v6643 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6647 : std_string_String = v6625 |> unbox<std_string_String>
    let _run_target_args'_v6635 = v6647 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6651 : std_string_String = v6625 |> unbox<std_string_String>
    let _run_target_args'_v6635 = v6651 
    #endif
#else
    let v6655 : std_string_String = v6625 |> unbox<std_string_String>
    let _run_target_args'_v6635 = v6655 
    #endif
    let v6658 : std_string_String = _run_target_args'_v6635 
    let v6664 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v6665 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6658 v6664 
    let v6666 : string = "v6665"
    let v6667 : string = v6666 + v52 
    let v6668 : string = v6667 + v52 
    let v6669 : string = "v6597"
    let v6670 : string = v6669 + v6070 
    let v6671 : string = v6670 + v6668 
    let v6672 : string = "vec![" + v6671 + "]"
    let v6673 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6672 
    let v6674 : string = "leptos::prelude::Fragment::new($0)"
    let v6675 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6673 v6674 
    let v6676 : string = "leptos::prelude::AnyView::from($0)"
    let v6677 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6675 v6676 
    let v6678 : string = "<" + v6291 + " " + v6595 + ">move || { v6677 }</" + v6291 + ">"
    let v6679 : string = "leptos::prelude::view! { " + v6678 + " }"
    let v6680 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6679 
    let v6681 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_A>> = v6680 |> unbox
    let v6682 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6683 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6681 v6682 
    let v6684 : string = "$0"
    let v6685 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v6118 v6684 
    let v6686 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v6687 : string = "fill=\"none\""
    let v6688 : string = "viewBox=\"0 0 24 24\""
    let v6689 : string = "stroke-width=\"1.5\""
    let v6690 : string = "stroke=\"currentColor\""
    let v6691 : string = "class=move || \" \".to_owned() + &v6685(())"
    let v6692 : string = " " + v6686 + v52 + ""
    let v6693 : string = " " + v6687 + v6692 + ""
    let v6694 : string = " " + v6688 + v6693 + ""
    let v6695 : string = " " + v6689 + v6694 + ""
    let v6696 : string = " " + v6690 + v6695 + ""
    let v6697 : string = " " + v6691 + v6696 + ""
    let v6698 : string = "x=\"3\""
    let v6699 : string = "y=\"3\""
    let v6700 : string = "width=\"18\""
    let v6701 : string = "height=\"18\""
    let v6702 : string = "rx=\"2\""
    let v6703 : string = "stroke-linecap=\"round\""
    let v6704 : string = "stroke-linejoin=\"round\""
    let v6705 : string = " " + v6698 + v52 + ""
    let v6706 : string = " " + v6699 + v6705 + ""
    let v6707 : string = " " + v6700 + v6706 + ""
    let v6708 : string = " " + v6701 + v6707 + ""
    let v6709 : string = " " + v6702 + v6708 + ""
    let v6710 : string = " " + v6703 + v6709 + ""
    let v6711 : string = " " + v6704 + v6710 + ""
    let v6712 : string = "vec![" + v52 + "]"
    let v6713 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6712 
    let v6714 : string = "leptos::prelude::Fragment::new($0)"
    let v6715 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6713 v6714 
    let v6716 : string = "leptos::prelude::AnyView::from($0)"
    let v6717 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6715 v6716 
    let v6718 : string = "rect"
    let v6719 : string = "<" + v6718 + " " + v6711 + ">move || { v6717 }</" + v6718 + ">"
    let v6720 : string = "leptos::prelude::view! { " + v6719 + " }"
    let v6721 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6720 
    let v6722 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v6721 |> unbox
    let v6723 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6724 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6722 v6723 
    let v6725 : string = "cx=\"7.5\""
    let v6726 : string = "cy=\"7.5\""
    let v6727 : string = "r=\"1.5\""
    let v6728 : string = "fill=\"currentColor\""
    let v6729 : string = " " + v6725 + v52 + ""
    let v6730 : string = " " + v6726 + v6729 + ""
    let v6731 : string = " " + v6727 + v6730 + ""
    let v6732 : string = " " + v6728 + v6731 + ""
    let v6733 : string = "vec![" + v52 + "]"
    let v6734 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6733 
    let v6735 : string = "leptos::prelude::Fragment::new($0)"
    let v6736 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6734 v6735 
    let v6737 : string = "leptos::prelude::AnyView::from($0)"
    let v6738 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6736 v6737 
    let v6739 : string = "<" + v6504 + " " + v6732 + ">move || { v6738 }</" + v6504 + ">"
    let v6740 : string = "leptos::prelude::view! { " + v6739 + " }"
    let v6741 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6740 
    let v6742 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6741 |> unbox
    let v6743 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6744 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6742 v6743 
    let v6745 : string = "cx=\"16.5\""
    let v6746 : string = "cy=\"7.5\""
    let v6747 : string = "r=\"1.5\""
    let v6748 : string = "fill=\"currentColor\""
    let v6749 : string = " " + v6745 + v52 + ""
    let v6750 : string = " " + v6746 + v6749 + ""
    let v6751 : string = " " + v6747 + v6750 + ""
    let v6752 : string = " " + v6748 + v6751 + ""
    let v6753 : string = "vec![" + v52 + "]"
    let v6754 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6753 
    let v6755 : string = "leptos::prelude::Fragment::new($0)"
    let v6756 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6754 v6755 
    let v6757 : string = "leptos::prelude::AnyView::from($0)"
    let v6758 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6756 v6757 
    let v6759 : string = "<" + v6504 + " " + v6752 + ">move || { v6758 }</" + v6504 + ">"
    let v6760 : string = "leptos::prelude::view! { " + v6759 + " }"
    let v6761 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6760 
    let v6762 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6761 |> unbox
    let v6763 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6764 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6762 v6763 
    let v6765 : string = "cx=\"12\""
    let v6766 : string = "cy=\"12\""
    let v6767 : string = "r=\"1.5\""
    let v6768 : string = "fill=\"currentColor\""
    let v6769 : string = " " + v6765 + v52 + ""
    let v6770 : string = " " + v6766 + v6769 + ""
    let v6771 : string = " " + v6767 + v6770 + ""
    let v6772 : string = " " + v6768 + v6771 + ""
    let v6773 : string = "vec![" + v52 + "]"
    let v6774 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6773 
    let v6775 : string = "leptos::prelude::Fragment::new($0)"
    let v6776 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6774 v6775 
    let v6777 : string = "leptos::prelude::AnyView::from($0)"
    let v6778 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6776 v6777 
    let v6779 : string = "<" + v6504 + " " + v6772 + ">move || { v6778 }</" + v6504 + ">"
    let v6780 : string = "leptos::prelude::view! { " + v6779 + " }"
    let v6781 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6780 
    let v6782 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6781 |> unbox
    let v6783 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6784 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6782 v6783 
    let v6785 : string = "cx=\"7.5\""
    let v6786 : string = "cy=\"16.5\""
    let v6787 : string = "r=\"1.5\""
    let v6788 : string = "fill=\"currentColor\""
    let v6789 : string = " " + v6785 + v52 + ""
    let v6790 : string = " " + v6786 + v6789 + ""
    let v6791 : string = " " + v6787 + v6790 + ""
    let v6792 : string = " " + v6788 + v6791 + ""
    let v6793 : string = "vec![" + v52 + "]"
    let v6794 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6793 
    let v6795 : string = "leptos::prelude::Fragment::new($0)"
    let v6796 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6794 v6795 
    let v6797 : string = "leptos::prelude::AnyView::from($0)"
    let v6798 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6796 v6797 
    let v6799 : string = "<" + v6504 + " " + v6792 + ">move || { v6798 }</" + v6504 + ">"
    let v6800 : string = "leptos::prelude::view! { " + v6799 + " }"
    let v6801 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6800 
    let v6802 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6801 |> unbox
    let v6803 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6804 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6802 v6803 
    let v6805 : string = "cx=\"16.5\""
    let v6806 : string = "cy=\"16.5\""
    let v6807 : string = "r=\"1.5\""
    let v6808 : string = "fill=\"currentColor\""
    let v6809 : string = " " + v6805 + v52 + ""
    let v6810 : string = " " + v6806 + v6809 + ""
    let v6811 : string = " " + v6807 + v6810 + ""
    let v6812 : string = " " + v6808 + v6811 + ""
    let v6813 : string = "vec![" + v52 + "]"
    let v6814 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6813 
    let v6815 : string = "leptos::prelude::Fragment::new($0)"
    let v6816 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6814 v6815 
    let v6817 : string = "leptos::prelude::AnyView::from($0)"
    let v6818 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6816 v6817 
    let v6819 : string = "<" + v6504 + " " + v6812 + ">move || { v6818 }</" + v6504 + ">"
    let v6820 : string = "leptos::prelude::view! { " + v6819 + " }"
    let v6821 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6820 
    let v6822 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6821 |> unbox
    let v6823 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6824 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6822 v6823 
    let v6825 : string = "v6824"
    let v6826 : string = v6825 + v52 
    let v6827 : string = v6826 + v52 
    let v6828 : string = "v6804"
    let v6829 : string = v6828 + v6070 
    let v6830 : string = v6829 + v6827 
    let v6831 : string = "v6784"
    let v6832 : string = v6831 + v6070 
    let v6833 : string = v6832 + v6830 
    let v6834 : string = "v6764"
    let v6835 : string = v6834 + v6070 
    let v6836 : string = v6835 + v6833 
    let v6837 : string = "v6744"
    let v6838 : string = v6837 + v6070 
    let v6839 : string = v6838 + v6836 
    let v6840 : string = "v6724"
    let v6841 : string = v6840 + v6070 
    let v6842 : string = v6841 + v6839 
    let v6843 : string = "vec![" + v6842 + "]"
    let v6844 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6843 
    let v6845 : string = "leptos::prelude::Fragment::new($0)"
    let v6846 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6844 v6845 
    let v6847 : string = "leptos::prelude::AnyView::from($0)"
    let v6848 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6846 v6847 
    let v6849 : string = "<" + v6181 + " " + v6697 + ">move || { v6848 }</" + v6181 + ">"
    let v6850 : string = "leptos::prelude::view! { " + v6849 + " }"
    let v6851 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6850 
    let v6852 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v6851 |> unbox
    let v6853 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6854 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6852 v6853 
    let v6855 : string = "v6854"
    let v6856 : string = v6855 + v52 
    let v6857 : string = v6856 + v52 
    let v6858 : string = "vec![" + v6857 + "]"
    let v6859 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6858 
    let v6860 : string = "leptos::prelude::Fragment::new($0)"
    let v6861 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6859 v6860 
    let v6862 : (unit -> std_string_String) = closure358(v5621)
    let v6863 : string = "let v6862 = $0"
    Fable.Core.RustInterop.emitRustExpr v6862 v6863 
    let v6864 : string = "$0"
    let v6865 : (unit -> bool) = closure359(v1868)
    let v6866 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v6865 v6864 
    let v6867 : string = "$0"
    let v6868 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure360(v1868)
    let v6869 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v6868 v6867 
    let v6870 : string = "href=move || v6862()"
    let v6871 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] flex-1 gap-2 border-t-2 [white-space:nowrap] mb-[11px] pt-[8px] pr-[15px] pl-[15px] text-sm font-medium \".to_owned() + v6869(())"
    let v6872 : string = "aria-current=move || if v6866(()) { \"page\" } else { \"\" }"
    let v6873 : string = " " + v6870 + v52 + ""
    let v6874 : string = " " + v6871 + v6873 + ""
    let v6875 : string = " " + v6872 + v6874 + ""
    let v6876 : string = "leptos::prelude::AnyView::from($0)"
    let v6877 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6861 v6876 
    (* run_target_args'
    let v6882 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6883 : string = "&*$0"
    let v6884 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5982 v6883 
    let _run_target_args'_v6882 = v6884 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6885 : string = "&*$0"
    let v6886 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5982 v6885 
    let _run_target_args'_v6882 = v6886 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6887 : string = "&*$0"
    let v6888 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5982 v6887 
    let _run_target_args'_v6882 = v6888 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6890 : Ref<Str> = v5982 |> unbox<Ref<Str>>
    let _run_target_args'_v6882 = v6890 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6894 : Ref<Str> = v5982 |> unbox<Ref<Str>>
    let _run_target_args'_v6882 = v6894 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6898 : Ref<Str> = v5982 |> unbox<Ref<Str>>
    let _run_target_args'_v6882 = v6898 
    #endif
#else
    let v6902 : Ref<Str> = v5982 |> unbox<Ref<Str>>
    let _run_target_args'_v6882 = v6902 
    #endif
    let v6905 : Ref<Str> = _run_target_args'_v6882 
    (* run_target_args'
    let v6915 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6916 : string = "String::from($0)"
    let v6917 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6905 v6916 
    let _run_target_args'_v6915 = v6917 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6918 : string = "String::from($0)"
    let v6919 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6905 v6918 
    let _run_target_args'_v6915 = v6919 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6920 : string = "String::from($0)"
    let v6921 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6905 v6920 
    let _run_target_args'_v6915 = v6921 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6923 : std_string_String = v6905 |> unbox<std_string_String>
    let _run_target_args'_v6915 = v6923 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6927 : std_string_String = v6905 |> unbox<std_string_String>
    let _run_target_args'_v6915 = v6927 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6931 : std_string_String = v6905 |> unbox<std_string_String>
    let _run_target_args'_v6915 = v6931 
    #endif
#else
    let v6935 : std_string_String = v6905 |> unbox<std_string_String>
    let _run_target_args'_v6915 = v6935 
    #endif
    let v6938 : std_string_String = _run_target_args'_v6915 
    let v6944 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v6945 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6938 v6944 
    let v6946 : string = "v6945"
    let v6947 : string = v6946 + v52 
    let v6948 : string = v6947 + v52 
    let v6949 : string = "v6877"
    let v6950 : string = v6949 + v6070 
    let v6951 : string = v6950 + v6948 
    let v6952 : string = "vec![" + v6951 + "]"
    let v6953 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6952 
    let v6954 : string = "leptos::prelude::Fragment::new($0)"
    let v6955 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6953 v6954 
    let v6956 : string = "leptos::prelude::AnyView::from($0)"
    let v6957 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6955 v6956 
    let v6958 : string = "<" + v6291 + " " + v6875 + ">move || { v6957 }</" + v6291 + ">"
    let v6959 : string = "leptos::prelude::view! { " + v6958 + " }"
    let v6960 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6959 
    let v6961 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_A>> = v6960 |> unbox
    let v6962 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6963 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6961 v6962 
    let v6964 : string = "v6297"
    let v6965 : string = v6964 + v52 
    let v6966 : string = v6965 + v52 
    let v6967 : string = "v6455"
    let v6968 : string = v6967 + v6070 
    let v6969 : string = v6968 + v6966 
    let v6970 : string = "v6683"
    let v6971 : string = v6970 + v6070 
    let v6972 : string = v6971 + v6969 
    let v6973 : string = "v6963"
    let v6974 : string = v6973 + v6070 
    let v6975 : string = v6974 + v6972 
    let v6976 : string = "vec![" + v6975 + "]"
    let v6977 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6976 
    let v6978 : string = "leptos::prelude::Fragment::new($0)"
    let v6979 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6977 v6978 
    let v6980 : string = "leptos::prelude::AnyView::from($0)"
    let v6981 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6979 v6980 
    let v6982 : string = "nav"
    let v6983 : string = "<" + v6982 + " " + v6116 + ">move || { v6981 }</" + v6982 + ">"
    let v6984 : string = "leptos::prelude::view! { " + v6983 + " }"
    let v6985 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6984 
    let v6986 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Nav>> = v6985 |> unbox
    let v6987 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6988 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6986 v6987 
    let v6989 : string = "v6988"
    let v6990 : string = v6989 + v52 
    let v6991 : string = v6990 + v52 
    let v6992 : string = "vec![" + v6991 + "]"
    let v6993 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6992 
    let v6994 : string = "leptos::prelude::Fragment::new($0)"
    let v6995 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6993 v6994 
    let v6996 : string = "leptos::prelude::AnyView::from($0)"
    let v6997 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6995 v6996 
    let v6998 : string = "<" + v6104 + " " + v6112 + ">move || { v6997 }</" + v6104 + ">"
    let v6999 : string = "leptos::prelude::view! { " + v6998 + " }"
    let v7000 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6999 
    let v7001 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v7000 |> unbox
    let v7002 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v7003 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7001 v7002 
    let v7004 : string = "v7003"
    let v7005 : string = v7004 + v52 
    let v7006 : string = v7005 + v52 
    let v7007 : string = "vec![" + v7006 + "]"
    let v7008 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v7007 
    let v7009 : string = "leptos::prelude::Fragment::new($0)"
    let v7010 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v7008 v7009 
    let v7011 : string = "leptos::prelude::AnyView::from($0)"
    let v7012 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7010 v7011 
    let v7013 : string = "<" + v6104 + " " + v6110 + ">move || { v7012 }</" + v6104 + ">"
    let v7014 : string = "leptos::prelude::view! { " + v7013 + " }"
    let v7015 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v7014 
    let v7016 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v7015 |> unbox
    let v7017 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v7018 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7016 v7017 
    let v7019 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v7020 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6108 v7019 
    let v7021 : string = "v7018"
    let v7022 : string = v7021 + v52 
    let v7023 : string = v7022 + v52 
    let v7024 : string = "v7020"
    let v7025 : string = v7024 + v6070 
    let v7026 : string = v7025 + v7023 
    let v7027 : string = "vec![" + v7026 + "]"
    let v7028 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v7027 
    let v7029 : string = "leptos::prelude::Fragment::new($0)"
    let v7030 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v7028 v7029 
    let v7031 : string = "leptos::prelude::AnyView::from($0)"
    let v7032 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7030 v7031 
    let v7033 : string = "<" + v6104 + " " + v5613 + ">move || { v7032 }</" + v6104 + ">"
    let v7034 : string = "leptos::prelude::view! { " + v7033 + " }"
    let v7035 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v7034 
    let v7036 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v7035 |> unbox
    let v7037 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v7038 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7036 v7037 
    let v7039 : string = "v7038"
    let v7040 : string = v7039 + v52 
    let v7041 : string = v7040 + v52 
    let v7042 : string = "v5611"
    let v7043 : string = v7042 + v6070 
    let v7044 : string = v7043 + v7041 
    let v7045 : string = "vec![" + v7044 + "]"
    let v7046 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v7045 
    let v7047 : string = "leptos::prelude::Fragment::new($0)"
    let v7048 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v7046 v7047 
    let v7049 : string = "leptos::prelude::AnyView::from($0)"
    let v7050 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7048 v7049 
    let v7051 : string = "<" + v6104 + " " + v2230 + ">move || { v7050 }</" + v6104 + ">"
    let v7052 : string = "leptos::prelude::view! { " + v7051 + " }"
    let v7053 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v7052 
    let v7054 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v7053 |> unbox
    let v7055 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v7056 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7054 v7055 
    let v7057 : string = "v7056"
    let v7058 : string = v7057 + v52 
    let v7059 : string = v7058 + v52 
    let v7060 : string = "vec![" + v7059 + "]"
    let v7061 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v7060 
    let v7062 : string = "leptos::prelude::Fragment::new($0)"
    let v7063 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v7061 v7062 
    let v7064 : string = "leptos::prelude::AnyView::from($0)"
    let v7065 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7063 v7064 
    let v7066 : string = "<" + v6104 + " " + v2228 + ">move || { v7065 }</" + v6104 + ">"
    let v7067 : string = "leptos::prelude::view! { " + v7066 + " }"
    let v7068 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v7067 
    let v7069 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v7068 |> unbox
    let v7070 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v7071 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7069 v7070 
    let v7072 : string = "v7071"
    let v7073 : string = v7072 + v52 
    let v7074 : string = v7073 + v52 
    let v7075 : string = "vec![" + v7074 + "]"
    let v7076 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v7075 
    let v7077 : string = "leptos::prelude::Fragment::new($0)"
    let v7078 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v7076 v7077 
    let v7079 : string = "leptos::prelude::AnyView::from($0)"
    let v7080 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7078 v7079 
    let v7081 : string = "<" + v6104 + " " + v1849 + ">move || { v7080 }</" + v6104 + ">"
    let v7082 : string = "leptos::prelude::view! { " + v7081 + " }"
    let v7083 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v7082 
    let v7084 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v7083 |> unbox
    v7084
and method5 () : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>) =
    closure5()
and method289 (v0 : std_string_String) : std_string_String =
    v0
and closure361 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) () : leptos_prelude_AnyView_ =
    let v1 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v0 1
    let v2 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v3 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "v3"
    let v5 : string = ""
    let v6 : string = v4 + v5 
    let v7 : string = v6 + v5 
    let v8 : string = "vec![" + v7 + "]"
    let v9 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : string = "leptos::prelude::Fragment::new($0)"
    let v11 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "leptos::prelude::AnyView::from($0)"
    let v13 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v11 v12 
    v13
and method290 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) : (unit -> leptos_prelude_AnyView_) =
    closure361(v0)
and closure362 () () : leptos_dom_Fragment =
    let v0 : string = ""
    let v1 : string = "vec![" + v0 + "]"
    let v2 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1 
    let v3 : string = "leptos::prelude::Fragment::new($0)"
    let v4 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2 v3 
    v4
and closure363 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) () : leptos_prelude_AnyView_ =
    let v1 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v0 2
    let v2 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v3 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "v3"
    let v5 : string = ""
    let v6 : string = v4 + v5 
    let v7 : string = v6 + v5 
    let v8 : string = "vec![" + v7 + "]"
    let v9 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : string = "leptos::prelude::Fragment::new($0)"
    let v11 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "leptos::prelude::AnyView::from($0)"
    let v13 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v11 v12 
    v13
and method291 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) : (unit -> leptos_prelude_AnyView_) =
    closure363(v0)
and closure364 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) () : leptos_prelude_AnyView_ =
    let v1 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v0 3
    let v2 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v3 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "v3"
    let v5 : string = ""
    let v6 : string = v4 + v5 
    let v7 : string = v6 + v5 
    let v8 : string = "vec![" + v7 + "]"
    let v9 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : string = "leptos::prelude::Fragment::new($0)"
    let v11 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "leptos::prelude::AnyView::from($0)"
    let v13 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v11 v12 
    v13
and method292 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) : (unit -> leptos_prelude_AnyView_) =
    closure364(v0)
and closure365 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) () : leptos_prelude_AnyView_ =
    let v1 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v0 4
    let v2 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v3 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "v3"
    let v5 : string = ""
    let v6 : string = v4 + v5 
    let v7 : string = v6 + v5 
    let v8 : string = "vec![" + v7 + "]"
    let v9 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : string = "leptos::prelude::Fragment::new($0)"
    let v11 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "leptos::prelude::AnyView::from($0)"
    let v13 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v11 v12 
    v13
and method293 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) : (unit -> leptos_prelude_AnyView_) =
    closure365(v0)
and closure4 () () : Vec<leptos_prelude_View<leptos_router_NestedRoute>> =
    let v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>) = method5()
    let v1 : string = ""
    (* run_target_args'
    let v6 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v7 : string = "&*$0"
    let v8 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v7 
    let _run_target_args'_v6 = v8 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v9 : string = "&*$0"
    let v10 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v9 
    let _run_target_args'_v6 = v10 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v11 : string = "&*$0"
    let v12 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v11 
    let _run_target_args'_v6 = v12 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v14 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v14 
    #endif
#if FABLE_COMPILER_PYTHON
    let v18 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v18 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v22 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v22 
    #endif
#else
    let v26 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v26 
    #endif
    let v29 : Ref<Str> = _run_target_args'_v6 
    (* run_target_args'
    let v39 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v40 : string = "String::from($0)"
    let v41 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v40 
    let _run_target_args'_v39 = v41 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v42 
    let _run_target_args'_v39 = v43 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v44 
    let _run_target_args'_v39 = v45 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v47 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v47 
    #endif
#if FABLE_COMPILER_PYTHON
    let v51 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v51 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v55 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v55 
    #endif
#else
    let v59 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v59 
    #endif
    let v62 : std_string_String = _run_target_args'_v39 
    let v68 : std_string_String = method289(v62)
    let v69 : (unit -> leptos_prelude_AnyView_) = method290(v0)
    let v70 : string = "path=leptos_router::path!(v68)"
    let v71 : string = "view= move || v69()"
    let v72 : (unit -> leptos_dom_Fragment) = closure362()
    let v73 : string = "children=Box::new(move || v72())"
    let v74 : string = " " + v70 + v1 + ""
    let v75 : string = " " + v71 + v74 + ""
    let v76 : string = " " + v73 + v75 + ""
    let v77 : string = "leptos_router::components::ParentRoute"
    let v78 : string = "<" + v77 + " " + v76 + " />"
    let v79 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v78 + " })"
    let v80 : leptos_prelude_View<leptos_router_NestedRoute> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "/"
    (* run_target_args'
    let v86 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v87 : string = "&*$0"
    let v88 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v87 
    let _run_target_args'_v86 = v88 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v89 : string = "&*$0"
    let v90 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v89 
    let _run_target_args'_v86 = v90 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v91 : string = "&*$0"
    let v92 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v91 
    let _run_target_args'_v86 = v92 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v94 : Ref<Str> = v81 |> unbox<Ref<Str>>
    let _run_target_args'_v86 = v94 
    #endif
#if FABLE_COMPILER_PYTHON
    let v98 : Ref<Str> = v81 |> unbox<Ref<Str>>
    let _run_target_args'_v86 = v98 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v102 : Ref<Str> = v81 |> unbox<Ref<Str>>
    let _run_target_args'_v86 = v102 
    #endif
#else
    let v106 : Ref<Str> = v81 |> unbox<Ref<Str>>
    let _run_target_args'_v86 = v106 
    #endif
    let v109 : Ref<Str> = _run_target_args'_v86 
    (* run_target_args'
    let v119 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v120 : string = "String::from($0)"
    let v121 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v120 
    let _run_target_args'_v119 = v121 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v122 : string = "String::from($0)"
    let v123 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v122 
    let _run_target_args'_v119 = v123 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v124 : string = "String::from($0)"
    let v125 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v124 
    let _run_target_args'_v119 = v125 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v127 : std_string_String = v109 |> unbox<std_string_String>
    let _run_target_args'_v119 = v127 
    #endif
#if FABLE_COMPILER_PYTHON
    let v131 : std_string_String = v109 |> unbox<std_string_String>
    let _run_target_args'_v119 = v131 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v135 : std_string_String = v109 |> unbox<std_string_String>
    let _run_target_args'_v119 = v135 
    #endif
#else
    let v139 : std_string_String = v109 |> unbox<std_string_String>
    let _run_target_args'_v119 = v139 
    #endif
    let v142 : std_string_String = _run_target_args'_v119 
    let v148 : std_string_String = method289(v142)
    let v149 : (unit -> leptos_prelude_AnyView_) = method291(v0)
    let v150 : string = "path=leptos_router::path!(v148)"
    let v151 : string = "view= move || v149()"
    let v152 : string = "children=Box::new(move || v72())"
    let v153 : string = " " + v150 + v1 + ""
    let v154 : string = " " + v151 + v153 + ""
    let v155 : string = " " + v152 + v154 + ""
    let v156 : string = "<" + v77 + " " + v155 + " />"
    let v157 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v156 + " })"
    let v158 : leptos_prelude_View<leptos_router_NestedRoute> = Fable.Core.RustInterop.emitRustExpr () v157 
    let v159 : string = "/*"
    (* run_target_args'
    let v164 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v165 : string = "&*$0"
    let v166 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v159 v165 
    let _run_target_args'_v164 = v166 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v167 : string = "&*$0"
    let v168 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v159 v167 
    let _run_target_args'_v164 = v168 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v169 : string = "&*$0"
    let v170 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v159 v169 
    let _run_target_args'_v164 = v170 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v172 : Ref<Str> = v159 |> unbox<Ref<Str>>
    let _run_target_args'_v164 = v172 
    #endif
#if FABLE_COMPILER_PYTHON
    let v176 : Ref<Str> = v159 |> unbox<Ref<Str>>
    let _run_target_args'_v164 = v176 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v180 : Ref<Str> = v159 |> unbox<Ref<Str>>
    let _run_target_args'_v164 = v180 
    #endif
#else
    let v184 : Ref<Str> = v159 |> unbox<Ref<Str>>
    let _run_target_args'_v164 = v184 
    #endif
    let v187 : Ref<Str> = _run_target_args'_v164 
    (* run_target_args'
    let v197 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v198 : string = "String::from($0)"
    let v199 : std_string_String = Fable.Core.RustInterop.emitRustExpr v187 v198 
    let _run_target_args'_v197 = v199 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v200 : string = "String::from($0)"
    let v201 : std_string_String = Fable.Core.RustInterop.emitRustExpr v187 v200 
    let _run_target_args'_v197 = v201 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v202 : string = "String::from($0)"
    let v203 : std_string_String = Fable.Core.RustInterop.emitRustExpr v187 v202 
    let _run_target_args'_v197 = v203 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v205 : std_string_String = v187 |> unbox<std_string_String>
    let _run_target_args'_v197 = v205 
    #endif
#if FABLE_COMPILER_PYTHON
    let v209 : std_string_String = v187 |> unbox<std_string_String>
    let _run_target_args'_v197 = v209 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v213 : std_string_String = v187 |> unbox<std_string_String>
    let _run_target_args'_v197 = v213 
    #endif
#else
    let v217 : std_string_String = v187 |> unbox<std_string_String>
    let _run_target_args'_v197 = v217 
    #endif
    let v220 : std_string_String = _run_target_args'_v197 
    let v226 : std_string_String = method289(v220)
    let v227 : (unit -> leptos_prelude_AnyView_) = method292(v0)
    let v228 : string = "path=leptos_router::path!(v226)"
    let v229 : string = "view= move || v227()"
    let v230 : string = "children=Box::new(move || v72())"
    let v231 : string = " " + v228 + v1 + ""
    let v232 : string = " " + v229 + v231 + ""
    let v233 : string = " " + v230 + v232 + ""
    let v234 : string = "<" + v77 + " " + v233 + " />"
    let v235 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v234 + " })"
    let v236 : leptos_prelude_View<leptos_router_NestedRoute> = Fable.Core.RustInterop.emitRustExpr () v235 
    let v237 : string = "*"
    (* run_target_args'
    let v242 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v243 : string = "&*$0"
    let v244 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v237 v243 
    let _run_target_args'_v242 = v244 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v245 : string = "&*$0"
    let v246 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v237 v245 
    let _run_target_args'_v242 = v246 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v247 : string = "&*$0"
    let v248 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v237 v247 
    let _run_target_args'_v242 = v248 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v250 : Ref<Str> = v237 |> unbox<Ref<Str>>
    let _run_target_args'_v242 = v250 
    #endif
#if FABLE_COMPILER_PYTHON
    let v254 : Ref<Str> = v237 |> unbox<Ref<Str>>
    let _run_target_args'_v242 = v254 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v258 : Ref<Str> = v237 |> unbox<Ref<Str>>
    let _run_target_args'_v242 = v258 
    #endif
#else
    let v262 : Ref<Str> = v237 |> unbox<Ref<Str>>
    let _run_target_args'_v242 = v262 
    #endif
    let v265 : Ref<Str> = _run_target_args'_v242 
    (* run_target_args'
    let v275 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v276 : string = "String::from($0)"
    let v277 : std_string_String = Fable.Core.RustInterop.emitRustExpr v265 v276 
    let _run_target_args'_v275 = v277 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v278 : string = "String::from($0)"
    let v279 : std_string_String = Fable.Core.RustInterop.emitRustExpr v265 v278 
    let _run_target_args'_v275 = v279 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v280 : string = "String::from($0)"
    let v281 : std_string_String = Fable.Core.RustInterop.emitRustExpr v265 v280 
    let _run_target_args'_v275 = v281 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v283 : std_string_String = v265 |> unbox<std_string_String>
    let _run_target_args'_v275 = v283 
    #endif
#if FABLE_COMPILER_PYTHON
    let v287 : std_string_String = v265 |> unbox<std_string_String>
    let _run_target_args'_v275 = v287 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v291 : std_string_String = v265 |> unbox<std_string_String>
    let _run_target_args'_v275 = v291 
    #endif
#else
    let v295 : std_string_String = v265 |> unbox<std_string_String>
    let _run_target_args'_v275 = v295 
    #endif
    let v298 : std_string_String = _run_target_args'_v275 
    let v304 : std_string_String = method289(v298)
    let v305 : (unit -> leptos_prelude_AnyView_) = method293(v0)
    let v306 : string = "path=leptos_router::path!(v304)"
    let v307 : string = "view= move || v305()"
    let v308 : string = "children=Box::new(move || v72())"
    let v309 : string = " " + v306 + v1 + ""
    let v310 : string = " " + v307 + v309 + ""
    let v311 : string = " " + v308 + v310 + ""
    let v312 : string = "<" + v77 + " " + v311 + " />"
    let v313 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v312 + " })"
    let v314 : leptos_prelude_View<leptos_router_NestedRoute> = Fable.Core.RustInterop.emitRustExpr () v313 
    let v315 : string = "v314"
    let v316 : string = v315 + v1 
    let v317 : string = v316 + v1 
    let v318 : string = "v236"
    let v319 : string = ", "
    let v320 : string = v318 + v319 
    let v321 : string = v320 + v317 
    let v322 : string = "v158"
    let v323 : string = v322 + v319 
    let v324 : string = v323 + v321 
    let v325 : string = "v80"
    let v326 : string = v325 + v319 
    let v327 : string = v326 + v324 
    let v328 : string = "vec![" + v327 + "]"
    let v329 : Vec<leptos_prelude_View<leptos_router_NestedRoute>> = Fable.Core.RustInterop.emitRustExpr () v328 
    v329
and method4 () : (unit -> Vec<leptos_prelude_View<leptos_router_NestedRoute>>) =
    closure4()
and method294 (v0 : (unit -> Vec<leptos_prelude_View<leptos_router_NestedRoute>>)) : (unit -> Vec<leptos_prelude_View<leptos_router_NestedRoute>>) =
    v0
and closure3 () () : leptos_dom_Fragment =
    let v0 : (unit -> Vec<leptos_prelude_View<leptos_router_NestedRoute>>) = method4()
    let v1 : (unit -> Vec<leptos_prelude_View<leptos_router_NestedRoute>>) = method294(v0)
    let v2 : string = "leptos.routes / fallback"
    (* run_target_args'
    let v7 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2 v8 
    let _run_target_args'_v7 = v9 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2 v10 
    let _run_target_args'_v7 = v11 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2 v12 
    let _run_target_args'_v7 = v13 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v15 : Ref<Str> = v2 |> unbox<Ref<Str>>
    let _run_target_args'_v7 = v15 
    #endif
#if FABLE_COMPILER_PYTHON
    let v19 : Ref<Str> = v2 |> unbox<Ref<Str>>
    let _run_target_args'_v7 = v19 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v23 : Ref<Str> = v2 |> unbox<Ref<Str>>
    let _run_target_args'_v7 = v23 
    #endif
#else
    let v27 : Ref<Str> = v2 |> unbox<Ref<Str>>
    let _run_target_args'_v7 = v27 
    #endif
    let v30 : Ref<Str> = _run_target_args'_v7 
    (* run_target_args'
    let v40 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v30 v41 
    let _run_target_args'_v40 = v42 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v30 v43 
    let _run_target_args'_v40 = v44 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v30 v45 
    let _run_target_args'_v40 = v46 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v48 : std_string_String = v30 |> unbox<std_string_String>
    let _run_target_args'_v40 = v48 
    #endif
#if FABLE_COMPILER_PYTHON
    let v52 : std_string_String = v30 |> unbox<std_string_String>
    let _run_target_args'_v40 = v52 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v56 : std_string_String = v30 |> unbox<std_string_String>
    let _run_target_args'_v40 = v56 
    #endif
#else
    let v60 : std_string_String = v30 |> unbox<std_string_String>
    let _run_target_args'_v40 = v60 
    #endif
    let v63 : std_string_String = _run_target_args'_v40 
    let v69 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v70 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v63 v69 
    let v71 : string = "fallback=move || v70"
    let v72 : string = "children=leptos::children::ToChildren::to_children(move || v1())"
    let v73 : string = ""
    let v74 : string = " " + v71 + v73 + ""
    let v75 : string = " " + v72 + v74 + ""
    let v76 : string = "leptos_router::components::Routes"
    let v77 : string = "<" + v76 + " " + v75 + " />"
    let v78 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v77 + " })"
    let v79 : leptos_prelude_View<_> = Fable.Core.RustInterop.emitRustExpr () v78 
    let v80 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v79 v80 
    let v82 : string = "v81"
    let v83 : string = v82 + v73 
    let v84 : string = v83 + v73 
    let v85 : string = "vec![" + v84 + "]"
    let v86 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v85 
    let v87 : string = "leptos::prelude::Fragment::new($0)"
    let v88 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v86 v87 
    v88
and closure2 () () : Impl<leptos_IntoView> =
    let v0 : string = "app.render ()"
    let v1 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v2 : bool = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "true; leptos_meta::provide_meta_context()"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr () v3 
    let v5 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v6 : leptos_prelude_ArcRwSignal<bool> = Fable.Core.RustInterop.emitRustExpr false v5 
    let v7 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v8 : leptos_prelude_ArcRwSignal<bool> = Fable.Core.RustInterop.emitRustExpr false v7 
    let v9 : string = ""
    (* run_target_args'
    let v14 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v15 : string = "&*$0"
    let v16 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v9 v15 
    let _run_target_args'_v14 = v16 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v17 : string = "&*$0"
    let v18 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v9 v17 
    let _run_target_args'_v14 = v18 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v9 v19 
    let _run_target_args'_v14 = v20 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v22 : Ref<Str> = v9 |> unbox<Ref<Str>>
    let _run_target_args'_v14 = v22 
    #endif
#if FABLE_COMPILER_PYTHON
    let v26 : Ref<Str> = v9 |> unbox<Ref<Str>>
    let _run_target_args'_v14 = v26 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v9 |> unbox<Ref<Str>>
    let _run_target_args'_v14 = v30 
    #endif
#else
    let v34 : Ref<Str> = v9 |> unbox<Ref<Str>>
    let _run_target_args'_v14 = v34 
    #endif
    let v37 : Ref<Str> = _run_target_args'_v14 
    (* run_target_args'
    let v47 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v48 : string = "String::from($0)"
    let v49 : std_string_String = Fable.Core.RustInterop.emitRustExpr v37 v48 
    let _run_target_args'_v47 = v49 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v50 : string = "String::from($0)"
    let v51 : std_string_String = Fable.Core.RustInterop.emitRustExpr v37 v50 
    let _run_target_args'_v47 = v51 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v37 v52 
    let _run_target_args'_v47 = v53 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v55 : std_string_String = v37 |> unbox<std_string_String>
    let _run_target_args'_v47 = v55 
    #endif
#if FABLE_COMPILER_PYTHON
    let v59 : std_string_String = v37 |> unbox<std_string_String>
    let _run_target_args'_v47 = v59 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v63 : std_string_String = v37 |> unbox<std_string_String>
    let _run_target_args'_v47 = v63 
    #endif
#else
    let v67 : std_string_String = v37 |> unbox<std_string_String>
    let _run_target_args'_v47 = v67 
    #endif
    let v70 : std_string_String = _run_target_args'_v47 
    let v76 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v77 : leptos_prelude_ArcRwSignal<std_string_String> = Fable.Core.RustInterop.emitRustExpr v70 v76 
    let v78 : string = "i574n.near"
    (* run_target_args'
    let v83 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v84 : string = "&*$0"
    let v85 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v78 v84 
    let _run_target_args'_v83 = v85 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v86 : string = "&*$0"
    let v87 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v78 v86 
    let _run_target_args'_v83 = v87 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v88 : string = "&*$0"
    let v89 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v78 v88 
    let _run_target_args'_v83 = v89 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v91 : Ref<Str> = v78 |> unbox<Ref<Str>>
    let _run_target_args'_v83 = v91 
    #endif
#if FABLE_COMPILER_PYTHON
    let v95 : Ref<Str> = v78 |> unbox<Ref<Str>>
    let _run_target_args'_v83 = v95 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v99 : Ref<Str> = v78 |> unbox<Ref<Str>>
    let _run_target_args'_v83 = v99 
    #endif
#else
    let v103 : Ref<Str> = v78 |> unbox<Ref<Str>>
    let _run_target_args'_v83 = v103 
    #endif
    let v106 : Ref<Str> = _run_target_args'_v83 
    (* run_target_args'
    let v116 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v117 : string = "String::from($0)"
    let v118 : std_string_String = Fable.Core.RustInterop.emitRustExpr v106 v117 
    let _run_target_args'_v116 = v118 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v119 : string = "String::from($0)"
    let v120 : std_string_String = Fable.Core.RustInterop.emitRustExpr v106 v119 
    let _run_target_args'_v116 = v120 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v121 : string = "String::from($0)"
    let v122 : std_string_String = Fable.Core.RustInterop.emitRustExpr v106 v121 
    let _run_target_args'_v116 = v122 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v124 : std_string_String = v106 |> unbox<std_string_String>
    let _run_target_args'_v116 = v124 
    #endif
#if FABLE_COMPILER_PYTHON
    let v128 : std_string_String = v106 |> unbox<std_string_String>
    let _run_target_args'_v116 = v128 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v132 : std_string_String = v106 |> unbox<std_string_String>
    let _run_target_args'_v116 = v132 
    #endif
#else
    let v136 : std_string_String = v106 |> unbox<std_string_String>
    let _run_target_args'_v116 = v136 
    #endif
    let v139 : std_string_String = _run_target_args'_v116 
    let v146 : (bool * std_string_String) = true, v139 
    let v149 : string = "luckier.near"
    (* run_target_args'
    let v154 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v155 : string = "&*$0"
    let v156 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v149 v155 
    let _run_target_args'_v154 = v156 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v157 : string = "&*$0"
    let v158 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v149 v157 
    let _run_target_args'_v154 = v158 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v159 : string = "&*$0"
    let v160 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v149 v159 
    let _run_target_args'_v154 = v160 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v162 : Ref<Str> = v149 |> unbox<Ref<Str>>
    let _run_target_args'_v154 = v162 
    #endif
#if FABLE_COMPILER_PYTHON
    let v166 : Ref<Str> = v149 |> unbox<Ref<Str>>
    let _run_target_args'_v154 = v166 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v170 : Ref<Str> = v149 |> unbox<Ref<Str>>
    let _run_target_args'_v154 = v170 
    #endif
#else
    let v174 : Ref<Str> = v149 |> unbox<Ref<Str>>
    let _run_target_args'_v154 = v174 
    #endif
    let v177 : Ref<Str> = _run_target_args'_v154 
    (* run_target_args'
    let v187 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v188 : string = "String::from($0)"
    let v189 : std_string_String = Fable.Core.RustInterop.emitRustExpr v177 v188 
    let _run_target_args'_v187 = v189 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v190 : string = "String::from($0)"
    let v191 : std_string_String = Fable.Core.RustInterop.emitRustExpr v177 v190 
    let _run_target_args'_v187 = v191 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v192 : string = "String::from($0)"
    let v193 : std_string_String = Fable.Core.RustInterop.emitRustExpr v177 v192 
    let _run_target_args'_v187 = v193 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v195 : std_string_String = v177 |> unbox<std_string_String>
    let _run_target_args'_v187 = v195 
    #endif
#if FABLE_COMPILER_PYTHON
    let v199 : std_string_String = v177 |> unbox<std_string_String>
    let _run_target_args'_v187 = v199 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v203 : std_string_String = v177 |> unbox<std_string_String>
    let _run_target_args'_v187 = v203 
    #endif
#else
    let v207 : std_string_String = v177 |> unbox<std_string_String>
    let _run_target_args'_v187 = v207 
    #endif
    let v210 : std_string_String = _run_target_args'_v187 
    let v217 : (bool * std_string_String) = true, v210 
    let v220 : ((bool * std_string_String) []) = [|v146; v217|]
    let v221 : string = "$0.to_vec()"
    let v222 : Vec<(bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr v220 v221 
    let v224 : std_string_String option = None
    let v227 : US1 = US1_0
    let v228 : Heap0 = {l0 = v222; l1 = v224; l2 = 1; l3 = 1; l4 = v227} : Heap0
    let v229 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v230 : leptos_prelude_ArcRwSignal<Heap0> = Fable.Core.RustInterop.emitRustExpr v228 v229 
    let v231 : Heap1 = {l0 = v6; l1 = v8; l2 = v77; l3 = v230} : Heap1
    let v232 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v233 : leptos_prelude_ArcRwSignal<Heap1> = Fable.Core.RustInterop.emitRustExpr v231 v232 
    let v234 : string = "std::collections::HashMap::new()"
    let v235 : std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>> = Fable.Core.RustInterop.emitRustExpr () v234 
    let v236 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v237 : leptos_prelude_ArcRwSignal<std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>> = Fable.Core.RustInterop.emitRustExpr v235 v236 
    let v238 : Heap2 = {l0 = v233; l1 = v237} : Heap2
    let v239 : string = $"true; leptos::context::provide_context::<std::sync::Arc<Heap2>>($0)"
    let v240 : bool = Fable.Core.RustInterop.emitRustExpr v238 v239 
    let v241 : (unit -> leptos_dom_Fragment) = closure3()
    let v242 : string = "children=Box::new(move || v241())"
    let v243 : string = " " + v242 + v9 + ""
    let v244 : string = "leptos_router::components::Router"
    let v245 : string = "<" + v244 + " " + v243 + " />"
    let v246 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v245 + " })"
    let v247 : leptos_prelude_View<_> = Fable.Core.RustInterop.emitRustExpr () v246 
    let v248 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v249 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v247 v248 
    let v250 : Impl<leptos_IntoView> = v249 |> unbox
    v250
and method3 () : unit =
    let v0 : string = "true; leptos::prelude::mount_to_body(|| $0()); //"
    let v1 : (unit -> Impl<leptos_IntoView>) = closure2()
    let v2 : bool = Fable.Core.RustInterop.emitRustExpr v1 v0 
    ()
and closure366 () () : unit =
    method3()
and method295 () : (unit -> unit) =
    closure366()
and method296 (v0 : Box<Dyn<FnUnit>>) : Box<Dyn<FnUnit>> =
    v0
and closure0 () (v0 : (string [])) : int32 =
    let v1 : string = "main / args: " + string v0 + ""
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "let _ = console_log::init_with_level(log::Level::Debug)"
    Fable.Core.RustInterop.emitRustExpr () v4 
    let v5 : string = "console_error_panic_hook::set_once()"
    Fable.Core.RustInterop.emitRustExpr () v5 
    let v6 : string = "leptos::prelude::document().body()"
    let v7 : web_sys_HtmlElement option = Fable.Core.RustInterop.emitRustExpr () v6 
    let v10 : (web_sys_HtmlElement -> US0) = method0()
    let v11 : US0 option = v7 |> Option.map v10 
    let v31 : US0 = US0_1
    let v32 : US0 = v11 |> Option.defaultValue v31 
    let v37 : string = $"%A{v32}"
    let v40 : string = "main / mount_to_body / body: " + string v37 + ""
    let v41 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v42 : bool = Fable.Core.RustInterop.emitRustExpr v40 v41 
    match v32 with
    | US0_0(v43) -> (* Some *)
        let v44 : string = method1()
        (* run_target_args'
        let v49 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v50 : string = "&*$0"
        let v51 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v44 v50 
        let _run_target_args'_v49 = v51 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v52 : string = "&*$0"
        let v53 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v44 v52 
        let _run_target_args'_v49 = v53 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v54 : string = "&*$0"
        let v55 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v44 v54 
        let _run_target_args'_v49 = v55 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v57 : Ref<Str> = v44 |> unbox<Ref<Str>>
        let _run_target_args'_v49 = v57 
        #endif
#if FABLE_COMPILER_PYTHON
        let v61 : Ref<Str> = v44 |> unbox<Ref<Str>>
        let _run_target_args'_v49 = v61 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v65 : Ref<Str> = v44 |> unbox<Ref<Str>>
        let _run_target_args'_v49 = v65 
        #endif
#else
        let v69 : Ref<Str> = v44 |> unbox<Ref<Str>>
        let _run_target_args'_v49 = v69 
        #endif
        let v72 : Ref<Str> = _run_target_args'_v49 
        let v78 : web_sys_HtmlElement = method2(v43)
        let v79 : string = "v78.set_inner_html($0)"
        Fable.Core.RustInterop.emitRustExpr v72 v79 
        method3()
    | _ ->
        let v80 : (unit -> unit) = method295()
        let v81 : string = "Box::new(move || v80())"
        let v82 : Box<Dyn<FnUnit>> = Fable.Core.RustInterop.emitRustExpr () v81 
        let v83 : Box<Dyn<FnUnit>> = method296(v82)
        let v84 : string = "wasm_bindgen::closure::Closure::wrap(v83)"
        let v85 : wasm_bindgen_closure_Closure<Dyn<FnUnit>> = Fable.Core.RustInterop.emitRustExpr () v84 
        let v86 : string = "wasm_bindgen::closure::Closure::as_ref(&v85)"
        let v87 : Ref<wasm_bindgen_JsValue> = Fable.Core.RustInterop.emitRustExpr () v86 
        let v88 : string = "wasm_bindgen::JsCast::unchecked_ref(v87)"
        let v89 : Ref<js_sys_Function> = Fable.Core.RustInterop.emitRustExpr () v88 
        let v90 : string = "leptos::prelude::document().add_event_listener_with_callback(\"DOMContentLoaded\", v89).unwrap()"
        Fable.Core.RustInterop.emitRustExpr () v90 
        let v91 : string = "v85.forget()"
        Fable.Core.RustInterop.emitRustExpr () v91 
        ()
    0
let v0 : ((string []) -> int32) = closure0()
let main args = v0 args
()
