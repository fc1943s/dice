#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("web_sys::HtmlElement")>]
#endif
type web_sys_HtmlElement = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("&$0")>]
type Ref<'T> = class end
#else
type Ref<'T> = 'T
#endif

#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ArcRwSignal<$0>")>]
#endif
type leptos_prelude_ArcRwSignal<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::string::String")>]
type std_string_String = class end
#else
type std_string_String = string
#endif

#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Vec<$0>")>]
#endif
type Vec<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::collections::HashMap<$0, $1>")>]
#endif
type std_collections_HashMap<'K, 'V> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::pin::Pin<$0>")>]
#endif
type std_pin_Pin<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("rexie::Error")>]
#endif
type rexie_Error = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("rexie::Rexie")>]
#endif
type rexie_Rexie = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::sync::Arc<$0>")>]
#endif
type std_sync_Arc<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Func0<$0>")>]
#endif
type Func0<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ArcLocalResource<$0>")>]
#endif
type leptos_prelude_ArcLocalResource<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("*/ $0 /*")>]
#endif
type TypeEmit<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("PartialEqWrapper<$0>")>]
#endif
type PartialEqWrapper<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Func1<$0, $1>")>]
#endif
type Func0<'T, 'U> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("rexie::Transaction")>]
#endif
type rexie_Transaction = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("rexie::Store")>]
#endif
type rexie_Store = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("wasm_bindgen::JsValue")>]
#endif
type wasm_bindgen_JsValue = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("serde_wasm_bindgen::Error")>]
#endif
type serde_wasm_bindgen_Error = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("serde_json::Value")>]
#endif
type serde_json_Value = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("serde_json::Error")>]
#endif
type serde_json_Error = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("borsh::io::Error")>]
#endif
type borsh_io_Error = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("web_sys::Window")>]
#endif
type web_sys_Window = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("web_sys::Storage")>]
#endif
type web_sys_Storage = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ArcMemo<$0>")>]
#endif
type leptos_prelude_ArcMemo<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ReadSignal<$0>")>]
#endif
type leptos_prelude_ReadSignal<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::WriteSignal<$0>")>]
#endif
type leptos_prelude_WriteSignal<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ArcAction<$0, $1>")>]
#endif
type leptos_prelude_ArcAction<'T, 'U> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos_router::location::Location")>]
#endif
type leptos_router_location_Location = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::Memo<$0>")>]
#endif
type leptos_prelude_Memo<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos_router::location::Url")>]
#endif
type leptos_router_Url = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::Root")>]
#endif
type crate_model_near_nearblocks_Root = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::Txn")>]
#endif
type crate_model_near_nearblocks_Txn = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::Block")>]
#endif
type crate_model_near_nearblocks_Block = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::Action")>]
#endif
type crate_model_near_nearblocks_Action = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::ActionsAgg")>]
#endif
type crate_model_near_nearblocks_ActionsAgg = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::Outcomes")>]
#endif
type crate_model_near_nearblocks_Outcomes = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::OutcomesAgg")>]
#endif
type crate_model_near_nearblocks_OutcomesAgg = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("futures::future::TryJoinAll<$0>")>]
#endif
type futures_future_TryJoinAll<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("reqwest_wasm::RequestBuilder")>]
#endif
type reqwest_RequestBuilder = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("reqwest_wasm::Error")>]
#endif
type reqwest_Error = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("reqwest_wasm::Response")>]
#endif
type reqwest_Response = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::Action<$0, $1>")>]
#endif
type leptos_prelude_Action<'T, 'U> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ArcSignal<$0>")>]
#endif
type leptos_prelude_ArcSignal<'T> = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::RpcInput")>] type crate_model_near_rpc_RpcInput = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::RpcResponse")>] type crate_model_near_rpc_RpcResponse = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::TransactionStatus")>] type crate_model_near_rpc_TransactionStatus = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::Receipt")>] type crate_model_near_rpc_Receipt = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::ReceiptDetail")>] type crate_model_near_rpc_ReceiptDetail = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::ActionDetail")>] type crate_model_near_rpc_ActionDetail = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::TransferDetail")>] type crate_model_near_rpc_TransferDetail = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::ReceiptsOutcome")>] type crate_model_near_rpc_ReceiptsOutcome = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::OutcomeDetail")>] type crate_model_near_rpc_OutcomeDetail = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::Metadata")>] type crate_model_near_rpc_Metadata = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::GasProfile")>] type crate_model_near_rpc_GasProfile = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::Proof")>] type crate_model_near_rpc_Proof = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::RpcError")>] type crate_model_near_rpc_RpcError = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::ErrorCause")>] type crate_model_near_rpc_ErrorCause = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::ErrorCauseInfo")>] type crate_model_near_rpc_ErrorCauseInfo = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::AnyView")>]
#endif
type leptos_prelude_AnyView_ = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::Fragment")>]
#endif
type leptos_dom_Fragment = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("impl $0")>]
#endif
type Impl<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::View<$0>")>]
#endif
type leptos_prelude_View<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("chrono::DateTime<$0>")>]
#endif
type chrono_DateTime<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("chrono::NaiveDateTime")>]
#endif
type chrono_NaiveDateTime = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::ev::Event")>]
#endif
type leptos_ev_Event = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Box<$0>")>]
#endif
type Box<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("wasm_bindgen::closure::Closure<$0>")>]
#endif
type wasm_bindgen_closure_Closure<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("str")>]
type Str = class end
#else
type Str = string
#endif

#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::IntoView")>]
#endif
type leptos_IntoView = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos_router::NestedRoute<_, _, _, _>")>]
#endif
type leptos_router_NestedRoute = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::HtmlElement<$0, _, _>")>]
#endif
type leptos_dom_html_HtmlElement<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Div")>]
#endif
type leptos_html_Div = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("dyn $0")>]
#endif
type Dyn<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::future::Future<Output = $0>")>]
#endif
type std_future_Future<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("[$0]")>]
#endif
type Slice<'T> = class end
#if FABLE_COMPILER
Fable.Core.RustInterop.emitRustExpr () ");
use leptos::prelude::*;
//"
#endif
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Fn($0, $1)")>]
#endif
type ActionFn2<'T, 'U> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos_router::NavigateOptions")>]
#endif
type leptos_router_NavigateOptions = class end
#if FABLE_COMPILER
Fable.Core.RustInterop.emitRustExpr () ");
use leptos::prelude::ElementChild;
//"
#endif
#if FABLE_COMPILER
Fable.Core.RustInterop.emitRustExpr () ");
use leptos::prelude::ClassAttribute;
//"
#endif
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("$0 $1")>]
#endif
type Lifetime<'T, 'U> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("'static")>]
#endif
type StaticLifetime = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Span")>]
#endif
type leptos_html_Span = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::svg::Path")>]
#endif
type leptos_svg_Path = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::svg::Svg")>]
#endif
type leptos_svg_Svg = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Summary")>]
#endif
type leptos_html_Summary = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Pre")>]
#endif
type leptos_html_Pre = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::svg::Circle")>]
#endif
type leptos_svg_Circle = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Button")>]
#endif
type leptos_html_Button = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Details")>]
#endif
type leptos_html_Details = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Input")>]
#endif
type leptos_html_Input = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::svg::Animate")>]
#endif
type leptos_svg_Animate = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::svg::Rect")>]
#endif
type leptos_svg_Rect = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Th")>]
#endif
type leptos_html_Th = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Tr")>]
#endif
type leptos_html_Tr = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("chrono::Utc")>]
#endif
type chrono_Utc = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("chrono::Local")>]
#endif
type chrono_Local = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Td")>]
#endif
type leptos_html_Td = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Thead")>]
#endif
type leptos_html_Thead = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Tbody")>]
#endif
type leptos_html_Tbody = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Table")>]
#endif
type leptos_html_Table = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Label")>]
#endif
type leptos_html_Label = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Dt")>]
#endif
type leptos_html_Dt = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Dd")>]
#endif
type leptos_html_Dd = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Dl")>]
#endif
type leptos_html_Dl = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Main")>]
#endif
type leptos_html_Main = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Option_")>]
#endif
type leptos_html_Option = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Select")>]
#endif
type leptos_html_Select = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::A")>]
#endif
type leptos_html_A = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Nav")>]
#endif
type leptos_html_Nav = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Fn()")>]
#endif
type FnUnit = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("js_sys::Function")>]
#endif
type js_sys_Function = class end
type [<Struct>] US0 =
    | US0_0 of f0_0 : web_sys_HtmlElement
    | US0_1
and [<Struct>] US1 =
    | US1_0
    | US1_1
and Heap0 = {l0 : Vec<(bool * std_string_String)>; l1 : std_string_String option; l2 : int32; l3 : int32; l4 : US1}
and Heap1 = {l0 : leptos_prelude_ArcRwSignal<bool>; l1 : leptos_prelude_ArcRwSignal<bool>; l2 : leptos_prelude_ArcRwSignal<std_string_String>; l3 : leptos_prelude_ArcRwSignal<Heap0>}
and  Heap2 = {l0 : leptos_prelude_ArcRwSignal<Heap1>; l1 : leptos_prelude_ArcRwSignal<std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>>}
and [<Struct>] US2 =
    | US2_0 of f0_0 : std_sync_Arc<rexie_Rexie>
    | US2_1
and Heap3 = {l0 : bool; l1 : bool; l2 : std_string_String; l3 : Heap0}
and [<Struct>] US3 =
    | US3_0 of f0_0 : Heap3 option
    | US3_1
and [<Struct>] US4 =
    | US4_0 of f0_0 : wasm_bindgen_JsValue
    | US4_1
and [<Struct>] US5 =
    | US5_0 of f0_0 : serde_json_Value
    | US5_1
and [<Struct>] US6 =
    | US6_0 of f0_0 : Heap3 option option
    | US6_1 of f1_0 : std_string_String
and [<Struct>] US8 =
    | US8_0 of f0_0 : Heap3
    | US8_1
and [<Struct>] US7 =
    | US7_0 of f0_0 : US8
    | US7_1
and [<Struct>] US9 =
    | US9_0 of f0_0 : web_sys_Storage option
    | US9_1 of f1_0 : wasm_bindgen_JsValue
and [<Struct>] US11 =
    | US11_0 of f0_0 : web_sys_Storage
    | US11_1
and [<Struct>] US10 =
    | US10_0 of f0_0 : US11
    | US10_1 of f1_0 : wasm_bindgen_JsValue
and [<Struct>] US12 =
    | US12_0 of f0_0 : std_string_String option
    | US12_1 of f1_0 : wasm_bindgen_JsValue
and [<Struct>] US14 =
    | US14_0 of f0_0 : std_string_String
    | US14_1
and [<Struct>] US13 =
    | US13_0 of f0_0 : US14
    | US13_1 of f1_0 : wasm_bindgen_JsValue
and [<Struct>] US15 =
    | US15_0 of f0_0 : US14
    | US15_1
and [<Struct>] US16 =
    | US16_0 of f0_0 : leptos_prelude_ArcRwSignal<bool>
    | US16_1
and [<Struct>] US17 =
    | US17_0 of f0_0 : bool
    | US17_1
and [<Struct>] US19 =
    | US19_0
and [<Struct>] US18 =
    | US18_0
    | US18_1 of f1_0 : US19
    | US18_2
    | US18_3
    | US18_4
and [<Struct>] US20 =
    | US20_0 of f0_0 : leptos_router_Url
    | US20_1 of f1_0 : std_string_String
and [<Struct>] US21 =
    | US21_0 of f0_0 : US18
    | US21_1
and [<Struct>] US22 =
    | US22_0 of f0_0 : leptos_dom_Fragment
    | US22_1
and [<Struct>] US23 =
    | US23_0
    | US23_1
and Mut0 = {mutable l0 : int32}
and UH0 =
    | UH0_0
    | UH0_1 of Vec<struct (string * US23 * string * bool * bool)> * UH0
and UH1 =
    | UH1_0
    | UH1_1 of Vec<string> * UH1
and Heap4 = {l0 : std_string_String}
and [<Struct>] US24 =
    | US24_0 of f0_0 : Vec<Heap4 option>
    | US24_1 of f1_0 : std_string_String
and [<Struct>] US25 =
    | US25_0 of f0_0 : Heap4
    | US25_1
and [<Struct>] US26 =
    | US26_0 of f0_0 : Result<Vec<Heap4 option>, std_string_String>
    | US26_1
and [<Struct>] US28 =
    | US28_0 of f0_0 : Vec<US25>
    | US28_1 of f1_0 : std_string_String
and [<Struct>] US27 =
    | US27_0 of f0_0 : US28
    | US27_1
and [<Struct>] US31 =
    | US31_0 of f0_0 : string
    | US31_1
and [<Struct>] US30 =
    | US30_0 of f0_0 : US31
    | US30_1 of f1_0 : std_string_String
and [<Struct>] US29 =
    | US29_0 of f0_0 : US30
    | US29_1
and [<Struct>] US32 =
    | US32_0 of f0_0 : US25
    | US32_1
and [<Struct>] US33 =
    | US33_0 of f0_0 : string option
    | US33_1 of f1_0 : std_string_String
and [<Struct>] US34 =
    | US34_0 of f0_0 : Vec<unit>
    | US34_1 of f1_0 : std_string_String
and [<Struct>] US36 =
    | US36_0 of f0_0 : (US25 [])
    | US36_1 of f1_0 : std_string_String
and [<Struct>] US35 =
    | US35_0 of f0_0 : US36
    | US35_1
and [<Struct>] US37 =
    | US37_0 of f0_0 : Result<Vec<string option>, std_string_String>
    | US37_1
and [<Struct>] US39 =
    | US39_0 of f0_0 : Vec<string option>
    | US39_1 of f1_0 : std_string_String
and [<Struct>] US38 =
    | US38_0 of f0_0 : US39
    | US38_1
and [<Struct>] US41 =
    | US41_0 of f0_0 : Vec<US31>
    | US41_1 of f1_0 : std_string_String
and [<Struct>] US40 =
    | US40_0 of f0_0 : US41
    | US40_1
and [<Struct>] US42 =
    | US42_0 of f0_0 : US31
    | US42_1
and Heap5 = {l0 : std_string_String; l1 : std_string_String; l2 : std_string_String; l3 : std_string_String; l4 : std_string_String; l5 : std_string_String; l6 : uint32; l7 : (struct (std_string_String * std_string_String option) []); l8 : float; l9 : bool; l10 : float; l11 : (std_string_String [])}
and [<Struct>] US43 =
    | US43_0 of f0_0 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option
    | US43_1 of f1_0 : std_string_String
and [<Struct>] US45 =
    | US45_0 of f0_0 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])
    | US45_1
and [<Struct>] US44 =
    | US44_0 of f0_0 : US45
    | US44_1 of f1_0 : std_string_String
and [<Struct>] US47 =
    | US47_0 of f0_0 : (struct (string * unativeint * Heap5) [])
    | US47_1
and [<Struct>] US46 =
    | US46_0 of f0_0 : US47
    | US46_1 of f1_0 : std_string_String
and [<Struct>] US49 =
    | US49_0 of f0_0 : Vec<struct (string * unativeint * Heap5)>
    | US49_1
and [<Struct>] US48 =
    | US48_0 of f0_0 : US49
    | US48_1 of f1_0 : std_string_String
and [<Struct>] US50 =
    | US50_0 of f0_0 : Vec<struct (string * unativeint * Heap5)> option
    | US50_1 of f1_0 : std_string_String
and UH2 =
    | UH2_0
    | UH2_1 of Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> * UH2
and Mut1 = {mutable l0 : int32; mutable l1 : UH2}
and [<Struct>] US51 =
    | US51_0 of f0_0 : Vec<struct (string * unativeint * Heap5)>
    | US51_1 of f1_0 : std_string_String
and [<Struct>] US52 =
    | US52_0 of f0_0 : (struct (string * unativeint * Heap5) [])
    | US52_1 of f1_0 : std_string_String
and [<Struct>] US53 =
    | US53_0 of f0_0 : (struct (string * unativeint * Heap5) []) option
    | US53_1 of f1_0 : std_string_String
and [<Struct>] US55 =
    | US55_0 of f0_0 : (struct (string * US23 * string * bool * bool) [])
    | US55_1
and [<Struct>] US54 =
    | US54_0 of f0_0 : US55
    | US54_1 of f1_0 : std_string_String
and [<Struct>] US56 =
    | US56_0 of f0_0 : (struct (string * US23 * string * bool * bool) []) option
    | US56_1 of f1_0 : std_string_String
and Heap6 = {l0 : int32}
and [<Struct>] US57 =
    | US57_0 of f0_0 : US14
    | US57_1 of f1_0 : std_string_String
and [<Struct>] US59 =
    | US59_0 of f0_0 : std_string_String * f0_1 : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * f0_2 : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * f0_3 : std_string_String option
    | US59_1
and [<Struct>] US58 =
    | US58_0 of f0_0 : US59
    | US58_1 of f1_0 : std_string_String
and [<Struct>] US60 =
    | US60_0 of f0_0 : crate_model_near_rpc_RpcResponse
    | US60_1 of f1_0 : std_string_String
and [<Struct>] US61 =
    | US61_0 of f0_0 : std_string_String * f0_1 : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * f0_2 : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * f0_3 : std_string_String option
    | US61_1 of f1_0 : std_string_String
and [<Struct>] US62 =
    | US62_0 of f0_0 : US58
    | US62_1
and [<Struct>] US63 =
    | US63_0 of f0_0 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option
    | US63_1 of f1_0 : std_string_String
and [<Struct>] US64 =
    | US64_0 of f0_0 : std_string_String * f0_1 : std_string_String * f0_2 : struct (std_string_String option * std_string_String option) option * f0_3 : int32 * f0_4 : std_string_String * f0_5 : std_string_String
    | US64_1
and [<Struct>] US65 =
    | US65_0 of f0_0 : leptos_prelude_ArcMemo<US31>
    | US65_1
and [<Struct>] US66 =
    | US66_0 of f0_0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>>
    | US66_1
and [<Struct>] US67 =
    | US67_0 of f0_0 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>
    | US67_1
and [<Struct>] US68 =
    | US68_0 of f0_0 : chrono_DateTime<chrono_Utc>
    | US68_1
and [<Struct>] US69 =
    | US69_0 of f0_0 : string
    | US69_1 of f1_0 : string
and Mut2 = {mutable l0 : int32; mutable l1 : US31}
and [<Struct>] US70 =
    | US70_0 of f0_0 : std_string_String
    | US70_1 of f1_0 : std_string_String
let rec closure1 () (v0 : web_sys_HtmlElement) : US0 =
    US0_0(v0)
and method0 () : (web_sys_HtmlElement -> US0) =
    closure1()
and method1 () : string =
    let v0 : string = ""
    v0
and method2 (v0 : web_sys_HtmlElement) : web_sys_HtmlElement =
    v0
and closure6 () (v0 : rexie_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method6 () : (rexie_Error -> std_string_String) =
    closure6()
and closure7 () (v0 : rexie_Rexie) : rexie_Rexie =
    v0
and method7 () : (rexie_Rexie -> rexie_Rexie) =
    closure7()
and method8 (v0 : int64, v1 : string) : string =
    let v2 : int64 = System.Convert.ToInt64 v1.Length
    let v3 : bool = v2 <= v0
    if v3 then
        v1
    else
        let v5 : (int64 -> float) = float
        let v6 : float = v5 v0
        let v9 : float = v6 / 2.0
        let v10 : (float -> float) = ceil
        let v11 : float = v10 v9
        let v13 : (float -> int64) = int64
        let v14 : int64 = v13 v11
        let v17 : (float -> float) = floor
        let v18 : float = v17 v9
        let v20 : (float -> int64) = int64
        let v21 : int64 = v20 v18
        let v24 : int64 = v14 - 1L
        let v26 : string = v1.[int 0L..int v24]
        let v30 : int64 = v2 - v21
        let v31 : int64 = v2 - 1L
        let v33 : string = v1.[int v30..int v31]
        let v37 : string = "..."
        let v38 : (string []) = [|v26; v37; v33|]
        let v40 : string seq = v38 |> Seq.ofArray
        let v44 : (string -> (string seq -> string)) = String.concat
        let v45 : string = ""
        let v46 : (string seq -> string) = v44 v45
        v46 v40
and closure8 () () : unit =
    let v0 : string = "} //"
    Fable.Core.RustInterop.emitRustExpr () v0 
    let v1 : string = "#[derive( //"
    Fable.Core.RustInterop.emitRustExpr () v1 
    let v2 : string = "  Debug, //"
    Fable.Core.RustInterop.emitRustExpr () v2 
    let v3 : string = "  Clone, //"
    Fable.Core.RustInterop.emitRustExpr () v3 
    let v4 : string = ")] //"
    Fable.Core.RustInterop.emitRustExpr () v4 
    let v5 : string = "pub struct PartialEqWrapper<T>(T); /*"
    Fable.Core.RustInterop.emitRustExpr () v5 
    let v6 : string = "*/ impl PartialEq for PartialEqWrapper< /*"
    Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : TypeEmit<std_sync_Arc<rexie_Rexie>> = null |> unbox<TypeEmit<std_sync_Arc<rexie_Rexie>>>
    let v11 : string = "*/ > { //"
    Fable.Core.RustInterop.emitRustExpr () v11 
    let v12 : string = "fn eq(&self, other: &Self) -> bool { //"
    Fable.Core.RustInterop.emitRustExpr () v12 
    let v13 : string = $"self"
    let v14 : Ref<PartialEqWrapper<std_sync_Arc<rexie_Rexie>>> = Fable.Core.RustInterop.emitRustExpr () v13 
    let v15 : string = $"other"
    let v16 : Ref<PartialEqWrapper<std_sync_Arc<rexie_Rexie>>> = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = "&$0.0"
    let v18 : Ref<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v16 v17 
    let v19 : string = "&$0.0"
    let v20 : Ref<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v14 v19 
    let v21 : string = "std::sync::Arc::ptr_eq($0, $1)"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr struct (v20, v18) v21 
    let v23 : string = $"v22 //"
    Fable.Core.RustInterop.emitRustExpr () v23 
    let v24 : string = "} } } fn _main() { { { //"
    Fable.Core.RustInterop.emitRustExpr () v24 
    ()
and closure9 () (v0 : std_sync_Arc<rexie_Rexie>) : US2 =
    US2_0(v0)
and method9 () : (std_sync_Arc<rexie_Rexie> -> US2) =
    closure9()
and method10 (v0 : Func0<string, std_string_String>) : Func0<string, std_string_String> =
    v0
and closure10 (v0 : Func0<string, std_string_String>) (v1 : string) : std_string_String =
    let v2 : Func0<string, std_string_String> = method10(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method11 (v0 : std_sync_Arc<rexie_Rexie>) : std_sync_Arc<rexie_Rexie> =
    v0
and closure11 () (v0 : rexie_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method12 () : (rexie_Error -> std_string_String) =
    closure11()
and method13 () : string =
    let v0 : string = "store"
    v0
and closure12 () (v0 : rexie_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method14 () : (rexie_Error -> std_string_String) =
    closure12()
and method15 () : string =
    let v0 : string = "core-state-heap"
    v0
and closure13 () (v0 : rexie_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method16 () : (rexie_Error -> std_string_String) =
    closure13()
and closure14 () (v0 : wasm_bindgen_JsValue) : US4 =
    US4_0(v0)
and method17 () : (wasm_bindgen_JsValue -> US4) =
    closure14()
and method18 (v0 : wasm_bindgen_JsValue) : wasm_bindgen_JsValue =
    v0
and closure15 () (v0 : serde_wasm_bindgen_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method19 () : (serde_wasm_bindgen_Error -> std_string_String) =
    closure15()
and closure16 () (v0 : serde_json_Value) : US5 =
    US5_0(v0)
and method20 () : (serde_json_Value -> US5) =
    closure16()
and method21 (v0 : serde_json_Value) : serde_json_Value =
    v0
and closure17 () (v0 : serde_json_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method22 () : (serde_json_Error -> std_string_String) =
    closure17()
and closure18 () (v0 : borsh_io_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method23 () : (borsh_io_Error -> std_string_String) =
    closure18()
and closure19 () (v0 : Heap3 option option) : US6 =
    US6_0(v0)
and method24 () : (Heap3 option option -> US6) =
    closure19()
and closure20 () (v0 : std_string_String) : US6 =
    US6_1(v0)
and method25 () : (std_string_String -> US6) =
    closure20()
and closure21 () (v0 : Heap3 option) : US3 =
    US3_0(v0)
and method26 () : (Heap3 option -> US3) =
    closure21()
and closure22 () (v0 : Heap3) : US8 =
    US8_0(v0)
and method27 () : (Heap3 -> US8) =
    closure22()
and method28 () : web_sys_Window =
    let v0 : string = "leptos::prelude::window()"
    let v1 : web_sys_Window = Fable.Core.RustInterop.emitRustExpr () v0 
    v1
and method29 (v0 : web_sys_Window) : Result<web_sys_Storage option, wasm_bindgen_JsValue> =
    let v1 : string = "$0.local_storage()"
    let v2 : Result<web_sys_Storage option, wasm_bindgen_JsValue> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    v2
and closure23 () (v0 : web_sys_Storage option) : US9 =
    US9_0(v0)
and method30 () : (web_sys_Storage option -> US9) =
    closure23()
and closure24 () (v0 : wasm_bindgen_JsValue) : US9 =
    US9_1(v0)
and method31 () : (wasm_bindgen_JsValue -> US9) =
    closure24()
and closure25 () (v0 : web_sys_Storage) : US11 =
    US11_0(v0)
and method32 () : (web_sys_Storage -> US11) =
    closure25()
and closure26 () (v0 : US8) : US7 =
    US7_0(v0)
and method33 () : (US8 -> US7) =
    closure26()
and method34 (v0 : web_sys_Storage) : web_sys_Storage =
    v0
and method35 () : string =
    let v0 : string = "core-state-heap"
    v0
and closure27 () (v0 : std_string_String option) : US12 =
    US12_0(v0)
and method36 () : (std_string_String option -> US12) =
    closure27()
and closure28 () (v0 : wasm_bindgen_JsValue) : US12 =
    US12_1(v0)
and method37 () : (wasm_bindgen_JsValue -> US12) =
    closure28()
and method38 (v0 : std_string_String option) : std_string_String option =
    v0
and closure29 () (v0 : std_string_String) : US14 =
    US14_0(v0)
and method39 () : (std_string_String -> US14) =
    closure29()
and method41 (v0 : string) : string =
    v0
and closure31 () (v0 : serde_json_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method42 () : (serde_json_Error -> std_string_String) =
    closure31()
and closure30 () (v0 : std_string_String) : US8 =
    let v1 : string = "fable_library_rust::String_::fromString($0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = method41(v2)
    (* run_target_args'
    let v8 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v9 : string = "&*$0"
    let v10 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3 v9 
    let _run_target_args'_v8 = v10 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v11 : string = "&*$0"
    let v12 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3 v11 
    let _run_target_args'_v8 = v12 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v13 : string = "&*$0"
    let v14 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3 v13 
    let _run_target_args'_v8 = v14 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v16 : Ref<Str> = v3 |> unbox<Ref<Str>>
    let _run_target_args'_v8 = v16 
    #endif
#if FABLE_COMPILER_PYTHON
    let v20 : Ref<Str> = v3 |> unbox<Ref<Str>>
    let _run_target_args'_v8 = v20 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v24 : Ref<Str> = v3 |> unbox<Ref<Str>>
    let _run_target_args'_v8 = v24 
    #endif
#else
    let v28 : Ref<Str> = v3 |> unbox<Ref<Str>>
    let _run_target_args'_v8 = v28 
    #endif
    let v31 : Ref<Str> = _run_target_args'_v8 
    let v37 : string = "serde_json::from_str(&$0)"
    let v38 : Result<Heap3, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v31 v37 
    let v39 : (serde_json_Error -> std_string_String) = method42()
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "$0.map_err(|x| $1(x))"
    let v43 : Result<Heap3, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v38, v39) v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "$0.map_err(|x| $1(x))"
    let v45 : Result<Heap3, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v38, v39) v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "$0.map_err(|x| $1(x))"
    let v47 : Result<Heap3, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v38, v39) v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v48 : Result<Heap3, std_string_String> = match v38 with Ok x -> Ok x | Error x -> Error (v39 x)
    let _run_target_args'_v41 = v48 
    #endif
#if FABLE_COMPILER_PYTHON
    let v49 : Result<Heap3, std_string_String> = match v38 with Ok x -> Ok x | Error x -> Error (v39 x)
    let _run_target_args'_v41 = v49 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v50 : Result<Heap3, std_string_String> = match v38 with Ok x -> Ok x | Error x -> Error (v39 x)
    let _run_target_args'_v41 = v50 
    #endif
#else
    let v51 : Result<Heap3, std_string_String> = match v38 with Ok x -> Ok x | Error x -> Error (v39 x)
    let _run_target_args'_v41 = v51 
    #endif
    let v52 : Result<Heap3, std_string_String> = _run_target_args'_v41 
    (* run_target_args'
    let v56 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v57 : string = "$0.ok()"
    let v58 : Heap3 option = Fable.Core.RustInterop.emitRustExpr v52 v57 
    let _run_target_args'_v56 = v58 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v59 : string = "$0.ok()"
    let v60 : Heap3 option = Fable.Core.RustInterop.emitRustExpr v52 v59 
    let _run_target_args'_v56 = v60 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v61 : string = "$0.ok()"
    let v62 : Heap3 option = Fable.Core.RustInterop.emitRustExpr v52 v61 
    let _run_target_args'_v56 = v62 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v63 : Heap3 option = match v52 with Ok x -> Some x | Error _ -> None
    let _run_target_args'_v56 = v63 
    #endif
#if FABLE_COMPILER_PYTHON
    let v64 : Heap3 option = match v52 with Ok x -> Some x | Error _ -> None
    let _run_target_args'_v56 = v64 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v65 : Heap3 option = match v52 with Ok x -> Some x | Error _ -> None
    let _run_target_args'_v56 = v65 
    #endif
#else
    let v66 : Heap3 option = match v52 with Ok x -> Some x | Error _ -> None
    let _run_target_args'_v56 = v66 
    #endif
    let v67 : Heap3 option = _run_target_args'_v56 
    let v72 : (Heap3 -> US8) = method27()
    let v73 : US8 option = v67 |> Option.map v72 
    let v87 : US8 = US8_1
    let v88 : US8 = v73 |> Option.defaultValue v87 
    v88
and method40 () : (std_string_String -> US8) =
    closure30()
and closure32 (v0 : Heap3) (v1 : bool) : bool =
    let v2 : string = "state_core.use_core_database (7) / effect core_state_heap / dark_mode signal_update"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : bool = v0.l0
    v5
and closure33 (v0 : Heap3) (v1 : bool) : bool =
    let v2 : string = "state_core.use_core_database (8) / effect core_state_heap / debug signal_update"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : bool = v0.l1
    v5
and closure34 (v0 : Heap3) (v1 : std_string_String) : std_string_String =
    let v2 : string = "state_core.use_core_database (9) / effect core_state_heap / url_hash signal_update"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : std_string_String = v0.l2
    v5
and closure35 (v0 : Heap3) (v1 : Heap0) : Heap0 =
    let v2 : string = "state_core.use_core_database (10) / effect core_state_heap / data signal_update"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : Heap0 = v0.l3
    v5
and closure36 (v0 : Heap2) () : std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>> =
    let v1 : string = "state_core.use_core_database (11) / loading new_arc_memo"
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : leptos_prelude_ArcRwSignal<std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>> = v0.l1
    let v5 : string = "Box::pin($0)"
    let v6 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>>>> = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v8 : std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>> = Fable.Core.RustInterop.emitRustExpr v6 v7 
    v8
and method43 () : string =
    let v0 : string = "core-state-heap"
    v0
and method44 (v0 : Func0<Heap3, std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>>) : Func0<Heap3, std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>> =
    v0
and closure37 (v0 : Func0<Heap3, std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>>) (v1 : Heap3) : std_pin_Pin<Box<Dyn<std_future_Future<unit>>>> =
    let v2 : Func0<Heap3, std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>> = method44(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : std_pin_Pin<Box<Dyn<std_future_Future<unit>>>> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method45 (v0 : std_string_String) : std_string_String =
    v0
and closure38 () (v0 : leptos_prelude_ArcRwSignal<bool>) : US16 =
    US16_0(v0)
and method46 () : (leptos_prelude_ArcRwSignal<bool> -> US16) =
    closure38()
and closure39 () (v0 : bool) : bool =
    let v1 : string = "state_core.use_core_database (17) / effect new_core_state_heap / set_loaded |> signal_update true"
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    true
and method47 (v0 : web_sys_Storage) : web_sys_Storage =
    v0
and method48 () : string =
    let v0 : string = "core-state-heap"
    v0
and method49 (v0 : Heap3) : Heap3 =
    v0
and closure40 (v0 : Heap2) () : bool =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<bool> = v5.l0
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr v6 v7 
    v8
and method50 (v0 : Heap2) : (unit -> bool) =
    closure40(v0)
and closure41 (v0 : leptos_router_location_Location) () : string =
    let v1 : string = "$0.pathname"
    let v2 : leptos_prelude_Memo<std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = $"leptos::prelude::Memo::get(&$0)"
    let v4 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = "fable_library_rust::String_::fromString($0)"
    let v6 : string = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : string = "$0.search"
    let v8 : leptos_prelude_Memo<std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v7 
    let v9 : string = $"leptos::prelude::Memo::get(&$0)"
    let v10 : std_string_String = Fable.Core.RustInterop.emitRustExpr v8 v9 
    let v11 : string = "fable_library_rust::String_::fromString($0)"
    let v12 : string = Fable.Core.RustInterop.emitRustExpr v10 v11 
    let v13 : bool = v12 = ""
    let v16 : string =
        if v13 then
            let v14 : string = ""
            v14
        else
            let v15 : string = $"?{v12}"
            v15
    let v17 : string = v6 + v16 
    v17
and method51 (v0 : std_string_String) : std_string_String =
    v0
and method52 (v0 : std_string_String) : std_string_String =
    v0
and closure42 () (v0 : leptos_router_Url) : US20 =
    US20_0(v0)
and method53 () : (leptos_router_Url -> US20) =
    closure42()
and closure43 () (v0 : std_string_String) : US20 =
    US20_1(v0)
and method54 () : (std_string_String -> US20) =
    closure43()
and closure45 () struct (v0 : bool, v1 : std_string_String) : bool =
    v0
and method55 () : (struct (bool * std_string_String) -> bool) =
    closure45()
and method56 (v0 : Vec<struct (bool * std_string_String)>) : Vec<struct (bool * std_string_String)> =
    v0
and closure44 (v0 : Heap2) () : Vec<string> =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<Heap0> = v5.l3
    let v7 : string = "Box::pin($0)"
    let v8 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v6 v7 
    let v9 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v10 : Heap0 = Fable.Core.RustInterop.emitRustExpr v8 v9 
    let v11 : Vec<(bool * std_string_String)> = v10.l0
    let v12 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
    let v13 : bool = Fable.Core.RustInterop.emitRustExpr v11 v12 
    let v14 : string = "x"
    let v15 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr () v14 
    let (a, b) = v15 
    let v18 : bool = a
    let v19 : std_string_String = b
    let v24 : string = "true; $0 }).collect::<Vec<_>>()"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr struct (v18, v19) v24 
    let v26 : string = "_vec_map"
    let v27 : Vec<struct (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : (struct (bool * std_string_String) -> bool) = method55()
    let v29 : Vec<struct (bool * std_string_String)> = method56(v27)
    let v30 : string = "v29.into_iter().filter(|x| v28(x.clone().clone())).collect::<Vec<_>>()"
    let v31 : Vec<struct (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v30 
    let v32 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
    let v33 : bool = Fable.Core.RustInterop.emitRustExpr v31 v32 
    let v34 : string = "x"
    let struct (v35 : bool, v36 : std_string_String) = Fable.Core.RustInterop.emitRustExpr () v34 
    let v37 : string = "true; $0 }).collect::<Vec<_>>()"
    let v38 : bool = Fable.Core.RustInterop.emitRustExpr v36 v37 
    let v39 : string = "_vec_map"
    let v40 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v39 
    let v41 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
    let v42 : bool = Fable.Core.RustInterop.emitRustExpr v40 v41 
    let v43 : string = "x"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v43 
    let v45 : string = "fable_library_rust::String_::fromString($0)"
    let v46 : string = Fable.Core.RustInterop.emitRustExpr v44 v45 
    let v47 : string = "true; $0 }).collect::<Vec<_>>()"
    let v48 : bool = Fable.Core.RustInterop.emitRustExpr v46 v47 
    let v49 : string = "_vec_map"
    let v50 : Vec<string> = Fable.Core.RustInterop.emitRustExpr () v49 
    let v52 : string = $"%A{v50}"
    let v55 : string = "use_transactions.render (2) / accounts new_arc_memo / result: " + string v52 + ""
    let v56 : int64 = 200L
    let v57 : string = method8(v56, v55)
    let v58 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v59 : bool = Fable.Core.RustInterop.emitRustExpr v57 v58 
    v50
and method57 (v0 : Func0<string, struct (string * US23 * string * bool * bool)>) : Func0<string, struct (string * US23 * string * bool * bool)> =
    v0
and closure47 (v0 : Func0<string, struct (string * US23 * string * bool * bool)>) (v1 : string) : struct (string * US23 * string * bool * bool) =
    let v2 : Func0<string, struct (string * US23 * string * bool * bool)> = method57(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : string, v6 : US23, v7 : string, v8 : bool, v9 : bool) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9)
and closure46 (v0 : leptos_prelude_ArcMemo<Vec<string>>) () : (struct (string * US23 * string * bool * bool) []) =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let v7 : string = Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : string = "https://api3.nearblocks.io/v1/account/" + v7 + ""
    let v9 : US23 = US23_0
    let v10 : string = ""
    let func1_from_result = struct (v8, v9, v10, false, true) //
    let v11 : _ = func1_from_result
    let v12 : string = $"true; $0 /*"
    let v13 : bool = Fable.Core.RustInterop.emitRustExpr v11 v12 
    let v14 : string = $"*/ }}); //"
    let v15 : bool = Fable.Core.RustInterop.emitRustExpr () v14 
    let v16 : string = $"_func1_from_v3"
    let v17 : Func0<string, struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr () v16 
    let v18 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v19 : (string -> struct (string * US23 * string * bool * bool)) = closure47(v17)
    let v20 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr struct (v2, v19) v18 
    let v21 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v22 : (struct (string * US23 * string * bool * bool) []) = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v24 : string = $"%A{v22}"
    let v27 : string = "use_transactions.render (3) / accounts_metadata new_arc_memo / result: " + string v24 + ""
    let v28 : int64 = 200L
    let v29 : string = method8(v28, v27)
    let v30 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v31 : bool = Fable.Core.RustInterop.emitRustExpr v29 v30 
    v22
and method59 (v0 : int32, v1 : Mut0) : bool =
    let v2 : int32 = v1.l0
    let v3 : bool = v2 < v0
    v3
and method58 (v0 : Heap0) : Vec<int32> =
    let v1 : int32 = v0.l3
    let v2 : (int32 []) = Array.zeroCreate<int32> (v1)
    let v3 : Mut0 = {l0 = 0} : Mut0
    while method59(v1, v3) do
        let v5 : int32 = v3.l0
        v2.[int v5] <- v5
        let v6 : int32 = v5 + 1
        v3.l0 <- v6
        ()
    let v7 : string = "$0.to_vec()"
    let v8 : Vec<int32> = Fable.Core.RustInterop.emitRustExpr v2 v7 
    v8
and method60 (v0 : Func0<int32, struct (string * US23 * string * bool * bool)>) : Func0<int32, struct (string * US23 * string * bool * bool)> =
    v0
and closure49 (v0 : Func0<int32, struct (string * US23 * string * bool * bool)>) (v1 : int32) : struct (string * US23 * string * bool * bool) =
    let v2 : Func0<int32, struct (string * US23 * string * bool * bool)> = method60(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : string, v6 : US23, v7 : string, v8 : bool, v9 : bool) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9)
and method61 (v0 : Func0<string, struct (string * Vec<struct (string * US23 * string * bool * bool)>)>) : Func0<string, struct (string * Vec<struct (string * US23 * string * bool * bool)>)> =
    v0
and closure50 (v0 : Func0<string, struct (string * Vec<struct (string * US23 * string * bool * bool)>)>) (v1 : string) : struct (string * Vec<struct (string * US23 * string * bool * bool)>) =
    let v2 : Func0<string, struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = method61(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : string, v6 : Vec<struct (string * US23 * string * bool * bool)>) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6)
and closure48 (v0 : Heap2, v1 : leptos_prelude_ArcMemo<Vec<string>>) () : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> =
    let v2 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v3 : string = "Box::pin($0)"
    let v4 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v6 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : leptos_prelude_ArcRwSignal<Heap0> = v6.l3
    let v8 : string = "Box::pin($0)"
    let v9 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v10 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v11 : Heap0 = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v13 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v1 v12 
    let v14 : unit = ()
    let v15 : string = $"true; let _func1_from_v14 = Func1::from(move |value| {{ //"
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = $"value"
    let v18 : string = Fable.Core.RustInterop.emitRustExpr () v17 
    let v19 : Vec<int32> = method58(v11)
    let v20 : unit = ()
    let v21 : string = $"true; let _func1_from_v20 = Func1::from(move |value| {{ //"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr () v21 
    let v23 : string = $"value"
    let v24 : int32 = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : int32 = v24 + 1
    let v26 : string = "https://api3.nearblocks.io/v1/account/" + v18 + "/txns?&order=desc&page=" + string v25 + "&per_page=" + string 25 + ""
    let v27 : US23 = US23_0
    let v28 : string = ""
    let func1_from_result = struct (v26, v27, v28, false, true) //
    let v29 : _ = func1_from_result
    let v30 : string = $"true; $0 /*"
    let v31 : bool = Fable.Core.RustInterop.emitRustExpr v29 v30 
    let v32 : string = $"*/ }}); //"
    let v33 : bool = Fable.Core.RustInterop.emitRustExpr () v32 
    let v34 : string = $"_func1_from_v20"
    let v35 : Func0<int32, struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr () v34 
    let v36 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v37 : (int32 -> struct (string * US23 * string * bool * bool)) = closure49(v35)
    let v38 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr struct (v19, v37) v36 
    let func1_from_result = struct (v18, v38) //
    let v39 : _ = func1_from_result
    let v40 : string = $"true; $0 /*"
    let v41 : bool = Fable.Core.RustInterop.emitRustExpr v39 v40 
    let v42 : string = $"*/ }}); //"
    let v43 : bool = Fable.Core.RustInterop.emitRustExpr () v42 
    let v44 : string = $"_func1_from_v14"
    let v45 : Func0<string, struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr () v44 
    let v46 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v47 : (string -> struct (string * Vec<struct (string * US23 * string * bool * bool)>)) = closure50(v45)
    let v48 : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr struct (v13, v47) v46 
    let v50 : string = $"%A{v48}"
    let v53 : string = "use_transactions.render (4) / accounts_requests new_arc_memo / result: " + string v50 + ""
    let v54 : int64 = 200L
    let v55 : string = method8(v54, v53)
    let v56 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v57 : bool = Fable.Core.RustInterop.emitRustExpr v55 v56 
    v48
and method62 (v0 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<struct (string * US23 * string * bool * bool)>>) : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<struct (string * US23 * string * bool * bool)>> =
    v0
and closure52 (v0 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<struct (string * US23 * string * bool * bool)>>) struct (v1 : string, v2 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<struct (string * US23 * string * bool * bool)> =
    let v3 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<struct (string * US23 * string * bool * bool)>> = method62(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let v6 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v4 v5 
    v6
and closure54 (v0 : Vec<struct (string * US23 * string * bool * bool)>) (v1 : UH0) : UH0 =
    UH0_1(v0, v1)
and closure53 () (v0 : Vec<struct (string * US23 * string * bool * bool)>) : (UH0 -> UH0) =
    closure54(v0)
and method63 () : (Vec<struct (string * US23 * string * bool * bool)> -> (UH0 -> UH0)) =
    closure53()
and method65 (v0 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<struct (string * US23 * string * bool * bool)> =
    v0
and method66 (v0 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<struct (string * US23 * string * bool * bool)> =
    v0
and method64 (v0 : UH0, v1 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<struct (string * US23 * string * bool * bool)> =
    match v0 with
    | UH0_1(v2, v3) -> (* Cons *)
        let v4 : Vec<struct (string * US23 * string * bool * bool)> = method65(v2)
        let v5 : Vec<struct (string * US23 * string * bool * bool)> = method66(v1)
        let v6 : string = "true; let mut v5 = v5"
        let v7 : bool = Fable.Core.RustInterop.emitRustExpr () v6 
        let v8 : string = "true; v5.extend(v4)"
        let v9 : bool = Fable.Core.RustInterop.emitRustExpr () v8 
        let v10 : string = "v5"
        let v11 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr () v10 
        method64(v3, v11)
    | UH0_0 -> (* Nil *)
        v1
and closure51 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>>) () : Vec<struct (string * US23 * string * bool * bool)> =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let struct (v7 : string, v8 : Vec<struct (string * US23 * string * bool * bool)>) = Fable.Core.RustInterop.emitRustExpr () v6 
    let func1_from_result = v8 //
    let v9 : _ = func1_from_result
    let v10 : string = $"true; $0 /*"
    let v11 : bool = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = $"*/ }}); //"
    let v13 : bool = Fable.Core.RustInterop.emitRustExpr () v12 
    let v14 : string = $"_func1_from_v3"
    let v15 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr () v14 
    let v16 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v17 : (struct (string * Vec<struct (string * US23 * string * bool * bool)>) -> Vec<struct (string * US23 * string * bool * bool)>) = closure52(v15)
    let v18 : Vec<Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr struct (v2, v17) v16 
    let v19 : (struct (string * US23 * string * bool * bool) []) = [||]
    let v20 : string = "$0.to_vec()"
    let v21 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v19 v20 
    let v22 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v23 : (Vec<struct (string * US23 * string * bool * bool)> []) = Fable.Core.RustInterop.emitRustExpr v18 v22 
    let v25 : Vec<struct (string * US23 * string * bool * bool)> list = v23 |> Array.toList
    let v33 : ((Vec<struct (string * US23 * string * bool * bool)> -> (UH0 -> UH0)) -> (Vec<struct (string * US23 * string * bool * bool)> list -> (UH0 -> UH0))) = List.foldBack
    let v34 : (Vec<struct (string * US23 * string * bool * bool)> -> (UH0 -> UH0)) = method63()
    let v35 : (Vec<struct (string * US23 * string * bool * bool)> list -> (UH0 -> UH0)) = v33 v34
    let v36 : (UH0 -> UH0) = v35 v25
    let v37 : UH0 = UH0_0
    let v38 : UH0 = v36 v37
    let v67 : Vec<struct (string * US23 * string * bool * bool)> = method64(v38, v21)
    let v69 : string = $"%A{v67}"
    let v72 : string = "use_transactions.render (5) / txns_requests new_arc_memo / result: " + string v69 + ""
    let v73 : int64 = 200L
    let v74 : string = method8(v73, v72)
    let v75 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v76 : bool = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v67
and method67 (v0 : Func0<struct (string * US23 * string * bool * bool), string>) : Func0<struct (string * US23 * string * bool * bool), string> =
    v0
and closure56 (v0 : Func0<struct (string * US23 * string * bool * bool), string>) struct (v1 : string, v2 : US23, v3 : string, v4 : bool, v5 : bool) : string =
    let v6 : Func0<struct (string * US23 * string * bool * bool), string> = method67(v0)
    let func1_move_x = struct (v1, v2, v3, v4, v5) //
    let v7 : _ = func1_move_x
    let v8 : string = "(move |x| v6(x))($0)"
    let v9 : string = Fable.Core.RustInterop.emitRustExpr v7 v8 
    v9
and method68 (v0 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<string>>) : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<string>> =
    v0
and closure57 (v0 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<string>>) struct (v1 : string, v2 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<string> =
    let v3 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<string>> = method68(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let v6 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v4 v5 
    v6
and closure59 (v0 : Vec<string>) (v1 : UH1) : UH1 =
    UH1_1(v0, v1)
and closure58 () (v0 : Vec<string>) : (UH1 -> UH1) =
    closure59(v0)
and method69 () : (Vec<string> -> (UH1 -> UH1)) =
    closure58()
and method71 (v0 : Vec<string>) : Vec<string> =
    v0
and method72 (v0 : Vec<string>) : Vec<string> =
    v0
and method70 (v0 : UH1, v1 : Vec<string>) : Vec<string> =
    match v0 with
    | UH1_1(v2, v3) -> (* Cons *)
        let v4 : Vec<string> = method71(v2)
        let v5 : Vec<string> = method72(v1)
        let v6 : string = "true; let mut v5 = v5"
        let v7 : bool = Fable.Core.RustInterop.emitRustExpr () v6 
        let v8 : string = "true; v5.extend(v4)"
        let v9 : bool = Fable.Core.RustInterop.emitRustExpr () v8 
        let v10 : string = "v5"
        let v11 : Vec<string> = Fable.Core.RustInterop.emitRustExpr () v10 
        method70(v3, v11)
    | UH1_0 -> (* Nil *)
        v1
and closure55 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>>) () : (string []) =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let struct (v7 : string, v8 : Vec<struct (string * US23 * string * bool * bool)>) = Fable.Core.RustInterop.emitRustExpr () v6 
    let v9 : unit = ()
    let v10 : string = $"true; let _func1_from_v9 = Func1::from(move |value| {{ //"
    let v11 : bool = Fable.Core.RustInterop.emitRustExpr () v10 
    let v12 : string = $"value"
    let struct (v13 : string, v14 : US23, v15 : string, v16 : bool, v17 : bool) = Fable.Core.RustInterop.emitRustExpr () v12 
    let func1_from_result = v7 //
    let v18 : _ = func1_from_result
    let v19 : string = $"true; $0 /*"
    let v20 : bool = Fable.Core.RustInterop.emitRustExpr v18 v19 
    let v21 : string = $"*/ }}); //"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr () v21 
    let v23 : string = $"_func1_from_v9"
    let v24 : Func0<struct (string * US23 * string * bool * bool), string> = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v26 : (struct (string * US23 * string * bool * bool) -> string) = closure56(v24)
    let v27 : Vec<string> = Fable.Core.RustInterop.emitRustExpr struct (v8, v26) v25 
    let func1_from_result = v27 //
    let v28 : _ = func1_from_result
    let v29 : string = $"true; $0 /*"
    let v30 : bool = Fable.Core.RustInterop.emitRustExpr v28 v29 
    let v31 : string = $"*/ }}); //"
    let v32 : bool = Fable.Core.RustInterop.emitRustExpr () v31 
    let v33 : string = $"_func1_from_v3"
    let v34 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<string>> = Fable.Core.RustInterop.emitRustExpr () v33 
    let v35 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v36 : (struct (string * Vec<struct (string * US23 * string * bool * bool)>) -> Vec<string>) = closure57(v34)
    let v37 : Vec<Vec<string>> = Fable.Core.RustInterop.emitRustExpr struct (v2, v36) v35 
    let v38 : (string []) = [||]
    let v39 : string = "$0.to_vec()"
    let v40 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v38 v39 
    let v41 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v42 : (Vec<string> []) = Fable.Core.RustInterop.emitRustExpr v37 v41 
    let v44 : Vec<string> list = v42 |> Array.toList
    let v52 : ((Vec<string> -> (UH1 -> UH1)) -> (Vec<string> list -> (UH1 -> UH1))) = List.foldBack
    let v53 : (Vec<string> -> (UH1 -> UH1)) = method69()
    let v54 : (Vec<string> list -> (UH1 -> UH1)) = v52 v53
    let v55 : (UH1 -> UH1) = v54 v44
    let v56 : UH1 = UH1_0
    let v57 : UH1 = v55 v56
    let v86 : Vec<string> = method70(v57, v40)
    let v87 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v88 : (string []) = Fable.Core.RustInterop.emitRustExpr v86 v87 
    let v90 : string = $"%A{v88}"
    let v93 : string = "use_transactions.render (6) / urls_accounts new_arc_memo / result: " + string v90 + ""
    let v94 : int64 = 200L
    let v95 : string = method8(v94, v93)
    let v96 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v97 : bool = Fable.Core.RustInterop.emitRustExpr v95 v96 
    v88
and method73 (v0 : Func0<crate_model_near_nearblocks_Action, struct (std_string_String * std_string_String option)>) : Func0<crate_model_near_nearblocks_Action, struct (std_string_String * std_string_String option)> =
    v0
and closure61 (v0 : Func0<crate_model_near_nearblocks_Action, struct (std_string_String * std_string_String option)>) (v1 : crate_model_near_nearblocks_Action) : struct (std_string_String * std_string_String option) =
    let v2 : Func0<crate_model_near_nearblocks_Action, struct (std_string_String * std_string_String option)> = method73(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : std_string_String option) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6)
and method74 (v0 : (struct (std_string_String * std_string_String option) [])) : (struct (std_string_String * std_string_String option) []) =
    v0
and closure62 () (v0 : Vec<std_string_String>) : (std_string_String []) =
    let v1 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v2 : (std_string_String []) = Fable.Core.RustInterop.emitRustExpr v0 v1 
    v2
and method75 () : (Vec<std_string_String> -> (std_string_String [])) =
    closure62()
and method76 (v0 : Func0<crate_model_near_nearblocks_Txn, struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))>) : Func0<crate_model_near_nearblocks_Txn, struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> =
    v0
and closure63 (v0 : Func0<crate_model_near_nearblocks_Txn, struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))>) (v1 : crate_model_near_nearblocks_Txn) : struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) =
    let v2 : Func0<crate_model_near_nearblocks_Txn, struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = method76(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : std_string_String, v7 : std_string_String, v8 : std_string_String, v9 : std_string_String, v10 : std_string_String, v11 : uint32, v12 : (struct (std_string_String * std_string_String option) []), v13 : float, v14 : bool, v15 : float, v16 : (std_string_String [])) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16)
and method77 (v0 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) =
    v0
and closure60 () (v0 : crate_model_near_nearblocks_Root) : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) =
    let v1 : string = "$0.txns"
    let v2 : Vec<crate_model_near_nearblocks_Txn> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let v7 : crate_model_near_nearblocks_Txn = Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : string = "$0.receipt_id"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v10 : string = "$0.predecessor_account_id"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v10 
    let v12 : string = "$0.receiver_account_id"
    let v13 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v12 
    let v14 : string = "$0.transaction_hash"
    let v15 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v14 
    let v16 : string = "$0.included_in_block_hash"
    let v17 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v16 
    let v18 : string = "$0.block_timestamp"
    let v19 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v18 
    let v20 : string = "$0.block"
    let v21 : crate_model_near_nearblocks_Block = Fable.Core.RustInterop.emitRustExpr v7 v20 
    let v22 : string = "$0.block_height"
    let v23 : uint32 = Fable.Core.RustInterop.emitRustExpr v21 v22 
    let v24 : string = "$0.actions"
    let v25 : Vec<crate_model_near_nearblocks_Action> = Fable.Core.RustInterop.emitRustExpr v7 v24 
    let v26 : unit = ()
    let v27 : string = $"true; let _func1_from_v26 = Func1::from(move |value| {{ //"
    let v28 : bool = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : string = $"value"
    let v30 : crate_model_near_nearblocks_Action = Fable.Core.RustInterop.emitRustExpr () v29 
    let v31 : string = "$0.action"
    let v32 : std_string_String = Fable.Core.RustInterop.emitRustExpr v30 v31 
    let v33 : string = "$0.method"
    let v34 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v30 v33 
    let func1_from_result = struct (v32, v34) //
    let v35 : _ = func1_from_result
    let v36 : string = $"true; $0 /*"
    let v37 : bool = Fable.Core.RustInterop.emitRustExpr v35 v36 
    let v38 : string = $"*/ }}); //"
    let v39 : bool = Fable.Core.RustInterop.emitRustExpr () v38 
    let v40 : string = $"_func1_from_v26"
    let v41 : Func0<crate_model_near_nearblocks_Action, struct (std_string_String * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr () v40 
    let v42 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v43 : (crate_model_near_nearblocks_Action -> struct (std_string_String * std_string_String option)) = closure61(v41)
    let v44 : Vec<struct (std_string_String * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr struct (v25, v43) v42 
    let v45 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v46 : (struct (std_string_String * std_string_String option) []) = Fable.Core.RustInterop.emitRustExpr v44 v45 
    let v47 : (struct (std_string_String * std_string_String option) []) = method74(v46)
    let v48 : string = "$0.actions_agg"
    let v49 : crate_model_near_nearblocks_ActionsAgg = Fable.Core.RustInterop.emitRustExpr v7 v48 
    let v50 : string = "$0.deposit"
    let v51 : float = Fable.Core.RustInterop.emitRustExpr v49 v50 
    let v52 : string = "$0.outcomes"
    let v53 : crate_model_near_nearblocks_Outcomes = Fable.Core.RustInterop.emitRustExpr v7 v52 
    let v54 : string = "$0.status"
    let v55 : bool = Fable.Core.RustInterop.emitRustExpr v53 v54 
    let v56 : string = "$0.outcomes_agg"
    let v57 : crate_model_near_nearblocks_OutcomesAgg = Fable.Core.RustInterop.emitRustExpr v7 v56 
    let v58 : string = "$0.transaction_fee"
    let v59 : float = Fable.Core.RustInterop.emitRustExpr v57 v58 
    let v60 : string = "$0.logs"
    let v61 : Vec<std_string_String> option = Fable.Core.RustInterop.emitRustExpr v7 v60 
    let v64 : (Vec<std_string_String> -> (std_string_String [])) = method75()
    let v65 : (std_string_String []) option = v61 |> Option.map v64 
    let v78 : (std_string_String []) = [||]
    let v80 : (std_string_String []) = v65 |> Option.defaultValue v78 
    let func1_from_result = struct (v9, v11, v13, v15, v17, v19, v23, v47, v51, v55, v59, v80) //
    let v83 : _ = func1_from_result
    let v84 : string = $"true; $0 /*"
    let v85 : bool = Fable.Core.RustInterop.emitRustExpr v83 v84 
    let v86 : string = $"*/ }}); //"
    let v87 : bool = Fable.Core.RustInterop.emitRustExpr () v86 
    let v88 : string = $"_func1_from_v3"
    let v89 : Func0<crate_model_near_nearblocks_Txn, struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr () v88 
    let v90 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v91 : (crate_model_near_nearblocks_Txn -> struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))) = closure63(v89)
    let v92 : Vec<struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr struct (v2, v91) v90 
    let v93 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v94 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) = Fable.Core.RustInterop.emitRustExpr v92 v93 
    let v95 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) = method77(v94)
    v95
and closure64 (v0 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>>) () : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option =
    let v1 : string = "state_core.use_requests (2) / database_memo"
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v5 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v0 v4 
    let v6 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v7 : bool = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : string = "x"
    let v9 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : (unit -> unit) = closure8()
    let _v10 = true
    let v11 : string = "PartialEqWrapper($0)"
    let v12 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v9 v11 
    let v13 : string = "true; $0 })"
    let v14 : bool = Fable.Core.RustInterop.emitRustExpr v12 v13 
    let v15 : string = "_optionm_map_"
    let v16 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr () v15 
    v16
and method79 (v0 : string) : string =
    v0
and method80 (v0 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>>) : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> =
    v0
and closure65 (v0 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>>) struct (v1 : string, v2 : US23, v3 : string, v4 : bool, v5 : bool) : std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>> =
    let v6 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = method80(v0)
    let func1_move_x = struct (v1, v2, v3, v4, v5) //
    let v7 : _ = func1_move_x
    let v8 : string = "(move |x| v6(x))($0)"
    let v9 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr v7 v8 
    v9
and method81 (v0 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>>) : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> =
    v0
and closure66 (v0 : leptos_prelude_ArcLocalResource<Result<Vec<Heap4 option>, std_string_String>>) () : Result<Vec<Heap4 option>, std_string_String> option =
    let v1 : string = "state_core.use_requests (5) / state_data_func"
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : web_sys_Window = method28()
    let v5 : Result<web_sys_Storage option, wasm_bindgen_JsValue> = method29(v4)
    let v6 : (web_sys_Storage option -> US9) = method30()
    let v7 : (wasm_bindgen_JsValue -> US9) = method31()
    let v9 : US9 = match v5 with Ok x -> v6 x | Error x -> v7 x
    let v39 : US10 =
        match v9 with
        | US9_1(v36) -> (* Error *)
            US10_1(v36)
        | US9_0(v12) -> (* Ok *)
            let v15 : (web_sys_Storage -> US11) = method32()
            let v16 : US11 option = v12 |> Option.map v15 
            let v30 : US11 = US11_1
            let v31 : US11 = v16 |> Option.defaultValue v30 
            US10_0(v31)
    let v47 : Result<Vec<Heap4 option>, std_string_String> option =
        match v39 with
        | US10_0(v40) -> (* Ok *)
            match v40 with
            | US11_0(v41) -> (* Some *)
                let v42 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
                let v43 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v0 v42 
                v43
            | _ ->
                let v44 : Result<Vec<Heap4 option>, std_string_String> option = None
                v44
        | _ ->
            let v46 : Result<Vec<Heap4 option>, std_string_String> option = None
            v46
    let v49 : string = $"%A{v47}"
    let v52 : string = "state_core.use_requests (6) / state_data_func func0 / result: " + string v49 + ""
    let v53 : int64 = 200L
    let v54 : string = method8(v53, v52)
    let v55 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v56 : bool = Fable.Core.RustInterop.emitRustExpr v54 v55 
    v47
and closure67 () (v0 : Result<Vec<Heap4 option>, std_string_String>) : US26 =
    US26_0(v0)
and method82 () : (Result<Vec<Heap4 option>, std_string_String> -> US26) =
    closure67()
and closure68 () (v0 : Vec<Heap4 option>) : US24 =
    US24_0(v0)
and method83 () : (Vec<Heap4 option> -> US24) =
    closure68()
and closure69 () (v0 : std_string_String) : US24 =
    US24_1(v0)
and method84 () : (std_string_String -> US24) =
    closure69()
and closure70 () (v0 : Heap4) : US25 =
    US25_0(v0)
and method85 () : (Heap4 -> US25) =
    closure70()
and closure73 () (v0 : US25) : US32 =
    US32_0(v0)
and method87 () : (US25 -> US32) =
    closure73()
and method88 (v0 : US23) : US23 =
    v0
and method89 (v0 : string) : string =
    v0
and method90 (v0 : std_string_String) : std_string_String =
    v0
and method91 (v0 : string) : string =
    v0
and method92 (v0 : std_string_String) : std_string_String =
    v0
and method93 (v0 : reqwest_RequestBuilder) : reqwest_RequestBuilder =
    v0
and method94 (v0 : reqwest_RequestBuilder) : reqwest_RequestBuilder =
    v0
and closure74 () (v0 : reqwest_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method95 () : (reqwest_Error -> std_string_String) =
    closure74()
and closure72 (v0 : US27, v1 : int32) struct (v2 : string, v3 : US23, v4 : string, v5 : bool, v6 : bool) : std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>> =
    let v7 : string = "true; let __future_init = Box::pin(/*"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr () v7 
    let v9 : string = "*/ async move { /*"
    let v10 : bool = Fable.Core.RustInterop.emitRustExpr () v9 
    let v11 : string = "*/ ()"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr () v11 
    let v63 : US29 =
        match v0 with
        | US27_1 -> (* None *)
            US29_1
        | US27_0(v13) -> (* Some *)
            let v59 : US30 =
                match v13 with
                | US28_1(v56) -> (* Error *)
                    US30_1(v56)
                | US28_0(v14) -> (* Ok *)
                    let v15 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v16 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v14 v15 
                    let v17 : US25 option = v16 |> Array.tryItem v1 
                    let v20 : (US25 -> US32) = method87()
                    let v21 : US32 option = v17 |> Option.map v20 
                    let v35 : US32 = US32_1
                    let v36 : US32 = v21 |> Option.defaultValue v35 
                    let v46 : US25 =
                        match v36 with
                        | US32_0(v40) -> (* Some *)
                            match v40 with
                            | US25_0(v41) -> (* Some *)
                                US25_0(v41)
                            | _ ->
                                US25_1
                        | _ ->
                            US25_1
                    let v54 : US31 =
                        match v46 with
                        | US25_1 -> (* None *)
                            US31_1
                        | US25_0(v47) -> (* Some *)
                            let v48 : std_string_String = v47.l0
                            let v49 : string = "fable_library_rust::String_::fromString($0)"
                            let v50 : string = Fable.Core.RustInterop.emitRustExpr v48 v49 
                            US31_0(v50)
                    US30_0(v54)
            US29_0(v59)
    let v65 : string = $"%A{struct (v3, v5, v6)}"
    let v68 : int64 = 400L
    let v69 : string = method8(v68, v65)
    let v71 : string = $"%A{v0}"
    let v74 : int64 = 400L
    let v75 : string = method8(v74, v71)
    let v77 : string = $"%A{v63}"
    let v80 : int64 = 400L
    let v81 : string = method8(v80, v77)
    let v106 : bool =
        if v6 then
            true
        else
            match v0 with
            | US27_0(v82) -> (* Some *)
                match v82 with
                | US28_0(v83) -> (* Ok *)
                    let v84 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v85 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v83 v84 
                    let v86 : int32 = v85.Length
                    let v87 : bool = v86 = 0
                    if v87 then
                        false
                    else
                        match v63 with
                        | US29_0(v88) -> (* Some *)
                            match v88 with
                            | US30_0(v89) -> (* Ok *)
                                match v89 with
                                | US31_1 -> (* None *)
                                    true
                                | _ ->
                                    false
                            | _ ->
                                false
                        | _ ->
                            false
                | _ ->
                    match v63 with
                    | US29_0(v94) -> (* Some *)
                        match v94 with
                        | US30_0(v95) -> (* Ok *)
                            match v95 with
                            | US31_1 -> (* None *)
                                true
                            | _ ->
                                false
                        | _ ->
                            false
                    | _ ->
                        false
            | _ ->
                match v63 with
                | US29_0(v100) -> (* Some *)
                    match v100 with
                    | US30_0(v101) -> (* Ok *)
                        match v101 with
                        | US31_1 -> (* None *)
                            true
                        | _ ->
                            false
                    | _ ->
                        false
                | _ ->
                    false
    let v107 : string = "state_core.use_requests (9) / result memo / state_data: " + string v75 + " / state_data': " + string v81 + " / request: " + string v69 + " / should_fetch: " + string v106 + ""
    let v108 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v109 : bool = Fable.Core.RustInterop.emitRustExpr v107 v108 
    let v110 : bool = v106 = false
    let v520 : US33 =
        if v110 then
            let v111 : string option = None
            US33_0(v111)
        else
            let v113 : US23 = method88(v3)
            let v255 : reqwest_RequestBuilder =
                match v113 with
                | US23_0 -> (* Get *)
                    let v114 : string = method89(v2)
                    (* run_target_args'
                    let v119 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v120 : string = "&*$0"
                    let v121 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v114 v120 
                    let _run_target_args'_v119 = v121 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v122 : string = "&*$0"
                    let v123 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v114 v122 
                    let _run_target_args'_v119 = v123 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v124 : string = "&*$0"
                    let v125 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v114 v124 
                    let _run_target_args'_v119 = v125 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v127 : Ref<Str> = v114 |> unbox<Ref<Str>>
                    let _run_target_args'_v119 = v127 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v131 : Ref<Str> = v114 |> unbox<Ref<Str>>
                    let _run_target_args'_v119 = v131 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v135 : Ref<Str> = v114 |> unbox<Ref<Str>>
                    let _run_target_args'_v119 = v135 
                    #endif
#else
                    let v139 : Ref<Str> = v114 |> unbox<Ref<Str>>
                    let _run_target_args'_v119 = v139 
                    #endif
                    let v142 : Ref<Str> = _run_target_args'_v119 
                    (* run_target_args'
                    let v152 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v153 : string = "String::from($0)"
                    let v154 : std_string_String = Fable.Core.RustInterop.emitRustExpr v142 v153 
                    let _run_target_args'_v152 = v154 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v155 : string = "String::from($0)"
                    let v156 : std_string_String = Fable.Core.RustInterop.emitRustExpr v142 v155 
                    let _run_target_args'_v152 = v156 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v157 : string = "String::from($0)"
                    let v158 : std_string_String = Fable.Core.RustInterop.emitRustExpr v142 v157 
                    let _run_target_args'_v152 = v158 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v160 : std_string_String = v142 |> unbox<std_string_String>
                    let _run_target_args'_v152 = v160 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v164 : std_string_String = v142 |> unbox<std_string_String>
                    let _run_target_args'_v152 = v164 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v168 : std_string_String = v142 |> unbox<std_string_String>
                    let _run_target_args'_v152 = v168 
                    #endif
#else
                    let v172 : std_string_String = v142 |> unbox<std_string_String>
                    let _run_target_args'_v152 = v172 
                    #endif
                    let v175 : std_string_String = _run_target_args'_v152 
                    let v181 : std_string_String = method90(v175)
                    let v182 : string = "reqwest_wasm::Client::builder().build().map_err(|err| err.to_string())?.get(v181)"
                    let v183 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr () v182 
                    v183
                | US23_1 -> (* Post *)
                    let v184 : string = method91(v2)
                    (* run_target_args'
                    let v189 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v190 : string = "&*$0"
                    let v191 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v184 v190 
                    let _run_target_args'_v189 = v191 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v192 : string = "&*$0"
                    let v193 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v184 v192 
                    let _run_target_args'_v189 = v193 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v194 : string = "&*$0"
                    let v195 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v184 v194 
                    let _run_target_args'_v189 = v195 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v197 : Ref<Str> = v184 |> unbox<Ref<Str>>
                    let _run_target_args'_v189 = v197 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v201 : Ref<Str> = v184 |> unbox<Ref<Str>>
                    let _run_target_args'_v189 = v201 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v205 : Ref<Str> = v184 |> unbox<Ref<Str>>
                    let _run_target_args'_v189 = v205 
                    #endif
#else
                    let v209 : Ref<Str> = v184 |> unbox<Ref<Str>>
                    let _run_target_args'_v189 = v209 
                    #endif
                    let v212 : Ref<Str> = _run_target_args'_v189 
                    (* run_target_args'
                    let v222 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v223 : string = "String::from($0)"
                    let v224 : std_string_String = Fable.Core.RustInterop.emitRustExpr v212 v223 
                    let _run_target_args'_v222 = v224 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v225 : string = "String::from($0)"
                    let v226 : std_string_String = Fable.Core.RustInterop.emitRustExpr v212 v225 
                    let _run_target_args'_v222 = v226 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v227 : string = "String::from($0)"
                    let v228 : std_string_String = Fable.Core.RustInterop.emitRustExpr v212 v227 
                    let _run_target_args'_v222 = v228 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v230 : std_string_String = v212 |> unbox<std_string_String>
                    let _run_target_args'_v222 = v230 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v234 : std_string_String = v212 |> unbox<std_string_String>
                    let _run_target_args'_v222 = v234 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v238 : std_string_String = v212 |> unbox<std_string_String>
                    let _run_target_args'_v222 = v238 
                    #endif
#else
                    let v242 : std_string_String = v212 |> unbox<std_string_String>
                    let _run_target_args'_v222 = v242 
                    #endif
                    let v245 : std_string_String = _run_target_args'_v222 
                    let v251 : std_string_String = method92(v245)
                    let v252 : string = "reqwest_wasm::Client::builder().build().map_err(|err| err.to_string())?.post(v251)"
                    let v253 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr () v252 
                    v253
            (* run_target_args'
            let v260 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v261 : string = "&*$0"
            let v262 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v261 
            let _run_target_args'_v260 = v262 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v263 : string = "&*$0"
            let v264 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v263 
            let _run_target_args'_v260 = v264 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v265 : string = "&*$0"
            let v266 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v265 
            let _run_target_args'_v260 = v266 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v268 : Ref<Str> = v4 |> unbox<Ref<Str>>
            let _run_target_args'_v260 = v268 
            #endif
#if FABLE_COMPILER_PYTHON
            let v272 : Ref<Str> = v4 |> unbox<Ref<Str>>
            let _run_target_args'_v260 = v272 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v276 : Ref<Str> = v4 |> unbox<Ref<Str>>
            let _run_target_args'_v260 = v276 
            #endif
#else
            let v280 : Ref<Str> = v4 |> unbox<Ref<Str>>
            let _run_target_args'_v260 = v280 
            #endif
            let v283 : Ref<Str> = _run_target_args'_v260 
            (* run_target_args'
            let v293 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v294 : string = "String::from($0)"
            let v295 : std_string_String = Fable.Core.RustInterop.emitRustExpr v283 v294 
            let _run_target_args'_v293 = v295 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v296 : string = "String::from($0)"
            let v297 : std_string_String = Fable.Core.RustInterop.emitRustExpr v283 v296 
            let _run_target_args'_v293 = v297 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v298 : string = "String::from($0)"
            let v299 : std_string_String = Fable.Core.RustInterop.emitRustExpr v283 v298 
            let _run_target_args'_v293 = v299 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v301 : std_string_String = v283 |> unbox<std_string_String>
            let _run_target_args'_v293 = v301 
            #endif
#if FABLE_COMPILER_PYTHON
            let v305 : std_string_String = v283 |> unbox<std_string_String>
            let _run_target_args'_v293 = v305 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v309 : std_string_String = v283 |> unbox<std_string_String>
            let _run_target_args'_v293 = v309 
            #endif
#else
            let v313 : std_string_String = v283 |> unbox<std_string_String>
            let _run_target_args'_v293 = v313 
            #endif
            let v316 : std_string_String = _run_target_args'_v293 
            let v322 : string = "reqwest_wasm::RequestBuilder::body(v255, $0)"
            let v323 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr v316 v322 
            let v324 : bool = v5 = false
            let v467 : reqwest_RequestBuilder =
                if v324 then
                    let v325 : string = "v323"
                    let v326 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr () v325 
                    v326
                else
                    let v327 : string = "reqwest_wasm::header::CONTENT_TYPE.to_string()"
                    let v328 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v327 
                    let v329 : string = "fable_library_rust::String_::fromString($0)"
                    let v330 : string = Fable.Core.RustInterop.emitRustExpr v328 v329 
                    let v331 : reqwest_RequestBuilder = method93(v323)
                    (* run_target_args'
                    let v336 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v337 : string = "&*$0"
                    let v338 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v330 v337 
                    let _run_target_args'_v336 = v338 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v339 : string = "&*$0"
                    let v340 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v330 v339 
                    let _run_target_args'_v336 = v340 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v341 : string = "&*$0"
                    let v342 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v330 v341 
                    let _run_target_args'_v336 = v342 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v344 : Ref<Str> = v330 |> unbox<Ref<Str>>
                    let _run_target_args'_v336 = v344 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v348 : Ref<Str> = v330 |> unbox<Ref<Str>>
                    let _run_target_args'_v336 = v348 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v352 : Ref<Str> = v330 |> unbox<Ref<Str>>
                    let _run_target_args'_v336 = v352 
                    #endif
#else
                    let v356 : Ref<Str> = v330 |> unbox<Ref<Str>>
                    let _run_target_args'_v336 = v356 
                    #endif
                    let v359 : Ref<Str> = _run_target_args'_v336 
                    (* run_target_args'
                    let v369 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v370 : string = "String::from($0)"
                    let v371 : std_string_String = Fable.Core.RustInterop.emitRustExpr v359 v370 
                    let _run_target_args'_v369 = v371 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v372 : string = "String::from($0)"
                    let v373 : std_string_String = Fable.Core.RustInterop.emitRustExpr v359 v372 
                    let _run_target_args'_v369 = v373 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v374 : string = "String::from($0)"
                    let v375 : std_string_String = Fable.Core.RustInterop.emitRustExpr v359 v374 
                    let _run_target_args'_v369 = v375 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v377 : std_string_String = v359 |> unbox<std_string_String>
                    let _run_target_args'_v369 = v377 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v381 : std_string_String = v359 |> unbox<std_string_String>
                    let _run_target_args'_v369 = v381 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v385 : std_string_String = v359 |> unbox<std_string_String>
                    let _run_target_args'_v369 = v385 
                    #endif
#else
                    let v389 : std_string_String = v359 |> unbox<std_string_String>
                    let _run_target_args'_v369 = v389 
                    #endif
                    let v392 : std_string_String = _run_target_args'_v369 
                    let v398 : string = "application/json"
                    (* run_target_args'
                    let v403 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v404 : string = "&*$0"
                    let v405 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v398 v404 
                    let _run_target_args'_v403 = v405 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v406 : string = "&*$0"
                    let v407 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v398 v406 
                    let _run_target_args'_v403 = v407 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v408 : string = "&*$0"
                    let v409 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v398 v408 
                    let _run_target_args'_v403 = v409 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v411 : Ref<Str> = v398 |> unbox<Ref<Str>>
                    let _run_target_args'_v403 = v411 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v415 : Ref<Str> = v398 |> unbox<Ref<Str>>
                    let _run_target_args'_v403 = v415 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v419 : Ref<Str> = v398 |> unbox<Ref<Str>>
                    let _run_target_args'_v403 = v419 
                    #endif
#else
                    let v423 : Ref<Str> = v398 |> unbox<Ref<Str>>
                    let _run_target_args'_v403 = v423 
                    #endif
                    let v426 : Ref<Str> = _run_target_args'_v403 
                    (* run_target_args'
                    let v436 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v437 : string = "String::from($0)"
                    let v438 : std_string_String = Fable.Core.RustInterop.emitRustExpr v426 v437 
                    let _run_target_args'_v436 = v438 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v439 : string = "String::from($0)"
                    let v440 : std_string_String = Fable.Core.RustInterop.emitRustExpr v426 v439 
                    let _run_target_args'_v436 = v440 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v441 : string = "String::from($0)"
                    let v442 : std_string_String = Fable.Core.RustInterop.emitRustExpr v426 v441 
                    let _run_target_args'_v436 = v442 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v444 : std_string_String = v426 |> unbox<std_string_String>
                    let _run_target_args'_v436 = v444 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v448 : std_string_String = v426 |> unbox<std_string_String>
                    let _run_target_args'_v436 = v448 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v452 : std_string_String = v426 |> unbox<std_string_String>
                    let _run_target_args'_v436 = v452 
                    #endif
#else
                    let v456 : std_string_String = v426 |> unbox<std_string_String>
                    let _run_target_args'_v436 = v456 
                    #endif
                    let v459 : std_string_String = _run_target_args'_v436 
                    let v465 : string = "reqwest_wasm::RequestBuilder::header(v331, $0, $1)"
                    let v466 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr struct (v392, v459) v465 
                    v466
            let v468 : reqwest_RequestBuilder = method94(v467)
            let v469 : string = "Box::pin(reqwest_wasm::RequestBuilder::send(v468))"
            let v470 : std_pin_Pin<Box<Dyn<std_future_Future<Result<reqwest_Response, reqwest_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v469 
            let v471 : string = "v470.await"
            let v472 : Result<reqwest_Response, reqwest_Error> = Fable.Core.RustInterop.emitRustExpr () v471 
            let v473 : (reqwest_Error -> std_string_String) = method95()
            (* run_target_args'
            let v475 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v476 : string = "$0.map_err(|x| $1(x))"
            let v477 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v472, v473) v476 
            let _run_target_args'_v475 = v477 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v478 : string = "$0.map_err(|x| $1(x))"
            let v479 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v472, v473) v478 
            let _run_target_args'_v475 = v479 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v480 : string = "$0.map_err(|x| $1(x))"
            let v481 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v472, v473) v480 
            let _run_target_args'_v475 = v481 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v482 : Result<reqwest_Response, std_string_String> = match v472 with Ok x -> Ok x | Error x -> Error (v473 x)
            let _run_target_args'_v475 = v482 
            #endif
#if FABLE_COMPILER_PYTHON
            let v483 : Result<reqwest_Response, std_string_String> = match v472 with Ok x -> Ok x | Error x -> Error (v473 x)
            let _run_target_args'_v475 = v483 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v484 : Result<reqwest_Response, std_string_String> = match v472 with Ok x -> Ok x | Error x -> Error (v473 x)
            let _run_target_args'_v475 = v484 
            #endif
#else
            let v485 : Result<reqwest_Response, std_string_String> = match v472 with Ok x -> Ok x | Error x -> Error (v473 x)
            let _run_target_args'_v475 = v485 
            #endif
            let v486 : Result<reqwest_Response, std_string_String> = _run_target_args'_v475 
            let v489 : string = "$0?"
            let v490 : reqwest_Response = Fable.Core.RustInterop.emitRustExpr v486 v489 
            let v491 : string = "Box::pin(reqwest_wasm::Response::text(v490))"
            let v492 : std_pin_Pin<Box<Dyn<std_future_Future<Result<std_string_String, reqwest_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v491 
            let v493 : string = "v492.await"
            let v494 : Result<std_string_String, reqwest_Error> = Fable.Core.RustInterop.emitRustExpr () v493 
            let v495 : (reqwest_Error -> std_string_String) = method95()
            (* run_target_args'
            let v497 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v498 : string = "$0.map_err(|x| $1(x))"
            let v499 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v494, v495) v498 
            let _run_target_args'_v497 = v499 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v500 : string = "$0.map_err(|x| $1(x))"
            let v501 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v494, v495) v500 
            let _run_target_args'_v497 = v501 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v502 : string = "$0.map_err(|x| $1(x))"
            let v503 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v494, v495) v502 
            let _run_target_args'_v497 = v503 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v504 : Result<std_string_String, std_string_String> = match v494 with Ok x -> Ok x | Error x -> Error (v495 x)
            let _run_target_args'_v497 = v504 
            #endif
#if FABLE_COMPILER_PYTHON
            let v505 : Result<std_string_String, std_string_String> = match v494 with Ok x -> Ok x | Error x -> Error (v495 x)
            let _run_target_args'_v497 = v505 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v506 : Result<std_string_String, std_string_String> = match v494 with Ok x -> Ok x | Error x -> Error (v495 x)
            let _run_target_args'_v497 = v506 
            #endif
#else
            let v507 : Result<std_string_String, std_string_String> = match v494 with Ok x -> Ok x | Error x -> Error (v495 x)
            let _run_target_args'_v497 = v507 
            #endif
            let v508 : Result<std_string_String, std_string_String> = _run_target_args'_v497 
            let v511 : string = "$0?"
            let v512 : std_string_String = Fable.Core.RustInterop.emitRustExpr v508 v511 
            let v513 : string = "fable_library_rust::String_::fromString($0)"
            let v514 : string = Fable.Core.RustInterop.emitRustExpr v512 v513 
            let v516 : string option = Some v514 
            US33_0(v516)
    let v532 : Result<string option, std_string_String> =
        match v520 with
        | US33_1(v526) -> (* Error *)
            let v528 : Result<string option, std_string_String> = Error v526 
            v528
        | US33_0(v521) -> (* Ok *)
            let v523 : Result<string option, std_string_String> = Ok v521 
            v523
    let v533 : string = ""
    let v534 : string = "}"
    let v535 : string = v533 + v534 
    let x = v532 //
    let v536 : _ = x
    let v537 : unit = ()
    (* run_target_args'
    let v538 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v539 : string = $"true; let _fix_closure_v537 = $0"
    let v540 : bool = Fable.Core.RustInterop.emitRustExpr v536 v539 
    let _run_target_args'_v538 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v541 : string = $"true; let _fix_closure_v537 = $0"
    let v542 : bool = Fable.Core.RustInterop.emitRustExpr v536 v541 
    let _run_target_args'_v538 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v543 : string = $"true; let _fix_closure_v537 = $0"
    let v544 : bool = Fable.Core.RustInterop.emitRustExpr v536 v543 
    let _run_target_args'_v538 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v538 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v538 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v538 = false 
    #endif
#else
    let _run_target_args'_v538 = false 
    #endif
    let v545 : bool = _run_target_args'_v538 
    let v547 : string = $"true; _fix_closure_v537 " + v535 + "); " + v533 + " // rust.fix_closure'"
    let v548 : bool = Fable.Core.RustInterop.emitRustExpr () v547 
    let v549 : string = "__future_init"
    let v550 : _ = Fable.Core.RustInterop.emitRustExpr () v549 
    let v551 : string = "v550"
    let v552 : std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v551 
    v552
and closure71 (v0 : US27) (v1 : int32) : (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>) =
    closure72(v0, v1)
and method86 (v0 : US27) : (int32 -> (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>)) =
    closure71(v0)
and method96 (v0 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<struct (string * US23 * string * bool * bool)> =
    v0
and method97 (v0 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>>) : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> =
    v0
and method98 (v0 : string) : string =
    v0
and closure75 () (v0 : rexie_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method99 () : (rexie_Error -> std_string_String) =
    closure75()
and method100 (v0 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>>) : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> =
    v0
and closure76 (v0 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>>) struct (v1 : string, v2 : US23, v3 : string, v4 : bool, v5 : bool) : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>> =
    let v6 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = method100(v0)
    let func1_move_x = struct (v1, v2, v3, v4, v5) //
    let v7 : _ = func1_move_x
    let v8 : string = "(move |x| v6(x))($0)"
    let v9 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr v7 v8 
    v9
and method101 (v0 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>>) : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> =
    v0
and method102 (v0 : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>>) : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>> =
    v0
and closure77 (v0 : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>>) (v1 : Heap4) : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>> =
    let v2 : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>> = method102(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure79 () (v0 : Result<Vec<string option>, std_string_String>) : US37 =
    US37_0(v0)
and method103 () : (Result<Vec<string option>, std_string_String> -> US37) =
    closure79()
and closure80 () (v0 : Vec<string option>) : US39 =
    US39_0(v0)
and method104 () : (Vec<string option> -> US39) =
    closure80()
and closure81 () (v0 : std_string_String) : US39 =
    US39_1(v0)
and method105 () : (std_string_String -> US39) =
    closure81()
and closure82 () (v0 : string) : US31 =
    US31_0(v0)
and method106 () : (string -> US31) =
    closure82()
and closure85 () (v0 : US31) : US42 =
    US42_0(v0)
and method108 () : (US31 -> US42) =
    closure85()
and closure86 () (v0 : crate_model_near_nearblocks_Root) : crate_model_near_nearblocks_Root option =
    let v2 : crate_model_near_nearblocks_Root option = Some v0 
    v2
and method109 () : (crate_model_near_nearblocks_Root -> crate_model_near_nearblocks_Root option) =
    closure86()
and method110 (v0 : Result<crate_model_near_nearblocks_Root, std_string_String>) : Result<crate_model_near_nearblocks_Root, std_string_String> =
    v0
and closure84 (v0 : US35, v1 : US41, v2 : int32) struct (v3 : string, v4 : US23, v5 : string, v6 : bool, v7 : bool) : Result<crate_model_near_nearblocks_Root option, std_string_String> =
    let v56 : US29 =
        match v0 with
        | US35_1 -> (* None *)
            US29_1
        | US35_0(v8) -> (* Some *)
            let v52 : US30 =
                match v8 with
                | US36_1(v49) -> (* Error *)
                    US30_1(v49)
                | US36_0(v9) -> (* Ok *)
                    let v10 : US25 option = v9 |> Array.tryItem v2 
                    let v13 : (US25 -> US32) = method87()
                    let v14 : US32 option = v10 |> Option.map v13 
                    let v28 : US32 = US32_1
                    let v29 : US32 = v14 |> Option.defaultValue v28 
                    let v39 : US25 =
                        match v29 with
                        | US32_0(v33) -> (* Some *)
                            match v33 with
                            | US25_0(v34) -> (* Some *)
                                US25_0(v34)
                            | _ ->
                                US25_1
                        | _ ->
                            US25_1
                    let v47 : US31 =
                        match v39 with
                        | US25_1 -> (* None *)
                            US31_1
                        | US25_0(v40) -> (* Some *)
                            let v41 : std_string_String = v40.l0
                            let v42 : string = "fable_library_rust::String_::fromString($0)"
                            let v43 : string = Fable.Core.RustInterop.emitRustExpr v41 v42 
                            US31_0(v43)
                    US30_0(v47)
            US29_0(v52)
    let v58 : string = $"%A{struct (v3, v4, v5, v6, v7)}"
    let v61 : int64 = 400L
    let v62 : string = method8(v61, v58)
    let v64 : string = $"%A{v56}"
    let v67 : int64 = 400L
    let v68 : string = method8(v67, v64)
    let v69 : string = "state_core.use_request (15) / result memo / request: " + string v62 + " / state_data: " + string v68 + ""
    let v70 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v71 : bool = Fable.Core.RustInterop.emitRustExpr v69 v70 
    let v73 : string = $"%A{v1}"
    let v76 : int64 = 400L
    let v77 : string = method8(v76, v73)
    let v78 : string = "state_core.use_request (16) / effect / json: " + string v77 + ""
    let v79 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v80 : bool = Fable.Core.RustInterop.emitRustExpr v78 v79 
    let v117 : US31 =
        match v1 with
        | US41_1(v114) -> (* Error *)
            US31_1
        | US41_0(v81) -> (* Ok *)
            let v82 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
            let v83 : (US31 []) = Fable.Core.RustInterop.emitRustExpr v81 v82 
            let v84 : US31 option = v83 |> Array.tryItem v2 
            let v87 : (US31 -> US42) = method108()
            let v88 : US42 option = v84 |> Option.map v87 
            let v102 : US42 = US42_1
            let v103 : US42 = v88 |> Option.defaultValue v102 
            match v103 with
            | US42_0(v107) -> (* Some *)
                match v107 with
                | US31_0(v108) -> (* Some *)
                    US31_0(v108)
                | _ ->
                    US31_1
            | _ ->
                US31_1
    match v117 with
    | US31_0(v118) -> (* Some *)
        let v119 : string = method41(v118)
        (* run_target_args'
        let v124 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v125 : string = "&*$0"
        let v126 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v119 v125 
        let _run_target_args'_v124 = v126 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v127 : string = "&*$0"
        let v128 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v119 v127 
        let _run_target_args'_v124 = v128 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v129 : string = "&*$0"
        let v130 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v119 v129 
        let _run_target_args'_v124 = v130 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v132 : Ref<Str> = v119 |> unbox<Ref<Str>>
        let _run_target_args'_v124 = v132 
        #endif
#if FABLE_COMPILER_PYTHON
        let v136 : Ref<Str> = v119 |> unbox<Ref<Str>>
        let _run_target_args'_v124 = v136 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v140 : Ref<Str> = v119 |> unbox<Ref<Str>>
        let _run_target_args'_v124 = v140 
        #endif
#else
        let v144 : Ref<Str> = v119 |> unbox<Ref<Str>>
        let _run_target_args'_v124 = v144 
        #endif
        let v147 : Ref<Str> = _run_target_args'_v124 
        let v153 : string = "serde_json::from_str(&$0)"
        let v154 : Result<crate_model_near_nearblocks_Root, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v147 v153 
        let v155 : (serde_json_Error -> std_string_String) = method42()
        (* run_target_args'
        let v157 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v158 : string = "$0.map_err(|x| $1(x))"
        let v159 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v154, v155) v158 
        let _run_target_args'_v157 = v159 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v160 : string = "$0.map_err(|x| $1(x))"
        let v161 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v154, v155) v160 
        let _run_target_args'_v157 = v161 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v162 : string = "$0.map_err(|x| $1(x))"
        let v163 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v154, v155) v162 
        let _run_target_args'_v157 = v163 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v164 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v154 with Ok x -> Ok x | Error x -> Error (v155 x)
        let _run_target_args'_v157 = v164 
        #endif
#if FABLE_COMPILER_PYTHON
        let v165 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v154 with Ok x -> Ok x | Error x -> Error (v155 x)
        let _run_target_args'_v157 = v165 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v166 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v154 with Ok x -> Ok x | Error x -> Error (v155 x)
        let _run_target_args'_v157 = v166 
        #endif
#else
        let v167 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v154 with Ok x -> Ok x | Error x -> Error (v155 x)
        let _run_target_args'_v157 = v167 
        #endif
        let v168 : Result<crate_model_near_nearblocks_Root, std_string_String> = _run_target_args'_v157 
        let v171 : (crate_model_near_nearblocks_Root -> crate_model_near_nearblocks_Root option) = method109()
        let v172 : Result<crate_model_near_nearblocks_Root, std_string_String> = method110(v168)
        let v173 : string = "v172.map(|x| v171(x))"
        let v174 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v173 
        v174
    | _ ->
        match v56 with
        | US29_0(v175) -> (* Some *)
            match v175 with
            | US30_0(v176) -> (* Ok *)
                match v176 with
                | US31_0(v177) -> (* Some *)
                    let v178 : string = method41(v177)
                    (* run_target_args'
                    let v183 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v184 : string = "&*$0"
                    let v185 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v178 v184 
                    let _run_target_args'_v183 = v185 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v186 : string = "&*$0"
                    let v187 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v178 v186 
                    let _run_target_args'_v183 = v187 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v188 : string = "&*$0"
                    let v189 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v178 v188 
                    let _run_target_args'_v183 = v189 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v191 : Ref<Str> = v178 |> unbox<Ref<Str>>
                    let _run_target_args'_v183 = v191 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v195 : Ref<Str> = v178 |> unbox<Ref<Str>>
                    let _run_target_args'_v183 = v195 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v199 : Ref<Str> = v178 |> unbox<Ref<Str>>
                    let _run_target_args'_v183 = v199 
                    #endif
#else
                    let v203 : Ref<Str> = v178 |> unbox<Ref<Str>>
                    let _run_target_args'_v183 = v203 
                    #endif
                    let v206 : Ref<Str> = _run_target_args'_v183 
                    let v212 : string = "serde_json::from_str(&$0)"
                    let v213 : Result<crate_model_near_nearblocks_Root, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v206 v212 
                    let v214 : (serde_json_Error -> std_string_String) = method42()
                    (* run_target_args'
                    let v216 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v217 : string = "$0.map_err(|x| $1(x))"
                    let v218 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v213, v214) v217 
                    let _run_target_args'_v216 = v218 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v219 : string = "$0.map_err(|x| $1(x))"
                    let v220 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v213, v214) v219 
                    let _run_target_args'_v216 = v220 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v221 : string = "$0.map_err(|x| $1(x))"
                    let v222 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v213, v214) v221 
                    let _run_target_args'_v216 = v222 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v223 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v213 with Ok x -> Ok x | Error x -> Error (v214 x)
                    let _run_target_args'_v216 = v223 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v224 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v213 with Ok x -> Ok x | Error x -> Error (v214 x)
                    let _run_target_args'_v216 = v224 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v225 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v213 with Ok x -> Ok x | Error x -> Error (v214 x)
                    let _run_target_args'_v216 = v225 
                    #endif
#else
                    let v226 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v213 with Ok x -> Ok x | Error x -> Error (v214 x)
                    let _run_target_args'_v216 = v226 
                    #endif
                    let v227 : Result<crate_model_near_nearblocks_Root, std_string_String> = _run_target_args'_v216 
                    let v230 : (crate_model_near_nearblocks_Root -> crate_model_near_nearblocks_Root option) = method109()
                    let v231 : Result<crate_model_near_nearblocks_Root, std_string_String> = method110(v227)
                    let v232 : string = "v231.map(|x| v230(x))"
                    let v233 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v232 
                    v233
                | _ ->
                    let v235 : string = $"%A{struct (v117, v56)}"
                    let v238 : string = "state_core.use_request (17) / json Error / value: " + string v235 + ""
                    let v239 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                    let v240 : bool = Fable.Core.RustInterop.emitRustExpr v238 v239 
                    let v241 : crate_model_near_nearblocks_Root option = None
                    let v243 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Ok v241 
                    v243
            | _ ->
                let v248 : string = $"%A{struct (v117, v56)}"
                let v251 : string = "state_core.use_request (17) / json Error / value: " + string v248 + ""
                let v252 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v253 : bool = Fable.Core.RustInterop.emitRustExpr v251 v252 
                let v254 : crate_model_near_nearblocks_Root option = None
                let v256 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Ok v254 
                v256
        | _ ->
            let v261 : string = $"%A{struct (v117, v56)}"
            let v264 : string = "state_core.use_request (17) / json Error / value: " + string v261 + ""
            let v265 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v266 : bool = Fable.Core.RustInterop.emitRustExpr v264 v265 
            let v267 : crate_model_near_nearblocks_Root option = None
            let v269 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Ok v267 
            v269
and closure83 (v0 : US35, v1 : US41) (v2 : int32) : (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_nearblocks_Root option, std_string_String>) =
    closure84(v0, v1, v2)
and method107 (v0 : US35, v1 : US41) : (int32 -> (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_nearblocks_Root option, std_string_String>)) =
    closure83(v0, v1)
and closure78 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>, v1 : leptos_prelude_ArcMemo<Result<Vec<Heap4 option>, std_string_String> option>, v2 : leptos_prelude_ArcLocalResource<Result<Vec<string option>, std_string_String>>, v3 : leptos_prelude_Action<Heap4, Result<Vec<unit>, std_string_String>>) () : (Result<crate_model_near_nearblocks_Root option, std_string_String> []) =
    let v4 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v5 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v4 
    let v7 : string = $"%A{v5}"
    let v10 : string = "state_core.use_requests (13) / result memo / requests: " + string v7 + ""
    let v11 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr v10 v11 
    let v13 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v14 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v1 v13 
    let v17 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v18 : US26 option = v14 |> Option.map v17 
    let v32 : US26 = US26_1
    let v33 : US26 = v18 |> Option.defaultValue v32 
    let v85 : US35 =
        match v33 with
        | US26_1 -> (* None *)
            US35_1
        | US26_0(v37) -> (* Some *)
            let v38 : (Vec<Heap4 option> -> US24) = method83()
            let v39 : (std_string_String -> US24) = method84()
            let v41 : US24 = match v37 with Ok x -> v38 x | Error x -> v39 x
            let v81 : US36 =
                match v41 with
                | US24_1(v78) -> (* Error *)
                    US36_1(v78)
                | US24_0(v44) -> (* Ok *)
                    let v45 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v46 : bool = Fable.Core.RustInterop.emitRustExpr v44 v45 
                    let v47 : string = "x"
                    let v48 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v47 
                    let v51 : (Heap4 -> US25) = method85()
                    let v52 : US25 option = v48 |> Option.map v51 
                    let v66 : US25 = US25_1
                    let v67 : US25 = v52 |> Option.defaultValue v66 
                    let v71 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v72 : bool = Fable.Core.RustInterop.emitRustExpr v67 v71 
                    let v73 : string = "_vec_map"
                    let v74 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v73 
                    let v75 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v76 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v74 v75 
                    US36_0(v76)
            US35_0(v81)
    let v87 : string = $"%A{v85}"
    let v90 : int64 = 400L
    let v91 : string = method8(v90, v87)
    let v92 : string = "state_core.use_request (14) / result_memo / state_data: " + string v91 + ""
    let v93 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v94 : bool = Fable.Core.RustInterop.emitRustExpr v92 v93 
    let v95 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v96 : Result<Vec<string option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v2 v95 
    let v99 : (Result<Vec<string option>, std_string_String> -> US37) = method103()
    let v100 : US37 option = v96 |> Option.map v99 
    let v114 : US37 = US37_1
    let v115 : US37 = v100 |> Option.defaultValue v114 
    let v129 : US38 =
        match v115 with
        | US37_1 -> (* None *)
            US38_1
        | US37_0(v119) -> (* Some *)
            let v120 : (Vec<string option> -> US39) = method104()
            let v121 : (std_string_String -> US39) = method105()
            let v123 : US39 = match v119 with Ok x -> v120 x | Error x -> v121 x
            US38_0(v123)
    let v170 : US40 =
        match v129 with
        | US38_1 -> (* None *)
            US40_1
        | US38_0(v130) -> (* Some *)
            let v166 : US41 =
                match v130 with
                | US39_1(v163) -> (* Error *)
                    US41_1(v163)
                | US39_0(v131) -> (* Ok *)
                    let v132 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v133 : bool = Fable.Core.RustInterop.emitRustExpr v131 v132 
                    let v134 : string = "x"
                    let v135 : string option = Fable.Core.RustInterop.emitRustExpr () v134 
                    let v138 : (string -> US31) = method106()
                    let v139 : US31 option = v135 |> Option.map v138 
                    let v153 : US31 = US31_1
                    let v154 : US31 = v139 |> Option.defaultValue v153 
                    let v158 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v159 : bool = Fable.Core.RustInterop.emitRustExpr v154 v158 
                    let v160 : string = "_vec_map"
                    let v161 : Vec<US31> = Fable.Core.RustInterop.emitRustExpr () v160 
                    US41_0(v161)
            US40_0(v166)
    let v171 : (US31 []) = [||]
    let v172 : string = "$0.to_vec()"
    let v173 : Vec<US31> = Fable.Core.RustInterop.emitRustExpr v171 v172 
    let v177 : US41 =
        match v170 with
        | US40_1 -> (* None *)
            US41_0(v173)
        | US40_0(v174) -> (* Some *)
            v174
    let v260 : bool =
        match v177 with
        | US41_1(v258) -> (* Error *)
            false
        | US41_0(v178) -> (* Ok *)
            let v179 : string = "true; $0.into_iter().for_each(|x| { //"
            let v180 : bool = Fable.Core.RustInterop.emitRustExpr v178 v179 
            let v181 : string = "x"
            let v182 : US31 = Fable.Core.RustInterop.emitRustExpr () v181 
            let v253 : bool =
                match v182 with
                | US31_0(v183) -> (* Some *)
                    (* run_target_args'
                    let v188 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v189 : string = "&*$0"
                    let v190 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v183 v189 
                    let _run_target_args'_v188 = v190 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v191 : string = "&*$0"
                    let v192 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v183 v191 
                    let _run_target_args'_v188 = v192 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v193 : string = "&*$0"
                    let v194 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v183 v193 
                    let _run_target_args'_v188 = v194 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v196 : Ref<Str> = v183 |> unbox<Ref<Str>>
                    let _run_target_args'_v188 = v196 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v200 : Ref<Str> = v183 |> unbox<Ref<Str>>
                    let _run_target_args'_v188 = v200 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v204 : Ref<Str> = v183 |> unbox<Ref<Str>>
                    let _run_target_args'_v188 = v204 
                    #endif
#else
                    let v208 : Ref<Str> = v183 |> unbox<Ref<Str>>
                    let _run_target_args'_v188 = v208 
                    #endif
                    let v211 : Ref<Str> = _run_target_args'_v188 
                    (* run_target_args'
                    let v221 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v222 : string = "String::from($0)"
                    let v223 : std_string_String = Fable.Core.RustInterop.emitRustExpr v211 v222 
                    let _run_target_args'_v221 = v223 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v224 : string = "String::from($0)"
                    let v225 : std_string_String = Fable.Core.RustInterop.emitRustExpr v211 v224 
                    let _run_target_args'_v221 = v225 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v226 : string = "String::from($0)"
                    let v227 : std_string_String = Fable.Core.RustInterop.emitRustExpr v211 v226 
                    let _run_target_args'_v221 = v227 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v229 : std_string_String = v211 |> unbox<std_string_String>
                    let _run_target_args'_v221 = v229 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v233 : std_string_String = v211 |> unbox<std_string_String>
                    let _run_target_args'_v221 = v233 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v237 : std_string_String = v211 |> unbox<std_string_String>
                    let _run_target_args'_v221 = v237 
                    #endif
#else
                    let v241 : std_string_String = v211 |> unbox<std_string_String>
                    let _run_target_args'_v221 = v241 
                    #endif
                    let v244 : std_string_String = _run_target_args'_v221 
                    let v250 : Heap4 = {l0 = v244} : Heap4
                    let v251 : string = "true; leptos::prelude::Action::dispatch(&$0, $1.clone())"
                    let v252 : bool = Fable.Core.RustInterop.emitRustExpr struct (v3, v250) v251 
                    true
                | _ ->
                    false
            let v254 : string = $"true"
            let v255 : bool = Fable.Core.RustInterop.emitRustExpr () v254 
            let v256 : string = "true; }); //"
            let v257 : bool = Fable.Core.RustInterop.emitRustExpr () v256 
            false
    let v261 : (int32 -> (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_nearblocks_Root option, std_string_String>)) = method107(v85, v177)
    let v262 : Vec<struct (string * US23 * string * bool * bool)> = method96(v5)
    let v263 : string = "v262.iter().enumerate().map(|(i, x)| v261(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v264 : Vec<Result<crate_model_near_nearblocks_Root option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v263 
    let v265 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v266 : (Result<crate_model_near_nearblocks_Root option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v264 v265 
    let v268 : string = $"%A{v266}"
    let v271 : string = "state_core.use_requests (18) / result_func func0 / result: " + string v268 + ""
    let v272 : int64 = 200L
    let v273 : string = method8(v272, v271)
    let v274 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v275 : bool = Fable.Core.RustInterop.emitRustExpr v273 v274 
    v266
and method112 (v0 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []))) : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) =
    v0
and closure88 (v0 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []))) (v1 : crate_model_near_nearblocks_Root option) : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option =
    let v3 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) = method112(v0)
    let v4 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option = v1 |> Option.map v3 
    v4
and method111 (v0 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []))) : (crate_model_near_nearblocks_Root option -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option) =
    closure88(v0)
and method113 (v0 : Result<crate_model_near_nearblocks_Root option, std_string_String>) : Result<crate_model_near_nearblocks_Root option, std_string_String> =
    v0
and method114 (v0 : Func0<Result<crate_model_near_nearblocks_Root option, std_string_String>, Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>) : Func0<Result<crate_model_near_nearblocks_Root option, std_string_String>, Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> =
    v0
and closure89 (v0 : Func0<Result<crate_model_near_nearblocks_Root option, std_string_String>, Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>) (v1 : Result<crate_model_near_nearblocks_Root option, std_string_String>) : Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String> =
    let v2 : Func0<Result<crate_model_near_nearblocks_Root option, std_string_String>, Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> = method114(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure87 (v0 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])), v1 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>>, v2 : leptos_prelude_ArcLocalResource<Result<Vec<Heap4 option>, std_string_String>>, v3 : leptos_prelude_ArcMemo<(Result<crate_model_near_nearblocks_Root option, std_string_String> [])>) () : Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> =
    let v4 : string = $"leptos::prelude::Submission::pending(&$0.into()).into()"
    let v5 : leptos_prelude_ArcSignal<bool> = Fable.Core.RustInterop.emitRustExpr v1 v4 
    let v6 : string = $"leptos::prelude::ArcSignal::get(&$0)"
    let v7 : bool = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : string = $"leptos::prelude::Submission::pending(&$0.into()).into()"
    let v9 : leptos_prelude_ArcSignal<bool> = Fable.Core.RustInterop.emitRustExpr v2 v8 
    let v10 : string = $"leptos::prelude::ArcSignal::get(&$0)"
    let v11 : bool = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v13 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v1 v12 
    let v16 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v17 : US2 option = v13 |> Option.map v16 
    let v31 : US2 = US2_1
    let v32 : US2 = v17 |> Option.defaultValue v31 
    let v36 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v37 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v2 v36 
    let v40 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v41 : US26 option = v37 |> Option.map v40 
    let v55 : US26 = US26_1
    let v56 : US26 = v41 |> Option.defaultValue v55 
    let v108 : US35 =
        match v56 with
        | US26_1 -> (* None *)
            US35_1
        | US26_0(v60) -> (* Some *)
            let v61 : (Vec<Heap4 option> -> US24) = method83()
            let v62 : (std_string_String -> US24) = method84()
            let v64 : US24 = match v60 with Ok x -> v61 x | Error x -> v62 x
            let v104 : US36 =
                match v64 with
                | US24_1(v101) -> (* Error *)
                    US36_1(v101)
                | US24_0(v67) -> (* Ok *)
                    let v68 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v69 : bool = Fable.Core.RustInterop.emitRustExpr v67 v68 
                    let v70 : string = "x"
                    let v71 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v70 
                    let v74 : (Heap4 -> US25) = method85()
                    let v75 : US25 option = v71 |> Option.map v74 
                    let v89 : US25 = US25_1
                    let v90 : US25 = v75 |> Option.defaultValue v89 
                    let v94 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v95 : bool = Fable.Core.RustInterop.emitRustExpr v90 v94 
                    let v96 : string = "_vec_map"
                    let v97 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v96 
                    let v98 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v99 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v97 v98 
                    US36_0(v99)
            US35_0(v104)
    let v110 : string = $"%A{v32}"
    let v113 : int64 = 400L
    let v114 : string = method8(v113, v110)
    let v116 : string = $"%A{v108}"
    let v119 : int64 = 400L
    let v120 : string = method8(v119, v116)
    let v121 : string = "state_core.use_request (19) / result move / database: " + string v114 + " / database_loading: " + string v7 + " / state_data: " + string v120 + " / state_data_loading: " + string v11 + ""
    let v122 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v123 : bool = Fable.Core.RustInterop.emitRustExpr v121 v122 
    let v124 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v125 : (Result<crate_model_near_nearblocks_Root option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v3 v124 
    let v126 : string = "$0.to_vec()"
    let v127 : Vec<Result<crate_model_near_nearblocks_Root option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v125 v126 
    let v128 : unit = ()
    let v129 : string = $"true; let _func1_from_v128 = Func1::from(move |value| {{ //"
    let v130 : bool = Fable.Core.RustInterop.emitRustExpr () v129 
    let v131 : string = $"value"
    let v132 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v131 
    let v133 : (crate_model_near_nearblocks_Root option -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option) = method111(v0)
    let v134 : Result<crate_model_near_nearblocks_Root option, std_string_String> = method113(v132)
    let v135 : string = "v134.map(|x| v133(x))"
    let v136 : Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v135 
    let func1_from_result = v136 //
    let v137 : _ = func1_from_result
    let v138 : string = $"true; $0 /*"
    let v139 : bool = Fable.Core.RustInterop.emitRustExpr v137 v138 
    let v140 : string = $"*/ }}); //"
    let v141 : bool = Fable.Core.RustInterop.emitRustExpr () v140 
    let v142 : string = $"_func1_from_v128"
    let v143 : Func0<Result<crate_model_near_nearblocks_Root option, std_string_String>, Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v142 
    let v144 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v145 : (Result<crate_model_near_nearblocks_Root option, std_string_String> -> Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>) = closure89(v143)
    let v146 : Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr struct (v127, v145) v144 
    let v148 : string = $"%A{v146}"
    let v151 : string = "state_core.use_requests (20) / result func0 / result: " + string v148 + ""
    let v152 : int64 = 200L
    let v153 : string = method8(v152, v151)
    let v154 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v155 : bool = Fable.Core.RustInterop.emitRustExpr v153 v154 
    v146
and method78 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>, v1 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []))) : leptos_prelude_ArcMemo<Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>> =
    let v2 : string = "state_core.use_requests (1)"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = "state_core.use_database (1)"
    let v6 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v7 : bool = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : unit = ()
    let v9 : string = $"true; let _func0_from_v8 = Func0::from(move || {{ //"
    let v10 : bool = Fable.Core.RustInterop.emitRustExpr () v9 
    let v11 : string = "true; let __future_init = Box::pin(/*"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr () v11 
    let v13 : string = "*/ async move { /*"
    let v14 : bool = Fable.Core.RustInterop.emitRustExpr () v13 
    let v15 : string = "*/ ()"
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = "state_core.use_database (2) / database new_local_resource"
    let v18 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v19 : bool = Fable.Core.RustInterop.emitRustExpr v17 v18 
    let v20 : string = "state_core.build_database ()"
    let v21 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : string = "true; let __future_init = Box::pin(/*"
    let v24 : bool = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : string = "*/ async { /*"
    let v26 : bool = Fable.Core.RustInterop.emitRustExpr () v25 
    let v27 : string = "*/ ()"
    let v28 : bool = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : string = "Box::pin(rexie::Rexie::builder(\"database\").version(1).add_object_store(rexie::ObjectStore::new(\"store\")).build())"
    let v30 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v29 
    let v31 : string = "v30.await"
    let v32 : Result<rexie_Rexie, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v31 
    let v33 : (rexie_Error -> std_string_String) = method6()
    (* run_target_args'
    let v35 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v36 : string = "$0.map_err(|x| $1(x))"
    let v37 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v36 
    let _run_target_args'_v35 = v37 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v38 : string = "$0.map_err(|x| $1(x))"
    let v39 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v38 
    let _run_target_args'_v35 = v39 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v40 : string = "$0.map_err(|x| $1(x))"
    let v41 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v40 
    let _run_target_args'_v35 = v41 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v42 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v42 
    #endif
#if FABLE_COMPILER_PYTHON
    let v43 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v43 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v44 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v44 
    #endif
#else
    let v45 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v45 
    #endif
    let v46 : Result<rexie_Rexie, std_string_String> = _run_target_args'_v35 
    let v49 : string = ""
    let v50 : string = "}"
    let v51 : string = v49 + v50 
    let x = v46 //
    let v52 : _ = x
    let v53 : unit = ()
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = $"true; let _fix_closure_v53 = $0"
    let v56 : bool = Fable.Core.RustInterop.emitRustExpr v52 v55 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = $"true; let _fix_closure_v53 = $0"
    let v58 : bool = Fable.Core.RustInterop.emitRustExpr v52 v57 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = $"true; let _fix_closure_v53 = $0"
    let v60 : bool = Fable.Core.RustInterop.emitRustExpr v52 v59 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v54 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v54 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v54 = false 
    #endif
#else
    let _run_target_args'_v54 = false 
    #endif
    let v61 : bool = _run_target_args'_v54 
    let v63 : string = $"true; _fix_closure_v53 " + v51 + "); " + v49 + " // rust.fix_closure'"
    let v64 : bool = Fable.Core.RustInterop.emitRustExpr () v63 
    let v65 : string = "__future_init"
    let v66 : _ = Fable.Core.RustInterop.emitRustExpr () v65 
    let v67 : string = "v66"
    let v68 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v67 
    let v69 : string = "v68.await"
    let v70 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v69 
    (* run_target_args'
    let v72 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v73 : string = "$0.unwrap()"
    let v74 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v70 v73 
    let _run_target_args'_v72 = v74 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v75 : string = "$0.unwrap()"
    let v76 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v70 v75 
    let _run_target_args'_v72 = v76 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v77 : string = "$0.unwrap()"
    let v78 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v70 v77 
    let _run_target_args'_v72 = v78 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v79 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v79 
    #endif
#if FABLE_COMPILER_PYTHON
    let v80 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v80 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v81 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v81 
    #endif
#else
    let v82 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v82 
    #endif
    let v83 : rexie_Rexie = _run_target_args'_v72 
    let v86 : (rexie_Rexie -> rexie_Rexie) = method7()
    let v87 : rexie_Rexie = v86 v83
    let v88 : string = "std::sync::Arc::new(v87)"
    let v89 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v88 
    let v91 : string = $"%A{v89}"
    let v94 : string = "state_core.use_database (3) / database new_local_resource / result: " + string v91 + ""
    let v95 : int64 = 200L
    let v96 : string = method8(v95, v94)
    let v97 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v98 : bool = Fable.Core.RustInterop.emitRustExpr v96 v97 
    let v99 : string = v49 + v50 
    let x = v89 //
    let v100 : _ = x
    let v101 : unit = ()
    (* run_target_args'
    let v102 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v103 : string = $"true; let _fix_closure_v101 = $0"
    let v104 : bool = Fable.Core.RustInterop.emitRustExpr v100 v103 
    let _run_target_args'_v102 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v105 : string = $"true; let _fix_closure_v101 = $0"
    let v106 : bool = Fable.Core.RustInterop.emitRustExpr v100 v105 
    let _run_target_args'_v102 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v107 : string = $"true; let _fix_closure_v101 = $0"
    let v108 : bool = Fable.Core.RustInterop.emitRustExpr v100 v107 
    let _run_target_args'_v102 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v102 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v102 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v102 = false 
    #endif
#else
    let _run_target_args'_v102 = false 
    #endif
    let v109 : bool = _run_target_args'_v102 
    let v111 : string = $"true; _fix_closure_v101 " + v99 + "); " + v49 + " // rust.fix_closure'"
    let v112 : bool = Fable.Core.RustInterop.emitRustExpr () v111 
    let v113 : string = "__future_init"
    let v114 : _ = Fable.Core.RustInterop.emitRustExpr () v113 
    let v115 : string = "v114"
    let v116 : std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>> = Fable.Core.RustInterop.emitRustExpr () v115 
    let v117 : string = $"true; $0 /*"
    let v118 : bool = Fable.Core.RustInterop.emitRustExpr v116 v117 
    let v119 : string = $"*/ }}); //"
    let v120 : bool = Fable.Core.RustInterop.emitRustExpr () v119 
    let v121 : string = $"_func0_from_v8"
    let v122 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>>> = Fable.Core.RustInterop.emitRustExpr () v121 
    let v123 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v124 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v122 v123 
    let v125 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v126 : (unit -> PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option) = closure64(v124)
    let v127 : leptos_prelude_ArcMemo<PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option> = Fable.Core.RustInterop.emitRustExpr v126 v125 
    let v128 : unit = ()
    let v129 : string = $"true; let _func0_from_v128 = Func0::from(move || {{ //"
    let v130 : bool = Fable.Core.RustInterop.emitRustExpr () v129 
    let v131 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v132 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v124 v131 
    let v133 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v134 : bool = Fable.Core.RustInterop.emitRustExpr v132 v133 
    let v135 : string = "x"
    let v136 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v135 
    let v137 : (unit -> unit) = closure8()
    let _v137 = true
    let v138 : string = "PartialEqWrapper($0)"
    let v139 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v136 v138 
    let v140 : string = "true; $0 })"
    let v141 : bool = Fable.Core.RustInterop.emitRustExpr v139 v140 
    let v142 : string = "_optionm_map_"
    let v143 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr () v142 
    let v144 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v145 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v144 
    let v146 : string = "true; let __future_init = Box::pin(/*"
    let v147 : bool = Fable.Core.RustInterop.emitRustExpr () v146 
    let v148 : string = "*/ async move { /*"
    let v149 : bool = Fable.Core.RustInterop.emitRustExpr () v148 
    let v150 : string = "*/ ()"
    let v151 : bool = Fable.Core.RustInterop.emitRustExpr () v150 
    let v153 : string = $"%A{v143}"
    let v157 : string = $"%A{v145}"
    let v160 : int64 = 400L
    let v161 : string = method8(v160, v157)
    let v162 : string = "state_core.use_requests (3) / state_data_resource new_local_resource / request : " + string v161 + " / database: " + string v153 + ""
    let v163 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v164 : bool = Fable.Core.RustInterop.emitRustExpr v162 v163 
    let v165 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v166 : bool = Fable.Core.RustInterop.emitRustExpr v143 v165 
    let v167 : string = "x"
    let v168 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr () v167 
    let v169 : string = "$0.0"
    let v170 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr v168 v169 
    let v171 : string = "true; $0 })"
    let v172 : bool = Fable.Core.RustInterop.emitRustExpr v170 v171 
    let v173 : string = "_optionm_map_"
    let v174 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr () v173 
    let v177 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v178 : US2 option = v174 |> Option.map v177 
    let v192 : US2 = US2_1
    let v193 : US2 = v178 |> Option.defaultValue v192 
    let v678 : US24 =
        match v193 with
        | US2_0(v197) -> (* Some *)
            let v198 : unit = ()
            let v199 : string = $"true; let _func1_from_v198 = Func1::from(move |value| {{ //"
            let v200 : bool = Fable.Core.RustInterop.emitRustExpr () v199 
            let v201 : string = $"value"
            let struct (v202 : string, v203 : US23, v204 : string, v205 : bool, v206 : bool) = Fable.Core.RustInterop.emitRustExpr () v201 
            let v207 : string = "url[" + v202 + "](" + $"%A{v204}" + ")"
            let v208 : string = "state_core.get_data () / id: " + v207 + ""
            let v209 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v210 : bool = Fable.Core.RustInterop.emitRustExpr v208 v209 
            let v211 : string = "true; let __future_init = Box::pin(/*"
            let v212 : bool = Fable.Core.RustInterop.emitRustExpr () v211 
            let v213 : string = "*/ async { /*"
            let v214 : bool = Fable.Core.RustInterop.emitRustExpr () v213 
            let v215 : string = "*/ ()"
            let v216 : bool = Fable.Core.RustInterop.emitRustExpr () v215 
            let v217 : string = "store"
            let v218 : (string []) = [|v217|]
            let v219 : string = "$0.to_vec()"
            let v220 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v218 v219 
            let v221 : unit = ()
            let v222 : string = $"true; let _func1_from_v221 = Func1::from(move |value| {{ //"
            let v223 : bool = Fable.Core.RustInterop.emitRustExpr () v222 
            let v224 : string = $"value"
            let v225 : string = Fable.Core.RustInterop.emitRustExpr () v224 
            (* run_target_args'
            let v230 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v231 : string = "&*$0"
            let v232 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v225 v231 
            let _run_target_args'_v230 = v232 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v233 : string = "&*$0"
            let v234 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v225 v233 
            let _run_target_args'_v230 = v234 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v235 : string = "&*$0"
            let v236 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v225 v235 
            let _run_target_args'_v230 = v236 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v238 : Ref<Str> = v225 |> unbox<Ref<Str>>
            let _run_target_args'_v230 = v238 
            #endif
#if FABLE_COMPILER_PYTHON
            let v242 : Ref<Str> = v225 |> unbox<Ref<Str>>
            let _run_target_args'_v230 = v242 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v246 : Ref<Str> = v225 |> unbox<Ref<Str>>
            let _run_target_args'_v230 = v246 
            #endif
#else
            let v250 : Ref<Str> = v225 |> unbox<Ref<Str>>
            let _run_target_args'_v230 = v250 
            #endif
            let v253 : Ref<Str> = _run_target_args'_v230 
            (* run_target_args'
            let v263 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v264 : string = "String::from($0)"
            let v265 : std_string_String = Fable.Core.RustInterop.emitRustExpr v253 v264 
            let _run_target_args'_v263 = v265 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v266 : string = "String::from($0)"
            let v267 : std_string_String = Fable.Core.RustInterop.emitRustExpr v253 v266 
            let _run_target_args'_v263 = v267 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v268 : string = "String::from($0)"
            let v269 : std_string_String = Fable.Core.RustInterop.emitRustExpr v253 v268 
            let _run_target_args'_v263 = v269 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v271 : std_string_String = v253 |> unbox<std_string_String>
            let _run_target_args'_v263 = v271 
            #endif
#if FABLE_COMPILER_PYTHON
            let v275 : std_string_String = v253 |> unbox<std_string_String>
            let _run_target_args'_v263 = v275 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v279 : std_string_String = v253 |> unbox<std_string_String>
            let _run_target_args'_v263 = v279 
            #endif
#else
            let v283 : std_string_String = v253 |> unbox<std_string_String>
            let _run_target_args'_v263 = v283 
            #endif
            let v286 : std_string_String = _run_target_args'_v263 
            let func1_from_result = v286 //
            let v292 : _ = func1_from_result
            let v293 : string = $"true; $0 /*"
            let v294 : bool = Fable.Core.RustInterop.emitRustExpr v292 v293 
            let v295 : string = $"*/ }}); //"
            let v296 : bool = Fable.Core.RustInterop.emitRustExpr () v295 
            let v297 : string = $"_func1_from_v221"
            let v298 : Func0<string, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v297 
            let v299 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v300 : (string -> std_string_String) = closure10(v298)
            let v301 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v220, v300) v299 
            let v302 : std_sync_Arc<rexie_Rexie> = method11(v197)
            let v303 : string = "$0.transaction(&v301, rexie::TransactionMode::ReadOnly)"
            let v304 : Result<rexie_Transaction, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v302 v303 
            let v305 : (rexie_Error -> std_string_String) = method12()
            (* run_target_args'
            let v307 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v308 : string = "$0.map_err(|x| $1(x))"
            let v309 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v304, v305) v308 
            let _run_target_args'_v307 = v309 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v310 : string = "$0.map_err(|x| $1(x))"
            let v311 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v304, v305) v310 
            let _run_target_args'_v307 = v311 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v312 : string = "$0.map_err(|x| $1(x))"
            let v313 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v304, v305) v312 
            let _run_target_args'_v307 = v313 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v314 : Result<rexie_Transaction, std_string_String> = match v304 with Ok x -> Ok x | Error x -> Error (v305 x)
            let _run_target_args'_v307 = v314 
            #endif
#if FABLE_COMPILER_PYTHON
            let v315 : Result<rexie_Transaction, std_string_String> = match v304 with Ok x -> Ok x | Error x -> Error (v305 x)
            let _run_target_args'_v307 = v315 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v316 : Result<rexie_Transaction, std_string_String> = match v304 with Ok x -> Ok x | Error x -> Error (v305 x)
            let _run_target_args'_v307 = v316 
            #endif
#else
            let v317 : Result<rexie_Transaction, std_string_String> = match v304 with Ok x -> Ok x | Error x -> Error (v305 x)
            let _run_target_args'_v307 = v317 
            #endif
            let v318 : Result<rexie_Transaction, std_string_String> = _run_target_args'_v307 
            let v321 : string = "$0?"
            let v322 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v318 v321 
            let v323 : string = method13()
            (* run_target_args'
            let v328 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v329 : string = "&*$0"
            let v330 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v323 v329 
            let _run_target_args'_v328 = v330 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v331 : string = "&*$0"
            let v332 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v323 v331 
            let _run_target_args'_v328 = v332 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v333 : string = "&*$0"
            let v334 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v323 v333 
            let _run_target_args'_v328 = v334 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v336 : Ref<Str> = v323 |> unbox<Ref<Str>>
            let _run_target_args'_v328 = v336 
            #endif
#if FABLE_COMPILER_PYTHON
            let v340 : Ref<Str> = v323 |> unbox<Ref<Str>>
            let _run_target_args'_v328 = v340 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v344 : Ref<Str> = v323 |> unbox<Ref<Str>>
            let _run_target_args'_v328 = v344 
            #endif
#else
            let v348 : Ref<Str> = v323 |> unbox<Ref<Str>>
            let _run_target_args'_v328 = v348 
            #endif
            let v351 : Ref<Str> = _run_target_args'_v328 
            let v357 : string = "v322.store($0)"
            let v358 : Result<rexie_Store, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v351 v357 
            let v359 : (rexie_Error -> std_string_String) = method14()
            (* run_target_args'
            let v361 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v362 : string = "$0.map_err(|x| $1(x))"
            let v363 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v358, v359) v362 
            let _run_target_args'_v361 = v363 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v364 : string = "$0.map_err(|x| $1(x))"
            let v365 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v358, v359) v364 
            let _run_target_args'_v361 = v365 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v366 : string = "$0.map_err(|x| $1(x))"
            let v367 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v358, v359) v366 
            let _run_target_args'_v361 = v367 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v368 : Result<rexie_Store, std_string_String> = match v358 with Ok x -> Ok x | Error x -> Error (v359 x)
            let _run_target_args'_v361 = v368 
            #endif
#if FABLE_COMPILER_PYTHON
            let v369 : Result<rexie_Store, std_string_String> = match v358 with Ok x -> Ok x | Error x -> Error (v359 x)
            let _run_target_args'_v361 = v369 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v370 : Result<rexie_Store, std_string_String> = match v358 with Ok x -> Ok x | Error x -> Error (v359 x)
            let _run_target_args'_v361 = v370 
            #endif
#else
            let v371 : Result<rexie_Store, std_string_String> = match v358 with Ok x -> Ok x | Error x -> Error (v359 x)
            let _run_target_args'_v361 = v371 
            #endif
            let v372 : Result<rexie_Store, std_string_String> = _run_target_args'_v361 
            let v375 : string = "$0?"
            let v376 : rexie_Store = Fable.Core.RustInterop.emitRustExpr v372 v375 
            let v377 : string = method79(v207)
            (* run_target_args'
            let v382 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v383 : string = "&*$0"
            let v384 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v377 v383 
            let _run_target_args'_v382 = v384 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v385 : string = "&*$0"
            let v386 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v377 v385 
            let _run_target_args'_v382 = v386 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v387 : string = "&*$0"
            let v388 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v377 v387 
            let _run_target_args'_v382 = v388 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v390 : Ref<Str> = v377 |> unbox<Ref<Str>>
            let _run_target_args'_v382 = v390 
            #endif
#if FABLE_COMPILER_PYTHON
            let v394 : Ref<Str> = v377 |> unbox<Ref<Str>>
            let _run_target_args'_v382 = v394 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v398 : Ref<Str> = v377 |> unbox<Ref<Str>>
            let _run_target_args'_v382 = v398 
            #endif
#else
            let v402 : Ref<Str> = v377 |> unbox<Ref<Str>>
            let _run_target_args'_v382 = v402 
            #endif
            let v405 : Ref<Str> = _run_target_args'_v382 
            let v411 : string = "wasm_bindgen::JsValue::from_str($0)"
            let v412 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr v405 v411 
            let v413 : string = $"Box::pin(rexie::Store::get(&v376, v412))"
            let v414 : std_pin_Pin<Box<Dyn<std_future_Future<Result<wasm_bindgen_JsValue option, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v413 
            let v415 : string = "v414.await"
            let v416 : Result<wasm_bindgen_JsValue option, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v415 
            let v417 : (rexie_Error -> std_string_String) = method16()
            (* run_target_args'
            let v419 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v420 : string = "$0.map_err(|x| $1(x))"
            let v421 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v416, v417) v420 
            let _run_target_args'_v419 = v421 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v422 : string = "$0.map_err(|x| $1(x))"
            let v423 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v416, v417) v422 
            let _run_target_args'_v419 = v423 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v424 : string = "$0.map_err(|x| $1(x))"
            let v425 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v416, v417) v424 
            let _run_target_args'_v419 = v425 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v426 : Result<wasm_bindgen_JsValue option, std_string_String> = match v416 with Ok x -> Ok x | Error x -> Error (v417 x)
            let _run_target_args'_v419 = v426 
            #endif
#if FABLE_COMPILER_PYTHON
            let v427 : Result<wasm_bindgen_JsValue option, std_string_String> = match v416 with Ok x -> Ok x | Error x -> Error (v417 x)
            let _run_target_args'_v419 = v427 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v428 : Result<wasm_bindgen_JsValue option, std_string_String> = match v416 with Ok x -> Ok x | Error x -> Error (v417 x)
            let _run_target_args'_v419 = v428 
            #endif
#else
            let v429 : Result<wasm_bindgen_JsValue option, std_string_String> = match v416 with Ok x -> Ok x | Error x -> Error (v417 x)
            let _run_target_args'_v419 = v429 
            #endif
            let v430 : Result<wasm_bindgen_JsValue option, std_string_String> = _run_target_args'_v419 
            let v433 : string = "$0?"
            let v434 : wasm_bindgen_JsValue option = Fable.Core.RustInterop.emitRustExpr v430 v433 
            let v437 : (wasm_bindgen_JsValue -> US4) = method17()
            let v438 : US4 option = v434 |> Option.map v437 
            let v452 : US4 = US4_1
            let v453 : US4 = v438 |> Option.defaultValue v452 
            let v561 : US25 =
                match v453 with
                | US4_1 -> (* None *)
                    US25_1
                | US4_0(v457) -> (* Some *)
                    let v458 : wasm_bindgen_JsValue = method18(v457)
                    let v459 : string = "serde_wasm_bindgen::from_value(v458)"
                    let v460 : Result<serde_json_Value option, serde_wasm_bindgen_Error> = Fable.Core.RustInterop.emitRustExpr () v459 
                    let v461 : (serde_wasm_bindgen_Error -> std_string_String) = method19()
                    (* run_target_args'
                    let v463 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v464 : string = "$0.map_err(|x| $1(x))"
                    let v465 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v460, v461) v464 
                    let _run_target_args'_v463 = v465 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v466 : string = "$0.map_err(|x| $1(x))"
                    let v467 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v460, v461) v466 
                    let _run_target_args'_v463 = v467 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v468 : string = "$0.map_err(|x| $1(x))"
                    let v469 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v460, v461) v468 
                    let _run_target_args'_v463 = v469 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v470 : Result<serde_json_Value option, std_string_String> = match v460 with Ok x -> Ok x | Error x -> Error (v461 x)
                    let _run_target_args'_v463 = v470 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v471 : Result<serde_json_Value option, std_string_String> = match v460 with Ok x -> Ok x | Error x -> Error (v461 x)
                    let _run_target_args'_v463 = v471 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v472 : Result<serde_json_Value option, std_string_String> = match v460 with Ok x -> Ok x | Error x -> Error (v461 x)
                    let _run_target_args'_v463 = v472 
                    #endif
#else
                    let v473 : Result<serde_json_Value option, std_string_String> = match v460 with Ok x -> Ok x | Error x -> Error (v461 x)
                    let _run_target_args'_v463 = v473 
                    #endif
                    let v474 : Result<serde_json_Value option, std_string_String> = _run_target_args'_v463 
                    let v477 : string = "$0?"
                    let v478 : serde_json_Value option = Fable.Core.RustInterop.emitRustExpr v474 v477 
                    let v481 : (serde_json_Value -> US5) = method20()
                    let v482 : US5 option = v478 |> Option.map v481 
                    let v496 : US5 = US5_1
                    let v497 : US5 = v482 |> Option.defaultValue v496 
                    match v497 with
                    | US5_1 -> (* None *)
                        US25_1
                    | US5_0(v501) -> (* Some *)
                        let v502 : serde_json_Value = method21(v501)
                        let v503 : string = "serde_json::from_value(v502)"
                        let v504 : Result<Vec<uint8>, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr () v503 
                        let v505 : (serde_json_Error -> std_string_String) = method22()
                        (* run_target_args'
                        let v507 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v508 : string = "$0.map_err(|x| $1(x))"
                        let v509 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v504, v505) v508 
                        let _run_target_args'_v507 = v509 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v510 : string = "$0.map_err(|x| $1(x))"
                        let v511 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v504, v505) v510 
                        let _run_target_args'_v507 = v511 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v512 : string = "$0.map_err(|x| $1(x))"
                        let v513 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v504, v505) v512 
                        let _run_target_args'_v507 = v513 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v514 : Result<Vec<uint8>, std_string_String> = match v504 with Ok x -> Ok x | Error x -> Error (v505 x)
                        let _run_target_args'_v507 = v514 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v515 : Result<Vec<uint8>, std_string_String> = match v504 with Ok x -> Ok x | Error x -> Error (v505 x)
                        let _run_target_args'_v507 = v515 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v516 : Result<Vec<uint8>, std_string_String> = match v504 with Ok x -> Ok x | Error x -> Error (v505 x)
                        let _run_target_args'_v507 = v516 
                        #endif
#else
                        let v517 : Result<Vec<uint8>, std_string_String> = match v504 with Ok x -> Ok x | Error x -> Error (v505 x)
                        let _run_target_args'_v507 = v517 
                        #endif
                        let v518 : Result<Vec<uint8>, std_string_String> = _run_target_args'_v507 
                        let v521 : string = "$0?"
                        let v522 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v518 v521 
                        let v523 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                        let v524 : (uint8 []) = Fable.Core.RustInterop.emitRustExpr v522 v523 
                        let v525 : int32 = v524.Length
                        let v526 : string = "state_core.get_data () / data_len: " + string v525 + ""
                        let v527 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v528 : bool = Fable.Core.RustInterop.emitRustExpr v526 v527 
                        let v529 : string = "$0.to_vec()"
                        let v530 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v524 v529 
                        let v531 : string = "v530.as_slice()"
                        let v532 : Ref<Slice<uint8>> = Fable.Core.RustInterop.emitRustExpr () v531 
                        let v533 : string = "true; let mut v532 = v532"
                        let v534 : bool = Fable.Core.RustInterop.emitRustExpr () v533 
                        let v535 : string = "borsh::BorshDeserialize::deserialize(&mut v532)"
                        let v536 : Result<Heap4, borsh_io_Error> = Fable.Core.RustInterop.emitRustExpr () v535 
                        let v537 : (borsh_io_Error -> std_string_String) = method23()
                        (* run_target_args'
                        let v539 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v540 : string = "$0.map_err(|x| $1(x))"
                        let v541 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v536, v537) v540 
                        let _run_target_args'_v539 = v541 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v542 : string = "$0.map_err(|x| $1(x))"
                        let v543 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v536, v537) v542 
                        let _run_target_args'_v539 = v543 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v544 : string = "$0.map_err(|x| $1(x))"
                        let v545 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v536, v537) v544 
                        let _run_target_args'_v539 = v545 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v546 : Result<Heap4, std_string_String> = match v536 with Ok x -> Ok x | Error x -> Error (v537 x)
                        let _run_target_args'_v539 = v546 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v547 : Result<Heap4, std_string_String> = match v536 with Ok x -> Ok x | Error x -> Error (v537 x)
                        let _run_target_args'_v539 = v547 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v548 : Result<Heap4, std_string_String> = match v536 with Ok x -> Ok x | Error x -> Error (v537 x)
                        let _run_target_args'_v539 = v548 
                        #endif
#else
                        let v549 : Result<Heap4, std_string_String> = match v536 with Ok x -> Ok x | Error x -> Error (v537 x)
                        let _run_target_args'_v539 = v549 
                        #endif
                        let v550 : Result<Heap4, std_string_String> = _run_target_args'_v539 
                        let v553 : string = "$0?"
                        let v554 : Heap4 = Fable.Core.RustInterop.emitRustExpr v550 v553 
                        US25_0(v554)
            let v569 : Heap4 option =
                match v561 with
                | US25_1 -> (* None *)
                    let v567 : Heap4 option = None
                    v567
                | US25_0(v562) -> (* Some *)
                    let v564 : Heap4 option = Some v562 
                    v564
            let v571 : Result<Heap4 option, std_string_String> = Ok v569 
            let v574 : string = v49 + v50 
            let x = v571 //
            let v575 : _ = x
            let v576 : unit = ()
            (* run_target_args'
            let v577 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v578 : string = $"true; let _fix_closure_v576 = $0"
            let v579 : bool = Fable.Core.RustInterop.emitRustExpr v575 v578 
            let _run_target_args'_v577 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v580 : string = $"true; let _fix_closure_v576 = $0"
            let v581 : bool = Fable.Core.RustInterop.emitRustExpr v575 v580 
            let _run_target_args'_v577 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v582 : string = $"true; let _fix_closure_v576 = $0"
            let v583 : bool = Fable.Core.RustInterop.emitRustExpr v575 v582 
            let _run_target_args'_v577 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v577 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v577 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v577 = false 
            #endif
#else
            let _run_target_args'_v577 = false 
            #endif
            let v584 : bool = _run_target_args'_v577 
            let v586 : string = $"true; _fix_closure_v576 " + v574 + "); " + v49 + " // rust.fix_closure'"
            let v587 : bool = Fable.Core.RustInterop.emitRustExpr () v586 
            let v588 : string = "__future_init"
            let v589 : _ = Fable.Core.RustInterop.emitRustExpr () v588 
            let v590 : string = "v589"
            let v591 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v590 
            let func1_from_result = v591 //
            let v592 : _ = func1_from_result
            let v593 : string = $"true; $0 /*"
            let v594 : bool = Fable.Core.RustInterop.emitRustExpr v592 v593 
            let v595 : string = $"*/ }}); //"
            let v596 : bool = Fable.Core.RustInterop.emitRustExpr () v595 
            let v597 : string = $"_func1_from_v198"
            let v598 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v597 
            let v599 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v600 : (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>) = closure65(v598)
            let v601 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr struct (v145, v600) v599 
            let v602 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = method81(v601)
            let v603 : string = "futures::future::try_join_all(v602)"
            let v604 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v603 
            let v605 : string = "v604.await"
            let v606 : Result<Vec<Heap4 option>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v605 
            let v607 : string = "$0?"
            let v608 : Vec<Heap4 option> = Fable.Core.RustInterop.emitRustExpr v606 v607 
            US24_0(v608)
        | _ ->
            let v610 : string = "database=None"
            (* run_target_args'
            let v615 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v616 : string = "&*$0"
            let v617 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v610 v616 
            let _run_target_args'_v615 = v617 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v618 : string = "&*$0"
            let v619 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v610 v618 
            let _run_target_args'_v615 = v619 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v620 : string = "&*$0"
            let v621 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v610 v620 
            let _run_target_args'_v615 = v621 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v623 : Ref<Str> = v610 |> unbox<Ref<Str>>
            let _run_target_args'_v615 = v623 
            #endif
#if FABLE_COMPILER_PYTHON
            let v627 : Ref<Str> = v610 |> unbox<Ref<Str>>
            let _run_target_args'_v615 = v627 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v631 : Ref<Str> = v610 |> unbox<Ref<Str>>
            let _run_target_args'_v615 = v631 
            #endif
#else
            let v635 : Ref<Str> = v610 |> unbox<Ref<Str>>
            let _run_target_args'_v615 = v635 
            #endif
            let v638 : Ref<Str> = _run_target_args'_v615 
            (* run_target_args'
            let v648 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v649 : string = "String::from($0)"
            let v650 : std_string_String = Fable.Core.RustInterop.emitRustExpr v638 v649 
            let _run_target_args'_v648 = v650 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v651 : string = "String::from($0)"
            let v652 : std_string_String = Fable.Core.RustInterop.emitRustExpr v638 v651 
            let _run_target_args'_v648 = v652 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v653 : string = "String::from($0)"
            let v654 : std_string_String = Fable.Core.RustInterop.emitRustExpr v638 v653 
            let _run_target_args'_v648 = v654 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v656 : std_string_String = v638 |> unbox<std_string_String>
            let _run_target_args'_v648 = v656 
            #endif
#if FABLE_COMPILER_PYTHON
            let v660 : std_string_String = v638 |> unbox<std_string_String>
            let _run_target_args'_v648 = v660 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v664 : std_string_String = v638 |> unbox<std_string_String>
            let _run_target_args'_v648 = v664 
            #endif
#else
            let v668 : std_string_String = v638 |> unbox<std_string_String>
            let _run_target_args'_v648 = v668 
            #endif
            let v671 : std_string_String = _run_target_args'_v648 
            US24_1(v671)
    let v690 : Result<Vec<Heap4 option>, std_string_String> =
        match v678 with
        | US24_1(v684) -> (* Error *)
            let v686 : Result<Vec<Heap4 option>, std_string_String> = Error v684 
            v686
        | US24_0(v679) -> (* Ok *)
            let v681 : Result<Vec<Heap4 option>, std_string_String> = Ok v679 
            v681
    let v692 : string = $"%A{v690}"
    let v695 : string = "state_core.use_requests (4) / state_data_resource new_local_resource / result: " + string v692 + ""
    let v696 : int64 = 200L
    let v697 : string = method8(v696, v695)
    let v698 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v699 : bool = Fable.Core.RustInterop.emitRustExpr v697 v698 
    let v700 : string = v49 + v50 
    let x = v690 //
    let v701 : _ = x
    let v702 : unit = ()
    (* run_target_args'
    let v703 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v704 : string = $"true; let _fix_closure_v702 = $0"
    let v705 : bool = Fable.Core.RustInterop.emitRustExpr v701 v704 
    let _run_target_args'_v703 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v706 : string = $"true; let _fix_closure_v702 = $0"
    let v707 : bool = Fable.Core.RustInterop.emitRustExpr v701 v706 
    let _run_target_args'_v703 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v708 : string = $"true; let _fix_closure_v702 = $0"
    let v709 : bool = Fable.Core.RustInterop.emitRustExpr v701 v708 
    let _run_target_args'_v703 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v703 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v703 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v703 = false 
    #endif
#else
    let _run_target_args'_v703 = false 
    #endif
    let v710 : bool = _run_target_args'_v703 
    let v712 : string = $"true; _fix_closure_v702 " + v700 + "); " + v49 + " // rust.fix_closure'"
    let v713 : bool = Fable.Core.RustInterop.emitRustExpr () v712 
    let v714 : string = "__future_init"
    let v715 : _ = Fable.Core.RustInterop.emitRustExpr () v714 
    let v716 : string = "v715"
    let v717 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<Heap4 option>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v716 
    let v718 : string = $"true; $0 /*"
    let v719 : bool = Fable.Core.RustInterop.emitRustExpr v717 v718 
    let v720 : string = $"*/ }}); //"
    let v721 : bool = Fable.Core.RustInterop.emitRustExpr () v720 
    let v722 : string = $"_func0_from_v128"
    let v723 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<Heap4 option>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v722 
    let v724 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v725 : leptos_prelude_ArcLocalResource<Result<Vec<Heap4 option>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v723 v724 
    let v726 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v727 : (unit -> Result<Vec<Heap4 option>, std_string_String> option) = closure66(v725)
    let v728 : leptos_prelude_ArcMemo<Result<Vec<Heap4 option>, std_string_String> option> = Fable.Core.RustInterop.emitRustExpr v727 v726 
    let v729 : unit = ()
    let v730 : string = $"true; let _func0_from_v729 = Func0::from(move || {{ //"
    let v731 : bool = Fable.Core.RustInterop.emitRustExpr () v730 
    let v732 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v733 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v732 
    let v734 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v735 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v728 v734 
    let v737 : string = $"%A{v733}"
    let v740 : int64 = 400L
    let v741 : string = method8(v740, v737)
    let v742 : string = "state_core.use_requests (7) / json new_local_resource / requests: " + string v741 + ""
    let v743 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v744 : bool = Fable.Core.RustInterop.emitRustExpr v742 v743 
    let v745 : string = "true; let __future_init = Box::pin(/*"
    let v746 : bool = Fable.Core.RustInterop.emitRustExpr () v745 
    let v747 : string = "*/ async move { /*"
    let v748 : bool = Fable.Core.RustInterop.emitRustExpr () v747 
    let v749 : string = "*/ ()"
    let v750 : bool = Fable.Core.RustInterop.emitRustExpr () v749 
    let v753 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v754 : US26 option = v735 |> Option.map v753 
    let v768 : US26 = US26_1
    let v769 : US26 = v754 |> Option.defaultValue v768 
    let v819 : US27 =
        match v769 with
        | US26_1 -> (* None *)
            US27_1
        | US26_0(v773) -> (* Some *)
            let v774 : (Vec<Heap4 option> -> US24) = method83()
            let v775 : (std_string_String -> US24) = method84()
            let v777 : US24 = match v773 with Ok x -> v774 x | Error x -> v775 x
            let v815 : US28 =
                match v777 with
                | US24_1(v812) -> (* Error *)
                    US28_1(v812)
                | US24_0(v780) -> (* Ok *)
                    let v781 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v782 : bool = Fable.Core.RustInterop.emitRustExpr v780 v781 
                    let v783 : string = "x"
                    let v784 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v783 
                    let v787 : (Heap4 -> US25) = method85()
                    let v788 : US25 option = v784 |> Option.map v787 
                    let v802 : US25 = US25_1
                    let v803 : US25 = v788 |> Option.defaultValue v802 
                    let v807 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v808 : bool = Fable.Core.RustInterop.emitRustExpr v803 v807 
                    let v809 : string = "_vec_map"
                    let v810 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v809 
                    US28_0(v810)
            US27_0(v815)
    let v821 : string = $"%A{v819}"
    let v824 : int64 = 400L
    let v825 : string = method8(v824, v821)
    let v826 : string = "state_core.use_requests (8) / result_memo / state_data: " + string v825 + ""
    let v827 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v828 : bool = Fable.Core.RustInterop.emitRustExpr v826 v827 
    let v829 : (int32 -> (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>)) = method86(v819)
    let v830 : Vec<struct (string * US23 * string * bool * bool)> = method96(v733)
    let v831 : string = "v830.iter().enumerate().map(|(i, x)| v829(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v832 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v831 
    let v833 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = method97(v832)
    let v834 : string = "futures::future::try_join_all(v833)"
    let v835 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v834 
    let v836 : string = "v835.await"
    let v837 : Result<Vec<string option>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v836 
    let v838 : string = "$0?"
    let v839 : Vec<string option> = Fable.Core.RustInterop.emitRustExpr v837 v838 
    let v841 : Result<Vec<string option>, std_string_String> = Ok v839 
    let v844 : string = v49 + v50 
    let x = v841 //
    let v845 : _ = x
    let v846 : unit = ()
    (* run_target_args'
    let v847 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v848 : string = $"true; let _fix_closure_v846 = $0"
    let v849 : bool = Fable.Core.RustInterop.emitRustExpr v845 v848 
    let _run_target_args'_v847 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v850 : string = $"true; let _fix_closure_v846 = $0"
    let v851 : bool = Fable.Core.RustInterop.emitRustExpr v845 v850 
    let _run_target_args'_v847 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v852 : string = $"true; let _fix_closure_v846 = $0"
    let v853 : bool = Fable.Core.RustInterop.emitRustExpr v845 v852 
    let _run_target_args'_v847 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v847 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v847 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v847 = false 
    #endif
#else
    let _run_target_args'_v847 = false 
    #endif
    let v854 : bool = _run_target_args'_v847 
    let v856 : string = $"true; _fix_closure_v846 " + v844 + "); " + v49 + " // rust.fix_closure'"
    let v857 : bool = Fable.Core.RustInterop.emitRustExpr () v856 
    let v858 : string = "__future_init"
    let v859 : _ = Fable.Core.RustInterop.emitRustExpr () v858 
    let v860 : string = "v859"
    let v861 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<string option>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v860 
    let v862 : string = $"true; $0 /*"
    let v863 : bool = Fable.Core.RustInterop.emitRustExpr v861 v862 
    let v864 : string = $"*/ }}); //"
    let v865 : bool = Fable.Core.RustInterop.emitRustExpr () v864 
    let v866 : string = $"_func0_from_v729"
    let v867 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<string option>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v866 
    let v868 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v869 : leptos_prelude_ArcLocalResource<Result<Vec<string option>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v867 v868 
    let v870 : unit = ()
    let v871 : string = $"true; let _func1_from_v870 = Func1::from(move |value| {{ //"
    let v872 : bool = Fable.Core.RustInterop.emitRustExpr () v871 
    let v873 : string = $"value"
    let v874 : Heap4 = Fable.Core.RustInterop.emitRustExpr () v873 
    let v876 : string = $"%A{v874}"
    let v879 : int64 = System.Convert.ToInt64 v876.Length
    let v880 : string = "state_core.use_requests (10) / set_state_data_action / value_len: " + string v879 + ""
    let v881 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v882 : bool = Fable.Core.RustInterop.emitRustExpr v880 v881 
    let v883 : string = "true; let __future_init = Box::pin(/*"
    let v884 : bool = Fable.Core.RustInterop.emitRustExpr () v883 
    let v885 : string = "*/ async move { /*"
    let v886 : bool = Fable.Core.RustInterop.emitRustExpr () v885 
    let v887 : string = "*/ ()"
    let v888 : bool = Fable.Core.RustInterop.emitRustExpr () v887 
    let v889 : string = "Box::pin($0)"
    let v890 : std_pin_Pin<Box<leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>>> = Fable.Core.RustInterop.emitRustExpr v0 v889 
    let v891 : string = $"leptos::prelude::ArcMemo::get_untracked(&$0)"
    let v892 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v890 v891 
    let v893 : string = "Box::pin($0)"
    let v894 : std_pin_Pin<Box<leptos_prelude_ArcMemo<PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option>>> = Fable.Core.RustInterop.emitRustExpr v127 v893 
    let v895 : string = $"leptos::prelude::ArcMemo::get_untracked(&$0)"
    let v896 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr v894 v895 
    let v897 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v898 : bool = Fable.Core.RustInterop.emitRustExpr v896 v897 
    let v899 : string = "x"
    let v900 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr () v899 
    let v901 : string = "$0.0"
    let v902 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr v900 v901 
    let v903 : string = "true; $0 })"
    let v904 : bool = Fable.Core.RustInterop.emitRustExpr v902 v903 
    let v905 : string = "_optionm_map_"
    let v906 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr () v905 
    let v909 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v910 : US2 option = v906 |> Option.map v909 
    let v924 : US2 = US2_1
    let v925 : US2 = v910 |> Option.defaultValue v924 
    let v1102 : US34 =
        match v925 with
        | US2_0(v929) -> (* Some *)
            let v930 : unit = ()
            let v931 : string = $"true; let _func1_from_v930 = Func1::from(move |value| {{ //"
            let v932 : bool = Fable.Core.RustInterop.emitRustExpr () v931 
            let v933 : string = $"value"
            let struct (v934 : string, v935 : US23, v936 : string, v937 : bool, v938 : bool) = Fable.Core.RustInterop.emitRustExpr () v933 
            let v939 : string = "true; let __future_init = Box::pin(/*"
            let v940 : bool = Fable.Core.RustInterop.emitRustExpr () v939 
            let v941 : string = "*/ async move { /*"
            let v942 : bool = Fable.Core.RustInterop.emitRustExpr () v941 
            let v943 : string = "*/ ()"
            let v944 : bool = Fable.Core.RustInterop.emitRustExpr () v943 
            let v945 : string = "state_core.use_requests (11) / set_state_data_action / database=Some(_) / url: " + v934 + ""
            let v946 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v947 : bool = Fable.Core.RustInterop.emitRustExpr v945 v946 
            let v948 : string = "url[" + v934 + "](" + $"%A{v936}" + ")"
            let v950 : string = $"%A{v874}"
            let v953 : int64 = System.Convert.ToInt64 v950.Length
            let v954 : string = "state_core.set_data () / data_len: " + string v953 + ""
            let v955 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v956 : bool = Fable.Core.RustInterop.emitRustExpr v954 v955 
            let v957 : string = "true; let __future_init = Box::pin(/*"
            let v958 : bool = Fable.Core.RustInterop.emitRustExpr () v957 
            let v959 : string = "*/ async move { /*"
            let v960 : bool = Fable.Core.RustInterop.emitRustExpr () v959 
            let v961 : string = "*/ ()"
            let v962 : bool = Fable.Core.RustInterop.emitRustExpr () v961 
            let v963 : string = "true; let mut data = Vec::new()"
            let v964 : bool = Fable.Core.RustInterop.emitRustExpr () v963 
            let v965 : string = "true; borsh::BorshSerialize::serialize(&$0, &mut data).unwrap()"
            let v966 : bool = Fable.Core.RustInterop.emitRustExpr v874 v965 
            let v967 : string = "data"
            let v968 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr () v967 
            let v969 : string = "serde_wasm_bindgen::to_value(&v968).unwrap()"
            let v970 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr () v969 
            let v971 : string = method98(v948)
            (* run_target_args'
            let v976 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v977 : string = "&*$0"
            let v978 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v971 v977 
            let _run_target_args'_v976 = v978 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v979 : string = "&*$0"
            let v980 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v971 v979 
            let _run_target_args'_v976 = v980 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v981 : string = "&*$0"
            let v982 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v971 v981 
            let _run_target_args'_v976 = v982 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v984 : Ref<Str> = v971 |> unbox<Ref<Str>>
            let _run_target_args'_v976 = v984 
            #endif
#if FABLE_COMPILER_PYTHON
            let v988 : Ref<Str> = v971 |> unbox<Ref<Str>>
            let _run_target_args'_v976 = v988 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v992 : Ref<Str> = v971 |> unbox<Ref<Str>>
            let _run_target_args'_v976 = v992 
            #endif
#else
            let v996 : Ref<Str> = v971 |> unbox<Ref<Str>>
            let _run_target_args'_v976 = v996 
            #endif
            let v999 : Ref<Str> = _run_target_args'_v976 
            let v1005 : string = "$0.transaction(&[\"store\"], rexie::TransactionMode::ReadWrite)?"
            let v1006 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v929 v1005 
            let v1007 : string = "v1006.store(\"store\")?"
            let v1008 : rexie_Store = Fable.Core.RustInterop.emitRustExpr () v1007 
            let v1009 : string = "true; v1008.put(&v970, Some(&$0.into())).await?"
            let v1010 : bool = Fable.Core.RustInterop.emitRustExpr v999 v1009 
            let v1011 : string = "true; v1006.done().await?"
            let v1012 : bool = Fable.Core.RustInterop.emitRustExpr () v1011 
            let v1014 : Result<unit, rexie_Error> = Ok () 
            let v1017 : string = v49 + v50 
            let x = v1014 //
            let v1018 : _ = x
            let v1019 : unit = ()
            (* run_target_args'
            let v1020 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1021 : string = $"true; let _fix_closure_v1019 = $0"
            let v1022 : bool = Fable.Core.RustInterop.emitRustExpr v1018 v1021 
            let _run_target_args'_v1020 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1023 : string = $"true; let _fix_closure_v1019 = $0"
            let v1024 : bool = Fable.Core.RustInterop.emitRustExpr v1018 v1023 
            let _run_target_args'_v1020 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1025 : string = $"true; let _fix_closure_v1019 = $0"
            let v1026 : bool = Fable.Core.RustInterop.emitRustExpr v1018 v1025 
            let _run_target_args'_v1020 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v1020 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v1020 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v1020 = false 
            #endif
#else
            let _run_target_args'_v1020 = false 
            #endif
            let v1027 : bool = _run_target_args'_v1020 
            let v1029 : string = $"true; _fix_closure_v1019 " + v1017 + "); " + v49 + " // rust.fix_closure'"
            let v1030 : bool = Fable.Core.RustInterop.emitRustExpr () v1029 
            let v1031 : string = "__future_init"
            let v1032 : _ = Fable.Core.RustInterop.emitRustExpr () v1031 
            let v1033 : string = "v1032"
            let v1034 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v1033 
            let v1035 : string = "v1034.await"
            let v1036 : Result<unit, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v1035 
            let v1037 : (rexie_Error -> std_string_String) = method99()
            (* run_target_args'
            let v1039 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1040 : string = "$0.map_err(|x| $1(x))"
            let v1041 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1036, v1037) v1040 
            let _run_target_args'_v1039 = v1041 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1042 : string = "$0.map_err(|x| $1(x))"
            let v1043 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1036, v1037) v1042 
            let _run_target_args'_v1039 = v1043 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1044 : string = "$0.map_err(|x| $1(x))"
            let v1045 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1036, v1037) v1044 
            let _run_target_args'_v1039 = v1045 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1046 : Result<unit, std_string_String> = match v1036 with Ok x -> Ok x | Error x -> Error (v1037 x)
            let _run_target_args'_v1039 = v1046 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1047 : Result<unit, std_string_String> = match v1036 with Ok x -> Ok x | Error x -> Error (v1037 x)
            let _run_target_args'_v1039 = v1047 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1048 : Result<unit, std_string_String> = match v1036 with Ok x -> Ok x | Error x -> Error (v1037 x)
            let _run_target_args'_v1039 = v1048 
            #endif
#else
            let v1049 : Result<unit, std_string_String> = match v1036 with Ok x -> Ok x | Error x -> Error (v1037 x)
            let _run_target_args'_v1039 = v1049 
            #endif
            let v1050 : Result<unit, std_string_String> = _run_target_args'_v1039 
            let v1053 : string = "true; $0?"
            let v1054 : bool = Fable.Core.RustInterop.emitRustExpr v1050 v1053 
            
            let v1056 : Result<unit, std_string_String> = Ok () 
            let v1059 : string = v49 + v50 
            let x = v1056 //
            let v1060 : _ = x
            let v1061 : unit = ()
            (* run_target_args'
            let v1062 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1063 : string = $"true; let _fix_closure_v1061 = $0"
            let v1064 : bool = Fable.Core.RustInterop.emitRustExpr v1060 v1063 
            let _run_target_args'_v1062 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1065 : string = $"true; let _fix_closure_v1061 = $0"
            let v1066 : bool = Fable.Core.RustInterop.emitRustExpr v1060 v1065 
            let _run_target_args'_v1062 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1067 : string = $"true; let _fix_closure_v1061 = $0"
            let v1068 : bool = Fable.Core.RustInterop.emitRustExpr v1060 v1067 
            let _run_target_args'_v1062 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v1062 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v1062 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v1062 = false 
            #endif
#else
            let _run_target_args'_v1062 = false 
            #endif
            let v1069 : bool = _run_target_args'_v1062 
            let v1071 : string = $"true; _fix_closure_v1061 " + v1059 + "); " + v49 + " // rust.fix_closure'"
            let v1072 : bool = Fable.Core.RustInterop.emitRustExpr () v1071 
            let v1073 : string = "__future_init"
            let v1074 : _ = Fable.Core.RustInterop.emitRustExpr () v1073 
            let v1075 : string = "v1074"
            let v1076 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v1075 
            let func1_from_result = v1076 //
            let v1077 : _ = func1_from_result
            let v1078 : string = $"true; $0 /*"
            let v1079 : bool = Fable.Core.RustInterop.emitRustExpr v1077 v1078 
            let v1080 : string = $"*/ }}); //"
            let v1081 : bool = Fable.Core.RustInterop.emitRustExpr () v1080 
            let v1082 : string = $"_func1_from_v930"
            let v1083 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1082 
            let v1084 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v1085 : (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>) = closure76(v1083)
            let v1086 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr struct (v892, v1085) v1084 
            let v1087 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = method101(v1086)
            let v1088 : string = "futures::future::try_join_all(v1087)"
            let v1089 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1088 
            let v1090 : string = "v1089.await"
            let v1091 : Result<Vec<unit>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v1090 
            let v1092 : string = "$0?"
            let v1093 : Vec<unit> = Fable.Core.RustInterop.emitRustExpr v1091 v1092 
            US34_0(v1093)
        | _ ->
            let v1095 : string = "state_core.use_requests (12) / set_state_data_action / database,request=None"
            let v1096 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1097 : bool = Fable.Core.RustInterop.emitRustExpr v1095 v1096 
            let v1098 : (unit []) = [||]
            let v1099 : string = "$0.to_vec()"
            let v1100 : Vec<unit> = Fable.Core.RustInterop.emitRustExpr v1098 v1099 
            US34_0(v1100)
    let v1114 : Result<Vec<unit>, std_string_String> =
        match v1102 with
        | US34_1(v1108) -> (* Error *)
            let v1110 : Result<Vec<unit>, std_string_String> = Error v1108 
            v1110
        | US34_0(v1103) -> (* Ok *)
            let v1105 : Result<Vec<unit>, std_string_String> = Ok v1103 
            v1105
    let v1115 : string = v49 + v50 
    let x = v1114 //
    let v1116 : _ = x
    let v1117 : unit = ()
    (* run_target_args'
    let v1118 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v1119 : string = $"true; let _fix_closure_v1117 = $0"
    let v1120 : bool = Fable.Core.RustInterop.emitRustExpr v1116 v1119 
    let _run_target_args'_v1118 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v1121 : string = $"true; let _fix_closure_v1117 = $0"
    let v1122 : bool = Fable.Core.RustInterop.emitRustExpr v1116 v1121 
    let _run_target_args'_v1118 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v1123 : string = $"true; let _fix_closure_v1117 = $0"
    let v1124 : bool = Fable.Core.RustInterop.emitRustExpr v1116 v1123 
    let _run_target_args'_v1118 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v1118 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v1118 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v1118 = false 
    #endif
#else
    let _run_target_args'_v1118 = false 
    #endif
    let v1125 : bool = _run_target_args'_v1118 
    let v1127 : string = $"true; _fix_closure_v1117 " + v1115 + "); " + v49 + " // rust.fix_closure'"
    let v1128 : bool = Fable.Core.RustInterop.emitRustExpr () v1127 
    let v1129 : string = "__future_init"
    let v1130 : _ = Fable.Core.RustInterop.emitRustExpr () v1129 
    let v1131 : string = "v1130"
    let v1132 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v1131 
    let func1_from_result = v1132 //
    let v1133 : _ = func1_from_result
    let v1134 : string = $"true; $0 /*"
    let v1135 : bool = Fable.Core.RustInterop.emitRustExpr v1133 v1134 
    let v1136 : string = $"*/ }}); //"
    let v1137 : bool = Fable.Core.RustInterop.emitRustExpr () v1136 
    let v1138 : string = $"_func1_from_v870"
    let v1139 : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1138 
    let v1140 : string = "leptos::prelude::Action::new(move |value: &std::sync::Arc<Heap4>| $0(value.clone()))"
    let v1141 : (Heap4 -> std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>) = closure77(v1139)
    let v1142 : leptos_prelude_Action<Heap4, Result<Vec<unit>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v1141 v1140 
    let v1143 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1144 : (unit -> (Result<crate_model_near_nearblocks_Root option, std_string_String> [])) = closure78(v0, v728, v869, v1142)
    let v1145 : leptos_prelude_ArcMemo<(Result<crate_model_near_nearblocks_Root option, std_string_String> [])> = Fable.Core.RustInterop.emitRustExpr v1144 v1143 
    let v1146 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1147 : (unit -> Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>) = closure87(v1, v124, v725, v1145)
    let v1148 : leptos_prelude_ArcMemo<Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>> = Fable.Core.RustInterop.emitRustExpr v1147 v1146 
    v1148
and closure91 () (v0 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option) : US43 =
    US43_0(v0)
and method115 () : ((struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option -> US43) =
    closure91()
and closure92 () (v0 : std_string_String) : US43 =
    US43_1(v0)
and method116 () : (std_string_String -> US43) =
    closure92()
and method117 (v0 : Func0<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>, US43>) : Func0<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>, US43> =
    v0
and closure93 (v0 : Func0<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>, US43>) (v1 : Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>) : US43 =
    let v2 : Func0<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>, US43> = method117(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : US43 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure94 () (v0 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) : US45 =
    US45_0(v0)
and method118 () : ((struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) -> US45) =
    closure94()
and method119 (v0 : Func0<US43, US44>) : Func0<US43, US44> =
    v0
and closure95 (v0 : Func0<US43, US44>) (v1 : US43) : US44 =
    let v2 : Func0<US43, US44> = method119(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : US44 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure96 () (v0 : US44) : bool =
    match v0 with
    | US44_0(v1) -> (* Ok *)
        match v1 with
        | US45_1 -> (* None *)
            true
        | _ ->
            false
    | _ ->
        false
and method120 () : (US44 -> bool) =
    closure96()
and method121 (v0 : Vec<US44>) : Vec<US44> =
    v0
and method123 (v0 : Func0<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))), struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))>) : Func0<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))), struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> =
    v0
and closure99 (v0 : Func0<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))), struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))>) (v1 : (unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])))) : struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) =
    let v2 : Func0<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))), struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = method123(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : unativeint, v6 : std_string_String, v7 : std_string_String, v8 : std_string_String, v9 : std_string_String, v10 : std_string_String, v11 : std_string_String, v12 : uint32, v13 : (struct (std_string_String * std_string_String option) []), v14 : float, v15 : bool, v16 : float, v17 : (std_string_String [])) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17)
and method124 (v0 : Func0<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])), struct (string * unativeint * Heap5)>) : Func0<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])), struct (string * unativeint * Heap5)> =
    v0
and closure100 (v0 : Func0<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])), struct (string * unativeint * Heap5)>) struct (v1 : unativeint, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : std_string_String, v7 : std_string_String, v8 : uint32, v9 : (struct (std_string_String * std_string_String option) []), v10 : float, v11 : bool, v12 : float, v13 : (std_string_String [])) : struct (string * unativeint * Heap5) =
    let v14 : Func0<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])), struct (string * unativeint * Heap5)> = method124(v0)
    let func1_move_x = struct (v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13) //
    let v15 : _ = func1_move_x
    let v16 : string = "(move |x| v14(x))($0)"
    let struct (v17 : string, v18 : unativeint, v19 : Heap5) = Fable.Core.RustInterop.emitRustExpr v15 v16 
    struct (v17, v18, v19)
and closure98 (v0 : (string []), v1 : int32) (v2 : US44) : US48 =
    let v3 : string = v0.[int v1]
    match v2 with
    | US44_1(v122) -> (* Error *)
        US48_1(v122)
    | US44_0(v4) -> (* Ok *)
        let v120 : US49 =
            match v4 with
            | US45_1 -> (* None *)
                US49_1
            | US45_0(v5) -> (* Some *)
                let v6 : string = "$0.to_vec()"
                let v7 : Vec<struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr v5 v6 
                let v8 : string = "v7.into_iter()"
                let v9 : _ = Fable.Core.RustInterop.emitRustExpr () v8 
                let v10 : string = "v9.enumerate().map(std::sync::Arc::new)"
                let v11 : _ = Fable.Core.RustInterop.emitRustExpr () v10 
                let v12 : string = "$0.collect::<Vec<_>>()"
                let v13 : Vec<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])))> = Fable.Core.RustInterop.emitRustExpr v11 v12 
                let v14 : unit = ()
                let v15 : string = $"true; let _func1_from_v14 = Func1::from(move |value| {{ //"
                let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
                let v17 : string = $"value"
                let v18 : (unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))) = Fable.Core.RustInterop.emitRustExpr () v17 
                let (a, b) = v18 
                let v32 : unativeint = a
                let struct (v33 : std_string_String, v34 : std_string_String, v35 : std_string_String, v36 : std_string_String, v37 : std_string_String, v38 : std_string_String, v39 : uint32, v40 : (struct (std_string_String * std_string_String option) []), v41 : float, v42 : bool, v43 : float, v44 : (std_string_String [])) = b
                let func1_from_result = struct (v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44) //
                let v71 : _ = func1_from_result
                let v72 : string = $"true; $0 /*"
                let v73 : bool = Fable.Core.RustInterop.emitRustExpr v71 v72 
                let v74 : string = $"*/ }}); //"
                let v75 : bool = Fable.Core.RustInterop.emitRustExpr () v74 
                let v76 : string = $"_func1_from_v14"
                let v77 : Func0<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))), struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr () v76 
                let v78 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
                let v79 : ((unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))) -> struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))) = closure99(v77)
                let v80 : Vec<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr struct (v13, v79) v78 
                let v81 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                let v82 : (struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) = Fable.Core.RustInterop.emitRustExpr v80 v81 
                let v83 : string = "$0.to_vec()"
                let v84 : Vec<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr v82 v83 
                let v85 : unit = ()
                let v86 : string = $"true; let _func1_from_v85 = Func1::from(move |value| {{ //"
                let v87 : bool = Fable.Core.RustInterop.emitRustExpr () v86 
                let v88 : string = $"value"
                let struct (v89 : unativeint, v90 : std_string_String, v91 : std_string_String, v92 : std_string_String, v93 : std_string_String, v94 : std_string_String, v95 : std_string_String, v96 : uint32, v97 : (struct (std_string_String * std_string_String option) []), v98 : float, v99 : bool, v100 : float, v101 : (std_string_String [])) = Fable.Core.RustInterop.emitRustExpr () v88 
                let v103 : unativeint = v1 |> unativeint 
                let v106 : Heap5 = {l0 = v90; l1 = v91; l2 = v92; l3 = v93; l4 = v94; l5 = v95; l6 = v96; l7 = v97; l8 = v98; l9 = v99; l10 = v100; l11 = v101} : Heap5
                let func1_from_result = struct (v3, v103, v106) //
                let v107 : _ = func1_from_result
                let v108 : string = $"true; $0 /*"
                let v109 : bool = Fable.Core.RustInterop.emitRustExpr v107 v108 
                let v110 : string = $"*/ }}); //"
                let v111 : bool = Fable.Core.RustInterop.emitRustExpr () v110 
                let v112 : string = $"_func1_from_v85"
                let v113 : Func0<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])), struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr () v112 
                let v114 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
                let v115 : (struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) -> struct (string * unativeint * Heap5)) = closure100(v113)
                let v116 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr struct (v84, v115) v114 
                US49_0(v116)
        US48_0(v120)
and closure97 (v0 : (string [])) (v1 : int32) : (US44 -> US48) =
    closure98(v0, v1)
and method122 (v0 : (string [])) : (int32 -> (US44 -> US48)) =
    closure97(v0)
and method125 (v0 : Vec<US44>) : Vec<US44> =
    v0
and method126 (v0 : Func0<US48, US50>) : Func0<US48, US50> =
    v0
and closure101 (v0 : Func0<US48, US50>) (v1 : US48) : US50 =
    let v2 : Func0<US48, US50> = method126(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : US50 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method127 (v0 : Func0<US50, Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>>) : Func0<US50, Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>> =
    v0
and closure102 (v0 : Func0<US50, Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>>) (v1 : US50) : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> =
    let v2 : Func0<US50, Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>> = method127(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method128 (v0 : int32, v1 : Mut1) : bool =
    let v2 : int32 = v1.l0
    let v3 : bool = v2 < v0
    v3
and closure103 () (v0 : Vec<struct (string * unativeint * Heap5)> option) : US50 =
    US50_0(v0)
and method130 () : (Vec<struct (string * unativeint * Heap5)> option -> US50) =
    closure103()
and closure104 () (v0 : std_string_String) : US50 =
    US50_1(v0)
and method131 () : (std_string_String -> US50) =
    closure104()
and closure105 () (v0 : Vec<struct (string * unativeint * Heap5)>) : US49 =
    US49_0(v0)
and method132 () : (Vec<struct (string * unativeint * Heap5)> -> US49) =
    closure105()
and method133 (v0 : Vec<struct (string * unativeint * Heap5)>) : Vec<struct (string * unativeint * Heap5)> =
    v0
and method134 (v0 : Vec<struct (string * unativeint * Heap5)>) : Vec<struct (string * unativeint * Heap5)> =
    v0
and method129 (v0 : UH2, v1 : US51) : US51 =
    match v0 with
    | UH2_1(v2, v3) -> (* Cons *)
        let v4 : (Vec<struct (string * unativeint * Heap5)> option -> US50) = method130()
        let v5 : (std_string_String -> US50) = method131()
        let v7 : US50 = match v2 with Ok x -> v4 x | Error x -> v5 x
        let v37 : US48 =
            match v7 with
            | US50_1(v34) -> (* Error *)
                US48_1(v34)
            | US50_0(v10) -> (* Ok *)
                let v13 : (Vec<struct (string * unativeint * Heap5)> -> US49) = method132()
                let v14 : US49 option = v10 |> Option.map v13 
                let v28 : US49 = US49_1
                let v29 : US49 = v14 |> Option.defaultValue v28 
                US48_0(v29)
        let v58 : US51 =
            match v1 with
            | US51_0(v38) -> (* Ok *)
                match v37 with
                | US48_1(v51) -> (* Error *)
                    US51_1(v51)
                | US48_0(v39) -> (* Ok *)
                    match v39 with
                    | US49_0(v40) -> (* Some *)
                        let v41 : Vec<struct (string * unativeint * Heap5)> = method133(v40)
                        let v42 : Vec<struct (string * unativeint * Heap5)> = method134(v38)
                        let v43 : string = "true; let mut v42 = v42"
                        let v44 : bool = Fable.Core.RustInterop.emitRustExpr () v43 
                        let v45 : string = "true; v42.extend(v41)"
                        let v46 : bool = Fable.Core.RustInterop.emitRustExpr () v45 
                        let v47 : string = "v42"
                        let v48 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr () v47 
                        US51_0(v48)
                    | _ ->
                        v1
            | _ ->
                match v37 with
                | US48_1(v55) -> (* Error *)
                    US51_1(v55)
                | _ ->
                    v1
        method129(v3, v58)
    | UH2_0 -> (* Nil *)
        v1
and method135 (v0 : Vec<struct (string * unativeint * Heap5)>) : Vec<struct (string * unativeint * Heap5)> =
    v0
and closure106 () struct (v0 : string, v1 : unativeint, v2 : Heap5) : std_string_String =
    let v3 : std_string_String = v2.l5
    v3
and method136 () : (struct (string * unativeint * Heap5) -> std_string_String) =
    closure106()
and method137 (v0 : Vec<struct (string * unativeint * Heap5)>) : Vec<struct (string * unativeint * Heap5)> =
    v0
and closure90 (v0 : leptos_prelude_ArcMemo<(string [])>, v1 : leptos_prelude_ArcMemo<Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>>) () : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> =
    let v2 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v3 : Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : unit = ()
    let v5 : string = $"true; let _func1_from_v4 = Func1::from(move |value| {{ //"
    let v6 : bool = Fable.Core.RustInterop.emitRustExpr () v5 
    let v7 : string = $"value"
    let v8 : Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v7 
    let v9 : ((struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option -> US43) = method115()
    let v10 : (std_string_String -> US43) = method116()
    let v12 : US43 = match v8 with Ok x -> v9 x | Error x -> v10 x
    let func1_from_result = v12 //
    let v15 : _ = func1_from_result
    let v16 : string = $"true; $0 /*"
    let v17 : bool = Fable.Core.RustInterop.emitRustExpr v15 v16 
    let v18 : string = $"*/ }}); //"
    let v19 : bool = Fable.Core.RustInterop.emitRustExpr () v18 
    let v20 : string = $"_func1_from_v4"
    let v21 : Func0<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>, US43> = Fable.Core.RustInterop.emitRustExpr () v20 
    let v22 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v23 : (Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String> -> US43) = closure93(v21)
    let v24 : Vec<US43> = Fable.Core.RustInterop.emitRustExpr struct (v3, v23) v22 
    let v25 : unit = ()
    let v26 : string = $"true; let _func1_from_v25 = Func1::from(move |value| {{ //"
    let v27 : bool = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : string = $"value"
    let v29 : US43 = Fable.Core.RustInterop.emitRustExpr () v28 
    let v57 : US44 =
        match v29 with
        | US43_1(v54) -> (* Error *)
            US44_1(v54)
        | US43_0(v30) -> (* Ok *)
            let v33 : ((struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) -> US45) = method118()
            let v34 : US45 option = v30 |> Option.map v33 
            let v48 : US45 = US45_1
            let v49 : US45 = v34 |> Option.defaultValue v48 
            US44_0(v49)
    let func1_from_result = v57 //
    let v58 : _ = func1_from_result
    let v59 : string = $"true; $0 /*"
    let v60 : bool = Fable.Core.RustInterop.emitRustExpr v58 v59 
    let v61 : string = $"*/ }}); //"
    let v62 : bool = Fable.Core.RustInterop.emitRustExpr () v61 
    let v63 : string = $"_func1_from_v25"
    let v64 : Func0<US43, US44> = Fable.Core.RustInterop.emitRustExpr () v63 
    let v65 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v66 : (US43 -> US44) = closure95(v64)
    let v67 : Vec<US44> = Fable.Core.RustInterop.emitRustExpr struct (v24, v66) v65 
    let v69 : string = $"%A{v67}"
    let v72 : int64 = 400L
    let v73 : string = method8(v72, v69)
    let v74 : string = "transactions.render (8) / txns move / root: " + string v73 + ""
    let v75 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v76 : bool = Fable.Core.RustInterop.emitRustExpr v74 v75 
    let v77 : (US44 -> bool) = method120()
    let v78 : Vec<US44> = method121(v67)
    let v79 : string = "v78.into_iter().filter(|x| v77(x.clone().clone())).collect::<Vec<_>>()"
    let v80 : Vec<US44> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v82 : (US44 []) = Fable.Core.RustInterop.emitRustExpr v80 v81 
    let v83 : int32 = v82.Length
    let v84 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v85 : (US44 []) = Fable.Core.RustInterop.emitRustExpr v67 v84 
    let v86 : int32 = v85.Length
    let v87 : bool = v83 = v86
    let v208 : US46 =
        if v87 then
            let v88 : US47 = US47_1
            US46_0(v88)
        else
            let v90 : string = $"leptos::prelude::ArcMemo::get(&$0)"
            let v91 : (string []) = Fable.Core.RustInterop.emitRustExpr v0 v90 
            let v92 : (int32 -> (US44 -> US48)) = method122(v91)
            let v93 : Vec<US44> = method125(v67)
            let v94 : string = "v93.iter().enumerate().map(|(i, x)| v92(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
            let v95 : Vec<US48> = Fable.Core.RustInterop.emitRustExpr () v94 
            let v96 : unit = ()
            let v97 : string = $"true; let _func1_from_v96 = Func1::from(move |value| {{ //"
            let v98 : bool = Fable.Core.RustInterop.emitRustExpr () v97 
            let v99 : string = $"value"
            let v100 : US48 = Fable.Core.RustInterop.emitRustExpr () v99 
            let v114 : US50 =
                match v100 with
                | US48_1(v111) -> (* Error *)
                    US50_1(v111)
                | US48_0(v101) -> (* Ok *)
                    let v109 : Vec<struct (string * unativeint * Heap5)> option =
                        match v101 with
                        | US49_1 -> (* None *)
                            let v107 : Vec<struct (string * unativeint * Heap5)> option = None
                            v107
                        | US49_0(v102) -> (* Some *)
                            let v104 : Vec<struct (string * unativeint * Heap5)> option = Some v102 
                            v104
                    US50_0(v109)
            let func1_from_result = v114 //
            let v115 : _ = func1_from_result
            let v116 : string = $"true; $0 /*"
            let v117 : bool = Fable.Core.RustInterop.emitRustExpr v115 v116 
            let v118 : string = $"*/ }}); //"
            let v119 : bool = Fable.Core.RustInterop.emitRustExpr () v118 
            let v120 : string = $"_func1_from_v96"
            let v121 : Func0<US48, US50> = Fable.Core.RustInterop.emitRustExpr () v120 
            let v122 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v123 : (US48 -> US50) = closure101(v121)
            let v124 : Vec<US50> = Fable.Core.RustInterop.emitRustExpr struct (v95, v123) v122 
            let v125 : unit = ()
            let v126 : string = $"true; let _func1_from_v125 = Func1::from(move |value| {{ //"
            let v127 : bool = Fable.Core.RustInterop.emitRustExpr () v126 
            let v128 : string = $"value"
            let v129 : US50 = Fable.Core.RustInterop.emitRustExpr () v128 
            let v141 : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> =
                match v129 with
                | US50_1(v135) -> (* Error *)
                    let v137 : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> = Error v135 
                    v137
                | US50_0(v130) -> (* Ok *)
                    let v132 : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> = Ok v130 
                    v132
            let func1_from_result = v141 //
            let v142 : _ = func1_from_result
            let v143 : string = $"true; $0 /*"
            let v144 : bool = Fable.Core.RustInterop.emitRustExpr v142 v143 
            let v145 : string = $"*/ }}); //"
            let v146 : bool = Fable.Core.RustInterop.emitRustExpr () v145 
            let v147 : string = $"_func1_from_v125"
            let v148 : Func0<US50, Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v147 
            let v149 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v150 : (US50 -> Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>) = closure102(v148)
            let v151 : Vec<Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr struct (v124, v150) v149 
            let v152 : (struct (string * unativeint * Heap5) []) = [||]
            let v153 : string = "$0.to_vec()"
            let v154 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr v152 v153 
            let v155 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
            let v156 : (Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v151 v155 
            let v157 : int32 = v156.Length
            let v158 : UH2 = UH2_0
            let v159 : Mut1 = {l0 = 0; l1 = v158} : Mut1
            while method128(v157, v159) do
                let v161 : int32 = v159.l0
                let v162 : int32 =  -v161
                let v163 : int32 = v162 + v157
                let v164 : int32 = v163 - 1
                let v165 : UH2 = v159.l1
                let v166 : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> = v156.[int v164]
                let v167 : int32 = v161 + 1
                let v168 : UH2 = UH2_1(v166, v165)
                v159.l0 <- v167
                v159.l1 <- v168
                ()
            let v169 : UH2 = v159.l1
            let v170 : US51 = US51_0(v154)
            let v171 : US51 = method129(v169, v170)
            let v185 : US51 =
                match v171 with
                | US51_1(v182) -> (* Error *)
                    US51_1(v182)
                | US51_0(v172) -> (* Ok *)
                    let v173 : Vec<struct (string * unativeint * Heap5)> = method135(v172)
                    let v174 : (struct (string * unativeint * Heap5) -> std_string_String) = method136()
                    let v175 : string = "true; let mut v173 = v173"
                    let v176 : bool = Fable.Core.RustInterop.emitRustExpr () v175 
                    let v177 : string = "true; v173.sort_by_key(|x| v174(x.clone()))"
                    let v178 : bool = Fable.Core.RustInterop.emitRustExpr () v177 
                    let v179 : string = "v173"
                    let v180 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr () v179 
                    US51_0(v180)
            let v200 : US52 =
                match v185 with
                | US51_1(v197) -> (* Error *)
                    US52_1(v197)
                | US51_0(v186) -> (* Ok *)
                    let v187 : Vec<struct (string * unativeint * Heap5)> = method137(v186)
                    let v188 : string = "true; let mut v187 = v187"
                    let v189 : bool = Fable.Core.RustInterop.emitRustExpr () v188 
                    let v190 : string = "true; v187.reverse()"
                    let v191 : bool = Fable.Core.RustInterop.emitRustExpr () v190 
                    let v192 : string = "v187"
                    let v193 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr () v192 
                    let v194 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v195 : (struct (string * unativeint * Heap5) []) = Fable.Core.RustInterop.emitRustExpr v193 v194 
                    US52_0(v195)
            match v200 with
            | US52_1(v204) -> (* Error *)
                US46_1(v204)
            | US52_0(v201) -> (* Ok *)
                let v202 : US47 = US47_0(v201)
                US46_0(v202)
    let v222 : US53 =
        match v208 with
        | US46_1(v219) -> (* Error *)
            US53_1(v219)
        | US46_0(v209) -> (* Ok *)
            let v217 : (struct (string * unativeint * Heap5) []) option =
                match v209 with
                | US47_1 -> (* None *)
                    let v215 : (struct (string * unativeint * Heap5) []) option = None
                    v215
                | US47_0(v210) -> (* Some *)
                    let v212 : (struct (string * unativeint * Heap5) []) option = Some v210 
                    v212
            US53_0(v217)
    let v234 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> =
        match v222 with
        | US53_1(v228) -> (* Error *)
            let v230 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Error v228 
            v230
        | US53_0(v223) -> (* Ok *)
            let v225 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Ok v223 
            v225
    let v236 : string = $"%A{v234}"
    let v239 : string = "use_transactions.render (9) / txns new_arc_memo / result: " + string v236 + " / loading: " + string v87 + ""
    let v240 : int64 = 200L
    let v241 : string = method8(v240, v239)
    let v242 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v243 : bool = Fable.Core.RustInterop.emitRustExpr v241 v242 
    v234
and closure108 () (v0 : (struct (string * unativeint * Heap5) []) option) : US53 =
    US53_0(v0)
and method138 () : ((struct (string * unativeint * Heap5) []) option -> US53) =
    closure108()
and closure109 () (v0 : std_string_String) : US53 =
    US53_1(v0)
and method139 () : (std_string_String -> US53) =
    closure109()
and closure110 () (v0 : (struct (string * unativeint * Heap5) [])) : US47 =
    US47_0(v0)
and method140 () : ((struct (string * unativeint * Heap5) []) -> US47) =
    closure110()
and closure111 () (v0 : serde_json_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method141 () : (serde_json_Error -> std_string_String) =
    closure111()
and closure112 () (v0 : std_string_String) : string =
    let v1 : string = "fable_library_rust::String_::fromString($0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    v2
and method142 () : (std_string_String -> string) =
    closure112()
and method143 (v0 : Result<std_string_String, std_string_String>) : Result<std_string_String, std_string_String> =
    v0
and closure113 () (v0 : string) : struct (string * US23 * string * bool * bool) =
    let v1 : string = "https://rpc.mainnet.near.org"
    let v2 : US23 = US23_1
    struct (v1, v2, v0, true, false)
and method144 () : (string -> struct (string * US23 * string * bool * bool)) =
    closure113()
and method145 (v0 : Result<string, std_string_String>) : Result<string, std_string_String> =
    v0
and method146 (v0 : Func0<struct (string * unativeint * Heap5), Result<struct (string * US23 * string * bool * bool), std_string_String>>) : Func0<struct (string * unativeint * Heap5), Result<struct (string * US23 * string * bool * bool), std_string_String>> =
    v0
and closure114 (v0 : Func0<struct (string * unativeint * Heap5), Result<struct (string * US23 * string * bool * bool), std_string_String>>) struct (v1 : string, v2 : unativeint, v3 : Heap5) : Result<struct (string * US23 * string * bool * bool), std_string_String> =
    let v4 : Func0<struct (string * unativeint * Heap5), Result<struct (string * US23 * string * bool * bool), std_string_String>> = method146(v0)
    let func1_move_x = struct (v1, v2, v3) //
    let v5 : _ = func1_move_x
    let v6 : string = "(move |x| v4(x))($0)"
    let v7 : Result<struct (string * US23 * string * bool * bool), std_string_String> = Fable.Core.RustInterop.emitRustExpr v5 v6 
    v7
and closure107 (v0 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>) () : Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String> =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : ((struct (string * unativeint * Heap5) []) option -> US53) = method138()
    let v4 : (std_string_String -> US53) = method139()
    let v6 : US53 = match v2 with Ok x -> v3 x | Error x -> v4 x
    let v36 : US46 =
        match v6 with
        | US53_1(v33) -> (* Error *)
            US46_1(v33)
        | US53_0(v9) -> (* Ok *)
            let v12 : ((struct (string * unativeint * Heap5) []) -> US47) = method140()
            let v13 : US47 option = v9 |> Option.map v12 
            let v27 : US47 = US47_1
            let v28 : US47 = v13 |> Option.defaultValue v27 
            US46_0(v28)
    let v372 : US54 =
        match v36 with
        | US46_1(v369) -> (* Error *)
            US54_1(v369)
        | US46_0(v37) -> (* Ok *)
            match v37 with
            | US47_0(v38) -> (* Some *)
                let v39 : string = "$0.to_vec()"
                let v40 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr v38 v39 
                let v41 : unit = ()
                let v42 : string = $"true; let _func1_from_v41 = Func1::from(move |value| {{ //"
                let v43 : bool = Fable.Core.RustInterop.emitRustExpr () v42 
                let v44 : string = $"value"
                let struct (v45 : string, v46 : unativeint, v47 : Heap5) = Fable.Core.RustInterop.emitRustExpr () v44 
                let v48 : string = "2.0"
                (* run_target_args'
                let v53 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v54 : string = "&*$0"
                let v55 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v48 v54 
                let _run_target_args'_v53 = v55 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v56 : string = "&*$0"
                let v57 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v48 v56 
                let _run_target_args'_v53 = v57 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v58 : string = "&*$0"
                let v59 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v48 v58 
                let _run_target_args'_v53 = v59 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v61 : Ref<Str> = v48 |> unbox<Ref<Str>>
                let _run_target_args'_v53 = v61 
                #endif
#if FABLE_COMPILER_PYTHON
                let v65 : Ref<Str> = v48 |> unbox<Ref<Str>>
                let _run_target_args'_v53 = v65 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v69 : Ref<Str> = v48 |> unbox<Ref<Str>>
                let _run_target_args'_v53 = v69 
                #endif
#else
                let v73 : Ref<Str> = v48 |> unbox<Ref<Str>>
                let _run_target_args'_v53 = v73 
                #endif
                let v76 : Ref<Str> = _run_target_args'_v53 
                (* run_target_args'
                let v86 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v87 : string = "String::from($0)"
                let v88 : std_string_String = Fable.Core.RustInterop.emitRustExpr v76 v87 
                let _run_target_args'_v86 = v88 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v89 : string = "String::from($0)"
                let v90 : std_string_String = Fable.Core.RustInterop.emitRustExpr v76 v89 
                let _run_target_args'_v86 = v90 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v91 : string = "String::from($0)"
                let v92 : std_string_String = Fable.Core.RustInterop.emitRustExpr v76 v91 
                let _run_target_args'_v86 = v92 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v94 : std_string_String = v76 |> unbox<std_string_String>
                let _run_target_args'_v86 = v94 
                #endif
#if FABLE_COMPILER_PYTHON
                let v98 : std_string_String = v76 |> unbox<std_string_String>
                let _run_target_args'_v86 = v98 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v102 : std_string_String = v76 |> unbox<std_string_String>
                let _run_target_args'_v86 = v102 
                #endif
#else
                let v106 : std_string_String = v76 |> unbox<std_string_String>
                let _run_target_args'_v86 = v106 
                #endif
                let v109 : std_string_String = _run_target_args'_v86 
                let v115 : string = "dontcare"
                (* run_target_args'
                let v120 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v121 : string = "&*$0"
                let v122 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v115 v121 
                let _run_target_args'_v120 = v122 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v123 : string = "&*$0"
                let v124 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v115 v123 
                let _run_target_args'_v120 = v124 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v125 : string = "&*$0"
                let v126 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v115 v125 
                let _run_target_args'_v120 = v126 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v128 : Ref<Str> = v115 |> unbox<Ref<Str>>
                let _run_target_args'_v120 = v128 
                #endif
#if FABLE_COMPILER_PYTHON
                let v132 : Ref<Str> = v115 |> unbox<Ref<Str>>
                let _run_target_args'_v120 = v132 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v136 : Ref<Str> = v115 |> unbox<Ref<Str>>
                let _run_target_args'_v120 = v136 
                #endif
#else
                let v140 : Ref<Str> = v115 |> unbox<Ref<Str>>
                let _run_target_args'_v120 = v140 
                #endif
                let v143 : Ref<Str> = _run_target_args'_v120 
                (* run_target_args'
                let v153 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v154 : string = "String::from($0)"
                let v155 : std_string_String = Fable.Core.RustInterop.emitRustExpr v143 v154 
                let _run_target_args'_v153 = v155 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v156 : string = "String::from($0)"
                let v157 : std_string_String = Fable.Core.RustInterop.emitRustExpr v143 v156 
                let _run_target_args'_v153 = v157 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v158 : string = "String::from($0)"
                let v159 : std_string_String = Fable.Core.RustInterop.emitRustExpr v143 v158 
                let _run_target_args'_v153 = v159 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v161 : std_string_String = v143 |> unbox<std_string_String>
                let _run_target_args'_v153 = v161 
                #endif
#if FABLE_COMPILER_PYTHON
                let v165 : std_string_String = v143 |> unbox<std_string_String>
                let _run_target_args'_v153 = v165 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v169 : std_string_String = v143 |> unbox<std_string_String>
                let _run_target_args'_v153 = v169 
                #endif
#else
                let v173 : std_string_String = v143 |> unbox<std_string_String>
                let _run_target_args'_v153 = v173 
                #endif
                let v176 : std_string_String = _run_target_args'_v153 
                let v182 : string = "EXPERIMENTAL_tx_status"
                (* run_target_args'
                let v187 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v188 : string = "&*$0"
                let v189 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v182 v188 
                let _run_target_args'_v187 = v189 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v190 : string = "&*$0"
                let v191 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v182 v190 
                let _run_target_args'_v187 = v191 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v192 : string = "&*$0"
                let v193 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v182 v192 
                let _run_target_args'_v187 = v193 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v195 : Ref<Str> = v182 |> unbox<Ref<Str>>
                let _run_target_args'_v187 = v195 
                #endif
#if FABLE_COMPILER_PYTHON
                let v199 : Ref<Str> = v182 |> unbox<Ref<Str>>
                let _run_target_args'_v187 = v199 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v203 : Ref<Str> = v182 |> unbox<Ref<Str>>
                let _run_target_args'_v187 = v203 
                #endif
#else
                let v207 : Ref<Str> = v182 |> unbox<Ref<Str>>
                let _run_target_args'_v187 = v207 
                #endif
                let v210 : Ref<Str> = _run_target_args'_v187 
                (* run_target_args'
                let v220 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v221 : string = "String::from($0)"
                let v222 : std_string_String = Fable.Core.RustInterop.emitRustExpr v210 v221 
                let _run_target_args'_v220 = v222 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v223 : string = "String::from($0)"
                let v224 : std_string_String = Fable.Core.RustInterop.emitRustExpr v210 v223 
                let _run_target_args'_v220 = v224 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v225 : string = "String::from($0)"
                let v226 : std_string_String = Fable.Core.RustInterop.emitRustExpr v210 v225 
                let _run_target_args'_v220 = v226 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v228 : std_string_String = v210 |> unbox<std_string_String>
                let _run_target_args'_v220 = v228 
                #endif
#if FABLE_COMPILER_PYTHON
                let v232 : std_string_String = v210 |> unbox<std_string_String>
                let _run_target_args'_v220 = v232 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v236 : std_string_String = v210 |> unbox<std_string_String>
                let _run_target_args'_v220 = v236 
                #endif
#else
                let v240 : std_string_String = v210 |> unbox<std_string_String>
                let _run_target_args'_v220 = v240 
                #endif
                let v243 : std_string_String = _run_target_args'_v220 
                let v249 : std_string_String = v47.l3
                let v250 : string = "bowen"
                (* run_target_args'
                let v255 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v256 : string = "&*$0"
                let v257 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v250 v256 
                let _run_target_args'_v255 = v257 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v258 : string = "&*$0"
                let v259 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v250 v258 
                let _run_target_args'_v255 = v259 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v260 : string = "&*$0"
                let v261 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v250 v260 
                let _run_target_args'_v255 = v261 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v263 : Ref<Str> = v250 |> unbox<Ref<Str>>
                let _run_target_args'_v255 = v263 
                #endif
#if FABLE_COMPILER_PYTHON
                let v267 : Ref<Str> = v250 |> unbox<Ref<Str>>
                let _run_target_args'_v255 = v267 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v271 : Ref<Str> = v250 |> unbox<Ref<Str>>
                let _run_target_args'_v255 = v271 
                #endif
#else
                let v275 : Ref<Str> = v250 |> unbox<Ref<Str>>
                let _run_target_args'_v255 = v275 
                #endif
                let v278 : Ref<Str> = _run_target_args'_v255 
                (* run_target_args'
                let v288 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v289 : string = "String::from($0)"
                let v290 : std_string_String = Fable.Core.RustInterop.emitRustExpr v278 v289 
                let _run_target_args'_v288 = v290 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v291 : string = "String::from($0)"
                let v292 : std_string_String = Fable.Core.RustInterop.emitRustExpr v278 v291 
                let _run_target_args'_v288 = v292 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v293 : string = "String::from($0)"
                let v294 : std_string_String = Fable.Core.RustInterop.emitRustExpr v278 v293 
                let _run_target_args'_v288 = v294 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v296 : std_string_String = v278 |> unbox<std_string_String>
                let _run_target_args'_v288 = v296 
                #endif
#if FABLE_COMPILER_PYTHON
                let v300 : std_string_String = v278 |> unbox<std_string_String>
                let _run_target_args'_v288 = v300 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v304 : std_string_String = v278 |> unbox<std_string_String>
                let _run_target_args'_v288 = v304 
                #endif
#else
                let v308 : std_string_String = v278 |> unbox<std_string_String>
                let _run_target_args'_v288 = v308 
                #endif
                let v311 : std_string_String = _run_target_args'_v288 
                let v317 : (std_string_String []) = [|v249; v311|]
                let v318 : string = "$0.to_vec()"
                let v319 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v317 v318 
                let v320 : string = "crate::model::near::rpc::RpcInput { jsonrpc: $0, id: $1, method: $2, params: v319 }"
                let v321 : crate_model_near_rpc_RpcInput = Fable.Core.RustInterop.emitRustExpr struct (v109, v176, v243) v320 
                let v322 : string = "serde_json::to_string(&v321)"
                let v323 : Result<std_string_String, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr () v322 
                let v324 : (serde_json_Error -> std_string_String) = method141()
                (* run_target_args'
                let v326 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v327 : string = "$0.map_err(|x| $1(x))"
                let v328 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v323, v324) v327 
                let _run_target_args'_v326 = v328 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v329 : string = "$0.map_err(|x| $1(x))"
                let v330 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v323, v324) v329 
                let _run_target_args'_v326 = v330 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v331 : string = "$0.map_err(|x| $1(x))"
                let v332 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v323, v324) v331 
                let _run_target_args'_v326 = v332 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v333 : Result<std_string_String, std_string_String> = match v323 with Ok x -> Ok x | Error x -> Error (v324 x)
                let _run_target_args'_v326 = v333 
                #endif
#if FABLE_COMPILER_PYTHON
                let v334 : Result<std_string_String, std_string_String> = match v323 with Ok x -> Ok x | Error x -> Error (v324 x)
                let _run_target_args'_v326 = v334 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v335 : Result<std_string_String, std_string_String> = match v323 with Ok x -> Ok x | Error x -> Error (v324 x)
                let _run_target_args'_v326 = v335 
                #endif
#else
                let v336 : Result<std_string_String, std_string_String> = match v323 with Ok x -> Ok x | Error x -> Error (v324 x)
                let _run_target_args'_v326 = v336 
                #endif
                let v337 : Result<std_string_String, std_string_String> = _run_target_args'_v326 
                let v340 : (std_string_String -> string) = method142()
                let v341 : Result<std_string_String, std_string_String> = method143(v337)
                let v342 : string = "v341.map(|x| v340(x))"
                let v343 : Result<string, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v342 
                let v344 : (string -> struct (string * US23 * string * bool * bool)) = method144()
                let v345 : Result<string, std_string_String> = method145(v343)
                let v346 : string = "v345.map(|x| v344(x))"
                let v347 : Result<struct (string * US23 * string * bool * bool), std_string_String> = Fable.Core.RustInterop.emitRustExpr () v346 
                let func1_from_result = v347 //
                let v348 : _ = func1_from_result
                let v349 : string = $"true; $0 /*"
                let v350 : bool = Fable.Core.RustInterop.emitRustExpr v348 v349 
                let v351 : string = $"*/ }}); //"
                let v352 : bool = Fable.Core.RustInterop.emitRustExpr () v351 
                let v353 : string = $"_func1_from_v41"
                let v354 : Func0<struct (string * unativeint * Heap5), Result<struct (string * US23 * string * bool * bool), std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v353 
                let v355 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
                let v356 : (struct (string * unativeint * Heap5) -> Result<struct (string * US23 * string * bool * bool), std_string_String>) = closure114(v354)
                let v357 : Vec<Result<struct (string * US23 * string * bool * bool), std_string_String>> = Fable.Core.RustInterop.emitRustExpr struct (v40, v356) v355 
                let v358 : string = "v357.into_iter().collect()"
                let v359 : Result<Vec<struct (string * US23 * string * bool * bool)>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v358 
                let v360 : string = "$0?"
                let v361 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v359 v360 
                let v362 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                let v363 : (struct (string * US23 * string * bool * bool) []) = Fable.Core.RustInterop.emitRustExpr v361 v362 
                let v364 : US55 = US55_0(v363)
                US54_0(v364)
            | _ ->
                let v366 : US55 = US55_1
                US54_0(v366)
    let v386 : US56 =
        match v372 with
        | US54_1(v383) -> (* Error *)
            US56_1(v383)
        | US54_0(v373) -> (* Ok *)
            let v381 : (struct (string * US23 * string * bool * bool) []) option =
                match v373 with
                | US55_1 -> (* None *)
                    let v379 : (struct (string * US23 * string * bool * bool) []) option = None
                    v379
                | US55_0(v374) -> (* Some *)
                    let v376 : (struct (string * US23 * string * bool * bool) []) option = Some v374 
                    v376
            US56_0(v381)
    let v398 : Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String> =
        match v386 with
        | US56_1(v392) -> (* Error *)
            let v394 : Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String> = Error v392 
            v394
        | US56_0(v387) -> (* Ok *)
            let v389 : Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String> = Ok v387 
            v389
    let v400 : string = $"%A{v398}"
    let v403 : string = "use_transactions.render (10) / rpc_requests new_arc_memo / result: " + string v400 + ""
    let v404 : int64 = 200L
    let v405 : string = method8(v404, v403)
    let v406 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v407 : bool = Fable.Core.RustInterop.emitRustExpr v405 v406 
    v398
and closure116 () (v0 : (struct (string * US23 * string * bool * bool) []) option) : US56 =
    US56_0(v0)
and method147 () : ((struct (string * US23 * string * bool * bool) []) option -> US56) =
    closure116()
and closure117 () (v0 : std_string_String) : US56 =
    US56_1(v0)
and method148 () : (std_string_String -> US56) =
    closure117()
and closure118 () (v0 : (struct (string * US23 * string * bool * bool) [])) : US55 =
    US55_0(v0)
and method149 () : ((struct (string * US23 * string * bool * bool) []) -> US55) =
    closure118()
and closure115 (v0 : leptos_prelude_ArcMemo<Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String>>) () : Vec<struct (string * US23 * string * bool * bool)> =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : ((struct (string * US23 * string * bool * bool) []) option -> US56) = method147()
    let v4 : (std_string_String -> US56) = method148()
    let v6 : US56 = match v2 with Ok x -> v3 x | Error x -> v4 x
    let v36 : US54 =
        match v6 with
        | US56_1(v33) -> (* Error *)
            US54_1(v33)
        | US56_0(v9) -> (* Ok *)
            let v12 : ((struct (string * US23 * string * bool * bool) []) -> US55) = method149()
            let v13 : US55 option = v9 |> Option.map v12 
            let v27 : US55 = US55_1
            let v28 : US55 = v13 |> Option.defaultValue v27 
            US54_0(v28)
    let v42 : (struct (string * US23 * string * bool * bool) []) =
        match v36 with
        | US54_0(v37) -> (* Ok *)
            match v37 with
            | US55_0(v38) -> (* Some *)
                v38
            | _ ->
                [||]
        | _ ->
            [||]
    let v43 : string = "$0.to_vec()"
    let v44 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v42 v43 
    let v46 : string = $"%A{v44}"
    let v49 : string = "use_transactions.render (11) / rpc_requests' new_arc_memo / result: " + string v46 + ""
    let v50 : int64 = 200L
    let v51 : string = method8(v50, v49)
    let v52 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v53 : bool = Fable.Core.RustInterop.emitRustExpr v51 v52 
    v44
and closure121 () (v0 : crate_model_near_rpc_TransferDetail) : struct (std_string_String * std_string_String option * float option * std_string_String option) =
    let v1 : string = "$0.deposit"
    let v2 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "$0.args"
    let v4 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v0 v3 
    let v5 : string = "$0.gas"
    let v6 : float option = Fable.Core.RustInterop.emitRustExpr v0 v5 
    let v7 : string = "$0.method_name"
    let v8 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v0 v7 
    struct (v2, v4, v6, v8)
and method151 (v0 : Func0<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>, std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>>) : Func0<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>, std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>> =
    v0
and closure122 (v0 : Func0<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>, std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>>) (v1 : std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>) : std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> =
    let v2 : Func0<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>, std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>> = method151(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method152 (v0 : Func0<crate_model_near_rpc_Receipt, struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)>) : Func0<crate_model_near_rpc_Receipt, struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)> =
    v0
and closure123 (v0 : Func0<crate_model_near_rpc_Receipt, struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)>) (v1 : crate_model_near_rpc_Receipt) : struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) =
    let v2 : Func0<crate_model_near_rpc_Receipt, struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)> = method152(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []), v7 : std_string_String, v8 : (std_string_String []), v9 : (std_string_String []), v10 : std_string_String, v11 : std_string_String, v12 : std_string_String, v13 : std_string_String) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9, v10, v11, v12, v13)
and method153 (v0 : Func0<crate_model_near_rpc_GasProfile, struct (std_string_String * std_string_String * std_string_String)>) : Func0<crate_model_near_rpc_GasProfile, struct (std_string_String * std_string_String * std_string_String)> =
    v0
and closure124 (v0 : Func0<crate_model_near_rpc_GasProfile, struct (std_string_String * std_string_String * std_string_String)>) (v1 : crate_model_near_rpc_GasProfile) : struct (std_string_String * std_string_String * std_string_String) =
    let v2 : Func0<crate_model_near_rpc_GasProfile, struct (std_string_String * std_string_String * std_string_String)> = method153(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : std_string_String, v7 : std_string_String) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7)
and method155 (v0 : Func0<crate_model_near_rpc_Proof, struct (std_string_String * std_string_String)>) : Func0<crate_model_near_rpc_Proof, struct (std_string_String * std_string_String)> =
    v0
and closure126 (v0 : Func0<crate_model_near_rpc_Proof, struct (std_string_String * std_string_String)>) (v1 : crate_model_near_rpc_Proof) : struct (std_string_String * std_string_String) =
    let v2 : Func0<crate_model_near_rpc_Proof, struct (std_string_String * std_string_String)> = method155(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : std_string_String) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6)
and closure125 () (v0 : Vec<crate_model_near_rpc_Proof>) : (struct (std_string_String * std_string_String) []) =
    let v1 : unit = ()
    let v2 : string = $"true; let _func1_from_v1 = Func1::from(move |value| {{ //"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr () v2 
    let v4 : string = $"value"
    let v5 : crate_model_near_rpc_Proof = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = "$0.direction"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : string = "$0.hash"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5 v8 
    let func1_from_result = struct (v7, v9) //
    let v10 : _ = func1_from_result
    let v11 : string = $"true; $0 /*"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr v10 v11 
    let v13 : string = $"*/ }}); //"
    let v14 : bool = Fable.Core.RustInterop.emitRustExpr () v13 
    let v15 : string = $"_func1_from_v1"
    let v16 : Func0<crate_model_near_rpc_Proof, struct (std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v18 : (crate_model_near_rpc_Proof -> struct (std_string_String * std_string_String)) = closure126(v16)
    let v19 : Vec<struct (std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v0, v18) v17 
    let v20 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v21 : (struct (std_string_String * std_string_String) []) = Fable.Core.RustInterop.emitRustExpr v19 v20 
    v21
and method154 () : (Vec<crate_model_near_rpc_Proof> -> (struct (std_string_String * std_string_String) [])) =
    closure125()
and method156 (v0 : Func0<crate_model_near_rpc_ReceiptsOutcome, struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))>) : Func0<crate_model_near_rpc_ReceiptsOutcome, struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))> =
    v0
and closure127 (v0 : Func0<crate_model_near_rpc_ReceiptsOutcome, struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))>) (v1 : crate_model_near_rpc_ReceiptsOutcome) : struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) =
    let v2 : Func0<crate_model_near_rpc_ReceiptsOutcome, struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))> = method156(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : std_string_String, v7 : std_string_String, v8 : uint64, v9 : (std_string_String []), v10 : (struct (std_string_String * std_string_String * std_string_String) []), v11 : uint8, v12 : (std_string_String []), v13 : std_collections_HashMap<std_string_String, std_string_String>, v14 : std_string_String option, v15 : (struct (std_string_String * std_string_String) [])) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15)
and closure120 () (v0 : crate_model_near_rpc_TransactionStatus) : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) =
    let v1 : string = "$0.receipts"
    let v2 : Vec<crate_model_near_rpc_Receipt> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let v7 : crate_model_near_rpc_Receipt = Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : string = "$0.predecessor_id"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v10 : string = "$0.receipt"
    let v11 : crate_model_near_rpc_ReceiptDetail = Fable.Core.RustInterop.emitRustExpr v7 v10 
    let v12 : string = "$0.action"
    let v13 : crate_model_near_rpc_ActionDetail = Fable.Core.RustInterop.emitRustExpr v11 v12 
    let v14 : string = "$0.actions"
    let v15 : Vec<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>> = Fable.Core.RustInterop.emitRustExpr v13 v14 
    let v16 : unit = ()
    let v17 : string = $"true; let _func1_from_v16 = Func1::from(move |value| {{ //"
    let v18 : bool = Fable.Core.RustInterop.emitRustExpr () v17 
    let v19 : string = $"value"
    let v20 : std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail> = Fable.Core.RustInterop.emitRustExpr () v19 
    let v21 : string = "$0.into_iter().map(|(k, v)| (k, $1(v))).collect()"
    let v22 : (crate_model_near_rpc_TransferDetail -> struct (std_string_String * std_string_String option * float option * std_string_String option)) = closure121()
    let v23 : std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr struct (v20, v22) v21 
    let func1_from_result = v23 //
    let v24 : _ = func1_from_result
    let v25 : string = $"true; $0 /*"
    let v26 : bool = Fable.Core.RustInterop.emitRustExpr v24 v25 
    let v27 : string = $"*/ }}); //"
    let v28 : bool = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : string = $"_func1_from_v16"
    let v30 : Func0<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>, std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>> = Fable.Core.RustInterop.emitRustExpr () v29 
    let v31 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v32 : (std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail> -> std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>) = closure122(v30)
    let v33 : Vec<std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>> = Fable.Core.RustInterop.emitRustExpr struct (v15, v32) v31 
    let v34 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v35 : (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) = Fable.Core.RustInterop.emitRustExpr v33 v34 
    let v36 : string = "$0.gas_price"
    let v37 : std_string_String = Fable.Core.RustInterop.emitRustExpr v13 v36 
    let v38 : string = "$0.input_data_ids"
    let v39 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v13 v38 
    let v40 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v41 : (std_string_String []) = Fable.Core.RustInterop.emitRustExpr v39 v40 
    let v42 : string = "$0.output_data_receivers"
    let v43 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v13 v42 
    let v44 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v45 : (std_string_String []) = Fable.Core.RustInterop.emitRustExpr v43 v44 
    let v46 : string = "$0.signer_id"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v13 v46 
    let v48 : string = "$0.signer_public_key"
    let v49 : std_string_String = Fable.Core.RustInterop.emitRustExpr v13 v48 
    let v50 : string = "$0.receipt_id"
    let v51 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v50 
    let v52 : string = "$0.receiver_id"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v52 
    let func1_from_result = struct (v9, v35, v37, v41, v45, v47, v49, v51, v53) //
    let v54 : _ = func1_from_result
    let v55 : string = $"true; $0 /*"
    let v56 : bool = Fable.Core.RustInterop.emitRustExpr v54 v55 
    let v57 : string = $"*/ }}); //"
    let v58 : bool = Fable.Core.RustInterop.emitRustExpr () v57 
    let v59 : string = $"_func1_from_v3"
    let v60 : Func0<crate_model_near_rpc_Receipt, struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v59 
    let v61 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v62 : (crate_model_near_rpc_Receipt -> struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)) = closure123(v60)
    let v63 : Vec<struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v2, v62) v61 
    let v64 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v65 : (struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) = Fable.Core.RustInterop.emitRustExpr v63 v64 
    let v66 : string = "$0.receipts_outcome"
    let v67 : Vec<crate_model_near_rpc_ReceiptsOutcome> = Fable.Core.RustInterop.emitRustExpr v0 v66 
    let v68 : unit = ()
    let v69 : string = $"true; let _func1_from_v68 = Func1::from(move |value| {{ //"
    let v70 : bool = Fable.Core.RustInterop.emitRustExpr () v69 
    let v71 : string = $"value"
    let v72 : crate_model_near_rpc_ReceiptsOutcome = Fable.Core.RustInterop.emitRustExpr () v71 
    let v73 : string = "$0.block_hash"
    let v74 : std_string_String = Fable.Core.RustInterop.emitRustExpr v72 v73 
    let v75 : string = "$0.id"
    let v76 : std_string_String = Fable.Core.RustInterop.emitRustExpr v72 v75 
    let v77 : string = "$0.outcome"
    let v78 : crate_model_near_rpc_OutcomeDetail = Fable.Core.RustInterop.emitRustExpr v72 v77 
    let v79 : string = "$0.executor_id"
    let v80 : std_string_String = Fable.Core.RustInterop.emitRustExpr v78 v79 
    let v81 : string = "$0.gas_burnt"
    let v82 : uint64 = Fable.Core.RustInterop.emitRustExpr v78 v81 
    let v83 : string = "$0.logs"
    let v84 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v78 v83 
    let v85 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v86 : (std_string_String []) = Fable.Core.RustInterop.emitRustExpr v84 v85 
    let v87 : string = "$0.metadata"
    let v88 : crate_model_near_rpc_Metadata = Fable.Core.RustInterop.emitRustExpr v78 v87 
    let v89 : string = "$0.gas_profile"
    let v90 : Vec<crate_model_near_rpc_GasProfile> = Fable.Core.RustInterop.emitRustExpr v88 v89 
    let v91 : unit = ()
    let v92 : string = $"true; let _func1_from_v91 = Func1::from(move |value| {{ //"
    let v93 : bool = Fable.Core.RustInterop.emitRustExpr () v92 
    let v94 : string = $"value"
    let v95 : crate_model_near_rpc_GasProfile = Fable.Core.RustInterop.emitRustExpr () v94 
    let v96 : string = "$0.cost"
    let v97 : std_string_String = Fable.Core.RustInterop.emitRustExpr v95 v96 
    let v98 : string = "$0.cost_category"
    let v99 : std_string_String = Fable.Core.RustInterop.emitRustExpr v95 v98 
    let v100 : string = "$0.gas_used"
    let v101 : std_string_String = Fable.Core.RustInterop.emitRustExpr v95 v100 
    let func1_from_result = struct (v97, v99, v101) //
    let v102 : _ = func1_from_result
    let v103 : string = $"true; $0 /*"
    let v104 : bool = Fable.Core.RustInterop.emitRustExpr v102 v103 
    let v105 : string = $"*/ }}); //"
    let v106 : bool = Fable.Core.RustInterop.emitRustExpr () v105 
    let v107 : string = $"_func1_from_v91"
    let v108 : Func0<crate_model_near_rpc_GasProfile, struct (std_string_String * std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v107 
    let v109 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v110 : (crate_model_near_rpc_GasProfile -> struct (std_string_String * std_string_String * std_string_String)) = closure124(v108)
    let v111 : Vec<struct (std_string_String * std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v90, v110) v109 
    let v112 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v113 : (struct (std_string_String * std_string_String * std_string_String) []) = Fable.Core.RustInterop.emitRustExpr v111 v112 
    let v114 : string = "$0.version"
    let v115 : uint8 = Fable.Core.RustInterop.emitRustExpr v88 v114 
    let v116 : string = "$0.receipt_ids"
    let v117 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v78 v116 
    let v118 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v119 : (std_string_String []) = Fable.Core.RustInterop.emitRustExpr v117 v118 
    let v120 : string = "$0.status"
    let v121 : std_collections_HashMap<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr v78 v120 
    let v122 : string = "$0.tokens_burnt"
    let v123 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v78 v122 
    let v124 : string = "$0.proof"
    let v125 : Vec<crate_model_near_rpc_Proof> option = Fable.Core.RustInterop.emitRustExpr v72 v124 
    let v128 : (Vec<crate_model_near_rpc_Proof> -> (struct (std_string_String * std_string_String) [])) = method154()
    let v129 : (struct (std_string_String * std_string_String) []) option = v125 |> Option.map v128 
    let v161 : (struct (std_string_String * std_string_String) []) = [||]
    let v163 : (struct (std_string_String * std_string_String) []) = v129 |> Option.defaultValue v161 
    let func1_from_result = struct (v74, v76, v80, v82, v86, v113, v115, v119, v121, v123, v163) //
    let v166 : _ = func1_from_result
    let v167 : string = $"true; $0 /*"
    let v168 : bool = Fable.Core.RustInterop.emitRustExpr v166 v167 
    let v169 : string = $"*/ }}); //"
    let v170 : bool = Fable.Core.RustInterop.emitRustExpr () v169 
    let v171 : string = $"_func1_from_v68"
    let v172 : Func0<crate_model_near_rpc_ReceiptsOutcome, struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))> = Fable.Core.RustInterop.emitRustExpr () v171 
    let v173 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v174 : (crate_model_near_rpc_ReceiptsOutcome -> struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))) = closure127(v172)
    let v175 : Vec<struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))> = Fable.Core.RustInterop.emitRustExpr struct (v67, v174) v173 
    let v176 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v177 : (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) []) = Fable.Core.RustInterop.emitRustExpr v175 v176 
    struct (v65, v177)
and method150 () : (crate_model_near_rpc_TransactionStatus -> struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) []))) =
    closure120()
and closure129 () (v0 : crate_model_near_rpc_ErrorCauseInfo) : struct (std_string_String option * std_string_String option) =
    let v1 : string = "$0.error_message"
    let v2 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "$0.requested_transaction_hash"
    let v4 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v0 v3 
    struct (v2, v4)
and method158 () : (crate_model_near_rpc_ErrorCauseInfo -> struct (std_string_String option * std_string_String option)) =
    closure129()
and closure128 () (v0 : crate_model_near_rpc_RpcError) : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) =
    let v1 : string = "$0.name"
    let v2 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "$0.cause"
    let v4 : crate_model_near_rpc_ErrorCause = Fable.Core.RustInterop.emitRustExpr v0 v3 
    let v5 : string = "$0.name"
    let v6 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : string = "$0.info"
    let v8 : crate_model_near_rpc_ErrorCauseInfo option = Fable.Core.RustInterop.emitRustExpr v4 v7 
    let v11 : (crate_model_near_rpc_ErrorCauseInfo -> struct (std_string_String option * std_string_String option)) = method158()
    let v12 : struct (std_string_String option * std_string_String option) option = v8 |> Option.map v11 
    let v27 : string = "$0.code"
    let v28 : int32 = Fable.Core.RustInterop.emitRustExpr v0 v27 
    let v29 : string = "$0.message"
    let v30 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v29 
    let v31 : string = "$0.data"
    let v32 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v31 
    struct (v2, v6, v12, v28, v30, v32)
and method157 () : (crate_model_near_rpc_RpcError -> struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String)) =
    closure128()
and closure119 () (v0 : crate_model_near_rpc_RpcResponse) : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) =
    let v1 : string = "$0.jsonrpc"
    let v2 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "$0.result"
    let v4 : crate_model_near_rpc_TransactionStatus option = Fable.Core.RustInterop.emitRustExpr v0 v3 
    let v7 : (crate_model_near_rpc_TransactionStatus -> struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) []))) = method150()
    let v8 : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option = v4 |> Option.map v7 
    let v196 : string = "$0.error"
    let v197 : crate_model_near_rpc_RpcError option = Fable.Core.RustInterop.emitRustExpr v0 v196 
    let v200 : (crate_model_near_rpc_RpcError -> struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String)) = method157()
    let v201 : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option = v197 |> Option.map v200 
    let v244 : string = "$0.id"
    let v245 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v0 v244 
    struct (v2, v8, v201, v245)
and closure133 () (v0 : crate_model_near_rpc_RpcResponse) : crate_model_near_rpc_RpcResponse option =
    let v2 : crate_model_near_rpc_RpcResponse option = Some v0 
    v2
and method161 () : (crate_model_near_rpc_RpcResponse -> crate_model_near_rpc_RpcResponse option) =
    closure133()
and method162 (v0 : Result<crate_model_near_rpc_RpcResponse, std_string_String>) : Result<crate_model_near_rpc_RpcResponse, std_string_String> =
    v0
and closure132 (v0 : US35, v1 : US41, v2 : int32) struct (v3 : string, v4 : US23, v5 : string, v6 : bool, v7 : bool) : Result<crate_model_near_rpc_RpcResponse option, std_string_String> =
    let v56 : US29 =
        match v0 with
        | US35_1 -> (* None *)
            US29_1
        | US35_0(v8) -> (* Some *)
            let v52 : US30 =
                match v8 with
                | US36_1(v49) -> (* Error *)
                    US30_1(v49)
                | US36_0(v9) -> (* Ok *)
                    let v10 : US25 option = v9 |> Array.tryItem v2 
                    let v13 : (US25 -> US32) = method87()
                    let v14 : US32 option = v10 |> Option.map v13 
                    let v28 : US32 = US32_1
                    let v29 : US32 = v14 |> Option.defaultValue v28 
                    let v39 : US25 =
                        match v29 with
                        | US32_0(v33) -> (* Some *)
                            match v33 with
                            | US25_0(v34) -> (* Some *)
                                US25_0(v34)
                            | _ ->
                                US25_1
                        | _ ->
                            US25_1
                    let v47 : US31 =
                        match v39 with
                        | US25_1 -> (* None *)
                            US31_1
                        | US25_0(v40) -> (* Some *)
                            let v41 : std_string_String = v40.l0
                            let v42 : string = "fable_library_rust::String_::fromString($0)"
                            let v43 : string = Fable.Core.RustInterop.emitRustExpr v41 v42 
                            US31_0(v43)
                    US30_0(v47)
            US29_0(v52)
    let v58 : string = $"%A{struct (v3, v4, v5, v6, v7)}"
    let v61 : int64 = 400L
    let v62 : string = method8(v61, v58)
    let v64 : string = $"%A{v56}"
    let v67 : int64 = 400L
    let v68 : string = method8(v67, v64)
    let v69 : string = "state_core.use_request (15) / result memo / request: " + string v62 + " / state_data: " + string v68 + ""
    let v70 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v71 : bool = Fable.Core.RustInterop.emitRustExpr v69 v70 
    let v73 : string = $"%A{v1}"
    let v76 : int64 = 400L
    let v77 : string = method8(v76, v73)
    let v78 : string = "state_core.use_request (16) / effect / json: " + string v77 + ""
    let v79 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v80 : bool = Fable.Core.RustInterop.emitRustExpr v78 v79 
    let v117 : US31 =
        match v1 with
        | US41_1(v114) -> (* Error *)
            US31_1
        | US41_0(v81) -> (* Ok *)
            let v82 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
            let v83 : (US31 []) = Fable.Core.RustInterop.emitRustExpr v81 v82 
            let v84 : US31 option = v83 |> Array.tryItem v2 
            let v87 : (US31 -> US42) = method108()
            let v88 : US42 option = v84 |> Option.map v87 
            let v102 : US42 = US42_1
            let v103 : US42 = v88 |> Option.defaultValue v102 
            match v103 with
            | US42_0(v107) -> (* Some *)
                match v107 with
                | US31_0(v108) -> (* Some *)
                    US31_0(v108)
                | _ ->
                    US31_1
            | _ ->
                US31_1
    match v117 with
    | US31_0(v118) -> (* Some *)
        let v119 : string = method41(v118)
        (* run_target_args'
        let v124 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v125 : string = "&*$0"
        let v126 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v119 v125 
        let _run_target_args'_v124 = v126 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v127 : string = "&*$0"
        let v128 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v119 v127 
        let _run_target_args'_v124 = v128 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v129 : string = "&*$0"
        let v130 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v119 v129 
        let _run_target_args'_v124 = v130 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v132 : Ref<Str> = v119 |> unbox<Ref<Str>>
        let _run_target_args'_v124 = v132 
        #endif
#if FABLE_COMPILER_PYTHON
        let v136 : Ref<Str> = v119 |> unbox<Ref<Str>>
        let _run_target_args'_v124 = v136 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v140 : Ref<Str> = v119 |> unbox<Ref<Str>>
        let _run_target_args'_v124 = v140 
        #endif
#else
        let v144 : Ref<Str> = v119 |> unbox<Ref<Str>>
        let _run_target_args'_v124 = v144 
        #endif
        let v147 : Ref<Str> = _run_target_args'_v124 
        let v153 : string = "serde_json::from_str(&$0)"
        let v154 : Result<crate_model_near_rpc_RpcResponse, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v147 v153 
        let v155 : (serde_json_Error -> std_string_String) = method42()
        (* run_target_args'
        let v157 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v158 : string = "$0.map_err(|x| $1(x))"
        let v159 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v154, v155) v158 
        let _run_target_args'_v157 = v159 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v160 : string = "$0.map_err(|x| $1(x))"
        let v161 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v154, v155) v160 
        let _run_target_args'_v157 = v161 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v162 : string = "$0.map_err(|x| $1(x))"
        let v163 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v154, v155) v162 
        let _run_target_args'_v157 = v163 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v164 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v154 with Ok x -> Ok x | Error x -> Error (v155 x)
        let _run_target_args'_v157 = v164 
        #endif
#if FABLE_COMPILER_PYTHON
        let v165 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v154 with Ok x -> Ok x | Error x -> Error (v155 x)
        let _run_target_args'_v157 = v165 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v166 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v154 with Ok x -> Ok x | Error x -> Error (v155 x)
        let _run_target_args'_v157 = v166 
        #endif
#else
        let v167 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v154 with Ok x -> Ok x | Error x -> Error (v155 x)
        let _run_target_args'_v157 = v167 
        #endif
        let v168 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = _run_target_args'_v157 
        let v171 : (crate_model_near_rpc_RpcResponse -> crate_model_near_rpc_RpcResponse option) = method161()
        let v172 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = method162(v168)
        let v173 : string = "v172.map(|x| v171(x))"
        let v174 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v173 
        v174
    | _ ->
        match v56 with
        | US29_0(v175) -> (* Some *)
            match v175 with
            | US30_0(v176) -> (* Ok *)
                match v176 with
                | US31_0(v177) -> (* Some *)
                    let v178 : string = method41(v177)
                    (* run_target_args'
                    let v183 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v184 : string = "&*$0"
                    let v185 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v178 v184 
                    let _run_target_args'_v183 = v185 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v186 : string = "&*$0"
                    let v187 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v178 v186 
                    let _run_target_args'_v183 = v187 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v188 : string = "&*$0"
                    let v189 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v178 v188 
                    let _run_target_args'_v183 = v189 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v191 : Ref<Str> = v178 |> unbox<Ref<Str>>
                    let _run_target_args'_v183 = v191 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v195 : Ref<Str> = v178 |> unbox<Ref<Str>>
                    let _run_target_args'_v183 = v195 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v199 : Ref<Str> = v178 |> unbox<Ref<Str>>
                    let _run_target_args'_v183 = v199 
                    #endif
#else
                    let v203 : Ref<Str> = v178 |> unbox<Ref<Str>>
                    let _run_target_args'_v183 = v203 
                    #endif
                    let v206 : Ref<Str> = _run_target_args'_v183 
                    let v212 : string = "serde_json::from_str(&$0)"
                    let v213 : Result<crate_model_near_rpc_RpcResponse, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v206 v212 
                    let v214 : (serde_json_Error -> std_string_String) = method42()
                    (* run_target_args'
                    let v216 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v217 : string = "$0.map_err(|x| $1(x))"
                    let v218 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v213, v214) v217 
                    let _run_target_args'_v216 = v218 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v219 : string = "$0.map_err(|x| $1(x))"
                    let v220 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v213, v214) v219 
                    let _run_target_args'_v216 = v220 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v221 : string = "$0.map_err(|x| $1(x))"
                    let v222 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v213, v214) v221 
                    let _run_target_args'_v216 = v222 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v223 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v213 with Ok x -> Ok x | Error x -> Error (v214 x)
                    let _run_target_args'_v216 = v223 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v224 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v213 with Ok x -> Ok x | Error x -> Error (v214 x)
                    let _run_target_args'_v216 = v224 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v225 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v213 with Ok x -> Ok x | Error x -> Error (v214 x)
                    let _run_target_args'_v216 = v225 
                    #endif
#else
                    let v226 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v213 with Ok x -> Ok x | Error x -> Error (v214 x)
                    let _run_target_args'_v216 = v226 
                    #endif
                    let v227 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = _run_target_args'_v216 
                    let v230 : (crate_model_near_rpc_RpcResponse -> crate_model_near_rpc_RpcResponse option) = method161()
                    let v231 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = method162(v227)
                    let v232 : string = "v231.map(|x| v230(x))"
                    let v233 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v232 
                    v233
                | _ ->
                    let v235 : string = $"%A{struct (v117, v56)}"
                    let v238 : string = "state_core.use_request (17) / json Error / value: " + string v235 + ""
                    let v239 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                    let v240 : bool = Fable.Core.RustInterop.emitRustExpr v238 v239 
                    let v241 : crate_model_near_rpc_RpcResponse option = None
                    let v243 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Ok v241 
                    v243
            | _ ->
                let v248 : string = $"%A{struct (v117, v56)}"
                let v251 : string = "state_core.use_request (17) / json Error / value: " + string v248 + ""
                let v252 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v253 : bool = Fable.Core.RustInterop.emitRustExpr v251 v252 
                let v254 : crate_model_near_rpc_RpcResponse option = None
                let v256 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Ok v254 
                v256
        | _ ->
            let v261 : string = $"%A{struct (v117, v56)}"
            let v264 : string = "state_core.use_request (17) / json Error / value: " + string v261 + ""
            let v265 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v266 : bool = Fable.Core.RustInterop.emitRustExpr v264 v265 
            let v267 : crate_model_near_rpc_RpcResponse option = None
            let v269 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Ok v267 
            v269
and closure131 (v0 : US35, v1 : US41) (v2 : int32) : (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_rpc_RpcResponse option, std_string_String>) =
    closure132(v0, v1, v2)
and method160 (v0 : US35, v1 : US41) : (int32 -> (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_rpc_RpcResponse option, std_string_String>)) =
    closure131(v0, v1)
and closure130 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>, v1 : leptos_prelude_ArcMemo<Result<Vec<Heap4 option>, std_string_String> option>, v2 : leptos_prelude_ArcLocalResource<Result<Vec<string option>, std_string_String>>, v3 : leptos_prelude_Action<Heap4, Result<Vec<unit>, std_string_String>>) () : (Result<crate_model_near_rpc_RpcResponse option, std_string_String> []) =
    let v4 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v5 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v4 
    let v7 : string = $"%A{v5}"
    let v10 : string = "state_core.use_requests (13) / result memo / requests: " + string v7 + ""
    let v11 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr v10 v11 
    let v13 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v14 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v1 v13 
    let v17 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v18 : US26 option = v14 |> Option.map v17 
    let v32 : US26 = US26_1
    let v33 : US26 = v18 |> Option.defaultValue v32 
    let v85 : US35 =
        match v33 with
        | US26_1 -> (* None *)
            US35_1
        | US26_0(v37) -> (* Some *)
            let v38 : (Vec<Heap4 option> -> US24) = method83()
            let v39 : (std_string_String -> US24) = method84()
            let v41 : US24 = match v37 with Ok x -> v38 x | Error x -> v39 x
            let v81 : US36 =
                match v41 with
                | US24_1(v78) -> (* Error *)
                    US36_1(v78)
                | US24_0(v44) -> (* Ok *)
                    let v45 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v46 : bool = Fable.Core.RustInterop.emitRustExpr v44 v45 
                    let v47 : string = "x"
                    let v48 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v47 
                    let v51 : (Heap4 -> US25) = method85()
                    let v52 : US25 option = v48 |> Option.map v51 
                    let v66 : US25 = US25_1
                    let v67 : US25 = v52 |> Option.defaultValue v66 
                    let v71 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v72 : bool = Fable.Core.RustInterop.emitRustExpr v67 v71 
                    let v73 : string = "_vec_map"
                    let v74 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v73 
                    let v75 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v76 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v74 v75 
                    US36_0(v76)
            US35_0(v81)
    let v87 : string = $"%A{v85}"
    let v90 : int64 = 400L
    let v91 : string = method8(v90, v87)
    let v92 : string = "state_core.use_request (14) / result_memo / state_data: " + string v91 + ""
    let v93 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v94 : bool = Fable.Core.RustInterop.emitRustExpr v92 v93 
    let v95 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v96 : Result<Vec<string option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v2 v95 
    let v99 : (Result<Vec<string option>, std_string_String> -> US37) = method103()
    let v100 : US37 option = v96 |> Option.map v99 
    let v114 : US37 = US37_1
    let v115 : US37 = v100 |> Option.defaultValue v114 
    let v129 : US38 =
        match v115 with
        | US37_1 -> (* None *)
            US38_1
        | US37_0(v119) -> (* Some *)
            let v120 : (Vec<string option> -> US39) = method104()
            let v121 : (std_string_String -> US39) = method105()
            let v123 : US39 = match v119 with Ok x -> v120 x | Error x -> v121 x
            US38_0(v123)
    let v170 : US40 =
        match v129 with
        | US38_1 -> (* None *)
            US40_1
        | US38_0(v130) -> (* Some *)
            let v166 : US41 =
                match v130 with
                | US39_1(v163) -> (* Error *)
                    US41_1(v163)
                | US39_0(v131) -> (* Ok *)
                    let v132 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v133 : bool = Fable.Core.RustInterop.emitRustExpr v131 v132 
                    let v134 : string = "x"
                    let v135 : string option = Fable.Core.RustInterop.emitRustExpr () v134 
                    let v138 : (string -> US31) = method106()
                    let v139 : US31 option = v135 |> Option.map v138 
                    let v153 : US31 = US31_1
                    let v154 : US31 = v139 |> Option.defaultValue v153 
                    let v158 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v159 : bool = Fable.Core.RustInterop.emitRustExpr v154 v158 
                    let v160 : string = "_vec_map"
                    let v161 : Vec<US31> = Fable.Core.RustInterop.emitRustExpr () v160 
                    US41_0(v161)
            US40_0(v166)
    let v171 : (US31 []) = [||]
    let v172 : string = "$0.to_vec()"
    let v173 : Vec<US31> = Fable.Core.RustInterop.emitRustExpr v171 v172 
    let v177 : US41 =
        match v170 with
        | US40_1 -> (* None *)
            US41_0(v173)
        | US40_0(v174) -> (* Some *)
            v174
    let v260 : bool =
        match v177 with
        | US41_1(v258) -> (* Error *)
            false
        | US41_0(v178) -> (* Ok *)
            let v179 : string = "true; $0.into_iter().for_each(|x| { //"
            let v180 : bool = Fable.Core.RustInterop.emitRustExpr v178 v179 
            let v181 : string = "x"
            let v182 : US31 = Fable.Core.RustInterop.emitRustExpr () v181 
            let v253 : bool =
                match v182 with
                | US31_0(v183) -> (* Some *)
                    (* run_target_args'
                    let v188 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v189 : string = "&*$0"
                    let v190 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v183 v189 
                    let _run_target_args'_v188 = v190 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v191 : string = "&*$0"
                    let v192 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v183 v191 
                    let _run_target_args'_v188 = v192 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v193 : string = "&*$0"
                    let v194 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v183 v193 
                    let _run_target_args'_v188 = v194 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v196 : Ref<Str> = v183 |> unbox<Ref<Str>>
                    let _run_target_args'_v188 = v196 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v200 : Ref<Str> = v183 |> unbox<Ref<Str>>
                    let _run_target_args'_v188 = v200 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v204 : Ref<Str> = v183 |> unbox<Ref<Str>>
                    let _run_target_args'_v188 = v204 
                    #endif
#else
                    let v208 : Ref<Str> = v183 |> unbox<Ref<Str>>
                    let _run_target_args'_v188 = v208 
                    #endif
                    let v211 : Ref<Str> = _run_target_args'_v188 
                    (* run_target_args'
                    let v221 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v222 : string = "String::from($0)"
                    let v223 : std_string_String = Fable.Core.RustInterop.emitRustExpr v211 v222 
                    let _run_target_args'_v221 = v223 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v224 : string = "String::from($0)"
                    let v225 : std_string_String = Fable.Core.RustInterop.emitRustExpr v211 v224 
                    let _run_target_args'_v221 = v225 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v226 : string = "String::from($0)"
                    let v227 : std_string_String = Fable.Core.RustInterop.emitRustExpr v211 v226 
                    let _run_target_args'_v221 = v227 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v229 : std_string_String = v211 |> unbox<std_string_String>
                    let _run_target_args'_v221 = v229 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v233 : std_string_String = v211 |> unbox<std_string_String>
                    let _run_target_args'_v221 = v233 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v237 : std_string_String = v211 |> unbox<std_string_String>
                    let _run_target_args'_v221 = v237 
                    #endif
#else
                    let v241 : std_string_String = v211 |> unbox<std_string_String>
                    let _run_target_args'_v221 = v241 
                    #endif
                    let v244 : std_string_String = _run_target_args'_v221 
                    let v250 : Heap4 = {l0 = v244} : Heap4
                    let v251 : string = "true; leptos::prelude::Action::dispatch(&$0, $1.clone())"
                    let v252 : bool = Fable.Core.RustInterop.emitRustExpr struct (v3, v250) v251 
                    true
                | _ ->
                    false
            let v254 : string = $"true"
            let v255 : bool = Fable.Core.RustInterop.emitRustExpr () v254 
            let v256 : string = "true; }); //"
            let v257 : bool = Fable.Core.RustInterop.emitRustExpr () v256 
            false
    let v261 : (int32 -> (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_rpc_RpcResponse option, std_string_String>)) = method160(v85, v177)
    let v262 : Vec<struct (string * US23 * string * bool * bool)> = method96(v5)
    let v263 : string = "v262.iter().enumerate().map(|(i, x)| v261(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v264 : Vec<Result<crate_model_near_rpc_RpcResponse option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v263 
    let v265 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v266 : (Result<crate_model_near_rpc_RpcResponse option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v264 v265 
    let v268 : string = $"%A{v266}"
    let v271 : string = "state_core.use_requests (18) / result_func func0 / result: " + string v268 + ""
    let v272 : int64 = 200L
    let v273 : string = method8(v272, v271)
    let v274 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v275 : bool = Fable.Core.RustInterop.emitRustExpr v273 v274 
    v266
and method164 (v0 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option))) : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option)) =
    v0
and closure135 (v0 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option))) (v1 : crate_model_near_rpc_RpcResponse option) : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option =
    let v3 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option)) = method164(v0)
    let v4 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option = v1 |> Option.map v3 
    v4
and method163 (v0 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option))) : (crate_model_near_rpc_RpcResponse option -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option) =
    closure135(v0)
and method165 (v0 : Result<crate_model_near_rpc_RpcResponse option, std_string_String>) : Result<crate_model_near_rpc_RpcResponse option, std_string_String> =
    v0
and method166 (v0 : Func0<Result<crate_model_near_rpc_RpcResponse option, std_string_String>, Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>) : Func0<Result<crate_model_near_rpc_RpcResponse option, std_string_String>, Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> =
    v0
and closure136 (v0 : Func0<Result<crate_model_near_rpc_RpcResponse option, std_string_String>, Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>) (v1 : Result<crate_model_near_rpc_RpcResponse option, std_string_String>) : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> =
    let v2 : Func0<Result<crate_model_near_rpc_RpcResponse option, std_string_String>, Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> = method166(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure134 (v0 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option)), v1 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>>, v2 : leptos_prelude_ArcLocalResource<Result<Vec<Heap4 option>, std_string_String>>, v3 : leptos_prelude_ArcMemo<(Result<crate_model_near_rpc_RpcResponse option, std_string_String> [])>) () : Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> =
    let v4 : string = $"leptos::prelude::Submission::pending(&$0.into()).into()"
    let v5 : leptos_prelude_ArcSignal<bool> = Fable.Core.RustInterop.emitRustExpr v1 v4 
    let v6 : string = $"leptos::prelude::ArcSignal::get(&$0)"
    let v7 : bool = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : string = $"leptos::prelude::Submission::pending(&$0.into()).into()"
    let v9 : leptos_prelude_ArcSignal<bool> = Fable.Core.RustInterop.emitRustExpr v2 v8 
    let v10 : string = $"leptos::prelude::ArcSignal::get(&$0)"
    let v11 : bool = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v13 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v1 v12 
    let v16 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v17 : US2 option = v13 |> Option.map v16 
    let v31 : US2 = US2_1
    let v32 : US2 = v17 |> Option.defaultValue v31 
    let v36 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v37 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v2 v36 
    let v40 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v41 : US26 option = v37 |> Option.map v40 
    let v55 : US26 = US26_1
    let v56 : US26 = v41 |> Option.defaultValue v55 
    let v108 : US35 =
        match v56 with
        | US26_1 -> (* None *)
            US35_1
        | US26_0(v60) -> (* Some *)
            let v61 : (Vec<Heap4 option> -> US24) = method83()
            let v62 : (std_string_String -> US24) = method84()
            let v64 : US24 = match v60 with Ok x -> v61 x | Error x -> v62 x
            let v104 : US36 =
                match v64 with
                | US24_1(v101) -> (* Error *)
                    US36_1(v101)
                | US24_0(v67) -> (* Ok *)
                    let v68 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v69 : bool = Fable.Core.RustInterop.emitRustExpr v67 v68 
                    let v70 : string = "x"
                    let v71 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v70 
                    let v74 : (Heap4 -> US25) = method85()
                    let v75 : US25 option = v71 |> Option.map v74 
                    let v89 : US25 = US25_1
                    let v90 : US25 = v75 |> Option.defaultValue v89 
                    let v94 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v95 : bool = Fable.Core.RustInterop.emitRustExpr v90 v94 
                    let v96 : string = "_vec_map"
                    let v97 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v96 
                    let v98 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v99 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v97 v98 
                    US36_0(v99)
            US35_0(v104)
    let v110 : string = $"%A{v32}"
    let v113 : int64 = 400L
    let v114 : string = method8(v113, v110)
    let v116 : string = $"%A{v108}"
    let v119 : int64 = 400L
    let v120 : string = method8(v119, v116)
    let v121 : string = "state_core.use_request (19) / result move / database: " + string v114 + " / database_loading: " + string v7 + " / state_data: " + string v120 + " / state_data_loading: " + string v11 + ""
    let v122 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v123 : bool = Fable.Core.RustInterop.emitRustExpr v121 v122 
    let v124 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v125 : (Result<crate_model_near_rpc_RpcResponse option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v3 v124 
    let v126 : string = "$0.to_vec()"
    let v127 : Vec<Result<crate_model_near_rpc_RpcResponse option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v125 v126 
    let v128 : unit = ()
    let v129 : string = $"true; let _func1_from_v128 = Func1::from(move |value| {{ //"
    let v130 : bool = Fable.Core.RustInterop.emitRustExpr () v129 
    let v131 : string = $"value"
    let v132 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v131 
    let v133 : (crate_model_near_rpc_RpcResponse option -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option) = method163(v0)
    let v134 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = method165(v132)
    let v135 : string = "v134.map(|x| v133(x))"
    let v136 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v135 
    let func1_from_result = v136 //
    let v137 : _ = func1_from_result
    let v138 : string = $"true; $0 /*"
    let v139 : bool = Fable.Core.RustInterop.emitRustExpr v137 v138 
    let v140 : string = $"*/ }}); //"
    let v141 : bool = Fable.Core.RustInterop.emitRustExpr () v140 
    let v142 : string = $"_func1_from_v128"
    let v143 : Func0<Result<crate_model_near_rpc_RpcResponse option, std_string_String>, Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v142 
    let v144 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v145 : (Result<crate_model_near_rpc_RpcResponse option, std_string_String> -> Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>) = closure136(v143)
    let v146 : Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr struct (v127, v145) v144 
    let v148 : string = $"%A{v146}"
    let v151 : string = "state_core.use_requests (20) / result func0 / result: " + string v148 + ""
    let v152 : int64 = 200L
    let v153 : string = method8(v152, v151)
    let v154 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v155 : bool = Fable.Core.RustInterop.emitRustExpr v153 v154 
    v146
and method159 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>, v1 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option))) : leptos_prelude_ArcMemo<Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>> =
    let v2 : string = "state_core.use_requests (1)"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = "state_core.use_database (1)"
    let v6 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v7 : bool = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : unit = ()
    let v9 : string = $"true; let _func0_from_v8 = Func0::from(move || {{ //"
    let v10 : bool = Fable.Core.RustInterop.emitRustExpr () v9 
    let v11 : string = "true; let __future_init = Box::pin(/*"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr () v11 
    let v13 : string = "*/ async move { /*"
    let v14 : bool = Fable.Core.RustInterop.emitRustExpr () v13 
    let v15 : string = "*/ ()"
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = "state_core.use_database (2) / database new_local_resource"
    let v18 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v19 : bool = Fable.Core.RustInterop.emitRustExpr v17 v18 
    let v20 : string = "state_core.build_database ()"
    let v21 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : string = "true; let __future_init = Box::pin(/*"
    let v24 : bool = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : string = "*/ async { /*"
    let v26 : bool = Fable.Core.RustInterop.emitRustExpr () v25 
    let v27 : string = "*/ ()"
    let v28 : bool = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : string = "Box::pin(rexie::Rexie::builder(\"database\").version(1).add_object_store(rexie::ObjectStore::new(\"store\")).build())"
    let v30 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v29 
    let v31 : string = "v30.await"
    let v32 : Result<rexie_Rexie, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v31 
    let v33 : (rexie_Error -> std_string_String) = method6()
    (* run_target_args'
    let v35 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v36 : string = "$0.map_err(|x| $1(x))"
    let v37 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v36 
    let _run_target_args'_v35 = v37 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v38 : string = "$0.map_err(|x| $1(x))"
    let v39 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v38 
    let _run_target_args'_v35 = v39 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v40 : string = "$0.map_err(|x| $1(x))"
    let v41 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v40 
    let _run_target_args'_v35 = v41 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v42 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v42 
    #endif
#if FABLE_COMPILER_PYTHON
    let v43 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v43 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v44 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v44 
    #endif
#else
    let v45 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v45 
    #endif
    let v46 : Result<rexie_Rexie, std_string_String> = _run_target_args'_v35 
    let v49 : string = ""
    let v50 : string = "}"
    let v51 : string = v49 + v50 
    let x = v46 //
    let v52 : _ = x
    let v53 : unit = ()
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = $"true; let _fix_closure_v53 = $0"
    let v56 : bool = Fable.Core.RustInterop.emitRustExpr v52 v55 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = $"true; let _fix_closure_v53 = $0"
    let v58 : bool = Fable.Core.RustInterop.emitRustExpr v52 v57 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = $"true; let _fix_closure_v53 = $0"
    let v60 : bool = Fable.Core.RustInterop.emitRustExpr v52 v59 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v54 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v54 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v54 = false 
    #endif
#else
    let _run_target_args'_v54 = false 
    #endif
    let v61 : bool = _run_target_args'_v54 
    let v63 : string = $"true; _fix_closure_v53 " + v51 + "); " + v49 + " // rust.fix_closure'"
    let v64 : bool = Fable.Core.RustInterop.emitRustExpr () v63 
    let v65 : string = "__future_init"
    let v66 : _ = Fable.Core.RustInterop.emitRustExpr () v65 
    let v67 : string = "v66"
    let v68 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v67 
    let v69 : string = "v68.await"
    let v70 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v69 
    (* run_target_args'
    let v72 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v73 : string = "$0.unwrap()"
    let v74 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v70 v73 
    let _run_target_args'_v72 = v74 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v75 : string = "$0.unwrap()"
    let v76 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v70 v75 
    let _run_target_args'_v72 = v76 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v77 : string = "$0.unwrap()"
    let v78 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v70 v77 
    let _run_target_args'_v72 = v78 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v79 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v79 
    #endif
#if FABLE_COMPILER_PYTHON
    let v80 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v80 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v81 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v81 
    #endif
#else
    let v82 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v82 
    #endif
    let v83 : rexie_Rexie = _run_target_args'_v72 
    let v86 : (rexie_Rexie -> rexie_Rexie) = method7()
    let v87 : rexie_Rexie = v86 v83
    let v88 : string = "std::sync::Arc::new(v87)"
    let v89 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v88 
    let v91 : string = $"%A{v89}"
    let v94 : string = "state_core.use_database (3) / database new_local_resource / result: " + string v91 + ""
    let v95 : int64 = 200L
    let v96 : string = method8(v95, v94)
    let v97 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v98 : bool = Fable.Core.RustInterop.emitRustExpr v96 v97 
    let v99 : string = v49 + v50 
    let x = v89 //
    let v100 : _ = x
    let v101 : unit = ()
    (* run_target_args'
    let v102 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v103 : string = $"true; let _fix_closure_v101 = $0"
    let v104 : bool = Fable.Core.RustInterop.emitRustExpr v100 v103 
    let _run_target_args'_v102 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v105 : string = $"true; let _fix_closure_v101 = $0"
    let v106 : bool = Fable.Core.RustInterop.emitRustExpr v100 v105 
    let _run_target_args'_v102 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v107 : string = $"true; let _fix_closure_v101 = $0"
    let v108 : bool = Fable.Core.RustInterop.emitRustExpr v100 v107 
    let _run_target_args'_v102 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v102 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v102 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v102 = false 
    #endif
#else
    let _run_target_args'_v102 = false 
    #endif
    let v109 : bool = _run_target_args'_v102 
    let v111 : string = $"true; _fix_closure_v101 " + v99 + "); " + v49 + " // rust.fix_closure'"
    let v112 : bool = Fable.Core.RustInterop.emitRustExpr () v111 
    let v113 : string = "__future_init"
    let v114 : _ = Fable.Core.RustInterop.emitRustExpr () v113 
    let v115 : string = "v114"
    let v116 : std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>> = Fable.Core.RustInterop.emitRustExpr () v115 
    let v117 : string = $"true; $0 /*"
    let v118 : bool = Fable.Core.RustInterop.emitRustExpr v116 v117 
    let v119 : string = $"*/ }}); //"
    let v120 : bool = Fable.Core.RustInterop.emitRustExpr () v119 
    let v121 : string = $"_func0_from_v8"
    let v122 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>>> = Fable.Core.RustInterop.emitRustExpr () v121 
    let v123 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v124 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v122 v123 
    let v125 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v126 : (unit -> PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option) = closure64(v124)
    let v127 : leptos_prelude_ArcMemo<PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option> = Fable.Core.RustInterop.emitRustExpr v126 v125 
    let v128 : unit = ()
    let v129 : string = $"true; let _func0_from_v128 = Func0::from(move || {{ //"
    let v130 : bool = Fable.Core.RustInterop.emitRustExpr () v129 
    let v131 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v132 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v124 v131 
    let v133 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v134 : bool = Fable.Core.RustInterop.emitRustExpr v132 v133 
    let v135 : string = "x"
    let v136 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v135 
    let v137 : (unit -> unit) = closure8()
    let _v137 = true
    let v138 : string = "PartialEqWrapper($0)"
    let v139 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v136 v138 
    let v140 : string = "true; $0 })"
    let v141 : bool = Fable.Core.RustInterop.emitRustExpr v139 v140 
    let v142 : string = "_optionm_map_"
    let v143 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr () v142 
    let v144 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v145 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v144 
    let v146 : string = "true; let __future_init = Box::pin(/*"
    let v147 : bool = Fable.Core.RustInterop.emitRustExpr () v146 
    let v148 : string = "*/ async move { /*"
    let v149 : bool = Fable.Core.RustInterop.emitRustExpr () v148 
    let v150 : string = "*/ ()"
    let v151 : bool = Fable.Core.RustInterop.emitRustExpr () v150 
    let v153 : string = $"%A{v143}"
    let v157 : string = $"%A{v145}"
    let v160 : int64 = 400L
    let v161 : string = method8(v160, v157)
    let v162 : string = "state_core.use_requests (3) / state_data_resource new_local_resource / request : " + string v161 + " / database: " + string v153 + ""
    let v163 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v164 : bool = Fable.Core.RustInterop.emitRustExpr v162 v163 
    let v165 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v166 : bool = Fable.Core.RustInterop.emitRustExpr v143 v165 
    let v167 : string = "x"
    let v168 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr () v167 
    let v169 : string = "$0.0"
    let v170 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr v168 v169 
    let v171 : string = "true; $0 })"
    let v172 : bool = Fable.Core.RustInterop.emitRustExpr v170 v171 
    let v173 : string = "_optionm_map_"
    let v174 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr () v173 
    let v177 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v178 : US2 option = v174 |> Option.map v177 
    let v192 : US2 = US2_1
    let v193 : US2 = v178 |> Option.defaultValue v192 
    let v678 : US24 =
        match v193 with
        | US2_0(v197) -> (* Some *)
            let v198 : unit = ()
            let v199 : string = $"true; let _func1_from_v198 = Func1::from(move |value| {{ //"
            let v200 : bool = Fable.Core.RustInterop.emitRustExpr () v199 
            let v201 : string = $"value"
            let struct (v202 : string, v203 : US23, v204 : string, v205 : bool, v206 : bool) = Fable.Core.RustInterop.emitRustExpr () v201 
            let v207 : string = "url[" + v202 + "](" + $"%A{v204}" + ")"
            let v208 : string = "state_core.get_data () / id: " + v207 + ""
            let v209 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v210 : bool = Fable.Core.RustInterop.emitRustExpr v208 v209 
            let v211 : string = "true; let __future_init = Box::pin(/*"
            let v212 : bool = Fable.Core.RustInterop.emitRustExpr () v211 
            let v213 : string = "*/ async { /*"
            let v214 : bool = Fable.Core.RustInterop.emitRustExpr () v213 
            let v215 : string = "*/ ()"
            let v216 : bool = Fable.Core.RustInterop.emitRustExpr () v215 
            let v217 : string = "store"
            let v218 : (string []) = [|v217|]
            let v219 : string = "$0.to_vec()"
            let v220 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v218 v219 
            let v221 : unit = ()
            let v222 : string = $"true; let _func1_from_v221 = Func1::from(move |value| {{ //"
            let v223 : bool = Fable.Core.RustInterop.emitRustExpr () v222 
            let v224 : string = $"value"
            let v225 : string = Fable.Core.RustInterop.emitRustExpr () v224 
            (* run_target_args'
            let v230 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v231 : string = "&*$0"
            let v232 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v225 v231 
            let _run_target_args'_v230 = v232 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v233 : string = "&*$0"
            let v234 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v225 v233 
            let _run_target_args'_v230 = v234 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v235 : string = "&*$0"
            let v236 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v225 v235 
            let _run_target_args'_v230 = v236 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v238 : Ref<Str> = v225 |> unbox<Ref<Str>>
            let _run_target_args'_v230 = v238 
            #endif
#if FABLE_COMPILER_PYTHON
            let v242 : Ref<Str> = v225 |> unbox<Ref<Str>>
            let _run_target_args'_v230 = v242 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v246 : Ref<Str> = v225 |> unbox<Ref<Str>>
            let _run_target_args'_v230 = v246 
            #endif
#else
            let v250 : Ref<Str> = v225 |> unbox<Ref<Str>>
            let _run_target_args'_v230 = v250 
            #endif
            let v253 : Ref<Str> = _run_target_args'_v230 
            (* run_target_args'
            let v263 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v264 : string = "String::from($0)"
            let v265 : std_string_String = Fable.Core.RustInterop.emitRustExpr v253 v264 
            let _run_target_args'_v263 = v265 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v266 : string = "String::from($0)"
            let v267 : std_string_String = Fable.Core.RustInterop.emitRustExpr v253 v266 
            let _run_target_args'_v263 = v267 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v268 : string = "String::from($0)"
            let v269 : std_string_String = Fable.Core.RustInterop.emitRustExpr v253 v268 
            let _run_target_args'_v263 = v269 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v271 : std_string_String = v253 |> unbox<std_string_String>
            let _run_target_args'_v263 = v271 
            #endif
#if FABLE_COMPILER_PYTHON
            let v275 : std_string_String = v253 |> unbox<std_string_String>
            let _run_target_args'_v263 = v275 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v279 : std_string_String = v253 |> unbox<std_string_String>
            let _run_target_args'_v263 = v279 
            #endif
#else
            let v283 : std_string_String = v253 |> unbox<std_string_String>
            let _run_target_args'_v263 = v283 
            #endif
            let v286 : std_string_String = _run_target_args'_v263 
            let func1_from_result = v286 //
            let v292 : _ = func1_from_result
            let v293 : string = $"true; $0 /*"
            let v294 : bool = Fable.Core.RustInterop.emitRustExpr v292 v293 
            let v295 : string = $"*/ }}); //"
            let v296 : bool = Fable.Core.RustInterop.emitRustExpr () v295 
            let v297 : string = $"_func1_from_v221"
            let v298 : Func0<string, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v297 
            let v299 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v300 : (string -> std_string_String) = closure10(v298)
            let v301 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v220, v300) v299 
            let v302 : std_sync_Arc<rexie_Rexie> = method11(v197)
            let v303 : string = "$0.transaction(&v301, rexie::TransactionMode::ReadOnly)"
            let v304 : Result<rexie_Transaction, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v302 v303 
            let v305 : (rexie_Error -> std_string_String) = method12()
            (* run_target_args'
            let v307 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v308 : string = "$0.map_err(|x| $1(x))"
            let v309 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v304, v305) v308 
            let _run_target_args'_v307 = v309 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v310 : string = "$0.map_err(|x| $1(x))"
            let v311 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v304, v305) v310 
            let _run_target_args'_v307 = v311 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v312 : string = "$0.map_err(|x| $1(x))"
            let v313 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v304, v305) v312 
            let _run_target_args'_v307 = v313 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v314 : Result<rexie_Transaction, std_string_String> = match v304 with Ok x -> Ok x | Error x -> Error (v305 x)
            let _run_target_args'_v307 = v314 
            #endif
#if FABLE_COMPILER_PYTHON
            let v315 : Result<rexie_Transaction, std_string_String> = match v304 with Ok x -> Ok x | Error x -> Error (v305 x)
            let _run_target_args'_v307 = v315 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v316 : Result<rexie_Transaction, std_string_String> = match v304 with Ok x -> Ok x | Error x -> Error (v305 x)
            let _run_target_args'_v307 = v316 
            #endif
#else
            let v317 : Result<rexie_Transaction, std_string_String> = match v304 with Ok x -> Ok x | Error x -> Error (v305 x)
            let _run_target_args'_v307 = v317 
            #endif
            let v318 : Result<rexie_Transaction, std_string_String> = _run_target_args'_v307 
            let v321 : string = "$0?"
            let v322 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v318 v321 
            let v323 : string = method13()
            (* run_target_args'
            let v328 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v329 : string = "&*$0"
            let v330 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v323 v329 
            let _run_target_args'_v328 = v330 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v331 : string = "&*$0"
            let v332 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v323 v331 
            let _run_target_args'_v328 = v332 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v333 : string = "&*$0"
            let v334 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v323 v333 
            let _run_target_args'_v328 = v334 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v336 : Ref<Str> = v323 |> unbox<Ref<Str>>
            let _run_target_args'_v328 = v336 
            #endif
#if FABLE_COMPILER_PYTHON
            let v340 : Ref<Str> = v323 |> unbox<Ref<Str>>
            let _run_target_args'_v328 = v340 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v344 : Ref<Str> = v323 |> unbox<Ref<Str>>
            let _run_target_args'_v328 = v344 
            #endif
#else
            let v348 : Ref<Str> = v323 |> unbox<Ref<Str>>
            let _run_target_args'_v328 = v348 
            #endif
            let v351 : Ref<Str> = _run_target_args'_v328 
            let v357 : string = "v322.store($0)"
            let v358 : Result<rexie_Store, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v351 v357 
            let v359 : (rexie_Error -> std_string_String) = method14()
            (* run_target_args'
            let v361 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v362 : string = "$0.map_err(|x| $1(x))"
            let v363 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v358, v359) v362 
            let _run_target_args'_v361 = v363 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v364 : string = "$0.map_err(|x| $1(x))"
            let v365 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v358, v359) v364 
            let _run_target_args'_v361 = v365 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v366 : string = "$0.map_err(|x| $1(x))"
            let v367 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v358, v359) v366 
            let _run_target_args'_v361 = v367 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v368 : Result<rexie_Store, std_string_String> = match v358 with Ok x -> Ok x | Error x -> Error (v359 x)
            let _run_target_args'_v361 = v368 
            #endif
#if FABLE_COMPILER_PYTHON
            let v369 : Result<rexie_Store, std_string_String> = match v358 with Ok x -> Ok x | Error x -> Error (v359 x)
            let _run_target_args'_v361 = v369 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v370 : Result<rexie_Store, std_string_String> = match v358 with Ok x -> Ok x | Error x -> Error (v359 x)
            let _run_target_args'_v361 = v370 
            #endif
#else
            let v371 : Result<rexie_Store, std_string_String> = match v358 with Ok x -> Ok x | Error x -> Error (v359 x)
            let _run_target_args'_v361 = v371 
            #endif
            let v372 : Result<rexie_Store, std_string_String> = _run_target_args'_v361 
            let v375 : string = "$0?"
            let v376 : rexie_Store = Fable.Core.RustInterop.emitRustExpr v372 v375 
            let v377 : string = method79(v207)
            (* run_target_args'
            let v382 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v383 : string = "&*$0"
            let v384 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v377 v383 
            let _run_target_args'_v382 = v384 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v385 : string = "&*$0"
            let v386 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v377 v385 
            let _run_target_args'_v382 = v386 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v387 : string = "&*$0"
            let v388 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v377 v387 
            let _run_target_args'_v382 = v388 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v390 : Ref<Str> = v377 |> unbox<Ref<Str>>
            let _run_target_args'_v382 = v390 
            #endif
#if FABLE_COMPILER_PYTHON
            let v394 : Ref<Str> = v377 |> unbox<Ref<Str>>
            let _run_target_args'_v382 = v394 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v398 : Ref<Str> = v377 |> unbox<Ref<Str>>
            let _run_target_args'_v382 = v398 
            #endif
#else
            let v402 : Ref<Str> = v377 |> unbox<Ref<Str>>
            let _run_target_args'_v382 = v402 
            #endif
            let v405 : Ref<Str> = _run_target_args'_v382 
            let v411 : string = "wasm_bindgen::JsValue::from_str($0)"
            let v412 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr v405 v411 
            let v413 : string = $"Box::pin(rexie::Store::get(&v376, v412))"
            let v414 : std_pin_Pin<Box<Dyn<std_future_Future<Result<wasm_bindgen_JsValue option, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v413 
            let v415 : string = "v414.await"
            let v416 : Result<wasm_bindgen_JsValue option, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v415 
            let v417 : (rexie_Error -> std_string_String) = method16()
            (* run_target_args'
            let v419 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v420 : string = "$0.map_err(|x| $1(x))"
            let v421 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v416, v417) v420 
            let _run_target_args'_v419 = v421 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v422 : string = "$0.map_err(|x| $1(x))"
            let v423 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v416, v417) v422 
            let _run_target_args'_v419 = v423 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v424 : string = "$0.map_err(|x| $1(x))"
            let v425 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v416, v417) v424 
            let _run_target_args'_v419 = v425 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v426 : Result<wasm_bindgen_JsValue option, std_string_String> = match v416 with Ok x -> Ok x | Error x -> Error (v417 x)
            let _run_target_args'_v419 = v426 
            #endif
#if FABLE_COMPILER_PYTHON
            let v427 : Result<wasm_bindgen_JsValue option, std_string_String> = match v416 with Ok x -> Ok x | Error x -> Error (v417 x)
            let _run_target_args'_v419 = v427 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v428 : Result<wasm_bindgen_JsValue option, std_string_String> = match v416 with Ok x -> Ok x | Error x -> Error (v417 x)
            let _run_target_args'_v419 = v428 
            #endif
#else
            let v429 : Result<wasm_bindgen_JsValue option, std_string_String> = match v416 with Ok x -> Ok x | Error x -> Error (v417 x)
            let _run_target_args'_v419 = v429 
            #endif
            let v430 : Result<wasm_bindgen_JsValue option, std_string_String> = _run_target_args'_v419 
            let v433 : string = "$0?"
            let v434 : wasm_bindgen_JsValue option = Fable.Core.RustInterop.emitRustExpr v430 v433 
            let v437 : (wasm_bindgen_JsValue -> US4) = method17()
            let v438 : US4 option = v434 |> Option.map v437 
            let v452 : US4 = US4_1
            let v453 : US4 = v438 |> Option.defaultValue v452 
            let v561 : US25 =
                match v453 with
                | US4_1 -> (* None *)
                    US25_1
                | US4_0(v457) -> (* Some *)
                    let v458 : wasm_bindgen_JsValue = method18(v457)
                    let v459 : string = "serde_wasm_bindgen::from_value(v458)"
                    let v460 : Result<serde_json_Value option, serde_wasm_bindgen_Error> = Fable.Core.RustInterop.emitRustExpr () v459 
                    let v461 : (serde_wasm_bindgen_Error -> std_string_String) = method19()
                    (* run_target_args'
                    let v463 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v464 : string = "$0.map_err(|x| $1(x))"
                    let v465 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v460, v461) v464 
                    let _run_target_args'_v463 = v465 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v466 : string = "$0.map_err(|x| $1(x))"
                    let v467 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v460, v461) v466 
                    let _run_target_args'_v463 = v467 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v468 : string = "$0.map_err(|x| $1(x))"
                    let v469 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v460, v461) v468 
                    let _run_target_args'_v463 = v469 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v470 : Result<serde_json_Value option, std_string_String> = match v460 with Ok x -> Ok x | Error x -> Error (v461 x)
                    let _run_target_args'_v463 = v470 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v471 : Result<serde_json_Value option, std_string_String> = match v460 with Ok x -> Ok x | Error x -> Error (v461 x)
                    let _run_target_args'_v463 = v471 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v472 : Result<serde_json_Value option, std_string_String> = match v460 with Ok x -> Ok x | Error x -> Error (v461 x)
                    let _run_target_args'_v463 = v472 
                    #endif
#else
                    let v473 : Result<serde_json_Value option, std_string_String> = match v460 with Ok x -> Ok x | Error x -> Error (v461 x)
                    let _run_target_args'_v463 = v473 
                    #endif
                    let v474 : Result<serde_json_Value option, std_string_String> = _run_target_args'_v463 
                    let v477 : string = "$0?"
                    let v478 : serde_json_Value option = Fable.Core.RustInterop.emitRustExpr v474 v477 
                    let v481 : (serde_json_Value -> US5) = method20()
                    let v482 : US5 option = v478 |> Option.map v481 
                    let v496 : US5 = US5_1
                    let v497 : US5 = v482 |> Option.defaultValue v496 
                    match v497 with
                    | US5_1 -> (* None *)
                        US25_1
                    | US5_0(v501) -> (* Some *)
                        let v502 : serde_json_Value = method21(v501)
                        let v503 : string = "serde_json::from_value(v502)"
                        let v504 : Result<Vec<uint8>, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr () v503 
                        let v505 : (serde_json_Error -> std_string_String) = method22()
                        (* run_target_args'
                        let v507 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v508 : string = "$0.map_err(|x| $1(x))"
                        let v509 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v504, v505) v508 
                        let _run_target_args'_v507 = v509 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v510 : string = "$0.map_err(|x| $1(x))"
                        let v511 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v504, v505) v510 
                        let _run_target_args'_v507 = v511 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v512 : string = "$0.map_err(|x| $1(x))"
                        let v513 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v504, v505) v512 
                        let _run_target_args'_v507 = v513 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v514 : Result<Vec<uint8>, std_string_String> = match v504 with Ok x -> Ok x | Error x -> Error (v505 x)
                        let _run_target_args'_v507 = v514 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v515 : Result<Vec<uint8>, std_string_String> = match v504 with Ok x -> Ok x | Error x -> Error (v505 x)
                        let _run_target_args'_v507 = v515 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v516 : Result<Vec<uint8>, std_string_String> = match v504 with Ok x -> Ok x | Error x -> Error (v505 x)
                        let _run_target_args'_v507 = v516 
                        #endif
#else
                        let v517 : Result<Vec<uint8>, std_string_String> = match v504 with Ok x -> Ok x | Error x -> Error (v505 x)
                        let _run_target_args'_v507 = v517 
                        #endif
                        let v518 : Result<Vec<uint8>, std_string_String> = _run_target_args'_v507 
                        let v521 : string = "$0?"
                        let v522 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v518 v521 
                        let v523 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                        let v524 : (uint8 []) = Fable.Core.RustInterop.emitRustExpr v522 v523 
                        let v525 : int32 = v524.Length
                        let v526 : string = "state_core.get_data () / data_len: " + string v525 + ""
                        let v527 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v528 : bool = Fable.Core.RustInterop.emitRustExpr v526 v527 
                        let v529 : string = "$0.to_vec()"
                        let v530 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v524 v529 
                        let v531 : string = "v530.as_slice()"
                        let v532 : Ref<Slice<uint8>> = Fable.Core.RustInterop.emitRustExpr () v531 
                        let v533 : string = "true; let mut v532 = v532"
                        let v534 : bool = Fable.Core.RustInterop.emitRustExpr () v533 
                        let v535 : string = "borsh::BorshDeserialize::deserialize(&mut v532)"
                        let v536 : Result<Heap4, borsh_io_Error> = Fable.Core.RustInterop.emitRustExpr () v535 
                        let v537 : (borsh_io_Error -> std_string_String) = method23()
                        (* run_target_args'
                        let v539 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v540 : string = "$0.map_err(|x| $1(x))"
                        let v541 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v536, v537) v540 
                        let _run_target_args'_v539 = v541 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v542 : string = "$0.map_err(|x| $1(x))"
                        let v543 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v536, v537) v542 
                        let _run_target_args'_v539 = v543 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v544 : string = "$0.map_err(|x| $1(x))"
                        let v545 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v536, v537) v544 
                        let _run_target_args'_v539 = v545 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v546 : Result<Heap4, std_string_String> = match v536 with Ok x -> Ok x | Error x -> Error (v537 x)
                        let _run_target_args'_v539 = v546 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v547 : Result<Heap4, std_string_String> = match v536 with Ok x -> Ok x | Error x -> Error (v537 x)
                        let _run_target_args'_v539 = v547 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v548 : Result<Heap4, std_string_String> = match v536 with Ok x -> Ok x | Error x -> Error (v537 x)
                        let _run_target_args'_v539 = v548 
                        #endif
#else
                        let v549 : Result<Heap4, std_string_String> = match v536 with Ok x -> Ok x | Error x -> Error (v537 x)
                        let _run_target_args'_v539 = v549 
                        #endif
                        let v550 : Result<Heap4, std_string_String> = _run_target_args'_v539 
                        let v553 : string = "$0?"
                        let v554 : Heap4 = Fable.Core.RustInterop.emitRustExpr v550 v553 
                        US25_0(v554)
            let v569 : Heap4 option =
                match v561 with
                | US25_1 -> (* None *)
                    let v567 : Heap4 option = None
                    v567
                | US25_0(v562) -> (* Some *)
                    let v564 : Heap4 option = Some v562 
                    v564
            let v571 : Result<Heap4 option, std_string_String> = Ok v569 
            let v574 : string = v49 + v50 
            let x = v571 //
            let v575 : _ = x
            let v576 : unit = ()
            (* run_target_args'
            let v577 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v578 : string = $"true; let _fix_closure_v576 = $0"
            let v579 : bool = Fable.Core.RustInterop.emitRustExpr v575 v578 
            let _run_target_args'_v577 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v580 : string = $"true; let _fix_closure_v576 = $0"
            let v581 : bool = Fable.Core.RustInterop.emitRustExpr v575 v580 
            let _run_target_args'_v577 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v582 : string = $"true; let _fix_closure_v576 = $0"
            let v583 : bool = Fable.Core.RustInterop.emitRustExpr v575 v582 
            let _run_target_args'_v577 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v577 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v577 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v577 = false 
            #endif
#else
            let _run_target_args'_v577 = false 
            #endif
            let v584 : bool = _run_target_args'_v577 
            let v586 : string = $"true; _fix_closure_v576 " + v574 + "); " + v49 + " // rust.fix_closure'"
            let v587 : bool = Fable.Core.RustInterop.emitRustExpr () v586 
            let v588 : string = "__future_init"
            let v589 : _ = Fable.Core.RustInterop.emitRustExpr () v588 
            let v590 : string = "v589"
            let v591 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v590 
            let func1_from_result = v591 //
            let v592 : _ = func1_from_result
            let v593 : string = $"true; $0 /*"
            let v594 : bool = Fable.Core.RustInterop.emitRustExpr v592 v593 
            let v595 : string = $"*/ }}); //"
            let v596 : bool = Fable.Core.RustInterop.emitRustExpr () v595 
            let v597 : string = $"_func1_from_v198"
            let v598 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v597 
            let v599 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v600 : (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>) = closure65(v598)
            let v601 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr struct (v145, v600) v599 
            let v602 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = method81(v601)
            let v603 : string = "futures::future::try_join_all(v602)"
            let v604 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v603 
            let v605 : string = "v604.await"
            let v606 : Result<Vec<Heap4 option>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v605 
            let v607 : string = "$0?"
            let v608 : Vec<Heap4 option> = Fable.Core.RustInterop.emitRustExpr v606 v607 
            US24_0(v608)
        | _ ->
            let v610 : string = "database=None"
            (* run_target_args'
            let v615 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v616 : string = "&*$0"
            let v617 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v610 v616 
            let _run_target_args'_v615 = v617 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v618 : string = "&*$0"
            let v619 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v610 v618 
            let _run_target_args'_v615 = v619 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v620 : string = "&*$0"
            let v621 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v610 v620 
            let _run_target_args'_v615 = v621 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v623 : Ref<Str> = v610 |> unbox<Ref<Str>>
            let _run_target_args'_v615 = v623 
            #endif
#if FABLE_COMPILER_PYTHON
            let v627 : Ref<Str> = v610 |> unbox<Ref<Str>>
            let _run_target_args'_v615 = v627 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v631 : Ref<Str> = v610 |> unbox<Ref<Str>>
            let _run_target_args'_v615 = v631 
            #endif
#else
            let v635 : Ref<Str> = v610 |> unbox<Ref<Str>>
            let _run_target_args'_v615 = v635 
            #endif
            let v638 : Ref<Str> = _run_target_args'_v615 
            (* run_target_args'
            let v648 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v649 : string = "String::from($0)"
            let v650 : std_string_String = Fable.Core.RustInterop.emitRustExpr v638 v649 
            let _run_target_args'_v648 = v650 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v651 : string = "String::from($0)"
            let v652 : std_string_String = Fable.Core.RustInterop.emitRustExpr v638 v651 
            let _run_target_args'_v648 = v652 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v653 : string = "String::from($0)"
            let v654 : std_string_String = Fable.Core.RustInterop.emitRustExpr v638 v653 
            let _run_target_args'_v648 = v654 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v656 : std_string_String = v638 |> unbox<std_string_String>
            let _run_target_args'_v648 = v656 
            #endif
#if FABLE_COMPILER_PYTHON
            let v660 : std_string_String = v638 |> unbox<std_string_String>
            let _run_target_args'_v648 = v660 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v664 : std_string_String = v638 |> unbox<std_string_String>
            let _run_target_args'_v648 = v664 
            #endif
#else
            let v668 : std_string_String = v638 |> unbox<std_string_String>
            let _run_target_args'_v648 = v668 
            #endif
            let v671 : std_string_String = _run_target_args'_v648 
            US24_1(v671)
    let v690 : Result<Vec<Heap4 option>, std_string_String> =
        match v678 with
        | US24_1(v684) -> (* Error *)
            let v686 : Result<Vec<Heap4 option>, std_string_String> = Error v684 
            v686
        | US24_0(v679) -> (* Ok *)
            let v681 : Result<Vec<Heap4 option>, std_string_String> = Ok v679 
            v681
    let v692 : string = $"%A{v690}"
    let v695 : string = "state_core.use_requests (4) / state_data_resource new_local_resource / result: " + string v692 + ""
    let v696 : int64 = 200L
    let v697 : string = method8(v696, v695)
    let v698 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v699 : bool = Fable.Core.RustInterop.emitRustExpr v697 v698 
    let v700 : string = v49 + v50 
    let x = v690 //
    let v701 : _ = x
    let v702 : unit = ()
    (* run_target_args'
    let v703 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v704 : string = $"true; let _fix_closure_v702 = $0"
    let v705 : bool = Fable.Core.RustInterop.emitRustExpr v701 v704 
    let _run_target_args'_v703 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v706 : string = $"true; let _fix_closure_v702 = $0"
    let v707 : bool = Fable.Core.RustInterop.emitRustExpr v701 v706 
    let _run_target_args'_v703 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v708 : string = $"true; let _fix_closure_v702 = $0"
    let v709 : bool = Fable.Core.RustInterop.emitRustExpr v701 v708 
    let _run_target_args'_v703 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v703 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v703 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v703 = false 
    #endif
#else
    let _run_target_args'_v703 = false 
    #endif
    let v710 : bool = _run_target_args'_v703 
    let v712 : string = $"true; _fix_closure_v702 " + v700 + "); " + v49 + " // rust.fix_closure'"
    let v713 : bool = Fable.Core.RustInterop.emitRustExpr () v712 
    let v714 : string = "__future_init"
    let v715 : _ = Fable.Core.RustInterop.emitRustExpr () v714 
    let v716 : string = "v715"
    let v717 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<Heap4 option>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v716 
    let v718 : string = $"true; $0 /*"
    let v719 : bool = Fable.Core.RustInterop.emitRustExpr v717 v718 
    let v720 : string = $"*/ }}); //"
    let v721 : bool = Fable.Core.RustInterop.emitRustExpr () v720 
    let v722 : string = $"_func0_from_v128"
    let v723 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<Heap4 option>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v722 
    let v724 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v725 : leptos_prelude_ArcLocalResource<Result<Vec<Heap4 option>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v723 v724 
    let v726 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v727 : (unit -> Result<Vec<Heap4 option>, std_string_String> option) = closure66(v725)
    let v728 : leptos_prelude_ArcMemo<Result<Vec<Heap4 option>, std_string_String> option> = Fable.Core.RustInterop.emitRustExpr v727 v726 
    let v729 : unit = ()
    let v730 : string = $"true; let _func0_from_v729 = Func0::from(move || {{ //"
    let v731 : bool = Fable.Core.RustInterop.emitRustExpr () v730 
    let v732 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v733 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v732 
    let v734 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v735 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v728 v734 
    let v737 : string = $"%A{v733}"
    let v740 : int64 = 400L
    let v741 : string = method8(v740, v737)
    let v742 : string = "state_core.use_requests (7) / json new_local_resource / requests: " + string v741 + ""
    let v743 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v744 : bool = Fable.Core.RustInterop.emitRustExpr v742 v743 
    let v745 : string = "true; let __future_init = Box::pin(/*"
    let v746 : bool = Fable.Core.RustInterop.emitRustExpr () v745 
    let v747 : string = "*/ async move { /*"
    let v748 : bool = Fable.Core.RustInterop.emitRustExpr () v747 
    let v749 : string = "*/ ()"
    let v750 : bool = Fable.Core.RustInterop.emitRustExpr () v749 
    let v753 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v754 : US26 option = v735 |> Option.map v753 
    let v768 : US26 = US26_1
    let v769 : US26 = v754 |> Option.defaultValue v768 
    let v819 : US27 =
        match v769 with
        | US26_1 -> (* None *)
            US27_1
        | US26_0(v773) -> (* Some *)
            let v774 : (Vec<Heap4 option> -> US24) = method83()
            let v775 : (std_string_String -> US24) = method84()
            let v777 : US24 = match v773 with Ok x -> v774 x | Error x -> v775 x
            let v815 : US28 =
                match v777 with
                | US24_1(v812) -> (* Error *)
                    US28_1(v812)
                | US24_0(v780) -> (* Ok *)
                    let v781 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v782 : bool = Fable.Core.RustInterop.emitRustExpr v780 v781 
                    let v783 : string = "x"
                    let v784 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v783 
                    let v787 : (Heap4 -> US25) = method85()
                    let v788 : US25 option = v784 |> Option.map v787 
                    let v802 : US25 = US25_1
                    let v803 : US25 = v788 |> Option.defaultValue v802 
                    let v807 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v808 : bool = Fable.Core.RustInterop.emitRustExpr v803 v807 
                    let v809 : string = "_vec_map"
                    let v810 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v809 
                    US28_0(v810)
            US27_0(v815)
    let v821 : string = $"%A{v819}"
    let v824 : int64 = 400L
    let v825 : string = method8(v824, v821)
    let v826 : string = "state_core.use_requests (8) / result_memo / state_data: " + string v825 + ""
    let v827 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v828 : bool = Fable.Core.RustInterop.emitRustExpr v826 v827 
    let v829 : (int32 -> (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>)) = method86(v819)
    let v830 : Vec<struct (string * US23 * string * bool * bool)> = method96(v733)
    let v831 : string = "v830.iter().enumerate().map(|(i, x)| v829(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v832 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v831 
    let v833 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = method97(v832)
    let v834 : string = "futures::future::try_join_all(v833)"
    let v835 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v834 
    let v836 : string = "v835.await"
    let v837 : Result<Vec<string option>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v836 
    let v838 : string = "$0?"
    let v839 : Vec<string option> = Fable.Core.RustInterop.emitRustExpr v837 v838 
    let v841 : Result<Vec<string option>, std_string_String> = Ok v839 
    let v844 : string = v49 + v50 
    let x = v841 //
    let v845 : _ = x
    let v846 : unit = ()
    (* run_target_args'
    let v847 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v848 : string = $"true; let _fix_closure_v846 = $0"
    let v849 : bool = Fable.Core.RustInterop.emitRustExpr v845 v848 
    let _run_target_args'_v847 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v850 : string = $"true; let _fix_closure_v846 = $0"
    let v851 : bool = Fable.Core.RustInterop.emitRustExpr v845 v850 
    let _run_target_args'_v847 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v852 : string = $"true; let _fix_closure_v846 = $0"
    let v853 : bool = Fable.Core.RustInterop.emitRustExpr v845 v852 
    let _run_target_args'_v847 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v847 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v847 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v847 = false 
    #endif
#else
    let _run_target_args'_v847 = false 
    #endif
    let v854 : bool = _run_target_args'_v847 
    let v856 : string = $"true; _fix_closure_v846 " + v844 + "); " + v49 + " // rust.fix_closure'"
    let v857 : bool = Fable.Core.RustInterop.emitRustExpr () v856 
    let v858 : string = "__future_init"
    let v859 : _ = Fable.Core.RustInterop.emitRustExpr () v858 
    let v860 : string = "v859"
    let v861 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<string option>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v860 
    let v862 : string = $"true; $0 /*"
    let v863 : bool = Fable.Core.RustInterop.emitRustExpr v861 v862 
    let v864 : string = $"*/ }}); //"
    let v865 : bool = Fable.Core.RustInterop.emitRustExpr () v864 
    let v866 : string = $"_func0_from_v729"
    let v867 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<string option>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v866 
    let v868 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v869 : leptos_prelude_ArcLocalResource<Result<Vec<string option>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v867 v868 
    let v870 : unit = ()
    let v871 : string = $"true; let _func1_from_v870 = Func1::from(move |value| {{ //"
    let v872 : bool = Fable.Core.RustInterop.emitRustExpr () v871 
    let v873 : string = $"value"
    let v874 : Heap4 = Fable.Core.RustInterop.emitRustExpr () v873 
    let v876 : string = $"%A{v874}"
    let v879 : int64 = System.Convert.ToInt64 v876.Length
    let v880 : string = "state_core.use_requests (10) / set_state_data_action / value_len: " + string v879 + ""
    let v881 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v882 : bool = Fable.Core.RustInterop.emitRustExpr v880 v881 
    let v883 : string = "true; let __future_init = Box::pin(/*"
    let v884 : bool = Fable.Core.RustInterop.emitRustExpr () v883 
    let v885 : string = "*/ async move { /*"
    let v886 : bool = Fable.Core.RustInterop.emitRustExpr () v885 
    let v887 : string = "*/ ()"
    let v888 : bool = Fable.Core.RustInterop.emitRustExpr () v887 
    let v889 : string = "Box::pin($0)"
    let v890 : std_pin_Pin<Box<leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>>> = Fable.Core.RustInterop.emitRustExpr v0 v889 
    let v891 : string = $"leptos::prelude::ArcMemo::get_untracked(&$0)"
    let v892 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v890 v891 
    let v893 : string = "Box::pin($0)"
    let v894 : std_pin_Pin<Box<leptos_prelude_ArcMemo<PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option>>> = Fable.Core.RustInterop.emitRustExpr v127 v893 
    let v895 : string = $"leptos::prelude::ArcMemo::get_untracked(&$0)"
    let v896 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr v894 v895 
    let v897 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v898 : bool = Fable.Core.RustInterop.emitRustExpr v896 v897 
    let v899 : string = "x"
    let v900 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr () v899 
    let v901 : string = "$0.0"
    let v902 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr v900 v901 
    let v903 : string = "true; $0 })"
    let v904 : bool = Fable.Core.RustInterop.emitRustExpr v902 v903 
    let v905 : string = "_optionm_map_"
    let v906 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr () v905 
    let v909 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v910 : US2 option = v906 |> Option.map v909 
    let v924 : US2 = US2_1
    let v925 : US2 = v910 |> Option.defaultValue v924 
    let v1102 : US34 =
        match v925 with
        | US2_0(v929) -> (* Some *)
            let v930 : unit = ()
            let v931 : string = $"true; let _func1_from_v930 = Func1::from(move |value| {{ //"
            let v932 : bool = Fable.Core.RustInterop.emitRustExpr () v931 
            let v933 : string = $"value"
            let struct (v934 : string, v935 : US23, v936 : string, v937 : bool, v938 : bool) = Fable.Core.RustInterop.emitRustExpr () v933 
            let v939 : string = "true; let __future_init = Box::pin(/*"
            let v940 : bool = Fable.Core.RustInterop.emitRustExpr () v939 
            let v941 : string = "*/ async move { /*"
            let v942 : bool = Fable.Core.RustInterop.emitRustExpr () v941 
            let v943 : string = "*/ ()"
            let v944 : bool = Fable.Core.RustInterop.emitRustExpr () v943 
            let v945 : string = "state_core.use_requests (11) / set_state_data_action / database=Some(_) / url: " + v934 + ""
            let v946 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v947 : bool = Fable.Core.RustInterop.emitRustExpr v945 v946 
            let v948 : string = "url[" + v934 + "](" + $"%A{v936}" + ")"
            let v950 : string = $"%A{v874}"
            let v953 : int64 = System.Convert.ToInt64 v950.Length
            let v954 : string = "state_core.set_data () / data_len: " + string v953 + ""
            let v955 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v956 : bool = Fable.Core.RustInterop.emitRustExpr v954 v955 
            let v957 : string = "true; let __future_init = Box::pin(/*"
            let v958 : bool = Fable.Core.RustInterop.emitRustExpr () v957 
            let v959 : string = "*/ async move { /*"
            let v960 : bool = Fable.Core.RustInterop.emitRustExpr () v959 
            let v961 : string = "*/ ()"
            let v962 : bool = Fable.Core.RustInterop.emitRustExpr () v961 
            let v963 : string = "true; let mut data = Vec::new()"
            let v964 : bool = Fable.Core.RustInterop.emitRustExpr () v963 
            let v965 : string = "true; borsh::BorshSerialize::serialize(&$0, &mut data).unwrap()"
            let v966 : bool = Fable.Core.RustInterop.emitRustExpr v874 v965 
            let v967 : string = "data"
            let v968 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr () v967 
            let v969 : string = "serde_wasm_bindgen::to_value(&v968).unwrap()"
            let v970 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr () v969 
            let v971 : string = method98(v948)
            (* run_target_args'
            let v976 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v977 : string = "&*$0"
            let v978 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v971 v977 
            let _run_target_args'_v976 = v978 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v979 : string = "&*$0"
            let v980 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v971 v979 
            let _run_target_args'_v976 = v980 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v981 : string = "&*$0"
            let v982 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v971 v981 
            let _run_target_args'_v976 = v982 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v984 : Ref<Str> = v971 |> unbox<Ref<Str>>
            let _run_target_args'_v976 = v984 
            #endif
#if FABLE_COMPILER_PYTHON
            let v988 : Ref<Str> = v971 |> unbox<Ref<Str>>
            let _run_target_args'_v976 = v988 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v992 : Ref<Str> = v971 |> unbox<Ref<Str>>
            let _run_target_args'_v976 = v992 
            #endif
#else
            let v996 : Ref<Str> = v971 |> unbox<Ref<Str>>
            let _run_target_args'_v976 = v996 
            #endif
            let v999 : Ref<Str> = _run_target_args'_v976 
            let v1005 : string = "$0.transaction(&[\"store\"], rexie::TransactionMode::ReadWrite)?"
            let v1006 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v929 v1005 
            let v1007 : string = "v1006.store(\"store\")?"
            let v1008 : rexie_Store = Fable.Core.RustInterop.emitRustExpr () v1007 
            let v1009 : string = "true; v1008.put(&v970, Some(&$0.into())).await?"
            let v1010 : bool = Fable.Core.RustInterop.emitRustExpr v999 v1009 
            let v1011 : string = "true; v1006.done().await?"
            let v1012 : bool = Fable.Core.RustInterop.emitRustExpr () v1011 
            let v1014 : Result<unit, rexie_Error> = Ok () 
            let v1017 : string = v49 + v50 
            let x = v1014 //
            let v1018 : _ = x
            let v1019 : unit = ()
            (* run_target_args'
            let v1020 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1021 : string = $"true; let _fix_closure_v1019 = $0"
            let v1022 : bool = Fable.Core.RustInterop.emitRustExpr v1018 v1021 
            let _run_target_args'_v1020 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1023 : string = $"true; let _fix_closure_v1019 = $0"
            let v1024 : bool = Fable.Core.RustInterop.emitRustExpr v1018 v1023 
            let _run_target_args'_v1020 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1025 : string = $"true; let _fix_closure_v1019 = $0"
            let v1026 : bool = Fable.Core.RustInterop.emitRustExpr v1018 v1025 
            let _run_target_args'_v1020 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v1020 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v1020 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v1020 = false 
            #endif
#else
            let _run_target_args'_v1020 = false 
            #endif
            let v1027 : bool = _run_target_args'_v1020 
            let v1029 : string = $"true; _fix_closure_v1019 " + v1017 + "); " + v49 + " // rust.fix_closure'"
            let v1030 : bool = Fable.Core.RustInterop.emitRustExpr () v1029 
            let v1031 : string = "__future_init"
            let v1032 : _ = Fable.Core.RustInterop.emitRustExpr () v1031 
            let v1033 : string = "v1032"
            let v1034 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v1033 
            let v1035 : string = "v1034.await"
            let v1036 : Result<unit, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v1035 
            let v1037 : (rexie_Error -> std_string_String) = method99()
            (* run_target_args'
            let v1039 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1040 : string = "$0.map_err(|x| $1(x))"
            let v1041 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1036, v1037) v1040 
            let _run_target_args'_v1039 = v1041 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1042 : string = "$0.map_err(|x| $1(x))"
            let v1043 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1036, v1037) v1042 
            let _run_target_args'_v1039 = v1043 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1044 : string = "$0.map_err(|x| $1(x))"
            let v1045 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1036, v1037) v1044 
            let _run_target_args'_v1039 = v1045 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1046 : Result<unit, std_string_String> = match v1036 with Ok x -> Ok x | Error x -> Error (v1037 x)
            let _run_target_args'_v1039 = v1046 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1047 : Result<unit, std_string_String> = match v1036 with Ok x -> Ok x | Error x -> Error (v1037 x)
            let _run_target_args'_v1039 = v1047 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1048 : Result<unit, std_string_String> = match v1036 with Ok x -> Ok x | Error x -> Error (v1037 x)
            let _run_target_args'_v1039 = v1048 
            #endif
#else
            let v1049 : Result<unit, std_string_String> = match v1036 with Ok x -> Ok x | Error x -> Error (v1037 x)
            let _run_target_args'_v1039 = v1049 
            #endif
            let v1050 : Result<unit, std_string_String> = _run_target_args'_v1039 
            let v1053 : string = "true; $0?"
            let v1054 : bool = Fable.Core.RustInterop.emitRustExpr v1050 v1053 
            
            let v1056 : Result<unit, std_string_String> = Ok () 
            let v1059 : string = v49 + v50 
            let x = v1056 //
            let v1060 : _ = x
            let v1061 : unit = ()
            (* run_target_args'
            let v1062 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1063 : string = $"true; let _fix_closure_v1061 = $0"
            let v1064 : bool = Fable.Core.RustInterop.emitRustExpr v1060 v1063 
            let _run_target_args'_v1062 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1065 : string = $"true; let _fix_closure_v1061 = $0"
            let v1066 : bool = Fable.Core.RustInterop.emitRustExpr v1060 v1065 
            let _run_target_args'_v1062 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1067 : string = $"true; let _fix_closure_v1061 = $0"
            let v1068 : bool = Fable.Core.RustInterop.emitRustExpr v1060 v1067 
            let _run_target_args'_v1062 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v1062 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v1062 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v1062 = false 
            #endif
#else
            let _run_target_args'_v1062 = false 
            #endif
            let v1069 : bool = _run_target_args'_v1062 
            let v1071 : string = $"true; _fix_closure_v1061 " + v1059 + "); " + v49 + " // rust.fix_closure'"
            let v1072 : bool = Fable.Core.RustInterop.emitRustExpr () v1071 
            let v1073 : string = "__future_init"
            let v1074 : _ = Fable.Core.RustInterop.emitRustExpr () v1073 
            let v1075 : string = "v1074"
            let v1076 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v1075 
            let func1_from_result = v1076 //
            let v1077 : _ = func1_from_result
            let v1078 : string = $"true; $0 /*"
            let v1079 : bool = Fable.Core.RustInterop.emitRustExpr v1077 v1078 
            let v1080 : string = $"*/ }}); //"
            let v1081 : bool = Fable.Core.RustInterop.emitRustExpr () v1080 
            let v1082 : string = $"_func1_from_v930"
            let v1083 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1082 
            let v1084 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v1085 : (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>) = closure76(v1083)
            let v1086 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr struct (v892, v1085) v1084 
            let v1087 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = method101(v1086)
            let v1088 : string = "futures::future::try_join_all(v1087)"
            let v1089 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1088 
            let v1090 : string = "v1089.await"
            let v1091 : Result<Vec<unit>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v1090 
            let v1092 : string = "$0?"
            let v1093 : Vec<unit> = Fable.Core.RustInterop.emitRustExpr v1091 v1092 
            US34_0(v1093)
        | _ ->
            let v1095 : string = "state_core.use_requests (12) / set_state_data_action / database,request=None"
            let v1096 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1097 : bool = Fable.Core.RustInterop.emitRustExpr v1095 v1096 
            let v1098 : (unit []) = [||]
            let v1099 : string = "$0.to_vec()"
            let v1100 : Vec<unit> = Fable.Core.RustInterop.emitRustExpr v1098 v1099 
            US34_0(v1100)
    let v1114 : Result<Vec<unit>, std_string_String> =
        match v1102 with
        | US34_1(v1108) -> (* Error *)
            let v1110 : Result<Vec<unit>, std_string_String> = Error v1108 
            v1110
        | US34_0(v1103) -> (* Ok *)
            let v1105 : Result<Vec<unit>, std_string_String> = Ok v1103 
            v1105
    let v1115 : string = v49 + v50 
    let x = v1114 //
    let v1116 : _ = x
    let v1117 : unit = ()
    (* run_target_args'
    let v1118 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v1119 : string = $"true; let _fix_closure_v1117 = $0"
    let v1120 : bool = Fable.Core.RustInterop.emitRustExpr v1116 v1119 
    let _run_target_args'_v1118 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v1121 : string = $"true; let _fix_closure_v1117 = $0"
    let v1122 : bool = Fable.Core.RustInterop.emitRustExpr v1116 v1121 
    let _run_target_args'_v1118 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v1123 : string = $"true; let _fix_closure_v1117 = $0"
    let v1124 : bool = Fable.Core.RustInterop.emitRustExpr v1116 v1123 
    let _run_target_args'_v1118 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v1118 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v1118 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v1118 = false 
    #endif
#else
    let _run_target_args'_v1118 = false 
    #endif
    let v1125 : bool = _run_target_args'_v1118 
    let v1127 : string = $"true; _fix_closure_v1117 " + v1115 + "); " + v49 + " // rust.fix_closure'"
    let v1128 : bool = Fable.Core.RustInterop.emitRustExpr () v1127 
    let v1129 : string = "__future_init"
    let v1130 : _ = Fable.Core.RustInterop.emitRustExpr () v1129 
    let v1131 : string = "v1130"
    let v1132 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v1131 
    let func1_from_result = v1132 //
    let v1133 : _ = func1_from_result
    let v1134 : string = $"true; $0 /*"
    let v1135 : bool = Fable.Core.RustInterop.emitRustExpr v1133 v1134 
    let v1136 : string = $"*/ }}); //"
    let v1137 : bool = Fable.Core.RustInterop.emitRustExpr () v1136 
    let v1138 : string = $"_func1_from_v870"
    let v1139 : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1138 
    let v1140 : string = "leptos::prelude::Action::new(move |value: &std::sync::Arc<Heap4>| $0(value.clone()))"
    let v1141 : (Heap4 -> std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>) = closure77(v1139)
    let v1142 : leptos_prelude_Action<Heap4, Result<Vec<unit>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v1141 v1140 
    let v1143 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1144 : (unit -> (Result<crate_model_near_rpc_RpcResponse option, std_string_String> [])) = closure130(v0, v728, v869, v1142)
    let v1145 : leptos_prelude_ArcMemo<(Result<crate_model_near_rpc_RpcResponse option, std_string_String> [])> = Fable.Core.RustInterop.emitRustExpr v1144 v1143 
    let v1146 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1147 : (unit -> Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>) = closure134(v1, v124, v725, v1145)
    let v1148 : leptos_prelude_ArcMemo<Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>> = Fable.Core.RustInterop.emitRustExpr v1147 v1146 
    v1148
and method167 () : string =
    let v0 : string = "https://rpc.mainnet.near.org"
    v0
and closure137 () (v0 : US14) : US57 =
    US57_0(v0)
and method168 () : (US14 -> US57) =
    closure137()
and closure138 () (v0 : std_string_String) : US57 =
    US57_1(v0)
and method169 () : (std_string_String -> US57) =
    closure138()
and closure139 () (v0 : crate_model_near_rpc_RpcResponse) : US60 =
    US60_0(v0)
and method170 () : (crate_model_near_rpc_RpcResponse -> US60) =
    closure139()
and closure140 () (v0 : std_string_String) : US60 =
    US60_1(v0)
and method171 () : (std_string_String -> US60) =
    closure140()
and method172 (v0 : Func0<Heap6, std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>>) : Func0<Heap6, std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>> =
    v0
and closure141 (v0 : Func0<Heap6, std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>>) (v1 : Heap6) : std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>> =
    let v2 : Func0<Heap6, std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>> = method172(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure144 () (v0 : US59) : US58 =
    US58_0(v0)
and method174 () : (US59 -> US58) =
    closure144()
and closure145 () (v0 : std_string_String) : US58 =
    US58_1(v0)
and method175 () : (std_string_String -> US58) =
    closure145()
and closure143 () (v0 : Result<US59, std_string_String>) : US58 =
    let v1 : (US59 -> US58) = method174()
    let v2 : (std_string_String -> US58) = method175()
    let v4 : US58 = match v0 with Ok x -> v1 x | Error x -> v2 x
    v4
and method173 () : (Result<US59, std_string_String> -> US58) =
    closure143()
and closure146 () (v0 : US58) : US62 =
    US62_0(v0)
and method176 () : (US58 -> US62) =
    closure146()
and closure142 (v0 : leptos_prelude_ArcAction<Heap6, Result<US59, std_string_String>>) () : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> =
    let v1 : string = "leptos::prelude::ArcAction::value(&$0)"
    let v2 : leptos_prelude_ArcRwSignal<Result<US59, std_string_String> option> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v4 : Result<US59, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v7 : (Result<US59, std_string_String> -> US58) = method173()
    let v8 : US58 option = v4 |> Option.map v7 
    let v27 : (US58 -> US62) = method176()
    let v28 : US62 option = v8 |> Option.map v27 
    let v42 : US62 = US62_1
    let v43 : US62 = v28 |> Option.defaultValue v42 
    let v64 : US58 =
        match v43 with
        | US62_0(v47) -> (* Some *)
            match v47 with
            | US58_1(v48) -> (* Error *)
                US58_1(v48)
            | US58_0(v50) -> (* Ok *)
                match v50 with
                | US59_0(v51, v52, v53, v54) -> (* Some *)
                    let v55 : US59 = US59_0(v51, v52, v53, v54)
                    US58_0(v55)
                | _ ->
                    let v57 : US59 = US59_1
                    US58_0(v57)
        | _ ->
            let v62 : US59 = US59_1
            US58_0(v62)
    let v81 : US63 =
        match v64 with
        | US58_1(v78) -> (* Error *)
            US63_1(v78)
        | US58_0(v65) -> (* Ok *)
            let v76 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option =
                match v65 with
                | US59_1 -> (* None *)
                    let v74 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option = None
                    v74
                | US59_0(v66, v67, v68, v69) -> (* Some *)
                    let v71 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option = Some struct (v66, v67, v68, v69) 
                    v71
            US63_0(v76)
    let v93 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> =
        match v81 with
        | US63_1(v87) -> (* Error *)
            let v89 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = Error v87 
            v89
        | US63_0(v82) -> (* Ok *)
            let v84 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = Ok v82 
            v84
    let v95 : string = $"%A{v93}"
    let v98 : string = "dice_view.render (x) / roll new_arc_memo / result: " + string v95 + ""
    let v99 : int64 = 200L
    let v100 : string = method8(v99, v98)
    let v101 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v102 : bool = Fable.Core.RustInterop.emitRustExpr v100 v101 
    v93
and closure148 () (v0 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option) : US63 =
    US63_0(v0)
and method177 () : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option -> US63) =
    closure148()
and closure149 () (v0 : std_string_String) : US63 =
    US63_1(v0)
and method178 () : (std_string_String -> US63) =
    closure149()
and closure150 () struct (v0 : std_string_String, v1 : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option, v2 : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option, v3 : std_string_String option) : US59 =
    US59_0(v0, v1, v2, v3)
and method179 () : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) -> US59) =
    closure150()
and closure151 () struct (v0 : std_string_String, v1 : std_string_String, v2 : struct (std_string_String option * std_string_String option) option, v3 : int32, v4 : std_string_String, v5 : std_string_String) : US64 =
    US64_0(v0, v1, v2, v3, v4, v5)
and method180 () : (struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) -> US64) =
    closure151()
and closure147 (v0 : leptos_prelude_ArcMemo<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>) () : string option =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option -> US63) = method177()
    let v4 : (std_string_String -> US63) = method178()
    let v6 : US63 = match v2 with Ok x -> v3 x | Error x -> v4 x
    let v39 : US58 =
        match v6 with
        | US63_1(v36) -> (* Error *)
            US58_1(v36)
        | US63_0(v9) -> (* Ok *)
            let v12 : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) -> US59) = method179()
            let v13 : US59 option = v9 |> Option.map v12 
            let v30 : US59 = US59_1
            let v31 : US59 = v13 |> Option.defaultValue v30 
            US58_0(v31)
    let v85 : US31 =
        match v39 with
        | US58_0(v40) -> (* Ok *)
            match v40 with
            | US59_0(v41, v42, v43, v44) -> (* Some *)
                let v47 : (struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) -> US64) = method180()
                let v48 : US64 option = v43 |> Option.map v47 
                let v67 : US64 = US64_1
                let v68 : US64 = v48 |> Option.defaultValue v67 
                match v68 with
                | US64_0(v72, v73, v74, v75, v76, v77) -> (* Some *)
                    let v78 : string = string v72 + ": " + string v76 + " - " + string v77 + " (" + string v73 + ")"
                    US31_0(v78)
                | _ ->
                    US31_1
            | _ ->
                US31_1
        | _ ->
            US31_1
    let v93 : string option =
        match v85 with
        | US31_1 -> (* None *)
            let v91 : string option = None
            v91
        | US31_0(v86) -> (* Some *)
            let v88 : string option = Some v86 
            v88
    let v95 : string = $"%A{v93}"
    let v98 : string = "dice_view.render (x) / error_message new_arc_memo / result: " + string v95 + ""
    let v99 : int64 = 200L
    let v100 : string = method8(v99, v98)
    let v101 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v102 : bool = Fable.Core.RustInterop.emitRustExpr v100 v101 
    v93
and closure152 (v0 : Heap2) () : US31 =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<Heap0> = v5.l3
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : Heap0 = Fable.Core.RustInterop.emitRustExpr v6 v7 
    let v9 : std_string_String option = v8.l1
    let v12 : (std_string_String -> US14) = method39()
    let v13 : US14 option = v9 |> Option.map v12 
    let v27 : US14 = US14_1
    let v28 : US14 = v13 |> Option.defaultValue v27 
    match v28 with
    | US14_1 -> (* None *)
        US31_1
    | US14_0(v32) -> (* Some *)
        let v33 : string = "fable_library_rust::String_::fromString($0)"
        let v34 : string = Fable.Core.RustInterop.emitRustExpr v32 v33 
        US31_0(v34)
and method181 (v0 : Func0<(bool * std_string_String), struct (bool * std_string_String)>) : Func0<(bool * std_string_String), struct (bool * std_string_String)> =
    v0
and closure154 (v0 : Func0<(bool * std_string_String), struct (bool * std_string_String)>) (v1 : (bool * std_string_String)) : struct (bool * std_string_String) =
    let v2 : Func0<(bool * std_string_String), struct (bool * std_string_String)> = method181(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : bool, v6 : std_string_String) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6)
and method182 (v0 : Func0<struct (bool * std_string_String), std_string_String>) : Func0<struct (bool * std_string_String), std_string_String> =
    v0
and closure155 (v0 : Func0<struct (bool * std_string_String), std_string_String>) struct (v1 : bool, v2 : std_string_String) : std_string_String =
    let v3 : Func0<struct (bool * std_string_String), std_string_String> = method182(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let v6 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4 v5 
    v6
and closure157 (v0 : int32) (v1 : std_string_String) : (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)) =
    let v2 : string = $"leptos::prelude::signal($0)"
    let struct (v3 : leptos_prelude_ReadSignal<std_string_String>, v4 : leptos_prelude_WriteSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v6 : (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)) = v0, struct (v3, v4) 
    v6
and closure156 () (v0 : int32) : (std_string_String -> (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))) =
    closure157(v0)
and method183 () : (int32 -> (std_string_String -> (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)))) =
    closure156()
and method184 (v0 : Vec<std_string_String>) : Vec<std_string_String> =
    v0
and closure153 (v0 : Heap2) () : Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))> =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<Heap0> = v5.l3
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : Heap0 = Fable.Core.RustInterop.emitRustExpr v6 v7 
    let v9 : Vec<(bool * std_string_String)> = v8.l0
    let v10 : unit = ()
    let v11 : string = $"true; let _func1_from_v10 = Func1::from(move |value| {{ //"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr () v11 
    let v13 : string = $"value"
    let v14 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr () v13 
    let (a, b) = v14 
    let v17 : bool = a
    let v18 : std_string_String = b
    let func1_from_result = struct (v17, v18) //
    let v23 : _ = func1_from_result
    let v24 : string = $"true; $0 /*"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr v23 v24 
    let v26 : string = $"*/ }}); //"
    let v27 : bool = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : string = $"_func1_from_v10"
    let v29 : Func0<(bool * std_string_String), struct (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v28 
    let v30 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v31 : ((bool * std_string_String) -> struct (bool * std_string_String)) = closure154(v29)
    let v32 : Vec<struct (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v9, v31) v30 
    let v33 : (struct (bool * std_string_String) -> bool) = method55()
    let v34 : Vec<struct (bool * std_string_String)> = method56(v32)
    let v35 : string = "v34.into_iter().filter(|x| v33(x.clone().clone())).collect::<Vec<_>>()"
    let v36 : Vec<struct (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v35 
    let v37 : unit = ()
    let v38 : string = $"true; let _func1_from_v37 = Func1::from(move |value| {{ //"
    let v39 : bool = Fable.Core.RustInterop.emitRustExpr () v38 
    let v40 : string = $"value"
    let struct (v41 : bool, v42 : std_string_String) = Fable.Core.RustInterop.emitRustExpr () v40 
    let func1_from_result = v42 //
    let v43 : _ = func1_from_result
    let v44 : string = $"true; $0 /*"
    let v45 : bool = Fable.Core.RustInterop.emitRustExpr v43 v44 
    let v46 : string = $"*/ }}); //"
    let v47 : bool = Fable.Core.RustInterop.emitRustExpr () v46 
    let v48 : string = $"_func1_from_v37"
    let v49 : Func0<struct (bool * std_string_String), std_string_String> = Fable.Core.RustInterop.emitRustExpr () v48 
    let v50 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v51 : (struct (bool * std_string_String) -> std_string_String) = closure155(v49)
    let v52 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v36, v51) v50 
    let v53 : (int32 -> (std_string_String -> (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)))) = method183()
    let v54 : Vec<std_string_String> = method184(v52)
    let v55 : string = "v54.iter().enumerate().map(|(i, x)| v53(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v56 : Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))> = Fable.Core.RustInterop.emitRustExpr () v55 
    v56
and method185 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)), struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)>) : Func0<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)), struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)> =
    v0
and closure159 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)), struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)>) (v1 : (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))) : struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>) =
    let v2 : Func0<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)), struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)> = method185(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : int32, v6 : leptos_prelude_ReadSignal<std_string_String>, v7 : leptos_prelude_WriteSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7)
and method186 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>), struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>) : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>), struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> =
    v0
and closure160 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>), struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>) struct (v1 : int32, v2 : leptos_prelude_ReadSignal<std_string_String>, v3 : leptos_prelude_WriteSignal<std_string_String>) : struct (int32 * leptos_prelude_ReadSignal<std_string_String>) =
    let v4 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>), struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> = method186(v0)
    let func1_move_x = struct (v1, v2, v3) //
    let v5 : _ = func1_move_x
    let v6 : string = "(move |x| v4(x))($0)"
    let struct (v7 : int32, v8 : leptos_prelude_ReadSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr v5 v6 
    struct (v7, v8)
and closure158 (v0 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))>>) () : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let v7 : (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)) = Fable.Core.RustInterop.emitRustExpr () v6 
    let (a, b) = v7 
    let v11 : int32 = a
    let struct (v12 : leptos_prelude_ReadSignal<std_string_String>, v13 : leptos_prelude_WriteSignal<std_string_String>) = b
    let func1_from_result = struct (v11, v12, v13) //
    let v20 : _ = func1_from_result
    let v21 : string = $"true; $0 /*"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : string = $"*/ }}); //"
    let v24 : bool = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : string = $"_func1_from_v3"
    let v26 : Func0<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)), struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr () v25 
    let v27 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v28 : ((int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)) -> struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)) = closure159(v26)
    let v29 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr struct (v2, v28) v27 
    let v30 : unit = ()
    let v31 : string = $"true; let _func1_from_v30 = Func1::from(move |value| {{ //"
    let v32 : bool = Fable.Core.RustInterop.emitRustExpr () v31 
    let v33 : string = $"value"
    let struct (v34 : int32, v35 : leptos_prelude_ReadSignal<std_string_String>, v36 : leptos_prelude_WriteSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr () v33 
    let func1_from_result = struct (v34, v35) //
    let v37 : _ = func1_from_result
    let v38 : string = $"true; $0 /*"
    let v39 : bool = Fable.Core.RustInterop.emitRustExpr v37 v38 
    let v40 : string = $"*/ }}); //"
    let v41 : bool = Fable.Core.RustInterop.emitRustExpr () v40 
    let v42 : string = $"_func1_from_v30"
    let v43 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>), struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr () v42 
    let v44 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v45 : (struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>) -> struct (int32 * leptos_prelude_ReadSignal<std_string_String>)) = closure160(v43)
    let v46 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr struct (v29, v45) v44 
    v46
and closure161 () () : string =
    let v0 : string = ""
    v0
and closure162 () () : bool =
    true
and closure163 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure164 () () : Ref<Lifetime<StaticLifetime, Str>> =
    let v0 : string = ""
    let v1 : string = "r#\"" + v0 + "\"#"
    let v2 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v1 
    v2
and closure165 () () : string =
    let v0 : string = "Roll"
    v0
and method187 () : (unit -> string) =
    closure165()
and closure166 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and closure168 () () : string =
    let v0 : string = "[align-self:flex-start]"
    v0
and closure169 () () : bool =
    false
and closure170 () () : string =
    let v0 : string = "py-[4px]"
    v0
and closure171 (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option, v1 : leptos_prelude_ArcMemo<US31> option, v2 : Heap2) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v3 : string = ""
    let v4 : string = "r#\"" + v3 + "\"#"
    let v5 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v4 
    v5
and closure173 () (v0 : leptos_prelude_ArcMemo<US31>) : US65 =
    US65_0(v0)
and method189 () : (leptos_prelude_ArcMemo<US31> -> US65) =
    closure173()
and closure172 (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option, v1 : leptos_prelude_ArcMemo<US31> option, v2 : Heap2) () : string =
    let v5 : (leptos_prelude_ArcMemo<US31> -> US65) = method189()
    let v6 : US65 option = v1 |> Option.map v5 
    let v20 : US65 = US65_1
    let v21 : US65 = v6 |> Option.defaultValue v20 
    let v31 : US42 =
        match v21 with
        | US65_1 -> (* None *)
            US42_1
        | US65_0(v25) -> (* Some *)
            let v26 : string = $"leptos::prelude::ArcMemo::get(&$0)"
            let v27 : US31 = Fable.Core.RustInterop.emitRustExpr v25 v26 
            US42_0(v27)
    let v38 : US31 =
        match v31 with
        | US42_0(v32) -> (* Some *)
            match v32 with
            | US31_0(v33) -> (* Some *)
                US31_0(v33)
            | _ ->
                US31_1
        | _ ->
            US31_1
    match v38 with
    | US31_1 -> (* None *)
        let v40 : string = "Select..."
        v40
    | US31_0(v39) -> (* Some *)
        v39
and method188 (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option, v1 : leptos_prelude_ArcMemo<US31> option, v2 : Heap2) : (unit -> string) =
    closure172(v0, v1, v2)
and closure175 () (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>>) : US66 =
    US66_0(v0)
and method190 () : (leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> -> US66) =
    closure175()
and method192 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32>) : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32> =
    v0
and closure176 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32>) struct (v1 : int32, v2 : leptos_prelude_ReadSignal<std_string_String>) : int32 =
    let v3 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32> = method192(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let v6 : int32 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    v6
and method191 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32>) : (struct (int32 * leptos_prelude_ReadSignal<std_string_String>) -> int32) =
    closure176(v0)
and method193 (v0 : std_string_String) : std_string_String =
    v0
and closure177 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and method194 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), leptos_prelude_AnyView_>) : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), leptos_prelude_AnyView_> =
    v0
and closure178 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), leptos_prelude_AnyView_>) struct (v1 : int32, v2 : leptos_prelude_ReadSignal<std_string_String>) : leptos_prelude_AnyView_ =
    let v3 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), leptos_prelude_AnyView_> = method194(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let v6 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4 v5 
    v6
and closure174 (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option, v1 : leptos_prelude_ArcMemo<US31> option, v2 : Heap2) () : leptos_dom_Fragment =
    let v3 : string = "class=\"flex flex-1 flex-col p-[10px] gap-[7px] [border-left-width:1px] [border-bottom-width:1px] border-gray-200 bg-gray-100\""
    let v4 : string = ""
    let v5 : string = " " + v3 + v4 + ""
    let v8 : (leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> -> US66) = method190()
    let v9 : US66 option = v0 |> Option.map v8 
    let v23 : US66 = US66_1
    let v24 : US66 = v9 |> Option.defaultValue v23 
    let v34 : US67 =
        match v24 with
        | US66_1 -> (* None *)
            US67_1
        | US66_0(v28) -> (* Some *)
            let v29 : string = $"leptos::prelude::ArcMemo::get(&$0)"
            let v30 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr v28 v29 
            US67_0(v30)
    let v35 : (struct (int32 * leptos_prelude_ReadSignal<std_string_String>) []) = [||]
    let v36 : string = "$0.to_vec()"
    let v37 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr v35 v36 
    let v40 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> =
        match v34 with
        | US67_1 -> (* None *)
            v37
        | US67_0(v38) -> (* Some *)
            v38
    let v41 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v42 : (struct (int32 * leptos_prelude_ReadSignal<std_string_String>) []) = Fable.Core.RustInterop.emitRustExpr v40 v41 
    let v43 : uint64 = System.Convert.ToUInt64 v42.Length
    let v44 : bool = v43 = 0UL
    let v827 : leptos_dom_Fragment =
        if v44 then
            let v45 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
            let v46 : string = " " + v45 + v4 + ""
            let v47 : string = "class=\"[height:17px]\""
            let v48 : string = " " + v47 + v4 + ""
            let v49 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v50 : string = "fill=\"none\""
            let v51 : string = "height=\"100%\""
            let v52 : string = "viewBox=\"0 0 24 24\""
            let v53 : string = "stroke-width=\"1.5\""
            let v54 : string = "stroke=\"currentColor\""
            let v55 : string = "class=\"text-red-700\""
            let v56 : string = " " + v49 + v4 + ""
            let v57 : string = " " + v50 + v56 + ""
            let v58 : string = " " + v51 + v57 + ""
            let v59 : string = " " + v52 + v58 + ""
            let v60 : string = " " + v53 + v59 + ""
            let v61 : string = " " + v54 + v60 + ""
            let v62 : string = " " + v55 + v61 + ""
            let v63 : string = "stroke-linecap=\"round\""
            let v64 : string = "stroke-linejoin=\"round\""
            let v65 : string = "d=\"M6 18L18 6M6 6l12 12\""
            let v66 : string = " " + v63 + v4 + ""
            let v67 : string = " " + v64 + v66 + ""
            let v68 : string = " " + v65 + v67 + ""
            let v69 : string = "vec![" + v4 + "]"
            let v70 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v69 
            let v71 : string = "leptos::prelude::Fragment::new($0)"
            let v72 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v70 v71 
            let v73 : string = "leptos::prelude::AnyView::from($0)"
            let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v72 v73 
            let v75 : string = "path"
            let v76 : string = "<" + v75 + " " + v68 + ">move || { v74 }</" + v75 + ">"
            let v77 : string = "leptos::prelude::view! { " + v76 + " }"
            let v78 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v77 
            let v79 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v78 |> unbox
            let v80 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v79 v80 
            let v82 : string = "v81"
            let v83 : string = v82 + v4 
            let v84 : string = v83 + v4 
            let v85 : string = "vec![" + v84 + "]"
            let v86 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v85 
            let v87 : string = "leptos::prelude::Fragment::new($0)"
            let v88 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v86 v87 
            let v89 : string = "leptos::prelude::AnyView::from($0)"
            let v90 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v88 v89 
            let v91 : string = "svg"
            let v92 : string = "<" + v91 + " " + v62 + ">move || { v90 }</" + v91 + ">"
            let v93 : string = "leptos::prelude::view! { " + v92 + " }"
            let v94 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v93 
            let v95 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v94 |> unbox
            let v96 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v97 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v95 v96 
            let v98 : string = "v97"
            let v99 : string = v98 + v4 
            let v100 : string = v99 + v4 
            let v101 : string = "vec![" + v100 + "]"
            let v102 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v101 
            let v103 : string = "leptos::prelude::Fragment::new($0)"
            let v104 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v102 v103 
            let v105 : string = "leptos::prelude::AnyView::from($0)"
            let v106 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v104 v105 
            let v107 : string = "span"
            let v108 : string = "<" + v107 + " " + v48 + ">move || { v106 }</" + v107 + ">"
            let v109 : string = "leptos::prelude::view! { " + v108 + " }"
            let v110 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v109 
            let v111 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v110 |> unbox
            let v112 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v113 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v111 v112 
            let v114 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
            let v115 : string = " " + v114 + v4 + ""
            let v116 : string = "No data"
            (* run_target_args'
            let v121 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v122 : string = "&*$0"
            let v123 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v116 v122 
            let _run_target_args'_v121 = v123 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v124 : string = "&*$0"
            let v125 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v116 v124 
            let _run_target_args'_v121 = v125 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v126 : string = "&*$0"
            let v127 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v116 v126 
            let _run_target_args'_v121 = v127 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v129 : Ref<Str> = v116 |> unbox<Ref<Str>>
            let _run_target_args'_v121 = v129 
            #endif
#if FABLE_COMPILER_PYTHON
            let v133 : Ref<Str> = v116 |> unbox<Ref<Str>>
            let _run_target_args'_v121 = v133 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v137 : Ref<Str> = v116 |> unbox<Ref<Str>>
            let _run_target_args'_v121 = v137 
            #endif
#else
            let v141 : Ref<Str> = v116 |> unbox<Ref<Str>>
            let _run_target_args'_v121 = v141 
            #endif
            let v144 : Ref<Str> = _run_target_args'_v121 
            (* run_target_args'
            let v154 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v155 : string = "String::from($0)"
            let v156 : std_string_String = Fable.Core.RustInterop.emitRustExpr v144 v155 
            let _run_target_args'_v154 = v156 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v157 : string = "String::from($0)"
            let v158 : std_string_String = Fable.Core.RustInterop.emitRustExpr v144 v157 
            let _run_target_args'_v154 = v158 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v159 : string = "String::from($0)"
            let v160 : std_string_String = Fable.Core.RustInterop.emitRustExpr v144 v159 
            let _run_target_args'_v154 = v160 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v162 : std_string_String = v144 |> unbox<std_string_String>
            let _run_target_args'_v154 = v162 
            #endif
#if FABLE_COMPILER_PYTHON
            let v166 : std_string_String = v144 |> unbox<std_string_String>
            let _run_target_args'_v154 = v166 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v170 : std_string_String = v144 |> unbox<std_string_String>
            let _run_target_args'_v154 = v170 
            #endif
#else
            let v174 : std_string_String = v144 |> unbox<std_string_String>
            let _run_target_args'_v154 = v174 
            #endif
            let v177 : std_string_String = _run_target_args'_v154 
            let v183 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v184 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v177 v183 
            let v185 : string = "v184"
            let v186 : string = v185 + v4 
            let v187 : string = v186 + v4 
            let v188 : string = "vec![" + v187 + "]"
            let v189 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v188 
            let v190 : string = "leptos::prelude::Fragment::new($0)"
            let v191 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v189 v190 
            let v192 : string = "leptos::prelude::AnyView::from($0)"
            let v193 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v191 v192 
            let v194 : string = "pre"
            let v195 : string = "<" + v194 + " " + v115 + ">move || { v193 }</" + v194 + ">"
            let v196 : string = "leptos::prelude::view! { " + v195 + " }"
            let v197 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v196 
            let v198 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v197 |> unbox
            let v199 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v200 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v198 v199 
            let v201 : string = "v200"
            let v202 : string = v201 + v4 
            let v203 : string = v202 + v4 
            let v204 : string = "v113"
            let v205 : string = ", "
            let v206 : string = v204 + v205 
            let v207 : string = v206 + v203 
            let v208 : string = "vec![" + v207 + "]"
            let v209 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v208 
            let v210 : string = "leptos::prelude::Fragment::new($0)"
            let v211 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v209 v210 
            let v212 : string = "leptos::prelude::AnyView::from($0)"
            let v213 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v211 v212 
            let v214 : string = "div"
            let v215 : string = "<" + v214 + " " + v46 + ">move || { v213 }</" + v214 + ">"
            let v216 : string = "leptos::prelude::view! { " + v215 + " }"
            let v217 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v216 
            let v218 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v217 |> unbox
            let v219 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v220 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v218 v219 
            let v221 : string = "v220"
            let v222 : string = v221 + v4 
            let v223 : string = v222 + v4 
            let v224 : string = "vec![" + v223 + "]"
            let v225 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v224 
            let v226 : string = "leptos::prelude::Fragment::new($0)"
            let v227 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v225 v226 
            v227
        else
            let v230 : (leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> -> US66) = method190()
            let v231 : US66 option = v0 |> Option.map v230 
            let v245 : US66 = US66_1
            let v246 : US66 = v231 |> Option.defaultValue v245 
            match v246 with
            | US66_1 -> (* None *)
                let v821 : string = "vec![" + v4 + "]"
                let v822 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v821 
                let v823 : string = "leptos::prelude::Fragment::new($0)"
                let v824 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v822 v823 
                v824
            | US66_0(v250) -> (* Some *)
                let v251 : string = "$0"
                let v252 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> = Fable.Core.RustInterop.emitRustExpr v250 v251 
                let v253 : unit = ()
                let v254 : string = $"true; let _func1_from_v253 = Func1::from(move |value| {{ //"
                let v255 : bool = Fable.Core.RustInterop.emitRustExpr () v254 
                let v256 : string = $"value"
                let struct (v257 : int32, v258 : leptos_prelude_ReadSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr () v256 
                let func1_from_result = v257 //
                let v259 : _ = func1_from_result
                let v260 : string = $"true; $0 /*"
                let v261 : bool = Fable.Core.RustInterop.emitRustExpr v259 v260 
                let v262 : string = $"*/ }}); //"
                let v263 : bool = Fable.Core.RustInterop.emitRustExpr () v262 
                let v264 : string = $"_func1_from_v253"
                let v265 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32> = Fable.Core.RustInterop.emitRustExpr () v264 
                let v266 : (struct (int32 * leptos_prelude_ReadSignal<std_string_String>) -> int32) = method191(v265)
                let v267 : unit = ()
                let v268 : string = $"true; let _func1_from_v267 = Func1::from(move |value| {{ //"
                let v269 : bool = Fable.Core.RustInterop.emitRustExpr () v268 
                let v270 : string = $"value"
                let struct (v271 : int32, v272 : leptos_prelude_ReadSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr () v270 
                let v273 : string = $"leptos::prelude::ReadSignal::get(&$0)"
                let v274 : std_string_String = Fable.Core.RustInterop.emitRustExpr v272 v273 
                let v275 : std_string_String = method193(v274)
                let v276 : unit = ()
                let v277 : string = $"true; let _func0_from_v276 = Func0::from(move || {{ //"
                let v278 : bool = Fable.Core.RustInterop.emitRustExpr () v277 
                let v279 : string = "fable_library_rust::String_::fromString($0)"
                let v280 : string = Fable.Core.RustInterop.emitRustExpr v274 v279 
                let v281 : leptos_prelude_ArcRwSignal<Heap1> = v2.l0
                let v282 : string = "Box::pin($0)"
                let v283 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v281 v282 
                let v284 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                let v285 : Heap1 = Fable.Core.RustInterop.emitRustExpr v283 v284 
                let v286 : leptos_prelude_ArcRwSignal<Heap0> = v285.l3
                let v287 : string = "Box::pin($0)"
                let v288 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v286 v287 
                let v289 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                let v290 : Heap0 = Fable.Core.RustInterop.emitRustExpr v288 v289 
                let v291 : Vec<(bool * std_string_String)> = v290.l0
                let v292 : std_string_String option = v290.l1
                let v293 : int32 = v290.l2
                let v294 : int32 = v290.l3
                let v295 : US1 = v290.l4
                let v296 : leptos_prelude_ArcRwSignal<Heap1> = v2.l0
                let v297 : string = "Box::pin($0)"
                let v298 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v296 v297 
                let v299 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                let v300 : Heap1 = Fable.Core.RustInterop.emitRustExpr v298 v299 
                let v301 : leptos_prelude_ArcRwSignal<Heap0> = v300.l3
                (* run_target_args'
                let v306 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v307 : string = "&*$0"
                let v308 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v280 v307 
                let _run_target_args'_v306 = v308 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v309 : string = "&*$0"
                let v310 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v280 v309 
                let _run_target_args'_v306 = v310 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v311 : string = "&*$0"
                let v312 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v280 v311 
                let _run_target_args'_v306 = v312 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v314 : Ref<Str> = v280 |> unbox<Ref<Str>>
                let _run_target_args'_v306 = v314 
                #endif
#if FABLE_COMPILER_PYTHON
                let v318 : Ref<Str> = v280 |> unbox<Ref<Str>>
                let _run_target_args'_v306 = v318 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v322 : Ref<Str> = v280 |> unbox<Ref<Str>>
                let _run_target_args'_v306 = v322 
                #endif
#else
                let v326 : Ref<Str> = v280 |> unbox<Ref<Str>>
                let _run_target_args'_v306 = v326 
                #endif
                let v329 : Ref<Str> = _run_target_args'_v306 
                (* run_target_args'
                let v339 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v340 : string = "String::from($0)"
                let v341 : std_string_String = Fable.Core.RustInterop.emitRustExpr v329 v340 
                let _run_target_args'_v339 = v341 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v342 : string = "String::from($0)"
                let v343 : std_string_String = Fable.Core.RustInterop.emitRustExpr v329 v342 
                let _run_target_args'_v339 = v343 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v344 : string = "String::from($0)"
                let v345 : std_string_String = Fable.Core.RustInterop.emitRustExpr v329 v344 
                let _run_target_args'_v339 = v345 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v347 : std_string_String = v329 |> unbox<std_string_String>
                let _run_target_args'_v339 = v347 
                #endif
#if FABLE_COMPILER_PYTHON
                let v351 : std_string_String = v329 |> unbox<std_string_String>
                let _run_target_args'_v339 = v351 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v355 : std_string_String = v329 |> unbox<std_string_String>
                let _run_target_args'_v339 = v355 
                #endif
#else
                let v359 : std_string_String = v329 |> unbox<std_string_String>
                let _run_target_args'_v339 = v359 
                #endif
                let v362 : std_string_String = _run_target_args'_v339 
                let v369 : std_string_String option = Some v362 
                let v372 : Heap0 = {l0 = v291; l1 = v369; l2 = v293; l3 = v294; l4 = v295} : Heap0
                let v373 : string = $"true; leptos::prelude::ArcRwSignal::set(&$0, $1); //"
                let v374 : bool = Fable.Core.RustInterop.emitRustExpr struct (v301, v372) v373 
                // rust.func0_from / is_unit
                let v375 : string = $"true; /*"
                let v376 : bool = Fable.Core.RustInterop.emitRustExpr () v375 
                let v377 : string = $"*/ }}); //"
                let v378 : bool = Fable.Core.RustInterop.emitRustExpr () v377 
                let v379 : string = $"_func0_from_v276"
                let v380 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v379 
                let v381 : string = "flex"
                let v382 : string = "flex-1"
                let v383 : string = "gap-[10px]"
                let v384 : string = "[align-items:center]"
                let v385 : string = "[justify-content:center]"
                let v386 : string = "inline-block"
                let v387 : string = "rounded"
                let v388 : string = "border"
                let v389 : string = "border-gray-400"
                let v390 : string = "hover:bg-gray-100"
                let v391 : string = "px-[22px]"
                let v392 : string = "py-1"
                let v393 : string = "text-sm"
                let v394 : string = "text-gray-900"
                let v395 : string = "bg-gray-200"
                let v396 : string = "hover:text-gray-600"
                let v397 : string = "focus:outline-none"
                let v398 : string = "focus:ring"
                let v399 : string = "active:text-gray-500"
                let v400 : string list = []
                let v402 : string list = v399 :: v400 
                let v406 : string list = v398 :: v402 
                let v410 : string list = v397 :: v406 
                let v414 : string list = v396 :: v410 
                let v418 : string list = v395 :: v414 
                let v422 : string list = v394 :: v418 
                let v426 : string list = v393 :: v422 
                let v430 : string list = v392 :: v426 
                let v434 : string list = v391 :: v430 
                let v438 : string list = v390 :: v434 
                let v442 : string list = v389 :: v438 
                let v446 : string list = v388 :: v442 
                let v450 : string list = v387 :: v446 
                let v454 : string list = v386 :: v450 
                let v458 : string list = v385 :: v454 
                let v462 : string list = v384 :: v458 
                let v466 : string list = v383 :: v462 
                let v470 : string list = v382 :: v466 
                let v474 : string list = v381 :: v470 
                let v480 : unit = ()
                let _let'_v480 =
                    seq {
                        yield! v474 
                        (* indent
                        ()
                    indent *)
                    }
                    (* indent
                    ()
                indent *)
                let v483 : string seq = _let'_v480 
                let v490 : (string -> (string seq -> string)) = String.concat
                let v491 : string = " "
                let v492 : (string seq -> string) = v490 v491
                let v493 : string = v492 v483
                (* run_target_args'
                let v500 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v501 : string = "&*$0"
                let v502 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v493 v501 
                let _run_target_args'_v500 = v502 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v503 : string = "&*$0"
                let v504 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v493 v503 
                let _run_target_args'_v500 = v504 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v505 : string = "&*$0"
                let v506 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v493 v505 
                let _run_target_args'_v500 = v506 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v508 : Ref<Str> = v493 |> unbox<Ref<Str>>
                let _run_target_args'_v500 = v508 
                #endif
#if FABLE_COMPILER_PYTHON
                let v512 : Ref<Str> = v493 |> unbox<Ref<Str>>
                let _run_target_args'_v500 = v512 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v516 : Ref<Str> = v493 |> unbox<Ref<Str>>
                let _run_target_args'_v500 = v516 
                #endif
#else
                let v520 : Ref<Str> = v493 |> unbox<Ref<Str>>
                let _run_target_args'_v500 = v520 
                #endif
                let v523 : Ref<Str> = _run_target_args'_v500 
                (* run_target_args'
                let v533 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v534 : string = "String::from($0)"
                let v535 : std_string_String = Fable.Core.RustInterop.emitRustExpr v523 v534 
                let _run_target_args'_v533 = v535 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v536 : string = "String::from($0)"
                let v537 : std_string_String = Fable.Core.RustInterop.emitRustExpr v523 v536 
                let _run_target_args'_v533 = v537 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v538 : string = "String::from($0)"
                let v539 : std_string_String = Fable.Core.RustInterop.emitRustExpr v523 v538 
                let _run_target_args'_v533 = v539 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v541 : std_string_String = v523 |> unbox<std_string_String>
                let _run_target_args'_v533 = v541 
                #endif
#if FABLE_COMPILER_PYTHON
                let v545 : std_string_String = v523 |> unbox<std_string_String>
                let _run_target_args'_v533 = v545 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v549 : std_string_String = v523 |> unbox<std_string_String>
                let _run_target_args'_v533 = v549 
                #endif
#else
                let v553 : std_string_String = v523 |> unbox<std_string_String>
                let _run_target_args'_v533 = v553 
                #endif
                let v556 : std_string_String = _run_target_args'_v533 
                let v562 : string = "$0"
                let v563 : std_string_String = Fable.Core.RustInterop.emitRustExpr v556 v562 
                let v564 : string = "class=v563"
                let v565 : string = "on:click=move |_| v380()"
                let v566 : string = "aria-label=v275"
                let v567 : string = " " + v564 + v4 + ""
                let v568 : string = " " + v565 + v567 + ""
                let v569 : string = " " + v566 + v568 + ""
                let v570 : string = "fable_library_rust::String_::fromString($0)"
                let v571 : string = Fable.Core.RustInterop.emitRustExpr v274 v570 
                let v574 : (leptos_prelude_ArcMemo<US31> -> US65) = method189()
                let v575 : US65 option = v1 |> Option.map v574 
                let v589 : US65 = US65_1
                let v590 : US65 = v575 |> Option.defaultValue v589 
                let v600 : US42 =
                    match v590 with
                    | US65_1 -> (* None *)
                        US42_1
                    | US65_0(v594) -> (* Some *)
                        let v595 : string = $"leptos::prelude::ArcMemo::get(&$0)"
                        let v596 : US31 = Fable.Core.RustInterop.emitRustExpr v594 v595 
                        US42_0(v596)
                let v607 : US31 =
                    match v600 with
                    | US42_0(v601) -> (* Some *)
                        match v601 with
                        | US31_0(v602) -> (* Some *)
                            US31_0(v602)
                        | _ ->
                            US31_1
                    | _ ->
                        US31_1
                let v696 : leptos_prelude_AnyView_ =
                    match v607 with
                    | US31_0(v608) -> (* Some *)
                        let v609 : bool = v571 = v608
                        if v609 then
                            let v610 : string = "$0"
                            let v611 : (unit -> string) = closure177()
                            let v612 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v611 v610 
                            let v613 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                            let v614 : string = "fill=\"none\""
                            let v615 : string = "viewBox=\"0 0 24 24\""
                            let v616 : string = "stroke-width=\"1.5\""
                            let v617 : string = "stroke=\"currentColor\""
                            let v618 : string = "class=move || \" \".to_owned() + &v612(())"
                            let v619 : string = " " + v613 + v4 + ""
                            let v620 : string = " " + v614 + v619 + ""
                            let v621 : string = " " + v615 + v620 + ""
                            let v622 : string = " " + v616 + v621 + ""
                            let v623 : string = " " + v617 + v622 + ""
                            let v624 : string = " " + v618 + v623 + ""
                            let v625 : string = "cx=\"12\""
                            let v626 : string = "cy=\"12\""
                            let v627 : string = "r=\"9\""
                            let v628 : string = "stroke-linecap=\"round\""
                            let v629 : string = "stroke-linejoin=\"round\""
                            let v630 : string = " " + v625 + v4 + ""
                            let v631 : string = " " + v626 + v630 + ""
                            let v632 : string = " " + v627 + v631 + ""
                            let v633 : string = " " + v628 + v632 + ""
                            let v634 : string = " " + v629 + v633 + ""
                            let v635 : string = "vec![" + v4 + "]"
                            let v636 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v635 
                            let v637 : string = "leptos::prelude::Fragment::new($0)"
                            let v638 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v636 v637 
                            let v639 : string = "leptos::prelude::AnyView::from($0)"
                            let v640 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v638 v639 
                            let v641 : string = "circle"
                            let v642 : string = "<" + v641 + " " + v634 + ">move || { v640 }</" + v641 + ">"
                            let v643 : string = "leptos::prelude::view! { " + v642 + " }"
                            let v644 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v643 
                            let v645 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v644 |> unbox
                            let v646 : string = "leptos::prelude::IntoAny::into_any($0)"
                            let v647 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v645 v646 
                            let v648 : string = "stroke-linecap=\"round\""
                            let v649 : string = "stroke-linejoin=\"round\""
                            let v650 : string = "d=\"M9 12l2 2l4 -4\""
                            let v651 : string = " " + v648 + v4 + ""
                            let v652 : string = " " + v649 + v651 + ""
                            let v653 : string = " " + v650 + v652 + ""
                            let v654 : string = "vec![" + v4 + "]"
                            let v655 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v654 
                            let v656 : string = "leptos::prelude::Fragment::new($0)"
                            let v657 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v655 v656 
                            let v658 : string = "leptos::prelude::AnyView::from($0)"
                            let v659 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v657 v658 
                            let v660 : string = "path"
                            let v661 : string = "<" + v660 + " " + v653 + ">move || { v659 }</" + v660 + ">"
                            let v662 : string = "leptos::prelude::view! { " + v661 + " }"
                            let v663 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v662 
                            let v664 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v663 |> unbox
                            let v665 : string = "leptos::prelude::IntoAny::into_any($0)"
                            let v666 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v664 v665 
                            let v667 : string = "v666"
                            let v668 : string = v667 + v4 
                            let v669 : string = v668 + v4 
                            let v670 : string = "v647"
                            let v671 : string = ", "
                            let v672 : string = v670 + v671 
                            let v673 : string = v672 + v669 
                            let v674 : string = "vec![" + v673 + "]"
                            let v675 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v674 
                            let v676 : string = "leptos::prelude::Fragment::new($0)"
                            let v677 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v675 v676 
                            let v678 : string = "leptos::prelude::AnyView::from($0)"
                            let v679 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v677 v678 
                            let v680 : string = "svg"
                            let v681 : string = "<" + v680 + " " + v624 + ">move || { v679 }</" + v680 + ">"
                            let v682 : string = "leptos::prelude::view! { " + v681 + " }"
                            let v683 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v682 
                            let v684 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v683 |> unbox
                            let v685 : string = "leptos::prelude::IntoAny::into_any($0)"
                            let v686 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v684 v685 
                            v686
                        else
                            let v687 : string = "vec![" + v4 + "]"
                            let v688 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v687 
                            let v689 : string = "leptos::prelude::IntoAny::into_any($0)"
                            let v690 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v688 v689 
                            v690
                    | _ ->
                        let v692 : string = "vec![" + v4 + "]"
                        let v693 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v692 
                        let v694 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v695 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v693 v694 
                        v695
                (* run_target_args'
                let v701 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v702 : string = "&*$0"
                let v703 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v571 v702 
                let _run_target_args'_v701 = v703 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v704 : string = "&*$0"
                let v705 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v571 v704 
                let _run_target_args'_v701 = v705 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v706 : string = "&*$0"
                let v707 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v571 v706 
                let _run_target_args'_v701 = v707 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v709 : Ref<Str> = v571 |> unbox<Ref<Str>>
                let _run_target_args'_v701 = v709 
                #endif
#if FABLE_COMPILER_PYTHON
                let v713 : Ref<Str> = v571 |> unbox<Ref<Str>>
                let _run_target_args'_v701 = v713 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v717 : Ref<Str> = v571 |> unbox<Ref<Str>>
                let _run_target_args'_v701 = v717 
                #endif
#else
                let v721 : Ref<Str> = v571 |> unbox<Ref<Str>>
                let _run_target_args'_v701 = v721 
                #endif
                let v724 : Ref<Str> = _run_target_args'_v701 
                (* run_target_args'
                let v734 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v735 : string = "String::from($0)"
                let v736 : std_string_String = Fable.Core.RustInterop.emitRustExpr v724 v735 
                let _run_target_args'_v734 = v736 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v737 : string = "String::from($0)"
                let v738 : std_string_String = Fable.Core.RustInterop.emitRustExpr v724 v737 
                let _run_target_args'_v734 = v738 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v739 : string = "String::from($0)"
                let v740 : std_string_String = Fable.Core.RustInterop.emitRustExpr v724 v739 
                let _run_target_args'_v734 = v740 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v742 : std_string_String = v724 |> unbox<std_string_String>
                let _run_target_args'_v734 = v742 
                #endif
#if FABLE_COMPILER_PYTHON
                let v746 : std_string_String = v724 |> unbox<std_string_String>
                let _run_target_args'_v734 = v746 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v750 : std_string_String = v724 |> unbox<std_string_String>
                let _run_target_args'_v734 = v750 
                #endif
#else
                let v754 : std_string_String = v724 |> unbox<std_string_String>
                let _run_target_args'_v734 = v754 
                #endif
                let v757 : std_string_String = _run_target_args'_v734 
                let v763 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                let v764 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v757 v763 
                let v765 : string = "v764"
                let v766 : string = v765 + v4 
                let v767 : string = v766 + v4 
                let v768 : string = "v696"
                let v769 : string = ", "
                let v770 : string = v768 + v769 
                let v771 : string = v770 + v767 
                let v772 : string = "vec![" + v771 + "]"
                let v773 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v772 
                let v774 : string = "leptos::prelude::Fragment::new($0)"
                let v775 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v773 v774 
                let v776 : string = "leptos::prelude::AnyView::from($0)"
                let v777 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v775 v776 
                let v778 : string = "button"
                let v779 : string = "<" + v778 + " " + v569 + ">move || { v777 }</" + v778 + ">"
                let v780 : string = "leptos::prelude::view! { " + v779 + " }"
                let v781 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v780 
                let v782 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Button>> = v781 |> unbox
                let v783 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v784 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v782 v783 
                let v785 : string = "v784"
                let v786 : string = v785 + v4 
                let v787 : string = v786 + v4 
                let v788 : string = "vec![" + v787 + "]"
                let v789 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v788 
                let v790 : string = "leptos::prelude::Fragment::new($0)"
                let v791 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v789 v790 
                let v792 : string = "leptos::prelude::AnyView::from($0)"
                let v793 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v791 v792 
                let func1_from_result = v793 //
                let v794 : _ = func1_from_result
                let v795 : string = $"true; $0 /*"
                let v796 : bool = Fable.Core.RustInterop.emitRustExpr v794 v795 
                let v797 : string = $"*/ }}); //"
                let v798 : bool = Fable.Core.RustInterop.emitRustExpr () v797 
                let v799 : string = $"_func1_from_v267"
                let v800 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v799 
                let v801 : string = "each=v252"
                let v802 : string = "key=move |x| v266(x.to_owned())"
                let v803 : string = "let:x"
                let v804 : (struct (int32 * leptos_prelude_ReadSignal<std_string_String>) -> leptos_prelude_AnyView_) = closure178(v800)
                let v805 : string = "children=move |x| v804(x)"
                let v806 : string = " " + v801 + v4 + ""
                let v807 : string = " " + v802 + v806 + ""
                let v808 : string = " " + v803 + v807 + ""
                let v809 : string = " " + v805 + v808 + ""
                let v810 : string = "leptos::prelude::For"
                let v811 : string = "<" + v810 + " " + v809 + " />"
                let v812 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::view! { " + v811 + " })"
                let v813 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr () v812 
                let v814 : string = "v813"
                let v815 : string = v814 + v4 
                let v816 : string = v815 + v4 
                let v817 : string = "vec![" + v816 + "]"
                let v818 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v817 
                let v819 : string = "leptos::prelude::Fragment::new($0)"
                let v820 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v818 v819 
                v820
    let v828 : string = "leptos::prelude::AnyView::from($0)"
    let v829 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v827 v828 
    let v830 : string = "div"
    let v831 : string = "<" + v830 + " " + v5 + ">move || { v829 }</" + v830 + ">"
    let v832 : string = "leptos::prelude::view! { " + v831 + " }"
    let v833 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v832 
    let v834 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v833 |> unbox
    let v835 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v836 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v834 v835 
    let v837 : string = "v836"
    let v838 : string = v837 + v4 
    let v839 : string = v838 + v4 
    let v840 : string = "vec![" + v839 + "]"
    let v841 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v840 
    let v842 : string = "leptos::prelude::Fragment::new($0)"
    let v843 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v841 v842 
    v843
and method195 (v0 : Func0<leptos_dom_Fragment>) : Func0<leptos_dom_Fragment> =
    v0
and closure179 () () : string =
    let v0 : string = ""
    v0
and method196 (v0 : Func0<std_string_String, unit>) : Func0<std_string_String, unit> =
    v0
and closure180 (v0 : Func0<std_string_String, unit>) (v1 : std_string_String) : unit =
    let v2 : Func0<std_string_String, unit> = method196(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    Fable.Core.RustInterop.emitRustExpr v3 v4 
    ()
and closure181 (v0 : leptos_prelude_ArcAction<Heap6, Result<US59, std_string_String>>) () : bool =
    let v1 : string = "leptos::prelude::ArcAction::pending(&$0)"
    let v2 : leptos_prelude_ArcMemo<bool> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    v4
and method197 (v0 : Func0<bool>) : Func0<bool> =
    v0
and closure182 () () : string =
    let v0 : string = "[width:15px] [height:14px]"
    v0
and closure167 (v0 : Heap2, v1 : leptos_prelude_ArcAction<Heap6, Result<US59, std_string_String>>, v2 : leptos_prelude_ArcMemo<string option>, v3 : leptos_prelude_ArcMemo<US31>, v4 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>>) () : leptos_dom_Fragment =
    let v5 : string = "class=\"flex flex-col p-[10px] gap-[11px]\""
    let v6 : string = ""
    let v7 : string = " " + v5 + v6 + ""
    let v8 : string = "class=\"flex [flex-direction:column] [gap:2px] [align-items:flex-start]\""
    let v9 : string = " " + v8 + v6 + ""
    let v10 : string = "Account"
    (* run_target_args'
    let v15 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v16 : string = "&*$0"
    let v17 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v10 v16 
    let _run_target_args'_v15 = v17 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v18 : string = "&*$0"
    let v19 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v10 v18 
    let _run_target_args'_v15 = v19 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v20 : string = "&*$0"
    let v21 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v10 v20 
    let _run_target_args'_v15 = v21 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v23 : Ref<Str> = v10 |> unbox<Ref<Str>>
    let _run_target_args'_v15 = v23 
    #endif
#if FABLE_COMPILER_PYTHON
    let v27 : Ref<Str> = v10 |> unbox<Ref<Str>>
    let _run_target_args'_v15 = v27 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v31 : Ref<Str> = v10 |> unbox<Ref<Str>>
    let _run_target_args'_v15 = v31 
    #endif
#else
    let v35 : Ref<Str> = v10 |> unbox<Ref<Str>>
    let _run_target_args'_v15 = v35 
    #endif
    let v38 : Ref<Str> = _run_target_args'_v15 
    (* run_target_args'
    let v48 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v49 : string = "String::from($0)"
    let v50 : std_string_String = Fable.Core.RustInterop.emitRustExpr v38 v49 
    let _run_target_args'_v48 = v50 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v51 : string = "String::from($0)"
    let v52 : std_string_String = Fable.Core.RustInterop.emitRustExpr v38 v51 
    let _run_target_args'_v48 = v52 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v53 : string = "String::from($0)"
    let v54 : std_string_String = Fable.Core.RustInterop.emitRustExpr v38 v53 
    let _run_target_args'_v48 = v54 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v56 : std_string_String = v38 |> unbox<std_string_String>
    let _run_target_args'_v48 = v56 
    #endif
#if FABLE_COMPILER_PYTHON
    let v60 : std_string_String = v38 |> unbox<std_string_String>
    let _run_target_args'_v48 = v60 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v64 : std_string_String = v38 |> unbox<std_string_String>
    let _run_target_args'_v48 = v64 
    #endif
#else
    let v68 : std_string_String = v38 |> unbox<std_string_String>
    let _run_target_args'_v48 = v68 
    #endif
    let v71 : std_string_String = _run_target_args'_v48 
    let v77 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v78 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v71 v77 
    let v79 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option = None
    let v80 : leptos_prelude_ArcMemo<US31> option = None
    let v82 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option = Some v4 
    let v86 : leptos_prelude_ArcMemo<US31> option = Some v3 
    let v89 : string = "vec![" + v6 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v92 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v90 v91 
    let v93 : string = "class=\"flex flex-col [position:relative]\""
    let v94 : string = " " + v93 + v6 + ""
    let v95 : string = "$0"
    let v96 : (unit -> string) = closure168()
    let v97 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v96 v95 
    let v98 : string = "$0"
    let v99 : (unit -> bool) = closure169()
    let v100 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v99 v98 
    let v101 : string = "class=\"[position:absolute] [right:0] [top:0]\""
    let v102 : string = " " + v101 + v6 + ""
    let v103 : string = "v92"
    let v104 : string = v103 + v6 
    let v105 : string = v104 + v6 
    let v106 : string = "vec![" + v105 + "]"
    let v107 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v106 
    let v108 : string = "leptos::prelude::Fragment::new($0)"
    let v109 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v107 v108 
    let v110 : string = "leptos::prelude::AnyView::from($0)"
    let v111 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v109 v110 
    let v112 : string = "div"
    let v113 : string = "<" + v112 + " " + v102 + ">move || { v111 }</" + v112 + ">"
    let v114 : string = "leptos::prelude::view! { " + v113 + " }"
    let v115 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v114 
    let v116 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v115 |> unbox
    let v117 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v118 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v116 v117 
    let v119 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v97(())"
    let v120 : string = "open=move || v100(())"
    let v121 : string = " " + v119 + v6 + ""
    let v122 : string = " " + v120 + v121 + ""
    let v123 : string = "$0"
    let v124 : (unit -> string) = closure170()
    let v125 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v124 v123 
    let v126 : string = "$0"
    let v127 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure171(v82, v86, v0)
    let v128 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v127 v126 
    let v129 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v128(()) + \" \" + &v125(())"
    let v130 : string = " " + v129 + v6 + ""
    let v131 : string = "class=\"flex items-center gap-2\""
    let v132 : string = " " + v131 + v6 + ""
    let v133 : (unit -> string) = method188(v82, v86, v0)
    let v134 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
    let v135 : string = " " + v134 + v6 + ""
    let v136 : string = v133 ()
    (* run_target_args'
    let v141 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v142 : string = "&*$0"
    let v143 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v136 v142 
    let _run_target_args'_v141 = v143 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v144 : string = "&*$0"
    let v145 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v136 v144 
    let _run_target_args'_v141 = v145 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v146 : string = "&*$0"
    let v147 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v136 v146 
    let _run_target_args'_v141 = v147 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v149 : Ref<Str> = v136 |> unbox<Ref<Str>>
    let _run_target_args'_v141 = v149 
    #endif
#if FABLE_COMPILER_PYTHON
    let v153 : Ref<Str> = v136 |> unbox<Ref<Str>>
    let _run_target_args'_v141 = v153 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v157 : Ref<Str> = v136 |> unbox<Ref<Str>>
    let _run_target_args'_v141 = v157 
    #endif
#else
    let v161 : Ref<Str> = v136 |> unbox<Ref<Str>>
    let _run_target_args'_v141 = v161 
    #endif
    let v164 : Ref<Str> = _run_target_args'_v141 
    (* run_target_args'
    let v174 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v175 : string = "String::from($0)"
    let v176 : std_string_String = Fable.Core.RustInterop.emitRustExpr v164 v175 
    let _run_target_args'_v174 = v176 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v177 : string = "String::from($0)"
    let v178 : std_string_String = Fable.Core.RustInterop.emitRustExpr v164 v177 
    let _run_target_args'_v174 = v178 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v179 : string = "String::from($0)"
    let v180 : std_string_String = Fable.Core.RustInterop.emitRustExpr v164 v179 
    let _run_target_args'_v174 = v180 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v182 : std_string_String = v164 |> unbox<std_string_String>
    let _run_target_args'_v174 = v182 
    #endif
#if FABLE_COMPILER_PYTHON
    let v186 : std_string_String = v164 |> unbox<std_string_String>
    let _run_target_args'_v174 = v186 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v190 : std_string_String = v164 |> unbox<std_string_String>
    let _run_target_args'_v174 = v190 
    #endif
#else
    let v194 : std_string_String = v164 |> unbox<std_string_String>
    let _run_target_args'_v174 = v194 
    #endif
    let v197 : std_string_String = _run_target_args'_v174 
    let v203 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v204 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v197 v203 
    let v205 : string = "v204"
    let v206 : string = v205 + v6 
    let v207 : string = v206 + v6 
    let v208 : string = "vec![" + v207 + "]"
    let v209 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v208 
    let v210 : string = "leptos::prelude::Fragment::new($0)"
    let v211 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v209 v210 
    let v212 : string = "leptos::prelude::AnyView::from($0)"
    let v213 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v211 v212 
    let v214 : string = "span"
    let v215 : string = "<" + v214 + " " + v135 + ">move || { v213 }</" + v214 + ">"
    let v216 : string = "leptos::prelude::view! { " + v215 + " }"
    let v217 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v216 
    let v218 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v217 |> unbox
    let v219 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v220 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v218 v219 
    let v221 : string = "v220"
    let v222 : string = v221 + v6 
    let v223 : string = v222 + v6 
    let v224 : string = "vec![" + v223 + "]"
    let v225 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v224 
    let v226 : string = "leptos::prelude::Fragment::new($0)"
    let v227 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v225 v226 
    let v228 : string = "leptos::prelude::AnyView::from($0)"
    let v229 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v227 v228 
    let v230 : string = "<" + v112 + " " + v132 + ">move || { v229 }</" + v112 + ">"
    let v231 : string = "leptos::prelude::view! { " + v230 + " }"
    let v232 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v231 
    let v233 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v232 |> unbox
    let v234 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v235 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v233 v234 
    let v236 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
    let v237 : string = " " + v236 + v6 + ""
    let v238 : string = "$0"
    let v239 : (unit -> string) = closure166()
    let v240 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v239 v238 
    let v241 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v242 : string = "viewBox=\"0 0 20 20\""
    let v243 : string = "fill=\"currentColor\""
    let v244 : string = "class=move || \" \".to_owned() + &v240(())"
    let v245 : string = " " + v241 + v6 + ""
    let v246 : string = " " + v242 + v245 + ""
    let v247 : string = " " + v243 + v246 + ""
    let v248 : string = " " + v244 + v247 + ""
    let v249 : string = "fill-rule=\"evenodd\""
    let v250 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
    let v251 : string = "clip-rule=\"evenodd\""
    let v252 : string = " " + v249 + v6 + ""
    let v253 : string = " " + v250 + v252 + ""
    let v254 : string = " " + v251 + v253 + ""
    let v255 : string = "vec![" + v6 + "]"
    let v256 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v255 
    let v257 : string = "leptos::prelude::Fragment::new($0)"
    let v258 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v256 v257 
    let v259 : string = "leptos::prelude::AnyView::from($0)"
    let v260 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v258 v259 
    let v261 : string = "path"
    let v262 : string = "<" + v261 + " " + v254 + ">move || { v260 }</" + v261 + ">"
    let v263 : string = "leptos::prelude::view! { " + v262 + " }"
    let v264 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v263 
    let v265 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v264 |> unbox
    let v266 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v267 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v265 v266 
    let v268 : string = "v267"
    let v269 : string = v268 + v6 
    let v270 : string = v269 + v6 
    let v271 : string = "vec![" + v270 + "]"
    let v272 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v271 
    let v273 : string = "leptos::prelude::Fragment::new($0)"
    let v274 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v272 v273 
    let v275 : string = "leptos::prelude::AnyView::from($0)"
    let v276 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v274 v275 
    let v277 : string = "svg"
    let v278 : string = "<" + v277 + " " + v248 + ">move || { v276 }</" + v277 + ">"
    let v279 : string = "leptos::prelude::view! { " + v278 + " }"
    let v280 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v279 
    let v281 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v280 |> unbox
    let v282 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v283 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v281 v282 
    let v284 : string = "v283"
    let v285 : string = v284 + v6 
    let v286 : string = v285 + v6 
    let v287 : string = "vec![" + v286 + "]"
    let v288 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v287 
    let v289 : string = "leptos::prelude::Fragment::new($0)"
    let v290 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v288 v289 
    let v291 : string = "leptos::prelude::AnyView::from($0)"
    let v292 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v290 v291 
    let v293 : string = "<" + v214 + " " + v237 + ">move || { v292 }</" + v214 + ">"
    let v294 : string = "leptos::prelude::view! { " + v293 + " }"
    let v295 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v294 
    let v296 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v295 |> unbox
    let v297 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v298 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v296 v297 
    let v299 : string = "v298"
    let v300 : string = v299 + v6 
    let v301 : string = v300 + v6 
    let v302 : string = "v235"
    let v303 : string = ", "
    let v304 : string = v302 + v303 
    let v305 : string = v304 + v301 
    let v306 : string = "vec![" + v305 + "]"
    let v307 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v306 
    let v308 : string = "leptos::prelude::Fragment::new($0)"
    let v309 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v307 v308 
    let v310 : string = "leptos::prelude::AnyView::from($0)"
    let v311 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v309 v310 
    let v312 : string = "summary"
    let v313 : string = "<" + v312 + " " + v130 + ">move || { v311 }</" + v312 + ">"
    let v314 : string = "leptos::prelude::view! { " + v313 + " }"
    let v315 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v314 
    let v316 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v315 |> unbox
    let v317 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v318 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v316 v317 
    let v319 : string = "class=\"flex flex-1 flex-col\""
    let v320 : string = " " + v319 + v6 + ""
    let v321 : string = "Func0::new(move || $0())"
    let v322 : (unit -> leptos_dom_Fragment) = closure174(v82, v86, v0)
    let v323 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v322 v321 
    let v324 : Func0<leptos_dom_Fragment> = method195(v323)
    let v325 : string = "(move || v324())()"
    let v326 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v325 
    let v327 : string = "leptos::prelude::AnyView::from($0)"
    let v328 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v326 v327 
    let v329 : string = "<" + v112 + " " + v320 + ">move || { v328 }</" + v112 + ">"
    let v330 : string = "leptos::prelude::view! { " + v329 + " }"
    let v331 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v330 
    let v332 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v331 |> unbox
    let v333 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v334 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v332 v333 
    let v335 : string = "v334"
    let v336 : string = v335 + v6 
    let v337 : string = v336 + v6 
    let v338 : string = "v318"
    let v339 : string = v338 + v303 
    let v340 : string = v339 + v337 
    let v341 : string = "vec![" + v340 + "]"
    let v342 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v341 
    let v343 : string = "leptos::prelude::Fragment::new($0)"
    let v344 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v342 v343 
    let v345 : string = "leptos::prelude::AnyView::from($0)"
    let v346 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v344 v345 
    let v347 : string = "details"
    let v348 : string = "<" + v347 + " " + v122 + ">move || { v346 }</" + v347 + ">"
    let v349 : string = "leptos::prelude::view! { " + v348 + " }"
    let v350 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v349 
    let v351 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v350 |> unbox
    let v352 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v353 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v351 v352 
    let v354 : string = "v353"
    let v355 : string = v354 + v6 
    let v356 : string = v355 + v6 
    let v357 : string = "v118"
    let v358 : string = v357 + v303 
    let v359 : string = v358 + v356 
    let v360 : string = "vec![" + v359 + "]"
    let v361 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v360 
    let v362 : string = "leptos::prelude::Fragment::new($0)"
    let v363 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v361 v362 
    let v364 : string = "leptos::prelude::AnyView::from($0)"
    let v365 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v363 v364 
    let v366 : string = "<" + v112 + " " + v94 + ">move || { v365 }</" + v112 + ">"
    let v367 : string = "leptos::prelude::view! { " + v366 + " }"
    let v368 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v367 
    let v369 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v368 |> unbox
    let v370 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v371 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v369 v370 
    let v372 : string = "v371"
    let v373 : string = v372 + v6 
    let v374 : string = v373 + v6 
    let v375 : string = "v78"
    let v376 : string = v375 + v303 
    let v377 : string = v376 + v374 
    let v378 : string = "vec![" + v377 + "]"
    let v379 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v378 
    let v380 : string = "leptos::prelude::Fragment::new($0)"
    let v381 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v379 v380 
    let v382 : string = "leptos::prelude::AnyView::from($0)"
    let v383 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v381 v382 
    let v384 : string = "<" + v112 + " " + v9 + ">move || { v383 }</" + v112 + ">"
    let v385 : string = "leptos::prelude::view! { " + v384 + " }"
    let v386 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v385 
    let v387 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v386 |> unbox
    let v388 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v389 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v387 v388 
    let v390 : string = "class=\"flex [flex-direction:column] [gap:2px] [align-items:flex-start]\""
    let v391 : string = " " + v390 + v6 + ""
    let v392 : string = "Max"
    (* run_target_args'
    let v397 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v398 : string = "&*$0"
    let v399 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v392 v398 
    let _run_target_args'_v397 = v399 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v400 : string = "&*$0"
    let v401 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v392 v400 
    let _run_target_args'_v397 = v401 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v402 : string = "&*$0"
    let v403 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v392 v402 
    let _run_target_args'_v397 = v403 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v405 : Ref<Str> = v392 |> unbox<Ref<Str>>
    let _run_target_args'_v397 = v405 
    #endif
#if FABLE_COMPILER_PYTHON
    let v409 : Ref<Str> = v392 |> unbox<Ref<Str>>
    let _run_target_args'_v397 = v409 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v413 : Ref<Str> = v392 |> unbox<Ref<Str>>
    let _run_target_args'_v397 = v413 
    #endif
#else
    let v417 : Ref<Str> = v392 |> unbox<Ref<Str>>
    let _run_target_args'_v397 = v417 
    #endif
    let v420 : Ref<Str> = _run_target_args'_v397 
    (* run_target_args'
    let v430 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v431 : string = "String::from($0)"
    let v432 : std_string_String = Fable.Core.RustInterop.emitRustExpr v420 v431 
    let _run_target_args'_v430 = v432 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v433 : string = "String::from($0)"
    let v434 : std_string_String = Fable.Core.RustInterop.emitRustExpr v420 v433 
    let _run_target_args'_v430 = v434 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v435 : string = "String::from($0)"
    let v436 : std_string_String = Fable.Core.RustInterop.emitRustExpr v420 v435 
    let _run_target_args'_v430 = v436 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v438 : std_string_String = v420 |> unbox<std_string_String>
    let _run_target_args'_v430 = v438 
    #endif
#if FABLE_COMPILER_PYTHON
    let v442 : std_string_String = v420 |> unbox<std_string_String>
    let _run_target_args'_v430 = v442 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v446 : std_string_String = v420 |> unbox<std_string_String>
    let _run_target_args'_v430 = v446 
    #endif
#else
    let v450 : std_string_String = v420 |> unbox<std_string_String>
    let _run_target_args'_v430 = v450 
    #endif
    let v453 : std_string_String = _run_target_args'_v430 
    let v459 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v460 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v453 v459 
    let v461 : unit = ()
    let v462 : string = $"true; let _func0_from_v461 = Func0::from(move || {{ //"
    let v463 : bool = Fable.Core.RustInterop.emitRustExpr () v462 
    let v464 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v465 : string = "Box::pin($0)"
    let v466 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v464 v465 
    let v467 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v468 : Heap1 = Fable.Core.RustInterop.emitRustExpr v466 v467 
    let v469 : leptos_prelude_ArcRwSignal<Heap0> = v468.l3
    let v470 : string = "Box::pin($0)"
    let v471 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v469 v470 
    let v472 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v473 : Heap0 = Fable.Core.RustInterop.emitRustExpr v471 v472 
    let v474 : int32 = v473.l2
    let v475 : string = $"true; $0 /*"
    let v476 : bool = Fable.Core.RustInterop.emitRustExpr v474 v475 
    let v477 : string = $"*/ }}); //"
    let v478 : bool = Fable.Core.RustInterop.emitRustExpr () v477 
    let v479 : string = $"_func0_from_v461"
    let v480 : Func0<int32> = Fable.Core.RustInterop.emitRustExpr () v479 
    let v481 : unit = ()
    let v482 : string = $"true; let _func1_from_v481 = Func0::from(move || {{ //"
    let v483 : bool = Fable.Core.RustInterop.emitRustExpr () v482 
    let v484 : string = $"value"
    let v485 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v484 
    let v486 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v487 : string = "Box::pin($0)"
    let v488 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v486 v487 
    let v489 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v490 : Heap1 = Fable.Core.RustInterop.emitRustExpr v488 v489 
    let v491 : leptos_prelude_ArcRwSignal<Heap0> = v490.l3
    let v492 : string = "Box::pin($0)"
    let v493 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v491 v492 
    let v494 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v495 : Heap0 = Fable.Core.RustInterop.emitRustExpr v493 v494 
    let v496 : Vec<(bool * std_string_String)> = v495.l0
    let v497 : std_string_String option = v495.l1
    let v498 : int32 = v495.l2
    let v499 : int32 = v495.l3
    let v500 : US1 = v495.l4
    let v501 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v502 : string = "Box::pin($0)"
    let v503 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v501 v502 
    let v504 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v505 : Heap1 = Fable.Core.RustInterop.emitRustExpr v503 v504 
    let v506 : leptos_prelude_ArcRwSignal<Heap0> = v505.l3
    let v508 : (std_string_String -> string) = _.ToString()
    let v509 : string = v508 v485
    let v512 : bool = "" = v509
    let v526 : int32 =
        if v512 then
            1
        else
            let v518 : int32 = v509 |> int32 
            v518
    let v527 : Heap0 = {l0 = v496; l1 = v497; l2 = v526; l3 = v499; l4 = v500} : Heap0
    let v528 : string = $"true; leptos::prelude::ArcRwSignal::set(&$0, $1); //"
    let v529 : bool = Fable.Core.RustInterop.emitRustExpr struct (v506, v527) v528 
    let v530 : string = $"true; /*"
    let v531 : bool = Fable.Core.RustInterop.emitRustExpr () v530 
    let v532 : string = $"*/ }}); //"
    let v533 : bool = Fable.Core.RustInterop.emitRustExpr () v532 
    let v534 : string = $"_func1_from_v481"
    let v535 : Func0<std_string_String, unit> = Fable.Core.RustInterop.emitRustExpr () v534 
    let v536 : string = "$0"
    let v537 : (unit -> string) = closure179()
    let v538 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v537 v536 
    let v539 : string = "class=move || \"bg-gray-50 h-[31px] [font-size:.875rem] \".to_owned() + &v538(())"
    let v540 : string = "prop:value=move || v480()"
    let v541 : (std_string_String -> unit) = closure180(v535)
    let v542 : string = "on:keyup=move |event: web_sys::KeyboardEvent| v541(leptos::prelude::event_target_value(&event))"
    let v543 : string = " " + v539 + v6 + ""
    let v544 : string = " " + v540 + v543 + ""
    let v545 : string = " " + v542 + v544 + ""
    let v546 : string = "input"
    let v547 : string = "<" + v546 + " " + v545 + " />"
    let v548 : string = "leptos::prelude::view! { " + v547 + " }"
    let v549 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v548 
    let v550 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v549 |> unbox
    let v551 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v552 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v550 v551 
    let v553 : string = "v552"
    let v554 : string = v553 + v6 
    let v555 : string = v554 + v6 
    let v556 : string = "v460"
    let v557 : string = v556 + v303 
    let v558 : string = v557 + v555 
    let v559 : string = "vec![" + v558 + "]"
    let v560 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v559 
    let v561 : string = "leptos::prelude::Fragment::new($0)"
    let v562 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v560 v561 
    let v563 : string = "leptos::prelude::AnyView::from($0)"
    let v564 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v562 v563 
    let v565 : string = "<" + v112 + " " + v391 + ">move || { v564 }</" + v112 + ">"
    let v566 : string = "leptos::prelude::view! { " + v565 + " }"
    let v567 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v566 
    let v568 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v567 |> unbox
    let v569 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v570 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v568 v569 
    let v571 : string = "class=\"flex\""
    let v572 : string = " " + v571 + v6 + ""
    let v573 : string = "Func0::new(move || $0())"
    let v574 : (unit -> bool) = closure181(v1)
    let v575 : Func0<bool> = Fable.Core.RustInterop.emitRustExpr v574 v573 
    let v576 : Func0<bool> = method197(v575)
    let v577 : unit = ()
    let v578 : string = $"true; let _func0_from_v577 = Func0::from(move || {{ //"
    let v579 : bool = Fable.Core.RustInterop.emitRustExpr () v578 
    let v580 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v581 : string = "Box::pin($0)"
    let v582 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v580 v581 
    let v583 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v584 : Heap1 = Fable.Core.RustInterop.emitRustExpr v582 v583 
    let v585 : leptos_prelude_ArcRwSignal<Heap0> = v584.l3
    let v586 : string = "Box::pin($0)"
    let v587 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v585 v586 
    let v588 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v589 : Heap0 = Fable.Core.RustInterop.emitRustExpr v587 v588 
    let v590 : int32 = v589.l2
    let v591 : Heap6 = {l0 = v590} : Heap6
    let v592 : string = "true; leptos::prelude::ArcAction::dispatch(&$0, $1.clone())"
    let v593 : bool = Fable.Core.RustInterop.emitRustExpr struct (v1, v591) v592 
    // rust.func0_from / is_unit
    let v594 : string = $"true; /*"
    let v595 : bool = Fable.Core.RustInterop.emitRustExpr () v594 
    let v596 : string = $"*/ }}); //"
    let v597 : bool = Fable.Core.RustInterop.emitRustExpr () v596 
    let v598 : string = $"_func0_from_v577"
    let v599 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v598 
    let v600 : string = "flex"
    let v601 : string = "gap-[10px]"
    let v602 : string = "[align-items:center]"
    let v603 : string = "inline-block"
    let v604 : string = "rounded"
    let v605 : string = "border"
    let v606 : string = "border-gray-400"
    let v607 : string = "hover:bg-gray-400"
    let v608 : string = "px-4"
    let v609 : string = "py-1"
    let v610 : string = "text-sm"
    let v611 : string = "font-medium"
    let v612 : string = "text-gray-900"
    let v613 : string = "bg-transparent"
    let v614 : string = "hover:text-gray-600"
    let v615 : string = "focus:outline-none"
    let v616 : string = "focus:ring"
    let v617 : string = "active:text-gray-500"
    let v618 : string list = []
    let v620 : string list = v617 :: v618 
    let v624 : string list = v616 :: v620 
    let v628 : string list = v615 :: v624 
    let v632 : string list = v614 :: v628 
    let v636 : string list = v613 :: v632 
    let v640 : string list = v612 :: v636 
    let v644 : string list = v611 :: v640 
    let v648 : string list = v610 :: v644 
    let v652 : string list = v609 :: v648 
    let v656 : string list = v608 :: v652 
    let v660 : string list = v607 :: v656 
    let v664 : string list = v606 :: v660 
    let v668 : string list = v605 :: v664 
    let v672 : string list = v604 :: v668 
    let v676 : string list = v603 :: v672 
    let v680 : string list = v602 :: v676 
    let v684 : string list = v601 :: v680 
    let v688 : string list = v600 :: v684 
    let v694 : unit = ()
    let _let'_v694 =
        seq {
            yield! v688 
            (* indent
            ()
        indent *)
        }
        (* indent
        ()
    indent *)
    let v697 : string seq = _let'_v694 
    let v704 : (string -> (string seq -> string)) = String.concat
    let v705 : string = " "
    let v706 : (string seq -> string) = v704 v705
    let v707 : string = v706 v697
    (* run_target_args'
    let v714 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v715 : string = "&*$0"
    let v716 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v707 v715 
    let _run_target_args'_v714 = v716 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v717 : string = "&*$0"
    let v718 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v707 v717 
    let _run_target_args'_v714 = v718 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v719 : string = "&*$0"
    let v720 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v707 v719 
    let _run_target_args'_v714 = v720 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v722 : Ref<Str> = v707 |> unbox<Ref<Str>>
    let _run_target_args'_v714 = v722 
    #endif
#if FABLE_COMPILER_PYTHON
    let v726 : Ref<Str> = v707 |> unbox<Ref<Str>>
    let _run_target_args'_v714 = v726 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v730 : Ref<Str> = v707 |> unbox<Ref<Str>>
    let _run_target_args'_v714 = v730 
    #endif
#else
    let v734 : Ref<Str> = v707 |> unbox<Ref<Str>>
    let _run_target_args'_v714 = v734 
    #endif
    let v737 : Ref<Str> = _run_target_args'_v714 
    (* run_target_args'
    let v747 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v748 : string = "String::from($0)"
    let v749 : std_string_String = Fable.Core.RustInterop.emitRustExpr v737 v748 
    let _run_target_args'_v747 = v749 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v750 : string = "String::from($0)"
    let v751 : std_string_String = Fable.Core.RustInterop.emitRustExpr v737 v750 
    let _run_target_args'_v747 = v751 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v752 : string = "String::from($0)"
    let v753 : std_string_String = Fable.Core.RustInterop.emitRustExpr v737 v752 
    let _run_target_args'_v747 = v753 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v755 : std_string_String = v737 |> unbox<std_string_String>
    let _run_target_args'_v747 = v755 
    #endif
#if FABLE_COMPILER_PYTHON
    let v759 : std_string_String = v737 |> unbox<std_string_String>
    let _run_target_args'_v747 = v759 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v763 : std_string_String = v737 |> unbox<std_string_String>
    let _run_target_args'_v747 = v763 
    #endif
#else
    let v767 : std_string_String = v737 |> unbox<std_string_String>
    let _run_target_args'_v747 = v767 
    #endif
    let v770 : std_string_String = _run_target_args'_v747 
    let v776 : string = "$0"
    let v777 : std_string_String = Fable.Core.RustInterop.emitRustExpr v770 v776 
    let v778 : string = "class=v777"
    let v779 : string = "prop:disabled=move || v576()"
    let v780 : string = "on:click=move |_| v599()"
    let v781 : string = " " + v778 + v6 + ""
    let v782 : string = " " + v779 + v781 + ""
    let v783 : string = " " + v780 + v782 + ""
    let v784 : string = "Roll"
    (* run_target_args'
    let v789 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v790 : string = "&*$0"
    let v791 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v784 v790 
    let _run_target_args'_v789 = v791 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v792 : string = "&*$0"
    let v793 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v784 v792 
    let _run_target_args'_v789 = v793 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v794 : string = "&*$0"
    let v795 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v784 v794 
    let _run_target_args'_v789 = v795 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v797 : Ref<Str> = v784 |> unbox<Ref<Str>>
    let _run_target_args'_v789 = v797 
    #endif
#if FABLE_COMPILER_PYTHON
    let v801 : Ref<Str> = v784 |> unbox<Ref<Str>>
    let _run_target_args'_v789 = v801 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v805 : Ref<Str> = v784 |> unbox<Ref<Str>>
    let _run_target_args'_v789 = v805 
    #endif
#else
    let v809 : Ref<Str> = v784 |> unbox<Ref<Str>>
    let _run_target_args'_v789 = v809 
    #endif
    let v812 : Ref<Str> = _run_target_args'_v789 
    (* run_target_args'
    let v822 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v823 : string = "String::from($0)"
    let v824 : std_string_String = Fable.Core.RustInterop.emitRustExpr v812 v823 
    let _run_target_args'_v822 = v824 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v825 : string = "String::from($0)"
    let v826 : std_string_String = Fable.Core.RustInterop.emitRustExpr v812 v825 
    let _run_target_args'_v822 = v826 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v827 : string = "String::from($0)"
    let v828 : std_string_String = Fable.Core.RustInterop.emitRustExpr v812 v827 
    let _run_target_args'_v822 = v828 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v830 : std_string_String = v812 |> unbox<std_string_String>
    let _run_target_args'_v822 = v830 
    #endif
#if FABLE_COMPILER_PYTHON
    let v834 : std_string_String = v812 |> unbox<std_string_String>
    let _run_target_args'_v822 = v834 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v838 : std_string_String = v812 |> unbox<std_string_String>
    let _run_target_args'_v822 = v838 
    #endif
#else
    let v842 : std_string_String = v812 |> unbox<std_string_String>
    let _run_target_args'_v822 = v842 
    #endif
    let v845 : std_string_String = _run_target_args'_v822 
    let v851 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v852 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v845 v851 
    let v853 : string = "$0()"
    let v854 : bool = Fable.Core.RustInterop.emitRustExpr v575 v853 
    let v1218 : leptos_prelude_AnyView_ =
        if v854 then
            let v855 : string = "$0"
            let v856 : (unit -> string) = closure182()
            let v857 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v856 v855 
            let v858 : string = "version=\"1.1\""
            let v859 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v860 : string = "xmlns:xlink=\"http://www.w3.org/1999/xlink\""
            let v861 : string = "x=\"0px\""
            let v862 : string = "y=\"0px\""
            let v863 : string = "viewBox=\"0 0 24 30\""
            let v864 : string = "style=\"enable-background:new 0 0 50 50;\""
            let v865 : string = "xml:space=\"preserve\""
            let v866 : string = "class=move || \" \".to_owned() + &v857(())"
            let v867 : string = " " + v858 + v6 + ""
            let v868 : string = " " + v859 + v867 + ""
            let v869 : string = " " + v860 + v868 + ""
            let v870 : string = " " + v861 + v869 + ""
            let v871 : string = " " + v862 + v870 + ""
            let v872 : string = " " + v863 + v871 + ""
            let v873 : string = " " + v864 + v872 + ""
            let v874 : string = " " + v865 + v873 + ""
            let v875 : string = " " + v866 + v874 + ""
            let v876 : string = "x=\"0\""
            let v877 : string = "y=\"10\""
            let v878 : string = "width=\"4\""
            let v879 : string = "height=\"10\""
            let v880 : string = "fill=\"#333\""
            let v881 : string = "opacity=\"0.2\""
            let v882 : string = " " + v876 + v6 + ""
            let v883 : string = " " + v877 + v882 + ""
            let v884 : string = " " + v878 + v883 + ""
            let v885 : string = " " + v879 + v884 + ""
            let v886 : string = " " + v880 + v885 + ""
            let v887 : string = " " + v881 + v886 + ""
            let v888 : string = "attributeName=\"opacity\""
            let v889 : string = "attributeType=\"XML\""
            let v890 : string = "values=\"0.2; 1; .2\""
            let v891 : string = "begin=\"0s\""
            let v892 : string = "dur=\"0.6s\""
            let v893 : string = "repeatCount=\"indefinite\""
            let v894 : string = " " + v888 + v6 + ""
            let v895 : string = " " + v889 + v894 + ""
            let v896 : string = " " + v890 + v895 + ""
            let v897 : string = " " + v891 + v896 + ""
            let v898 : string = " " + v892 + v897 + ""
            let v899 : string = " " + v893 + v898 + ""
            let v900 : string = "vec![" + v6 + "]"
            let v901 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v900 
            let v902 : string = "leptos::prelude::Fragment::new($0)"
            let v903 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v901 v902 
            let v904 : string = "leptos::prelude::AnyView::from($0)"
            let v905 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v903 v904 
            let v906 : string = "animate"
            let v907 : string = "<" + v906 + " " + v899 + ">move || { v905 }</" + v906 + ">"
            let v908 : string = "leptos::prelude::view! { " + v907 + " }"
            let v909 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v908 
            let v910 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v909 |> unbox
            let v911 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v912 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v910 v911 
            let v913 : string = "attributeName=\"height\""
            let v914 : string = "attributeType=\"XML\""
            let v915 : string = "values=\"10; 20; 10\""
            let v916 : string = "begin=\"0s\""
            let v917 : string = "dur=\"0.6s\""
            let v918 : string = "repeatCount=\"indefinite\""
            let v919 : string = " " + v913 + v6 + ""
            let v920 : string = " " + v914 + v919 + ""
            let v921 : string = " " + v915 + v920 + ""
            let v922 : string = " " + v916 + v921 + ""
            let v923 : string = " " + v917 + v922 + ""
            let v924 : string = " " + v918 + v923 + ""
            let v925 : string = "vec![" + v6 + "]"
            let v926 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v925 
            let v927 : string = "leptos::prelude::Fragment::new($0)"
            let v928 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v926 v927 
            let v929 : string = "leptos::prelude::AnyView::from($0)"
            let v930 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v928 v929 
            let v931 : string = "<" + v906 + " " + v924 + ">move || { v930 }</" + v906 + ">"
            let v932 : string = "leptos::prelude::view! { " + v931 + " }"
            let v933 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v932 
            let v934 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v933 |> unbox
            let v935 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v936 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v934 v935 
            let v937 : string = "attributeName=\"y\""
            let v938 : string = "attributeType=\"XML\""
            let v939 : string = "values=\"10; 5; 10\""
            let v940 : string = "begin=\"0s\""
            let v941 : string = "dur=\"0.6s\""
            let v942 : string = "repeatCount=\"indefinite\""
            let v943 : string = " " + v937 + v6 + ""
            let v944 : string = " " + v938 + v943 + ""
            let v945 : string = " " + v939 + v944 + ""
            let v946 : string = " " + v940 + v945 + ""
            let v947 : string = " " + v941 + v946 + ""
            let v948 : string = " " + v942 + v947 + ""
            let v949 : string = "vec![" + v6 + "]"
            let v950 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v949 
            let v951 : string = "leptos::prelude::Fragment::new($0)"
            let v952 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v950 v951 
            let v953 : string = "leptos::prelude::AnyView::from($0)"
            let v954 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v952 v953 
            let v955 : string = "<" + v906 + " " + v948 + ">move || { v954 }</" + v906 + ">"
            let v956 : string = "leptos::prelude::view! { " + v955 + " }"
            let v957 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v956 
            let v958 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v957 |> unbox
            let v959 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v960 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v958 v959 
            let v961 : string = "v960"
            let v962 : string = v961 + v6 
            let v963 : string = v962 + v6 
            let v964 : string = "v936"
            let v965 : string = v964 + v303 
            let v966 : string = v965 + v963 
            let v967 : string = "v912"
            let v968 : string = v967 + v303 
            let v969 : string = v968 + v966 
            let v970 : string = "vec![" + v969 + "]"
            let v971 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v970 
            let v972 : string = "leptos::prelude::Fragment::new($0)"
            let v973 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v971 v972 
            let v974 : string = "leptos::prelude::AnyView::from($0)"
            let v975 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v973 v974 
            let v976 : string = "rect"
            let v977 : string = "<" + v976 + " " + v887 + ">move || { v975 }</" + v976 + ">"
            let v978 : string = "leptos::prelude::view! { " + v977 + " }"
            let v979 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v978 
            let v980 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v979 |> unbox
            let v981 : string = "x=\"8\""
            let v982 : string = "y=\"10\""
            let v983 : string = "width=\"4\""
            let v984 : string = "height=\"10\""
            let v985 : string = "fill=\"#333\""
            let v986 : string = "opacity=\"0.2\""
            let v987 : string = " " + v981 + v6 + ""
            let v988 : string = " " + v982 + v987 + ""
            let v989 : string = " " + v983 + v988 + ""
            let v990 : string = " " + v984 + v989 + ""
            let v991 : string = " " + v985 + v990 + ""
            let v992 : string = " " + v986 + v991 + ""
            let v993 : string = "attributeName=\"opacity\""
            let v994 : string = "attributeType=\"XML\""
            let v995 : string = "values=\"0.2; 1; .2\""
            let v996 : string = "begin=\"0.15s\""
            let v997 : string = "dur=\"0.6s\""
            let v998 : string = "repeatCount=\"indefinite\""
            let v999 : string = " " + v993 + v6 + ""
            let v1000 : string = " " + v994 + v999 + ""
            let v1001 : string = " " + v995 + v1000 + ""
            let v1002 : string = " " + v996 + v1001 + ""
            let v1003 : string = " " + v997 + v1002 + ""
            let v1004 : string = " " + v998 + v1003 + ""
            let v1005 : string = "vec![" + v6 + "]"
            let v1006 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1005 
            let v1007 : string = "leptos::prelude::Fragment::new($0)"
            let v1008 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1006 v1007 
            let v1009 : string = "leptos::prelude::AnyView::from($0)"
            let v1010 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1008 v1009 
            let v1011 : string = "<" + v906 + " " + v1004 + ">move || { v1010 }</" + v906 + ">"
            let v1012 : string = "leptos::prelude::view! { " + v1011 + " }"
            let v1013 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1012 
            let v1014 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1013 |> unbox
            let v1015 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1016 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1014 v1015 
            let v1017 : string = "attributeName=\"opacity\""
            let v1018 : string = "attributeType=\"XML\""
            let v1019 : string = "values=\"10; 20; 10\""
            let v1020 : string = "begin=\"0.15s\""
            let v1021 : string = "dur=\"0.6s\""
            let v1022 : string = "repeatCount=\"indefinite\""
            let v1023 : string = " " + v1017 + v6 + ""
            let v1024 : string = " " + v1018 + v1023 + ""
            let v1025 : string = " " + v1019 + v1024 + ""
            let v1026 : string = " " + v1020 + v1025 + ""
            let v1027 : string = " " + v1021 + v1026 + ""
            let v1028 : string = " " + v1022 + v1027 + ""
            let v1029 : string = "vec![" + v6 + "]"
            let v1030 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1029 
            let v1031 : string = "leptos::prelude::Fragment::new($0)"
            let v1032 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1030 v1031 
            let v1033 : string = "leptos::prelude::AnyView::from($0)"
            let v1034 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1032 v1033 
            let v1035 : string = "<" + v906 + " " + v1028 + ">move || { v1034 }</" + v906 + ">"
            let v1036 : string = "leptos::prelude::view! { " + v1035 + " }"
            let v1037 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1036 
            let v1038 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1037 |> unbox
            let v1039 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1040 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1038 v1039 
            let v1041 : string = "attributeName=\"y\""
            let v1042 : string = "attributeType=\"XML\""
            let v1043 : string = "values=\"10; 5; 10\""
            let v1044 : string = "begin=\"0.15s\""
            let v1045 : string = "dur=\"0.6s\""
            let v1046 : string = "repeatCount=\"indefinite\""
            let v1047 : string = " " + v1041 + v6 + ""
            let v1048 : string = " " + v1042 + v1047 + ""
            let v1049 : string = " " + v1043 + v1048 + ""
            let v1050 : string = " " + v1044 + v1049 + ""
            let v1051 : string = " " + v1045 + v1050 + ""
            let v1052 : string = " " + v1046 + v1051 + ""
            let v1053 : string = "vec![" + v6 + "]"
            let v1054 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1053 
            let v1055 : string = "leptos::prelude::Fragment::new($0)"
            let v1056 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1054 v1055 
            let v1057 : string = "leptos::prelude::AnyView::from($0)"
            let v1058 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1056 v1057 
            let v1059 : string = "<" + v906 + " " + v1052 + ">move || { v1058 }</" + v906 + ">"
            let v1060 : string = "leptos::prelude::view! { " + v1059 + " }"
            let v1061 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1060 
            let v1062 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1061 |> unbox
            let v1063 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1064 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1062 v1063 
            let v1065 : string = "v1064"
            let v1066 : string = v1065 + v6 
            let v1067 : string = v1066 + v6 
            let v1068 : string = "v1040"
            let v1069 : string = v1068 + v303 
            let v1070 : string = v1069 + v1067 
            let v1071 : string = "v1016"
            let v1072 : string = v1071 + v303 
            let v1073 : string = v1072 + v1070 
            let v1074 : string = "vec![" + v1073 + "]"
            let v1075 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1074 
            let v1076 : string = "leptos::prelude::Fragment::new($0)"
            let v1077 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1075 v1076 
            let v1078 : string = "leptos::prelude::AnyView::from($0)"
            let v1079 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1077 v1078 
            let v1080 : string = "<" + v976 + " " + v992 + ">move || { v1079 }</" + v976 + ">"
            let v1081 : string = "leptos::prelude::view! { " + v1080 + " }"
            let v1082 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1081 
            let v1083 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v1082 |> unbox
            let v1084 : string = "x=\"16\""
            let v1085 : string = "y=\"10\""
            let v1086 : string = "width=\"4\""
            let v1087 : string = "height=\"10\""
            let v1088 : string = "fill=\"#333\""
            let v1089 : string = "opacity=\"0.2\""
            let v1090 : string = " " + v1084 + v6 + ""
            let v1091 : string = " " + v1085 + v1090 + ""
            let v1092 : string = " " + v1086 + v1091 + ""
            let v1093 : string = " " + v1087 + v1092 + ""
            let v1094 : string = " " + v1088 + v1093 + ""
            let v1095 : string = " " + v1089 + v1094 + ""
            let v1096 : string = "attributeName=\"opacity\""
            let v1097 : string = "attributeType=\"XML\""
            let v1098 : string = "values=\"0.2; 1; .2\""
            let v1099 : string = "begin=\"0.3s\""
            let v1100 : string = "dur=\"0.6s\""
            let v1101 : string = "repeatCount=\"indefinite\""
            let v1102 : string = " " + v1096 + v6 + ""
            let v1103 : string = " " + v1097 + v1102 + ""
            let v1104 : string = " " + v1098 + v1103 + ""
            let v1105 : string = " " + v1099 + v1104 + ""
            let v1106 : string = " " + v1100 + v1105 + ""
            let v1107 : string = " " + v1101 + v1106 + ""
            let v1108 : string = "vec![" + v6 + "]"
            let v1109 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1108 
            let v1110 : string = "leptos::prelude::Fragment::new($0)"
            let v1111 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1109 v1110 
            let v1112 : string = "leptos::prelude::AnyView::from($0)"
            let v1113 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1111 v1112 
            let v1114 : string = "<" + v906 + " " + v1107 + ">move || { v1113 }</" + v906 + ">"
            let v1115 : string = "leptos::prelude::view! { " + v1114 + " }"
            let v1116 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1115 
            let v1117 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1116 |> unbox
            let v1118 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1119 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1117 v1118 
            let v1120 : string = "attributeName=\"height\""
            let v1121 : string = "attributeType=\"XML\""
            let v1122 : string = "values=\"10; 20; 10\""
            let v1123 : string = "begin=\"0.3s\""
            let v1124 : string = "dur=\"0.6s\""
            let v1125 : string = "repeatCount=\"indefinite\""
            let v1126 : string = " " + v1120 + v6 + ""
            let v1127 : string = " " + v1121 + v1126 + ""
            let v1128 : string = " " + v1122 + v1127 + ""
            let v1129 : string = " " + v1123 + v1128 + ""
            let v1130 : string = " " + v1124 + v1129 + ""
            let v1131 : string = " " + v1125 + v1130 + ""
            let v1132 : string = "vec![" + v6 + "]"
            let v1133 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1132 
            let v1134 : string = "leptos::prelude::Fragment::new($0)"
            let v1135 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1133 v1134 
            let v1136 : string = "leptos::prelude::AnyView::from($0)"
            let v1137 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1135 v1136 
            let v1138 : string = "<" + v906 + " " + v1131 + ">move || { v1137 }</" + v906 + ">"
            let v1139 : string = "leptos::prelude::view! { " + v1138 + " }"
            let v1140 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1139 
            let v1141 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1140 |> unbox
            let v1142 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1143 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1141 v1142 
            let v1144 : string = "attributeName=\"y\""
            let v1145 : string = "attributeType=\"XML\""
            let v1146 : string = "values=\"10; 5; 10\""
            let v1147 : string = "begin=\"0.3s\""
            let v1148 : string = "dur=\"0.6s\""
            let v1149 : string = "repeatCount=\"indefinite\""
            let v1150 : string = " " + v1144 + v6 + ""
            let v1151 : string = " " + v1145 + v1150 + ""
            let v1152 : string = " " + v1146 + v1151 + ""
            let v1153 : string = " " + v1147 + v1152 + ""
            let v1154 : string = " " + v1148 + v1153 + ""
            let v1155 : string = " " + v1149 + v1154 + ""
            let v1156 : string = "vec![" + v6 + "]"
            let v1157 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1156 
            let v1158 : string = "leptos::prelude::Fragment::new($0)"
            let v1159 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1157 v1158 
            let v1160 : string = "leptos::prelude::AnyView::from($0)"
            let v1161 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1159 v1160 
            let v1162 : string = "<" + v906 + " " + v1155 + ">move || { v1161 }</" + v906 + ">"
            let v1163 : string = "leptos::prelude::view! { " + v1162 + " }"
            let v1164 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1163 
            let v1165 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1164 |> unbox
            let v1166 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1167 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1165 v1166 
            let v1168 : string = "v1167"
            let v1169 : string = v1168 + v6 
            let v1170 : string = v1169 + v6 
            let v1171 : string = "v1143"
            let v1172 : string = v1171 + v303 
            let v1173 : string = v1172 + v1170 
            let v1174 : string = "v1119"
            let v1175 : string = v1174 + v303 
            let v1176 : string = v1175 + v1173 
            let v1177 : string = "vec![" + v1176 + "]"
            let v1178 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1177 
            let v1179 : string = "leptos::prelude::Fragment::new($0)"
            let v1180 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1178 v1179 
            let v1181 : string = "leptos::prelude::AnyView::from($0)"
            let v1182 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1180 v1181 
            let v1183 : string = "<" + v976 + " " + v1095 + ">move || { v1182 }</" + v976 + ">"
            let v1184 : string = "leptos::prelude::view! { " + v1183 + " }"
            let v1185 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1184 
            let v1186 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v1185 |> unbox
            let v1187 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1188 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1186 v1187 
            let v1189 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1190 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1083 v1189 
            let v1191 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1192 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v980 v1191 
            let v1193 : string = "v1188"
            let v1194 : string = v1193 + v6 
            let v1195 : string = v1194 + v6 
            let v1196 : string = "v1190"
            let v1197 : string = v1196 + v303 
            let v1198 : string = v1197 + v1195 
            let v1199 : string = "v1192"
            let v1200 : string = v1199 + v303 
            let v1201 : string = v1200 + v1198 
            let v1202 : string = "vec![" + v1201 + "]"
            let v1203 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1202 
            let v1204 : string = "leptos::prelude::Fragment::new($0)"
            let v1205 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1203 v1204 
            let v1206 : string = "leptos::prelude::AnyView::from($0)"
            let v1207 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1205 v1206 
            let v1208 : string = "<" + v277 + " " + v875 + ">move || { v1207 }</" + v277 + ">"
            let v1209 : string = "leptos::prelude::view! { " + v1208 + " }"
            let v1210 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1209 
            let v1211 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v1210 |> unbox
            let v1212 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1213 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1211 v1212 
            v1213
        else
            let v1214 : string = "vec![" + v6 + "]"
            let v1215 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1214 
            let v1216 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1217 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1215 v1216 
            v1217
    let v1219 : string = "v1218"
    let v1220 : string = v1219 + v6 
    let v1221 : string = v1220 + v6 
    let v1222 : string = "v852"
    let v1223 : string = v1222 + v303 
    let v1224 : string = v1223 + v1221 
    let v1225 : string = "vec![" + v1224 + "]"
    let v1226 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1225 
    let v1227 : string = "leptos::prelude::Fragment::new($0)"
    let v1228 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1226 v1227 
    let v1229 : string = "leptos::prelude::AnyView::from($0)"
    let v1230 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1228 v1229 
    let v1231 : string = "button"
    let v1232 : string = "<" + v1231 + " " + v783 + ">move || { v1230 }</" + v1231 + ">"
    let v1233 : string = "leptos::prelude::view! { " + v1232 + " }"
    let v1234 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1233 
    let v1235 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Button>> = v1234 |> unbox
    let v1236 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v1237 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1235 v1236 
    let v1238 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v1239 : string option = Fable.Core.RustInterop.emitRustExpr v2 v1238 
    let v1242 : (string -> US31) = method106()
    let v1243 : US31 option = v1239 |> Option.map v1242 
    let v1257 : US31 = US31_1
    let v1258 : US31 = v1243 |> Option.defaultValue v1257 
    let v1437 : leptos_prelude_AnyView_ =
        match v1258 with
        | US31_0(v1262) -> (* Some *)
            let v1263 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
            let v1264 : string = " " + v1263 + v6 + ""
            let v1265 : string = "class=\"[height:17px]\""
            let v1266 : string = " " + v1265 + v6 + ""
            let v1267 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v1268 : string = "fill=\"none\""
            let v1269 : string = "height=\"100%\""
            let v1270 : string = "viewBox=\"0 0 24 24\""
            let v1271 : string = "stroke-width=\"1.5\""
            let v1272 : string = "stroke=\"currentColor\""
            let v1273 : string = "class=\"text-red-700\""
            let v1274 : string = " " + v1267 + v6 + ""
            let v1275 : string = " " + v1268 + v1274 + ""
            let v1276 : string = " " + v1269 + v1275 + ""
            let v1277 : string = " " + v1270 + v1276 + ""
            let v1278 : string = " " + v1271 + v1277 + ""
            let v1279 : string = " " + v1272 + v1278 + ""
            let v1280 : string = " " + v1273 + v1279 + ""
            let v1281 : string = "stroke-linecap=\"round\""
            let v1282 : string = "stroke-linejoin=\"round\""
            let v1283 : string = "d=\"M6 18L18 6M6 6l12 12\""
            let v1284 : string = " " + v1281 + v6 + ""
            let v1285 : string = " " + v1282 + v1284 + ""
            let v1286 : string = " " + v1283 + v1285 + ""
            let v1287 : string = "vec![" + v6 + "]"
            let v1288 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1287 
            let v1289 : string = "leptos::prelude::Fragment::new($0)"
            let v1290 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1288 v1289 
            let v1291 : string = "leptos::prelude::AnyView::from($0)"
            let v1292 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1290 v1291 
            let v1293 : string = "<" + v261 + " " + v1286 + ">move || { v1292 }</" + v261 + ">"
            let v1294 : string = "leptos::prelude::view! { " + v1293 + " }"
            let v1295 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1294 
            let v1296 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v1295 |> unbox
            let v1297 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1298 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1296 v1297 
            let v1299 : string = "v1298"
            let v1300 : string = v1299 + v6 
            let v1301 : string = v1300 + v6 
            let v1302 : string = "vec![" + v1301 + "]"
            let v1303 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1302 
            let v1304 : string = "leptos::prelude::Fragment::new($0)"
            let v1305 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1303 v1304 
            let v1306 : string = "leptos::prelude::AnyView::from($0)"
            let v1307 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1305 v1306 
            let v1308 : string = "<" + v277 + " " + v1280 + ">move || { v1307 }</" + v277 + ">"
            let v1309 : string = "leptos::prelude::view! { " + v1308 + " }"
            let v1310 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1309 
            let v1311 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v1310 |> unbox
            let v1312 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1313 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1311 v1312 
            let v1314 : string = "v1313"
            let v1315 : string = v1314 + v6 
            let v1316 : string = v1315 + v6 
            let v1317 : string = "vec![" + v1316 + "]"
            let v1318 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1317 
            let v1319 : string = "leptos::prelude::Fragment::new($0)"
            let v1320 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1318 v1319 
            let v1321 : string = "leptos::prelude::AnyView::from($0)"
            let v1322 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1320 v1321 
            let v1323 : string = "<" + v214 + " " + v1266 + ">move || { v1322 }</" + v214 + ">"
            let v1324 : string = "leptos::prelude::view! { " + v1323 + " }"
            let v1325 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1324 
            let v1326 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v1325 |> unbox
            let v1327 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1328 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1326 v1327 
            let v1329 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
            let v1330 : string = " " + v1329 + v6 + ""
            (* run_target_args'
            let v1335 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1336 : string = "&*$0"
            let v1337 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1262 v1336 
            let _run_target_args'_v1335 = v1337 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1338 : string = "&*$0"
            let v1339 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1262 v1338 
            let _run_target_args'_v1335 = v1339 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1340 : string = "&*$0"
            let v1341 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1262 v1340 
            let _run_target_args'_v1335 = v1341 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1343 : Ref<Str> = v1262 |> unbox<Ref<Str>>
            let _run_target_args'_v1335 = v1343 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1347 : Ref<Str> = v1262 |> unbox<Ref<Str>>
            let _run_target_args'_v1335 = v1347 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1351 : Ref<Str> = v1262 |> unbox<Ref<Str>>
            let _run_target_args'_v1335 = v1351 
            #endif
#else
            let v1355 : Ref<Str> = v1262 |> unbox<Ref<Str>>
            let _run_target_args'_v1335 = v1355 
            #endif
            let v1358 : Ref<Str> = _run_target_args'_v1335 
            (* run_target_args'
            let v1368 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1369 : string = "String::from($0)"
            let v1370 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1358 v1369 
            let _run_target_args'_v1368 = v1370 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1371 : string = "String::from($0)"
            let v1372 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1358 v1371 
            let _run_target_args'_v1368 = v1372 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1373 : string = "String::from($0)"
            let v1374 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1358 v1373 
            let _run_target_args'_v1368 = v1374 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1376 : std_string_String = v1358 |> unbox<std_string_String>
            let _run_target_args'_v1368 = v1376 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1380 : std_string_String = v1358 |> unbox<std_string_String>
            let _run_target_args'_v1368 = v1380 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1384 : std_string_String = v1358 |> unbox<std_string_String>
            let _run_target_args'_v1368 = v1384 
            #endif
#else
            let v1388 : std_string_String = v1358 |> unbox<std_string_String>
            let _run_target_args'_v1368 = v1388 
            #endif
            let v1391 : std_string_String = _run_target_args'_v1368 
            let v1397 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v1398 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1391 v1397 
            let v1399 : string = "v1398"
            let v1400 : string = v1399 + v6 
            let v1401 : string = v1400 + v6 
            let v1402 : string = "vec![" + v1401 + "]"
            let v1403 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1402 
            let v1404 : string = "leptos::prelude::Fragment::new($0)"
            let v1405 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1403 v1404 
            let v1406 : string = "leptos::prelude::AnyView::from($0)"
            let v1407 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1405 v1406 
            let v1408 : string = "pre"
            let v1409 : string = "<" + v1408 + " " + v1330 + ">move || { v1407 }</" + v1408 + ">"
            let v1410 : string = "leptos::prelude::view! { " + v1409 + " }"
            let v1411 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1410 
            let v1412 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v1411 |> unbox
            let v1413 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1414 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1412 v1413 
            let v1415 : string = "v1414"
            let v1416 : string = v1415 + v6 
            let v1417 : string = v1416 + v6 
            let v1418 : string = "v1328"
            let v1419 : string = v1418 + v303 
            let v1420 : string = v1419 + v1417 
            let v1421 : string = "vec![" + v1420 + "]"
            let v1422 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1421 
            let v1423 : string = "leptos::prelude::Fragment::new($0)"
            let v1424 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1422 v1423 
            let v1425 : string = "leptos::prelude::AnyView::from($0)"
            let v1426 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1424 v1425 
            let v1427 : string = "<" + v112 + " " + v1264 + ">move || { v1426 }</" + v112 + ">"
            let v1428 : string = "leptos::prelude::view! { " + v1427 + " }"
            let v1429 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1428 
            let v1430 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1429 |> unbox
            let v1431 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1432 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1430 v1431 
            v1432
        | _ ->
            let v1433 : string = "vec![" + v6 + "]"
            let v1434 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1433 
            let v1435 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1436 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1434 v1435 
            v1436
    let v1438 : string = "v1437"
    let v1439 : string = v1438 + v6 
    let v1440 : string = v1439 + v6 
    let v1441 : string = "v1237"
    let v1442 : string = v1441 + v303 
    let v1443 : string = v1442 + v1440 
    let v1444 : string = "vec![" + v1443 + "]"
    let v1445 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1444 
    let v1446 : string = "leptos::prelude::Fragment::new($0)"
    let v1447 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1445 v1446 
    let v1448 : string = "leptos::prelude::AnyView::from($0)"
    let v1449 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1447 v1448 
    let v1450 : string = "<" + v112 + " " + v572 + ">move || { v1449 }</" + v112 + ">"
    let v1451 : string = "leptos::prelude::view! { " + v1450 + " }"
    let v1452 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1451 
    let v1453 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1452 |> unbox
    let v1454 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v1455 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1453 v1454 
    let v1456 : string = "v1455"
    let v1457 : string = v1456 + v6 
    let v1458 : string = v1457 + v6 
    let v1459 : string = "v570"
    let v1460 : string = v1459 + v303 
    let v1461 : string = v1460 + v1458 
    let v1462 : string = "v389"
    let v1463 : string = v1462 + v303 
    let v1464 : string = v1463 + v1461 
    let v1465 : string = "vec![" + v1464 + "]"
    let v1466 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1465 
    let v1467 : string = "leptos::prelude::Fragment::new($0)"
    let v1468 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1466 v1467 
    let v1469 : string = "leptos::prelude::AnyView::from($0)"
    let v1470 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1468 v1469 
    let v1471 : string = "<" + v112 + " " + v7 + ">move || { v1470 }</" + v112 + ">"
    let v1472 : string = "leptos::prelude::view! { " + v1471 + " }"
    let v1473 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1472 
    let v1474 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1473 |> unbox
    let v1475 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v1476 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1474 v1475 
    let v1477 : string = "v1476"
    let v1478 : string = v1477 + v6 
    let v1479 : string = v1478 + v6 
    let v1480 : string = "vec![" + v1479 + "]"
    let v1481 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1480 
    let v1482 : string = "leptos::prelude::Fragment::new($0)"
    let v1483 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1481 v1482 
    v1483
and closure183 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure184 () () : Ref<Lifetime<StaticLifetime, Str>> =
    let v0 : string = ""
    let v1 : string = "r#\"" + v0 + "\"#"
    let v2 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v1 
    v2
and closure185 () () : string =
    let v0 : string = "History"
    v0
and method198 () : (unit -> string) =
    closure185()
and method200 (v0 : Func0<struct (std_string_String * std_string_String option), struct (string * US31)>) : Func0<struct (std_string_String * std_string_String option), struct (string * US31)> =
    v0
and closure188 (v0 : Func0<struct (std_string_String * std_string_String option), struct (string * US31)>) struct (v1 : std_string_String, v2 : std_string_String option) : struct (string * US31) =
    let v3 : Func0<struct (std_string_String * std_string_String option), struct (string * US31)> = method200(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let struct (v6 : string, v7 : US31) = Fable.Core.RustInterop.emitRustExpr v4 v5 
    struct (v6, v7)
and closure189 () struct (v0 : string, v1 : US31) : bool =
    let v2 : bool = "FUNCTION_CALL" = v0
    if v2 then
        match v1 with
        | US31_0(v3) -> (* Some *)
            let v4 : bool = "generate_random_number" = v3
            v4
        | _ ->
            false
    else
        false
and method201 () : (struct (string * US31) -> bool) =
    closure189()
and method202 (v0 : Vec<struct (string * US31)>) : Vec<struct (string * US31)> =
    v0
and closure187 () struct (v0 : string, v1 : unativeint, v2 : Heap5) : bool =
    let v3 : (struct (std_string_String * std_string_String option) []) = v2.l7
    let v4 : string = "$0.to_vec()"
    let v5 : Vec<struct (std_string_String * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : unit = ()
    let v7 : string = $"true; let _func1_from_v6 = Func1::from(move |value| {{ //"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr () v7 
    let v9 : string = $"value"
    let struct (v10 : std_string_String, v11 : std_string_String option) = Fable.Core.RustInterop.emitRustExpr () v9 
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v10 v12 
    let v16 : (std_string_String -> US14) = method39()
    let v17 : US14 option = v11 |> Option.map v16 
    let v31 : US14 = US14_1
    let v32 : US14 = v17 |> Option.defaultValue v31 
    let v42 : US31 =
        match v32 with
        | US14_1 -> (* None *)
            US31_1
        | US14_0(v36) -> (* Some *)
            let v37 : string = "fable_library_rust::String_::fromString($0)"
            let v38 : string = Fable.Core.RustInterop.emitRustExpr v36 v37 
            US31_0(v38)
    let func1_from_result = struct (v13, v42) //
    let v43 : _ = func1_from_result
    let v44 : string = $"true; $0 /*"
    let v45 : bool = Fable.Core.RustInterop.emitRustExpr v43 v44 
    let v46 : string = $"*/ }}); //"
    let v47 : bool = Fable.Core.RustInterop.emitRustExpr () v46 
    let v48 : string = $"_func1_from_v6"
    let v49 : Func0<struct (std_string_String * std_string_String option), struct (string * US31)> = Fable.Core.RustInterop.emitRustExpr () v48 
    let v50 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v51 : (struct (std_string_String * std_string_String option) -> struct (string * US31)) = closure188(v49)
    let v52 : Vec<struct (string * US31)> = Fable.Core.RustInterop.emitRustExpr struct (v5, v51) v50 
    let v53 : (struct (string * US31) -> bool) = method201()
    let v54 : Vec<struct (string * US31)> = method202(v52)
    let v55 : string = "v54.into_iter().filter(|x| v53(x.clone().clone())).collect::<Vec<_>>()"
    let v56 : Vec<struct (string * US31)> = Fable.Core.RustInterop.emitRustExpr () v55 
    let v57 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v58 : (struct (string * US31) []) = Fable.Core.RustInterop.emitRustExpr v56 v57 
    let v59 : int32 = v58.Length
    let v60 : bool = v59 > 0
    let v61 : std_string_String = v2.l2
    let v62 : string = "fable_library_rust::String_::fromString($0)"
    let v63 : string = Fable.Core.RustInterop.emitRustExpr v61 v62 
    let v64 : bool = v0 = v63
    let v65 : bool = v60 && v64
    v65
and method199 () : (struct (string * unativeint * Heap5) -> bool) =
    closure187()
and method203 (v0 : Vec<struct (string * unativeint * Heap5)>) : Vec<struct (string * unativeint * Heap5)> =
    v0
and method204 (v0 : int64) : int64 =
    v0
and closure190 () (v0 : chrono_DateTime<chrono_Utc>) : US68 =
    US68_0(v0)
and method205 () : (chrono_DateTime<chrono_Utc> -> US68) =
    closure190()
and method206 (v0 : int32, v1 : Mut2) : bool =
    let v2 : int32 = v1.l0
    let v3 : bool = v2 < v0
    v3
and closure191 () () : string =
    let v0 : string = "[width:24px] [height:30px]"
    v0
and closure186 (v0 : leptos_prelude_ArcMemo<Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>>, v1 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>, v2 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>>) () : leptos_dom_Fragment =
    let v3 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v4 : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v6 : (struct (string * Vec<struct (string * US23 * string * bool * bool)>) []) = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : uint64 = System.Convert.ToUInt64 v6.Length
    let v8 : bool = v7 = 0UL
    let v2410 : leptos_prelude_AnyView_ =
        if v8 then
            let v9 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
            let v10 : string = ""
            let v11 : string = " " + v9 + v10 + ""
            let v12 : string = "class=\"[height:17px]\""
            let v13 : string = " " + v12 + v10 + ""
            let v14 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v15 : string = "fill=\"none\""
            let v16 : string = "height=\"100%\""
            let v17 : string = "viewBox=\"0 0 24 24\""
            let v18 : string = "stroke-width=\"1.5\""
            let v19 : string = "stroke=\"currentColor\""
            let v20 : string = "class=\"text-red-700\""
            let v21 : string = " " + v14 + v10 + ""
            let v22 : string = " " + v15 + v21 + ""
            let v23 : string = " " + v16 + v22 + ""
            let v24 : string = " " + v17 + v23 + ""
            let v25 : string = " " + v18 + v24 + ""
            let v26 : string = " " + v19 + v25 + ""
            let v27 : string = " " + v20 + v26 + ""
            let v28 : string = "stroke-linecap=\"round\""
            let v29 : string = "stroke-linejoin=\"round\""
            let v30 : string = "d=\"M6 18L18 6M6 6l12 12\""
            let v31 : string = " " + v28 + v10 + ""
            let v32 : string = " " + v29 + v31 + ""
            let v33 : string = " " + v30 + v32 + ""
            let v34 : string = "vec![" + v10 + "]"
            let v35 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v34 
            let v36 : string = "leptos::prelude::Fragment::new($0)"
            let v37 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v35 v36 
            let v38 : string = "leptos::prelude::AnyView::from($0)"
            let v39 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v37 v38 
            let v40 : string = "path"
            let v41 : string = "<" + v40 + " " + v33 + ">move || { v39 }</" + v40 + ">"
            let v42 : string = "leptos::prelude::view! { " + v41 + " }"
            let v43 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v42 
            let v44 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v43 |> unbox
            let v45 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v46 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v44 v45 
            let v47 : string = "v46"
            let v48 : string = v47 + v10 
            let v49 : string = v48 + v10 
            let v50 : string = "vec![" + v49 + "]"
            let v51 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v50 
            let v52 : string = "leptos::prelude::Fragment::new($0)"
            let v53 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v51 v52 
            let v54 : string = "leptos::prelude::AnyView::from($0)"
            let v55 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v53 v54 
            let v56 : string = "svg"
            let v57 : string = "<" + v56 + " " + v27 + ">move || { v55 }</" + v56 + ">"
            let v58 : string = "leptos::prelude::view! { " + v57 + " }"
            let v59 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v58 
            let v60 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v59 |> unbox
            let v61 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v62 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v60 v61 
            let v63 : string = "v62"
            let v64 : string = v63 + v10 
            let v65 : string = v64 + v10 
            let v66 : string = "vec![" + v65 + "]"
            let v67 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v66 
            let v68 : string = "leptos::prelude::Fragment::new($0)"
            let v69 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v67 v68 
            let v70 : string = "leptos::prelude::AnyView::from($0)"
            let v71 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v69 v70 
            let v72 : string = "span"
            let v73 : string = "<" + v72 + " " + v13 + ">move || { v71 }</" + v72 + ">"
            let v74 : string = "leptos::prelude::view! { " + v73 + " }"
            let v75 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v74 
            let v76 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v75 |> unbox
            let v77 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v78 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v76 v77 
            let v79 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
            let v80 : string = " " + v79 + v10 + ""
            let v81 : string = "No account selected"
            (* run_target_args'
            let v86 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v87 : string = "&*$0"
            let v88 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v87 
            let _run_target_args'_v86 = v88 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v89 : string = "&*$0"
            let v90 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v89 
            let _run_target_args'_v86 = v90 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v91 : string = "&*$0"
            let v92 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v91 
            let _run_target_args'_v86 = v92 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v94 : Ref<Str> = v81 |> unbox<Ref<Str>>
            let _run_target_args'_v86 = v94 
            #endif
#if FABLE_COMPILER_PYTHON
            let v98 : Ref<Str> = v81 |> unbox<Ref<Str>>
            let _run_target_args'_v86 = v98 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v102 : Ref<Str> = v81 |> unbox<Ref<Str>>
            let _run_target_args'_v86 = v102 
            #endif
#else
            let v106 : Ref<Str> = v81 |> unbox<Ref<Str>>
            let _run_target_args'_v86 = v106 
            #endif
            let v109 : Ref<Str> = _run_target_args'_v86 
            (* run_target_args'
            let v119 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v120 : string = "String::from($0)"
            let v121 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v120 
            let _run_target_args'_v119 = v121 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v122 : string = "String::from($0)"
            let v123 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v122 
            let _run_target_args'_v119 = v123 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v124 : string = "String::from($0)"
            let v125 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v124 
            let _run_target_args'_v119 = v125 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v127 : std_string_String = v109 |> unbox<std_string_String>
            let _run_target_args'_v119 = v127 
            #endif
#if FABLE_COMPILER_PYTHON
            let v131 : std_string_String = v109 |> unbox<std_string_String>
            let _run_target_args'_v119 = v131 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v135 : std_string_String = v109 |> unbox<std_string_String>
            let _run_target_args'_v119 = v135 
            #endif
#else
            let v139 : std_string_String = v109 |> unbox<std_string_String>
            let _run_target_args'_v119 = v139 
            #endif
            let v142 : std_string_String = _run_target_args'_v119 
            let v148 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v149 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v142 v148 
            let v150 : string = "v149"
            let v151 : string = v150 + v10 
            let v152 : string = v151 + v10 
            let v153 : string = "vec![" + v152 + "]"
            let v154 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v153 
            let v155 : string = "leptos::prelude::Fragment::new($0)"
            let v156 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v154 v155 
            let v157 : string = "leptos::prelude::AnyView::from($0)"
            let v158 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v156 v157 
            let v159 : string = "pre"
            let v160 : string = "<" + v159 + " " + v80 + ">move || { v158 }</" + v159 + ">"
            let v161 : string = "leptos::prelude::view! { " + v160 + " }"
            let v162 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v161 
            let v163 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v162 |> unbox
            let v164 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v165 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v163 v164 
            let v166 : string = "v165"
            let v167 : string = v166 + v10 
            let v168 : string = v167 + v10 
            let v169 : string = "v78"
            let v170 : string = ", "
            let v171 : string = v169 + v170 
            let v172 : string = v171 + v168 
            let v173 : string = "vec![" + v172 + "]"
            let v174 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v173 
            let v175 : string = "leptos::prelude::Fragment::new($0)"
            let v176 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v174 v175 
            let v177 : string = "leptos::prelude::AnyView::from($0)"
            let v178 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v176 v177 
            let v179 : string = "div"
            let v180 : string = "<" + v179 + " " + v11 + ">move || { v178 }</" + v179 + ">"
            let v181 : string = "leptos::prelude::view! { " + v180 + " }"
            let v182 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v181 
            let v183 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v182 |> unbox
            let v184 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v185 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v183 v184 
            v185
        else
            let v186 : string = $"leptos::prelude::ArcMemo::get(&$0)"
            let v187 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v1 v186 
            let v188 : ((struct (string * unativeint * Heap5) []) option -> US53) = method138()
            let v189 : (std_string_String -> US53) = method139()
            let v191 : US53 = match v187 with Ok x -> v188 x | Error x -> v189 x
            let v221 : US46 =
                match v191 with
                | US53_1(v218) -> (* Error *)
                    US46_1(v218)
                | US53_0(v194) -> (* Ok *)
                    let v197 : ((struct (string * unativeint * Heap5) []) -> US47) = method140()
                    let v198 : US47 option = v194 |> Option.map v197 
                    let v212 : US47 = US47_1
                    let v213 : US47 = v198 |> Option.defaultValue v212 
                    US46_0(v213)
            match v221 with
            | US46_1(v2229) -> (* Error *)
                let v2230 : string = "fable_library_rust::String_::fromString($0)"
                let v2231 : string = Fable.Core.RustInterop.emitRustExpr v2229 v2230 
                let v2232 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
                let v2233 : string = ""
                let v2234 : string = " " + v2232 + v2233 + ""
                let v2235 : string = "class=\"[height:17px]\""
                let v2236 : string = " " + v2235 + v2233 + ""
                let v2237 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                let v2238 : string = "fill=\"none\""
                let v2239 : string = "height=\"100%\""
                let v2240 : string = "viewBox=\"0 0 24 24\""
                let v2241 : string = "stroke-width=\"1.5\""
                let v2242 : string = "stroke=\"currentColor\""
                let v2243 : string = "class=\"text-red-700\""
                let v2244 : string = " " + v2237 + v2233 + ""
                let v2245 : string = " " + v2238 + v2244 + ""
                let v2246 : string = " " + v2239 + v2245 + ""
                let v2247 : string = " " + v2240 + v2246 + ""
                let v2248 : string = " " + v2241 + v2247 + ""
                let v2249 : string = " " + v2242 + v2248 + ""
                let v2250 : string = " " + v2243 + v2249 + ""
                let v2251 : string = "stroke-linecap=\"round\""
                let v2252 : string = "stroke-linejoin=\"round\""
                let v2253 : string = "d=\"M6 18L18 6M6 6l12 12\""
                let v2254 : string = " " + v2251 + v2233 + ""
                let v2255 : string = " " + v2252 + v2254 + ""
                let v2256 : string = " " + v2253 + v2255 + ""
                let v2257 : string = "vec![" + v2233 + "]"
                let v2258 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2257 
                let v2259 : string = "leptos::prelude::Fragment::new($0)"
                let v2260 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2258 v2259 
                let v2261 : string = "leptos::prelude::AnyView::from($0)"
                let v2262 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2260 v2261 
                let v2263 : string = "path"
                let v2264 : string = "<" + v2263 + " " + v2256 + ">move || { v2262 }</" + v2263 + ">"
                let v2265 : string = "leptos::prelude::view! { " + v2264 + " }"
                let v2266 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2265 
                let v2267 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v2266 |> unbox
                let v2268 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v2269 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2267 v2268 
                let v2270 : string = "v2269"
                let v2271 : string = v2270 + v2233 
                let v2272 : string = v2271 + v2233 
                let v2273 : string = "vec![" + v2272 + "]"
                let v2274 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2273 
                let v2275 : string = "leptos::prelude::Fragment::new($0)"
                let v2276 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2274 v2275 
                let v2277 : string = "leptos::prelude::AnyView::from($0)"
                let v2278 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2276 v2277 
                let v2279 : string = "svg"
                let v2280 : string = "<" + v2279 + " " + v2250 + ">move || { v2278 }</" + v2279 + ">"
                let v2281 : string = "leptos::prelude::view! { " + v2280 + " }"
                let v2282 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2281 
                let v2283 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v2282 |> unbox
                let v2284 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v2285 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2283 v2284 
                let v2286 : string = "v2285"
                let v2287 : string = v2286 + v2233 
                let v2288 : string = v2287 + v2233 
                let v2289 : string = "vec![" + v2288 + "]"
                let v2290 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2289 
                let v2291 : string = "leptos::prelude::Fragment::new($0)"
                let v2292 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2290 v2291 
                let v2293 : string = "leptos::prelude::AnyView::from($0)"
                let v2294 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2292 v2293 
                let v2295 : string = "span"
                let v2296 : string = "<" + v2295 + " " + v2236 + ">move || { v2294 }</" + v2295 + ">"
                let v2297 : string = "leptos::prelude::view! { " + v2296 + " }"
                let v2298 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2297 
                let v2299 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v2298 |> unbox
                let v2300 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v2301 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2299 v2300 
                let v2302 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
                let v2303 : string = " " + v2302 + v2233 + ""
                (* run_target_args'
                let v2308 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v2309 : string = "&*$0"
                let v2310 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2231 v2309 
                let _run_target_args'_v2308 = v2310 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v2311 : string = "&*$0"
                let v2312 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2231 v2311 
                let _run_target_args'_v2308 = v2312 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v2313 : string = "&*$0"
                let v2314 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2231 v2313 
                let _run_target_args'_v2308 = v2314 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v2316 : Ref<Str> = v2231 |> unbox<Ref<Str>>
                let _run_target_args'_v2308 = v2316 
                #endif
#if FABLE_COMPILER_PYTHON
                let v2320 : Ref<Str> = v2231 |> unbox<Ref<Str>>
                let _run_target_args'_v2308 = v2320 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v2324 : Ref<Str> = v2231 |> unbox<Ref<Str>>
                let _run_target_args'_v2308 = v2324 
                #endif
#else
                let v2328 : Ref<Str> = v2231 |> unbox<Ref<Str>>
                let _run_target_args'_v2308 = v2328 
                #endif
                let v2331 : Ref<Str> = _run_target_args'_v2308 
                (* run_target_args'
                let v2341 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v2342 : string = "String::from($0)"
                let v2343 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2331 v2342 
                let _run_target_args'_v2341 = v2343 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v2344 : string = "String::from($0)"
                let v2345 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2331 v2344 
                let _run_target_args'_v2341 = v2345 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v2346 : string = "String::from($0)"
                let v2347 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2331 v2346 
                let _run_target_args'_v2341 = v2347 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v2349 : std_string_String = v2331 |> unbox<std_string_String>
                let _run_target_args'_v2341 = v2349 
                #endif
#if FABLE_COMPILER_PYTHON
                let v2353 : std_string_String = v2331 |> unbox<std_string_String>
                let _run_target_args'_v2341 = v2353 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v2357 : std_string_String = v2331 |> unbox<std_string_String>
                let _run_target_args'_v2341 = v2357 
                #endif
#else
                let v2361 : std_string_String = v2331 |> unbox<std_string_String>
                let _run_target_args'_v2341 = v2361 
                #endif
                let v2364 : std_string_String = _run_target_args'_v2341 
                let v2370 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                let v2371 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2364 v2370 
                let v2372 : string = "v2371"
                let v2373 : string = v2372 + v2233 
                let v2374 : string = v2373 + v2233 
                let v2375 : string = "vec![" + v2374 + "]"
                let v2376 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2375 
                let v2377 : string = "leptos::prelude::Fragment::new($0)"
                let v2378 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2376 v2377 
                let v2379 : string = "leptos::prelude::AnyView::from($0)"
                let v2380 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2378 v2379 
                let v2381 : string = "pre"
                let v2382 : string = "<" + v2381 + " " + v2303 + ">move || { v2380 }</" + v2381 + ">"
                let v2383 : string = "leptos::prelude::view! { " + v2382 + " }"
                let v2384 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2383 
                let v2385 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v2384 |> unbox
                let v2386 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v2387 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2385 v2386 
                let v2388 : string = "v2387"
                let v2389 : string = v2388 + v2233 
                let v2390 : string = v2389 + v2233 
                let v2391 : string = "v2301"
                let v2392 : string = ", "
                let v2393 : string = v2391 + v2392 
                let v2394 : string = v2393 + v2390 
                let v2395 : string = "vec![" + v2394 + "]"
                let v2396 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2395 
                let v2397 : string = "leptos::prelude::Fragment::new($0)"
                let v2398 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2396 v2397 
                let v2399 : string = "leptos::prelude::AnyView::from($0)"
                let v2400 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2398 v2399 
                let v2401 : string = "div"
                let v2402 : string = "<" + v2401 + " " + v2234 + ">move || { v2400 }</" + v2401 + ">"
                let v2403 : string = "leptos::prelude::view! { " + v2402 + " }"
                let v2404 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2403 
                let v2405 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v2404 |> unbox
                let v2406 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v2407 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2405 v2406 
                v2407
            | US46_0(v222) -> (* Ok *)
                match v222 with
                | US47_0(v223) -> (* Some *)
                    let v224 : string = "$0.to_vec()"
                    let v225 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr v223 v224 
                    let v226 : (struct (string * unativeint * Heap5) -> bool) = method199()
                    let v227 : Vec<struct (string * unativeint * Heap5)> = method203(v225)
                    let v228 : string = "v227.into_iter().filter(|x| v226(x.clone().clone())).collect::<Vec<_>>()"
                    let v229 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr () v228 
                    let v230 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v231 : string = ""
                    let v232 : string = " " + v230 + v231 + ""
                    let v233 : string = "Block Timestamp"
                    (* run_target_args'
                    let v238 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v239 : string = "&*$0"
                    let v240 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v233 v239 
                    let _run_target_args'_v238 = v240 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v241 : string = "&*$0"
                    let v242 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v233 v241 
                    let _run_target_args'_v238 = v242 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v243 : string = "&*$0"
                    let v244 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v233 v243 
                    let _run_target_args'_v238 = v244 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v246 : Ref<Str> = v233 |> unbox<Ref<Str>>
                    let _run_target_args'_v238 = v246 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v250 : Ref<Str> = v233 |> unbox<Ref<Str>>
                    let _run_target_args'_v238 = v250 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v254 : Ref<Str> = v233 |> unbox<Ref<Str>>
                    let _run_target_args'_v238 = v254 
                    #endif
#else
                    let v258 : Ref<Str> = v233 |> unbox<Ref<Str>>
                    let _run_target_args'_v238 = v258 
                    #endif
                    let v261 : Ref<Str> = _run_target_args'_v238 
                    (* run_target_args'
                    let v271 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v272 : string = "String::from($0)"
                    let v273 : std_string_String = Fable.Core.RustInterop.emitRustExpr v261 v272 
                    let _run_target_args'_v271 = v273 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v274 : string = "String::from($0)"
                    let v275 : std_string_String = Fable.Core.RustInterop.emitRustExpr v261 v274 
                    let _run_target_args'_v271 = v275 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v276 : string = "String::from($0)"
                    let v277 : std_string_String = Fable.Core.RustInterop.emitRustExpr v261 v276 
                    let _run_target_args'_v271 = v277 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v279 : std_string_String = v261 |> unbox<std_string_String>
                    let _run_target_args'_v271 = v279 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v283 : std_string_String = v261 |> unbox<std_string_String>
                    let _run_target_args'_v271 = v283 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v287 : std_string_String = v261 |> unbox<std_string_String>
                    let _run_target_args'_v271 = v287 
                    #endif
#else
                    let v291 : std_string_String = v261 |> unbox<std_string_String>
                    let _run_target_args'_v271 = v291 
                    #endif
                    let v294 : std_string_String = _run_target_args'_v271 
                    let v300 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v301 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v294 v300 
                    let v302 : string = "v301"
                    let v303 : string = v302 + v231 
                    let v304 : string = v303 + v231 
                    let v305 : string = "vec![" + v304 + "]"
                    let v306 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v305 
                    let v307 : string = "leptos::prelude::Fragment::new($0)"
                    let v308 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v306 v307 
                    let v309 : string = "leptos::prelude::AnyView::from($0)"
                    let v310 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v308 v309 
                    let v311 : string = "th"
                    let v312 : string = "<" + v311 + " " + v232 + ">move || { v310 }</" + v311 + ">"
                    let v313 : string = "leptos::prelude::view! { " + v312 + " }"
                    let v314 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v313 
                    let v315 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v314 |> unbox
                    let v316 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v317 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v315 v316 
                    let v318 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v319 : string = " " + v318 + v231 + ""
                    let v320 : string = "Predecessor"
                    (* run_target_args'
                    let v325 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v326 : string = "&*$0"
                    let v327 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v320 v326 
                    let _run_target_args'_v325 = v327 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v328 : string = "&*$0"
                    let v329 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v320 v328 
                    let _run_target_args'_v325 = v329 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v330 : string = "&*$0"
                    let v331 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v320 v330 
                    let _run_target_args'_v325 = v331 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v333 : Ref<Str> = v320 |> unbox<Ref<Str>>
                    let _run_target_args'_v325 = v333 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v337 : Ref<Str> = v320 |> unbox<Ref<Str>>
                    let _run_target_args'_v325 = v337 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v341 : Ref<Str> = v320 |> unbox<Ref<Str>>
                    let _run_target_args'_v325 = v341 
                    #endif
#else
                    let v345 : Ref<Str> = v320 |> unbox<Ref<Str>>
                    let _run_target_args'_v325 = v345 
                    #endif
                    let v348 : Ref<Str> = _run_target_args'_v325 
                    (* run_target_args'
                    let v358 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v359 : string = "String::from($0)"
                    let v360 : std_string_String = Fable.Core.RustInterop.emitRustExpr v348 v359 
                    let _run_target_args'_v358 = v360 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v361 : string = "String::from($0)"
                    let v362 : std_string_String = Fable.Core.RustInterop.emitRustExpr v348 v361 
                    let _run_target_args'_v358 = v362 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v363 : string = "String::from($0)"
                    let v364 : std_string_String = Fable.Core.RustInterop.emitRustExpr v348 v363 
                    let _run_target_args'_v358 = v364 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v366 : std_string_String = v348 |> unbox<std_string_String>
                    let _run_target_args'_v358 = v366 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v370 : std_string_String = v348 |> unbox<std_string_String>
                    let _run_target_args'_v358 = v370 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v374 : std_string_String = v348 |> unbox<std_string_String>
                    let _run_target_args'_v358 = v374 
                    #endif
#else
                    let v378 : std_string_String = v348 |> unbox<std_string_String>
                    let _run_target_args'_v358 = v378 
                    #endif
                    let v381 : std_string_String = _run_target_args'_v358 
                    let v387 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v388 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v381 v387 
                    let v389 : string = "v388"
                    let v390 : string = v389 + v231 
                    let v391 : string = v390 + v231 
                    let v392 : string = "vec![" + v391 + "]"
                    let v393 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v392 
                    let v394 : string = "leptos::prelude::Fragment::new($0)"
                    let v395 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v393 v394 
                    let v396 : string = "leptos::prelude::AnyView::from($0)"
                    let v397 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v395 v396 
                    let v398 : string = "<" + v311 + " " + v319 + ">move || { v397 }</" + v311 + ">"
                    let v399 : string = "leptos::prelude::view! { " + v398 + " }"
                    let v400 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v399 
                    let v401 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v400 |> unbox
                    let v402 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v403 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v401 v402 
                    let v404 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v405 : string = " " + v404 + v231 + ""
                    let v406 : string = "Receiver"
                    (* run_target_args'
                    let v411 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v412 : string = "&*$0"
                    let v413 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v406 v412 
                    let _run_target_args'_v411 = v413 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v414 : string = "&*$0"
                    let v415 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v406 v414 
                    let _run_target_args'_v411 = v415 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v416 : string = "&*$0"
                    let v417 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v406 v416 
                    let _run_target_args'_v411 = v417 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v419 : Ref<Str> = v406 |> unbox<Ref<Str>>
                    let _run_target_args'_v411 = v419 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v423 : Ref<Str> = v406 |> unbox<Ref<Str>>
                    let _run_target_args'_v411 = v423 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v427 : Ref<Str> = v406 |> unbox<Ref<Str>>
                    let _run_target_args'_v411 = v427 
                    #endif
#else
                    let v431 : Ref<Str> = v406 |> unbox<Ref<Str>>
                    let _run_target_args'_v411 = v431 
                    #endif
                    let v434 : Ref<Str> = _run_target_args'_v411 
                    (* run_target_args'
                    let v444 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v445 : string = "String::from($0)"
                    let v446 : std_string_String = Fable.Core.RustInterop.emitRustExpr v434 v445 
                    let _run_target_args'_v444 = v446 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v447 : string = "String::from($0)"
                    let v448 : std_string_String = Fable.Core.RustInterop.emitRustExpr v434 v447 
                    let _run_target_args'_v444 = v448 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v449 : string = "String::from($0)"
                    let v450 : std_string_String = Fable.Core.RustInterop.emitRustExpr v434 v449 
                    let _run_target_args'_v444 = v450 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v452 : std_string_String = v434 |> unbox<std_string_String>
                    let _run_target_args'_v444 = v452 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v456 : std_string_String = v434 |> unbox<std_string_String>
                    let _run_target_args'_v444 = v456 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v460 : std_string_String = v434 |> unbox<std_string_String>
                    let _run_target_args'_v444 = v460 
                    #endif
#else
                    let v464 : std_string_String = v434 |> unbox<std_string_String>
                    let _run_target_args'_v444 = v464 
                    #endif
                    let v467 : std_string_String = _run_target_args'_v444 
                    let v473 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v474 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v467 v473 
                    let v475 : string = "v474"
                    let v476 : string = v475 + v231 
                    let v477 : string = v476 + v231 
                    let v478 : string = "vec![" + v477 + "]"
                    let v479 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v478 
                    let v480 : string = "leptos::prelude::Fragment::new($0)"
                    let v481 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v479 v480 
                    let v482 : string = "leptos::prelude::AnyView::from($0)"
                    let v483 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v481 v482 
                    let v484 : string = "<" + v311 + " " + v405 + ">move || { v483 }</" + v311 + ">"
                    let v485 : string = "leptos::prelude::view! { " + v484 + " }"
                    let v486 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v485 
                    let v487 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v486 |> unbox
                    let v488 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v489 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v487 v488 
                    let v490 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v491 : string = " " + v490 + v231 + ""
                    let v492 : string = "Fee"
                    (* run_target_args'
                    let v497 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v498 : string = "&*$0"
                    let v499 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v492 v498 
                    let _run_target_args'_v497 = v499 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v500 : string = "&*$0"
                    let v501 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v492 v500 
                    let _run_target_args'_v497 = v501 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v502 : string = "&*$0"
                    let v503 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v492 v502 
                    let _run_target_args'_v497 = v503 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v505 : Ref<Str> = v492 |> unbox<Ref<Str>>
                    let _run_target_args'_v497 = v505 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v509 : Ref<Str> = v492 |> unbox<Ref<Str>>
                    let _run_target_args'_v497 = v509 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v513 : Ref<Str> = v492 |> unbox<Ref<Str>>
                    let _run_target_args'_v497 = v513 
                    #endif
#else
                    let v517 : Ref<Str> = v492 |> unbox<Ref<Str>>
                    let _run_target_args'_v497 = v517 
                    #endif
                    let v520 : Ref<Str> = _run_target_args'_v497 
                    (* run_target_args'
                    let v530 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v531 : string = "String::from($0)"
                    let v532 : std_string_String = Fable.Core.RustInterop.emitRustExpr v520 v531 
                    let _run_target_args'_v530 = v532 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v533 : string = "String::from($0)"
                    let v534 : std_string_String = Fable.Core.RustInterop.emitRustExpr v520 v533 
                    let _run_target_args'_v530 = v534 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v535 : string = "String::from($0)"
                    let v536 : std_string_String = Fable.Core.RustInterop.emitRustExpr v520 v535 
                    let _run_target_args'_v530 = v536 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v538 : std_string_String = v520 |> unbox<std_string_String>
                    let _run_target_args'_v530 = v538 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v542 : std_string_String = v520 |> unbox<std_string_String>
                    let _run_target_args'_v530 = v542 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v546 : std_string_String = v520 |> unbox<std_string_String>
                    let _run_target_args'_v530 = v546 
                    #endif
#else
                    let v550 : std_string_String = v520 |> unbox<std_string_String>
                    let _run_target_args'_v530 = v550 
                    #endif
                    let v553 : std_string_String = _run_target_args'_v530 
                    let v559 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v560 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v553 v559 
                    let v561 : string = "v560"
                    let v562 : string = v561 + v231 
                    let v563 : string = v562 + v231 
                    let v564 : string = "vec![" + v563 + "]"
                    let v565 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v564 
                    let v566 : string = "leptos::prelude::Fragment::new($0)"
                    let v567 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v565 v566 
                    let v568 : string = "leptos::prelude::AnyView::from($0)"
                    let v569 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v567 v568 
                    let v570 : string = "<" + v311 + " " + v491 + ">move || { v569 }</" + v311 + ">"
                    let v571 : string = "leptos::prelude::view! { " + v570 + " }"
                    let v572 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v571 
                    let v573 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v572 |> unbox
                    let v574 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v575 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v573 v574 
                    let v576 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v577 : string = " " + v576 + v231 + ""
                    let v578 : string = "Result"
                    (* run_target_args'
                    let v583 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v584 : string = "&*$0"
                    let v585 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v578 v584 
                    let _run_target_args'_v583 = v585 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v586 : string = "&*$0"
                    let v587 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v578 v586 
                    let _run_target_args'_v583 = v587 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v588 : string = "&*$0"
                    let v589 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v578 v588 
                    let _run_target_args'_v583 = v589 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v591 : Ref<Str> = v578 |> unbox<Ref<Str>>
                    let _run_target_args'_v583 = v591 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v595 : Ref<Str> = v578 |> unbox<Ref<Str>>
                    let _run_target_args'_v583 = v595 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v599 : Ref<Str> = v578 |> unbox<Ref<Str>>
                    let _run_target_args'_v583 = v599 
                    #endif
#else
                    let v603 : Ref<Str> = v578 |> unbox<Ref<Str>>
                    let _run_target_args'_v583 = v603 
                    #endif
                    let v606 : Ref<Str> = _run_target_args'_v583 
                    (* run_target_args'
                    let v616 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v617 : string = "String::from($0)"
                    let v618 : std_string_String = Fable.Core.RustInterop.emitRustExpr v606 v617 
                    let _run_target_args'_v616 = v618 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v619 : string = "String::from($0)"
                    let v620 : std_string_String = Fable.Core.RustInterop.emitRustExpr v606 v619 
                    let _run_target_args'_v616 = v620 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v621 : string = "String::from($0)"
                    let v622 : std_string_String = Fable.Core.RustInterop.emitRustExpr v606 v621 
                    let _run_target_args'_v616 = v622 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v624 : std_string_String = v606 |> unbox<std_string_String>
                    let _run_target_args'_v616 = v624 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v628 : std_string_String = v606 |> unbox<std_string_String>
                    let _run_target_args'_v616 = v628 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v632 : std_string_String = v606 |> unbox<std_string_String>
                    let _run_target_args'_v616 = v632 
                    #endif
#else
                    let v636 : std_string_String = v606 |> unbox<std_string_String>
                    let _run_target_args'_v616 = v636 
                    #endif
                    let v639 : std_string_String = _run_target_args'_v616 
                    let v645 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v646 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v639 v645 
                    let v647 : string = "v646"
                    let v648 : string = v647 + v231 
                    let v649 : string = v648 + v231 
                    let v650 : string = "vec![" + v649 + "]"
                    let v651 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v650 
                    let v652 : string = "leptos::prelude::Fragment::new($0)"
                    let v653 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v651 v652 
                    let v654 : string = "leptos::prelude::AnyView::from($0)"
                    let v655 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v653 v654 
                    let v656 : string = "<" + v311 + " " + v577 + ">move || { v655 }</" + v311 + ">"
                    let v657 : string = "leptos::prelude::view! { " + v656 + " }"
                    let v658 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v657 
                    let v659 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v658 |> unbox
                    let v660 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v661 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v659 v660 
                    let v662 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v663 : string = " " + v662 + v231 + ""
                    let v664 : string = "Status"
                    (* run_target_args'
                    let v669 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v670 : string = "&*$0"
                    let v671 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v664 v670 
                    let _run_target_args'_v669 = v671 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v672 : string = "&*$0"
                    let v673 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v664 v672 
                    let _run_target_args'_v669 = v673 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v674 : string = "&*$0"
                    let v675 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v664 v674 
                    let _run_target_args'_v669 = v675 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v677 : Ref<Str> = v664 |> unbox<Ref<Str>>
                    let _run_target_args'_v669 = v677 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v681 : Ref<Str> = v664 |> unbox<Ref<Str>>
                    let _run_target_args'_v669 = v681 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v685 : Ref<Str> = v664 |> unbox<Ref<Str>>
                    let _run_target_args'_v669 = v685 
                    #endif
#else
                    let v689 : Ref<Str> = v664 |> unbox<Ref<Str>>
                    let _run_target_args'_v669 = v689 
                    #endif
                    let v692 : Ref<Str> = _run_target_args'_v669 
                    (* run_target_args'
                    let v702 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v703 : string = "String::from($0)"
                    let v704 : std_string_String = Fable.Core.RustInterop.emitRustExpr v692 v703 
                    let _run_target_args'_v702 = v704 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v705 : string = "String::from($0)"
                    let v706 : std_string_String = Fable.Core.RustInterop.emitRustExpr v692 v705 
                    let _run_target_args'_v702 = v706 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v707 : string = "String::from($0)"
                    let v708 : std_string_String = Fable.Core.RustInterop.emitRustExpr v692 v707 
                    let _run_target_args'_v702 = v708 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v710 : std_string_String = v692 |> unbox<std_string_String>
                    let _run_target_args'_v702 = v710 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v714 : std_string_String = v692 |> unbox<std_string_String>
                    let _run_target_args'_v702 = v714 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v718 : std_string_String = v692 |> unbox<std_string_String>
                    let _run_target_args'_v702 = v718 
                    #endif
#else
                    let v722 : std_string_String = v692 |> unbox<std_string_String>
                    let _run_target_args'_v702 = v722 
                    #endif
                    let v725 : std_string_String = _run_target_args'_v702 
                    let v731 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v732 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v725 v731 
                    let v733 : string = "v732"
                    let v734 : string = v733 + v231 
                    let v735 : string = v734 + v231 
                    let v736 : string = "vec![" + v735 + "]"
                    let v737 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v736 
                    let v738 : string = "leptos::prelude::Fragment::new($0)"
                    let v739 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v737 v738 
                    let v740 : string = "leptos::prelude::AnyView::from($0)"
                    let v741 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v739 v740 
                    let v742 : string = "<" + v311 + " " + v663 + ">move || { v741 }</" + v311 + ">"
                    let v743 : string = "leptos::prelude::view! { " + v742 + " }"
                    let v744 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v743 
                    let v745 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v744 |> unbox
                    let v746 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v747 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v745 v746 
                    let v748 : string = "v747"
                    let v749 : string = v748 + v231 
                    let v750 : string = v749 + v231 
                    let v751 : string = "v661"
                    let v752 : string = ", "
                    let v753 : string = v751 + v752 
                    let v754 : string = v753 + v750 
                    let v755 : string = "v575"
                    let v756 : string = v755 + v752 
                    let v757 : string = v756 + v754 
                    let v758 : string = "v489"
                    let v759 : string = v758 + v752 
                    let v760 : string = v759 + v757 
                    let v761 : string = "v403"
                    let v762 : string = v761 + v752 
                    let v763 : string = v762 + v760 
                    let v764 : string = "v317"
                    let v765 : string = v764 + v752 
                    let v766 : string = v765 + v763 
                    let v767 : string = "vec![" + v766 + "]"
                    let v768 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v767 
                    let v769 : string = "leptos::prelude::Fragment::new($0)"
                    let v770 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v768 v769 
                    let v771 : string = "leptos::prelude::AnyView::from($0)"
                    let v772 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v770 v771 
                    let v773 : string = "tr"
                    let v774 : string = "<" + v773 + " " + v231 + ">move || { v772 }</" + v773 + ">"
                    let v775 : string = "leptos::prelude::view! { " + v774 + " }"
                    let v776 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v775 
                    let v777 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>> = v776 |> unbox
                    let v778 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v779 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v777 v778 
                    let v780 : string = "v779"
                    let v781 : string = v780 + v231 
                    let v782 : string = v781 + v231 
                    let v783 : string = "vec![" + v782 + "]"
                    let v784 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v783 
                    let v785 : string = "leptos::prelude::Fragment::new($0)"
                    let v786 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v784 v785 
                    let v787 : string = $"leptos::prelude::ArcMemo::get(&$0)"
                    let v788 : Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v0 v787 
                    let v789 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v790 : bool = Fable.Core.RustInterop.emitRustExpr v229 v789 
                    let v791 : string = "x"
                    let struct (v792 : string, v793 : unativeint, v794 : Heap5) = Fable.Core.RustInterop.emitRustExpr () v791 
                    let v795 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v796 : (Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v788 v795 
                    let v802 : int32 = v793 |> int32 
                    let v811 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = v796.[int v802]
                    let v814 : string = "class=\"odd:bg-gray-50 dark:odd:bg-gray-800/50\""
                    let v815 : string = " " + v814 + v231 + ""
                    let v816 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v817 : string = " " + v816 + v231 + ""
                    let v818 : std_string_String = v794.l5
                    let v819 : string = "fable_library_rust::String_::fromString($0)"
                    let v820 : string = Fable.Core.RustInterop.emitRustExpr v818 v819 
                    let v822 : (string -> int64) = int64
                    let v823 : int64 = v822 v820
                    let v826 : int64 = method204(v823)
                    let v827 : int64 = v826 / 1000L
                    let v828 : string = "chrono::DateTime::from_timestamp_micros($0)"
                    let v829 : chrono_DateTime<chrono_Utc> option = Fable.Core.RustInterop.emitRustExpr v827 v828 
                    let v832 : (chrono_DateTime<chrono_Utc> -> US68) = method205()
                    let v833 : US68 option = v829 |> Option.map v832 
                    let v847 : US68 = US68_1
                    let v848 : US68 = v833 |> Option.defaultValue v847 
                    let v867 : US31 =
                        match v848 with
                        | US68_1 -> (* None *)
                            US31_1
                        | US68_0(v852) -> (* Some *)
                            let v853 : string = "$0.naive_utc()"
                            let v854 : chrono_NaiveDateTime = Fable.Core.RustInterop.emitRustExpr v852 v853 
                            let v855 : string = "chrono::offset::TimeZone::from_utc_datetime(&chrono::Local, &$0)"
                            let v856 : chrono_DateTime<chrono_Local> = Fable.Core.RustInterop.emitRustExpr v854 v855 
                            let v857 : string = "%Y-%m-%d %H:%M:%S"
                            let v858 : string = "r#\"" + v857 + "\"#"
                            let v859 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v858 
                            let v860 : string = "$0.format($1).to_string()"
                            let v861 : std_string_String = Fable.Core.RustInterop.emitRustExpr struct (v856, v859) v860 
                            let v862 : string = "fable_library_rust::String_::fromString($0)"
                            let v863 : string = Fable.Core.RustInterop.emitRustExpr v861 v862 
                            US31_0(v863)
                    let v873 : US69 =
                        match v867 with
                        | US31_1 -> (* None *)
                            let v870 : string = "resultm.from_option / Option does not have a value."
                            US69_1(v870)
                        | US31_0(v868) -> (* Some *)
                            US69_0(v868)
                    let v878 : string =
                        match v873 with
                        | US69_1(v875) -> (* Error *)
                            let v876 : string = "sm'.to_string result / Error: " + v875 + ""
                            v876
                        | US69_0(v874) -> (* Ok *)
                            v874
                    (* run_target_args'
                    let v883 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v884 : string = "&*$0"
                    let v885 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v878 v884 
                    let _run_target_args'_v883 = v885 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v886 : string = "&*$0"
                    let v887 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v878 v886 
                    let _run_target_args'_v883 = v887 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v888 : string = "&*$0"
                    let v889 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v878 v888 
                    let _run_target_args'_v883 = v889 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v891 : Ref<Str> = v878 |> unbox<Ref<Str>>
                    let _run_target_args'_v883 = v891 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v895 : Ref<Str> = v878 |> unbox<Ref<Str>>
                    let _run_target_args'_v883 = v895 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v899 : Ref<Str> = v878 |> unbox<Ref<Str>>
                    let _run_target_args'_v883 = v899 
                    #endif
#else
                    let v903 : Ref<Str> = v878 |> unbox<Ref<Str>>
                    let _run_target_args'_v883 = v903 
                    #endif
                    let v906 : Ref<Str> = _run_target_args'_v883 
                    (* run_target_args'
                    let v916 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v917 : string = "String::from($0)"
                    let v918 : std_string_String = Fable.Core.RustInterop.emitRustExpr v906 v917 
                    let _run_target_args'_v916 = v918 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v919 : string = "String::from($0)"
                    let v920 : std_string_String = Fable.Core.RustInterop.emitRustExpr v906 v919 
                    let _run_target_args'_v916 = v920 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v921 : string = "String::from($0)"
                    let v922 : std_string_String = Fable.Core.RustInterop.emitRustExpr v906 v921 
                    let _run_target_args'_v916 = v922 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v924 : std_string_String = v906 |> unbox<std_string_String>
                    let _run_target_args'_v916 = v924 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v928 : std_string_String = v906 |> unbox<std_string_String>
                    let _run_target_args'_v916 = v928 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v932 : std_string_String = v906 |> unbox<std_string_String>
                    let _run_target_args'_v916 = v932 
                    #endif
#else
                    let v936 : std_string_String = v906 |> unbox<std_string_String>
                    let _run_target_args'_v916 = v936 
                    #endif
                    let v939 : std_string_String = _run_target_args'_v916 
                    let v945 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v946 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v939 v945 
                    let v947 : string = "v946"
                    let v948 : string = v947 + v231 
                    let v949 : string = v948 + v231 
                    let v950 : string = "vec![" + v949 + "]"
                    let v951 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v950 
                    let v952 : string = "leptos::prelude::Fragment::new($0)"
                    let v953 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v951 v952 
                    let v954 : string = "leptos::prelude::AnyView::from($0)"
                    let v955 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v953 v954 
                    let v956 : string = "td"
                    let v957 : string = "<" + v956 + " " + v817 + ">move || { v955 }</" + v956 + ">"
                    let v958 : string = "leptos::prelude::view! { " + v957 + " }"
                    let v959 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v958 
                    let v960 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v959 |> unbox
                    let v961 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v962 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v960 v961 
                    let v963 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v964 : string = " " + v963 + v231 + ""
                    let v965 : std_string_String = v794.l1
                    let v966 : string = "fable_library_rust::String_::fromString($0)"
                    let v967 : string = Fable.Core.RustInterop.emitRustExpr v965 v966 
                    (* run_target_args'
                    let v972 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v973 : string = "&*$0"
                    let v974 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v967 v973 
                    let _run_target_args'_v972 = v974 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v975 : string = "&*$0"
                    let v976 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v967 v975 
                    let _run_target_args'_v972 = v976 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v977 : string = "&*$0"
                    let v978 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v967 v977 
                    let _run_target_args'_v972 = v978 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v980 : Ref<Str> = v967 |> unbox<Ref<Str>>
                    let _run_target_args'_v972 = v980 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v984 : Ref<Str> = v967 |> unbox<Ref<Str>>
                    let _run_target_args'_v972 = v984 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v988 : Ref<Str> = v967 |> unbox<Ref<Str>>
                    let _run_target_args'_v972 = v988 
                    #endif
#else
                    let v992 : Ref<Str> = v967 |> unbox<Ref<Str>>
                    let _run_target_args'_v972 = v992 
                    #endif
                    let v995 : Ref<Str> = _run_target_args'_v972 
                    (* run_target_args'
                    let v1005 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1006 : string = "String::from($0)"
                    let v1007 : std_string_String = Fable.Core.RustInterop.emitRustExpr v995 v1006 
                    let _run_target_args'_v1005 = v1007 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1008 : string = "String::from($0)"
                    let v1009 : std_string_String = Fable.Core.RustInterop.emitRustExpr v995 v1008 
                    let _run_target_args'_v1005 = v1009 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1010 : string = "String::from($0)"
                    let v1011 : std_string_String = Fable.Core.RustInterop.emitRustExpr v995 v1010 
                    let _run_target_args'_v1005 = v1011 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1013 : std_string_String = v995 |> unbox<std_string_String>
                    let _run_target_args'_v1005 = v1013 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1017 : std_string_String = v995 |> unbox<std_string_String>
                    let _run_target_args'_v1005 = v1017 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1021 : std_string_String = v995 |> unbox<std_string_String>
                    let _run_target_args'_v1005 = v1021 
                    #endif
#else
                    let v1025 : std_string_String = v995 |> unbox<std_string_String>
                    let _run_target_args'_v1005 = v1025 
                    #endif
                    let v1028 : std_string_String = _run_target_args'_v1005 
                    let v1034 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v1035 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1028 v1034 
                    let v1036 : string = "v1035"
                    let v1037 : string = v1036 + v231 
                    let v1038 : string = v1037 + v231 
                    let v1039 : string = "vec![" + v1038 + "]"
                    let v1040 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1039 
                    let v1041 : string = "leptos::prelude::Fragment::new($0)"
                    let v1042 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1040 v1041 
                    let v1043 : string = "leptos::prelude::AnyView::from($0)"
                    let v1044 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1042 v1043 
                    let v1045 : string = "<" + v956 + " " + v964 + ">move || { v1044 }</" + v956 + ">"
                    let v1046 : string = "leptos::prelude::view! { " + v1045 + " }"
                    let v1047 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1046 
                    let v1048 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1047 |> unbox
                    let v1049 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1050 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1048 v1049 
                    let v1051 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v1052 : string = " " + v1051 + v231 + ""
                    let v1053 : std_string_String = v794.l2
                    let v1054 : string = "fable_library_rust::String_::fromString($0)"
                    let v1055 : string = Fable.Core.RustInterop.emitRustExpr v1053 v1054 
                    (* run_target_args'
                    let v1060 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1061 : string = "&*$0"
                    let v1062 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1055 v1061 
                    let _run_target_args'_v1060 = v1062 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1063 : string = "&*$0"
                    let v1064 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1055 v1063 
                    let _run_target_args'_v1060 = v1064 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1065 : string = "&*$0"
                    let v1066 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1055 v1065 
                    let _run_target_args'_v1060 = v1066 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1068 : Ref<Str> = v1055 |> unbox<Ref<Str>>
                    let _run_target_args'_v1060 = v1068 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1072 : Ref<Str> = v1055 |> unbox<Ref<Str>>
                    let _run_target_args'_v1060 = v1072 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1076 : Ref<Str> = v1055 |> unbox<Ref<Str>>
                    let _run_target_args'_v1060 = v1076 
                    #endif
#else
                    let v1080 : Ref<Str> = v1055 |> unbox<Ref<Str>>
                    let _run_target_args'_v1060 = v1080 
                    #endif
                    let v1083 : Ref<Str> = _run_target_args'_v1060 
                    (* run_target_args'
                    let v1093 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1094 : string = "String::from($0)"
                    let v1095 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1083 v1094 
                    let _run_target_args'_v1093 = v1095 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1096 : string = "String::from($0)"
                    let v1097 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1083 v1096 
                    let _run_target_args'_v1093 = v1097 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1098 : string = "String::from($0)"
                    let v1099 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1083 v1098 
                    let _run_target_args'_v1093 = v1099 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1101 : std_string_String = v1083 |> unbox<std_string_String>
                    let _run_target_args'_v1093 = v1101 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1105 : std_string_String = v1083 |> unbox<std_string_String>
                    let _run_target_args'_v1093 = v1105 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1109 : std_string_String = v1083 |> unbox<std_string_String>
                    let _run_target_args'_v1093 = v1109 
                    #endif
#else
                    let v1113 : std_string_String = v1083 |> unbox<std_string_String>
                    let _run_target_args'_v1093 = v1113 
                    #endif
                    let v1116 : std_string_String = _run_target_args'_v1093 
                    let v1122 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v1123 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1116 v1122 
                    let v1124 : string = "v1123"
                    let v1125 : string = v1124 + v231 
                    let v1126 : string = v1125 + v231 
                    let v1127 : string = "vec![" + v1126 + "]"
                    let v1128 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1127 
                    let v1129 : string = "leptos::prelude::Fragment::new($0)"
                    let v1130 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1128 v1129 
                    let v1131 : string = "leptos::prelude::AnyView::from($0)"
                    let v1132 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1130 v1131 
                    let v1133 : string = "<" + v956 + " " + v1052 + ">move || { v1132 }</" + v956 + ">"
                    let v1134 : string = "leptos::prelude::view! { " + v1133 + " }"
                    let v1135 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1134 
                    let v1136 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1135 |> unbox
                    let v1137 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1138 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1136 v1137 
                    let v1139 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v1140 : string = " " + v1139 + v231 + ""
                    let v1141 : float = v794.l10
                    let v1143 : (float -> string) = _.ToString()
                    let v1144 : string = v1143 v1141
                    (* run_target_args'
                    let v1151 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1152 : string = "&*$0"
                    let v1153 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1144 v1152 
                    let _run_target_args'_v1151 = v1153 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1154 : string = "&*$0"
                    let v1155 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1144 v1154 
                    let _run_target_args'_v1151 = v1155 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1156 : string = "&*$0"
                    let v1157 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1144 v1156 
                    let _run_target_args'_v1151 = v1157 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1159 : Ref<Str> = v1144 |> unbox<Ref<Str>>
                    let _run_target_args'_v1151 = v1159 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1163 : Ref<Str> = v1144 |> unbox<Ref<Str>>
                    let _run_target_args'_v1151 = v1163 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1167 : Ref<Str> = v1144 |> unbox<Ref<Str>>
                    let _run_target_args'_v1151 = v1167 
                    #endif
#else
                    let v1171 : Ref<Str> = v1144 |> unbox<Ref<Str>>
                    let _run_target_args'_v1151 = v1171 
                    #endif
                    let v1174 : Ref<Str> = _run_target_args'_v1151 
                    (* run_target_args'
                    let v1184 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1185 : string = "String::from($0)"
                    let v1186 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1174 v1185 
                    let _run_target_args'_v1184 = v1186 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1187 : string = "String::from($0)"
                    let v1188 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1174 v1187 
                    let _run_target_args'_v1184 = v1188 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1189 : string = "String::from($0)"
                    let v1190 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1174 v1189 
                    let _run_target_args'_v1184 = v1190 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1192 : std_string_String = v1174 |> unbox<std_string_String>
                    let _run_target_args'_v1184 = v1192 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1196 : std_string_String = v1174 |> unbox<std_string_String>
                    let _run_target_args'_v1184 = v1196 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1200 : std_string_String = v1174 |> unbox<std_string_String>
                    let _run_target_args'_v1184 = v1200 
                    #endif
#else
                    let v1204 : std_string_String = v1174 |> unbox<std_string_String>
                    let _run_target_args'_v1184 = v1204 
                    #endif
                    let v1207 : std_string_String = _run_target_args'_v1184 
                    let v1213 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v1214 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1207 v1213 
                    let v1215 : string = "v1214"
                    let v1216 : string = v1215 + v231 
                    let v1217 : string = v1216 + v231 
                    let v1218 : string = "vec![" + v1217 + "]"
                    let v1219 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1218 
                    let v1220 : string = "leptos::prelude::Fragment::new($0)"
                    let v1221 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1219 v1220 
                    let v1222 : string = "leptos::prelude::AnyView::from($0)"
                    let v1223 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1221 v1222 
                    let v1224 : string = "<" + v956 + " " + v1140 + ">move || { v1223 }</" + v956 + ">"
                    let v1225 : string = "leptos::prelude::view! { " + v1224 + " }"
                    let v1226 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1225 
                    let v1227 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1226 |> unbox
                    let v1228 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1229 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1227 v1228 
                    let v1230 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v1231 : string = " " + v1230 + v231 + ""
                    let v1232 : (std_string_String []) = v794.l11
                    let v1233 : uint64 = System.Convert.ToUInt64 v1232.Length
                    let v1234 : bool = v1233 = 0UL
                    let v1416 : leptos_dom_Fragment =
                        if v1234 then
                            (* run_target_args'
                            let v1239 : unit = ()
                            run_target_args' *)
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1240 : string = "&*$0"
                            let v1241 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v231 v1240 
                            let _run_target_args'_v1239 = v1241 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1242 : string = "&*$0"
                            let v1243 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v231 v1242 
                            let _run_target_args'_v1239 = v1243 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1244 : string = "&*$0"
                            let v1245 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v231 v1244 
                            let _run_target_args'_v1239 = v1245 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1247 : Ref<Str> = v231 |> unbox<Ref<Str>>
                            let _run_target_args'_v1239 = v1247 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1251 : Ref<Str> = v231 |> unbox<Ref<Str>>
                            let _run_target_args'_v1239 = v1251 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1255 : Ref<Str> = v231 |> unbox<Ref<Str>>
                            let _run_target_args'_v1239 = v1255 
                            #endif
#else
                            let v1259 : Ref<Str> = v231 |> unbox<Ref<Str>>
                            let _run_target_args'_v1239 = v1259 
                            #endif
                            let v1262 : Ref<Str> = _run_target_args'_v1239 
                            (* run_target_args'
                            let v1272 : unit = ()
                            run_target_args' *)
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1273 : string = "String::from($0)"
                            let v1274 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1262 v1273 
                            let _run_target_args'_v1272 = v1274 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1275 : string = "String::from($0)"
                            let v1276 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1262 v1275 
                            let _run_target_args'_v1272 = v1276 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1277 : string = "String::from($0)"
                            let v1278 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1262 v1277 
                            let _run_target_args'_v1272 = v1278 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1280 : std_string_String = v1262 |> unbox<std_string_String>
                            let _run_target_args'_v1272 = v1280 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1284 : std_string_String = v1262 |> unbox<std_string_String>
                            let _run_target_args'_v1272 = v1284 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1288 : std_string_String = v1262 |> unbox<std_string_String>
                            let _run_target_args'_v1272 = v1288 
                            #endif
#else
                            let v1292 : std_string_String = v1262 |> unbox<std_string_String>
                            let _run_target_args'_v1272 = v1292 
                            #endif
                            let v1295 : std_string_String = _run_target_args'_v1272 
                            let v1301 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                            let v1302 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1295 v1301 
                            let v1303 : string = "v1302"
                            let v1304 : string = v1303 + v231 
                            let v1305 : string = v1304 + v231 
                            let v1306 : string = "vec![" + v1305 + "]"
                            let v1307 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1306 
                            let v1308 : string = "leptos::prelude::Fragment::new($0)"
                            let v1309 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1307 v1308 
                            v1309
                        else
                            let v1310 : (std_string_String []) = v794.l11
                            let v1311 : int32 = v1310.Length
                            let v1312 : US31 = US31_1
                            let v1313 : Mut2 = {l0 = 0; l1 = v1312} : Mut2
                            while method206(v1311, v1313) do
                                let v1315 : int32 = v1313.l0
                                let v1316 : int32 =  -v1315
                                let v1317 : int32 = v1316 + v1311
                                let v1318 : int32 = v1317 - 1
                                let v1319 : US31 = v1313.l1
                                let v1320 : std_string_String = v1310.[int v1318]
                                let v1321 : string = "fable_library_rust::String_::fromString($0)"
                                let v1322 : string = Fable.Core.RustInterop.emitRustExpr v1320 v1321 
                                let v1324 : string = " / result: "
                                let v1325 : (string []) = v1322.Split v1324 
                                let v1334 : US31 =
                                    match v1319 with
                                    | US31_1 -> (* None *)
                                        let v1328 : uint64 = System.Convert.ToUInt64 v1325.Length
                                        let v1329 : bool = v1328 = 2UL
                                        if v1329 then
                                            let v1330 : string = v1325.[int 0]
                                            let v1331 : string = v1325.[int 1]
                                            US31_0(v1331)
                                        else
                                            v1319
                                    | _ ->
                                        v1319
                                let v1335 : int32 = v1315 + 1
                                v1313.l0 <- v1335
                                v1313.l1 <- v1334
                                ()
                            let v1336 : US31 = v1313.l1
                            let v1340 : string =
                                match v1336 with
                                | US31_1 -> (* None *)
                                    let v1338 : string = "?"
                                    v1338
                                | US31_0(v1337) -> (* Some *)
                                    v1337
                            (* run_target_args'
                            let v1345 : unit = ()
                            run_target_args' *)
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1346 : string = "&*$0"
                            let v1347 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1340 v1346 
                            let _run_target_args'_v1345 = v1347 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1348 : string = "&*$0"
                            let v1349 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1340 v1348 
                            let _run_target_args'_v1345 = v1349 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1350 : string = "&*$0"
                            let v1351 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1340 v1350 
                            let _run_target_args'_v1345 = v1351 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1353 : Ref<Str> = v1340 |> unbox<Ref<Str>>
                            let _run_target_args'_v1345 = v1353 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1357 : Ref<Str> = v1340 |> unbox<Ref<Str>>
                            let _run_target_args'_v1345 = v1357 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1361 : Ref<Str> = v1340 |> unbox<Ref<Str>>
                            let _run_target_args'_v1345 = v1361 
                            #endif
#else
                            let v1365 : Ref<Str> = v1340 |> unbox<Ref<Str>>
                            let _run_target_args'_v1345 = v1365 
                            #endif
                            let v1368 : Ref<Str> = _run_target_args'_v1345 
                            (* run_target_args'
                            let v1378 : unit = ()
                            run_target_args' *)
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1379 : string = "String::from($0)"
                            let v1380 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1368 v1379 
                            let _run_target_args'_v1378 = v1380 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1381 : string = "String::from($0)"
                            let v1382 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1368 v1381 
                            let _run_target_args'_v1378 = v1382 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1383 : string = "String::from($0)"
                            let v1384 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1368 v1383 
                            let _run_target_args'_v1378 = v1384 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1386 : std_string_String = v1368 |> unbox<std_string_String>
                            let _run_target_args'_v1378 = v1386 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1390 : std_string_String = v1368 |> unbox<std_string_String>
                            let _run_target_args'_v1378 = v1390 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1394 : std_string_String = v1368 |> unbox<std_string_String>
                            let _run_target_args'_v1378 = v1394 
                            #endif
#else
                            let v1398 : std_string_String = v1368 |> unbox<std_string_String>
                            let _run_target_args'_v1378 = v1398 
                            #endif
                            let v1401 : std_string_String = _run_target_args'_v1378 
                            let v1407 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                            let v1408 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1401 v1407 
                            let v1409 : string = "v1408"
                            let v1410 : string = v1409 + v231 
                            let v1411 : string = v1410 + v231 
                            let v1412 : string = "vec![" + v1411 + "]"
                            let v1413 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1412 
                            let v1414 : string = "leptos::prelude::Fragment::new($0)"
                            let v1415 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1413 v1414 
                            v1415
                    let v1417 : string = "leptos::prelude::AnyView::from($0)"
                    let v1418 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1416 v1417 
                    let v1419 : string = "<" + v956 + " " + v1231 + ">move || { v1418 }</" + v956 + ">"
                    let v1420 : string = "leptos::prelude::view! { " + v1419 + " }"
                    let v1421 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1420 
                    let v1422 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1421 |> unbox
                    let v1423 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1424 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1422 v1423 
                    let v1425 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v1426 : string = " " + v1425 + v231 + ""
                    let v1427 : bool = v794.l9
                    let v1430 : string =
                        if v1427 then
                            let v1428 : string = "Ok"
                            v1428
                        else
                            let v1429 : string = "Outcome Error"
                            v1429
                    let v1431 : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option -> US63) = method177()
                    let v1432 : (std_string_String -> US63) = method178()
                    let v1434 : US63 = match v811 with Ok x -> v1431 x | Error x -> v1432 x
                    let v1467 : US58 =
                        match v1434 with
                        | US63_1(v1464) -> (* Error *)
                            US58_1(v1464)
                        | US63_0(v1437) -> (* Ok *)
                            let v1440 : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) -> US59) = method179()
                            let v1441 : US59 option = v1437 |> Option.map v1440 
                            let v1458 : US59 = US59_1
                            let v1459 : US59 = v1441 |> Option.defaultValue v1458 
                            US58_0(v1459)
                    let v1576 : US69 =
                        match v1467 with
                        | US58_1(v1571) -> (* Error *)
                            let v1572 : string = "fable_library_rust::String_::fromString($0)"
                            let v1573 : string = Fable.Core.RustInterop.emitRustExpr v1571 v1572 
                            US69_1(v1573)
                        | US58_0(v1468) -> (* Ok *)
                            match v1468 with
                            | US59_0(v1469, v1470, v1471, v1472) -> (* Some *)
                                let v1475 : (struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) -> US64) = method180()
                                let v1476 : US64 option = v1471 |> Option.map v1475 
                                let v1495 : US64 = US64_1
                                let v1496 : US64 = v1476 |> Option.defaultValue v1495 
                                match v1496 with
                                | US64_1 -> (* None *)
                                    let v1554 : string = $"%A{struct (v1469, v1470, v1471, v1472)}"
                                    let v1557 : int64 = 400L
                                    let v1558 : string = method8(v1557, v1554)
                                    US69_0(v1558)
                                | US64_0(v1500, v1501, v1502, v1503, v1504, v1505) -> (* Some *)
                                    let v1508 : (struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) -> US64) = method180()
                                    let v1509 : US64 option = v1471 |> Option.map v1508 
                                    let v1528 : US64 = US64_1
                                    let v1529 : US64 = v1509 |> Option.defaultValue v1528 
                                    let v1542 : US31 =
                                        match v1529 with
                                        | US64_0(v1533, v1534, v1535, v1536, v1537, v1538) -> (* Some *)
                                            let v1539 : string = string v1533 + ": " + string v1537 + " - " + string v1538 + " (" + string v1534 + ")"
                                            US31_0(v1539)
                                        | _ ->
                                            US31_1
                                    let v1551 : string =
                                        match v1542 with
                                        | US31_1 -> (* None *)
                                            let v1545 : string = $"%A{()}"
                                            let v1548 : int64 = 400L
                                            method8(v1548, v1545)
                                        | US31_0(v1543) -> (* Some *)
                                            v1543
                                    US69_1(v1551)
                            | _ ->
                                let v1563 : string = $"%A{v1467}"
                                let v1566 : int64 = 400L
                                let v1567 : string = method8(v1566, v1563)
                                let v1568 : string = $"RPC Response: {v1567}"
                                US69_1(v1568)
                    let v1588 : string =
                        match v1576 with
                        | US69_1(v1585) -> (* Error *)
                            let v1586 : string = $"Error: {v1585}"
                            v1586
                        | US69_0(v1577) -> (* Ok *)
                            let v1579 : string = $"%A{v1577}"
                            let v1582 : int64 = 400L
                            let v1583 : string = method8(v1582, v1579)
                            let v1584 : string = $"RPC Response: {v1583}"
                            v1584
                    let v1589 : string = $"{v1430} / {v1588}"
                    (* run_target_args'
                    let v1594 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1595 : string = "&*$0"
                    let v1596 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1589 v1595 
                    let _run_target_args'_v1594 = v1596 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1597 : string = "&*$0"
                    let v1598 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1589 v1597 
                    let _run_target_args'_v1594 = v1598 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1599 : string = "&*$0"
                    let v1600 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1589 v1599 
                    let _run_target_args'_v1594 = v1600 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1602 : Ref<Str> = v1589 |> unbox<Ref<Str>>
                    let _run_target_args'_v1594 = v1602 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1606 : Ref<Str> = v1589 |> unbox<Ref<Str>>
                    let _run_target_args'_v1594 = v1606 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1610 : Ref<Str> = v1589 |> unbox<Ref<Str>>
                    let _run_target_args'_v1594 = v1610 
                    #endif
#else
                    let v1614 : Ref<Str> = v1589 |> unbox<Ref<Str>>
                    let _run_target_args'_v1594 = v1614 
                    #endif
                    let v1617 : Ref<Str> = _run_target_args'_v1594 
                    (* run_target_args'
                    let v1627 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1628 : string = "String::from($0)"
                    let v1629 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1617 v1628 
                    let _run_target_args'_v1627 = v1629 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1630 : string = "String::from($0)"
                    let v1631 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1617 v1630 
                    let _run_target_args'_v1627 = v1631 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1632 : string = "String::from($0)"
                    let v1633 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1617 v1632 
                    let _run_target_args'_v1627 = v1633 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1635 : std_string_String = v1617 |> unbox<std_string_String>
                    let _run_target_args'_v1627 = v1635 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1639 : std_string_String = v1617 |> unbox<std_string_String>
                    let _run_target_args'_v1627 = v1639 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1643 : std_string_String = v1617 |> unbox<std_string_String>
                    let _run_target_args'_v1627 = v1643 
                    #endif
#else
                    let v1647 : std_string_String = v1617 |> unbox<std_string_String>
                    let _run_target_args'_v1627 = v1647 
                    #endif
                    let v1650 : std_string_String = _run_target_args'_v1627 
                    let v1656 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v1657 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1650 v1656 
                    let v1658 : string = "v1657"
                    let v1659 : string = v1658 + v231 
                    let v1660 : string = v1659 + v231 
                    let v1661 : string = "vec![" + v1660 + "]"
                    let v1662 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1661 
                    let v1663 : string = "leptos::prelude::Fragment::new($0)"
                    let v1664 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1662 v1663 
                    let v1665 : string = "leptos::prelude::AnyView::from($0)"
                    let v1666 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1664 v1665 
                    let v1667 : string = "<" + v956 + " " + v1426 + ">move || { v1666 }</" + v956 + ">"
                    let v1668 : string = "leptos::prelude::view! { " + v1667 + " }"
                    let v1669 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1668 
                    let v1670 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1669 |> unbox
                    let v1671 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1672 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1670 v1671 
                    let v1673 : string = "v1672"
                    let v1674 : string = v1673 + v231 
                    let v1675 : string = v1674 + v231 
                    let v1676 : string = "v1424"
                    let v1677 : string = v1676 + v752 
                    let v1678 : string = v1677 + v1675 
                    let v1679 : string = "v1229"
                    let v1680 : string = v1679 + v752 
                    let v1681 : string = v1680 + v1678 
                    let v1682 : string = "v1138"
                    let v1683 : string = v1682 + v752 
                    let v1684 : string = v1683 + v1681 
                    let v1685 : string = "v1050"
                    let v1686 : string = v1685 + v752 
                    let v1687 : string = v1686 + v1684 
                    let v1688 : string = "v962"
                    let v1689 : string = v1688 + v752 
                    let v1690 : string = v1689 + v1687 
                    let v1691 : string = "vec![" + v1690 + "]"
                    let v1692 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1691 
                    let v1693 : string = "leptos::prelude::Fragment::new($0)"
                    let v1694 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1692 v1693 
                    let v1695 : string = "leptos::prelude::AnyView::from($0)"
                    let v1696 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1694 v1695 
                    let v1697 : string = "<" + v773 + " " + v815 + ">move || { v1696 }</" + v773 + ">"
                    let v1698 : string = "leptos::prelude::view! { " + v1697 + " }"
                    let v1699 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1698 
                    let v1700 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>> = v1699 |> unbox
                    let v1701 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1702 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1700 v1701 
                    let v1703 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v1704 : bool = Fable.Core.RustInterop.emitRustExpr v1702 v1703 
                    let v1705 : string = "_vec_map"
                    let v1706 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1705 
                    let v1707 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1708 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1706 v1707 
                    let v1709 : string = "v1708"
                    let v1710 : string = v1709 + v231 
                    let v1711 : string = v1710 + v231 
                    let v1712 : string = "vec![" + v1711 + "]"
                    let v1713 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1712 
                    let v1714 : string = "leptos::prelude::Fragment::new($0)"
                    let v1715 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1713 v1714 
                    let v1716 : string = "class=\"flex-1 min-w-full divide-y-2 divide-gray-200 text-sm dark:divide-gray-700\""
                    let v1717 : string = " " + v1716 + v231 + ""
                    let v1718 : string = "class=\"ltr:text-left rtl:text-right\""
                    let v1719 : string = " " + v1718 + v231 + ""
                    let v1720 : string = "leptos::prelude::AnyView::from($0)"
                    let v1721 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v786 v1720 
                    let v1722 : string = "thead"
                    let v1723 : string = "<" + v1722 + " " + v1719 + ">move || { v1721 }</" + v1722 + ">"
                    let v1724 : string = "leptos::prelude::view! { " + v1723 + " }"
                    let v1725 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1724 
                    let v1726 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Thead>> = v1725 |> unbox
                    let v1727 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1728 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1726 v1727 
                    let v1729 : string = "class=\"divide-y divide-gray-200 dark:divide-gray-700\""
                    let v1730 : string = " " + v1729 + v231 + ""
                    let v1731 : string = "leptos::prelude::AnyView::from($0)"
                    let v1732 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1715 v1731 
                    let v1733 : string = "tbody"
                    let v1734 : string = "<" + v1733 + " " + v1730 + ">move || { v1732 }</" + v1733 + ">"
                    let v1735 : string = "leptos::prelude::view! { " + v1734 + " }"
                    let v1736 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1735 
                    let v1737 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tbody>> = v1736 |> unbox
                    let v1738 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1739 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1737 v1738 
                    let v1740 : string = "v1739"
                    let v1741 : string = v1740 + v231 
                    let v1742 : string = v1741 + v231 
                    let v1743 : string = "v1728"
                    let v1744 : string = v1743 + v752 
                    let v1745 : string = v1744 + v1742 
                    let v1746 : string = "vec![" + v1745 + "]"
                    let v1747 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1746 
                    let v1748 : string = "leptos::prelude::Fragment::new($0)"
                    let v1749 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1747 v1748 
                    let v1750 : string = "leptos::prelude::AnyView::from($0)"
                    let v1751 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1749 v1750 
                    let v1752 : string = "table"
                    let v1753 : string = "<" + v1752 + " " + v1717 + ">move || { v1751 }</" + v1752 + ">"
                    let v1754 : string = "leptos::prelude::view! { " + v1753 + " }"
                    let v1755 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1754 
                    let v1756 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Table>> = v1755 |> unbox
                    let v1757 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1758 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1756 v1757 
                    v1758
                | _ ->
                    let v1759 : string = "class=\"grid place-content-center py-[10vh]\""
                    let v1760 : string = ""
                    let v1761 : string = " " + v1759 + v1760 + ""
                    let v1762 : string = "class=\"flex flex-1 [gap:4px] items-center\""
                    let v1763 : string = " " + v1762 + v1760 + ""
                    let v1764 : string = "$0"
                    let v1765 : (unit -> string) = closure191()
                    let v1766 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1765 v1764 
                    let v1767 : string = "version=\"1.1\""
                    let v1768 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                    let v1769 : string = "xmlns:xlink=\"http://www.w3.org/1999/xlink\""
                    let v1770 : string = "x=\"0px\""
                    let v1771 : string = "y=\"0px\""
                    let v1772 : string = "viewBox=\"0 0 24 30\""
                    let v1773 : string = "style=\"enable-background:new 0 0 50 50;\""
                    let v1774 : string = "xml:space=\"preserve\""
                    let v1775 : string = "class=move || \" \".to_owned() + &v1766(())"
                    let v1776 : string = " " + v1767 + v1760 + ""
                    let v1777 : string = " " + v1768 + v1776 + ""
                    let v1778 : string = " " + v1769 + v1777 + ""
                    let v1779 : string = " " + v1770 + v1778 + ""
                    let v1780 : string = " " + v1771 + v1779 + ""
                    let v1781 : string = " " + v1772 + v1780 + ""
                    let v1782 : string = " " + v1773 + v1781 + ""
                    let v1783 : string = " " + v1774 + v1782 + ""
                    let v1784 : string = " " + v1775 + v1783 + ""
                    let v1785 : string = "x=\"0\""
                    let v1786 : string = "y=\"10\""
                    let v1787 : string = "width=\"4\""
                    let v1788 : string = "height=\"10\""
                    let v1789 : string = "fill=\"#333\""
                    let v1790 : string = "opacity=\"0.2\""
                    let v1791 : string = " " + v1785 + v1760 + ""
                    let v1792 : string = " " + v1786 + v1791 + ""
                    let v1793 : string = " " + v1787 + v1792 + ""
                    let v1794 : string = " " + v1788 + v1793 + ""
                    let v1795 : string = " " + v1789 + v1794 + ""
                    let v1796 : string = " " + v1790 + v1795 + ""
                    let v1797 : string = "attributeName=\"opacity\""
                    let v1798 : string = "attributeType=\"XML\""
                    let v1799 : string = "values=\"0.2; 1; .2\""
                    let v1800 : string = "begin=\"0s\""
                    let v1801 : string = "dur=\"0.6s\""
                    let v1802 : string = "repeatCount=\"indefinite\""
                    let v1803 : string = " " + v1797 + v1760 + ""
                    let v1804 : string = " " + v1798 + v1803 + ""
                    let v1805 : string = " " + v1799 + v1804 + ""
                    let v1806 : string = " " + v1800 + v1805 + ""
                    let v1807 : string = " " + v1801 + v1806 + ""
                    let v1808 : string = " " + v1802 + v1807 + ""
                    let v1809 : string = "vec![" + v1760 + "]"
                    let v1810 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1809 
                    let v1811 : string = "leptos::prelude::Fragment::new($0)"
                    let v1812 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1810 v1811 
                    let v1813 : string = "leptos::prelude::AnyView::from($0)"
                    let v1814 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1812 v1813 
                    let v1815 : string = "animate"
                    let v1816 : string = "<" + v1815 + " " + v1808 + ">move || { v1814 }</" + v1815 + ">"
                    let v1817 : string = "leptos::prelude::view! { " + v1816 + " }"
                    let v1818 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1817 
                    let v1819 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1818 |> unbox
                    let v1820 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1821 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1819 v1820 
                    let v1822 : string = "attributeName=\"height\""
                    let v1823 : string = "attributeType=\"XML\""
                    let v1824 : string = "values=\"10; 20; 10\""
                    let v1825 : string = "begin=\"0s\""
                    let v1826 : string = "dur=\"0.6s\""
                    let v1827 : string = "repeatCount=\"indefinite\""
                    let v1828 : string = " " + v1822 + v1760 + ""
                    let v1829 : string = " " + v1823 + v1828 + ""
                    let v1830 : string = " " + v1824 + v1829 + ""
                    let v1831 : string = " " + v1825 + v1830 + ""
                    let v1832 : string = " " + v1826 + v1831 + ""
                    let v1833 : string = " " + v1827 + v1832 + ""
                    let v1834 : string = "vec![" + v1760 + "]"
                    let v1835 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1834 
                    let v1836 : string = "leptos::prelude::Fragment::new($0)"
                    let v1837 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1835 v1836 
                    let v1838 : string = "leptos::prelude::AnyView::from($0)"
                    let v1839 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1837 v1838 
                    let v1840 : string = "<" + v1815 + " " + v1833 + ">move || { v1839 }</" + v1815 + ">"
                    let v1841 : string = "leptos::prelude::view! { " + v1840 + " }"
                    let v1842 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1841 
                    let v1843 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1842 |> unbox
                    let v1844 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1845 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1843 v1844 
                    let v1846 : string = "attributeName=\"y\""
                    let v1847 : string = "attributeType=\"XML\""
                    let v1848 : string = "values=\"10; 5; 10\""
                    let v1849 : string = "begin=\"0s\""
                    let v1850 : string = "dur=\"0.6s\""
                    let v1851 : string = "repeatCount=\"indefinite\""
                    let v1852 : string = " " + v1846 + v1760 + ""
                    let v1853 : string = " " + v1847 + v1852 + ""
                    let v1854 : string = " " + v1848 + v1853 + ""
                    let v1855 : string = " " + v1849 + v1854 + ""
                    let v1856 : string = " " + v1850 + v1855 + ""
                    let v1857 : string = " " + v1851 + v1856 + ""
                    let v1858 : string = "vec![" + v1760 + "]"
                    let v1859 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1858 
                    let v1860 : string = "leptos::prelude::Fragment::new($0)"
                    let v1861 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1859 v1860 
                    let v1862 : string = "leptos::prelude::AnyView::from($0)"
                    let v1863 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1861 v1862 
                    let v1864 : string = "<" + v1815 + " " + v1857 + ">move || { v1863 }</" + v1815 + ">"
                    let v1865 : string = "leptos::prelude::view! { " + v1864 + " }"
                    let v1866 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1865 
                    let v1867 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1866 |> unbox
                    let v1868 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1869 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1867 v1868 
                    let v1870 : string = "v1869"
                    let v1871 : string = v1870 + v1760 
                    let v1872 : string = v1871 + v1760 
                    let v1873 : string = "v1845"
                    let v1874 : string = ", "
                    let v1875 : string = v1873 + v1874 
                    let v1876 : string = v1875 + v1872 
                    let v1877 : string = "v1821"
                    let v1878 : string = v1877 + v1874 
                    let v1879 : string = v1878 + v1876 
                    let v1880 : string = "vec![" + v1879 + "]"
                    let v1881 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1880 
                    let v1882 : string = "leptos::prelude::Fragment::new($0)"
                    let v1883 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1881 v1882 
                    let v1884 : string = "leptos::prelude::AnyView::from($0)"
                    let v1885 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1883 v1884 
                    let v1886 : string = "rect"
                    let v1887 : string = "<" + v1886 + " " + v1796 + ">move || { v1885 }</" + v1886 + ">"
                    let v1888 : string = "leptos::prelude::view! { " + v1887 + " }"
                    let v1889 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1888 
                    let v1890 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v1889 |> unbox
                    let v1891 : string = "x=\"8\""
                    let v1892 : string = "y=\"10\""
                    let v1893 : string = "width=\"4\""
                    let v1894 : string = "height=\"10\""
                    let v1895 : string = "fill=\"#333\""
                    let v1896 : string = "opacity=\"0.2\""
                    let v1897 : string = " " + v1891 + v1760 + ""
                    let v1898 : string = " " + v1892 + v1897 + ""
                    let v1899 : string = " " + v1893 + v1898 + ""
                    let v1900 : string = " " + v1894 + v1899 + ""
                    let v1901 : string = " " + v1895 + v1900 + ""
                    let v1902 : string = " " + v1896 + v1901 + ""
                    let v1903 : string = "attributeName=\"opacity\""
                    let v1904 : string = "attributeType=\"XML\""
                    let v1905 : string = "values=\"0.2; 1; .2\""
                    let v1906 : string = "begin=\"0.15s\""
                    let v1907 : string = "dur=\"0.6s\""
                    let v1908 : string = "repeatCount=\"indefinite\""
                    let v1909 : string = " " + v1903 + v1760 + ""
                    let v1910 : string = " " + v1904 + v1909 + ""
                    let v1911 : string = " " + v1905 + v1910 + ""
                    let v1912 : string = " " + v1906 + v1911 + ""
                    let v1913 : string = " " + v1907 + v1912 + ""
                    let v1914 : string = " " + v1908 + v1913 + ""
                    let v1915 : string = "vec![" + v1760 + "]"
                    let v1916 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1915 
                    let v1917 : string = "leptos::prelude::Fragment::new($0)"
                    let v1918 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1916 v1917 
                    let v1919 : string = "leptos::prelude::AnyView::from($0)"
                    let v1920 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1918 v1919 
                    let v1921 : string = "<" + v1815 + " " + v1914 + ">move || { v1920 }</" + v1815 + ">"
                    let v1922 : string = "leptos::prelude::view! { " + v1921 + " }"
                    let v1923 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1922 
                    let v1924 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1923 |> unbox
                    let v1925 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1926 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1924 v1925 
                    let v1927 : string = "attributeName=\"opacity\""
                    let v1928 : string = "attributeType=\"XML\""
                    let v1929 : string = "values=\"10; 20; 10\""
                    let v1930 : string = "begin=\"0.15s\""
                    let v1931 : string = "dur=\"0.6s\""
                    let v1932 : string = "repeatCount=\"indefinite\""
                    let v1933 : string = " " + v1927 + v1760 + ""
                    let v1934 : string = " " + v1928 + v1933 + ""
                    let v1935 : string = " " + v1929 + v1934 + ""
                    let v1936 : string = " " + v1930 + v1935 + ""
                    let v1937 : string = " " + v1931 + v1936 + ""
                    let v1938 : string = " " + v1932 + v1937 + ""
                    let v1939 : string = "vec![" + v1760 + "]"
                    let v1940 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1939 
                    let v1941 : string = "leptos::prelude::Fragment::new($0)"
                    let v1942 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1940 v1941 
                    let v1943 : string = "leptos::prelude::AnyView::from($0)"
                    let v1944 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1942 v1943 
                    let v1945 : string = "<" + v1815 + " " + v1938 + ">move || { v1944 }</" + v1815 + ">"
                    let v1946 : string = "leptos::prelude::view! { " + v1945 + " }"
                    let v1947 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1946 
                    let v1948 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1947 |> unbox
                    let v1949 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1950 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1948 v1949 
                    let v1951 : string = "attributeName=\"y\""
                    let v1952 : string = "attributeType=\"XML\""
                    let v1953 : string = "values=\"10; 5; 10\""
                    let v1954 : string = "begin=\"0.15s\""
                    let v1955 : string = "dur=\"0.6s\""
                    let v1956 : string = "repeatCount=\"indefinite\""
                    let v1957 : string = " " + v1951 + v1760 + ""
                    let v1958 : string = " " + v1952 + v1957 + ""
                    let v1959 : string = " " + v1953 + v1958 + ""
                    let v1960 : string = " " + v1954 + v1959 + ""
                    let v1961 : string = " " + v1955 + v1960 + ""
                    let v1962 : string = " " + v1956 + v1961 + ""
                    let v1963 : string = "vec![" + v1760 + "]"
                    let v1964 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1963 
                    let v1965 : string = "leptos::prelude::Fragment::new($0)"
                    let v1966 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1964 v1965 
                    let v1967 : string = "leptos::prelude::AnyView::from($0)"
                    let v1968 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1966 v1967 
                    let v1969 : string = "<" + v1815 + " " + v1962 + ">move || { v1968 }</" + v1815 + ">"
                    let v1970 : string = "leptos::prelude::view! { " + v1969 + " }"
                    let v1971 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1970 
                    let v1972 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1971 |> unbox
                    let v1973 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1974 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1972 v1973 
                    let v1975 : string = "v1974"
                    let v1976 : string = v1975 + v1760 
                    let v1977 : string = v1976 + v1760 
                    let v1978 : string = "v1950"
                    let v1979 : string = v1978 + v1874 
                    let v1980 : string = v1979 + v1977 
                    let v1981 : string = "v1926"
                    let v1982 : string = v1981 + v1874 
                    let v1983 : string = v1982 + v1980 
                    let v1984 : string = "vec![" + v1983 + "]"
                    let v1985 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1984 
                    let v1986 : string = "leptos::prelude::Fragment::new($0)"
                    let v1987 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1985 v1986 
                    let v1988 : string = "leptos::prelude::AnyView::from($0)"
                    let v1989 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1987 v1988 
                    let v1990 : string = "<" + v1886 + " " + v1902 + ">move || { v1989 }</" + v1886 + ">"
                    let v1991 : string = "leptos::prelude::view! { " + v1990 + " }"
                    let v1992 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1991 
                    let v1993 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v1992 |> unbox
                    let v1994 : string = "x=\"16\""
                    let v1995 : string = "y=\"10\""
                    let v1996 : string = "width=\"4\""
                    let v1997 : string = "height=\"10\""
                    let v1998 : string = "fill=\"#333\""
                    let v1999 : string = "opacity=\"0.2\""
                    let v2000 : string = " " + v1994 + v1760 + ""
                    let v2001 : string = " " + v1995 + v2000 + ""
                    let v2002 : string = " " + v1996 + v2001 + ""
                    let v2003 : string = " " + v1997 + v2002 + ""
                    let v2004 : string = " " + v1998 + v2003 + ""
                    let v2005 : string = " " + v1999 + v2004 + ""
                    let v2006 : string = "attributeName=\"opacity\""
                    let v2007 : string = "attributeType=\"XML\""
                    let v2008 : string = "values=\"0.2; 1; .2\""
                    let v2009 : string = "begin=\"0.3s\""
                    let v2010 : string = "dur=\"0.6s\""
                    let v2011 : string = "repeatCount=\"indefinite\""
                    let v2012 : string = " " + v2006 + v1760 + ""
                    let v2013 : string = " " + v2007 + v2012 + ""
                    let v2014 : string = " " + v2008 + v2013 + ""
                    let v2015 : string = " " + v2009 + v2014 + ""
                    let v2016 : string = " " + v2010 + v2015 + ""
                    let v2017 : string = " " + v2011 + v2016 + ""
                    let v2018 : string = "vec![" + v1760 + "]"
                    let v2019 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2018 
                    let v2020 : string = "leptos::prelude::Fragment::new($0)"
                    let v2021 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2019 v2020 
                    let v2022 : string = "leptos::prelude::AnyView::from($0)"
                    let v2023 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2021 v2022 
                    let v2024 : string = "<" + v1815 + " " + v2017 + ">move || { v2023 }</" + v1815 + ">"
                    let v2025 : string = "leptos::prelude::view! { " + v2024 + " }"
                    let v2026 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2025 
                    let v2027 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v2026 |> unbox
                    let v2028 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2029 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2027 v2028 
                    let v2030 : string = "attributeName=\"height\""
                    let v2031 : string = "attributeType=\"XML\""
                    let v2032 : string = "values=\"10; 20; 10\""
                    let v2033 : string = "begin=\"0.3s\""
                    let v2034 : string = "dur=\"0.6s\""
                    let v2035 : string = "repeatCount=\"indefinite\""
                    let v2036 : string = " " + v2030 + v1760 + ""
                    let v2037 : string = " " + v2031 + v2036 + ""
                    let v2038 : string = " " + v2032 + v2037 + ""
                    let v2039 : string = " " + v2033 + v2038 + ""
                    let v2040 : string = " " + v2034 + v2039 + ""
                    let v2041 : string = " " + v2035 + v2040 + ""
                    let v2042 : string = "vec![" + v1760 + "]"
                    let v2043 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2042 
                    let v2044 : string = "leptos::prelude::Fragment::new($0)"
                    let v2045 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2043 v2044 
                    let v2046 : string = "leptos::prelude::AnyView::from($0)"
                    let v2047 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2045 v2046 
                    let v2048 : string = "<" + v1815 + " " + v2041 + ">move || { v2047 }</" + v1815 + ">"
                    let v2049 : string = "leptos::prelude::view! { " + v2048 + " }"
                    let v2050 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2049 
                    let v2051 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v2050 |> unbox
                    let v2052 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2053 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2051 v2052 
                    let v2054 : string = "attributeName=\"y\""
                    let v2055 : string = "attributeType=\"XML\""
                    let v2056 : string = "values=\"10; 5; 10\""
                    let v2057 : string = "begin=\"0.3s\""
                    let v2058 : string = "dur=\"0.6s\""
                    let v2059 : string = "repeatCount=\"indefinite\""
                    let v2060 : string = " " + v2054 + v1760 + ""
                    let v2061 : string = " " + v2055 + v2060 + ""
                    let v2062 : string = " " + v2056 + v2061 + ""
                    let v2063 : string = " " + v2057 + v2062 + ""
                    let v2064 : string = " " + v2058 + v2063 + ""
                    let v2065 : string = " " + v2059 + v2064 + ""
                    let v2066 : string = "vec![" + v1760 + "]"
                    let v2067 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2066 
                    let v2068 : string = "leptos::prelude::Fragment::new($0)"
                    let v2069 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2067 v2068 
                    let v2070 : string = "leptos::prelude::AnyView::from($0)"
                    let v2071 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2069 v2070 
                    let v2072 : string = "<" + v1815 + " " + v2065 + ">move || { v2071 }</" + v1815 + ">"
                    let v2073 : string = "leptos::prelude::view! { " + v2072 + " }"
                    let v2074 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2073 
                    let v2075 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v2074 |> unbox
                    let v2076 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2077 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2075 v2076 
                    let v2078 : string = "v2077"
                    let v2079 : string = v2078 + v1760 
                    let v2080 : string = v2079 + v1760 
                    let v2081 : string = "v2053"
                    let v2082 : string = v2081 + v1874 
                    let v2083 : string = v2082 + v2080 
                    let v2084 : string = "v2029"
                    let v2085 : string = v2084 + v1874 
                    let v2086 : string = v2085 + v2083 
                    let v2087 : string = "vec![" + v2086 + "]"
                    let v2088 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2087 
                    let v2089 : string = "leptos::prelude::Fragment::new($0)"
                    let v2090 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2088 v2089 
                    let v2091 : string = "leptos::prelude::AnyView::from($0)"
                    let v2092 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2090 v2091 
                    let v2093 : string = "<" + v1886 + " " + v2005 + ">move || { v2092 }</" + v1886 + ">"
                    let v2094 : string = "leptos::prelude::view! { " + v2093 + " }"
                    let v2095 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2094 
                    let v2096 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v2095 |> unbox
                    let v2097 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2098 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2096 v2097 
                    let v2099 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2100 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1993 v2099 
                    let v2101 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2102 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1890 v2101 
                    let v2103 : string = "v2098"
                    let v2104 : string = v2103 + v1760 
                    let v2105 : string = v2104 + v1760 
                    let v2106 : string = "v2100"
                    let v2107 : string = v2106 + v1874 
                    let v2108 : string = v2107 + v2105 
                    let v2109 : string = "v2102"
                    let v2110 : string = v2109 + v1874 
                    let v2111 : string = v2110 + v2108 
                    let v2112 : string = "vec![" + v2111 + "]"
                    let v2113 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2112 
                    let v2114 : string = "leptos::prelude::Fragment::new($0)"
                    let v2115 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2113 v2114 
                    let v2116 : string = "leptos::prelude::AnyView::from($0)"
                    let v2117 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2115 v2116 
                    let v2118 : string = "svg"
                    let v2119 : string = "<" + v2118 + " " + v1784 + ">move || { v2117 }</" + v2118 + ">"
                    let v2120 : string = "leptos::prelude::view! { " + v2119 + " }"
                    let v2121 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2120 
                    let v2122 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v2121 |> unbox
                    let v2123 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2124 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2122 v2123 
                    let v2125 : string = "Loading..."
                    (* run_target_args'
                    let v2130 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v2131 : string = "&*$0"
                    let v2132 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2125 v2131 
                    let _run_target_args'_v2130 = v2132 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v2133 : string = "&*$0"
                    let v2134 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2125 v2133 
                    let _run_target_args'_v2130 = v2134 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v2135 : string = "&*$0"
                    let v2136 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2125 v2135 
                    let _run_target_args'_v2130 = v2136 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v2138 : Ref<Str> = v2125 |> unbox<Ref<Str>>
                    let _run_target_args'_v2130 = v2138 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v2142 : Ref<Str> = v2125 |> unbox<Ref<Str>>
                    let _run_target_args'_v2130 = v2142 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v2146 : Ref<Str> = v2125 |> unbox<Ref<Str>>
                    let _run_target_args'_v2130 = v2146 
                    #endif
#else
                    let v2150 : Ref<Str> = v2125 |> unbox<Ref<Str>>
                    let _run_target_args'_v2130 = v2150 
                    #endif
                    let v2153 : Ref<Str> = _run_target_args'_v2130 
                    (* run_target_args'
                    let v2163 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v2164 : string = "String::from($0)"
                    let v2165 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2153 v2164 
                    let _run_target_args'_v2163 = v2165 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v2166 : string = "String::from($0)"
                    let v2167 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2153 v2166 
                    let _run_target_args'_v2163 = v2167 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v2168 : string = "String::from($0)"
                    let v2169 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2153 v2168 
                    let _run_target_args'_v2163 = v2169 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v2171 : std_string_String = v2153 |> unbox<std_string_String>
                    let _run_target_args'_v2163 = v2171 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v2175 : std_string_String = v2153 |> unbox<std_string_String>
                    let _run_target_args'_v2163 = v2175 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v2179 : std_string_String = v2153 |> unbox<std_string_String>
                    let _run_target_args'_v2163 = v2179 
                    #endif
#else
                    let v2183 : std_string_String = v2153 |> unbox<std_string_String>
                    let _run_target_args'_v2163 = v2183 
                    #endif
                    let v2186 : std_string_String = _run_target_args'_v2163 
                    let v2192 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v2193 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2186 v2192 
                    let v2194 : string = "v2193"
                    let v2195 : string = v2194 + v1760 
                    let v2196 : string = v2195 + v1760 
                    let v2197 : string = "v2124"
                    let v2198 : string = v2197 + v1874 
                    let v2199 : string = v2198 + v2196 
                    let v2200 : string = "vec![" + v2199 + "]"
                    let v2201 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2200 
                    let v2202 : string = "leptos::prelude::Fragment::new($0)"
                    let v2203 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2201 v2202 
                    let v2204 : string = "leptos::prelude::AnyView::from($0)"
                    let v2205 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2203 v2204 
                    let v2206 : string = "div"
                    let v2207 : string = "<" + v2206 + " " + v1763 + ">move || { v2205 }</" + v2206 + ">"
                    let v2208 : string = "leptos::prelude::view! { " + v2207 + " }"
                    let v2209 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2208 
                    let v2210 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v2209 |> unbox
                    let v2211 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2212 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2210 v2211 
                    let v2213 : string = "v2212"
                    let v2214 : string = v2213 + v1760 
                    let v2215 : string = v2214 + v1760 
                    let v2216 : string = "vec![" + v2215 + "]"
                    let v2217 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2216 
                    let v2218 : string = "leptos::prelude::Fragment::new($0)"
                    let v2219 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2217 v2218 
                    let v2220 : string = "leptos::prelude::AnyView::from($0)"
                    let v2221 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2219 v2220 
                    let v2222 : string = "<" + v2206 + " " + v1761 + ">move || { v2221 }</" + v2206 + ">"
                    let v2223 : string = "leptos::prelude::view! { " + v2222 + " }"
                    let v2224 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2223 
                    let v2225 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v2224 |> unbox
                    let v2226 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2227 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2225 v2226 
                    v2227
    let v2411 : string = "v2410"
    let v2412 : string = ""
    let v2413 : string = v2411 + v2412 
    let v2414 : string = v2413 + v2412 
    let v2415 : string = "vec![" + v2414 + "]"
    let v2416 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2415 
    let v2417 : string = "leptos::prelude::Fragment::new($0)"
    let v2418 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2416 v2417 
    v2418
and closure194 (v0 : int32) (v1 : (bool * std_string_String)) : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) =
    let v2 : string = $"leptos::prelude::signal($0)"
    let struct (v3 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v4 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v6 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = v0, struct (v3, v4) 
    v6
and closure193 () (v0 : int32) : ((bool * std_string_String) -> (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))) =
    closure194(v0)
and method207 () : (int32 -> ((bool * std_string_String) -> (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)))) =
    closure193()
and method208 (v0 : Vec<(bool * std_string_String)>) : Vec<(bool * std_string_String)> =
    v0
and closure192 (v0 : Heap2) () : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<Heap0> = v5.l3
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : Heap0 = Fable.Core.RustInterop.emitRustExpr v6 v7 
    let v9 : Vec<(bool * std_string_String)> = v8.l0
    let v10 : (int32 -> ((bool * std_string_String) -> (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)))) = method207()
    let v11 : Vec<(bool * std_string_String)> = method208(v9)
    let v12 : string = "v11.iter().enumerate().map(|(i, x)| v10(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v13 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr () v12 
    v13
and method209 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)>) : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)> =
    v0
and closure196 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)>) (v1 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))) : struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>) =
    let v2 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)> = method209(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : int32, v6 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v7 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7)
and method210 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>), struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>) : Func0<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>), struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> =
    v0
and closure197 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>), struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>) struct (v1 : int32, v2 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v3 : leptos_prelude_WriteSignal<(bool * std_string_String)>) : struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>) =
    let v4 : Func0<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>), struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> = method210(v0)
    let func1_move_x = struct (v1, v2, v3) //
    let v5 : _ = func1_move_x
    let v6 : string = "(move |x| v4(x))($0)"
    let struct (v7 : int32, v8 : int32, v9 : leptos_prelude_ReadSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr v5 v6 
    struct (v7, v8, v9)
and closure195 (v0 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>>, v1 : leptos_prelude_ReadSignal<int32>) () : Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> =
    let v2 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v3 : int32 = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v5 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr v0 v4 
    let v6 : unit = ()
    let v7 : string = $"true; let _func1_from_v6 = Func1::from(move |value| {{ //"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr () v7 
    let v9 : string = $"value"
    let v10 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = Fable.Core.RustInterop.emitRustExpr () v9 
    let (a, b) = v10 
    let v14 : int32 = a
    let struct (v15 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v16 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = b
    let func1_from_result = struct (v14, v15, v16) //
    let v23 : _ = func1_from_result
    let v24 : string = $"true; $0 /*"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr v23 v24 
    let v26 : string = $"*/ }}); //"
    let v27 : bool = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : string = $"_func1_from_v6"
    let v29 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)> = Fable.Core.RustInterop.emitRustExpr () v28 
    let v30 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v31 : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) -> struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = closure196(v29)
    let v32 : Vec<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)> = Fable.Core.RustInterop.emitRustExpr struct (v5, v31) v30 
    let v33 : unit = ()
    let v34 : string = $"true; let _func1_from_v33 = Func1::from(move |value| {{ //"
    let v35 : bool = Fable.Core.RustInterop.emitRustExpr () v34 
    let v36 : string = $"value"
    let struct (v37 : int32, v38 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v39 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr () v36 
    let func1_from_result = struct (v3, v37, v38) //
    let v40 : _ = func1_from_result
    let v41 : string = $"true; $0 /*"
    let v42 : bool = Fable.Core.RustInterop.emitRustExpr v40 v41 
    let v43 : string = $"*/ }}); //"
    let v44 : bool = Fable.Core.RustInterop.emitRustExpr () v43 
    let v45 : string = $"_func1_from_v33"
    let v46 : Func0<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>), struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> = Fable.Core.RustInterop.emitRustExpr () v45 
    let v47 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v48 : (struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>) -> struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)) = closure197(v46)
    let v49 : Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> = Fable.Core.RustInterop.emitRustExpr struct (v32, v48) v47 
    v49
and closure198 (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>>) () : int32 =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v4 : (struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>) []) = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : int32 = v4.Length
    v5
and method211 (v0 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))) : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) =
    v0
and method212 (v0 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>) : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> =
    v0
and method213 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)>) : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)> =
    v0
and closure200 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)>) (v1 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))) : (bool * std_string_String) =
    let v2 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)> = method213(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure199 (v0 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>>) (v1 : Heap0) : Heap0 =
    let v2 : Vec<(bool * std_string_String)> = v1.l0
    let v3 : std_string_String option = v1.l1
    let v4 : int32 = v1.l2
    let v5 : int32 = v1.l3
    let v6 : US1 = v1.l4
    let v7 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v8 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr v0 v7 
    let v9 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v10 : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) []) = Fable.Core.RustInterop.emitRustExpr v8 v9 
    let v11 : int32 = v10.Length
    let v12 : string = ""
    (* run_target_args'
    let v17 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v18 : string = "&*$0"
    let v19 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v12 v18 
    let _run_target_args'_v17 = v19 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v20 : string = "&*$0"
    let v21 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v12 v20 
    let _run_target_args'_v17 = v21 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v22 : string = "&*$0"
    let v23 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v12 v22 
    let _run_target_args'_v17 = v23 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v25 : Ref<Str> = v12 |> unbox<Ref<Str>>
    let _run_target_args'_v17 = v25 
    #endif
#if FABLE_COMPILER_PYTHON
    let v29 : Ref<Str> = v12 |> unbox<Ref<Str>>
    let _run_target_args'_v17 = v29 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v33 : Ref<Str> = v12 |> unbox<Ref<Str>>
    let _run_target_args'_v17 = v33 
    #endif
#else
    let v37 : Ref<Str> = v12 |> unbox<Ref<Str>>
    let _run_target_args'_v17 = v37 
    #endif
    let v40 : Ref<Str> = _run_target_args'_v17 
    (* run_target_args'
    let v50 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v51 : string = "String::from($0)"
    let v52 : std_string_String = Fable.Core.RustInterop.emitRustExpr v40 v51 
    let _run_target_args'_v50 = v52 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v53 : string = "String::from($0)"
    let v54 : std_string_String = Fable.Core.RustInterop.emitRustExpr v40 v53 
    let _run_target_args'_v50 = v54 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v40 v55 
    let _run_target_args'_v50 = v56 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v58 : std_string_String = v40 |> unbox<std_string_String>
    let _run_target_args'_v50 = v58 
    #endif
#if FABLE_COMPILER_PYTHON
    let v62 : std_string_String = v40 |> unbox<std_string_String>
    let _run_target_args'_v50 = v62 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v40 |> unbox<std_string_String>
    let _run_target_args'_v50 = v66 
    #endif
#else
    let v70 : std_string_String = v40 |> unbox<std_string_String>
    let _run_target_args'_v50 = v70 
    #endif
    let v73 : std_string_String = _run_target_args'_v50 
    let v80 : (bool * std_string_String) = false, v73 
    let v83 : string = $"leptos::prelude::signal($0)"
    let struct (v84 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v85 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr v80 v83 
    let v87 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = v11, struct (v84, v85) 
    let v90 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = method211(v87)
    let v91 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = method212(v8)
    let v92 : string = "true; let mut v91 = v91"
    let v93 : bool = Fable.Core.RustInterop.emitRustExpr () v92 
    let v94 : string = "true; v91.push(v90)"
    let v95 : bool = Fable.Core.RustInterop.emitRustExpr () v94 
    let v96 : string = "v91"
    let v97 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr () v96 
    let v98 : unit = ()
    let v99 : string = $"true; let _func1_from_v98 = Func1::from(move |value| {{ //"
    let v100 : bool = Fable.Core.RustInterop.emitRustExpr () v99 
    let v101 : string = $"value"
    let v102 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = Fable.Core.RustInterop.emitRustExpr () v101 
    let (a, b) = v102 
    let v106 : int32 = a
    let struct (v107 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v108 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = b
    let v115 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v116 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr v107 v115 
    let func1_from_result = v116 //
    let v117 : _ = func1_from_result
    let v118 : string = $"true; $0 /*"
    let v119 : bool = Fable.Core.RustInterop.emitRustExpr v117 v118 
    let v120 : string = $"*/ }}); //"
    let v121 : bool = Fable.Core.RustInterop.emitRustExpr () v120 
    let v122 : string = $"_func1_from_v98"
    let v123 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v122 
    let v124 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v125 : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) -> (bool * std_string_String)) = closure200(v123)
    let v126 : Vec<(bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v97, v125) v124 
    {l0 = v126; l1 = v3; l2 = v4; l3 = v5; l4 = v6} : Heap0
and closure201 () (v0 : int32) : int32 =
    let v1 : int32 = 1 + v0
    v1
and closure202 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and closure203 () () : std_string_String =
    let v0 : string = " bg-gray-300 hover:bg-gray-200"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    v61
and closure204 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure205 (v0 : leptos_prelude_AnyView_) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = "[margin-right:40px]"
    let v2 : string = "r#\"" + v1 + "\"#"
    let v3 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v2 
    v3
and closure206 () () : string =
    let v0 : string = "Accounts"
    v0
and method214 (v0 : leptos_prelude_AnyView_) : (unit -> string) =
    closure206()
and method216 (v0 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)>) : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)> =
    v0
and closure208 (v0 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)>) struct (v1 : int32, v2 : int32, v3 : leptos_prelude_ReadSignal<(bool * std_string_String)>) : (int32 * int32) =
    let v4 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)> = method216(v0)
    let func1_move_x = struct (v1, v2, v3) //
    let v5 : _ = func1_move_x
    let v6 : string = "(move |x| v4(x))($0)"
    let v7 : (int32 * int32) = Fable.Core.RustInterop.emitRustExpr v5 v6 
    v7
and method215 (v0 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)>) : (struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>) -> (int32 * int32)) =
    closure208(v0)
and method217 (v0 : int32) : int32 =
    v0
and method219 (v0 : bool) : bool =
    let v1 : bool = v0 = false
    v1
and closure211 (v0 : int32, v1 : int32) (v2 : (bool * std_string_String)) : (bool * std_string_String) =
    let v3 : bool = v1 = v0
    let v4 : bool = method219(v3)
    if v4 then
        v2
    else
        let (a, b) = v2 
        let v7 : bool = a
        let v8 : std_string_String = b
        let v13 : bool = v7 = false
        let v15 : (bool * std_string_String) = v13, v8 
        v15
and closure210 (v0 : int32) (v1 : int32) : ((bool * std_string_String) -> (bool * std_string_String)) =
    closure211(v0, v1)
and method218 (v0 : int32) : (int32 -> ((bool * std_string_String) -> (bool * std_string_String))) =
    closure210(v0)
and closure209 (v0 : Heap2, v1 : int32) (v2 : leptos_ev_Event) : unit =
    let v3 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v4 : string = "Box::pin($0)"
    let v5 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v7 : Heap1 = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : leptos_prelude_ArcRwSignal<Heap0> = v7.l3
    let v9 : string = "Box::pin($0)"
    let v10 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v8 v9 
    let v11 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v12 : Heap0 = Fable.Core.RustInterop.emitRustExpr v10 v11 
    let v13 : Vec<(bool * std_string_String)> = v12.l0
    let v14 : std_string_String option = v12.l1
    let v15 : int32 = v12.l2
    let v16 : int32 = v12.l3
    let v17 : US1 = v12.l4
    let v18 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v19 : string = "Box::pin($0)"
    let v20 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v18 v19 
    let v21 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v22 : Heap1 = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : leptos_prelude_ArcRwSignal<Heap0> = v22.l3
    let v24 : (int32 -> ((bool * std_string_String) -> (bool * std_string_String))) = method218(v1)
    let v25 : Vec<(bool * std_string_String)> = method208(v13)
    let v26 : string = "v25.iter().enumerate().map(|(i, x)| v24(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v27 : Vec<(bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : Heap0 = {l0 = v27; l1 = v14; l2 = v15; l3 = v16; l4 = v17} : Heap0
    let v29 : string = $"true; leptos::prelude::ArcRwSignal::set(&$0, $1); //"
    let v30 : bool = Fable.Core.RustInterop.emitRustExpr struct (v23, v28) v29 
    ()
and closure212 (v0 : leptos_prelude_ReadSignal<(bool * std_string_String)>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let (a, b) = v2 
    let v5 : bool = a
    let v6 : std_string_String = b
    v5
and method220 (v0 : leptos_prelude_ReadSignal<(bool * std_string_String)>) : (unit -> bool) =
    closure212(v0)
and closure213 (v0 : int32) () : std_string_String =
    let v1 : string = "account-" + string v0 + ""
    (* run_target_args'
    let v6 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v7 : string = "&*$0"
    let v8 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v7 
    let _run_target_args'_v6 = v8 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v9 : string = "&*$0"
    let v10 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v9 
    let _run_target_args'_v6 = v10 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v11 : string = "&*$0"
    let v12 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v11 
    let _run_target_args'_v6 = v12 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v14 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v14 
    #endif
#if FABLE_COMPILER_PYTHON
    let v18 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v18 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v22 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v22 
    #endif
#else
    let v26 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v26 
    #endif
    let v29 : Ref<Str> = _run_target_args'_v6 
    (* run_target_args'
    let v39 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v40 : string = "String::from($0)"
    let v41 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v40 
    let _run_target_args'_v39 = v41 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v42 
    let _run_target_args'_v39 = v43 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v44 
    let _run_target_args'_v39 = v45 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v47 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v47 
    #endif
#if FABLE_COMPILER_PYTHON
    let v51 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v51 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v55 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v55 
    #endif
#else
    let v59 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v59 
    #endif
    let v62 : std_string_String = _run_target_args'_v39 
    v62
and method221 (v0 : int32) : (unit -> std_string_String) =
    closure213(v0)
and method223 (v0 : bool) : bool =
    let v1 : bool = v0 = false
    v1
and closure215 (v0 : int32, v1 : std_string_String, v2 : int32) (v3 : (bool * std_string_String)) : (bool * std_string_String) =
    let v4 : bool = v2 = v0
    let v5 : bool = method223(v4)
    if v5 then
        v3
    else
        let (a, b) = v3 
        let v8 : bool = a
        let v9 : std_string_String = b
        let v15 : (bool * std_string_String) = v8, v1 
        v15
and closure214 (v0 : int32, v1 : std_string_String) (v2 : int32) : ((bool * std_string_String) -> (bool * std_string_String)) =
    closure215(v0, v1, v2)
and method222 (v0 : int32, v1 : std_string_String) : (int32 -> ((bool * std_string_String) -> (bool * std_string_String))) =
    closure214(v0, v1)
and closure216 () () : string =
    let v0 : string = "flex-1"
    v0
and method224 (v0 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>) : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> =
    v0
and closure219 () (v0 : bool) : bool =
    let v1 : bool = v0 = false
    v1
and method226 () : (bool -> bool) =
    closure219()
and closure218 (v0 : int32) (v1 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))) : bool =
    let (a, b) = v1 
    let v5 : int32 = a
    let struct (v6 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v7 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = b
    let v14 : bool = v5 = v0
    let v15 : (bool -> bool) = method226()
    v15 v14
and method225 (v0 : int32) : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) -> bool) =
    closure218(v0)
and closure217 (v0 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>>, v1 : int32) (v2 : Heap0) : Heap0 =
    let v3 : Vec<(bool * std_string_String)> = v2.l0
    let v4 : std_string_String option = v2.l1
    let v5 : int32 = v2.l2
    let v6 : int32 = v2.l3
    let v7 : US1 = v2.l4
    let v8 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v9 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let v10 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = method224(v9)
    let v11 : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) -> bool) = method225(v1)
    let v12 : string = "true; let mut v10 = v10"
    let v13 : bool = Fable.Core.RustInterop.emitRustExpr () v12 
    let v14 : string = "true; v10.retain(|x| v11(x.clone()))"
    let v15 : bool = Fable.Core.RustInterop.emitRustExpr () v14 
    let v16 : string = "v10"
    let v17 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr () v16 
    let v18 : unit = ()
    let v19 : string = $"true; let _func1_from_v18 = Func1::from(move |value| {{ //"
    let v20 : bool = Fable.Core.RustInterop.emitRustExpr () v19 
    let v21 : string = $"value"
    let v22 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = Fable.Core.RustInterop.emitRustExpr () v21 
    let (a, b) = v22 
    let v26 : int32 = a
    let struct (v27 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v28 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = b
    let v35 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v36 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr v27 v35 
    let func1_from_result = v36 //
    let v37 : _ = func1_from_result
    let v38 : string = $"true; $0 /*"
    let v39 : bool = Fable.Core.RustInterop.emitRustExpr v37 v38 
    let v40 : string = $"*/ }}); //"
    let v41 : bool = Fable.Core.RustInterop.emitRustExpr () v40 
    let v42 : string = $"_func1_from_v18"
    let v43 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v42 
    let v44 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v45 : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) -> (bool * std_string_String)) = closure200(v43)
    let v46 : Vec<(bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v17, v45) v44 
    {l0 = v46; l1 = v4; l2 = v5; l3 = v6; l4 = v7} : Heap0
and closure220 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and closure221 () () : std_string_String =
    let v0 : string = " pr-[7px] pl-[5px]"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    v61
and method227 (v0 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), leptos_prelude_AnyView_>) : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), leptos_prelude_AnyView_> =
    v0
and closure222 (v0 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), leptos_prelude_AnyView_>) struct (v1 : int32, v2 : int32, v3 : leptos_prelude_ReadSignal<(bool * std_string_String)>) : leptos_prelude_AnyView_ =
    let v4 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), leptos_prelude_AnyView_> = method227(v0)
    let func1_move_x = struct (v1, v2, v3) //
    let v5 : _ = func1_move_x
    let v6 : string = "(move |x| v4(x))($0)"
    let v7 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5 v6 
    v7
and closure207 (v0 : Heap2, v1 : leptos_prelude_ArcMemo<Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>>, v2 : leptos_prelude_ArcMemo<int32>, v3 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>>, v4 : leptos_prelude_WriteSignal<int32>) () : leptos_dom_Fragment =
    let v5 : string = "class=\"flex flex-1 flex-col p-[8px] gap-[8px]\""
    let v6 : string = ""
    let v7 : string = " " + v5 + v6 + ""
    let v8 : string = "$0"
    let v9 : leptos_prelude_ArcMemo<Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>> = Fable.Core.RustInterop.emitRustExpr v1 v8 
    let v10 : unit = ()
    let v11 : string = $"true; let _func1_from_v10 = Func1::from(move |value| {{ //"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr () v11 
    let v13 : string = $"value"
    let struct (v14 : int32, v15 : int32, v16 : leptos_prelude_ReadSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr () v13 
    let v18 : (int32 * int32) = v14, v15 
    let func1_from_result = v18 //
    let v21 : _ = func1_from_result
    let v22 : string = $"true; $0 /*"
    let v23 : bool = Fable.Core.RustInterop.emitRustExpr v21 v22 
    let v24 : string = $"*/ }}); //"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr () v24 
    let v26 : string = $"_func1_from_v10"
    let v27 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)> = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : (struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>) -> (int32 * int32)) = method215(v27)
    let v29 : unit = ()
    let v30 : string = $"true; let _func1_from_v29 = Func1::from(move |value| {{ //"
    let v31 : bool = Fable.Core.RustInterop.emitRustExpr () v30 
    let v32 : string = $"value"
    let struct (v33 : int32, v34 : int32, v35 : leptos_prelude_ReadSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr () v32 
    let v36 : string = "class=\"flex gap-[8px] [align-items:center]\""
    let v37 : string = " " + v36 + v6 + ""
    let v38 : int32 = method217(v34)
    let v39 : unit = ()
    let v40 : string = $"true; let _func0_from_v39 = Func0::from(move || {{ //"
    let v41 : bool = Fable.Core.RustInterop.emitRustExpr () v40 
    let v42 : string = "account-" + string v38 + ""
    (* run_target_args'
    let v47 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v48 : string = "&*$0"
    let v49 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v42 v48 
    let _run_target_args'_v47 = v49 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v50 : string = "&*$0"
    let v51 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v42 v50 
    let _run_target_args'_v47 = v51 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v52 : string = "&*$0"
    let v53 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v42 v52 
    let _run_target_args'_v47 = v53 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v55 : Ref<Str> = v42 |> unbox<Ref<Str>>
    let _run_target_args'_v47 = v55 
    #endif
#if FABLE_COMPILER_PYTHON
    let v59 : Ref<Str> = v42 |> unbox<Ref<Str>>
    let _run_target_args'_v47 = v59 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v63 : Ref<Str> = v42 |> unbox<Ref<Str>>
    let _run_target_args'_v47 = v63 
    #endif
#else
    let v67 : Ref<Str> = v42 |> unbox<Ref<Str>>
    let _run_target_args'_v47 = v67 
    #endif
    let v70 : Ref<Str> = _run_target_args'_v47 
    (* run_target_args'
    let v80 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v81 : string = "String::from($0)"
    let v82 : std_string_String = Fable.Core.RustInterop.emitRustExpr v70 v81 
    let _run_target_args'_v80 = v82 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v83 : string = "String::from($0)"
    let v84 : std_string_String = Fable.Core.RustInterop.emitRustExpr v70 v83 
    let _run_target_args'_v80 = v84 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v85 : string = "String::from($0)"
    let v86 : std_string_String = Fable.Core.RustInterop.emitRustExpr v70 v85 
    let _run_target_args'_v80 = v86 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v88 : std_string_String = v70 |> unbox<std_string_String>
    let _run_target_args'_v80 = v88 
    #endif
#if FABLE_COMPILER_PYTHON
    let v92 : std_string_String = v70 |> unbox<std_string_String>
    let _run_target_args'_v80 = v92 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v96 : std_string_String = v70 |> unbox<std_string_String>
    let _run_target_args'_v80 = v96 
    #endif
#else
    let v100 : std_string_String = v70 |> unbox<std_string_String>
    let _run_target_args'_v80 = v100 
    #endif
    let v103 : std_string_String = _run_target_args'_v80 
    let v109 : string = $"true; $0 /*"
    let v110 : bool = Fable.Core.RustInterop.emitRustExpr v103 v109 
    let v111 : string = $"*/ }}); //"
    let v112 : bool = Fable.Core.RustInterop.emitRustExpr () v111 
    let v113 : string = $"_func0_from_v39"
    let v114 : Func0<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v113 
    let v115 : string = "block"
    let v116 : string = "relative"
    let v117 : string = "h-8"
    let v118 : string = "w-14"
    let v119 : string = "cursor-pointer"
    let v120 : string = "[-webkit-tap-highlight-color:_transparent]"
    let v121 : string list = []
    let v123 : string list = v120 :: v121 
    let v127 : string list = v119 :: v123 
    let v131 : string list = v118 :: v127 
    let v135 : string list = v117 :: v131 
    let v139 : string list = v116 :: v135 
    let v143 : string list = v115 :: v139 
    let v149 : unit = ()
    let _let'_v149 =
        seq {
            yield! v143 
            (* indent
            ()
        indent *)
        }
        (* indent
        ()
    indent *)
    let v152 : string seq = _let'_v149 
    let v159 : (string -> (string seq -> string)) = String.concat
    let v160 : string = " "
    let v161 : (string seq -> string) = v159 v160
    let v162 : string = v161 v152
    (* run_target_args'
    let v169 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v170 : string = "&*$0"
    let v171 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v162 v170 
    let _run_target_args'_v169 = v171 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v172 : string = "&*$0"
    let v173 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v162 v172 
    let _run_target_args'_v169 = v173 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v174 : string = "&*$0"
    let v175 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v162 v174 
    let _run_target_args'_v169 = v175 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v177 : Ref<Str> = v162 |> unbox<Ref<Str>>
    let _run_target_args'_v169 = v177 
    #endif
#if FABLE_COMPILER_PYTHON
    let v181 : Ref<Str> = v162 |> unbox<Ref<Str>>
    let _run_target_args'_v169 = v181 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v185 : Ref<Str> = v162 |> unbox<Ref<Str>>
    let _run_target_args'_v169 = v185 
    #endif
#else
    let v189 : Ref<Str> = v162 |> unbox<Ref<Str>>
    let _run_target_args'_v169 = v189 
    #endif
    let v192 : Ref<Str> = _run_target_args'_v169 
    (* run_target_args'
    let v202 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v203 : string = "String::from($0)"
    let v204 : std_string_String = Fable.Core.RustInterop.emitRustExpr v192 v203 
    let _run_target_args'_v202 = v204 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v205 : string = "String::from($0)"
    let v206 : std_string_String = Fable.Core.RustInterop.emitRustExpr v192 v205 
    let _run_target_args'_v202 = v206 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v207 : string = "String::from($0)"
    let v208 : std_string_String = Fable.Core.RustInterop.emitRustExpr v192 v207 
    let _run_target_args'_v202 = v208 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v210 : std_string_String = v192 |> unbox<std_string_String>
    let _run_target_args'_v202 = v210 
    #endif
#if FABLE_COMPILER_PYTHON
    let v214 : std_string_String = v192 |> unbox<std_string_String>
    let _run_target_args'_v202 = v214 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v218 : std_string_String = v192 |> unbox<std_string_String>
    let _run_target_args'_v202 = v218 
    #endif
#else
    let v222 : std_string_String = v192 |> unbox<std_string_String>
    let _run_target_args'_v202 = v222 
    #endif
    let v225 : std_string_String = _run_target_args'_v202 
    let v231 : string = "$0"
    let v232 : std_string_String = Fable.Core.RustInterop.emitRustExpr v225 v231 
    let v233 : string = "for=move || v114()"
    let v234 : string = "class=v232"
    let v235 : string = " " + v233 + v6 + ""
    let v236 : string = " " + v234 + v235 + ""
    let v237 : (leptos_ev_Event -> unit) = closure209(v0, v38)
    let v238 : string = "true; let v237 = $0; //"
    let v239 : bool = Fable.Core.RustInterop.emitRustExpr v237 v238 
    let v240 : (unit -> bool) = method220(v35)
    let v241 : (unit -> std_string_String) = method221(v38)
    let v242 : string = "class=\"peer sr-only [&:checked_+_span_svg[data-checked-icon]]:block [&:checked_+_span_svg[data-unchecked-icon]]:hidden\""
    let v243 : string = "type=\"checkbox\""
    let v244 : string = "id=move || v241()"
    let v245 : string = "on:change=move |event| v237(event)"
    let v246 : string = "prop:checked=move || v240()"
    let v247 : string = " " + v242 + v6 + ""
    let v248 : string = " " + v243 + v247 + ""
    let v249 : string = " " + v244 + v248 + ""
    let v250 : string = " " + v245 + v249 + ""
    let v251 : string = " " + v246 + v250 + ""
    let v252 : string = "input"
    let v253 : string = "<" + v252 + " " + v251 + " />"
    let v254 : string = "leptos::prelude::view! { " + v253 + " }"
    let v255 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v254 
    let v256 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v255 |> unbox
    let v257 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v258 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v256 v257 
    let v259 : string = "class=\"absolute inset-y-0 start-0 z-10 m-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-white dark:bg-gray-400 peer-checked:bg-white text-gray-200 transition-all peer-checked:start-6 peer-checked:text-gray-400\""
    let v260 : string = " " + v259 + v6 + ""
    let v261 : string = "data-unchecked-icon"
    let v262 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v263 : string = "class=\"h-4 w-4\""
    let v264 : string = "viewBox=\"0 0 20 20\""
    let v265 : string = "fill=\"currentColor\""
    let v266 : string = " " + v261 + v6 + ""
    let v267 : string = " " + v262 + v266 + ""
    let v268 : string = " " + v263 + v267 + ""
    let v269 : string = " " + v264 + v268 + ""
    let v270 : string = " " + v265 + v269 + ""
    let v271 : string = "fill-rule=\"evenodd\""
    let v272 : string = "d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\""
    let v273 : string = "clip-rule=\"evenodd\""
    let v274 : string = " " + v271 + v6 + ""
    let v275 : string = " " + v272 + v274 + ""
    let v276 : string = " " + v273 + v275 + ""
    let v277 : string = "vec![" + v6 + "]"
    let v278 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v277 
    let v279 : string = "leptos::prelude::Fragment::new($0)"
    let v280 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v278 v279 
    let v281 : string = "leptos::prelude::AnyView::from($0)"
    let v282 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v280 v281 
    let v283 : string = "path"
    let v284 : string = "<" + v283 + " " + v276 + ">move || { v282 }</" + v283 + ">"
    let v285 : string = "leptos::prelude::view! { " + v284 + " }"
    let v286 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v285 
    let v287 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v286 |> unbox
    let v288 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v289 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v287 v288 
    let v290 : string = "v289"
    let v291 : string = v290 + v6 
    let v292 : string = v291 + v6 
    let v293 : string = "vec![" + v292 + "]"
    let v294 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v293 
    let v295 : string = "leptos::prelude::Fragment::new($0)"
    let v296 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v294 v295 
    let v297 : string = "leptos::prelude::AnyView::from($0)"
    let v298 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v296 v297 
    let v299 : string = "svg"
    let v300 : string = "<" + v299 + " " + v270 + ">move || { v298 }</" + v299 + ">"
    let v301 : string = "leptos::prelude::view! { " + v300 + " }"
    let v302 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v301 
    let v303 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v302 |> unbox
    let v304 : string = "data-checked-icon"
    let v305 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v306 : string = "class=\"hidden h-4 w-4\""
    let v307 : string = "viewBox=\"0 0 20 20\""
    let v308 : string = "fill=\"currentColor\""
    let v309 : string = " " + v304 + v6 + ""
    let v310 : string = " " + v305 + v309 + ""
    let v311 : string = " " + v306 + v310 + ""
    let v312 : string = " " + v307 + v311 + ""
    let v313 : string = " " + v308 + v312 + ""
    let v314 : string = "fill-rule=\"evenodd\""
    let v315 : string = "d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\""
    let v316 : string = "clip-rule=\"evenodd\""
    let v317 : string = " " + v314 + v6 + ""
    let v318 : string = " " + v315 + v317 + ""
    let v319 : string = " " + v316 + v318 + ""
    let v320 : string = "vec![" + v6 + "]"
    let v321 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v320 
    let v322 : string = "leptos::prelude::Fragment::new($0)"
    let v323 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v321 v322 
    let v324 : string = "leptos::prelude::AnyView::from($0)"
    let v325 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v323 v324 
    let v326 : string = "<" + v283 + " " + v319 + ">move || { v325 }</" + v283 + ">"
    let v327 : string = "leptos::prelude::view! { " + v326 + " }"
    let v328 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v327 
    let v329 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v328 |> unbox
    let v330 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v331 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v329 v330 
    let v332 : string = "v331"
    let v333 : string = v332 + v6 
    let v334 : string = v333 + v6 
    let v335 : string = "vec![" + v334 + "]"
    let v336 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v335 
    let v337 : string = "leptos::prelude::Fragment::new($0)"
    let v338 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v336 v337 
    let v339 : string = "leptos::prelude::AnyView::from($0)"
    let v340 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v338 v339 
    let v341 : string = "<" + v299 + " " + v313 + ">move || { v340 }</" + v299 + ">"
    let v342 : string = "leptos::prelude::view! { " + v341 + " }"
    let v343 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v342 
    let v344 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v343 |> unbox
    let v345 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v346 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v344 v345 
    let v347 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v348 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v303 v347 
    let v349 : string = "v346"
    let v350 : string = v349 + v6 
    let v351 : string = v350 + v6 
    let v352 : string = "v348"
    let v353 : string = ", "
    let v354 : string = v352 + v353 
    let v355 : string = v354 + v351 
    let v356 : string = "vec![" + v355 + "]"
    let v357 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v356 
    let v358 : string = "leptos::prelude::Fragment::new($0)"
    let v359 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v357 v358 
    let v360 : string = "leptos::prelude::AnyView::from($0)"
    let v361 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v359 v360 
    let v362 : string = "span"
    let v363 : string = "<" + v362 + " " + v260 + ">move || { v361 }</" + v362 + ">"
    let v364 : string = "leptos::prelude::view! { " + v363 + " }"
    let v365 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v364 
    let v366 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v365 |> unbox
    let v367 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v368 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v366 v367 
    let v369 : string = "class=\"absolute inset-0 rounded-full bg-gray-200 dark:bg-gray-200 transition peer-checked:bg-gray-300\""
    let v370 : string = " " + v369 + v6 + ""
    let v371 : string = "vec![" + v6 + "]"
    let v372 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v371 
    let v373 : string = "leptos::prelude::Fragment::new($0)"
    let v374 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v372 v373 
    let v375 : string = "leptos::prelude::AnyView::from($0)"
    let v376 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v374 v375 
    let v377 : string = "<" + v362 + " " + v370 + ">move || { v376 }</" + v362 + ">"
    let v378 : string = "leptos::prelude::view! { " + v377 + " }"
    let v379 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v378 
    let v380 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v379 |> unbox
    let v381 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v382 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v380 v381 
    let v383 : string = "v382"
    let v384 : string = v383 + v6 
    let v385 : string = v384 + v6 
    let v386 : string = "v368"
    let v387 : string = v386 + v353 
    let v388 : string = v387 + v385 
    let v389 : string = "v258"
    let v390 : string = v389 + v353 
    let v391 : string = v390 + v388 
    let v392 : string = "vec![" + v391 + "]"
    let v393 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v392 
    let v394 : string = "leptos::prelude::Fragment::new($0)"
    let v395 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v393 v394 
    let v396 : string = "leptos::prelude::AnyView::from($0)"
    let v397 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v395 v396 
    let v398 : string = "label"
    let v399 : string = "<" + v398 + " " + v236 + ">move || { v397 }</" + v398 + ">"
    let v400 : string = "leptos::prelude::view! { " + v399 + " }"
    let v401 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v400 
    let v402 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Label>> = v401 |> unbox
    let v403 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v404 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v402 v403 
    let v405 : unit = ()
    let v406 : string = $"true; let _func0_from_v405 = Func0::from(move || {{ //"
    let v407 : bool = Fable.Core.RustInterop.emitRustExpr () v406 
    let v408 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v409 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr v35 v408 
    let (a, b) = v409 
    let v412 : bool = a
    let v413 : std_string_String = b
    let v418 : string = $"true; $0 /*"
    let v419 : bool = Fable.Core.RustInterop.emitRustExpr v413 v418 
    let v420 : string = $"*/ }}); //"
    let v421 : bool = Fable.Core.RustInterop.emitRustExpr () v420 
    let v422 : string = $"_func0_from_v405"
    let v423 : Func0<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v422 
    let v424 : unit = ()
    let v425 : string = $"true; let _func1_from_v424 = Func0::from(move || {{ //"
    let v426 : bool = Fable.Core.RustInterop.emitRustExpr () v425 
    let v427 : string = $"value"
    let v428 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v427 
    let v429 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v430 : string = "Box::pin($0)"
    let v431 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v429 v430 
    let v432 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v433 : Heap1 = Fable.Core.RustInterop.emitRustExpr v431 v432 
    let v434 : leptos_prelude_ArcRwSignal<Heap0> = v433.l3
    let v435 : string = "Box::pin($0)"
    let v436 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v434 v435 
    let v437 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v438 : Heap0 = Fable.Core.RustInterop.emitRustExpr v436 v437 
    let v439 : Vec<(bool * std_string_String)> = v438.l0
    let v440 : std_string_String option = v438.l1
    let v441 : int32 = v438.l2
    let v442 : int32 = v438.l3
    let v443 : US1 = v438.l4
    let v444 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v445 : string = "Box::pin($0)"
    let v446 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v444 v445 
    let v447 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v448 : Heap1 = Fable.Core.RustInterop.emitRustExpr v446 v447 
    let v449 : leptos_prelude_ArcRwSignal<Heap0> = v448.l3
    let v450 : (int32 -> ((bool * std_string_String) -> (bool * std_string_String))) = method222(v38, v428)
    let v451 : Vec<(bool * std_string_String)> = method208(v439)
    let v452 : string = "v451.iter().enumerate().map(|(i, x)| v450(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v453 : Vec<(bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v452 
    let v454 : Heap0 = {l0 = v453; l1 = v440; l2 = v441; l3 = v442; l4 = v443} : Heap0
    let v455 : string = $"true; leptos::prelude::ArcRwSignal::set(&$0, $1); //"
    let v456 : bool = Fable.Core.RustInterop.emitRustExpr struct (v449, v454) v455 
    let v457 : string = $"true; /*"
    let v458 : bool = Fable.Core.RustInterop.emitRustExpr () v457 
    let v459 : string = $"*/ }}); //"
    let v460 : bool = Fable.Core.RustInterop.emitRustExpr () v459 
    let v461 : string = $"_func1_from_v424"
    let v462 : Func0<std_string_String, unit> = Fable.Core.RustInterop.emitRustExpr () v461 
    let v463 : string = "$0"
    let v464 : (unit -> string) = closure216()
    let v465 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v464 v463 
    let v466 : string = "class=move || \"bg-gray-50 h-[31px] [font-size:.875rem] \".to_owned() + &v465(())"
    let v467 : string = "prop:value=move || v423()"
    let v468 : (std_string_String -> unit) = closure180(v462)
    let v469 : string = "on:keyup=move |event: web_sys::KeyboardEvent| v468(leptos::prelude::event_target_value(&event))"
    let v470 : string = " " + v466 + v6 + ""
    let v471 : string = " " + v467 + v470 + ""
    let v472 : string = " " + v469 + v471 + ""
    let v473 : string = "<" + v252 + " " + v472 + " />"
    let v474 : string = "leptos::prelude::view! { " + v473 + " }"
    let v475 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v474 
    let v476 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v475 |> unbox
    let v477 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v478 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v476 v477 
    let v479 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v480 : int32 = Fable.Core.RustInterop.emitRustExpr v2 v479 
    let v481 : bool = v480 = 1
    let v592 : leptos_prelude_AnyView_ =
        if v481 then
            let v482 : string = "vec![" + v6 + "]"
            let v483 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v482 
            let v484 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v485 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v483 v484 
            v485
        else
            let v486 : unit = ()
            let v487 : string = $"true; let _func0_from_v486 = Func0::from(move || {{ //"
            let v488 : bool = Fable.Core.RustInterop.emitRustExpr () v487 
            let v489 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
            let v490 : string = "Box::pin($0)"
            let v491 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v489 v490 
            let v492 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
            let v493 : Heap1 = Fable.Core.RustInterop.emitRustExpr v491 v492 
            let v494 : leptos_prelude_ArcRwSignal<Heap0> = v493.l3
            let v495 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
            let v496 : bool = Fable.Core.RustInterop.emitRustExpr v494 v495 
            let v498 : TypeEmit<Heap0> = null |> unbox<TypeEmit<Heap0>>
            let v501 : string = "*/ | { *x = $0(x.clone()) }); //"
            let v502 : (Heap0 -> Heap0) = closure217(v3, v38)
            let v503 : bool = Fable.Core.RustInterop.emitRustExpr v502 v501 
            let v504 : string = $"true; leptos::prelude::WriteSignal::update(&$0, |x: &mut /*"
            let v505 : bool = Fable.Core.RustInterop.emitRustExpr v4 v504 
            let v507 : TypeEmit<int32> = null |> unbox<TypeEmit<int32>>
            let v510 : string = "*/ | { *x = $0(x.clone()) }); //"
            let v511 : (int32 -> int32) = closure201()
            let v512 : bool = Fable.Core.RustInterop.emitRustExpr v511 v510 
            // rust.func0_from / is_unit
            let v513 : string = $"true; /*"
            let v514 : bool = Fable.Core.RustInterop.emitRustExpr () v513 
            let v515 : string = $"*/ }}); //"
            let v516 : bool = Fable.Core.RustInterop.emitRustExpr () v515 
            let v517 : string = $"_func0_from_v486"
            let v518 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v517 
            let v519 : string = "$0"
            let v520 : (unit -> string) = closure220()
            let v521 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v520 v519 
            let v522 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v523 : string = "fill=\"none\""
            let v524 : string = "viewBox=\"0 0 24 24\""
            let v525 : string = "stroke-width=\"1.5\""
            let v526 : string = "stroke=\"currentColor\""
            let v527 : string = "class=move || \" \".to_owned() + &v521(())"
            let v528 : string = " " + v522 + v6 + ""
            let v529 : string = " " + v523 + v528 + ""
            let v530 : string = " " + v524 + v529 + ""
            let v531 : string = " " + v525 + v530 + ""
            let v532 : string = " " + v526 + v531 + ""
            let v533 : string = " " + v527 + v532 + ""
            let v534 : string = "stroke-linecap=\"round\""
            let v535 : string = "stroke-linejoin=\"round\""
            let v536 : string = "d=\"M6 6l12 12m0-12L6 18\""
            let v537 : string = " " + v534 + v6 + ""
            let v538 : string = " " + v535 + v537 + ""
            let v539 : string = " " + v536 + v538 + ""
            let v540 : string = "vec![" + v6 + "]"
            let v541 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v540 
            let v542 : string = "leptos::prelude::Fragment::new($0)"
            let v543 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v541 v542 
            let v544 : string = "leptos::prelude::AnyView::from($0)"
            let v545 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v543 v544 
            let v546 : string = "<" + v283 + " " + v539 + ">move || { v545 }</" + v283 + ">"
            let v547 : string = "leptos::prelude::view! { " + v546 + " }"
            let v548 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v547 
            let v549 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v548 |> unbox
            let v550 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v551 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v549 v550 
            let v552 : string = "v551"
            let v553 : string = v552 + v6 
            let v554 : string = v553 + v6 
            let v555 : string = "vec![" + v554 + "]"
            let v556 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v555 
            let v557 : string = "leptos::prelude::Fragment::new($0)"
            let v558 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v556 v557 
            let v559 : string = "leptos::prelude::AnyView::from($0)"
            let v560 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v558 v559 
            let v561 : string = "<" + v299 + " " + v533 + ">move || { v560 }</" + v299 + ">"
            let v562 : string = "leptos::prelude::view! { " + v561 + " }"
            let v563 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v562 
            let v564 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v563 |> unbox
            let v565 : string = "on:click=move |_| v518()"
            let v566 : string = "aria-label=\"Delete\""
            let v567 : string = "$0"
            let v568 : (unit -> std_string_String) = closure221()
            let v569 : (unit -> std_string_String) = Fable.Core.RustInterop.emitRustExpr v568 v567 
            let v570 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] pb-[8px] pt-[8px] px-[12px] \".to_owned() + &v569(())"
            let v571 : string = " " + v570 + v6 + ""
            let v572 : string = " " + v565 + v571 + ""
            let v573 : string = " " + v566 + v572 + ""
            let v574 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v575 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v564 v574 
            let v576 : string = "v575"
            let v577 : string = v576 + v6 
            let v578 : string = v577 + v6 
            let v579 : string = "vec![" + v578 + "]"
            let v580 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v579 
            let v581 : string = "leptos::prelude::Fragment::new($0)"
            let v582 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v580 v581 
            let v583 : string = "leptos::prelude::AnyView::from($0)"
            let v584 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v582 v583 
            let v585 : string = "button"
            let v586 : string = "<" + v585 + " " + v573 + ">move || { v584 }</" + v585 + ">"
            let v587 : string = "leptos::prelude::view! { " + v586 + " }"
            let v588 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v587 
            let v589 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Button>> = v588 |> unbox
            let v590 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v591 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v589 v590 
            v591
    let v593 : string = "v592"
    let v594 : string = v593 + v6 
    let v595 : string = v594 + v6 
    let v596 : string = "v478"
    let v597 : string = v596 + v353 
    let v598 : string = v597 + v595 
    let v599 : string = "v404"
    let v600 : string = v599 + v353 
    let v601 : string = v600 + v598 
    let v602 : string = "vec![" + v601 + "]"
    let v603 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v602 
    let v604 : string = "leptos::prelude::Fragment::new($0)"
    let v605 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v603 v604 
    let v606 : string = "leptos::prelude::AnyView::from($0)"
    let v607 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v605 v606 
    let v608 : string = "div"
    let v609 : string = "<" + v608 + " " + v37 + ">move || { v607 }</" + v608 + ">"
    let v610 : string = "leptos::prelude::view! { " + v609 + " }"
    let v611 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v610 
    let v612 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v611 |> unbox
    let v613 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v614 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v612 v613 
    let v615 : string = "v614"
    let v616 : string = v615 + v6 
    let v617 : string = v616 + v6 
    let v618 : string = "vec![" + v617 + "]"
    let v619 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v618 
    let v620 : string = "leptos::prelude::Fragment::new($0)"
    let v621 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v619 v620 
    let v622 : string = "leptos::prelude::AnyView::from($0)"
    let v623 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v621 v622 
    let func1_from_result = v623 //
    let v624 : _ = func1_from_result
    let v625 : string = $"true; $0 /*"
    let v626 : bool = Fable.Core.RustInterop.emitRustExpr v624 v625 
    let v627 : string = $"*/ }}); //"
    let v628 : bool = Fable.Core.RustInterop.emitRustExpr () v627 
    let v629 : string = $"_func1_from_v29"
    let v630 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v629 
    let v631 : string = "each=v9"
    let v632 : string = "key=move |x| v28(x.to_owned())"
    let v633 : string = "let:x"
    let v634 : (struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>) -> leptos_prelude_AnyView_) = closure222(v630)
    let v635 : string = "children=move |x| v634(x)"
    let v636 : string = " " + v631 + v6 + ""
    let v637 : string = " " + v632 + v636 + ""
    let v638 : string = " " + v633 + v637 + ""
    let v639 : string = " " + v635 + v638 + ""
    let v640 : string = "leptos::prelude::For"
    let v641 : string = "<" + v640 + " " + v639 + " />"
    let v642 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::view! { " + v641 + " })"
    let v643 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr () v642 
    let v644 : string = "v643"
    let v645 : string = v644 + v6 
    let v646 : string = v645 + v6 
    let v647 : string = "vec![" + v646 + "]"
    let v648 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v647 
    let v649 : string = "leptos::prelude::Fragment::new($0)"
    let v650 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v648 v649 
    let v651 : string = "leptos::prelude::AnyView::from($0)"
    let v652 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v650 v651 
    let v653 : string = "<" + v608 + " " + v7 + ">move || { v652 }</" + v608 + ">"
    let v654 : string = "leptos::prelude::view! { " + v653 + " }"
    let v655 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v654 
    let v656 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v655 |> unbox
    let v657 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v658 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v656 v657 
    let v659 : string = "v658"
    let v660 : string = v659 + v6 
    let v661 : string = v660 + v6 
    let v662 : string = "vec![" + v661 + "]"
    let v663 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v662 
    let v664 : string = "leptos::prelude::Fragment::new($0)"
    let v665 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v663 v664 
    v665
and closure223 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure224 () () : Ref<Lifetime<StaticLifetime, Str>> =
    let v0 : string = ""
    let v1 : string = "r#\"" + v0 + "\"#"
    let v2 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v1 
    v2
and closure225 () () : string =
    let v0 : string = "View"
    v0
and method228 () : (unit -> string) =
    closure225()
and closure227 () () : leptos_dom_Fragment =
    let v0 : string = "Dark Mode"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method229 () : (unit -> leptos_dom_Fragment) =
    closure227()
and closure230 () (v0 : bool) : bool =
    let v1 : bool = v0 = false
    v1
and closure229 (v0 : Heap2) (v1 : leptos_ev_Event) : unit =
    let v2 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v3 : string = "Box::pin($0)"
    let v4 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v6 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : leptos_prelude_ArcRwSignal<bool> = v6.l0
    let v8 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
    let v9 : bool = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v11 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
    let v14 : string = "*/ | { *x = $0(x.clone()) }); //"
    let v15 : (bool -> bool) = closure230()
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr v15 v14 
    ()
and closure231 (v0 : Heap2) () : bool =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<bool> = v5.l0
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr v6 v7 
    v8
and method231 (v0 : Heap2) : (unit -> bool) =
    closure231(v0)
and closure232 () () : std_string_String =
    let v0 : string = "dark-mode"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    v61
and method232 () : (unit -> std_string_String) =
    closure232()
and closure228 (v0 : Heap2) () : leptos_dom_Fragment =
    let v1 : unit = ()
    let v2 : string = $"true; let _func0_from_v1 = Func0::from(move || {{ //"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr () v2 
    let v4 : string = "dark-mode"
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    let v71 : string = $"true; $0 /*"
    let v72 : bool = Fable.Core.RustInterop.emitRustExpr v65 v71 
    let v73 : string = $"*/ }}); //"
    let v74 : bool = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = $"_func0_from_v1"
    let v76 : Func0<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v75 
    let v77 : string = "block"
    let v78 : string = "relative"
    let v79 : string = "h-8"
    let v80 : string = "w-14"
    let v81 : string = "cursor-pointer"
    let v82 : string = "[-webkit-tap-highlight-color:_transparent]"
    let v83 : string list = []
    let v85 : string list = v82 :: v83 
    let v89 : string list = v81 :: v85 
    let v93 : string list = v80 :: v89 
    let v97 : string list = v79 :: v93 
    let v101 : string list = v78 :: v97 
    let v105 : string list = v77 :: v101 
    let v111 : unit = ()
    let _let'_v111 =
        seq {
            yield! v105 
            (* indent
            ()
        indent *)
        }
        (* indent
        ()
    indent *)
    let v114 : string seq = _let'_v111 
    let v121 : (string -> (string seq -> string)) = String.concat
    let v122 : string = " "
    let v123 : (string seq -> string) = v121 v122
    let v124 : string = v123 v114
    (* run_target_args'
    let v131 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v132 : string = "&*$0"
    let v133 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v124 v132 
    let _run_target_args'_v131 = v133 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v134 : string = "&*$0"
    let v135 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v124 v134 
    let _run_target_args'_v131 = v135 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v136 : string = "&*$0"
    let v137 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v124 v136 
    let _run_target_args'_v131 = v137 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v139 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v139 
    #endif
#if FABLE_COMPILER_PYTHON
    let v143 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v143 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v147 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v147 
    #endif
#else
    let v151 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v151 
    #endif
    let v154 : Ref<Str> = _run_target_args'_v131 
    (* run_target_args'
    let v164 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v165 : string = "String::from($0)"
    let v166 : std_string_String = Fable.Core.RustInterop.emitRustExpr v154 v165 
    let _run_target_args'_v164 = v166 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v167 : string = "String::from($0)"
    let v168 : std_string_String = Fable.Core.RustInterop.emitRustExpr v154 v167 
    let _run_target_args'_v164 = v168 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v169 : string = "String::from($0)"
    let v170 : std_string_String = Fable.Core.RustInterop.emitRustExpr v154 v169 
    let _run_target_args'_v164 = v170 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v172 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v172 
    #endif
#if FABLE_COMPILER_PYTHON
    let v176 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v176 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v180 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v180 
    #endif
#else
    let v184 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v184 
    #endif
    let v187 : std_string_String = _run_target_args'_v164 
    let v193 : string = "$0"
    let v194 : std_string_String = Fable.Core.RustInterop.emitRustExpr v187 v193 
    let v195 : string = "for=move || v76()"
    let v196 : string = "class=v194"
    let v197 : string = ""
    let v198 : string = " " + v195 + v197 + ""
    let v199 : string = " " + v196 + v198 + ""
    let v200 : (leptos_ev_Event -> unit) = closure229(v0)
    let v201 : string = "true; let v200 = $0; //"
    let v202 : bool = Fable.Core.RustInterop.emitRustExpr v200 v201 
    let v203 : (unit -> bool) = method231(v0)
    let v204 : (unit -> std_string_String) = method232()
    let v205 : string = "class=\"peer sr-only [&:checked_+_span_svg[data-checked-icon]]:block [&:checked_+_span_svg[data-unchecked-icon]]:hidden\""
    let v206 : string = "type=\"checkbox\""
    let v207 : string = "id=move || v204()"
    let v208 : string = "on:change=move |event| v200(event)"
    let v209 : string = "prop:checked=move || v203()"
    let v210 : string = " " + v205 + v197 + ""
    let v211 : string = " " + v206 + v210 + ""
    let v212 : string = " " + v207 + v211 + ""
    let v213 : string = " " + v208 + v212 + ""
    let v214 : string = " " + v209 + v213 + ""
    let v215 : string = "input"
    let v216 : string = "<" + v215 + " " + v214 + " />"
    let v217 : string = "leptos::prelude::view! { " + v216 + " }"
    let v218 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v217 
    let v219 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v218 |> unbox
    let v220 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v221 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v219 v220 
    let v222 : string = "class=\"absolute inset-y-0 start-0 z-10 m-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-white dark:bg-gray-400 peer-checked:bg-white text-gray-200 transition-all peer-checked:start-6 peer-checked:text-gray-400\""
    let v223 : string = " " + v222 + v197 + ""
    let v224 : string = "data-unchecked-icon"
    let v225 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v226 : string = "class=\"h-4 w-4\""
    let v227 : string = "viewBox=\"0 0 20 20\""
    let v228 : string = "fill=\"currentColor\""
    let v229 : string = " " + v224 + v197 + ""
    let v230 : string = " " + v225 + v229 + ""
    let v231 : string = " " + v226 + v230 + ""
    let v232 : string = " " + v227 + v231 + ""
    let v233 : string = " " + v228 + v232 + ""
    let v234 : string = "fill-rule=\"evenodd\""
    let v235 : string = "d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\""
    let v236 : string = "clip-rule=\"evenodd\""
    let v237 : string = " " + v234 + v197 + ""
    let v238 : string = " " + v235 + v237 + ""
    let v239 : string = " " + v236 + v238 + ""
    let v240 : string = "vec![" + v197 + "]"
    let v241 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v240 
    let v242 : string = "leptos::prelude::Fragment::new($0)"
    let v243 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v241 v242 
    let v244 : string = "leptos::prelude::AnyView::from($0)"
    let v245 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v243 v244 
    let v246 : string = "path"
    let v247 : string = "<" + v246 + " " + v239 + ">move || { v245 }</" + v246 + ">"
    let v248 : string = "leptos::prelude::view! { " + v247 + " }"
    let v249 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v248 
    let v250 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v249 |> unbox
    let v251 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v252 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v250 v251 
    let v253 : string = "v252"
    let v254 : string = v253 + v197 
    let v255 : string = v254 + v197 
    let v256 : string = "vec![" + v255 + "]"
    let v257 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v256 
    let v258 : string = "leptos::prelude::Fragment::new($0)"
    let v259 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v257 v258 
    let v260 : string = "leptos::prelude::AnyView::from($0)"
    let v261 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v259 v260 
    let v262 : string = "svg"
    let v263 : string = "<" + v262 + " " + v233 + ">move || { v261 }</" + v262 + ">"
    let v264 : string = "leptos::prelude::view! { " + v263 + " }"
    let v265 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v264 
    let v266 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v265 |> unbox
    let v267 : string = "data-checked-icon"
    let v268 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v269 : string = "class=\"hidden h-4 w-4\""
    let v270 : string = "viewBox=\"0 0 20 20\""
    let v271 : string = "fill=\"currentColor\""
    let v272 : string = " " + v267 + v197 + ""
    let v273 : string = " " + v268 + v272 + ""
    let v274 : string = " " + v269 + v273 + ""
    let v275 : string = " " + v270 + v274 + ""
    let v276 : string = " " + v271 + v275 + ""
    let v277 : string = "fill-rule=\"evenodd\""
    let v278 : string = "d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\""
    let v279 : string = "clip-rule=\"evenodd\""
    let v280 : string = " " + v277 + v197 + ""
    let v281 : string = " " + v278 + v280 + ""
    let v282 : string = " " + v279 + v281 + ""
    let v283 : string = "vec![" + v197 + "]"
    let v284 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v283 
    let v285 : string = "leptos::prelude::Fragment::new($0)"
    let v286 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v284 v285 
    let v287 : string = "leptos::prelude::AnyView::from($0)"
    let v288 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v286 v287 
    let v289 : string = "<" + v246 + " " + v282 + ">move || { v288 }</" + v246 + ">"
    let v290 : string = "leptos::prelude::view! { " + v289 + " }"
    let v291 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v290 
    let v292 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v291 |> unbox
    let v293 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v294 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v292 v293 
    let v295 : string = "v294"
    let v296 : string = v295 + v197 
    let v297 : string = v296 + v197 
    let v298 : string = "vec![" + v297 + "]"
    let v299 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v298 
    let v300 : string = "leptos::prelude::Fragment::new($0)"
    let v301 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v299 v300 
    let v302 : string = "leptos::prelude::AnyView::from($0)"
    let v303 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v301 v302 
    let v304 : string = "<" + v262 + " " + v276 + ">move || { v303 }</" + v262 + ">"
    let v305 : string = "leptos::prelude::view! { " + v304 + " }"
    let v306 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v305 
    let v307 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v306 |> unbox
    let v308 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v309 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v307 v308 
    let v310 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v311 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v266 v310 
    let v312 : string = "v309"
    let v313 : string = v312 + v197 
    let v314 : string = v313 + v197 
    let v315 : string = "v311"
    let v316 : string = ", "
    let v317 : string = v315 + v316 
    let v318 : string = v317 + v314 
    let v319 : string = "vec![" + v318 + "]"
    let v320 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v319 
    let v321 : string = "leptos::prelude::Fragment::new($0)"
    let v322 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v320 v321 
    let v323 : string = "leptos::prelude::AnyView::from($0)"
    let v324 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v322 v323 
    let v325 : string = "span"
    let v326 : string = "<" + v325 + " " + v223 + ">move || { v324 }</" + v325 + ">"
    let v327 : string = "leptos::prelude::view! { " + v326 + " }"
    let v328 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v327 
    let v329 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v328 |> unbox
    let v330 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v331 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v329 v330 
    let v332 : string = "class=\"absolute inset-0 rounded-full bg-gray-200 dark:bg-gray-200 transition peer-checked:bg-gray-300\""
    let v333 : string = " " + v332 + v197 + ""
    let v334 : string = "vec![" + v197 + "]"
    let v335 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v334 
    let v336 : string = "leptos::prelude::Fragment::new($0)"
    let v337 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v335 v336 
    let v338 : string = "leptos::prelude::AnyView::from($0)"
    let v339 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v337 v338 
    let v340 : string = "<" + v325 + " " + v333 + ">move || { v339 }</" + v325 + ">"
    let v341 : string = "leptos::prelude::view! { " + v340 + " }"
    let v342 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v341 
    let v343 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v342 |> unbox
    let v344 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v345 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v343 v344 
    let v346 : string = "v345"
    let v347 : string = v346 + v197 
    let v348 : string = v347 + v197 
    let v349 : string = "v331"
    let v350 : string = v349 + v316 
    let v351 : string = v350 + v348 
    let v352 : string = "v221"
    let v353 : string = v352 + v316 
    let v354 : string = v353 + v351 
    let v355 : string = "vec![" + v354 + "]"
    let v356 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v355 
    let v357 : string = "leptos::prelude::Fragment::new($0)"
    let v358 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v356 v357 
    let v359 : string = "leptos::prelude::AnyView::from($0)"
    let v360 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v358 v359 
    let v361 : string = "label"
    let v362 : string = "<" + v361 + " " + v199 + ">move || { v360 }</" + v361 + ">"
    let v363 : string = "leptos::prelude::view! { " + v362 + " }"
    let v364 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v363 
    let v365 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Label>> = v364 |> unbox
    let v366 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v367 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v365 v366 
    let v368 : string = "v367"
    let v369 : string = v368 + v197 
    let v370 : string = v369 + v197 
    let v371 : string = "vec![" + v370 + "]"
    let v372 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v371 
    let v373 : string = "leptos::prelude::Fragment::new($0)"
    let v374 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v372 v373 
    v374
and method230 (v0 : Heap2) : (unit -> leptos_dom_Fragment) =
    closure228(v0)
and closure233 () () : string =
    let v0 : string = "items-center p-0"
    v0
and closure234 () () : string =
    let v0 : string = "pt-[9px] pr-[10px] pb-[11px] pl-[10px]"
    v0
and closure235 () () : string =
    let v0 : string = "sm:grid-cols-[150px_repeat(2,minmax(0,1fr))]"
    v0
and closure236 () () : string =
    let v0 : string = "[overflow:auto]"
    v0
and closure237 () () : leptos_dom_Fragment =
    let v0 : string = "Debug"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method233 () : (unit -> leptos_dom_Fragment) =
    closure237()
and closure239 (v0 : Heap2) (v1 : leptos_ev_Event) : unit =
    let v2 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v3 : string = "Box::pin($0)"
    let v4 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v6 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : leptos_prelude_ArcRwSignal<bool> = v6.l1
    let v8 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
    let v9 : bool = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v11 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
    let v14 : string = "*/ | { *x = $0(x.clone()) }); //"
    let v15 : (bool -> bool) = closure230()
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr v15 v14 
    ()
and closure240 (v0 : Heap2) () : bool =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<bool> = v5.l1
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr v6 v7 
    v8
and method235 (v0 : Heap2) : (unit -> bool) =
    closure240(v0)
and closure241 () () : std_string_String =
    let v0 : string = "debug"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    v61
and method236 () : (unit -> std_string_String) =
    closure241()
and closure238 (v0 : Heap2) () : leptos_dom_Fragment =
    let v1 : unit = ()
    let v2 : string = $"true; let _func0_from_v1 = Func0::from(move || {{ //"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr () v2 
    let v4 : string = "debug"
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    let v71 : string = $"true; $0 /*"
    let v72 : bool = Fable.Core.RustInterop.emitRustExpr v65 v71 
    let v73 : string = $"*/ }}); //"
    let v74 : bool = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = $"_func0_from_v1"
    let v76 : Func0<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v75 
    let v77 : string = "block"
    let v78 : string = "relative"
    let v79 : string = "h-8"
    let v80 : string = "w-14"
    let v81 : string = "cursor-pointer"
    let v82 : string = "[-webkit-tap-highlight-color:_transparent]"
    let v83 : string list = []
    let v85 : string list = v82 :: v83 
    let v89 : string list = v81 :: v85 
    let v93 : string list = v80 :: v89 
    let v97 : string list = v79 :: v93 
    let v101 : string list = v78 :: v97 
    let v105 : string list = v77 :: v101 
    let v111 : unit = ()
    let _let'_v111 =
        seq {
            yield! v105 
            (* indent
            ()
        indent *)
        }
        (* indent
        ()
    indent *)
    let v114 : string seq = _let'_v111 
    let v121 : (string -> (string seq -> string)) = String.concat
    let v122 : string = " "
    let v123 : (string seq -> string) = v121 v122
    let v124 : string = v123 v114
    (* run_target_args'
    let v131 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v132 : string = "&*$0"
    let v133 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v124 v132 
    let _run_target_args'_v131 = v133 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v134 : string = "&*$0"
    let v135 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v124 v134 
    let _run_target_args'_v131 = v135 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v136 : string = "&*$0"
    let v137 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v124 v136 
    let _run_target_args'_v131 = v137 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v139 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v139 
    #endif
#if FABLE_COMPILER_PYTHON
    let v143 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v143 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v147 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v147 
    #endif
#else
    let v151 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v151 
    #endif
    let v154 : Ref<Str> = _run_target_args'_v131 
    (* run_target_args'
    let v164 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v165 : string = "String::from($0)"
    let v166 : std_string_String = Fable.Core.RustInterop.emitRustExpr v154 v165 
    let _run_target_args'_v164 = v166 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v167 : string = "String::from($0)"
    let v168 : std_string_String = Fable.Core.RustInterop.emitRustExpr v154 v167 
    let _run_target_args'_v164 = v168 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v169 : string = "String::from($0)"
    let v170 : std_string_String = Fable.Core.RustInterop.emitRustExpr v154 v169 
    let _run_target_args'_v164 = v170 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v172 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v172 
    #endif
#if FABLE_COMPILER_PYTHON
    let v176 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v176 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v180 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v180 
    #endif
#else
    let v184 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v184 
    #endif
    let v187 : std_string_String = _run_target_args'_v164 
    let v193 : string = "$0"
    let v194 : std_string_String = Fable.Core.RustInterop.emitRustExpr v187 v193 
    let v195 : string = "for=move || v76()"
    let v196 : string = "class=v194"
    let v197 : string = ""
    let v198 : string = " " + v195 + v197 + ""
    let v199 : string = " " + v196 + v198 + ""
    let v200 : (leptos_ev_Event -> unit) = closure239(v0)
    let v201 : string = "true; let v200 = $0; //"
    let v202 : bool = Fable.Core.RustInterop.emitRustExpr v200 v201 
    let v203 : (unit -> bool) = method235(v0)
    let v204 : (unit -> std_string_String) = method236()
    let v205 : string = "class=\"peer sr-only [&:checked_+_span_svg[data-checked-icon]]:block [&:checked_+_span_svg[data-unchecked-icon]]:hidden\""
    let v206 : string = "type=\"checkbox\""
    let v207 : string = "id=move || v204()"
    let v208 : string = "on:change=move |event| v200(event)"
    let v209 : string = "prop:checked=move || v203()"
    let v210 : string = " " + v205 + v197 + ""
    let v211 : string = " " + v206 + v210 + ""
    let v212 : string = " " + v207 + v211 + ""
    let v213 : string = " " + v208 + v212 + ""
    let v214 : string = " " + v209 + v213 + ""
    let v215 : string = "input"
    let v216 : string = "<" + v215 + " " + v214 + " />"
    let v217 : string = "leptos::prelude::view! { " + v216 + " }"
    let v218 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v217 
    let v219 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v218 |> unbox
    let v220 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v221 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v219 v220 
    let v222 : string = "class=\"absolute inset-y-0 start-0 z-10 m-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-white dark:bg-gray-400 peer-checked:bg-white text-gray-200 transition-all peer-checked:start-6 peer-checked:text-gray-400\""
    let v223 : string = " " + v222 + v197 + ""
    let v224 : string = "data-unchecked-icon"
    let v225 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v226 : string = "class=\"h-4 w-4\""
    let v227 : string = "viewBox=\"0 0 20 20\""
    let v228 : string = "fill=\"currentColor\""
    let v229 : string = " " + v224 + v197 + ""
    let v230 : string = " " + v225 + v229 + ""
    let v231 : string = " " + v226 + v230 + ""
    let v232 : string = " " + v227 + v231 + ""
    let v233 : string = " " + v228 + v232 + ""
    let v234 : string = "fill-rule=\"evenodd\""
    let v235 : string = "d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\""
    let v236 : string = "clip-rule=\"evenodd\""
    let v237 : string = " " + v234 + v197 + ""
    let v238 : string = " " + v235 + v237 + ""
    let v239 : string = " " + v236 + v238 + ""
    let v240 : string = "vec![" + v197 + "]"
    let v241 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v240 
    let v242 : string = "leptos::prelude::Fragment::new($0)"
    let v243 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v241 v242 
    let v244 : string = "leptos::prelude::AnyView::from($0)"
    let v245 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v243 v244 
    let v246 : string = "path"
    let v247 : string = "<" + v246 + " " + v239 + ">move || { v245 }</" + v246 + ">"
    let v248 : string = "leptos::prelude::view! { " + v247 + " }"
    let v249 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v248 
    let v250 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v249 |> unbox
    let v251 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v252 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v250 v251 
    let v253 : string = "v252"
    let v254 : string = v253 + v197 
    let v255 : string = v254 + v197 
    let v256 : string = "vec![" + v255 + "]"
    let v257 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v256 
    let v258 : string = "leptos::prelude::Fragment::new($0)"
    let v259 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v257 v258 
    let v260 : string = "leptos::prelude::AnyView::from($0)"
    let v261 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v259 v260 
    let v262 : string = "svg"
    let v263 : string = "<" + v262 + " " + v233 + ">move || { v261 }</" + v262 + ">"
    let v264 : string = "leptos::prelude::view! { " + v263 + " }"
    let v265 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v264 
    let v266 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v265 |> unbox
    let v267 : string = "data-checked-icon"
    let v268 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v269 : string = "class=\"hidden h-4 w-4\""
    let v270 : string = "viewBox=\"0 0 20 20\""
    let v271 : string = "fill=\"currentColor\""
    let v272 : string = " " + v267 + v197 + ""
    let v273 : string = " " + v268 + v272 + ""
    let v274 : string = " " + v269 + v273 + ""
    let v275 : string = " " + v270 + v274 + ""
    let v276 : string = " " + v271 + v275 + ""
    let v277 : string = "fill-rule=\"evenodd\""
    let v278 : string = "d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\""
    let v279 : string = "clip-rule=\"evenodd\""
    let v280 : string = " " + v277 + v197 + ""
    let v281 : string = " " + v278 + v280 + ""
    let v282 : string = " " + v279 + v281 + ""
    let v283 : string = "vec![" + v197 + "]"
    let v284 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v283 
    let v285 : string = "leptos::prelude::Fragment::new($0)"
    let v286 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v284 v285 
    let v287 : string = "leptos::prelude::AnyView::from($0)"
    let v288 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v286 v287 
    let v289 : string = "<" + v246 + " " + v282 + ">move || { v288 }</" + v246 + ">"
    let v290 : string = "leptos::prelude::view! { " + v289 + " }"
    let v291 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v290 
    let v292 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v291 |> unbox
    let v293 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v294 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v292 v293 
    let v295 : string = "v294"
    let v296 : string = v295 + v197 
    let v297 : string = v296 + v197 
    let v298 : string = "vec![" + v297 + "]"
    let v299 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v298 
    let v300 : string = "leptos::prelude::Fragment::new($0)"
    let v301 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v299 v300 
    let v302 : string = "leptos::prelude::AnyView::from($0)"
    let v303 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v301 v302 
    let v304 : string = "<" + v262 + " " + v276 + ">move || { v303 }</" + v262 + ">"
    let v305 : string = "leptos::prelude::view! { " + v304 + " }"
    let v306 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v305 
    let v307 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v306 |> unbox
    let v308 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v309 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v307 v308 
    let v310 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v311 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v266 v310 
    let v312 : string = "v309"
    let v313 : string = v312 + v197 
    let v314 : string = v313 + v197 
    let v315 : string = "v311"
    let v316 : string = ", "
    let v317 : string = v315 + v316 
    let v318 : string = v317 + v314 
    let v319 : string = "vec![" + v318 + "]"
    let v320 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v319 
    let v321 : string = "leptos::prelude::Fragment::new($0)"
    let v322 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v320 v321 
    let v323 : string = "leptos::prelude::AnyView::from($0)"
    let v324 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v322 v323 
    let v325 : string = "span"
    let v326 : string = "<" + v325 + " " + v223 + ">move || { v324 }</" + v325 + ">"
    let v327 : string = "leptos::prelude::view! { " + v326 + " }"
    let v328 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v327 
    let v329 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v328 |> unbox
    let v330 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v331 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v329 v330 
    let v332 : string = "class=\"absolute inset-0 rounded-full bg-gray-200 dark:bg-gray-200 transition peer-checked:bg-gray-300\""
    let v333 : string = " " + v332 + v197 + ""
    let v334 : string = "vec![" + v197 + "]"
    let v335 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v334 
    let v336 : string = "leptos::prelude::Fragment::new($0)"
    let v337 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v335 v336 
    let v338 : string = "leptos::prelude::AnyView::from($0)"
    let v339 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v337 v338 
    let v340 : string = "<" + v325 + " " + v333 + ">move || { v339 }</" + v325 + ">"
    let v341 : string = "leptos::prelude::view! { " + v340 + " }"
    let v342 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v341 
    let v343 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v342 |> unbox
    let v344 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v345 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v343 v344 
    let v346 : string = "v345"
    let v347 : string = v346 + v197 
    let v348 : string = v347 + v197 
    let v349 : string = "v331"
    let v350 : string = v349 + v316 
    let v351 : string = v350 + v348 
    let v352 : string = "v221"
    let v353 : string = v352 + v316 
    let v354 : string = v353 + v351 
    let v355 : string = "vec![" + v354 + "]"
    let v356 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v355 
    let v357 : string = "leptos::prelude::Fragment::new($0)"
    let v358 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v356 v357 
    let v359 : string = "leptos::prelude::AnyView::from($0)"
    let v360 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v358 v359 
    let v361 : string = "label"
    let v362 : string = "<" + v361 + " " + v199 + ">move || { v360 }</" + v361 + ">"
    let v363 : string = "leptos::prelude::view! { " + v362 + " }"
    let v364 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v363 
    let v365 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Label>> = v364 |> unbox
    let v366 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v367 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v365 v366 
    let v368 : string = "v367"
    let v369 : string = v368 + v197 
    let v370 : string = v369 + v197 
    let v371 : string = "vec![" + v370 + "]"
    let v372 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v371 
    let v373 : string = "leptos::prelude::Fragment::new($0)"
    let v374 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v372 v373 
    v374
and method234 (v0 : Heap2) : (unit -> leptos_dom_Fragment) =
    closure238(v0)
and closure242 () () : string =
    let v0 : string = "items-center p-0"
    v0
and closure226 (v0 : Heap2) () : leptos_dom_Fragment =
    let v1 : string = "class=\"flex flex-1 flex-col p-[11px] gap-[11px]\""
    let v2 : string = ""
    let v3 : string = " " + v1 + v2 + ""
    let v4 : (unit -> leptos_dom_Fragment) = method229()
    let v5 : (unit -> leptos_dom_Fragment) = method230(v0)
    let v6 : string = "$0"
    let v7 : (unit -> string) = closure233()
    let v8 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v7 v6 
    let v9 : string = "$0"
    let v10 : (unit -> string) = closure234()
    let v11 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v10 v9 
    let v12 : string = "$0"
    let v13 : (unit -> string) = closure235()
    let v14 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v13 v12 
    let v15 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v14(()) + \" \" + &v11(()) + \" \" + &v8(())"
    let v16 : string = " " + v15 + v2 + ""
    let v17 : string = "$0"
    let v18 : (unit -> string) = closure236()
    let v19 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v18 v17 
    let v20 : string = "class=\"[font-size:12px] text-gray-400\""
    let v21 : string = " " + v20 + v2 + ""
    let v22 : leptos_dom_Fragment = v4 ()
    let v23 : string = "leptos::prelude::AnyView::from($0)"
    let v24 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v22 v23 
    let v25 : string = "dt"
    let v26 : string = "<" + v25 + " " + v21 + ">move || { v24 }</" + v25 + ">"
    let v27 : string = "leptos::prelude::view! { " + v26 + " }"
    let v28 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v28 |> unbox
    let v30 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v31 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v29 v30 
    let v32 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v19(())"
    let v33 : string = " " + v32 + v2 + ""
    let v34 : leptos_dom_Fragment = v5 ()
    let v35 : string = "leptos::prelude::AnyView::from($0)"
    let v36 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v34 v35 
    let v37 : string = "dd"
    let v38 : string = "<" + v37 + " " + v33 + ">move || { v36 }</" + v37 + ">"
    let v39 : string = "leptos::prelude::view! { " + v38 + " }"
    let v40 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v39 
    let v41 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v40 |> unbox
    let v42 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v43 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v41 v42 
    let v44 : string = "v43"
    let v45 : string = v44 + v2 
    let v46 : string = v45 + v2 
    let v47 : string = "v31"
    let v48 : string = ", "
    let v49 : string = v47 + v48 
    let v50 : string = v49 + v46 
    let v51 : string = "vec![" + v50 + "]"
    let v52 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v51 
    let v53 : string = "leptos::prelude::Fragment::new($0)"
    let v54 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v52 v53 
    let v55 : string = "leptos::prelude::AnyView::from($0)"
    let v56 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v54 v55 
    let v57 : string = "dl"
    let v58 : string = "<" + v57 + " " + v16 + ">move || { v56 }</" + v57 + ">"
    let v59 : string = "leptos::prelude::view! { " + v58 + " }"
    let v60 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v59 
    let v61 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v60 |> unbox
    let v62 : (unit -> leptos_dom_Fragment) = method233()
    let v63 : (unit -> leptos_dom_Fragment) = method234(v0)
    let v64 : string = "$0"
    let v65 : (unit -> string) = closure242()
    let v66 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v65 v64 
    let v67 : string = "$0"
    let v68 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v10 v67 
    let v69 : string = "$0"
    let v70 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v13 v69 
    let v71 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v70(()) + \" \" + &v68(()) + \" \" + &v66(())"
    let v72 : string = " " + v71 + v2 + ""
    let v73 : string = "$0"
    let v74 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v18 v73 
    let v75 : string = "class=\"[font-size:12px] text-gray-400\""
    let v76 : string = " " + v75 + v2 + ""
    let v77 : leptos_dom_Fragment = v62 ()
    let v78 : string = "leptos::prelude::AnyView::from($0)"
    let v79 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v78 
    let v80 : string = "<" + v25 + " " + v76 + ">move || { v79 }</" + v25 + ">"
    let v81 : string = "leptos::prelude::view! { " + v80 + " }"
    let v82 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v81 
    let v83 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v82 |> unbox
    let v84 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v85 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v83 v84 
    let v86 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v74(())"
    let v87 : string = " " + v86 + v2 + ""
    let v88 : leptos_dom_Fragment = v63 ()
    let v89 : string = "leptos::prelude::AnyView::from($0)"
    let v90 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v88 v89 
    let v91 : string = "<" + v37 + " " + v87 + ">move || { v90 }</" + v37 + ">"
    let v92 : string = "leptos::prelude::view! { " + v91 + " }"
    let v93 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v92 
    let v94 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v93 |> unbox
    let v95 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v96 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v94 v95 
    let v97 : string = "v96"
    let v98 : string = v97 + v2 
    let v99 : string = v98 + v2 
    let v100 : string = "v85"
    let v101 : string = v100 + v48 
    let v102 : string = v101 + v99 
    let v103 : string = "vec![" + v102 + "]"
    let v104 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v103 
    let v105 : string = "leptos::prelude::Fragment::new($0)"
    let v106 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v104 v105 
    let v107 : string = "leptos::prelude::AnyView::from($0)"
    let v108 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v106 v107 
    let v109 : string = "<" + v57 + " " + v72 + ">move || { v108 }</" + v57 + ">"
    let v110 : string = "leptos::prelude::view! { " + v109 + " }"
    let v111 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v110 
    let v112 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v111 |> unbox
    let v113 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v114 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v112 v113 
    let v115 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v116 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v115 
    let v117 : string = "v114"
    let v118 : string = v117 + v2 
    let v119 : string = v118 + v2 
    let v120 : string = "v116"
    let v121 : string = v120 + v48 
    let v122 : string = v121 + v119 
    let v123 : string = "vec![" + v122 + "]"
    let v124 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v123 
    let v125 : string = "leptos::prelude::Fragment::new($0)"
    let v126 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v124 v125 
    let v127 : string = "leptos::prelude::AnyView::from($0)"
    let v128 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v126 v127 
    let v129 : string = "div"
    let v130 : string = "<" + v129 + " " + v3 + ">move || { v128 }</" + v129 + ">"
    let v131 : string = "leptos::prelude::view! { " + v130 + " }"
    let v132 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v131 
    let v133 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v132 |> unbox
    let v134 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v135 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v133 v134 
    let v136 : string = "v135"
    let v137 : string = v136 + v2 
    let v138 : string = v137 + v2 
    let v139 : string = "vec![" + v138 + "]"
    let v140 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v139 
    let v141 : string = "leptos::prelude::Fragment::new($0)"
    let v142 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v140 v141 
    v142
and closure243 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure244 () () : Ref<Lifetime<StaticLifetime, Str>> =
    let v0 : string = ""
    let v1 : string = "r#\"" + v0 + "\"#"
    let v2 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v1 
    v2
and closure245 () () : string =
    let v0 : string = "Debug"
    v0
and method237 () : (unit -> string) =
    closure245()
and closure247 () () : leptos_dom_Fragment =
    let v0 : string = "Global State"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method238 () : (unit -> leptos_dom_Fragment) =
    closure247()
and closure250 () (v0 : std_string_String) : US70 =
    US70_0(v0)
and method240 () : (std_string_String -> US70) =
    closure250()
and closure251 () (v0 : std_string_String) : US70 =
    US70_1(v0)
and method241 () : (std_string_String -> US70) =
    closure251()
and closure249 (v0 : Heap2) () : string =
    let v1 : string = "settings_view.global_state_log_render () / global_state_json memo"
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "$0.clone()"
    let v5 : Heap2 = Fable.Core.RustInterop.emitRustExpr v0 v4 
    let v6 : string = "serde_json::to_string_pretty(&v5).map_err(|x| x.to_string())"
    let v7 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : (std_string_String -> US70) = method240()
    let v9 : (std_string_String -> US70) = method241()
    let v11 : US70 = match v7 with Ok x -> v8 x | Error x -> v9 x
    match v11 with
    | US70_1(v17) -> (* Error *)
        let v18 : string = "Error: " + string v17 + ""
        v18
    | US70_0(v14) -> (* Ok *)
        let v15 : string = "fable_library_rust::String_::fromString($0)"
        let v16 : string = Fable.Core.RustInterop.emitRustExpr v14 v15 
        v16
and closure252 () () : string =
    let v0 : string = ""
    v0
and closure248 () () : leptos_dom_Fragment =
    let v0 : string = "settings_view.global_state_log_render ()"
    let v1 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v2 : bool = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
    let v4 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v3 
    let v5 : string = "$0.unwrap()"
    let v6 : Heap2 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v8 : (unit -> string) = closure249(v6)
    let v9 : leptos_prelude_ArcMemo<string> = Fable.Core.RustInterop.emitRustExpr v8 v7 
    let v10 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v11 : string = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "$0"
    let v13 : (unit -> string) = closure252()
    let v14 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v13 v12 
    let v15 : string = "class=move || \"[padding:1px] [font-size:12px] [line-height:12px] [text-wrap:pretty] \".to_owned() + &v14(())"
    let v16 : string = ""
    let v17 : string = " " + v15 + v16 + ""
    (* run_target_args'
    let v22 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v23 
    let _run_target_args'_v22 = v24 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v25 : string = "&*$0"
    let v26 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v25 
    let _run_target_args'_v22 = v26 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v27 : string = "&*$0"
    let v28 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v27 
    let _run_target_args'_v22 = v28 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v30 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v22 = v30 
    #endif
#if FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v22 = v34 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v38 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v22 = v38 
    #endif
#else
    let v42 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v22 = v42 
    #endif
    let v45 : Ref<Str> = _run_target_args'_v22 
    (* run_target_args'
    let v55 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v56 : string = "String::from($0)"
    let v57 : std_string_String = Fable.Core.RustInterop.emitRustExpr v45 v56 
    let _run_target_args'_v55 = v57 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v58 : string = "String::from($0)"
    let v59 : std_string_String = Fable.Core.RustInterop.emitRustExpr v45 v58 
    let _run_target_args'_v55 = v59 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v60 : string = "String::from($0)"
    let v61 : std_string_String = Fable.Core.RustInterop.emitRustExpr v45 v60 
    let _run_target_args'_v55 = v61 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v63 : std_string_String = v45 |> unbox<std_string_String>
    let _run_target_args'_v55 = v63 
    #endif
#if FABLE_COMPILER_PYTHON
    let v67 : std_string_String = v45 |> unbox<std_string_String>
    let _run_target_args'_v55 = v67 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v71 : std_string_String = v45 |> unbox<std_string_String>
    let _run_target_args'_v55 = v71 
    #endif
#else
    let v75 : std_string_String = v45 |> unbox<std_string_String>
    let _run_target_args'_v55 = v75 
    #endif
    let v78 : std_string_String = _run_target_args'_v55 
    let v84 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v85 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v78 v84 
    let v86 : string = "v85"
    let v87 : string = v86 + v16 
    let v88 : string = v87 + v16 
    let v89 : string = "vec![" + v88 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::Fragment::new($0)"
    let v92 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v90 v91 
    let v93 : string = "leptos::prelude::AnyView::from($0)"
    let v94 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v92 v93 
    let v95 : string = "pre"
    let v96 : string = "<" + v95 + " " + v17 + ">move || { v94 }</" + v95 + ">"
    let v97 : string = "leptos::prelude::view! { " + v96 + " }"
    let v98 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v97 
    let v99 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v98 |> unbox
    let v100 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v101 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v99 v100 
    let v102 : string = "v101"
    let v103 : string = v102 + v16 
    let v104 : string = v103 + v16 
    let v105 : string = "vec![" + v104 + "]"
    let v106 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v105 
    let v107 : string = "leptos::prelude::Fragment::new($0)"
    let v108 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v106 v107 
    v108
and method239 () : (unit -> leptos_dom_Fragment) =
    closure248()
and closure253 () () : string =
    let v0 : string = ""
    v0
and closure246 () () : leptos_dom_Fragment =
    let v0 : (unit -> leptos_dom_Fragment) = method238()
    let v1 : (unit -> leptos_dom_Fragment) = method239()
    let v2 : string = "$0"
    let v3 : (unit -> string) = closure253()
    let v4 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3 v2 
    let v5 : string = "$0"
    let v6 : (unit -> string) = closure234()
    let v7 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v6 v5 
    let v8 : string = "$0"
    let v9 : (unit -> string) = closure235()
    let v10 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v9 v8 
    let v11 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v10(()) + \" \" + &v7(()) + \" \" + &v4(())"
    let v12 : string = ""
    let v13 : string = " " + v11 + v12 + ""
    let v14 : string = "$0"
    let v15 : (unit -> string) = closure236()
    let v16 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v15 v14 
    let v17 : string = "class=\"[font-size:12px] text-gray-400\""
    let v18 : string = " " + v17 + v12 + ""
    let v19 : leptos_dom_Fragment = v0 ()
    let v20 : string = "leptos::prelude::AnyView::from($0)"
    let v21 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v19 v20 
    let v22 : string = "dt"
    let v23 : string = "<" + v22 + " " + v18 + ">move || { v21 }</" + v22 + ">"
    let v24 : string = "leptos::prelude::view! { " + v23 + " }"
    let v25 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v24 
    let v26 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v25 |> unbox
    let v27 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v28 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v26 v27 
    let v29 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v16(())"
    let v30 : string = " " + v29 + v12 + ""
    let v31 : leptos_dom_Fragment = v1 ()
    let v32 : string = "leptos::prelude::AnyView::from($0)"
    let v33 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v31 v32 
    let v34 : string = "dd"
    let v35 : string = "<" + v34 + " " + v30 + ">move || { v33 }</" + v34 + ">"
    let v36 : string = "leptos::prelude::view! { " + v35 + " }"
    let v37 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v36 
    let v38 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v37 |> unbox
    let v39 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v40 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v38 v39 
    let v41 : string = "v40"
    let v42 : string = v41 + v12 
    let v43 : string = v42 + v12 
    let v44 : string = "v28"
    let v45 : string = ", "
    let v46 : string = v44 + v45 
    let v47 : string = v46 + v43 
    let v48 : string = "vec![" + v47 + "]"
    let v49 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v48 
    let v50 : string = "leptos::prelude::Fragment::new($0)"
    let v51 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v49 v50 
    let v52 : string = "leptos::prelude::AnyView::from($0)"
    let v53 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v51 v52 
    let v54 : string = "dl"
    let v55 : string = "<" + v54 + " " + v13 + ">move || { v53 }</" + v54 + ">"
    let v56 : string = "leptos::prelude::view! { " + v55 + " }"
    let v57 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v56 
    let v58 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v57 |> unbox
    let v59 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v60 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v58 v59 
    let v61 : string = "v60"
    let v62 : string = v61 + v12 
    let v63 : string = v62 + v12 
    let v64 : string = "vec![" + v63 + "]"
    let v65 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v64 
    let v66 : string = "leptos::prelude::Fragment::new($0)"
    let v67 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v65 v66 
    v67
and closure254 (v0 : leptos_prelude_WriteSignal<bool>) () : unit =
    let v1 : string = $"true; leptos::prelude::WriteSignal::update(&$0, |x: &mut /*"
    let v2 : bool = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v4 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
    let v7 : string = "*/ | { *x = $0(x.clone()) }); //"
    let v8 : (bool -> bool) = closure230()
    let v9 : bool = Fable.Core.RustInterop.emitRustExpr v8 v7 
    ()
and closure255 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and method242 (v0 : Ref<Lifetime<StaticLifetime, Str>>) : Ref<Lifetime<StaticLifetime, Str>> =
    v0
and closure256 (v0 : leptos_prelude_ReadSignal<bool>) () : std_string_String =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : bool = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v9 : Ref<Lifetime<StaticLifetime, Str>> =
        if v2 then
            let v3 : string = ""
            let v4 : string = "r#\"" + v3 + "\"#"
            let v5 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v4 
            v5
        else
            let v6 : string = "bg-gray-300 hover:bg-gray-200"
            let v7 : string = "r#\"" + v6 + "\"#"
            let v8 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v7 
            v8
    let v10 : Ref<Lifetime<StaticLifetime, Str>> = method242(v9)
    let v11 : string = "v10.to_owned() + \" hover:bg-gray-200\""
    let v12 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v11 
    v12
and closure257 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure258 (v0 : leptos_prelude_AnyView_) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = "[margin-right:40px]"
    let v2 : string = "r#\"" + v1 + "\"#"
    let v3 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v2 
    v3
and closure259 () () : string =
    let v0 : string = "Transactions"
    v0
and method243 (v0 : leptos_prelude_AnyView_) : (unit -> string) =
    closure259()
and closure261 () () : leptos_dom_Fragment =
    let v0 : string = "Settings"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and closure262 () () : leptos_dom_Fragment =
    let v0 : string = "Table View"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method244 () : (unit -> leptos_dom_Fragment) =
    closure262()
and closure265 () (v0 : Heap0) : Heap0 =
    let v1 : Vec<(bool * std_string_String)> = v0.l0
    let v2 : std_string_String option = v0.l1
    let v3 : int32 = v0.l2
    let v4 : int32 = v0.l3
    let v5 : US1 = v0.l4
    let v6 : bool =
        match v5 with
        | US1_1 -> (* Table *)
            true
        | _ ->
            false
    let v9 : US1 =
        if v6 then
            US1_0
        else
            US1_1
    {l0 = v1; l1 = v2; l2 = v3; l3 = v4; l4 = v9} : Heap0
and closure264 (v0 : Heap2) (v1 : leptos_ev_Event) : unit =
    let v2 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v3 : string = "Box::pin($0)"
    let v4 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v6 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : leptos_prelude_ArcRwSignal<Heap0> = v6.l3
    let v8 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
    let v9 : bool = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v11 : TypeEmit<Heap0> = null |> unbox<TypeEmit<Heap0>>
    let v14 : string = "*/ | { *x = $0(x.clone()) }); //"
    let v15 : (Heap0 -> Heap0) = closure265()
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr v15 v14 
    ()
and closure266 (v0 : Heap2) () : bool =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<Heap0> = v5.l3
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : Heap0 = Fable.Core.RustInterop.emitRustExpr v6 v7 
    let v9 : US1 = v8.l4
    match v9 with
    | US1_1 -> (* Table *)
        true
    | _ ->
        false
and method246 (v0 : Heap2) : (unit -> bool) =
    closure266(v0)
and closure267 () () : std_string_String =
    let v0 : string = "table-view"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    v61
and method247 () : (unit -> std_string_String) =
    closure267()
and closure263 (v0 : Heap2) () : leptos_dom_Fragment =
    let v1 : unit = ()
    let v2 : string = $"true; let _func0_from_v1 = Func0::from(move || {{ //"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr () v2 
    let v4 : string = "table-view"
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    let v71 : string = $"true; $0 /*"
    let v72 : bool = Fable.Core.RustInterop.emitRustExpr v65 v71 
    let v73 : string = $"*/ }}); //"
    let v74 : bool = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = $"_func0_from_v1"
    let v76 : Func0<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v75 
    let v77 : string = "block"
    let v78 : string = "relative"
    let v79 : string = "h-8"
    let v80 : string = "w-14"
    let v81 : string = "cursor-pointer"
    let v82 : string = "[-webkit-tap-highlight-color:_transparent]"
    let v83 : string list = []
    let v85 : string list = v82 :: v83 
    let v89 : string list = v81 :: v85 
    let v93 : string list = v80 :: v89 
    let v97 : string list = v79 :: v93 
    let v101 : string list = v78 :: v97 
    let v105 : string list = v77 :: v101 
    let v111 : unit = ()
    let _let'_v111 =
        seq {
            yield! v105 
            (* indent
            ()
        indent *)
        }
        (* indent
        ()
    indent *)
    let v114 : string seq = _let'_v111 
    let v121 : (string -> (string seq -> string)) = String.concat
    let v122 : string = " "
    let v123 : (string seq -> string) = v121 v122
    let v124 : string = v123 v114
    (* run_target_args'
    let v131 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v132 : string = "&*$0"
    let v133 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v124 v132 
    let _run_target_args'_v131 = v133 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v134 : string = "&*$0"
    let v135 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v124 v134 
    let _run_target_args'_v131 = v135 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v136 : string = "&*$0"
    let v137 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v124 v136 
    let _run_target_args'_v131 = v137 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v139 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v139 
    #endif
#if FABLE_COMPILER_PYTHON
    let v143 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v143 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v147 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v147 
    #endif
#else
    let v151 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v151 
    #endif
    let v154 : Ref<Str> = _run_target_args'_v131 
    (* run_target_args'
    let v164 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v165 : string = "String::from($0)"
    let v166 : std_string_String = Fable.Core.RustInterop.emitRustExpr v154 v165 
    let _run_target_args'_v164 = v166 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v167 : string = "String::from($0)"
    let v168 : std_string_String = Fable.Core.RustInterop.emitRustExpr v154 v167 
    let _run_target_args'_v164 = v168 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v169 : string = "String::from($0)"
    let v170 : std_string_String = Fable.Core.RustInterop.emitRustExpr v154 v169 
    let _run_target_args'_v164 = v170 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v172 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v172 
    #endif
#if FABLE_COMPILER_PYTHON
    let v176 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v176 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v180 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v180 
    #endif
#else
    let v184 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v184 
    #endif
    let v187 : std_string_String = _run_target_args'_v164 
    let v193 : string = "$0"
    let v194 : std_string_String = Fable.Core.RustInterop.emitRustExpr v187 v193 
    let v195 : string = "for=move || v76()"
    let v196 : string = "class=v194"
    let v197 : string = ""
    let v198 : string = " " + v195 + v197 + ""
    let v199 : string = " " + v196 + v198 + ""
    let v200 : (leptos_ev_Event -> unit) = closure264(v0)
    let v201 : string = "true; let v200 = $0; //"
    let v202 : bool = Fable.Core.RustInterop.emitRustExpr v200 v201 
    let v203 : (unit -> bool) = method246(v0)
    let v204 : (unit -> std_string_String) = method247()
    let v205 : string = "class=\"peer sr-only [&:checked_+_span_svg[data-checked-icon]]:block [&:checked_+_span_svg[data-unchecked-icon]]:hidden\""
    let v206 : string = "type=\"checkbox\""
    let v207 : string = "id=move || v204()"
    let v208 : string = "on:change=move |event| v200(event)"
    let v209 : string = "prop:checked=move || v203()"
    let v210 : string = " " + v205 + v197 + ""
    let v211 : string = " " + v206 + v210 + ""
    let v212 : string = " " + v207 + v211 + ""
    let v213 : string = " " + v208 + v212 + ""
    let v214 : string = " " + v209 + v213 + ""
    let v215 : string = "input"
    let v216 : string = "<" + v215 + " " + v214 + " />"
    let v217 : string = "leptos::prelude::view! { " + v216 + " }"
    let v218 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v217 
    let v219 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v218 |> unbox
    let v220 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v221 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v219 v220 
    let v222 : string = "class=\"absolute inset-y-0 start-0 z-10 m-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-white dark:bg-gray-400 peer-checked:bg-white text-gray-200 transition-all peer-checked:start-6 peer-checked:text-gray-400\""
    let v223 : string = " " + v222 + v197 + ""
    let v224 : string = "data-unchecked-icon"
    let v225 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v226 : string = "class=\"h-4 w-4\""
    let v227 : string = "viewBox=\"0 0 20 20\""
    let v228 : string = "fill=\"currentColor\""
    let v229 : string = " " + v224 + v197 + ""
    let v230 : string = " " + v225 + v229 + ""
    let v231 : string = " " + v226 + v230 + ""
    let v232 : string = " " + v227 + v231 + ""
    let v233 : string = " " + v228 + v232 + ""
    let v234 : string = "fill-rule=\"evenodd\""
    let v235 : string = "d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\""
    let v236 : string = "clip-rule=\"evenodd\""
    let v237 : string = " " + v234 + v197 + ""
    let v238 : string = " " + v235 + v237 + ""
    let v239 : string = " " + v236 + v238 + ""
    let v240 : string = "vec![" + v197 + "]"
    let v241 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v240 
    let v242 : string = "leptos::prelude::Fragment::new($0)"
    let v243 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v241 v242 
    let v244 : string = "leptos::prelude::AnyView::from($0)"
    let v245 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v243 v244 
    let v246 : string = "path"
    let v247 : string = "<" + v246 + " " + v239 + ">move || { v245 }</" + v246 + ">"
    let v248 : string = "leptos::prelude::view! { " + v247 + " }"
    let v249 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v248 
    let v250 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v249 |> unbox
    let v251 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v252 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v250 v251 
    let v253 : string = "v252"
    let v254 : string = v253 + v197 
    let v255 : string = v254 + v197 
    let v256 : string = "vec![" + v255 + "]"
    let v257 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v256 
    let v258 : string = "leptos::prelude::Fragment::new($0)"
    let v259 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v257 v258 
    let v260 : string = "leptos::prelude::AnyView::from($0)"
    let v261 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v259 v260 
    let v262 : string = "svg"
    let v263 : string = "<" + v262 + " " + v233 + ">move || { v261 }</" + v262 + ">"
    let v264 : string = "leptos::prelude::view! { " + v263 + " }"
    let v265 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v264 
    let v266 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v265 |> unbox
    let v267 : string = "data-checked-icon"
    let v268 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v269 : string = "class=\"hidden h-4 w-4\""
    let v270 : string = "viewBox=\"0 0 20 20\""
    let v271 : string = "fill=\"currentColor\""
    let v272 : string = " " + v267 + v197 + ""
    let v273 : string = " " + v268 + v272 + ""
    let v274 : string = " " + v269 + v273 + ""
    let v275 : string = " " + v270 + v274 + ""
    let v276 : string = " " + v271 + v275 + ""
    let v277 : string = "fill-rule=\"evenodd\""
    let v278 : string = "d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\""
    let v279 : string = "clip-rule=\"evenodd\""
    let v280 : string = " " + v277 + v197 + ""
    let v281 : string = " " + v278 + v280 + ""
    let v282 : string = " " + v279 + v281 + ""
    let v283 : string = "vec![" + v197 + "]"
    let v284 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v283 
    let v285 : string = "leptos::prelude::Fragment::new($0)"
    let v286 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v284 v285 
    let v287 : string = "leptos::prelude::AnyView::from($0)"
    let v288 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v286 v287 
    let v289 : string = "<" + v246 + " " + v282 + ">move || { v288 }</" + v246 + ">"
    let v290 : string = "leptos::prelude::view! { " + v289 + " }"
    let v291 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v290 
    let v292 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v291 |> unbox
    let v293 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v294 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v292 v293 
    let v295 : string = "v294"
    let v296 : string = v295 + v197 
    let v297 : string = v296 + v197 
    let v298 : string = "vec![" + v297 + "]"
    let v299 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v298 
    let v300 : string = "leptos::prelude::Fragment::new($0)"
    let v301 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v299 v300 
    let v302 : string = "leptos::prelude::AnyView::from($0)"
    let v303 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v301 v302 
    let v304 : string = "<" + v262 + " " + v276 + ">move || { v303 }</" + v262 + ">"
    let v305 : string = "leptos::prelude::view! { " + v304 + " }"
    let v306 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v305 
    let v307 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v306 |> unbox
    let v308 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v309 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v307 v308 
    let v310 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v311 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v266 v310 
    let v312 : string = "v309"
    let v313 : string = v312 + v197 
    let v314 : string = v313 + v197 
    let v315 : string = "v311"
    let v316 : string = ", "
    let v317 : string = v315 + v316 
    let v318 : string = v317 + v314 
    let v319 : string = "vec![" + v318 + "]"
    let v320 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v319 
    let v321 : string = "leptos::prelude::Fragment::new($0)"
    let v322 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v320 v321 
    let v323 : string = "leptos::prelude::AnyView::from($0)"
    let v324 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v322 v323 
    let v325 : string = "span"
    let v326 : string = "<" + v325 + " " + v223 + ">move || { v324 }</" + v325 + ">"
    let v327 : string = "leptos::prelude::view! { " + v326 + " }"
    let v328 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v327 
    let v329 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v328 |> unbox
    let v330 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v331 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v329 v330 
    let v332 : string = "class=\"absolute inset-0 rounded-full bg-gray-200 dark:bg-gray-200 transition peer-checked:bg-gray-300\""
    let v333 : string = " " + v332 + v197 + ""
    let v334 : string = "vec![" + v197 + "]"
    let v335 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v334 
    let v336 : string = "leptos::prelude::Fragment::new($0)"
    let v337 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v335 v336 
    let v338 : string = "leptos::prelude::AnyView::from($0)"
    let v339 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v337 v338 
    let v340 : string = "<" + v325 + " " + v333 + ">move || { v339 }</" + v325 + ">"
    let v341 : string = "leptos::prelude::view! { " + v340 + " }"
    let v342 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v341 
    let v343 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v342 |> unbox
    let v344 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v345 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v343 v344 
    let v346 : string = "v345"
    let v347 : string = v346 + v197 
    let v348 : string = v347 + v197 
    let v349 : string = "v331"
    let v350 : string = v349 + v316 
    let v351 : string = v350 + v348 
    let v352 : string = "v221"
    let v353 : string = v352 + v316 
    let v354 : string = v353 + v351 
    let v355 : string = "vec![" + v354 + "]"
    let v356 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v355 
    let v357 : string = "leptos::prelude::Fragment::new($0)"
    let v358 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v356 v357 
    let v359 : string = "leptos::prelude::AnyView::from($0)"
    let v360 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v358 v359 
    let v361 : string = "label"
    let v362 : string = "<" + v361 + " " + v199 + ">move || { v360 }</" + v361 + ">"
    let v363 : string = "leptos::prelude::view! { " + v362 + " }"
    let v364 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v363 
    let v365 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Label>> = v364 |> unbox
    let v366 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v367 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v365 v366 
    let v368 : string = "v367"
    let v369 : string = v368 + v197 
    let v370 : string = v369 + v197 
    let v371 : string = "vec![" + v370 + "]"
    let v372 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v371 
    let v373 : string = "leptos::prelude::Fragment::new($0)"
    let v374 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v372 v373 
    v374
and method245 (v0 : Heap2) : (unit -> leptos_dom_Fragment) =
    closure263(v0)
and closure268 () () : string =
    let v0 : string = "items-center"
    v0
and closure269 (v0 : int64) () : leptos_dom_Fragment =
    let v1 : string = "Transaction " + string (v0 + 1L) + ""
    (* run_target_args'
    let v6 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v7 : string = "&*$0"
    let v8 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v7 
    let _run_target_args'_v6 = v8 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v9 : string = "&*$0"
    let v10 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v9 
    let _run_target_args'_v6 = v10 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v11 : string = "&*$0"
    let v12 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v11 
    let _run_target_args'_v6 = v12 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v14 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v14 
    #endif
#if FABLE_COMPILER_PYTHON
    let v18 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v18 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v22 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v22 
    #endif
#else
    let v26 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v26 
    #endif
    let v29 : Ref<Str> = _run_target_args'_v6 
    (* run_target_args'
    let v39 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v40 : string = "String::from($0)"
    let v41 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v40 
    let _run_target_args'_v39 = v41 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v42 
    let _run_target_args'_v39 = v43 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v44 
    let _run_target_args'_v39 = v45 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v47 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v47 
    #endif
#if FABLE_COMPILER_PYTHON
    let v51 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v51 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v55 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v55 
    #endif
#else
    let v59 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v59 
    #endif
    let v62 : std_string_String = _run_target_args'_v39 
    let v68 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v69 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v62 v68 
    let v70 : string = "v69"
    let v71 : string = ""
    let v72 : string = v70 + v71 
    let v73 : string = v72 + v71 
    let v74 : string = "vec![" + v73 + "]"
    let v75 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v74 
    let v76 : string = "leptos::prelude::Fragment::new($0)"
    let v77 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v75 v76 
    v77
and closure270 () () : leptos_dom_Fragment =
    let v0 : string = "Account"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method248 () : (unit -> leptos_dom_Fragment) =
    closure270()
and closure271 (v0 : string) () : leptos_dom_Fragment =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method249 (v0 : string) : (unit -> leptos_dom_Fragment) =
    closure271(v0)
and closure272 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure273 () () : string =
    let v0 : string = ""
    v0
and closure274 () () : leptos_dom_Fragment =
    let v0 : string = "Block Timestamp"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method250 () : (unit -> leptos_dom_Fragment) =
    closure274()
and closure275 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v5 v12 
    let v15 : (string -> int64) = int64
    let v16 : int64 = v15 v13
    let v19 : int64 = method204(v16)
    let v20 : int64 = v19 / 1000L
    let v21 : string = "chrono::DateTime::from_timestamp_micros($0)"
    let v22 : chrono_DateTime<chrono_Utc> option = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v25 : (chrono_DateTime<chrono_Utc> -> US68) = method205()
    let v26 : US68 option = v22 |> Option.map v25 
    let v40 : US68 = US68_1
    let v41 : US68 = v26 |> Option.defaultValue v40 
    let v60 : US31 =
        match v41 with
        | US68_1 -> (* None *)
            US31_1
        | US68_0(v45) -> (* Some *)
            let v46 : string = "$0.naive_utc()"
            let v47 : chrono_NaiveDateTime = Fable.Core.RustInterop.emitRustExpr v45 v46 
            let v48 : string = "chrono::offset::TimeZone::from_utc_datetime(&chrono::Local, &$0)"
            let v49 : chrono_DateTime<chrono_Local> = Fable.Core.RustInterop.emitRustExpr v47 v48 
            let v50 : string = "%Y-%m-%d %H:%M:%S"
            let v51 : string = "r#\"" + v50 + "\"#"
            let v52 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v51 
            let v53 : string = "$0.format($1).to_string()"
            let v54 : std_string_String = Fable.Core.RustInterop.emitRustExpr struct (v49, v52) v53 
            let v55 : string = "fable_library_rust::String_::fromString($0)"
            let v56 : string = Fable.Core.RustInterop.emitRustExpr v54 v55 
            US31_0(v56)
    let v66 : US69 =
        match v60 with
        | US31_1 -> (* None *)
            let v63 : string = "resultm.from_option / Option does not have a value."
            US69_1(v63)
        | US31_0(v61) -> (* Some *)
            US69_0(v61)
    let v71 : string =
        match v66 with
        | US69_1(v68) -> (* Error *)
            let v69 : string = "sm'.to_string result / Error: " + v68 + ""
            v69
        | US69_0(v67) -> (* Ok *)
            v67
    (* run_target_args'
    let v76 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v77 : string = "&*$0"
    let v78 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v71 v77 
    let _run_target_args'_v76 = v78 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v79 : string = "&*$0"
    let v80 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v71 v79 
    let _run_target_args'_v76 = v80 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v81 : string = "&*$0"
    let v82 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v71 v81 
    let _run_target_args'_v76 = v82 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v84 : Ref<Str> = v71 |> unbox<Ref<Str>>
    let _run_target_args'_v76 = v84 
    #endif
#if FABLE_COMPILER_PYTHON
    let v88 : Ref<Str> = v71 |> unbox<Ref<Str>>
    let _run_target_args'_v76 = v88 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v92 : Ref<Str> = v71 |> unbox<Ref<Str>>
    let _run_target_args'_v76 = v92 
    #endif
#else
    let v96 : Ref<Str> = v71 |> unbox<Ref<Str>>
    let _run_target_args'_v76 = v96 
    #endif
    let v99 : Ref<Str> = _run_target_args'_v76 
    (* run_target_args'
    let v109 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v110 : string = "String::from($0)"
    let v111 : std_string_String = Fable.Core.RustInterop.emitRustExpr v99 v110 
    let _run_target_args'_v109 = v111 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v112 : string = "String::from($0)"
    let v113 : std_string_String = Fable.Core.RustInterop.emitRustExpr v99 v112 
    let _run_target_args'_v109 = v113 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v114 : string = "String::from($0)"
    let v115 : std_string_String = Fable.Core.RustInterop.emitRustExpr v99 v114 
    let _run_target_args'_v109 = v115 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v117 : std_string_String = v99 |> unbox<std_string_String>
    let _run_target_args'_v109 = v117 
    #endif
#if FABLE_COMPILER_PYTHON
    let v121 : std_string_String = v99 |> unbox<std_string_String>
    let _run_target_args'_v109 = v121 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v125 : std_string_String = v99 |> unbox<std_string_String>
    let _run_target_args'_v109 = v125 
    #endif
#else
    let v129 : std_string_String = v99 |> unbox<std_string_String>
    let _run_target_args'_v109 = v129 
    #endif
    let v132 : std_string_String = _run_target_args'_v109 
    let v138 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v139 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v132 v138 
    let v140 : string = "v139"
    let v141 : string = ""
    let v142 : string = v140 + v141 
    let v143 : string = v142 + v141 
    let v144 : string = "vec![" + v143 + "]"
    let v145 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v144 
    let v146 : string = "leptos::prelude::Fragment::new($0)"
    let v147 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v145 v146 
    v147
and method251 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure275(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure276 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure277 () () : string =
    let v0 : string = ""
    v0
and closure278 () () : leptos_dom_Fragment =
    let v0 : string = "Predecessor"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method252 () : (unit -> leptos_dom_Fragment) =
    closure278()
and closure279 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v1 v12 
    (* run_target_args'
    let v18 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v19 
    let _run_target_args'_v18 = v20 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v21 
    let _run_target_args'_v18 = v22 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v23 
    let _run_target_args'_v18 = v24 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v26 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v26 
    #endif
#if FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v30 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v34 
    #endif
#else
    let v38 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v38 
    #endif
    let v41 : Ref<Str> = _run_target_args'_v18 
    (* run_target_args'
    let v51 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v52 
    let _run_target_args'_v51 = v53 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v54 : string = "String::from($0)"
    let v55 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v54 
    let _run_target_args'_v51 = v55 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v56 : string = "String::from($0)"
    let v57 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v56 
    let _run_target_args'_v51 = v57 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v59 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v59 
    #endif
#if FABLE_COMPILER_PYTHON
    let v63 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v63 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v67 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v67 
    #endif
#else
    let v71 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v71 
    #endif
    let v74 : std_string_String = _run_target_args'_v51 
    let v80 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v74 v80 
    let v82 : string = "v81"
    let v83 : string = ""
    let v84 : string = v82 + v83 
    let v85 : string = v84 + v83 
    let v86 : string = "vec![" + v85 + "]"
    let v87 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v86 
    let v88 : string = "leptos::prelude::Fragment::new($0)"
    let v89 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v87 v88 
    v89
and method253 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure279(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure280 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure281 () () : string =
    let v0 : string = ""
    v0
and closure282 () () : leptos_dom_Fragment =
    let v0 : string = "Receiver"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method254 () : (unit -> leptos_dom_Fragment) =
    closure282()
and closure283 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v2 v12 
    (* run_target_args'
    let v18 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v19 
    let _run_target_args'_v18 = v20 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v21 
    let _run_target_args'_v18 = v22 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v23 
    let _run_target_args'_v18 = v24 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v26 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v26 
    #endif
#if FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v30 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v34 
    #endif
#else
    let v38 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v38 
    #endif
    let v41 : Ref<Str> = _run_target_args'_v18 
    (* run_target_args'
    let v51 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v52 
    let _run_target_args'_v51 = v53 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v54 : string = "String::from($0)"
    let v55 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v54 
    let _run_target_args'_v51 = v55 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v56 : string = "String::from($0)"
    let v57 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v56 
    let _run_target_args'_v51 = v57 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v59 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v59 
    #endif
#if FABLE_COMPILER_PYTHON
    let v63 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v63 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v67 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v67 
    #endif
#else
    let v71 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v71 
    #endif
    let v74 : std_string_String = _run_target_args'_v51 
    let v80 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v74 v80 
    let v82 : string = "v81"
    let v83 : string = ""
    let v84 : string = v82 + v83 
    let v85 : string = v84 + v83 
    let v86 : string = "vec![" + v85 + "]"
    let v87 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v86 
    let v88 : string = "leptos::prelude::Fragment::new($0)"
    let v89 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v87 v88 
    v89
and method255 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure283(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure284 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure285 () () : string =
    let v0 : string = ""
    v0
and closure286 () () : leptos_dom_Fragment =
    let v0 : string = "Actions"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method256 () : (unit -> leptos_dom_Fragment) =
    closure286()
and closure288 (v0 : std_string_String) () : leptos_dom_Fragment =
    let v1 : string = "fable_library_rust::String_::fromString($0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : bool = "FUNCTION_CALL" = v2
    let v11 : string =
        if v3 then
            let v4 : string = "Function Call:"
            v4
        else
            let v5 : bool = "DEPLOY_CONTRACT" = v2
            if v5 then
                let v6 : string = "Contract Deploy:"
                v6
            else
                let v7 : bool = "TRANSFER" = v2
                if v7 then
                    let v8 : string = "Transfer:"
                    v8
                else
                    v2
    (* run_target_args'
    let v16 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v17 : string = "&*$0"
    let v18 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v17 
    let _run_target_args'_v16 = v18 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v19 
    let _run_target_args'_v16 = v20 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v21 
    let _run_target_args'_v16 = v22 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v24 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v16 = v24 
    #endif
#if FABLE_COMPILER_PYTHON
    let v28 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v16 = v28 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v32 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v16 = v32 
    #endif
#else
    let v36 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v16 = v36 
    #endif
    let v39 : Ref<Str> = _run_target_args'_v16 
    (* run_target_args'
    let v49 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v50 : string = "String::from($0)"
    let v51 : std_string_String = Fable.Core.RustInterop.emitRustExpr v39 v50 
    let _run_target_args'_v49 = v51 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v39 v52 
    let _run_target_args'_v49 = v53 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v54 : string = "String::from($0)"
    let v55 : std_string_String = Fable.Core.RustInterop.emitRustExpr v39 v54 
    let _run_target_args'_v49 = v55 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v57 : std_string_String = v39 |> unbox<std_string_String>
    let _run_target_args'_v49 = v57 
    #endif
#if FABLE_COMPILER_PYTHON
    let v61 : std_string_String = v39 |> unbox<std_string_String>
    let _run_target_args'_v49 = v61 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v65 : std_string_String = v39 |> unbox<std_string_String>
    let _run_target_args'_v49 = v65 
    #endif
#else
    let v69 : std_string_String = v39 |> unbox<std_string_String>
    let _run_target_args'_v49 = v69 
    #endif
    let v72 : std_string_String = _run_target_args'_v49 
    let v78 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v79 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v72 v78 
    let v80 : string = "v79"
    let v81 : string = ""
    let v82 : string = v80 + v81 
    let v83 : string = v82 + v81 
    let v84 : string = "vec![" + v83 + "]"
    let v85 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v84 
    let v86 : string = "leptos::prelude::Fragment::new($0)"
    let v87 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v85 v86 
    v87
and method258 (v0 : std_string_String) : (unit -> leptos_dom_Fragment) =
    closure288(v0)
and closure290 () () : leptos_dom_Fragment =
    let v0 : string = "Method"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method260 () : (unit -> leptos_dom_Fragment) =
    closure290()
and closure291 (v0 : std_string_String option) () : leptos_dom_Fragment =
    let v3 : (std_string_String -> US14) = method39()
    let v4 : US14 option = v0 |> Option.map v3 
    let v18 : US14 = US14_1
    let v19 : US14 = v4 |> Option.defaultValue v18 
    match v19 with
    | US14_1 -> (* None *)
        let v102 : string = "None"
        (* run_target_args'
        let v107 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v108 : string = "&*$0"
        let v109 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v102 v108 
        let _run_target_args'_v107 = v109 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v110 : string = "&*$0"
        let v111 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v102 v110 
        let _run_target_args'_v107 = v111 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v112 : string = "&*$0"
        let v113 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v102 v112 
        let _run_target_args'_v107 = v113 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v115 : Ref<Str> = v102 |> unbox<Ref<Str>>
        let _run_target_args'_v107 = v115 
        #endif
#if FABLE_COMPILER_PYTHON
        let v119 : Ref<Str> = v102 |> unbox<Ref<Str>>
        let _run_target_args'_v107 = v119 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v123 : Ref<Str> = v102 |> unbox<Ref<Str>>
        let _run_target_args'_v107 = v123 
        #endif
#else
        let v127 : Ref<Str> = v102 |> unbox<Ref<Str>>
        let _run_target_args'_v107 = v127 
        #endif
        let v130 : Ref<Str> = _run_target_args'_v107 
        (* run_target_args'
        let v140 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v141 : string = "String::from($0)"
        let v142 : std_string_String = Fable.Core.RustInterop.emitRustExpr v130 v141 
        let _run_target_args'_v140 = v142 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v143 : string = "String::from($0)"
        let v144 : std_string_String = Fable.Core.RustInterop.emitRustExpr v130 v143 
        let _run_target_args'_v140 = v144 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v145 : string = "String::from($0)"
        let v146 : std_string_String = Fable.Core.RustInterop.emitRustExpr v130 v145 
        let _run_target_args'_v140 = v146 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v148 : std_string_String = v130 |> unbox<std_string_String>
        let _run_target_args'_v140 = v148 
        #endif
#if FABLE_COMPILER_PYTHON
        let v152 : std_string_String = v130 |> unbox<std_string_String>
        let _run_target_args'_v140 = v152 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v156 : std_string_String = v130 |> unbox<std_string_String>
        let _run_target_args'_v140 = v156 
        #endif
#else
        let v160 : std_string_String = v130 |> unbox<std_string_String>
        let _run_target_args'_v140 = v160 
        #endif
        let v163 : std_string_String = _run_target_args'_v140 
        let v169 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
        let v170 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v163 v169 
        let v171 : string = "v170"
        let v172 : string = ""
        let v173 : string = v171 + v172 
        let v174 : string = v173 + v172 
        let v175 : string = "vec![" + v174 + "]"
        let v176 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v175 
        let v177 : string = "leptos::prelude::Fragment::new($0)"
        let v178 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v176 v177 
        v178
    | US14_0(v23) -> (* Some *)
        let v24 : string = "fable_library_rust::String_::fromString($0)"
        let v25 : string = Fable.Core.RustInterop.emitRustExpr v23 v24 
        (* run_target_args'
        let v30 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v31 : string = "&*$0"
        let v32 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v25 v31 
        let _run_target_args'_v30 = v32 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v33 : string = "&*$0"
        let v34 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v25 v33 
        let _run_target_args'_v30 = v34 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v35 : string = "&*$0"
        let v36 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v25 v35 
        let _run_target_args'_v30 = v36 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v38 : Ref<Str> = v25 |> unbox<Ref<Str>>
        let _run_target_args'_v30 = v38 
        #endif
#if FABLE_COMPILER_PYTHON
        let v42 : Ref<Str> = v25 |> unbox<Ref<Str>>
        let _run_target_args'_v30 = v42 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v46 : Ref<Str> = v25 |> unbox<Ref<Str>>
        let _run_target_args'_v30 = v46 
        #endif
#else
        let v50 : Ref<Str> = v25 |> unbox<Ref<Str>>
        let _run_target_args'_v30 = v50 
        #endif
        let v53 : Ref<Str> = _run_target_args'_v30 
        (* run_target_args'
        let v63 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v64 : string = "String::from($0)"
        let v65 : std_string_String = Fable.Core.RustInterop.emitRustExpr v53 v64 
        let _run_target_args'_v63 = v65 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v66 : string = "String::from($0)"
        let v67 : std_string_String = Fable.Core.RustInterop.emitRustExpr v53 v66 
        let _run_target_args'_v63 = v67 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v68 : string = "String::from($0)"
        let v69 : std_string_String = Fable.Core.RustInterop.emitRustExpr v53 v68 
        let _run_target_args'_v63 = v69 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v71 : std_string_String = v53 |> unbox<std_string_String>
        let _run_target_args'_v63 = v71 
        #endif
#if FABLE_COMPILER_PYTHON
        let v75 : std_string_String = v53 |> unbox<std_string_String>
        let _run_target_args'_v63 = v75 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v79 : std_string_String = v53 |> unbox<std_string_String>
        let _run_target_args'_v63 = v79 
        #endif
#else
        let v83 : std_string_String = v53 |> unbox<std_string_String>
        let _run_target_args'_v63 = v83 
        #endif
        let v86 : std_string_String = _run_target_args'_v63 
        let v92 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
        let v93 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v86 v92 
        let v94 : string = "v93"
        let v95 : string = ""
        let v96 : string = v94 + v95 
        let v97 : string = v96 + v95 
        let v98 : string = "vec![" + v97 + "]"
        let v99 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v98 
        let v100 : string = "leptos::prelude::Fragment::new($0)"
        let v101 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v99 v100 
        v101
and method261 (v0 : std_string_String option) : (unit -> leptos_dom_Fragment) =
    closure291(v0)
and closure292 () () : string =
    let v0 : string = ""
    v0
and closure293 () () : string =
    let v0 : string = ""
    v0
and closure294 () () : string =
    let v0 : string = ""
    v0
and closure289 (v0 : std_string_String option) () : leptos_dom_Fragment =
    let v1 : string = "class=\"flex flex-1 flex-col\""
    let v2 : string = ""
    let v3 : string = " " + v1 + v2 + ""
    let v4 : (unit -> leptos_dom_Fragment) = method260()
    let v5 : (unit -> leptos_dom_Fragment) = method261(v0)
    let v6 : string = "$0"
    let v7 : (unit -> string) = closure292()
    let v8 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v7 v6 
    let v9 : string = "$0"
    let v10 : (unit -> string) = closure293()
    let v11 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v10 v9 
    let v12 : string = "$0"
    let v13 : (unit -> string) = closure235()
    let v14 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v13 v12 
    let v15 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v14(()) + \" \" + &v11(()) + \" \" + &v8(())"
    let v16 : string = " " + v15 + v2 + ""
    let v17 : string = "$0"
    let v18 : (unit -> string) = closure294()
    let v19 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v18 v17 
    let v20 : string = "class=\"[font-size:12px] text-gray-400\""
    let v21 : string = " " + v20 + v2 + ""
    let v22 : leptos_dom_Fragment = v4 ()
    let v23 : string = "leptos::prelude::AnyView::from($0)"
    let v24 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v22 v23 
    let v25 : string = "dt"
    let v26 : string = "<" + v25 + " " + v21 + ">move || { v24 }</" + v25 + ">"
    let v27 : string = "leptos::prelude::view! { " + v26 + " }"
    let v28 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v28 |> unbox
    let v30 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v31 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v29 v30 
    let v32 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v19(())"
    let v33 : string = " " + v32 + v2 + ""
    let v34 : leptos_dom_Fragment = v5 ()
    let v35 : string = "leptos::prelude::AnyView::from($0)"
    let v36 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v34 v35 
    let v37 : string = "dd"
    let v38 : string = "<" + v37 + " " + v33 + ">move || { v36 }</" + v37 + ">"
    let v39 : string = "leptos::prelude::view! { " + v38 + " }"
    let v40 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v39 
    let v41 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v40 |> unbox
    let v42 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v43 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v41 v42 
    let v44 : string = "v43"
    let v45 : string = v44 + v2 
    let v46 : string = v45 + v2 
    let v47 : string = "v31"
    let v48 : string = ", "
    let v49 : string = v47 + v48 
    let v50 : string = v49 + v46 
    let v51 : string = "vec![" + v50 + "]"
    let v52 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v51 
    let v53 : string = "leptos::prelude::Fragment::new($0)"
    let v54 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v52 v53 
    let v55 : string = "leptos::prelude::AnyView::from($0)"
    let v56 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v54 v55 
    let v57 : string = "dl"
    let v58 : string = "<" + v57 + " " + v16 + ">move || { v56 }</" + v57 + ">"
    let v59 : string = "leptos::prelude::view! { " + v58 + " }"
    let v60 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v59 
    let v61 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v60 |> unbox
    let v62 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v63 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v62 
    let v64 : string = "v63"
    let v65 : string = v64 + v2 
    let v66 : string = v65 + v2 
    let v67 : string = "vec![" + v66 + "]"
    let v68 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v67 
    let v69 : string = "leptos::prelude::Fragment::new($0)"
    let v70 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v68 v69 
    let v71 : string = "leptos::prelude::AnyView::from($0)"
    let v72 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v70 v71 
    let v73 : string = "div"
    let v74 : string = "<" + v73 + " " + v3 + ">move || { v72 }</" + v73 + ">"
    let v75 : string = "leptos::prelude::view! { " + v74 + " }"
    let v76 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v75 
    let v77 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v76 |> unbox
    let v78 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v79 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v78 
    let v80 : string = "v79"
    let v81 : string = v80 + v2 
    let v82 : string = v81 + v2 
    let v83 : string = "vec![" + v82 + "]"
    let v84 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v83 
    let v85 : string = "leptos::prelude::Fragment::new($0)"
    let v86 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v84 v85 
    v86
and method259 (v0 : std_string_String option) : (unit -> leptos_dom_Fragment) =
    closure289(v0)
and closure295 () () : string =
    let v0 : string = ""
    v0
and closure296 () () : string =
    let v0 : string = "items-center"
    v0
and closure297 () () : string =
    let v0 : string = ""
    v0
and closure298 () () : string =
    let v0 : string = ""
    v0
and closure287 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "$0.to_vec()"
    let v13 : Vec<struct (std_string_String * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr v7 v12 
    let v14 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
    let v15 : bool = Fable.Core.RustInterop.emitRustExpr v13 v14 
    let v16 : string = "x"
    let struct (v17 : std_string_String, v18 : std_string_String option) = Fable.Core.RustInterop.emitRustExpr () v16 
    let v19 : (unit -> leptos_dom_Fragment) = method258(v17)
    let v20 : (unit -> leptos_dom_Fragment) = method259(v18)
    let v21 : string = "$0"
    let v22 : (unit -> string) = closure295()
    let v23 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v22 v21 
    let v24 : string = "$0"
    let v25 : (unit -> string) = closure296()
    let v26 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v25 v24 
    let v27 : string = "$0"
    let v28 : (unit -> string) = closure297()
    let v29 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v28 v27 
    let v30 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v29(()) + \" \" + &v26(()) + \" \" + &v23(())"
    let v31 : string = ""
    let v32 : string = " " + v30 + v31 + ""
    let v33 : string = "$0"
    let v34 : (unit -> string) = closure298()
    let v35 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v34 v33 
    let v36 : string = "class=\"[font-size:12px] text-gray-400\""
    let v37 : string = " " + v36 + v31 + ""
    let v38 : leptos_dom_Fragment = v19 ()
    let v39 : string = "leptos::prelude::AnyView::from($0)"
    let v40 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v38 v39 
    let v41 : string = "dt"
    let v42 : string = "<" + v41 + " " + v37 + ">move || { v40 }</" + v41 + ">"
    let v43 : string = "leptos::prelude::view! { " + v42 + " }"
    let v44 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v43 
    let v45 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v44 |> unbox
    let v46 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v47 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v45 v46 
    let v48 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v35(())"
    let v49 : string = " " + v48 + v31 + ""
    let v50 : leptos_dom_Fragment = v20 ()
    let v51 : string = "leptos::prelude::AnyView::from($0)"
    let v52 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v50 v51 
    let v53 : string = "dd"
    let v54 : string = "<" + v53 + " " + v49 + ">move || { v52 }</" + v53 + ">"
    let v55 : string = "leptos::prelude::view! { " + v54 + " }"
    let v56 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v55 
    let v57 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v56 |> unbox
    let v58 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v59 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v57 v58 
    let v60 : string = "v59"
    let v61 : string = v60 + v31 
    let v62 : string = v61 + v31 
    let v63 : string = "v47"
    let v64 : string = ", "
    let v65 : string = v63 + v64 
    let v66 : string = v65 + v62 
    let v67 : string = "vec![" + v66 + "]"
    let v68 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v67 
    let v69 : string = "leptos::prelude::Fragment::new($0)"
    let v70 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v68 v69 
    let v71 : string = "leptos::prelude::AnyView::from($0)"
    let v72 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v70 v71 
    let v73 : string = "dl"
    let v74 : string = "<" + v73 + " " + v32 + ">move || { v72 }</" + v73 + ">"
    let v75 : string = "leptos::prelude::view! { " + v74 + " }"
    let v76 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v75 
    let v77 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v76 |> unbox
    let v78 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v79 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v78 
    let v80 : string = "true; $0 }).collect::<Vec<_>>()"
    let v81 : bool = Fable.Core.RustInterop.emitRustExpr v79 v80 
    let v82 : string = "_vec_map"
    let v83 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v82 
    let v84 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v85 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v83 v84 
    let v86 : string = "v85"
    let v87 : string = v86 + v31 
    let v88 : string = v87 + v31 
    let v89 : string = "vec![" + v88 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::Fragment::new($0)"
    let v92 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v90 v91 
    v92
and method257 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure287(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure299 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure300 () () : string =
    let v0 : string = "sm:pr-[10px]"
    v0
and closure301 () () : string =
    let v0 : string = "[flex-direction:column]"
    v0
and closure302 () () : leptos_dom_Fragment =
    let v0 : string = "Deposit"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method262 () : (unit -> leptos_dom_Fragment) =
    closure302()
and closure303 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v13 : (float -> string) = _.ToString()
    let v14 : string = v13 v8
    (* run_target_args'
    let v21 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v22 : string = "&*$0"
    let v23 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v22 
    let _run_target_args'_v21 = v23 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v24 : string = "&*$0"
    let v25 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v24 
    let _run_target_args'_v21 = v25 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v26 : string = "&*$0"
    let v27 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v26 
    let _run_target_args'_v21 = v27 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v29 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v29 
    #endif
#if FABLE_COMPILER_PYTHON
    let v33 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v33 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v37 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v37 
    #endif
#else
    let v41 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v41 
    #endif
    let v44 : Ref<Str> = _run_target_args'_v21 
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v55 
    let _run_target_args'_v54 = v56 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = "String::from($0)"
    let v58 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v57 
    let _run_target_args'_v54 = v58 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = "String::from($0)"
    let v60 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v59 
    let _run_target_args'_v54 = v60 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v62 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v62 
    #endif
#if FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v66 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v70 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v70 
    #endif
#else
    let v74 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v74 
    #endif
    let v77 : std_string_String = _run_target_args'_v54 
    let v83 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v84 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v83 
    let v85 : string = "v84"
    let v86 : string = ""
    let v87 : string = v85 + v86 
    let v88 : string = v87 + v86 
    let v89 : string = "vec![" + v88 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::Fragment::new($0)"
    let v92 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v90 v91 
    v92
and method263 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure303(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure304 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure305 () () : string =
    let v0 : string = ""
    v0
and closure306 () () : leptos_dom_Fragment =
    let v0 : string = "Outcome Status"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method264 () : (unit -> leptos_dom_Fragment) =
    closure306()
and closure307 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v13 : (bool -> string) = _.ToString()
    let v14 : string = v13 v9
    (* run_target_args'
    let v21 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v22 : string = "&*$0"
    let v23 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v22 
    let _run_target_args'_v21 = v23 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v24 : string = "&*$0"
    let v25 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v24 
    let _run_target_args'_v21 = v25 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v26 : string = "&*$0"
    let v27 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v26 
    let _run_target_args'_v21 = v27 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v29 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v29 
    #endif
#if FABLE_COMPILER_PYTHON
    let v33 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v33 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v37 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v37 
    #endif
#else
    let v41 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v41 
    #endif
    let v44 : Ref<Str> = _run_target_args'_v21 
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v55 
    let _run_target_args'_v54 = v56 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = "String::from($0)"
    let v58 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v57 
    let _run_target_args'_v54 = v58 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = "String::from($0)"
    let v60 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v59 
    let _run_target_args'_v54 = v60 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v62 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v62 
    #endif
#if FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v66 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v70 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v70 
    #endif
#else
    let v74 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v74 
    #endif
    let v77 : std_string_String = _run_target_args'_v54 
    let v83 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v84 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v83 
    let v85 : string = "v84"
    let v86 : string = ""
    let v87 : string = v85 + v86 
    let v88 : string = v87 + v86 
    let v89 : string = "vec![" + v88 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::Fragment::new($0)"
    let v92 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v90 v91 
    v92
and method265 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure307(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure308 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure309 () () : string =
    let v0 : string = ""
    v0
and closure310 () () : leptos_dom_Fragment =
    let v0 : string = "Fee"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method266 () : (unit -> leptos_dom_Fragment) =
    closure310()
and closure311 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v13 : (float -> string) = _.ToString()
    let v14 : string = v13 v10
    (* run_target_args'
    let v21 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v22 : string = "&*$0"
    let v23 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v22 
    let _run_target_args'_v21 = v23 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v24 : string = "&*$0"
    let v25 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v24 
    let _run_target_args'_v21 = v25 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v26 : string = "&*$0"
    let v27 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v26 
    let _run_target_args'_v21 = v27 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v29 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v29 
    #endif
#if FABLE_COMPILER_PYTHON
    let v33 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v33 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v37 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v37 
    #endif
#else
    let v41 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v41 
    #endif
    let v44 : Ref<Str> = _run_target_args'_v21 
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v55 
    let _run_target_args'_v54 = v56 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = "String::from($0)"
    let v58 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v57 
    let _run_target_args'_v54 = v58 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = "String::from($0)"
    let v60 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v59 
    let _run_target_args'_v54 = v60 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v62 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v62 
    #endif
#if FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v66 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v70 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v70 
    #endif
#else
    let v74 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v74 
    #endif
    let v77 : std_string_String = _run_target_args'_v54 
    let v83 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v84 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v83 
    let v85 : string = "v84"
    let v86 : string = ""
    let v87 : string = v85 + v86 
    let v88 : string = v87 + v86 
    let v89 : string = "vec![" + v88 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::Fragment::new($0)"
    let v92 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v90 v91 
    v92
and method267 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure311(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure312 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure313 () () : string =
    let v0 : string = ""
    v0
and closure314 () () : leptos_dom_Fragment =
    let v0 : string = "Block Height"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method268 () : (unit -> leptos_dom_Fragment) =
    closure314()
and closure315 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v13 : (uint32 -> string) = _.ToString()
    let v14 : string = v13 v6
    (* run_target_args'
    let v21 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v22 : string = "&*$0"
    let v23 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v22 
    let _run_target_args'_v21 = v23 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v24 : string = "&*$0"
    let v25 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v24 
    let _run_target_args'_v21 = v25 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v26 : string = "&*$0"
    let v27 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v26 
    let _run_target_args'_v21 = v27 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v29 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v29 
    #endif
#if FABLE_COMPILER_PYTHON
    let v33 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v33 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v37 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v37 
    #endif
#else
    let v41 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v41 
    #endif
    let v44 : Ref<Str> = _run_target_args'_v21 
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v55 
    let _run_target_args'_v54 = v56 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = "String::from($0)"
    let v58 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v57 
    let _run_target_args'_v54 = v58 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = "String::from($0)"
    let v60 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v59 
    let _run_target_args'_v54 = v60 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v62 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v62 
    #endif
#if FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v66 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v70 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v70 
    #endif
#else
    let v74 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v74 
    #endif
    let v77 : std_string_String = _run_target_args'_v54 
    let v83 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v84 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v83 
    let v85 : string = "v84"
    let v86 : string = ""
    let v87 : string = v85 + v86 
    let v88 : string = v87 + v86 
    let v89 : string = "vec![" + v88 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::Fragment::new($0)"
    let v92 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v90 v91 
    v92
and method269 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure315(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure316 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure317 () () : string =
    let v0 : string = ""
    v0
and closure318 () () : leptos_dom_Fragment =
    let v0 : string = "Hash"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method270 () : (unit -> leptos_dom_Fragment) =
    closure318()
and closure319 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v3 v12 
    (* run_target_args'
    let v18 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v19 
    let _run_target_args'_v18 = v20 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v21 
    let _run_target_args'_v18 = v22 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v23 
    let _run_target_args'_v18 = v24 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v26 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v26 
    #endif
#if FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v30 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v34 
    #endif
#else
    let v38 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v38 
    #endif
    let v41 : Ref<Str> = _run_target_args'_v18 
    (* run_target_args'
    let v51 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v52 
    let _run_target_args'_v51 = v53 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v54 : string = "String::from($0)"
    let v55 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v54 
    let _run_target_args'_v51 = v55 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v56 : string = "String::from($0)"
    let v57 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v56 
    let _run_target_args'_v51 = v57 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v59 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v59 
    #endif
#if FABLE_COMPILER_PYTHON
    let v63 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v63 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v67 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v67 
    #endif
#else
    let v71 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v71 
    #endif
    let v74 : std_string_String = _run_target_args'_v51 
    let v80 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v74 v80 
    let v82 : string = "v81"
    let v83 : string = ""
    let v84 : string = v82 + v83 
    let v85 : string = v84 + v83 
    let v86 : string = "vec![" + v85 + "]"
    let v87 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v86 
    let v88 : string = "leptos::prelude::Fragment::new($0)"
    let v89 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v87 v88 
    v89
and method271 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure319(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure320 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure321 () () : string =
    let v0 : string = ""
    v0
and closure322 () () : leptos_dom_Fragment =
    let v0 : string = "Block Hash"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method272 () : (unit -> leptos_dom_Fragment) =
    closure322()
and closure323 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v4 v12 
    (* run_target_args'
    let v18 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v19 
    let _run_target_args'_v18 = v20 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v21 
    let _run_target_args'_v18 = v22 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v23 
    let _run_target_args'_v18 = v24 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v26 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v26 
    #endif
#if FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v30 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v34 
    #endif
#else
    let v38 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v38 
    #endif
    let v41 : Ref<Str> = _run_target_args'_v18 
    (* run_target_args'
    let v51 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v52 
    let _run_target_args'_v51 = v53 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v54 : string = "String::from($0)"
    let v55 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v54 
    let _run_target_args'_v51 = v55 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v56 : string = "String::from($0)"
    let v57 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v56 
    let _run_target_args'_v51 = v57 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v59 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v59 
    #endif
#if FABLE_COMPILER_PYTHON
    let v63 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v63 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v67 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v67 
    #endif
#else
    let v71 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v71 
    #endif
    let v74 : std_string_String = _run_target_args'_v51 
    let v80 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v74 v80 
    let v82 : string = "v81"
    let v83 : string = ""
    let v84 : string = v82 + v83 
    let v85 : string = v84 + v83 
    let v86 : string = "vec![" + v85 + "]"
    let v87 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v86 
    let v88 : string = "leptos::prelude::Fragment::new($0)"
    let v89 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v87 v88 
    v89
and method273 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure323(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure324 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure325 () () : string =
    let v0 : string = ""
    v0
and closure326 () () : leptos_dom_Fragment =
    let v0 : string = "Receipt ID"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method274 () : (unit -> leptos_dom_Fragment) =
    closure326()
and closure327 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v0 v12 
    (* run_target_args'
    let v18 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v19 
    let _run_target_args'_v18 = v20 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v21 
    let _run_target_args'_v18 = v22 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v23 
    let _run_target_args'_v18 = v24 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v26 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v26 
    #endif
#if FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v30 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v34 
    #endif
#else
    let v38 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v38 
    #endif
    let v41 : Ref<Str> = _run_target_args'_v18 
    (* run_target_args'
    let v51 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v52 
    let _run_target_args'_v51 = v53 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v54 : string = "String::from($0)"
    let v55 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v54 
    let _run_target_args'_v51 = v55 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v56 : string = "String::from($0)"
    let v57 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v56 
    let _run_target_args'_v51 = v57 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v59 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v59 
    #endif
#if FABLE_COMPILER_PYTHON
    let v63 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v63 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v67 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v67 
    #endif
#else
    let v71 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v71 
    #endif
    let v74 : std_string_String = _run_target_args'_v51 
    let v80 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v74 v80 
    let v82 : string = "v81"
    let v83 : string = ""
    let v84 : string = v82 + v83 
    let v85 : string = v84 + v83 
    let v86 : string = "vec![" + v85 + "]"
    let v87 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v86 
    let v88 : string = "leptos::prelude::Fragment::new($0)"
    let v89 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v87 v88 
    v89
and method275 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure327(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure328 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure329 () () : string =
    let v0 : string = ""
    v0
and closure330 () () : leptos_dom_Fragment =
    let v0 : string = "Logs"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method276 () : (unit -> leptos_dom_Fragment) =
    closure330()
and method278 (v0 : Func0<std_string_String, string>) : Func0<std_string_String, string> =
    v0
and closure332 (v0 : Func0<std_string_String, string>) (v1 : std_string_String) : string =
    let v2 : Func0<std_string_String, string> = method278(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : string = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method279 () : string =
    let v0 : string = "\n"
    v0
and closure333 () () : string =
    let v0 : string = "[max-height:20vh]"
    v0
and closure331 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "$0.to_vec()"
    let v13 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v11 v12 
    let v14 : unit = ()
    let v15 : string = $"true; let _func1_from_v14 = Func1::from(move |value| {{ //"
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = $"value"
    let v18 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v17 
    let v19 : string = "fable_library_rust::String_::fromString($0)"
    let v20 : string = Fable.Core.RustInterop.emitRustExpr v18 v19 
    let func1_from_result = v20 //
    let v21 : _ = func1_from_result
    let v22 : string = $"true; $0 /*"
    let v23 : bool = Fable.Core.RustInterop.emitRustExpr v21 v22 
    let v24 : string = $"*/ }}); //"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr () v24 
    let v26 : string = $"_func1_from_v14"
    let v27 : Func0<std_string_String, string> = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v29 : (std_string_String -> string) = closure332(v27)
    let v30 : Vec<string> = Fable.Core.RustInterop.emitRustExpr struct (v13, v29) v28 
    let v31 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v32 : (string []) = Fable.Core.RustInterop.emitRustExpr v30 v31 
    let v34 : string seq = v32 |> Seq.ofArray
    let v38 : string = method279()
    let v39 : (string -> (string seq -> string)) = String.concat
    let v40 : (string seq -> string) = v39 v38
    let v41 : string = v40 v34
    let v45 : string = "\\n"
    let v46 : string = "\n"
    let v47 : string = v41.Replace (v45, v46)
    let v48 : string = "$0"
    let v49 : (unit -> string) = closure333()
    let v50 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v49 v48 
    let v51 : string = "class=move || \"[padding:1px] [font-size:12px] [line-height:12px] [text-wrap:pretty] \".to_owned() + &v50(())"
    let v52 : string = ""
    let v53 : string = " " + v51 + v52 + ""
    (* run_target_args'
    let v58 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v59 : string = "&*$0"
    let v60 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v47 v59 
    let _run_target_args'_v58 = v60 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v61 : string = "&*$0"
    let v62 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v47 v61 
    let _run_target_args'_v58 = v62 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v63 : string = "&*$0"
    let v64 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v47 v63 
    let _run_target_args'_v58 = v64 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v66 : Ref<Str> = v47 |> unbox<Ref<Str>>
    let _run_target_args'_v58 = v66 
    #endif
#if FABLE_COMPILER_PYTHON
    let v70 : Ref<Str> = v47 |> unbox<Ref<Str>>
    let _run_target_args'_v58 = v70 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v74 : Ref<Str> = v47 |> unbox<Ref<Str>>
    let _run_target_args'_v58 = v74 
    #endif
#else
    let v78 : Ref<Str> = v47 |> unbox<Ref<Str>>
    let _run_target_args'_v58 = v78 
    #endif
    let v81 : Ref<Str> = _run_target_args'_v58 
    (* run_target_args'
    let v91 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v92 : string = "String::from($0)"
    let v93 : std_string_String = Fable.Core.RustInterop.emitRustExpr v81 v92 
    let _run_target_args'_v91 = v93 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v94 : string = "String::from($0)"
    let v95 : std_string_String = Fable.Core.RustInterop.emitRustExpr v81 v94 
    let _run_target_args'_v91 = v95 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v96 : string = "String::from($0)"
    let v97 : std_string_String = Fable.Core.RustInterop.emitRustExpr v81 v96 
    let _run_target_args'_v91 = v97 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v99 : std_string_String = v81 |> unbox<std_string_String>
    let _run_target_args'_v91 = v99 
    #endif
#if FABLE_COMPILER_PYTHON
    let v103 : std_string_String = v81 |> unbox<std_string_String>
    let _run_target_args'_v91 = v103 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v107 : std_string_String = v81 |> unbox<std_string_String>
    let _run_target_args'_v91 = v107 
    #endif
#else
    let v111 : std_string_String = v81 |> unbox<std_string_String>
    let _run_target_args'_v91 = v111 
    #endif
    let v114 : std_string_String = _run_target_args'_v91 
    let v120 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v121 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v114 v120 
    let v122 : string = "v121"
    let v123 : string = v122 + v52 
    let v124 : string = v123 + v52 
    let v125 : string = "vec![" + v124 + "]"
    let v126 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v125 
    let v127 : string = "leptos::prelude::Fragment::new($0)"
    let v128 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v126 v127 
    let v129 : string = "leptos::prelude::AnyView::from($0)"
    let v130 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v128 v129 
    let v131 : string = "pre"
    let v132 : string = "<" + v131 + " " + v53 + ">move || { v130 }</" + v131 + ">"
    let v133 : string = "leptos::prelude::view! { " + v132 + " }"
    let v134 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v133 
    let v135 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v134 |> unbox
    let v136 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v137 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v135 v136 
    let v138 : string = "v137"
    let v139 : string = v138 + v52 
    let v140 : string = v139 + v52 
    let v141 : string = "vec![" + v140 + "]"
    let v142 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v141 
    let v143 : string = "leptos::prelude::Fragment::new($0)"
    let v144 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v142 v143 
    v144
and method277 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure331(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure334 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure335 () () : string =
    let v0 : string = ""
    v0
and closure336 () () : string =
    let v0 : string = "[max-height:20vh] [width:100vw] [max-width:100vw]"
    v0
and method281 (v0 : (std_string_String []), v1 : int32) : bool =
    let v2 : int32 = v0.Length
    let v3 : bool = v1 < v2
    if v3 then
        let v4 : std_string_String = v0.[int v1]
        let v5 : string = "fable_library_rust::String_::fromString($0)"
        let v6 : string = Fable.Core.RustInterop.emitRustExpr v4 v5 
        let v7 : int32 = v6.Length
        let v8 : bool = v7 > 0
        if v8 then
            true
        else
            let v9 : int32 = v1 + 1
            method281(v0, v9)
    else
        false
and method280 (v0 : (struct (string * unativeint * Heap5) []), v1 : int32) : bool =
    let v2 : int32 = v0.Length
    let v3 : bool = v1 < v2
    if v3 then
        let struct (v4 : string, v5 : unativeint, v6 : Heap5) = v0.[int v1]
        let v7 : (std_string_String []) = v6.l11
        let v8 : int32 = 0
        let v9 : bool = method281(v7, v8)
        if v9 then
            true
        else
            let v10 : int32 = v1 + 1
            method280(v0, v10)
    else
        false
and closure260 (v0 : Heap2, v1 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>, v2 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>>, v3 : leptos_prelude_ReadSignal<bool>) () : leptos_dom_Fragment =
    let v4 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v144 : leptos_prelude_AnyView_ =
        if v5 then
            let v6 : string = "class=\"px-[12px] py-[10px]\""
            let v7 : string = ""
            let v8 : string = " " + v6 + v7 + ""
            let v9 : string = "class=\"flex items-center pb-[6px]\""
            let v10 : string = " " + v9 + v7 + ""
            let v11 : string = "class=\"pr-[15px] [font-size:13px]\""
            let v12 : string = " " + v11 + v7 + ""
            let v13 : string = "Func0::new(move || $0())"
            let v14 : (unit -> leptos_dom_Fragment) = closure261()
            let v15 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v14 v13 
            let v16 : Func0<leptos_dom_Fragment> = method195(v15)
            let v17 : string = "(move || v16())()"
            let v18 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v17 
            let v19 : string = "leptos::prelude::AnyView::from($0)"
            let v20 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v18 v19 
            let v21 : string = "span"
            let v22 : string = "<" + v21 + " " + v12 + ">move || { v20 }</" + v21 + ">"
            let v23 : string = "leptos::prelude::view! { " + v22 + " }"
            let v24 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v23 
            let v25 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v24 |> unbox
            let v26 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v27 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v25 v26 
            let v28 : string = "class=\"h-px flex-1 bg-gray-300\""
            let v29 : string = " " + v28 + v7 + ""
            let v30 : string = "vec![" + v7 + "]"
            let v31 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v30 
            let v32 : string = "leptos::prelude::Fragment::new($0)"
            let v33 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v31 v32 
            let v34 : string = "leptos::prelude::AnyView::from($0)"
            let v35 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v33 v34 
            let v36 : string = "<" + v21 + " " + v29 + ">move || { v35 }</" + v21 + ">"
            let v37 : string = "leptos::prelude::view! { " + v36 + " }"
            let v38 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v37 
            let v39 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v38 |> unbox
            let v40 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v41 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v39 v40 
            let v42 : string = "v41"
            let v43 : string = v42 + v7 
            let v44 : string = v43 + v7 
            let v45 : string = "v27"
            let v46 : string = ", "
            let v47 : string = v45 + v46 
            let v48 : string = v47 + v44 
            let v49 : string = "vec![" + v48 + "]"
            let v50 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v49 
            let v51 : string = "leptos::prelude::Fragment::new($0)"
            let v52 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v50 v51 
            let v53 : string = "leptos::prelude::AnyView::from($0)"
            let v54 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v52 v53 
            let v55 : string = "<" + v21 + " " + v10 + ">move || { v54 }</" + v21 + ">"
            let v56 : string = "leptos::prelude::view! { " + v55 + " }"
            let v57 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v56 
            let v58 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v57 |> unbox
            let v59 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v60 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v58 v59 
            let v61 : (unit -> leptos_dom_Fragment) = method244()
            let v62 : (unit -> leptos_dom_Fragment) = method245(v0)
            let v63 : string = "$0"
            let v64 : (unit -> string) = closure268()
            let v65 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v64 v63 
            let v66 : string = "$0"
            let v67 : (unit -> string) = closure234()
            let v68 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v67 v66 
            let v69 : string = "$0"
            let v70 : (unit -> string) = closure235()
            let v71 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v70 v69 
            let v72 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v71(()) + \" \" + &v68(()) + \" \" + &v65(())"
            let v73 : string = " " + v72 + v7 + ""
            let v74 : string = "$0"
            let v75 : (unit -> string) = closure236()
            let v76 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v75 v74 
            let v77 : string = "class=\"[font-size:12px] text-gray-400\""
            let v78 : string = " " + v77 + v7 + ""
            let v79 : leptos_dom_Fragment = v61 ()
            let v80 : string = "leptos::prelude::AnyView::from($0)"
            let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v79 v80 
            let v82 : string = "dt"
            let v83 : string = "<" + v82 + " " + v78 + ">move || { v81 }</" + v82 + ">"
            let v84 : string = "leptos::prelude::view! { " + v83 + " }"
            let v85 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v84 
            let v86 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v85 |> unbox
            let v87 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v88 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v86 v87 
            let v89 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v76(())"
            let v90 : string = " " + v89 + v7 + ""
            let v91 : leptos_dom_Fragment = v62 ()
            let v92 : string = "leptos::prelude::AnyView::from($0)"
            let v93 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v91 v92 
            let v94 : string = "dd"
            let v95 : string = "<" + v94 + " " + v90 + ">move || { v93 }</" + v94 + ">"
            let v96 : string = "leptos::prelude::view! { " + v95 + " }"
            let v97 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v96 
            let v98 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v97 |> unbox
            let v99 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v100 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v98 v99 
            let v101 : string = "v100"
            let v102 : string = v101 + v7 
            let v103 : string = v102 + v7 
            let v104 : string = "v88"
            let v105 : string = v104 + v46 
            let v106 : string = v105 + v103 
            let v107 : string = "vec![" + v106 + "]"
            let v108 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v107 
            let v109 : string = "leptos::prelude::Fragment::new($0)"
            let v110 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v108 v109 
            let v111 : string = "leptos::prelude::AnyView::from($0)"
            let v112 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v110 v111 
            let v113 : string = "dl"
            let v114 : string = "<" + v113 + " " + v73 + ">move || { v112 }</" + v113 + ">"
            let v115 : string = "leptos::prelude::view! { " + v114 + " }"
            let v116 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v115 
            let v117 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v116 |> unbox
            let v118 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v119 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v117 v118 
            let v120 : string = "v119"
            let v121 : string = v120 + v7 
            let v122 : string = v121 + v7 
            let v123 : string = "v60"
            let v124 : string = v123 + v46 
            let v125 : string = v124 + v122 
            let v126 : string = "vec![" + v125 + "]"
            let v127 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v126 
            let v128 : string = "leptos::prelude::Fragment::new($0)"
            let v129 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v127 v128 
            let v130 : string = "leptos::prelude::AnyView::from($0)"
            let v131 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v129 v130 
            let v132 : string = "div"
            let v133 : string = "<" + v132 + " " + v8 + ">move || { v131 }</" + v132 + ">"
            let v134 : string = "leptos::prelude::view! { " + v133 + " }"
            let v135 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v134 
            let v136 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v135 |> unbox
            let v137 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v138 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v136 v137 
            v138
        else
            let v139 : string = ""
            let v140 : string = "vec![" + v139 + "]"
            let v141 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v140 
            let v142 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v143 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v141 v142 
            v143
    let v145 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v146 : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr v2 v145 
    let v147 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v148 : (struct (string * Vec<struct (string * US23 * string * bool * bool)>) []) = Fable.Core.RustInterop.emitRustExpr v146 v147 
    let v149 : uint64 = System.Convert.ToUInt64 v148.Length
    let v150 : bool = v149 = 0UL
    let v4588 : leptos_prelude_AnyView_ =
        if v150 then
            let v151 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
            let v152 : string = ""
            let v153 : string = " " + v151 + v152 + ""
            let v154 : string = "class=\"[height:17px]\""
            let v155 : string = " " + v154 + v152 + ""
            let v156 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v157 : string = "fill=\"none\""
            let v158 : string = "height=\"100%\""
            let v159 : string = "viewBox=\"0 0 24 24\""
            let v160 : string = "stroke-width=\"1.5\""
            let v161 : string = "stroke=\"currentColor\""
            let v162 : string = "class=\"text-red-700\""
            let v163 : string = " " + v156 + v152 + ""
            let v164 : string = " " + v157 + v163 + ""
            let v165 : string = " " + v158 + v164 + ""
            let v166 : string = " " + v159 + v165 + ""
            let v167 : string = " " + v160 + v166 + ""
            let v168 : string = " " + v161 + v167 + ""
            let v169 : string = " " + v162 + v168 + ""
            let v170 : string = "stroke-linecap=\"round\""
            let v171 : string = "stroke-linejoin=\"round\""
            let v172 : string = "d=\"M6 18L18 6M6 6l12 12\""
            let v173 : string = " " + v170 + v152 + ""
            let v174 : string = " " + v171 + v173 + ""
            let v175 : string = " " + v172 + v174 + ""
            let v176 : string = "vec![" + v152 + "]"
            let v177 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v176 
            let v178 : string = "leptos::prelude::Fragment::new($0)"
            let v179 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v177 v178 
            let v180 : string = "leptos::prelude::AnyView::from($0)"
            let v181 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v179 v180 
            let v182 : string = "path"
            let v183 : string = "<" + v182 + " " + v175 + ">move || { v181 }</" + v182 + ">"
            let v184 : string = "leptos::prelude::view! { " + v183 + " }"
            let v185 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v184 
            let v186 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v185 |> unbox
            let v187 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v188 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v186 v187 
            let v189 : string = "v188"
            let v190 : string = v189 + v152 
            let v191 : string = v190 + v152 
            let v192 : string = "vec![" + v191 + "]"
            let v193 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v192 
            let v194 : string = "leptos::prelude::Fragment::new($0)"
            let v195 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v193 v194 
            let v196 : string = "leptos::prelude::AnyView::from($0)"
            let v197 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v195 v196 
            let v198 : string = "svg"
            let v199 : string = "<" + v198 + " " + v169 + ">move || { v197 }</" + v198 + ">"
            let v200 : string = "leptos::prelude::view! { " + v199 + " }"
            let v201 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v200 
            let v202 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v201 |> unbox
            let v203 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v204 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v202 v203 
            let v205 : string = "v204"
            let v206 : string = v205 + v152 
            let v207 : string = v206 + v152 
            let v208 : string = "vec![" + v207 + "]"
            let v209 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v208 
            let v210 : string = "leptos::prelude::Fragment::new($0)"
            let v211 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v209 v210 
            let v212 : string = "leptos::prelude::AnyView::from($0)"
            let v213 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v211 v212 
            let v214 : string = "span"
            let v215 : string = "<" + v214 + " " + v155 + ">move || { v213 }</" + v214 + ">"
            let v216 : string = "leptos::prelude::view! { " + v215 + " }"
            let v217 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v216 
            let v218 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v217 |> unbox
            let v219 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v220 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v218 v219 
            let v221 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
            let v222 : string = " " + v221 + v152 + ""
            let v223 : string = "No account selected"
            (* run_target_args'
            let v228 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v229 : string = "&*$0"
            let v230 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v223 v229 
            let _run_target_args'_v228 = v230 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v231 : string = "&*$0"
            let v232 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v223 v231 
            let _run_target_args'_v228 = v232 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v233 : string = "&*$0"
            let v234 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v223 v233 
            let _run_target_args'_v228 = v234 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v236 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v236 
            #endif
#if FABLE_COMPILER_PYTHON
            let v240 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v240 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v244 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v244 
            #endif
#else
            let v248 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v248 
            #endif
            let v251 : Ref<Str> = _run_target_args'_v228 
            (* run_target_args'
            let v261 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v262 : string = "String::from($0)"
            let v263 : std_string_String = Fable.Core.RustInterop.emitRustExpr v251 v262 
            let _run_target_args'_v261 = v263 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v264 : string = "String::from($0)"
            let v265 : std_string_String = Fable.Core.RustInterop.emitRustExpr v251 v264 
            let _run_target_args'_v261 = v265 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v266 : string = "String::from($0)"
            let v267 : std_string_String = Fable.Core.RustInterop.emitRustExpr v251 v266 
            let _run_target_args'_v261 = v267 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v269 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v261 = v269 
            #endif
#if FABLE_COMPILER_PYTHON
            let v273 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v261 = v273 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v277 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v261 = v277 
            #endif
#else
            let v281 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v261 = v281 
            #endif
            let v284 : std_string_String = _run_target_args'_v261 
            let v290 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v291 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v284 v290 
            let v292 : string = "v291"
            let v293 : string = v292 + v152 
            let v294 : string = v293 + v152 
            let v295 : string = "vec![" + v294 + "]"
            let v296 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v295 
            let v297 : string = "leptos::prelude::Fragment::new($0)"
            let v298 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v296 v297 
            let v299 : string = "leptos::prelude::AnyView::from($0)"
            let v300 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v298 v299 
            let v301 : string = "pre"
            let v302 : string = "<" + v301 + " " + v222 + ">move || { v300 }</" + v301 + ">"
            let v303 : string = "leptos::prelude::view! { " + v302 + " }"
            let v304 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v303 
            let v305 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v304 |> unbox
            let v306 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v307 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v305 v306 
            let v308 : string = "v307"
            let v309 : string = v308 + v152 
            let v310 : string = v309 + v152 
            let v311 : string = "v220"
            let v312 : string = ", "
            let v313 : string = v311 + v312 
            let v314 : string = v313 + v310 
            let v315 : string = "vec![" + v314 + "]"
            let v316 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v315 
            let v317 : string = "leptos::prelude::Fragment::new($0)"
            let v318 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v316 v317 
            let v319 : string = "leptos::prelude::AnyView::from($0)"
            let v320 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v318 v319 
            let v321 : string = "div"
            let v322 : string = "<" + v321 + " " + v153 + ">move || { v320 }</" + v321 + ">"
            let v323 : string = "leptos::prelude::view! { " + v322 + " }"
            let v324 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v323 
            let v325 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v324 |> unbox
            let v326 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v327 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v325 v326 
            v327
        else
            let v328 : string = $"leptos::prelude::ArcMemo::get(&$0)"
            let v329 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v1 v328 
            let v330 : ((struct (string * unativeint * Heap5) []) option -> US53) = method138()
            let v331 : (std_string_String -> US53) = method139()
            let v333 : US53 = match v329 with Ok x -> v330 x | Error x -> v331 x
            let v363 : US46 =
                match v333 with
                | US53_1(v360) -> (* Error *)
                    US46_1(v360)
                | US53_0(v336) -> (* Ok *)
                    let v339 : ((struct (string * unativeint * Heap5) []) -> US47) = method140()
                    let v340 : US47 option = v336 |> Option.map v339 
                    let v354 : US47 = US47_1
                    let v355 : US47 = v340 |> Option.defaultValue v354 
                    US46_0(v355)
            match v363 with
            | US46_1(v4407) -> (* Error *)
                let v4408 : string = "fable_library_rust::String_::fromString($0)"
                let v4409 : string = Fable.Core.RustInterop.emitRustExpr v4407 v4408 
                let v4410 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
                let v4411 : string = ""
                let v4412 : string = " " + v4410 + v4411 + ""
                let v4413 : string = "class=\"[height:17px]\""
                let v4414 : string = " " + v4413 + v4411 + ""
                let v4415 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                let v4416 : string = "fill=\"none\""
                let v4417 : string = "height=\"100%\""
                let v4418 : string = "viewBox=\"0 0 24 24\""
                let v4419 : string = "stroke-width=\"1.5\""
                let v4420 : string = "stroke=\"currentColor\""
                let v4421 : string = "class=\"text-red-700\""
                let v4422 : string = " " + v4415 + v4411 + ""
                let v4423 : string = " " + v4416 + v4422 + ""
                let v4424 : string = " " + v4417 + v4423 + ""
                let v4425 : string = " " + v4418 + v4424 + ""
                let v4426 : string = " " + v4419 + v4425 + ""
                let v4427 : string = " " + v4420 + v4426 + ""
                let v4428 : string = " " + v4421 + v4427 + ""
                let v4429 : string = "stroke-linecap=\"round\""
                let v4430 : string = "stroke-linejoin=\"round\""
                let v4431 : string = "d=\"M6 18L18 6M6 6l12 12\""
                let v4432 : string = " " + v4429 + v4411 + ""
                let v4433 : string = " " + v4430 + v4432 + ""
                let v4434 : string = " " + v4431 + v4433 + ""
                let v4435 : string = "vec![" + v4411 + "]"
                let v4436 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4435 
                let v4437 : string = "leptos::prelude::Fragment::new($0)"
                let v4438 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4436 v4437 
                let v4439 : string = "leptos::prelude::AnyView::from($0)"
                let v4440 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4438 v4439 
                let v4441 : string = "path"
                let v4442 : string = "<" + v4441 + " " + v4434 + ">move || { v4440 }</" + v4441 + ">"
                let v4443 : string = "leptos::prelude::view! { " + v4442 + " }"
                let v4444 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4443 
                let v4445 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4444 |> unbox
                let v4446 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v4447 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4445 v4446 
                let v4448 : string = "v4447"
                let v4449 : string = v4448 + v4411 
                let v4450 : string = v4449 + v4411 
                let v4451 : string = "vec![" + v4450 + "]"
                let v4452 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4451 
                let v4453 : string = "leptos::prelude::Fragment::new($0)"
                let v4454 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4452 v4453 
                let v4455 : string = "leptos::prelude::AnyView::from($0)"
                let v4456 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4454 v4455 
                let v4457 : string = "svg"
                let v4458 : string = "<" + v4457 + " " + v4428 + ">move || { v4456 }</" + v4457 + ">"
                let v4459 : string = "leptos::prelude::view! { " + v4458 + " }"
                let v4460 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4459 
                let v4461 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4460 |> unbox
                let v4462 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v4463 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4461 v4462 
                let v4464 : string = "v4463"
                let v4465 : string = v4464 + v4411 
                let v4466 : string = v4465 + v4411 
                let v4467 : string = "vec![" + v4466 + "]"
                let v4468 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4467 
                let v4469 : string = "leptos::prelude::Fragment::new($0)"
                let v4470 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4468 v4469 
                let v4471 : string = "leptos::prelude::AnyView::from($0)"
                let v4472 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4470 v4471 
                let v4473 : string = "span"
                let v4474 : string = "<" + v4473 + " " + v4414 + ">move || { v4472 }</" + v4473 + ">"
                let v4475 : string = "leptos::prelude::view! { " + v4474 + " }"
                let v4476 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4475 
                let v4477 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4476 |> unbox
                let v4478 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v4479 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4477 v4478 
                let v4480 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
                let v4481 : string = " " + v4480 + v4411 + ""
                (* run_target_args'
                let v4486 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v4487 : string = "&*$0"
                let v4488 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4409 v4487 
                let _run_target_args'_v4486 = v4488 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v4489 : string = "&*$0"
                let v4490 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4409 v4489 
                let _run_target_args'_v4486 = v4490 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v4491 : string = "&*$0"
                let v4492 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4409 v4491 
                let _run_target_args'_v4486 = v4492 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v4494 : Ref<Str> = v4409 |> unbox<Ref<Str>>
                let _run_target_args'_v4486 = v4494 
                #endif
#if FABLE_COMPILER_PYTHON
                let v4498 : Ref<Str> = v4409 |> unbox<Ref<Str>>
                let _run_target_args'_v4486 = v4498 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v4502 : Ref<Str> = v4409 |> unbox<Ref<Str>>
                let _run_target_args'_v4486 = v4502 
                #endif
#else
                let v4506 : Ref<Str> = v4409 |> unbox<Ref<Str>>
                let _run_target_args'_v4486 = v4506 
                #endif
                let v4509 : Ref<Str> = _run_target_args'_v4486 
                (* run_target_args'
                let v4519 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v4520 : string = "String::from($0)"
                let v4521 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4509 v4520 
                let _run_target_args'_v4519 = v4521 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v4522 : string = "String::from($0)"
                let v4523 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4509 v4522 
                let _run_target_args'_v4519 = v4523 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v4524 : string = "String::from($0)"
                let v4525 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4509 v4524 
                let _run_target_args'_v4519 = v4525 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v4527 : std_string_String = v4509 |> unbox<std_string_String>
                let _run_target_args'_v4519 = v4527 
                #endif
#if FABLE_COMPILER_PYTHON
                let v4531 : std_string_String = v4509 |> unbox<std_string_String>
                let _run_target_args'_v4519 = v4531 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v4535 : std_string_String = v4509 |> unbox<std_string_String>
                let _run_target_args'_v4519 = v4535 
                #endif
#else
                let v4539 : std_string_String = v4509 |> unbox<std_string_String>
                let _run_target_args'_v4519 = v4539 
                #endif
                let v4542 : std_string_String = _run_target_args'_v4519 
                let v4548 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                let v4549 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4542 v4548 
                let v4550 : string = "v4549"
                let v4551 : string = v4550 + v4411 
                let v4552 : string = v4551 + v4411 
                let v4553 : string = "vec![" + v4552 + "]"
                let v4554 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4553 
                let v4555 : string = "leptos::prelude::Fragment::new($0)"
                let v4556 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4554 v4555 
                let v4557 : string = "leptos::prelude::AnyView::from($0)"
                let v4558 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4556 v4557 
                let v4559 : string = "pre"
                let v4560 : string = "<" + v4559 + " " + v4481 + ">move || { v4558 }</" + v4559 + ">"
                let v4561 : string = "leptos::prelude::view! { " + v4560 + " }"
                let v4562 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4561 
                let v4563 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v4562 |> unbox
                let v4564 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v4565 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4563 v4564 
                let v4566 : string = "v4565"
                let v4567 : string = v4566 + v4411 
                let v4568 : string = v4567 + v4411 
                let v4569 : string = "v4479"
                let v4570 : string = ", "
                let v4571 : string = v4569 + v4570 
                let v4572 : string = v4571 + v4568 
                let v4573 : string = "vec![" + v4572 + "]"
                let v4574 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4573 
                let v4575 : string = "leptos::prelude::Fragment::new($0)"
                let v4576 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4574 v4575 
                let v4577 : string = "leptos::prelude::AnyView::from($0)"
                let v4578 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4576 v4577 
                let v4579 : string = "div"
                let v4580 : string = "<" + v4579 + " " + v4412 + ">move || { v4578 }</" + v4579 + ">"
                let v4581 : string = "leptos::prelude::view! { " + v4580 + " }"
                let v4582 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4581 
                let v4583 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4582 |> unbox
                let v4584 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v4585 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4583 v4584 
                v4585
            | US46_0(v364) -> (* Ok *)
                match v364 with
                | US47_0(v365) -> (* Some *)
                    let v366 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
                    let v367 : string = "Box::pin($0)"
                    let v368 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v366 v367 
                    let v369 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                    let v370 : Heap1 = Fable.Core.RustInterop.emitRustExpr v368 v369 
                    let v371 : leptos_prelude_ArcRwSignal<Heap0> = v370.l3
                    let v372 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
                    let v373 : Heap0 = Fable.Core.RustInterop.emitRustExpr v371 v372 
                    let v374 : US1 = v373.l4
                    let v375 : bool =
                        match v374 with
                        | US1_0 -> (* Details *)
                            true
                        | _ ->
                            false
                    if v375 then
                        let v376 : string = "class=\"grid flex-1 py-[10px] px-[12px] [gap:15px] sm:[grid-template-columns:repeat(auto-fill,minmax(500px,1fr))]\""
                        let v377 : string = ""
                        let v378 : string = " " + v376 + v377 + ""
                        let v379 : string = "$0.to_vec()"
                        let v380 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr v365 v379 
                        let v381 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                        let v382 : bool = Fable.Core.RustInterop.emitRustExpr v380 v381 
                        let v383 : string = "x"
                        let struct (v384 : string, v385 : unativeint, v386 : Heap5) = Fable.Core.RustInterop.emitRustExpr () v383 
                        let v387 : std_string_String = v386.l0
                        let v388 : std_string_String = v386.l1
                        let v389 : std_string_String = v386.l2
                        let v390 : std_string_String = v386.l3
                        let v391 : std_string_String = v386.l4
                        let v392 : std_string_String = v386.l5
                        let v393 : uint32 = v386.l6
                        let v394 : (struct (std_string_String * std_string_String option) []) = v386.l7
                        let v395 : float = v386.l8
                        let v396 : bool = v386.l9
                        let v397 : float = v386.l10
                        let v398 : (std_string_String []) = v386.l11
                        let v400 : (unativeint -> int64) = int64
                        let v401 : int64 = v400 v385
                        let v404 : string = "transaction.render (1)"
                        let v405 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v406 : bool = Fable.Core.RustInterop.emitRustExpr v404 v405 
                        let v407 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
                        let v408 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v407 
                        let v409 : string = "$0.unwrap()"
                        let v410 : Heap2 = Fable.Core.RustInterop.emitRustExpr v408 v409 
                        let v411 : string = "class=\"flex flex-1 flex-col overflow-x-auto\""
                        let v412 : string = " " + v411 + v377 + ""
                        let v413 : string = "class=\"flex items-center pb-[6px]\""
                        let v414 : string = " " + v413 + v377 + ""
                        let v415 : string = "class=\"pr-[15px] [font-size:13px]\""
                        let v416 : string = " " + v415 + v377 + ""
                        let v417 : string = "Func0::new(move || $0())"
                        let v418 : (unit -> leptos_dom_Fragment) = closure269(v401)
                        let v419 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v418 v417 
                        let v420 : Func0<leptos_dom_Fragment> = method195(v419)
                        let v421 : string = "(move || v420())()"
                        let v422 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v421 
                        let v423 : string = "leptos::prelude::AnyView::from($0)"
                        let v424 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v422 v423 
                        let v425 : string = "span"
                        let v426 : string = "<" + v425 + " " + v416 + ">move || { v424 }</" + v425 + ">"
                        let v427 : string = "leptos::prelude::view! { " + v426 + " }"
                        let v428 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v427 
                        let v429 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v428 |> unbox
                        let v430 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v431 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v429 v430 
                        let v432 : string = "class=\"h-px flex-1 bg-gray-300\""
                        let v433 : string = " " + v432 + v377 + ""
                        let v434 : string = "vec![" + v377 + "]"
                        let v435 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v434 
                        let v436 : string = "leptos::prelude::Fragment::new($0)"
                        let v437 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v435 v436 
                        let v438 : string = "leptos::prelude::AnyView::from($0)"
                        let v439 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v437 v438 
                        let v440 : string = "<" + v425 + " " + v433 + ">move || { v439 }</" + v425 + ">"
                        let v441 : string = "leptos::prelude::view! { " + v440 + " }"
                        let v442 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v441 
                        let v443 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v442 |> unbox
                        let v444 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v445 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v443 v444 
                        let v446 : string = "v445"
                        let v447 : string = v446 + v377 
                        let v448 : string = v447 + v377 
                        let v449 : string = "v431"
                        let v450 : string = ", "
                        let v451 : string = v449 + v450 
                        let v452 : string = v451 + v448 
                        let v453 : string = "vec![" + v452 + "]"
                        let v454 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v453 
                        let v455 : string = "leptos::prelude::Fragment::new($0)"
                        let v456 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v454 v455 
                        let v457 : string = "leptos::prelude::AnyView::from($0)"
                        let v458 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v456 v457 
                        let v459 : string = "<" + v425 + " " + v414 + ">move || { v458 }</" + v425 + ">"
                        let v460 : string = "leptos::prelude::view! { " + v459 + " }"
                        let v461 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v460 
                        let v462 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v461 |> unbox
                        let v463 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v464 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v462 v463 
                        let v465 : string = "class=\"grid flex-1 divide-y-[1px] divide-gray-500/[.10]\""
                        let v466 : string = " " + v465 + v377 + ""
                        let v467 : (unit -> leptos_dom_Fragment) = method248()
                        let v468 : (unit -> leptos_dom_Fragment) = method249(v384)
                        let v469 : string = "$0"
                        let v470 : (unit -> string) = closure272()
                        let v471 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v470 v469 
                        let v472 : string = "$0"
                        let v473 : (unit -> string) = closure273()
                        let v474 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v473 v472 
                        let v475 : string = "$0"
                        let v476 : (unit -> string) = closure235()
                        let v477 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v475 
                        let v478 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v477(()) + \" \" + &v474(()) + \" \" + &v471(())"
                        let v479 : string = " " + v478 + v377 + ""
                        let v480 : string = "$0"
                        let v481 : (unit -> string) = closure236()
                        let v482 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v481 v480 
                        let v483 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v484 : string = " " + v483 + v377 + ""
                        let v485 : leptos_dom_Fragment = v467 ()
                        let v486 : string = "leptos::prelude::AnyView::from($0)"
                        let v487 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v485 v486 
                        let v488 : string = "dt"
                        let v489 : string = "<" + v488 + " " + v484 + ">move || { v487 }</" + v488 + ">"
                        let v490 : string = "leptos::prelude::view! { " + v489 + " }"
                        let v491 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v490 
                        let v492 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v491 |> unbox
                        let v493 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v494 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v492 v493 
                        let v495 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v482(())"
                        let v496 : string = " " + v495 + v377 + ""
                        let v497 : leptos_dom_Fragment = v468 ()
                        let v498 : string = "leptos::prelude::AnyView::from($0)"
                        let v499 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v497 v498 
                        let v500 : string = "dd"
                        let v501 : string = "<" + v500 + " " + v496 + ">move || { v499 }</" + v500 + ">"
                        let v502 : string = "leptos::prelude::view! { " + v501 + " }"
                        let v503 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v502 
                        let v504 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v503 |> unbox
                        let v505 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v506 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v504 v505 
                        let v507 : string = "v506"
                        let v508 : string = v507 + v377 
                        let v509 : string = v508 + v377 
                        let v510 : string = "v494"
                        let v511 : string = v510 + v450 
                        let v512 : string = v511 + v509 
                        let v513 : string = "vec![" + v512 + "]"
                        let v514 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v513 
                        let v515 : string = "leptos::prelude::Fragment::new($0)"
                        let v516 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v514 v515 
                        let v517 : string = "leptos::prelude::AnyView::from($0)"
                        let v518 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v516 v517 
                        let v519 : string = "dl"
                        let v520 : string = "<" + v519 + " " + v479 + ">move || { v518 }</" + v519 + ">"
                        let v521 : string = "leptos::prelude::view! { " + v520 + " }"
                        let v522 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v521 
                        let v523 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v522 |> unbox
                        let v524 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v525 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v523 v524 
                        let v526 : (unit -> leptos_dom_Fragment) = method250()
                        let v527 : (unit -> leptos_dom_Fragment) = method251(v387, v388, v389, v390, v391, v392, v393, v394, v395, v396, v397, v398)
                        let v528 : string = "$0"
                        let v529 : (unit -> string) = closure276()
                        let v530 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v529 v528 
                        let v531 : string = "$0"
                        let v532 : (unit -> string) = closure277()
                        let v533 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v532 v531 
                        let v534 : string = "$0"
                        let v535 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v534 
                        let v536 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v535(()) + \" \" + &v533(()) + \" \" + &v530(())"
                        let v537 : string = " " + v536 + v377 + ""
                        let v538 : string = "$0"
                        let v539 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v481 v538 
                        let v540 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v541 : string = " " + v540 + v377 + ""
                        let v542 : leptos_dom_Fragment = v526 ()
                        let v543 : string = "leptos::prelude::AnyView::from($0)"
                        let v544 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v542 v543 
                        let v545 : string = "<" + v488 + " " + v541 + ">move || { v544 }</" + v488 + ">"
                        let v546 : string = "leptos::prelude::view! { " + v545 + " }"
                        let v547 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v546 
                        let v548 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v547 |> unbox
                        let v549 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v550 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v548 v549 
                        let v551 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v539(())"
                        let v552 : string = " " + v551 + v377 + ""
                        let v553 : leptos_dom_Fragment = v527 ()
                        let v554 : string = "leptos::prelude::AnyView::from($0)"
                        let v555 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v553 v554 
                        let v556 : string = "<" + v500 + " " + v552 + ">move || { v555 }</" + v500 + ">"
                        let v557 : string = "leptos::prelude::view! { " + v556 + " }"
                        let v558 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v557 
                        let v559 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v558 |> unbox
                        let v560 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v561 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v559 v560 
                        let v562 : string = "v561"
                        let v563 : string = v562 + v377 
                        let v564 : string = v563 + v377 
                        let v565 : string = "v550"
                        let v566 : string = v565 + v450 
                        let v567 : string = v566 + v564 
                        let v568 : string = "vec![" + v567 + "]"
                        let v569 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v568 
                        let v570 : string = "leptos::prelude::Fragment::new($0)"
                        let v571 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v569 v570 
                        let v572 : string = "leptos::prelude::AnyView::from($0)"
                        let v573 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v571 v572 
                        let v574 : string = "<" + v519 + " " + v537 + ">move || { v573 }</" + v519 + ">"
                        let v575 : string = "leptos::prelude::view! { " + v574 + " }"
                        let v576 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v575 
                        let v577 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v576 |> unbox
                        let v578 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v579 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v577 v578 
                        let v580 : (unit -> leptos_dom_Fragment) = method252()
                        let v581 : (unit -> leptos_dom_Fragment) = method253(v387, v388, v389, v390, v391, v392, v393, v394, v395, v396, v397, v398)
                        let v582 : string = "$0"
                        let v583 : (unit -> string) = closure280()
                        let v584 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v583 v582 
                        let v585 : string = "$0"
                        let v586 : (unit -> string) = closure281()
                        let v587 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v586 v585 
                        let v588 : string = "$0"
                        let v589 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v588 
                        let v590 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v589(()) + \" \" + &v587(()) + \" \" + &v584(())"
                        let v591 : string = " " + v590 + v377 + ""
                        let v592 : string = "$0"
                        let v593 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v481 v592 
                        let v594 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v595 : string = " " + v594 + v377 + ""
                        let v596 : leptos_dom_Fragment = v580 ()
                        let v597 : string = "leptos::prelude::AnyView::from($0)"
                        let v598 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v596 v597 
                        let v599 : string = "<" + v488 + " " + v595 + ">move || { v598 }</" + v488 + ">"
                        let v600 : string = "leptos::prelude::view! { " + v599 + " }"
                        let v601 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v600 
                        let v602 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v601 |> unbox
                        let v603 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v604 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v602 v603 
                        let v605 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v593(())"
                        let v606 : string = " " + v605 + v377 + ""
                        let v607 : leptos_dom_Fragment = v581 ()
                        let v608 : string = "leptos::prelude::AnyView::from($0)"
                        let v609 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v607 v608 
                        let v610 : string = "<" + v500 + " " + v606 + ">move || { v609 }</" + v500 + ">"
                        let v611 : string = "leptos::prelude::view! { " + v610 + " }"
                        let v612 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v611 
                        let v613 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v612 |> unbox
                        let v614 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v615 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v613 v614 
                        let v616 : string = "v615"
                        let v617 : string = v616 + v377 
                        let v618 : string = v617 + v377 
                        let v619 : string = "v604"
                        let v620 : string = v619 + v450 
                        let v621 : string = v620 + v618 
                        let v622 : string = "vec![" + v621 + "]"
                        let v623 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v622 
                        let v624 : string = "leptos::prelude::Fragment::new($0)"
                        let v625 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v623 v624 
                        let v626 : string = "leptos::prelude::AnyView::from($0)"
                        let v627 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v625 v626 
                        let v628 : string = "<" + v519 + " " + v591 + ">move || { v627 }</" + v519 + ">"
                        let v629 : string = "leptos::prelude::view! { " + v628 + " }"
                        let v630 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v629 
                        let v631 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v630 |> unbox
                        let v632 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v633 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v631 v632 
                        let v634 : (unit -> leptos_dom_Fragment) = method254()
                        let v635 : (unit -> leptos_dom_Fragment) = method255(v387, v388, v389, v390, v391, v392, v393, v394, v395, v396, v397, v398)
                        let v636 : string = "$0"
                        let v637 : (unit -> string) = closure284()
                        let v638 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v637 v636 
                        let v639 : string = "$0"
                        let v640 : (unit -> string) = closure285()
                        let v641 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v640 v639 
                        let v642 : string = "$0"
                        let v643 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v642 
                        let v644 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v643(()) + \" \" + &v641(()) + \" \" + &v638(())"
                        let v645 : string = " " + v644 + v377 + ""
                        let v646 : string = "$0"
                        let v647 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v481 v646 
                        let v648 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v649 : string = " " + v648 + v377 + ""
                        let v650 : leptos_dom_Fragment = v634 ()
                        let v651 : string = "leptos::prelude::AnyView::from($0)"
                        let v652 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v650 v651 
                        let v653 : string = "<" + v488 + " " + v649 + ">move || { v652 }</" + v488 + ">"
                        let v654 : string = "leptos::prelude::view! { " + v653 + " }"
                        let v655 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v654 
                        let v656 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v655 |> unbox
                        let v657 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v658 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v656 v657 
                        let v659 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v647(())"
                        let v660 : string = " " + v659 + v377 + ""
                        let v661 : leptos_dom_Fragment = v635 ()
                        let v662 : string = "leptos::prelude::AnyView::from($0)"
                        let v663 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v661 v662 
                        let v664 : string = "<" + v500 + " " + v660 + ">move || { v663 }</" + v500 + ">"
                        let v665 : string = "leptos::prelude::view! { " + v664 + " }"
                        let v666 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v665 
                        let v667 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v666 |> unbox
                        let v668 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v669 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v667 v668 
                        let v670 : string = "v669"
                        let v671 : string = v670 + v377 
                        let v672 : string = v671 + v377 
                        let v673 : string = "v658"
                        let v674 : string = v673 + v450 
                        let v675 : string = v674 + v672 
                        let v676 : string = "vec![" + v675 + "]"
                        let v677 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v676 
                        let v678 : string = "leptos::prelude::Fragment::new($0)"
                        let v679 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v677 v678 
                        let v680 : string = "leptos::prelude::AnyView::from($0)"
                        let v681 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v679 v680 
                        let v682 : string = "<" + v519 + " " + v645 + ">move || { v681 }</" + v519 + ">"
                        let v683 : string = "leptos::prelude::view! { " + v682 + " }"
                        let v684 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v683 
                        let v685 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v684 |> unbox
                        let v686 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v687 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v685 v686 
                        let v688 : (unit -> leptos_dom_Fragment) = method256()
                        let v689 : (unit -> leptos_dom_Fragment) = method257(v387, v388, v389, v390, v391, v392, v393, v394, v395, v396, v397, v398)
                        let v690 : string = "$0"
                        let v691 : (unit -> string) = closure299()
                        let v692 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v691 v690 
                        let v693 : string = "$0"
                        let v694 : (unit -> string) = closure300()
                        let v695 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v694 v693 
                        let v696 : string = "$0"
                        let v697 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v696 
                        let v698 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v697(()) + \" \" + &v695(()) + \" \" + &v692(())"
                        let v699 : string = " " + v698 + v377 + ""
                        let v700 : string = "$0"
                        let v701 : (unit -> string) = closure301()
                        let v702 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v701 v700 
                        let v703 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v704 : string = " " + v703 + v377 + ""
                        let v705 : leptos_dom_Fragment = v688 ()
                        let v706 : string = "leptos::prelude::AnyView::from($0)"
                        let v707 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v705 v706 
                        let v708 : string = "<" + v488 + " " + v704 + ">move || { v707 }</" + v488 + ">"
                        let v709 : string = "leptos::prelude::view! { " + v708 + " }"
                        let v710 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v709 
                        let v711 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v710 |> unbox
                        let v712 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v713 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v711 v712 
                        let v714 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v702(())"
                        let v715 : string = " " + v714 + v377 + ""
                        let v716 : leptos_dom_Fragment = v689 ()
                        let v717 : string = "leptos::prelude::AnyView::from($0)"
                        let v718 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v716 v717 
                        let v719 : string = "<" + v500 + " " + v715 + ">move || { v718 }</" + v500 + ">"
                        let v720 : string = "leptos::prelude::view! { " + v719 + " }"
                        let v721 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v720 
                        let v722 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v721 |> unbox
                        let v723 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v724 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v722 v723 
                        let v725 : string = "v724"
                        let v726 : string = v725 + v377 
                        let v727 : string = v726 + v377 
                        let v728 : string = "v713"
                        let v729 : string = v728 + v450 
                        let v730 : string = v729 + v727 
                        let v731 : string = "vec![" + v730 + "]"
                        let v732 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v731 
                        let v733 : string = "leptos::prelude::Fragment::new($0)"
                        let v734 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v732 v733 
                        let v735 : string = "leptos::prelude::AnyView::from($0)"
                        let v736 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v734 v735 
                        let v737 : string = "<" + v519 + " " + v699 + ">move || { v736 }</" + v519 + ">"
                        let v738 : string = "leptos::prelude::view! { " + v737 + " }"
                        let v739 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v738 
                        let v740 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v739 |> unbox
                        let v741 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v742 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v740 v741 
                        let v743 : (unit -> leptos_dom_Fragment) = method262()
                        let v744 : (unit -> leptos_dom_Fragment) = method263(v387, v388, v389, v390, v391, v392, v393, v394, v395, v396, v397, v398)
                        let v745 : string = "$0"
                        let v746 : (unit -> string) = closure304()
                        let v747 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v746 v745 
                        let v748 : string = "$0"
                        let v749 : (unit -> string) = closure305()
                        let v750 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v749 v748 
                        let v751 : string = "$0"
                        let v752 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v751 
                        let v753 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v752(()) + \" \" + &v750(()) + \" \" + &v747(())"
                        let v754 : string = " " + v753 + v377 + ""
                        let v755 : string = "$0"
                        let v756 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v481 v755 
                        let v757 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v758 : string = " " + v757 + v377 + ""
                        let v759 : leptos_dom_Fragment = v743 ()
                        let v760 : string = "leptos::prelude::AnyView::from($0)"
                        let v761 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v759 v760 
                        let v762 : string = "<" + v488 + " " + v758 + ">move || { v761 }</" + v488 + ">"
                        let v763 : string = "leptos::prelude::view! { " + v762 + " }"
                        let v764 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v763 
                        let v765 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v764 |> unbox
                        let v766 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v767 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v765 v766 
                        let v768 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v756(())"
                        let v769 : string = " " + v768 + v377 + ""
                        let v770 : leptos_dom_Fragment = v744 ()
                        let v771 : string = "leptos::prelude::AnyView::from($0)"
                        let v772 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v770 v771 
                        let v773 : string = "<" + v500 + " " + v769 + ">move || { v772 }</" + v500 + ">"
                        let v774 : string = "leptos::prelude::view! { " + v773 + " }"
                        let v775 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v774 
                        let v776 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v775 |> unbox
                        let v777 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v778 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v776 v777 
                        let v779 : string = "v778"
                        let v780 : string = v779 + v377 
                        let v781 : string = v780 + v377 
                        let v782 : string = "v767"
                        let v783 : string = v782 + v450 
                        let v784 : string = v783 + v781 
                        let v785 : string = "vec![" + v784 + "]"
                        let v786 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v785 
                        let v787 : string = "leptos::prelude::Fragment::new($0)"
                        let v788 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v786 v787 
                        let v789 : string = "leptos::prelude::AnyView::from($0)"
                        let v790 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v788 v789 
                        let v791 : string = "<" + v519 + " " + v754 + ">move || { v790 }</" + v519 + ">"
                        let v792 : string = "leptos::prelude::view! { " + v791 + " }"
                        let v793 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v792 
                        let v794 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v793 |> unbox
                        let v795 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v796 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v794 v795 
                        let v797 : (unit -> leptos_dom_Fragment) = method264()
                        let v798 : (unit -> leptos_dom_Fragment) = method265(v387, v388, v389, v390, v391, v392, v393, v394, v395, v396, v397, v398)
                        let v799 : string = "$0"
                        let v800 : (unit -> string) = closure308()
                        let v801 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v800 v799 
                        let v802 : string = "$0"
                        let v803 : (unit -> string) = closure309()
                        let v804 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v803 v802 
                        let v805 : string = "$0"
                        let v806 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v805 
                        let v807 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v806(()) + \" \" + &v804(()) + \" \" + &v801(())"
                        let v808 : string = " " + v807 + v377 + ""
                        let v809 : string = "$0"
                        let v810 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v481 v809 
                        let v811 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v812 : string = " " + v811 + v377 + ""
                        let v813 : leptos_dom_Fragment = v797 ()
                        let v814 : string = "leptos::prelude::AnyView::from($0)"
                        let v815 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v813 v814 
                        let v816 : string = "<" + v488 + " " + v812 + ">move || { v815 }</" + v488 + ">"
                        let v817 : string = "leptos::prelude::view! { " + v816 + " }"
                        let v818 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v817 
                        let v819 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v818 |> unbox
                        let v820 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v821 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v819 v820 
                        let v822 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v810(())"
                        let v823 : string = " " + v822 + v377 + ""
                        let v824 : leptos_dom_Fragment = v798 ()
                        let v825 : string = "leptos::prelude::AnyView::from($0)"
                        let v826 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v824 v825 
                        let v827 : string = "<" + v500 + " " + v823 + ">move || { v826 }</" + v500 + ">"
                        let v828 : string = "leptos::prelude::view! { " + v827 + " }"
                        let v829 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v828 
                        let v830 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v829 |> unbox
                        let v831 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v832 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v830 v831 
                        let v833 : string = "v832"
                        let v834 : string = v833 + v377 
                        let v835 : string = v834 + v377 
                        let v836 : string = "v821"
                        let v837 : string = v836 + v450 
                        let v838 : string = v837 + v835 
                        let v839 : string = "vec![" + v838 + "]"
                        let v840 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v839 
                        let v841 : string = "leptos::prelude::Fragment::new($0)"
                        let v842 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v840 v841 
                        let v843 : string = "leptos::prelude::AnyView::from($0)"
                        let v844 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v842 v843 
                        let v845 : string = "<" + v519 + " " + v808 + ">move || { v844 }</" + v519 + ">"
                        let v846 : string = "leptos::prelude::view! { " + v845 + " }"
                        let v847 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v846 
                        let v848 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v847 |> unbox
                        let v849 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v850 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v848 v849 
                        let v851 : (unit -> leptos_dom_Fragment) = method266()
                        let v852 : (unit -> leptos_dom_Fragment) = method267(v387, v388, v389, v390, v391, v392, v393, v394, v395, v396, v397, v398)
                        let v853 : string = "$0"
                        let v854 : (unit -> string) = closure312()
                        let v855 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v854 v853 
                        let v856 : string = "$0"
                        let v857 : (unit -> string) = closure313()
                        let v858 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v857 v856 
                        let v859 : string = "$0"
                        let v860 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v859 
                        let v861 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v860(()) + \" \" + &v858(()) + \" \" + &v855(())"
                        let v862 : string = " " + v861 + v377 + ""
                        let v863 : string = "$0"
                        let v864 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v481 v863 
                        let v865 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v866 : string = " " + v865 + v377 + ""
                        let v867 : leptos_dom_Fragment = v851 ()
                        let v868 : string = "leptos::prelude::AnyView::from($0)"
                        let v869 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v867 v868 
                        let v870 : string = "<" + v488 + " " + v866 + ">move || { v869 }</" + v488 + ">"
                        let v871 : string = "leptos::prelude::view! { " + v870 + " }"
                        let v872 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v871 
                        let v873 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v872 |> unbox
                        let v874 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v875 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v873 v874 
                        let v876 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v864(())"
                        let v877 : string = " " + v876 + v377 + ""
                        let v878 : leptos_dom_Fragment = v852 ()
                        let v879 : string = "leptos::prelude::AnyView::from($0)"
                        let v880 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v878 v879 
                        let v881 : string = "<" + v500 + " " + v877 + ">move || { v880 }</" + v500 + ">"
                        let v882 : string = "leptos::prelude::view! { " + v881 + " }"
                        let v883 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v882 
                        let v884 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v883 |> unbox
                        let v885 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v886 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v884 v885 
                        let v887 : string = "v886"
                        let v888 : string = v887 + v377 
                        let v889 : string = v888 + v377 
                        let v890 : string = "v875"
                        let v891 : string = v890 + v450 
                        let v892 : string = v891 + v889 
                        let v893 : string = "vec![" + v892 + "]"
                        let v894 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v893 
                        let v895 : string = "leptos::prelude::Fragment::new($0)"
                        let v896 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v894 v895 
                        let v897 : string = "leptos::prelude::AnyView::from($0)"
                        let v898 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v896 v897 
                        let v899 : string = "<" + v519 + " " + v862 + ">move || { v898 }</" + v519 + ">"
                        let v900 : string = "leptos::prelude::view! { " + v899 + " }"
                        let v901 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v900 
                        let v902 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v901 |> unbox
                        let v903 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v904 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v902 v903 
                        let v905 : (unit -> leptos_dom_Fragment) = method268()
                        let v906 : (unit -> leptos_dom_Fragment) = method269(v387, v388, v389, v390, v391, v392, v393, v394, v395, v396, v397, v398)
                        let v907 : string = "$0"
                        let v908 : (unit -> string) = closure316()
                        let v909 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v908 v907 
                        let v910 : string = "$0"
                        let v911 : (unit -> string) = closure317()
                        let v912 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v911 v910 
                        let v913 : string = "$0"
                        let v914 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v913 
                        let v915 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v914(()) + \" \" + &v912(()) + \" \" + &v909(())"
                        let v916 : string = " " + v915 + v377 + ""
                        let v917 : string = "$0"
                        let v918 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v481 v917 
                        let v919 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v920 : string = " " + v919 + v377 + ""
                        let v921 : leptos_dom_Fragment = v905 ()
                        let v922 : string = "leptos::prelude::AnyView::from($0)"
                        let v923 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v921 v922 
                        let v924 : string = "<" + v488 + " " + v920 + ">move || { v923 }</" + v488 + ">"
                        let v925 : string = "leptos::prelude::view! { " + v924 + " }"
                        let v926 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v925 
                        let v927 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v926 |> unbox
                        let v928 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v929 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v927 v928 
                        let v930 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v918(())"
                        let v931 : string = " " + v930 + v377 + ""
                        let v932 : leptos_dom_Fragment = v906 ()
                        let v933 : string = "leptos::prelude::AnyView::from($0)"
                        let v934 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v932 v933 
                        let v935 : string = "<" + v500 + " " + v931 + ">move || { v934 }</" + v500 + ">"
                        let v936 : string = "leptos::prelude::view! { " + v935 + " }"
                        let v937 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v936 
                        let v938 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v937 |> unbox
                        let v939 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v940 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v938 v939 
                        let v941 : string = "v940"
                        let v942 : string = v941 + v377 
                        let v943 : string = v942 + v377 
                        let v944 : string = "v929"
                        let v945 : string = v944 + v450 
                        let v946 : string = v945 + v943 
                        let v947 : string = "vec![" + v946 + "]"
                        let v948 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v947 
                        let v949 : string = "leptos::prelude::Fragment::new($0)"
                        let v950 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v948 v949 
                        let v951 : string = "leptos::prelude::AnyView::from($0)"
                        let v952 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v950 v951 
                        let v953 : string = "<" + v519 + " " + v916 + ">move || { v952 }</" + v519 + ">"
                        let v954 : string = "leptos::prelude::view! { " + v953 + " }"
                        let v955 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v954 
                        let v956 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v955 |> unbox
                        let v957 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v958 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v956 v957 
                        let v959 : (unit -> leptos_dom_Fragment) = method270()
                        let v960 : (unit -> leptos_dom_Fragment) = method271(v387, v388, v389, v390, v391, v392, v393, v394, v395, v396, v397, v398)
                        let v961 : string = "$0"
                        let v962 : (unit -> string) = closure320()
                        let v963 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v962 v961 
                        let v964 : string = "$0"
                        let v965 : (unit -> string) = closure321()
                        let v966 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v965 v964 
                        let v967 : string = "$0"
                        let v968 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v967 
                        let v969 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v968(()) + \" \" + &v966(()) + \" \" + &v963(())"
                        let v970 : string = " " + v969 + v377 + ""
                        let v971 : string = "$0"
                        let v972 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v481 v971 
                        let v973 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v974 : string = " " + v973 + v377 + ""
                        let v975 : leptos_dom_Fragment = v959 ()
                        let v976 : string = "leptos::prelude::AnyView::from($0)"
                        let v977 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v975 v976 
                        let v978 : string = "<" + v488 + " " + v974 + ">move || { v977 }</" + v488 + ">"
                        let v979 : string = "leptos::prelude::view! { " + v978 + " }"
                        let v980 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v979 
                        let v981 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v980 |> unbox
                        let v982 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v983 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v981 v982 
                        let v984 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v972(())"
                        let v985 : string = " " + v984 + v377 + ""
                        let v986 : leptos_dom_Fragment = v960 ()
                        let v987 : string = "leptos::prelude::AnyView::from($0)"
                        let v988 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v986 v987 
                        let v989 : string = "<" + v500 + " " + v985 + ">move || { v988 }</" + v500 + ">"
                        let v990 : string = "leptos::prelude::view! { " + v989 + " }"
                        let v991 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v990 
                        let v992 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v991 |> unbox
                        let v993 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v994 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v992 v993 
                        let v995 : string = "v994"
                        let v996 : string = v995 + v377 
                        let v997 : string = v996 + v377 
                        let v998 : string = "v983"
                        let v999 : string = v998 + v450 
                        let v1000 : string = v999 + v997 
                        let v1001 : string = "vec![" + v1000 + "]"
                        let v1002 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1001 
                        let v1003 : string = "leptos::prelude::Fragment::new($0)"
                        let v1004 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1002 v1003 
                        let v1005 : string = "leptos::prelude::AnyView::from($0)"
                        let v1006 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1004 v1005 
                        let v1007 : string = "<" + v519 + " " + v970 + ">move || { v1006 }</" + v519 + ">"
                        let v1008 : string = "leptos::prelude::view! { " + v1007 + " }"
                        let v1009 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1008 
                        let v1010 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v1009 |> unbox
                        let v1011 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1012 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1010 v1011 
                        let v1013 : (unit -> leptos_dom_Fragment) = method272()
                        let v1014 : (unit -> leptos_dom_Fragment) = method273(v387, v388, v389, v390, v391, v392, v393, v394, v395, v396, v397, v398)
                        let v1015 : string = "$0"
                        let v1016 : (unit -> string) = closure324()
                        let v1017 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1016 v1015 
                        let v1018 : string = "$0"
                        let v1019 : (unit -> string) = closure325()
                        let v1020 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1019 v1018 
                        let v1021 : string = "$0"
                        let v1022 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v1021 
                        let v1023 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v1022(()) + \" \" + &v1020(()) + \" \" + &v1017(())"
                        let v1024 : string = " " + v1023 + v377 + ""
                        let v1025 : string = "$0"
                        let v1026 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v481 v1025 
                        let v1027 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v1028 : string = " " + v1027 + v377 + ""
                        let v1029 : leptos_dom_Fragment = v1013 ()
                        let v1030 : string = "leptos::prelude::AnyView::from($0)"
                        let v1031 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1029 v1030 
                        let v1032 : string = "<" + v488 + " " + v1028 + ">move || { v1031 }</" + v488 + ">"
                        let v1033 : string = "leptos::prelude::view! { " + v1032 + " }"
                        let v1034 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1033 
                        let v1035 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v1034 |> unbox
                        let v1036 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1037 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1035 v1036 
                        let v1038 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v1026(())"
                        let v1039 : string = " " + v1038 + v377 + ""
                        let v1040 : leptos_dom_Fragment = v1014 ()
                        let v1041 : string = "leptos::prelude::AnyView::from($0)"
                        let v1042 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1040 v1041 
                        let v1043 : string = "<" + v500 + " " + v1039 + ">move || { v1042 }</" + v500 + ">"
                        let v1044 : string = "leptos::prelude::view! { " + v1043 + " }"
                        let v1045 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1044 
                        let v1046 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v1045 |> unbox
                        let v1047 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1048 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1046 v1047 
                        let v1049 : string = "v1048"
                        let v1050 : string = v1049 + v377 
                        let v1051 : string = v1050 + v377 
                        let v1052 : string = "v1037"
                        let v1053 : string = v1052 + v450 
                        let v1054 : string = v1053 + v1051 
                        let v1055 : string = "vec![" + v1054 + "]"
                        let v1056 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1055 
                        let v1057 : string = "leptos::prelude::Fragment::new($0)"
                        let v1058 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1056 v1057 
                        let v1059 : string = "leptos::prelude::AnyView::from($0)"
                        let v1060 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1058 v1059 
                        let v1061 : string = "<" + v519 + " " + v1024 + ">move || { v1060 }</" + v519 + ">"
                        let v1062 : string = "leptos::prelude::view! { " + v1061 + " }"
                        let v1063 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1062 
                        let v1064 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v1063 |> unbox
                        let v1065 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1066 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1064 v1065 
                        let v1067 : (unit -> leptos_dom_Fragment) = method274()
                        let v1068 : (unit -> leptos_dom_Fragment) = method275(v387, v388, v389, v390, v391, v392, v393, v394, v395, v396, v397, v398)
                        let v1069 : string = "$0"
                        let v1070 : (unit -> string) = closure328()
                        let v1071 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1070 v1069 
                        let v1072 : string = "$0"
                        let v1073 : (unit -> string) = closure329()
                        let v1074 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1073 v1072 
                        let v1075 : string = "$0"
                        let v1076 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v1075 
                        let v1077 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v1076(()) + \" \" + &v1074(()) + \" \" + &v1071(())"
                        let v1078 : string = " " + v1077 + v377 + ""
                        let v1079 : string = "$0"
                        let v1080 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v481 v1079 
                        let v1081 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v1082 : string = " " + v1081 + v377 + ""
                        let v1083 : leptos_dom_Fragment = v1067 ()
                        let v1084 : string = "leptos::prelude::AnyView::from($0)"
                        let v1085 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1083 v1084 
                        let v1086 : string = "<" + v488 + " " + v1082 + ">move || { v1085 }</" + v488 + ">"
                        let v1087 : string = "leptos::prelude::view! { " + v1086 + " }"
                        let v1088 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1087 
                        let v1089 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v1088 |> unbox
                        let v1090 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1091 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1089 v1090 
                        let v1092 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v1080(())"
                        let v1093 : string = " " + v1092 + v377 + ""
                        let v1094 : leptos_dom_Fragment = v1068 ()
                        let v1095 : string = "leptos::prelude::AnyView::from($0)"
                        let v1096 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1094 v1095 
                        let v1097 : string = "<" + v500 + " " + v1093 + ">move || { v1096 }</" + v500 + ">"
                        let v1098 : string = "leptos::prelude::view! { " + v1097 + " }"
                        let v1099 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1098 
                        let v1100 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v1099 |> unbox
                        let v1101 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1102 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1100 v1101 
                        let v1103 : string = "v1102"
                        let v1104 : string = v1103 + v377 
                        let v1105 : string = v1104 + v377 
                        let v1106 : string = "v1091"
                        let v1107 : string = v1106 + v450 
                        let v1108 : string = v1107 + v1105 
                        let v1109 : string = "vec![" + v1108 + "]"
                        let v1110 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1109 
                        let v1111 : string = "leptos::prelude::Fragment::new($0)"
                        let v1112 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1110 v1111 
                        let v1113 : string = "leptos::prelude::AnyView::from($0)"
                        let v1114 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1112 v1113 
                        let v1115 : string = "<" + v519 + " " + v1078 + ">move || { v1114 }</" + v519 + ">"
                        let v1116 : string = "leptos::prelude::view! { " + v1115 + " }"
                        let v1117 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1116 
                        let v1118 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v1117 |> unbox
                        let v1119 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1120 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1118 v1119 
                        let v1121 : uint64 = System.Convert.ToUInt64 v398.Length
                        let v1122 : bool = v1121 = 0UL
                        let v1181 : leptos_prelude_AnyView_ =
                            if v1122 then
                                let v1123 : string = "vec![" + v377 + "]"
                                let v1124 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1123 
                                let v1125 : string = "leptos::prelude::IntoAny::into_any($0)"
                                let v1126 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1124 v1125 
                                v1126
                            else
                                let v1127 : (unit -> leptos_dom_Fragment) = method276()
                                let v1128 : (unit -> leptos_dom_Fragment) = method277(v387, v388, v389, v390, v391, v392, v393, v394, v395, v396, v397, v398)
                                let v1129 : string = "$0"
                                let v1130 : (unit -> string) = closure334()
                                let v1131 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1130 v1129 
                                let v1132 : string = "$0"
                                let v1133 : (unit -> string) = closure335()
                                let v1134 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1133 v1132 
                                let v1135 : string = "$0"
                                let v1136 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v1135 
                                let v1137 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v1136(()) + \" \" + &v1134(()) + \" \" + &v1131(())"
                                let v1138 : string = " " + v1137 + v377 + ""
                                let v1139 : string = "$0"
                                let v1140 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v481 v1139 
                                let v1141 : string = "class=\"[font-size:12px] text-gray-400\""
                                let v1142 : string = " " + v1141 + v377 + ""
                                let v1143 : leptos_dom_Fragment = v1127 ()
                                let v1144 : string = "leptos::prelude::AnyView::from($0)"
                                let v1145 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1143 v1144 
                                let v1146 : string = "<" + v488 + " " + v1142 + ">move || { v1145 }</" + v488 + ">"
                                let v1147 : string = "leptos::prelude::view! { " + v1146 + " }"
                                let v1148 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1147 
                                let v1149 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v1148 |> unbox
                                let v1150 : string = "leptos::prelude::IntoAny::into_any($0)"
                                let v1151 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1149 v1150 
                                let v1152 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v1140(())"
                                let v1153 : string = " " + v1152 + v377 + ""
                                let v1154 : leptos_dom_Fragment = v1128 ()
                                let v1155 : string = "leptos::prelude::AnyView::from($0)"
                                let v1156 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1154 v1155 
                                let v1157 : string = "<" + v500 + " " + v1153 + ">move || { v1156 }</" + v500 + ">"
                                let v1158 : string = "leptos::prelude::view! { " + v1157 + " }"
                                let v1159 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1158 
                                let v1160 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v1159 |> unbox
                                let v1161 : string = "leptos::prelude::IntoAny::into_any($0)"
                                let v1162 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1160 v1161 
                                let v1163 : string = "v1162"
                                let v1164 : string = v1163 + v377 
                                let v1165 : string = v1164 + v377 
                                let v1166 : string = "v1151"
                                let v1167 : string = v1166 + v450 
                                let v1168 : string = v1167 + v1165 
                                let v1169 : string = "vec![" + v1168 + "]"
                                let v1170 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1169 
                                let v1171 : string = "leptos::prelude::Fragment::new($0)"
                                let v1172 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1170 v1171 
                                let v1173 : string = "leptos::prelude::AnyView::from($0)"
                                let v1174 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1172 v1173 
                                let v1175 : string = "<" + v519 + " " + v1138 + ">move || { v1174 }</" + v519 + ">"
                                let v1176 : string = "leptos::prelude::view! { " + v1175 + " }"
                                let v1177 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1176 
                                let v1178 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v1177 |> unbox
                                let v1179 : string = "leptos::prelude::IntoAny::into_any($0)"
                                let v1180 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1178 v1179 
                                v1180
                        let v1182 : string = "v1181"
                        let v1183 : string = v1182 + v377 
                        let v1184 : string = v1183 + v377 
                        let v1185 : string = "v1120"
                        let v1186 : string = v1185 + v450 
                        let v1187 : string = v1186 + v1184 
                        let v1188 : string = "v1066"
                        let v1189 : string = v1188 + v450 
                        let v1190 : string = v1189 + v1187 
                        let v1191 : string = "v1012"
                        let v1192 : string = v1191 + v450 
                        let v1193 : string = v1192 + v1190 
                        let v1194 : string = "v958"
                        let v1195 : string = v1194 + v450 
                        let v1196 : string = v1195 + v1193 
                        let v1197 : string = "v904"
                        let v1198 : string = v1197 + v450 
                        let v1199 : string = v1198 + v1196 
                        let v1200 : string = "v850"
                        let v1201 : string = v1200 + v450 
                        let v1202 : string = v1201 + v1199 
                        let v1203 : string = "v796"
                        let v1204 : string = v1203 + v450 
                        let v1205 : string = v1204 + v1202 
                        let v1206 : string = "v742"
                        let v1207 : string = v1206 + v450 
                        let v1208 : string = v1207 + v1205 
                        let v1209 : string = "v687"
                        let v1210 : string = v1209 + v450 
                        let v1211 : string = v1210 + v1208 
                        let v1212 : string = "v633"
                        let v1213 : string = v1212 + v450 
                        let v1214 : string = v1213 + v1211 
                        let v1215 : string = "v579"
                        let v1216 : string = v1215 + v450 
                        let v1217 : string = v1216 + v1214 
                        let v1218 : string = "v525"
                        let v1219 : string = v1218 + v450 
                        let v1220 : string = v1219 + v1217 
                        let v1221 : string = "vec![" + v1220 + "]"
                        let v1222 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1221 
                        let v1223 : string = "leptos::prelude::Fragment::new($0)"
                        let v1224 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1222 v1223 
                        let v1225 : string = "leptos::prelude::AnyView::from($0)"
                        let v1226 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1224 v1225 
                        let v1227 : string = "div"
                        let v1228 : string = "<" + v1227 + " " + v466 + ">move || { v1226 }</" + v1227 + ">"
                        let v1229 : string = "leptos::prelude::view! { " + v1228 + " }"
                        let v1230 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1229 
                        let v1231 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1230 |> unbox
                        let v1232 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1233 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1231 v1232 
                        let v1234 : string = "v1233"
                        let v1235 : string = v1234 + v377 
                        let v1236 : string = v1235 + v377 
                        let v1237 : string = "v464"
                        let v1238 : string = v1237 + v450 
                        let v1239 : string = v1238 + v1236 
                        let v1240 : string = "vec![" + v1239 + "]"
                        let v1241 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1240 
                        let v1242 : string = "leptos::prelude::Fragment::new($0)"
                        let v1243 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1241 v1242 
                        let v1244 : string = "leptos::prelude::AnyView::from($0)"
                        let v1245 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1243 v1244 
                        let v1246 : string = "<" + v1227 + " " + v412 + ">move || { v1245 }</" + v1227 + ">"
                        let v1247 : string = "leptos::prelude::view! { " + v1246 + " }"
                        let v1248 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1247 
                        let v1249 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1248 |> unbox
                        let v1250 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1251 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1249 v1250 
                        let v1252 : string = "true; $0 }).collect::<Vec<_>>()"
                        let v1253 : bool = Fable.Core.RustInterop.emitRustExpr v1251 v1252 
                        let v1254 : string = "_vec_map"
                        let v1255 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1254 
                        let v1256 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1257 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1255 v1256 
                        let v1258 : string = "v1257"
                        let v1259 : string = v1258 + v377 
                        let v1260 : string = v1259 + v377 
                        let v1261 : string = "vec![" + v1260 + "]"
                        let v1262 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1261 
                        let v1263 : string = "leptos::prelude::Fragment::new($0)"
                        let v1264 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1262 v1263 
                        let v1265 : string = "leptos::prelude::AnyView::from($0)"
                        let v1266 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1264 v1265 
                        let v1267 : string = "<" + v1227 + " " + v378 + ">move || { v1266 }</" + v1227 + ">"
                        let v1268 : string = "leptos::prelude::view! { " + v1267 + " }"
                        let v1269 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1268 
                        let v1270 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1269 |> unbox
                        let v1271 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1272 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1270 v1271 
                        v1272
                    else
                        let v1273 : string = "$0.to_vec()"
                        let v1274 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr v365 v1273 
                        let v1275 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                        let v1276 : bool = Fable.Core.RustInterop.emitRustExpr v1274 v1275 
                        let v1277 : string = "x"
                        let struct (v1278 : string, v1279 : unativeint, v1280 : Heap5) = Fable.Core.RustInterop.emitRustExpr () v1277 
                        let v1281 : string = "transaction.tr_render (1)"
                        let v1282 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v1283 : bool = Fable.Core.RustInterop.emitRustExpr v1281 v1282 
                        let v1284 : string = "class=\"odd:bg-gray-50 dark:odd:bg-gray-800/50\""
                        let v1285 : string = ""
                        let v1286 : string = " " + v1284 + v1285 + ""
                        let v1287 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1288 : string = " " + v1287 + v1285 + ""
                        (* run_target_args'
                        let v1293 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1294 : string = "&*$0"
                        let v1295 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1278 v1294 
                        let _run_target_args'_v1293 = v1295 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1296 : string = "&*$0"
                        let v1297 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1278 v1296 
                        let _run_target_args'_v1293 = v1297 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1298 : string = "&*$0"
                        let v1299 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1278 v1298 
                        let _run_target_args'_v1293 = v1299 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1301 : Ref<Str> = v1278 |> unbox<Ref<Str>>
                        let _run_target_args'_v1293 = v1301 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1305 : Ref<Str> = v1278 |> unbox<Ref<Str>>
                        let _run_target_args'_v1293 = v1305 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1309 : Ref<Str> = v1278 |> unbox<Ref<Str>>
                        let _run_target_args'_v1293 = v1309 
                        #endif
#else
                        let v1313 : Ref<Str> = v1278 |> unbox<Ref<Str>>
                        let _run_target_args'_v1293 = v1313 
                        #endif
                        let v1316 : Ref<Str> = _run_target_args'_v1293 
                        (* run_target_args'
                        let v1326 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1327 : string = "String::from($0)"
                        let v1328 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1316 v1327 
                        let _run_target_args'_v1326 = v1328 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1329 : string = "String::from($0)"
                        let v1330 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1316 v1329 
                        let _run_target_args'_v1326 = v1330 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1331 : string = "String::from($0)"
                        let v1332 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1316 v1331 
                        let _run_target_args'_v1326 = v1332 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1334 : std_string_String = v1316 |> unbox<std_string_String>
                        let _run_target_args'_v1326 = v1334 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1338 : std_string_String = v1316 |> unbox<std_string_String>
                        let _run_target_args'_v1326 = v1338 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1342 : std_string_String = v1316 |> unbox<std_string_String>
                        let _run_target_args'_v1326 = v1342 
                        #endif
#else
                        let v1346 : std_string_String = v1316 |> unbox<std_string_String>
                        let _run_target_args'_v1326 = v1346 
                        #endif
                        let v1349 : std_string_String = _run_target_args'_v1326 
                        let v1355 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1356 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1349 v1355 
                        let v1357 : string = "v1356"
                        let v1358 : string = v1357 + v1285 
                        let v1359 : string = v1358 + v1285 
                        let v1360 : string = "vec![" + v1359 + "]"
                        let v1361 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1360 
                        let v1362 : string = "leptos::prelude::Fragment::new($0)"
                        let v1363 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1361 v1362 
                        let v1364 : string = "leptos::prelude::AnyView::from($0)"
                        let v1365 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1363 v1364 
                        let v1366 : string = "td"
                        let v1367 : string = "<" + v1366 + " " + v1288 + ">move || { v1365 }</" + v1366 + ">"
                        let v1368 : string = "leptos::prelude::view! { " + v1367 + " }"
                        let v1369 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1368 
                        let v1370 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1369 |> unbox
                        let v1371 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1372 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1370 v1371 
                        let v1373 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1374 : string = " " + v1373 + v1285 + ""
                        let v1375 : std_string_String = v1280.l5
                        let v1376 : string = "fable_library_rust::String_::fromString($0)"
                        let v1377 : string = Fable.Core.RustInterop.emitRustExpr v1375 v1376 
                        let v1379 : (string -> int64) = int64
                        let v1380 : int64 = v1379 v1377
                        let v1383 : int64 = method204(v1380)
                        let v1384 : int64 = v1383 / 1000L
                        let v1385 : string = "chrono::DateTime::from_timestamp_micros($0)"
                        let v1386 : chrono_DateTime<chrono_Utc> option = Fable.Core.RustInterop.emitRustExpr v1384 v1385 
                        let v1389 : (chrono_DateTime<chrono_Utc> -> US68) = method205()
                        let v1390 : US68 option = v1386 |> Option.map v1389 
                        let v1404 : US68 = US68_1
                        let v1405 : US68 = v1390 |> Option.defaultValue v1404 
                        let v1424 : US31 =
                            match v1405 with
                            | US68_1 -> (* None *)
                                US31_1
                            | US68_0(v1409) -> (* Some *)
                                let v1410 : string = "$0.naive_utc()"
                                let v1411 : chrono_NaiveDateTime = Fable.Core.RustInterop.emitRustExpr v1409 v1410 
                                let v1412 : string = "chrono::offset::TimeZone::from_utc_datetime(&chrono::Local, &$0)"
                                let v1413 : chrono_DateTime<chrono_Local> = Fable.Core.RustInterop.emitRustExpr v1411 v1412 
                                let v1414 : string = "%Y-%m-%d %H:%M:%S"
                                let v1415 : string = "r#\"" + v1414 + "\"#"
                                let v1416 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v1415 
                                let v1417 : string = "$0.format($1).to_string()"
                                let v1418 : std_string_String = Fable.Core.RustInterop.emitRustExpr struct (v1413, v1416) v1417 
                                let v1419 : string = "fable_library_rust::String_::fromString($0)"
                                let v1420 : string = Fable.Core.RustInterop.emitRustExpr v1418 v1419 
                                US31_0(v1420)
                        let v1430 : US69 =
                            match v1424 with
                            | US31_1 -> (* None *)
                                let v1427 : string = "resultm.from_option / Option does not have a value."
                                US69_1(v1427)
                            | US31_0(v1425) -> (* Some *)
                                US69_0(v1425)
                        let v1435 : string =
                            match v1430 with
                            | US69_1(v1432) -> (* Error *)
                                let v1433 : string = "sm'.to_string result / Error: " + v1432 + ""
                                v1433
                            | US69_0(v1431) -> (* Ok *)
                                v1431
                        (* run_target_args'
                        let v1440 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1441 : string = "&*$0"
                        let v1442 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1435 v1441 
                        let _run_target_args'_v1440 = v1442 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1443 : string = "&*$0"
                        let v1444 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1435 v1443 
                        let _run_target_args'_v1440 = v1444 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1445 : string = "&*$0"
                        let v1446 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1435 v1445 
                        let _run_target_args'_v1440 = v1446 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1448 : Ref<Str> = v1435 |> unbox<Ref<Str>>
                        let _run_target_args'_v1440 = v1448 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1452 : Ref<Str> = v1435 |> unbox<Ref<Str>>
                        let _run_target_args'_v1440 = v1452 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1456 : Ref<Str> = v1435 |> unbox<Ref<Str>>
                        let _run_target_args'_v1440 = v1456 
                        #endif
#else
                        let v1460 : Ref<Str> = v1435 |> unbox<Ref<Str>>
                        let _run_target_args'_v1440 = v1460 
                        #endif
                        let v1463 : Ref<Str> = _run_target_args'_v1440 
                        (* run_target_args'
                        let v1473 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1474 : string = "String::from($0)"
                        let v1475 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1463 v1474 
                        let _run_target_args'_v1473 = v1475 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1476 : string = "String::from($0)"
                        let v1477 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1463 v1476 
                        let _run_target_args'_v1473 = v1477 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1478 : string = "String::from($0)"
                        let v1479 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1463 v1478 
                        let _run_target_args'_v1473 = v1479 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1481 : std_string_String = v1463 |> unbox<std_string_String>
                        let _run_target_args'_v1473 = v1481 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1485 : std_string_String = v1463 |> unbox<std_string_String>
                        let _run_target_args'_v1473 = v1485 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1489 : std_string_String = v1463 |> unbox<std_string_String>
                        let _run_target_args'_v1473 = v1489 
                        #endif
#else
                        let v1493 : std_string_String = v1463 |> unbox<std_string_String>
                        let _run_target_args'_v1473 = v1493 
                        #endif
                        let v1496 : std_string_String = _run_target_args'_v1473 
                        let v1502 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1503 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1496 v1502 
                        let v1504 : string = "v1503"
                        let v1505 : string = v1504 + v1285 
                        let v1506 : string = v1505 + v1285 
                        let v1507 : string = "vec![" + v1506 + "]"
                        let v1508 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1507 
                        let v1509 : string = "leptos::prelude::Fragment::new($0)"
                        let v1510 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1508 v1509 
                        let v1511 : string = "leptos::prelude::AnyView::from($0)"
                        let v1512 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1510 v1511 
                        let v1513 : string = "<" + v1366 + " " + v1374 + ">move || { v1512 }</" + v1366 + ">"
                        let v1514 : string = "leptos::prelude::view! { " + v1513 + " }"
                        let v1515 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1514 
                        let v1516 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1515 |> unbox
                        let v1517 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1518 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1516 v1517 
                        let v1519 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1520 : string = " " + v1519 + v1285 + ""
                        let v1521 : std_string_String = v1280.l1
                        let v1522 : string = "fable_library_rust::String_::fromString($0)"
                        let v1523 : string = Fable.Core.RustInterop.emitRustExpr v1521 v1522 
                        (* run_target_args'
                        let v1528 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1529 : string = "&*$0"
                        let v1530 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1523 v1529 
                        let _run_target_args'_v1528 = v1530 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1531 : string = "&*$0"
                        let v1532 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1523 v1531 
                        let _run_target_args'_v1528 = v1532 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1533 : string = "&*$0"
                        let v1534 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1523 v1533 
                        let _run_target_args'_v1528 = v1534 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1536 : Ref<Str> = v1523 |> unbox<Ref<Str>>
                        let _run_target_args'_v1528 = v1536 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1540 : Ref<Str> = v1523 |> unbox<Ref<Str>>
                        let _run_target_args'_v1528 = v1540 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1544 : Ref<Str> = v1523 |> unbox<Ref<Str>>
                        let _run_target_args'_v1528 = v1544 
                        #endif
#else
                        let v1548 : Ref<Str> = v1523 |> unbox<Ref<Str>>
                        let _run_target_args'_v1528 = v1548 
                        #endif
                        let v1551 : Ref<Str> = _run_target_args'_v1528 
                        (* run_target_args'
                        let v1561 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1562 : string = "String::from($0)"
                        let v1563 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1551 v1562 
                        let _run_target_args'_v1561 = v1563 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1564 : string = "String::from($0)"
                        let v1565 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1551 v1564 
                        let _run_target_args'_v1561 = v1565 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1566 : string = "String::from($0)"
                        let v1567 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1551 v1566 
                        let _run_target_args'_v1561 = v1567 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1569 : std_string_String = v1551 |> unbox<std_string_String>
                        let _run_target_args'_v1561 = v1569 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1573 : std_string_String = v1551 |> unbox<std_string_String>
                        let _run_target_args'_v1561 = v1573 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1577 : std_string_String = v1551 |> unbox<std_string_String>
                        let _run_target_args'_v1561 = v1577 
                        #endif
#else
                        let v1581 : std_string_String = v1551 |> unbox<std_string_String>
                        let _run_target_args'_v1561 = v1581 
                        #endif
                        let v1584 : std_string_String = _run_target_args'_v1561 
                        let v1590 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1591 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1584 v1590 
                        let v1592 : string = "v1591"
                        let v1593 : string = v1592 + v1285 
                        let v1594 : string = v1593 + v1285 
                        let v1595 : string = "vec![" + v1594 + "]"
                        let v1596 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1595 
                        let v1597 : string = "leptos::prelude::Fragment::new($0)"
                        let v1598 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1596 v1597 
                        let v1599 : string = "leptos::prelude::AnyView::from($0)"
                        let v1600 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1598 v1599 
                        let v1601 : string = "<" + v1366 + " " + v1520 + ">move || { v1600 }</" + v1366 + ">"
                        let v1602 : string = "leptos::prelude::view! { " + v1601 + " }"
                        let v1603 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1602 
                        let v1604 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1603 |> unbox
                        let v1605 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1606 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1604 v1605 
                        let v1607 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1608 : string = " " + v1607 + v1285 + ""
                        let v1609 : std_string_String = v1280.l2
                        let v1610 : string = "fable_library_rust::String_::fromString($0)"
                        let v1611 : string = Fable.Core.RustInterop.emitRustExpr v1609 v1610 
                        (* run_target_args'
                        let v1616 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1617 : string = "&*$0"
                        let v1618 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1611 v1617 
                        let _run_target_args'_v1616 = v1618 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1619 : string = "&*$0"
                        let v1620 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1611 v1619 
                        let _run_target_args'_v1616 = v1620 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1621 : string = "&*$0"
                        let v1622 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1611 v1621 
                        let _run_target_args'_v1616 = v1622 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1624 : Ref<Str> = v1611 |> unbox<Ref<Str>>
                        let _run_target_args'_v1616 = v1624 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1628 : Ref<Str> = v1611 |> unbox<Ref<Str>>
                        let _run_target_args'_v1616 = v1628 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1632 : Ref<Str> = v1611 |> unbox<Ref<Str>>
                        let _run_target_args'_v1616 = v1632 
                        #endif
#else
                        let v1636 : Ref<Str> = v1611 |> unbox<Ref<Str>>
                        let _run_target_args'_v1616 = v1636 
                        #endif
                        let v1639 : Ref<Str> = _run_target_args'_v1616 
                        (* run_target_args'
                        let v1649 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1650 : string = "String::from($0)"
                        let v1651 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1639 v1650 
                        let _run_target_args'_v1649 = v1651 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1652 : string = "String::from($0)"
                        let v1653 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1639 v1652 
                        let _run_target_args'_v1649 = v1653 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1654 : string = "String::from($0)"
                        let v1655 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1639 v1654 
                        let _run_target_args'_v1649 = v1655 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1657 : std_string_String = v1639 |> unbox<std_string_String>
                        let _run_target_args'_v1649 = v1657 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1661 : std_string_String = v1639 |> unbox<std_string_String>
                        let _run_target_args'_v1649 = v1661 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1665 : std_string_String = v1639 |> unbox<std_string_String>
                        let _run_target_args'_v1649 = v1665 
                        #endif
#else
                        let v1669 : std_string_String = v1639 |> unbox<std_string_String>
                        let _run_target_args'_v1649 = v1669 
                        #endif
                        let v1672 : std_string_String = _run_target_args'_v1649 
                        let v1678 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1679 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1672 v1678 
                        let v1680 : string = "v1679"
                        let v1681 : string = v1680 + v1285 
                        let v1682 : string = v1681 + v1285 
                        let v1683 : string = "vec![" + v1682 + "]"
                        let v1684 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1683 
                        let v1685 : string = "leptos::prelude::Fragment::new($0)"
                        let v1686 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1684 v1685 
                        let v1687 : string = "leptos::prelude::AnyView::from($0)"
                        let v1688 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1686 v1687 
                        let v1689 : string = "<" + v1366 + " " + v1608 + ">move || { v1688 }</" + v1366 + ">"
                        let v1690 : string = "leptos::prelude::view! { " + v1689 + " }"
                        let v1691 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1690 
                        let v1692 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1691 |> unbox
                        let v1693 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1694 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1692 v1693 
                        let v1695 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1696 : string = " " + v1695 + v1285 + ""
                        let v1697 : (struct (std_string_String * std_string_String option) []) = v1280.l7
                        let v1698 : string = "$0.to_vec()"
                        let v1699 : Vec<struct (std_string_String * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr v1697 v1698 
                        let v1700 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                        let v1701 : bool = Fable.Core.RustInterop.emitRustExpr v1699 v1700 
                        let v1702 : string = "x"
                        let struct (v1703 : std_string_String, v1704 : std_string_String option) = Fable.Core.RustInterop.emitRustExpr () v1702 
                        let v1705 : (unit -> leptos_dom_Fragment) = method258(v1703)
                        let v1706 : (unit -> leptos_dom_Fragment) = method259(v1704)
                        let v1707 : string = "$0"
                        let v1708 : (unit -> string) = closure295()
                        let v1709 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1708 v1707 
                        let v1710 : string = "$0"
                        let v1711 : (unit -> string) = closure296()
                        let v1712 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1711 v1710 
                        let v1713 : string = "$0"
                        let v1714 : (unit -> string) = closure297()
                        let v1715 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1714 v1713 
                        let v1716 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v1715(()) + \" \" + &v1712(()) + \" \" + &v1709(())"
                        let v1717 : string = " " + v1716 + v1285 + ""
                        let v1718 : string = "$0"
                        let v1719 : (unit -> string) = closure298()
                        let v1720 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1719 v1718 
                        let v1721 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v1722 : string = " " + v1721 + v1285 + ""
                        let v1723 : leptos_dom_Fragment = v1705 ()
                        let v1724 : string = "leptos::prelude::AnyView::from($0)"
                        let v1725 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1723 v1724 
                        let v1726 : string = "dt"
                        let v1727 : string = "<" + v1726 + " " + v1722 + ">move || { v1725 }</" + v1726 + ">"
                        let v1728 : string = "leptos::prelude::view! { " + v1727 + " }"
                        let v1729 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1728 
                        let v1730 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v1729 |> unbox
                        let v1731 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1732 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1730 v1731 
                        let v1733 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v1720(())"
                        let v1734 : string = " " + v1733 + v1285 + ""
                        let v1735 : leptos_dom_Fragment = v1706 ()
                        let v1736 : string = "leptos::prelude::AnyView::from($0)"
                        let v1737 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1735 v1736 
                        let v1738 : string = "dd"
                        let v1739 : string = "<" + v1738 + " " + v1734 + ">move || { v1737 }</" + v1738 + ">"
                        let v1740 : string = "leptos::prelude::view! { " + v1739 + " }"
                        let v1741 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1740 
                        let v1742 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v1741 |> unbox
                        let v1743 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1744 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1742 v1743 
                        let v1745 : string = "v1744"
                        let v1746 : string = v1745 + v1285 
                        let v1747 : string = v1746 + v1285 
                        let v1748 : string = "v1732"
                        let v1749 : string = ", "
                        let v1750 : string = v1748 + v1749 
                        let v1751 : string = v1750 + v1747 
                        let v1752 : string = "vec![" + v1751 + "]"
                        let v1753 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1752 
                        let v1754 : string = "leptos::prelude::Fragment::new($0)"
                        let v1755 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1753 v1754 
                        let v1756 : string = "leptos::prelude::AnyView::from($0)"
                        let v1757 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1755 v1756 
                        let v1758 : string = "dl"
                        let v1759 : string = "<" + v1758 + " " + v1717 + ">move || { v1757 }</" + v1758 + ">"
                        let v1760 : string = "leptos::prelude::view! { " + v1759 + " }"
                        let v1761 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1760 
                        let v1762 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v1761 |> unbox
                        let v1763 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1764 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1762 v1763 
                        let v1765 : string = "true; $0 }).collect::<Vec<_>>()"
                        let v1766 : bool = Fable.Core.RustInterop.emitRustExpr v1764 v1765 
                        let v1767 : string = "_vec_map"
                        let v1768 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1767 
                        let v1769 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1770 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1768 v1769 
                        let v1771 : string = "v1770"
                        let v1772 : string = v1771 + v1285 
                        let v1773 : string = v1772 + v1285 
                        let v1774 : string = "vec![" + v1773 + "]"
                        let v1775 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1774 
                        let v1776 : string = "leptos::prelude::Fragment::new($0)"
                        let v1777 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1775 v1776 
                        let v1778 : string = "leptos::prelude::AnyView::from($0)"
                        let v1779 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1777 v1778 
                        let v1780 : string = "<" + v1366 + " " + v1696 + ">move || { v1779 }</" + v1366 + ">"
                        let v1781 : string = "leptos::prelude::view! { " + v1780 + " }"
                        let v1782 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1781 
                        let v1783 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1782 |> unbox
                        let v1784 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1785 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1783 v1784 
                        let v1786 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1787 : string = " " + v1786 + v1285 + ""
                        let v1788 : float = v1280.l8
                        let v1790 : (float -> string) = _.ToString()
                        let v1791 : string = v1790 v1788
                        (* run_target_args'
                        let v1798 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1799 : string = "&*$0"
                        let v1800 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1791 v1799 
                        let _run_target_args'_v1798 = v1800 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1801 : string = "&*$0"
                        let v1802 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1791 v1801 
                        let _run_target_args'_v1798 = v1802 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1803 : string = "&*$0"
                        let v1804 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1791 v1803 
                        let _run_target_args'_v1798 = v1804 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1806 : Ref<Str> = v1791 |> unbox<Ref<Str>>
                        let _run_target_args'_v1798 = v1806 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1810 : Ref<Str> = v1791 |> unbox<Ref<Str>>
                        let _run_target_args'_v1798 = v1810 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1814 : Ref<Str> = v1791 |> unbox<Ref<Str>>
                        let _run_target_args'_v1798 = v1814 
                        #endif
#else
                        let v1818 : Ref<Str> = v1791 |> unbox<Ref<Str>>
                        let _run_target_args'_v1798 = v1818 
                        #endif
                        let v1821 : Ref<Str> = _run_target_args'_v1798 
                        (* run_target_args'
                        let v1831 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1832 : string = "String::from($0)"
                        let v1833 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1821 v1832 
                        let _run_target_args'_v1831 = v1833 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1834 : string = "String::from($0)"
                        let v1835 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1821 v1834 
                        let _run_target_args'_v1831 = v1835 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1836 : string = "String::from($0)"
                        let v1837 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1821 v1836 
                        let _run_target_args'_v1831 = v1837 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1839 : std_string_String = v1821 |> unbox<std_string_String>
                        let _run_target_args'_v1831 = v1839 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1843 : std_string_String = v1821 |> unbox<std_string_String>
                        let _run_target_args'_v1831 = v1843 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1847 : std_string_String = v1821 |> unbox<std_string_String>
                        let _run_target_args'_v1831 = v1847 
                        #endif
#else
                        let v1851 : std_string_String = v1821 |> unbox<std_string_String>
                        let _run_target_args'_v1831 = v1851 
                        #endif
                        let v1854 : std_string_String = _run_target_args'_v1831 
                        let v1860 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1861 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1854 v1860 
                        let v1862 : string = "v1861"
                        let v1863 : string = v1862 + v1285 
                        let v1864 : string = v1863 + v1285 
                        let v1865 : string = "vec![" + v1864 + "]"
                        let v1866 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1865 
                        let v1867 : string = "leptos::prelude::Fragment::new($0)"
                        let v1868 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1866 v1867 
                        let v1869 : string = "leptos::prelude::AnyView::from($0)"
                        let v1870 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1868 v1869 
                        let v1871 : string = "<" + v1366 + " " + v1787 + ">move || { v1870 }</" + v1366 + ">"
                        let v1872 : string = "leptos::prelude::view! { " + v1871 + " }"
                        let v1873 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1872 
                        let v1874 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1873 |> unbox
                        let v1875 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1876 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1874 v1875 
                        let v1877 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1878 : string = " " + v1877 + v1285 + ""
                        let v1879 : float = v1280.l10
                        let v1881 : (float -> string) = _.ToString()
                        let v1882 : string = v1881 v1879
                        (* run_target_args'
                        let v1889 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1890 : string = "&*$0"
                        let v1891 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1882 v1890 
                        let _run_target_args'_v1889 = v1891 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1892 : string = "&*$0"
                        let v1893 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1882 v1892 
                        let _run_target_args'_v1889 = v1893 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1894 : string = "&*$0"
                        let v1895 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1882 v1894 
                        let _run_target_args'_v1889 = v1895 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1897 : Ref<Str> = v1882 |> unbox<Ref<Str>>
                        let _run_target_args'_v1889 = v1897 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1901 : Ref<Str> = v1882 |> unbox<Ref<Str>>
                        let _run_target_args'_v1889 = v1901 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1905 : Ref<Str> = v1882 |> unbox<Ref<Str>>
                        let _run_target_args'_v1889 = v1905 
                        #endif
#else
                        let v1909 : Ref<Str> = v1882 |> unbox<Ref<Str>>
                        let _run_target_args'_v1889 = v1909 
                        #endif
                        let v1912 : Ref<Str> = _run_target_args'_v1889 
                        (* run_target_args'
                        let v1922 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1923 : string = "String::from($0)"
                        let v1924 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1912 v1923 
                        let _run_target_args'_v1922 = v1924 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1925 : string = "String::from($0)"
                        let v1926 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1912 v1925 
                        let _run_target_args'_v1922 = v1926 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1927 : string = "String::from($0)"
                        let v1928 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1912 v1927 
                        let _run_target_args'_v1922 = v1928 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1930 : std_string_String = v1912 |> unbox<std_string_String>
                        let _run_target_args'_v1922 = v1930 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1934 : std_string_String = v1912 |> unbox<std_string_String>
                        let _run_target_args'_v1922 = v1934 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1938 : std_string_String = v1912 |> unbox<std_string_String>
                        let _run_target_args'_v1922 = v1938 
                        #endif
#else
                        let v1942 : std_string_String = v1912 |> unbox<std_string_String>
                        let _run_target_args'_v1922 = v1942 
                        #endif
                        let v1945 : std_string_String = _run_target_args'_v1922 
                        let v1951 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1952 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1945 v1951 
                        let v1953 : string = "v1952"
                        let v1954 : string = v1953 + v1285 
                        let v1955 : string = v1954 + v1285 
                        let v1956 : string = "vec![" + v1955 + "]"
                        let v1957 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1956 
                        let v1958 : string = "leptos::prelude::Fragment::new($0)"
                        let v1959 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1957 v1958 
                        let v1960 : string = "leptos::prelude::AnyView::from($0)"
                        let v1961 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1959 v1960 
                        let v1962 : string = "<" + v1366 + " " + v1878 + ">move || { v1961 }</" + v1366 + ">"
                        let v1963 : string = "leptos::prelude::view! { " + v1962 + " }"
                        let v1964 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1963 
                        let v1965 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1964 |> unbox
                        let v1966 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1967 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1965 v1966 
                        let v1968 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1969 : string = " " + v1968 + v1285 + ""
                        let v1970 : uint32 = v1280.l6
                        let v1972 : (uint32 -> string) = _.ToString()
                        let v1973 : string = v1972 v1970
                        (* run_target_args'
                        let v1980 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1981 : string = "&*$0"
                        let v1982 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1973 v1981 
                        let _run_target_args'_v1980 = v1982 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1983 : string = "&*$0"
                        let v1984 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1973 v1983 
                        let _run_target_args'_v1980 = v1984 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1985 : string = "&*$0"
                        let v1986 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1973 v1985 
                        let _run_target_args'_v1980 = v1986 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1988 : Ref<Str> = v1973 |> unbox<Ref<Str>>
                        let _run_target_args'_v1980 = v1988 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1992 : Ref<Str> = v1973 |> unbox<Ref<Str>>
                        let _run_target_args'_v1980 = v1992 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1996 : Ref<Str> = v1973 |> unbox<Ref<Str>>
                        let _run_target_args'_v1980 = v1996 
                        #endif
#else
                        let v2000 : Ref<Str> = v1973 |> unbox<Ref<Str>>
                        let _run_target_args'_v1980 = v2000 
                        #endif
                        let v2003 : Ref<Str> = _run_target_args'_v1980 
                        (* run_target_args'
                        let v2013 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2014 : string = "String::from($0)"
                        let v2015 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2003 v2014 
                        let _run_target_args'_v2013 = v2015 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2016 : string = "String::from($0)"
                        let v2017 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2003 v2016 
                        let _run_target_args'_v2013 = v2017 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2018 : string = "String::from($0)"
                        let v2019 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2003 v2018 
                        let _run_target_args'_v2013 = v2019 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2021 : std_string_String = v2003 |> unbox<std_string_String>
                        let _run_target_args'_v2013 = v2021 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2025 : std_string_String = v2003 |> unbox<std_string_String>
                        let _run_target_args'_v2013 = v2025 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2029 : std_string_String = v2003 |> unbox<std_string_String>
                        let _run_target_args'_v2013 = v2029 
                        #endif
#else
                        let v2033 : std_string_String = v2003 |> unbox<std_string_String>
                        let _run_target_args'_v2013 = v2033 
                        #endif
                        let v2036 : std_string_String = _run_target_args'_v2013 
                        let v2042 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2043 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2036 v2042 
                        let v2044 : string = "v2043"
                        let v2045 : string = v2044 + v1285 
                        let v2046 : string = v2045 + v1285 
                        let v2047 : string = "vec![" + v2046 + "]"
                        let v2048 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2047 
                        let v2049 : string = "leptos::prelude::Fragment::new($0)"
                        let v2050 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2048 v2049 
                        let v2051 : string = "leptos::prelude::AnyView::from($0)"
                        let v2052 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2050 v2051 
                        let v2053 : string = "<" + v1366 + " " + v1969 + ">move || { v2052 }</" + v1366 + ">"
                        let v2054 : string = "leptos::prelude::view! { " + v2053 + " }"
                        let v2055 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2054 
                        let v2056 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2055 |> unbox
                        let v2057 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2058 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2056 v2057 
                        let v2059 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500 [overflow:auto]\""
                        let v2060 : string = " " + v2059 + v1285 + ""
                        let v2061 : (std_string_String []) = v1280.l11
                        let v2062 : uint64 = System.Convert.ToUInt64 v2061.Length
                        let v2063 : bool = v2062 = 0UL
                        let v2272 : leptos_dom_Fragment =
                            if v2063 then
                                (* run_target_args'
                                let v2068 : unit = ()
                                run_target_args' *)
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v2069 : string = "&*$0"
                                let v2070 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1285 v2069 
                                let _run_target_args'_v2068 = v2070 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v2071 : string = "&*$0"
                                let v2072 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1285 v2071 
                                let _run_target_args'_v2068 = v2072 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v2073 : string = "&*$0"
                                let v2074 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1285 v2073 
                                let _run_target_args'_v2068 = v2074 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v2076 : Ref<Str> = v1285 |> unbox<Ref<Str>>
                                let _run_target_args'_v2068 = v2076 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v2080 : Ref<Str> = v1285 |> unbox<Ref<Str>>
                                let _run_target_args'_v2068 = v2080 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v2084 : Ref<Str> = v1285 |> unbox<Ref<Str>>
                                let _run_target_args'_v2068 = v2084 
                                #endif
#else
                                let v2088 : Ref<Str> = v1285 |> unbox<Ref<Str>>
                                let _run_target_args'_v2068 = v2088 
                                #endif
                                let v2091 : Ref<Str> = _run_target_args'_v2068 
                                (* run_target_args'
                                let v2101 : unit = ()
                                run_target_args' *)
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v2102 : string = "String::from($0)"
                                let v2103 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2091 v2102 
                                let _run_target_args'_v2101 = v2103 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v2104 : string = "String::from($0)"
                                let v2105 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2091 v2104 
                                let _run_target_args'_v2101 = v2105 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v2106 : string = "String::from($0)"
                                let v2107 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2091 v2106 
                                let _run_target_args'_v2101 = v2107 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v2109 : std_string_String = v2091 |> unbox<std_string_String>
                                let _run_target_args'_v2101 = v2109 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v2113 : std_string_String = v2091 |> unbox<std_string_String>
                                let _run_target_args'_v2101 = v2113 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v2117 : std_string_String = v2091 |> unbox<std_string_String>
                                let _run_target_args'_v2101 = v2117 
                                #endif
#else
                                let v2121 : std_string_String = v2091 |> unbox<std_string_String>
                                let _run_target_args'_v2101 = v2121 
                                #endif
                                let v2124 : std_string_String = _run_target_args'_v2101 
                                let v2130 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                                let v2131 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2124 v2130 
                                let v2132 : string = "v2131"
                                let v2133 : string = v2132 + v1285 
                                let v2134 : string = v2133 + v1285 
                                let v2135 : string = "vec![" + v2134 + "]"
                                let v2136 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2135 
                                let v2137 : string = "leptos::prelude::Fragment::new($0)"
                                let v2138 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2136 v2137 
                                v2138
                            else
                                let v2139 : (std_string_String []) = v1280.l11
                                let v2140 : string = "$0.to_vec()"
                                let v2141 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v2139 v2140 
                                let v2142 : unit = ()
                                let v2143 : string = $"true; let _func1_from_v2142 = Func1::from(move |value| {{ //"
                                let v2144 : bool = Fable.Core.RustInterop.emitRustExpr () v2143 
                                let v2145 : string = $"value"
                                let v2146 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v2145 
                                let v2147 : string = "fable_library_rust::String_::fromString($0)"
                                let v2148 : string = Fable.Core.RustInterop.emitRustExpr v2146 v2147 
                                let func1_from_result = v2148 //
                                let v2149 : _ = func1_from_result
                                let v2150 : string = $"true; $0 /*"
                                let v2151 : bool = Fable.Core.RustInterop.emitRustExpr v2149 v2150 
                                let v2152 : string = $"*/ }}); //"
                                let v2153 : bool = Fable.Core.RustInterop.emitRustExpr () v2152 
                                let v2154 : string = $"_func1_from_v2142"
                                let v2155 : Func0<std_string_String, string> = Fable.Core.RustInterop.emitRustExpr () v2154 
                                let v2156 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
                                let v2157 : (std_string_String -> string) = closure332(v2155)
                                let v2158 : Vec<string> = Fable.Core.RustInterop.emitRustExpr struct (v2141, v2157) v2156 
                                let v2159 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                                let v2160 : (string []) = Fable.Core.RustInterop.emitRustExpr v2158 v2159 
                                let v2162 : string seq = v2160 |> Seq.ofArray
                                let v2166 : string = method279()
                                let v2167 : (string -> (string seq -> string)) = String.concat
                                let v2168 : (string seq -> string) = v2167 v2166
                                let v2169 : string = v2168 v2162
                                let v2173 : string = "\\n"
                                let v2174 : string = "\n"
                                let v2175 : string = v2169.Replace (v2173, v2174)
                                let v2176 : string = "$0"
                                let v2177 : (unit -> string) = closure336()
                                let v2178 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v2177 v2176 
                                let v2179 : string = "class=move || \"[padding:1px] [font-size:12px] [line-height:12px] [text-wrap:pretty] \".to_owned() + &v2178(())"
                                let v2180 : string = " " + v2179 + v1285 + ""
                                (* run_target_args'
                                let v2185 : unit = ()
                                run_target_args' *)
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v2186 : string = "&*$0"
                                let v2187 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2175 v2186 
                                let _run_target_args'_v2185 = v2187 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v2188 : string = "&*$0"
                                let v2189 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2175 v2188 
                                let _run_target_args'_v2185 = v2189 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v2190 : string = "&*$0"
                                let v2191 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2175 v2190 
                                let _run_target_args'_v2185 = v2191 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v2193 : Ref<Str> = v2175 |> unbox<Ref<Str>>
                                let _run_target_args'_v2185 = v2193 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v2197 : Ref<Str> = v2175 |> unbox<Ref<Str>>
                                let _run_target_args'_v2185 = v2197 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v2201 : Ref<Str> = v2175 |> unbox<Ref<Str>>
                                let _run_target_args'_v2185 = v2201 
                                #endif
#else
                                let v2205 : Ref<Str> = v2175 |> unbox<Ref<Str>>
                                let _run_target_args'_v2185 = v2205 
                                #endif
                                let v2208 : Ref<Str> = _run_target_args'_v2185 
                                (* run_target_args'
                                let v2218 : unit = ()
                                run_target_args' *)
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v2219 : string = "String::from($0)"
                                let v2220 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2208 v2219 
                                let _run_target_args'_v2218 = v2220 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v2221 : string = "String::from($0)"
                                let v2222 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2208 v2221 
                                let _run_target_args'_v2218 = v2222 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v2223 : string = "String::from($0)"
                                let v2224 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2208 v2223 
                                let _run_target_args'_v2218 = v2224 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v2226 : std_string_String = v2208 |> unbox<std_string_String>
                                let _run_target_args'_v2218 = v2226 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v2230 : std_string_String = v2208 |> unbox<std_string_String>
                                let _run_target_args'_v2218 = v2230 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v2234 : std_string_String = v2208 |> unbox<std_string_String>
                                let _run_target_args'_v2218 = v2234 
                                #endif
#else
                                let v2238 : std_string_String = v2208 |> unbox<std_string_String>
                                let _run_target_args'_v2218 = v2238 
                                #endif
                                let v2241 : std_string_String = _run_target_args'_v2218 
                                let v2247 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                                let v2248 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2241 v2247 
                                let v2249 : string = "v2248"
                                let v2250 : string = v2249 + v1285 
                                let v2251 : string = v2250 + v1285 
                                let v2252 : string = "vec![" + v2251 + "]"
                                let v2253 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2252 
                                let v2254 : string = "leptos::prelude::Fragment::new($0)"
                                let v2255 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2253 v2254 
                                let v2256 : string = "leptos::prelude::AnyView::from($0)"
                                let v2257 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2255 v2256 
                                let v2258 : string = "pre"
                                let v2259 : string = "<" + v2258 + " " + v2180 + ">move || { v2257 }</" + v2258 + ">"
                                let v2260 : string = "leptos::prelude::view! { " + v2259 + " }"
                                let v2261 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2260 
                                let v2262 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v2261 |> unbox
                                let v2263 : string = "leptos::prelude::IntoAny::into_any($0)"
                                let v2264 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2262 v2263 
                                let v2265 : string = "v2264"
                                let v2266 : string = v2265 + v1285 
                                let v2267 : string = v2266 + v1285 
                                let v2268 : string = "vec![" + v2267 + "]"
                                let v2269 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2268 
                                let v2270 : string = "leptos::prelude::Fragment::new($0)"
                                let v2271 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2269 v2270 
                                v2271
                        let v2273 : string = "leptos::prelude::AnyView::from($0)"
                        let v2274 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2272 v2273 
                        let v2275 : string = "<" + v1366 + " " + v2060 + ">move || { v2274 }</" + v1366 + ">"
                        let v2276 : string = "leptos::prelude::view! { " + v2275 + " }"
                        let v2277 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2276 
                        let v2278 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2277 |> unbox
                        let v2279 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2280 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2278 v2279 
                        let v2281 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v2282 : string = " " + v2281 + v1285 + ""
                        let v2283 : bool = v1280.l9
                        let v2285 : (bool -> string) = _.ToString()
                        let v2286 : string = v2285 v2283
                        (* run_target_args'
                        let v2293 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2294 : string = "&*$0"
                        let v2295 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2286 v2294 
                        let _run_target_args'_v2293 = v2295 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2296 : string = "&*$0"
                        let v2297 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2286 v2296 
                        let _run_target_args'_v2293 = v2297 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2298 : string = "&*$0"
                        let v2299 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2286 v2298 
                        let _run_target_args'_v2293 = v2299 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2301 : Ref<Str> = v2286 |> unbox<Ref<Str>>
                        let _run_target_args'_v2293 = v2301 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2305 : Ref<Str> = v2286 |> unbox<Ref<Str>>
                        let _run_target_args'_v2293 = v2305 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2309 : Ref<Str> = v2286 |> unbox<Ref<Str>>
                        let _run_target_args'_v2293 = v2309 
                        #endif
#else
                        let v2313 : Ref<Str> = v2286 |> unbox<Ref<Str>>
                        let _run_target_args'_v2293 = v2313 
                        #endif
                        let v2316 : Ref<Str> = _run_target_args'_v2293 
                        (* run_target_args'
                        let v2326 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2327 : string = "String::from($0)"
                        let v2328 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2316 v2327 
                        let _run_target_args'_v2326 = v2328 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2329 : string = "String::from($0)"
                        let v2330 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2316 v2329 
                        let _run_target_args'_v2326 = v2330 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2331 : string = "String::from($0)"
                        let v2332 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2316 v2331 
                        let _run_target_args'_v2326 = v2332 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2334 : std_string_String = v2316 |> unbox<std_string_String>
                        let _run_target_args'_v2326 = v2334 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2338 : std_string_String = v2316 |> unbox<std_string_String>
                        let _run_target_args'_v2326 = v2338 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2342 : std_string_String = v2316 |> unbox<std_string_String>
                        let _run_target_args'_v2326 = v2342 
                        #endif
#else
                        let v2346 : std_string_String = v2316 |> unbox<std_string_String>
                        let _run_target_args'_v2326 = v2346 
                        #endif
                        let v2349 : std_string_String = _run_target_args'_v2326 
                        let v2355 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2356 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2349 v2355 
                        let v2357 : string = "v2356"
                        let v2358 : string = v2357 + v1285 
                        let v2359 : string = v2358 + v1285 
                        let v2360 : string = "vec![" + v2359 + "]"
                        let v2361 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2360 
                        let v2362 : string = "leptos::prelude::Fragment::new($0)"
                        let v2363 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2361 v2362 
                        let v2364 : string = "leptos::prelude::AnyView::from($0)"
                        let v2365 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2363 v2364 
                        let v2366 : string = "<" + v1366 + " " + v2282 + ">move || { v2365 }</" + v1366 + ">"
                        let v2367 : string = "leptos::prelude::view! { " + v2366 + " }"
                        let v2368 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2367 
                        let v2369 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2368 |> unbox
                        let v2370 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2371 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2369 v2370 
                        let v2372 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v2373 : string = " " + v2372 + v1285 + ""
                        let v2374 : std_string_String = v1280.l3
                        let v2375 : string = "fable_library_rust::String_::fromString($0)"
                        let v2376 : string = Fable.Core.RustInterop.emitRustExpr v2374 v2375 
                        (* run_target_args'
                        let v2381 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2382 : string = "&*$0"
                        let v2383 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2376 v2382 
                        let _run_target_args'_v2381 = v2383 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2384 : string = "&*$0"
                        let v2385 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2376 v2384 
                        let _run_target_args'_v2381 = v2385 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2386 : string = "&*$0"
                        let v2387 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2376 v2386 
                        let _run_target_args'_v2381 = v2387 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2389 : Ref<Str> = v2376 |> unbox<Ref<Str>>
                        let _run_target_args'_v2381 = v2389 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2393 : Ref<Str> = v2376 |> unbox<Ref<Str>>
                        let _run_target_args'_v2381 = v2393 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2397 : Ref<Str> = v2376 |> unbox<Ref<Str>>
                        let _run_target_args'_v2381 = v2397 
                        #endif
#else
                        let v2401 : Ref<Str> = v2376 |> unbox<Ref<Str>>
                        let _run_target_args'_v2381 = v2401 
                        #endif
                        let v2404 : Ref<Str> = _run_target_args'_v2381 
                        (* run_target_args'
                        let v2414 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2415 : string = "String::from($0)"
                        let v2416 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2404 v2415 
                        let _run_target_args'_v2414 = v2416 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2417 : string = "String::from($0)"
                        let v2418 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2404 v2417 
                        let _run_target_args'_v2414 = v2418 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2419 : string = "String::from($0)"
                        let v2420 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2404 v2419 
                        let _run_target_args'_v2414 = v2420 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2422 : std_string_String = v2404 |> unbox<std_string_String>
                        let _run_target_args'_v2414 = v2422 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2426 : std_string_String = v2404 |> unbox<std_string_String>
                        let _run_target_args'_v2414 = v2426 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2430 : std_string_String = v2404 |> unbox<std_string_String>
                        let _run_target_args'_v2414 = v2430 
                        #endif
#else
                        let v2434 : std_string_String = v2404 |> unbox<std_string_String>
                        let _run_target_args'_v2414 = v2434 
                        #endif
                        let v2437 : std_string_String = _run_target_args'_v2414 
                        let v2443 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2444 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2437 v2443 
                        let v2445 : string = "v2444"
                        let v2446 : string = v2445 + v1285 
                        let v2447 : string = v2446 + v1285 
                        let v2448 : string = "vec![" + v2447 + "]"
                        let v2449 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2448 
                        let v2450 : string = "leptos::prelude::Fragment::new($0)"
                        let v2451 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2449 v2450 
                        let v2452 : string = "leptos::prelude::AnyView::from($0)"
                        let v2453 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2451 v2452 
                        let v2454 : string = "<" + v1366 + " " + v2373 + ">move || { v2453 }</" + v1366 + ">"
                        let v2455 : string = "leptos::prelude::view! { " + v2454 + " }"
                        let v2456 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2455 
                        let v2457 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2456 |> unbox
                        let v2458 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2459 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2457 v2458 
                        let v2460 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v2461 : string = " " + v2460 + v1285 + ""
                        let v2462 : std_string_String = v1280.l4
                        let v2463 : string = "fable_library_rust::String_::fromString($0)"
                        let v2464 : string = Fable.Core.RustInterop.emitRustExpr v2462 v2463 
                        (* run_target_args'
                        let v2469 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2470 : string = "&*$0"
                        let v2471 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2464 v2470 
                        let _run_target_args'_v2469 = v2471 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2472 : string = "&*$0"
                        let v2473 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2464 v2472 
                        let _run_target_args'_v2469 = v2473 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2474 : string = "&*$0"
                        let v2475 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2464 v2474 
                        let _run_target_args'_v2469 = v2475 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2477 : Ref<Str> = v2464 |> unbox<Ref<Str>>
                        let _run_target_args'_v2469 = v2477 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2481 : Ref<Str> = v2464 |> unbox<Ref<Str>>
                        let _run_target_args'_v2469 = v2481 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2485 : Ref<Str> = v2464 |> unbox<Ref<Str>>
                        let _run_target_args'_v2469 = v2485 
                        #endif
#else
                        let v2489 : Ref<Str> = v2464 |> unbox<Ref<Str>>
                        let _run_target_args'_v2469 = v2489 
                        #endif
                        let v2492 : Ref<Str> = _run_target_args'_v2469 
                        (* run_target_args'
                        let v2502 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2503 : string = "String::from($0)"
                        let v2504 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2492 v2503 
                        let _run_target_args'_v2502 = v2504 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2505 : string = "String::from($0)"
                        let v2506 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2492 v2505 
                        let _run_target_args'_v2502 = v2506 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2507 : string = "String::from($0)"
                        let v2508 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2492 v2507 
                        let _run_target_args'_v2502 = v2508 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2510 : std_string_String = v2492 |> unbox<std_string_String>
                        let _run_target_args'_v2502 = v2510 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2514 : std_string_String = v2492 |> unbox<std_string_String>
                        let _run_target_args'_v2502 = v2514 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2518 : std_string_String = v2492 |> unbox<std_string_String>
                        let _run_target_args'_v2502 = v2518 
                        #endif
#else
                        let v2522 : std_string_String = v2492 |> unbox<std_string_String>
                        let _run_target_args'_v2502 = v2522 
                        #endif
                        let v2525 : std_string_String = _run_target_args'_v2502 
                        let v2531 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2532 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2525 v2531 
                        let v2533 : string = "v2532"
                        let v2534 : string = v2533 + v1285 
                        let v2535 : string = v2534 + v1285 
                        let v2536 : string = "vec![" + v2535 + "]"
                        let v2537 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2536 
                        let v2538 : string = "leptos::prelude::Fragment::new($0)"
                        let v2539 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2537 v2538 
                        let v2540 : string = "leptos::prelude::AnyView::from($0)"
                        let v2541 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2539 v2540 
                        let v2542 : string = "<" + v1366 + " " + v2461 + ">move || { v2541 }</" + v1366 + ">"
                        let v2543 : string = "leptos::prelude::view! { " + v2542 + " }"
                        let v2544 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2543 
                        let v2545 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2544 |> unbox
                        let v2546 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2547 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2545 v2546 
                        let v2548 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v2549 : string = " " + v2548 + v1285 + ""
                        let v2550 : std_string_String = v1280.l0
                        let v2551 : string = "fable_library_rust::String_::fromString($0)"
                        let v2552 : string = Fable.Core.RustInterop.emitRustExpr v2550 v2551 
                        (* run_target_args'
                        let v2557 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2558 : string = "&*$0"
                        let v2559 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2552 v2558 
                        let _run_target_args'_v2557 = v2559 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2560 : string = "&*$0"
                        let v2561 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2552 v2560 
                        let _run_target_args'_v2557 = v2561 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2562 : string = "&*$0"
                        let v2563 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2552 v2562 
                        let _run_target_args'_v2557 = v2563 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2565 : Ref<Str> = v2552 |> unbox<Ref<Str>>
                        let _run_target_args'_v2557 = v2565 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2569 : Ref<Str> = v2552 |> unbox<Ref<Str>>
                        let _run_target_args'_v2557 = v2569 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2573 : Ref<Str> = v2552 |> unbox<Ref<Str>>
                        let _run_target_args'_v2557 = v2573 
                        #endif
#else
                        let v2577 : Ref<Str> = v2552 |> unbox<Ref<Str>>
                        let _run_target_args'_v2557 = v2577 
                        #endif
                        let v2580 : Ref<Str> = _run_target_args'_v2557 
                        (* run_target_args'
                        let v2590 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2591 : string = "String::from($0)"
                        let v2592 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2580 v2591 
                        let _run_target_args'_v2590 = v2592 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2593 : string = "String::from($0)"
                        let v2594 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2580 v2593 
                        let _run_target_args'_v2590 = v2594 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2595 : string = "String::from($0)"
                        let v2596 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2580 v2595 
                        let _run_target_args'_v2590 = v2596 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2598 : std_string_String = v2580 |> unbox<std_string_String>
                        let _run_target_args'_v2590 = v2598 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2602 : std_string_String = v2580 |> unbox<std_string_String>
                        let _run_target_args'_v2590 = v2602 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2606 : std_string_String = v2580 |> unbox<std_string_String>
                        let _run_target_args'_v2590 = v2606 
                        #endif
#else
                        let v2610 : std_string_String = v2580 |> unbox<std_string_String>
                        let _run_target_args'_v2590 = v2610 
                        #endif
                        let v2613 : std_string_String = _run_target_args'_v2590 
                        let v2619 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2620 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2613 v2619 
                        let v2621 : string = "v2620"
                        let v2622 : string = v2621 + v1285 
                        let v2623 : string = v2622 + v1285 
                        let v2624 : string = "vec![" + v2623 + "]"
                        let v2625 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2624 
                        let v2626 : string = "leptos::prelude::Fragment::new($0)"
                        let v2627 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2625 v2626 
                        let v2628 : string = "leptos::prelude::AnyView::from($0)"
                        let v2629 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2627 v2628 
                        let v2630 : string = "<" + v1366 + " " + v2549 + ">move || { v2629 }</" + v1366 + ">"
                        let v2631 : string = "leptos::prelude::view! { " + v2630 + " }"
                        let v2632 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2631 
                        let v2633 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2632 |> unbox
                        let v2634 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2635 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2633 v2634 
                        let v2636 : string = "v2635"
                        let v2637 : string = v2636 + v1285 
                        let v2638 : string = v2637 + v1285 
                        let v2639 : string = "v2547"
                        let v2640 : string = v2639 + v1749 
                        let v2641 : string = v2640 + v2638 
                        let v2642 : string = "v2459"
                        let v2643 : string = v2642 + v1749 
                        let v2644 : string = v2643 + v2641 
                        let v2645 : string = "v2371"
                        let v2646 : string = v2645 + v1749 
                        let v2647 : string = v2646 + v2644 
                        let v2648 : string = "v2280"
                        let v2649 : string = v2648 + v1749 
                        let v2650 : string = v2649 + v2647 
                        let v2651 : string = "v2058"
                        let v2652 : string = v2651 + v1749 
                        let v2653 : string = v2652 + v2650 
                        let v2654 : string = "v1967"
                        let v2655 : string = v2654 + v1749 
                        let v2656 : string = v2655 + v2653 
                        let v2657 : string = "v1876"
                        let v2658 : string = v2657 + v1749 
                        let v2659 : string = v2658 + v2656 
                        let v2660 : string = "v1785"
                        let v2661 : string = v2660 + v1749 
                        let v2662 : string = v2661 + v2659 
                        let v2663 : string = "v1694"
                        let v2664 : string = v2663 + v1749 
                        let v2665 : string = v2664 + v2662 
                        let v2666 : string = "v1606"
                        let v2667 : string = v2666 + v1749 
                        let v2668 : string = v2667 + v2665 
                        let v2669 : string = "v1518"
                        let v2670 : string = v2669 + v1749 
                        let v2671 : string = v2670 + v2668 
                        let v2672 : string = "v1372"
                        let v2673 : string = v2672 + v1749 
                        let v2674 : string = v2673 + v2671 
                        let v2675 : string = "vec![" + v2674 + "]"
                        let v2676 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2675 
                        let v2677 : string = "leptos::prelude::Fragment::new($0)"
                        let v2678 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2676 v2677 
                        let v2679 : string = "leptos::prelude::AnyView::from($0)"
                        let v2680 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2678 v2679 
                        let v2681 : string = "tr"
                        let v2682 : string = "<" + v2681 + " " + v1286 + ">move || { v2680 }</" + v2681 + ">"
                        let v2683 : string = "leptos::prelude::view! { " + v2682 + " }"
                        let v2684 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2683 
                        let v2685 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>> = v2684 |> unbox
                        let v2686 : string = "true; $0 }).collect::<Vec<_>>()"
                        let v2687 : bool = Fable.Core.RustInterop.emitRustExpr v2685 v2686 
                        let v2688 : string = "_vec_map"
                        let v2689 : Vec<leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>>> = Fable.Core.RustInterop.emitRustExpr () v2688 
                        let v2690 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                        let v2691 : bool = Fable.Core.RustInterop.emitRustExpr v2689 v2690 
                        let v2692 : string = "x"
                        let v2693 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>> = Fable.Core.RustInterop.emitRustExpr () v2692 
                        let v2694 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2695 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2693 v2694 
                        let v2696 : string = "true; $0 }).collect::<Vec<_>>()"
                        let v2697 : bool = Fable.Core.RustInterop.emitRustExpr v2695 v2696 
                        let v2698 : string = "_vec_map"
                        let v2699 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2698 
                        let v2700 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2701 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2699 v2700 
                        let v2702 : string = "v2701"
                        let v2703 : string = v2702 + v1285 
                        let v2704 : string = v2703 + v1285 
                        let v2705 : string = "vec![" + v2704 + "]"
                        let v2706 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2705 
                        let v2707 : string = "leptos::prelude::Fragment::new($0)"
                        let v2708 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2706 v2707 
                        let v2709 : string = "transaction.tr_head_render (1)"
                        let v2710 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v2711 : bool = Fable.Core.RustInterop.emitRustExpr v2709 v2710 
                        let v2712 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v2713 : string = " " + v2712 + v1285 + ""
                        let v2714 : string = "Account"
                        (* run_target_args'
                        let v2719 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2720 : string = "&*$0"
                        let v2721 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2714 v2720 
                        let _run_target_args'_v2719 = v2721 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2722 : string = "&*$0"
                        let v2723 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2714 v2722 
                        let _run_target_args'_v2719 = v2723 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2724 : string = "&*$0"
                        let v2725 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2714 v2724 
                        let _run_target_args'_v2719 = v2725 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2727 : Ref<Str> = v2714 |> unbox<Ref<Str>>
                        let _run_target_args'_v2719 = v2727 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2731 : Ref<Str> = v2714 |> unbox<Ref<Str>>
                        let _run_target_args'_v2719 = v2731 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2735 : Ref<Str> = v2714 |> unbox<Ref<Str>>
                        let _run_target_args'_v2719 = v2735 
                        #endif
#else
                        let v2739 : Ref<Str> = v2714 |> unbox<Ref<Str>>
                        let _run_target_args'_v2719 = v2739 
                        #endif
                        let v2742 : Ref<Str> = _run_target_args'_v2719 
                        (* run_target_args'
                        let v2752 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2753 : string = "String::from($0)"
                        let v2754 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2742 v2753 
                        let _run_target_args'_v2752 = v2754 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2755 : string = "String::from($0)"
                        let v2756 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2742 v2755 
                        let _run_target_args'_v2752 = v2756 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2757 : string = "String::from($0)"
                        let v2758 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2742 v2757 
                        let _run_target_args'_v2752 = v2758 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2760 : std_string_String = v2742 |> unbox<std_string_String>
                        let _run_target_args'_v2752 = v2760 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2764 : std_string_String = v2742 |> unbox<std_string_String>
                        let _run_target_args'_v2752 = v2764 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2768 : std_string_String = v2742 |> unbox<std_string_String>
                        let _run_target_args'_v2752 = v2768 
                        #endif
#else
                        let v2772 : std_string_String = v2742 |> unbox<std_string_String>
                        let _run_target_args'_v2752 = v2772 
                        #endif
                        let v2775 : std_string_String = _run_target_args'_v2752 
                        let v2781 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2782 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2775 v2781 
                        let v2783 : string = "v2782"
                        let v2784 : string = v2783 + v1285 
                        let v2785 : string = v2784 + v1285 
                        let v2786 : string = "vec![" + v2785 + "]"
                        let v2787 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2786 
                        let v2788 : string = "leptos::prelude::Fragment::new($0)"
                        let v2789 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2787 v2788 
                        let v2790 : string = "leptos::prelude::AnyView::from($0)"
                        let v2791 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2789 v2790 
                        let v2792 : string = "th"
                        let v2793 : string = "<" + v2792 + " " + v2713 + ">move || { v2791 }</" + v2792 + ">"
                        let v2794 : string = "leptos::prelude::view! { " + v2793 + " }"
                        let v2795 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2794 
                        let v2796 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v2795 |> unbox
                        let v2797 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2798 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2796 v2797 
                        let v2799 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v2800 : string = " " + v2799 + v1285 + ""
                        let v2801 : string = "Block Timestamp"
                        (* run_target_args'
                        let v2806 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2807 : string = "&*$0"
                        let v2808 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2801 v2807 
                        let _run_target_args'_v2806 = v2808 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2809 : string = "&*$0"
                        let v2810 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2801 v2809 
                        let _run_target_args'_v2806 = v2810 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2811 : string = "&*$0"
                        let v2812 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2801 v2811 
                        let _run_target_args'_v2806 = v2812 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2814 : Ref<Str> = v2801 |> unbox<Ref<Str>>
                        let _run_target_args'_v2806 = v2814 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2818 : Ref<Str> = v2801 |> unbox<Ref<Str>>
                        let _run_target_args'_v2806 = v2818 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2822 : Ref<Str> = v2801 |> unbox<Ref<Str>>
                        let _run_target_args'_v2806 = v2822 
                        #endif
#else
                        let v2826 : Ref<Str> = v2801 |> unbox<Ref<Str>>
                        let _run_target_args'_v2806 = v2826 
                        #endif
                        let v2829 : Ref<Str> = _run_target_args'_v2806 
                        (* run_target_args'
                        let v2839 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2840 : string = "String::from($0)"
                        let v2841 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2829 v2840 
                        let _run_target_args'_v2839 = v2841 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2842 : string = "String::from($0)"
                        let v2843 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2829 v2842 
                        let _run_target_args'_v2839 = v2843 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2844 : string = "String::from($0)"
                        let v2845 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2829 v2844 
                        let _run_target_args'_v2839 = v2845 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2847 : std_string_String = v2829 |> unbox<std_string_String>
                        let _run_target_args'_v2839 = v2847 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2851 : std_string_String = v2829 |> unbox<std_string_String>
                        let _run_target_args'_v2839 = v2851 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2855 : std_string_String = v2829 |> unbox<std_string_String>
                        let _run_target_args'_v2839 = v2855 
                        #endif
#else
                        let v2859 : std_string_String = v2829 |> unbox<std_string_String>
                        let _run_target_args'_v2839 = v2859 
                        #endif
                        let v2862 : std_string_String = _run_target_args'_v2839 
                        let v2868 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2869 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2862 v2868 
                        let v2870 : string = "v2869"
                        let v2871 : string = v2870 + v1285 
                        let v2872 : string = v2871 + v1285 
                        let v2873 : string = "vec![" + v2872 + "]"
                        let v2874 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2873 
                        let v2875 : string = "leptos::prelude::Fragment::new($0)"
                        let v2876 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2874 v2875 
                        let v2877 : string = "leptos::prelude::AnyView::from($0)"
                        let v2878 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2876 v2877 
                        let v2879 : string = "<" + v2792 + " " + v2800 + ">move || { v2878 }</" + v2792 + ">"
                        let v2880 : string = "leptos::prelude::view! { " + v2879 + " }"
                        let v2881 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2880 
                        let v2882 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v2881 |> unbox
                        let v2883 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2884 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2882 v2883 
                        let v2885 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v2886 : string = " " + v2885 + v1285 + ""
                        let v2887 : string = "Predecessor"
                        (* run_target_args'
                        let v2892 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2893 : string = "&*$0"
                        let v2894 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2887 v2893 
                        let _run_target_args'_v2892 = v2894 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2895 : string = "&*$0"
                        let v2896 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2887 v2895 
                        let _run_target_args'_v2892 = v2896 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2897 : string = "&*$0"
                        let v2898 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2887 v2897 
                        let _run_target_args'_v2892 = v2898 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2900 : Ref<Str> = v2887 |> unbox<Ref<Str>>
                        let _run_target_args'_v2892 = v2900 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2904 : Ref<Str> = v2887 |> unbox<Ref<Str>>
                        let _run_target_args'_v2892 = v2904 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2908 : Ref<Str> = v2887 |> unbox<Ref<Str>>
                        let _run_target_args'_v2892 = v2908 
                        #endif
#else
                        let v2912 : Ref<Str> = v2887 |> unbox<Ref<Str>>
                        let _run_target_args'_v2892 = v2912 
                        #endif
                        let v2915 : Ref<Str> = _run_target_args'_v2892 
                        (* run_target_args'
                        let v2925 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2926 : string = "String::from($0)"
                        let v2927 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2915 v2926 
                        let _run_target_args'_v2925 = v2927 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2928 : string = "String::from($0)"
                        let v2929 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2915 v2928 
                        let _run_target_args'_v2925 = v2929 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2930 : string = "String::from($0)"
                        let v2931 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2915 v2930 
                        let _run_target_args'_v2925 = v2931 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2933 : std_string_String = v2915 |> unbox<std_string_String>
                        let _run_target_args'_v2925 = v2933 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2937 : std_string_String = v2915 |> unbox<std_string_String>
                        let _run_target_args'_v2925 = v2937 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2941 : std_string_String = v2915 |> unbox<std_string_String>
                        let _run_target_args'_v2925 = v2941 
                        #endif
#else
                        let v2945 : std_string_String = v2915 |> unbox<std_string_String>
                        let _run_target_args'_v2925 = v2945 
                        #endif
                        let v2948 : std_string_String = _run_target_args'_v2925 
                        let v2954 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2955 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2948 v2954 
                        let v2956 : string = "v2955"
                        let v2957 : string = v2956 + v1285 
                        let v2958 : string = v2957 + v1285 
                        let v2959 : string = "vec![" + v2958 + "]"
                        let v2960 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2959 
                        let v2961 : string = "leptos::prelude::Fragment::new($0)"
                        let v2962 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2960 v2961 
                        let v2963 : string = "leptos::prelude::AnyView::from($0)"
                        let v2964 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2962 v2963 
                        let v2965 : string = "<" + v2792 + " " + v2886 + ">move || { v2964 }</" + v2792 + ">"
                        let v2966 : string = "leptos::prelude::view! { " + v2965 + " }"
                        let v2967 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2966 
                        let v2968 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v2967 |> unbox
                        let v2969 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2970 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2968 v2969 
                        let v2971 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v2972 : string = " " + v2971 + v1285 + ""
                        let v2973 : string = "Receiver"
                        (* run_target_args'
                        let v2978 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2979 : string = "&*$0"
                        let v2980 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2973 v2979 
                        let _run_target_args'_v2978 = v2980 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2981 : string = "&*$0"
                        let v2982 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2973 v2981 
                        let _run_target_args'_v2978 = v2982 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2983 : string = "&*$0"
                        let v2984 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2973 v2983 
                        let _run_target_args'_v2978 = v2984 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2986 : Ref<Str> = v2973 |> unbox<Ref<Str>>
                        let _run_target_args'_v2978 = v2986 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2990 : Ref<Str> = v2973 |> unbox<Ref<Str>>
                        let _run_target_args'_v2978 = v2990 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2994 : Ref<Str> = v2973 |> unbox<Ref<Str>>
                        let _run_target_args'_v2978 = v2994 
                        #endif
#else
                        let v2998 : Ref<Str> = v2973 |> unbox<Ref<Str>>
                        let _run_target_args'_v2978 = v2998 
                        #endif
                        let v3001 : Ref<Str> = _run_target_args'_v2978 
                        (* run_target_args'
                        let v3011 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3012 : string = "String::from($0)"
                        let v3013 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3001 v3012 
                        let _run_target_args'_v3011 = v3013 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3014 : string = "String::from($0)"
                        let v3015 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3001 v3014 
                        let _run_target_args'_v3011 = v3015 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3016 : string = "String::from($0)"
                        let v3017 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3001 v3016 
                        let _run_target_args'_v3011 = v3017 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3019 : std_string_String = v3001 |> unbox<std_string_String>
                        let _run_target_args'_v3011 = v3019 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3023 : std_string_String = v3001 |> unbox<std_string_String>
                        let _run_target_args'_v3011 = v3023 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3027 : std_string_String = v3001 |> unbox<std_string_String>
                        let _run_target_args'_v3011 = v3027 
                        #endif
#else
                        let v3031 : std_string_String = v3001 |> unbox<std_string_String>
                        let _run_target_args'_v3011 = v3031 
                        #endif
                        let v3034 : std_string_String = _run_target_args'_v3011 
                        let v3040 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3041 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3034 v3040 
                        let v3042 : string = "v3041"
                        let v3043 : string = v3042 + v1285 
                        let v3044 : string = v3043 + v1285 
                        let v3045 : string = "vec![" + v3044 + "]"
                        let v3046 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3045 
                        let v3047 : string = "leptos::prelude::Fragment::new($0)"
                        let v3048 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3046 v3047 
                        let v3049 : string = "leptos::prelude::AnyView::from($0)"
                        let v3050 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3048 v3049 
                        let v3051 : string = "<" + v2792 + " " + v2972 + ">move || { v3050 }</" + v2792 + ">"
                        let v3052 : string = "leptos::prelude::view! { " + v3051 + " }"
                        let v3053 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3052 
                        let v3054 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3053 |> unbox
                        let v3055 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3056 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3054 v3055 
                        let v3057 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3058 : string = " " + v3057 + v1285 + ""
                        let v3059 : string = "Action"
                        (* run_target_args'
                        let v3064 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3065 : string = "&*$0"
                        let v3066 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3059 v3065 
                        let _run_target_args'_v3064 = v3066 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3067 : string = "&*$0"
                        let v3068 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3059 v3067 
                        let _run_target_args'_v3064 = v3068 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3069 : string = "&*$0"
                        let v3070 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3059 v3069 
                        let _run_target_args'_v3064 = v3070 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3072 : Ref<Str> = v3059 |> unbox<Ref<Str>>
                        let _run_target_args'_v3064 = v3072 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3076 : Ref<Str> = v3059 |> unbox<Ref<Str>>
                        let _run_target_args'_v3064 = v3076 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3080 : Ref<Str> = v3059 |> unbox<Ref<Str>>
                        let _run_target_args'_v3064 = v3080 
                        #endif
#else
                        let v3084 : Ref<Str> = v3059 |> unbox<Ref<Str>>
                        let _run_target_args'_v3064 = v3084 
                        #endif
                        let v3087 : Ref<Str> = _run_target_args'_v3064 
                        (* run_target_args'
                        let v3097 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3098 : string = "String::from($0)"
                        let v3099 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3087 v3098 
                        let _run_target_args'_v3097 = v3099 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3100 : string = "String::from($0)"
                        let v3101 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3087 v3100 
                        let _run_target_args'_v3097 = v3101 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3102 : string = "String::from($0)"
                        let v3103 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3087 v3102 
                        let _run_target_args'_v3097 = v3103 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3105 : std_string_String = v3087 |> unbox<std_string_String>
                        let _run_target_args'_v3097 = v3105 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3109 : std_string_String = v3087 |> unbox<std_string_String>
                        let _run_target_args'_v3097 = v3109 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3113 : std_string_String = v3087 |> unbox<std_string_String>
                        let _run_target_args'_v3097 = v3113 
                        #endif
#else
                        let v3117 : std_string_String = v3087 |> unbox<std_string_String>
                        let _run_target_args'_v3097 = v3117 
                        #endif
                        let v3120 : std_string_String = _run_target_args'_v3097 
                        let v3126 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3127 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3120 v3126 
                        let v3128 : string = "v3127"
                        let v3129 : string = v3128 + v1285 
                        let v3130 : string = v3129 + v1285 
                        let v3131 : string = "vec![" + v3130 + "]"
                        let v3132 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3131 
                        let v3133 : string = "leptos::prelude::Fragment::new($0)"
                        let v3134 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3132 v3133 
                        let v3135 : string = "leptos::prelude::AnyView::from($0)"
                        let v3136 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3134 v3135 
                        let v3137 : string = "<" + v2792 + " " + v3058 + ">move || { v3136 }</" + v2792 + ">"
                        let v3138 : string = "leptos::prelude::view! { " + v3137 + " }"
                        let v3139 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3138 
                        let v3140 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3139 |> unbox
                        let v3141 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3142 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3140 v3141 
                        let v3143 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3144 : string = " " + v3143 + v1285 + ""
                        let v3145 : string = "Deposit"
                        (* run_target_args'
                        let v3150 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3151 : string = "&*$0"
                        let v3152 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3145 v3151 
                        let _run_target_args'_v3150 = v3152 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3153 : string = "&*$0"
                        let v3154 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3145 v3153 
                        let _run_target_args'_v3150 = v3154 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3155 : string = "&*$0"
                        let v3156 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3145 v3155 
                        let _run_target_args'_v3150 = v3156 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3158 : Ref<Str> = v3145 |> unbox<Ref<Str>>
                        let _run_target_args'_v3150 = v3158 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3162 : Ref<Str> = v3145 |> unbox<Ref<Str>>
                        let _run_target_args'_v3150 = v3162 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3166 : Ref<Str> = v3145 |> unbox<Ref<Str>>
                        let _run_target_args'_v3150 = v3166 
                        #endif
#else
                        let v3170 : Ref<Str> = v3145 |> unbox<Ref<Str>>
                        let _run_target_args'_v3150 = v3170 
                        #endif
                        let v3173 : Ref<Str> = _run_target_args'_v3150 
                        (* run_target_args'
                        let v3183 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3184 : string = "String::from($0)"
                        let v3185 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3173 v3184 
                        let _run_target_args'_v3183 = v3185 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3186 : string = "String::from($0)"
                        let v3187 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3173 v3186 
                        let _run_target_args'_v3183 = v3187 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3188 : string = "String::from($0)"
                        let v3189 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3173 v3188 
                        let _run_target_args'_v3183 = v3189 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3191 : std_string_String = v3173 |> unbox<std_string_String>
                        let _run_target_args'_v3183 = v3191 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3195 : std_string_String = v3173 |> unbox<std_string_String>
                        let _run_target_args'_v3183 = v3195 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3199 : std_string_String = v3173 |> unbox<std_string_String>
                        let _run_target_args'_v3183 = v3199 
                        #endif
#else
                        let v3203 : std_string_String = v3173 |> unbox<std_string_String>
                        let _run_target_args'_v3183 = v3203 
                        #endif
                        let v3206 : std_string_String = _run_target_args'_v3183 
                        let v3212 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3213 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3206 v3212 
                        let v3214 : string = "v3213"
                        let v3215 : string = v3214 + v1285 
                        let v3216 : string = v3215 + v1285 
                        let v3217 : string = "vec![" + v3216 + "]"
                        let v3218 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3217 
                        let v3219 : string = "leptos::prelude::Fragment::new($0)"
                        let v3220 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3218 v3219 
                        let v3221 : string = "leptos::prelude::AnyView::from($0)"
                        let v3222 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3220 v3221 
                        let v3223 : string = "<" + v2792 + " " + v3144 + ">move || { v3222 }</" + v2792 + ">"
                        let v3224 : string = "leptos::prelude::view! { " + v3223 + " }"
                        let v3225 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3224 
                        let v3226 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3225 |> unbox
                        let v3227 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3228 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3226 v3227 
                        let v3229 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3230 : string = " " + v3229 + v1285 + ""
                        let v3231 : string = "Fee"
                        (* run_target_args'
                        let v3236 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3237 : string = "&*$0"
                        let v3238 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3231 v3237 
                        let _run_target_args'_v3236 = v3238 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3239 : string = "&*$0"
                        let v3240 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3231 v3239 
                        let _run_target_args'_v3236 = v3240 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3241 : string = "&*$0"
                        let v3242 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3231 v3241 
                        let _run_target_args'_v3236 = v3242 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3244 : Ref<Str> = v3231 |> unbox<Ref<Str>>
                        let _run_target_args'_v3236 = v3244 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3248 : Ref<Str> = v3231 |> unbox<Ref<Str>>
                        let _run_target_args'_v3236 = v3248 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3252 : Ref<Str> = v3231 |> unbox<Ref<Str>>
                        let _run_target_args'_v3236 = v3252 
                        #endif
#else
                        let v3256 : Ref<Str> = v3231 |> unbox<Ref<Str>>
                        let _run_target_args'_v3236 = v3256 
                        #endif
                        let v3259 : Ref<Str> = _run_target_args'_v3236 
                        (* run_target_args'
                        let v3269 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3270 : string = "String::from($0)"
                        let v3271 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3259 v3270 
                        let _run_target_args'_v3269 = v3271 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3272 : string = "String::from($0)"
                        let v3273 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3259 v3272 
                        let _run_target_args'_v3269 = v3273 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3274 : string = "String::from($0)"
                        let v3275 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3259 v3274 
                        let _run_target_args'_v3269 = v3275 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3277 : std_string_String = v3259 |> unbox<std_string_String>
                        let _run_target_args'_v3269 = v3277 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3281 : std_string_String = v3259 |> unbox<std_string_String>
                        let _run_target_args'_v3269 = v3281 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3285 : std_string_String = v3259 |> unbox<std_string_String>
                        let _run_target_args'_v3269 = v3285 
                        #endif
#else
                        let v3289 : std_string_String = v3259 |> unbox<std_string_String>
                        let _run_target_args'_v3269 = v3289 
                        #endif
                        let v3292 : std_string_String = _run_target_args'_v3269 
                        let v3298 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3299 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3292 v3298 
                        let v3300 : string = "v3299"
                        let v3301 : string = v3300 + v1285 
                        let v3302 : string = v3301 + v1285 
                        let v3303 : string = "vec![" + v3302 + "]"
                        let v3304 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3303 
                        let v3305 : string = "leptos::prelude::Fragment::new($0)"
                        let v3306 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3304 v3305 
                        let v3307 : string = "leptos::prelude::AnyView::from($0)"
                        let v3308 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3306 v3307 
                        let v3309 : string = "<" + v2792 + " " + v3230 + ">move || { v3308 }</" + v2792 + ">"
                        let v3310 : string = "leptos::prelude::view! { " + v3309 + " }"
                        let v3311 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3310 
                        let v3312 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3311 |> unbox
                        let v3313 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3314 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3312 v3313 
                        let v3315 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3316 : string = " " + v3315 + v1285 + ""
                        let v3317 : string = "Block Height"
                        (* run_target_args'
                        let v3322 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3323 : string = "&*$0"
                        let v3324 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3317 v3323 
                        let _run_target_args'_v3322 = v3324 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3325 : string = "&*$0"
                        let v3326 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3317 v3325 
                        let _run_target_args'_v3322 = v3326 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3327 : string = "&*$0"
                        let v3328 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3317 v3327 
                        let _run_target_args'_v3322 = v3328 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3330 : Ref<Str> = v3317 |> unbox<Ref<Str>>
                        let _run_target_args'_v3322 = v3330 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3334 : Ref<Str> = v3317 |> unbox<Ref<Str>>
                        let _run_target_args'_v3322 = v3334 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3338 : Ref<Str> = v3317 |> unbox<Ref<Str>>
                        let _run_target_args'_v3322 = v3338 
                        #endif
#else
                        let v3342 : Ref<Str> = v3317 |> unbox<Ref<Str>>
                        let _run_target_args'_v3322 = v3342 
                        #endif
                        let v3345 : Ref<Str> = _run_target_args'_v3322 
                        (* run_target_args'
                        let v3355 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3356 : string = "String::from($0)"
                        let v3357 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3345 v3356 
                        let _run_target_args'_v3355 = v3357 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3358 : string = "String::from($0)"
                        let v3359 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3345 v3358 
                        let _run_target_args'_v3355 = v3359 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3360 : string = "String::from($0)"
                        let v3361 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3345 v3360 
                        let _run_target_args'_v3355 = v3361 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3363 : std_string_String = v3345 |> unbox<std_string_String>
                        let _run_target_args'_v3355 = v3363 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3367 : std_string_String = v3345 |> unbox<std_string_String>
                        let _run_target_args'_v3355 = v3367 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3371 : std_string_String = v3345 |> unbox<std_string_String>
                        let _run_target_args'_v3355 = v3371 
                        #endif
#else
                        let v3375 : std_string_String = v3345 |> unbox<std_string_String>
                        let _run_target_args'_v3355 = v3375 
                        #endif
                        let v3378 : std_string_String = _run_target_args'_v3355 
                        let v3384 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3385 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3378 v3384 
                        let v3386 : string = "v3385"
                        let v3387 : string = v3386 + v1285 
                        let v3388 : string = v3387 + v1285 
                        let v3389 : string = "vec![" + v3388 + "]"
                        let v3390 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3389 
                        let v3391 : string = "leptos::prelude::Fragment::new($0)"
                        let v3392 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3390 v3391 
                        let v3393 : string = "leptos::prelude::AnyView::from($0)"
                        let v3394 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3392 v3393 
                        let v3395 : string = "<" + v2792 + " " + v3316 + ">move || { v3394 }</" + v2792 + ">"
                        let v3396 : string = "leptos::prelude::view! { " + v3395 + " }"
                        let v3397 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3396 
                        let v3398 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3397 |> unbox
                        let v3399 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3400 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3398 v3399 
                        let v3401 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3402 : string = " " + v3401 + v1285 + ""
                        let v3403 : int32 = 0
                        let v3404 : bool = method280(v365, v3403)
                        let v3405 : bool = false = v3404
                        let v3407 : string =
                            if v3405 then
                                v1285
                            else
                                let v3406 : string = "Logs"
                                v3406
                        (* run_target_args'
                        let v3412 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3413 : string = "&*$0"
                        let v3414 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3407 v3413 
                        let _run_target_args'_v3412 = v3414 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3415 : string = "&*$0"
                        let v3416 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3407 v3415 
                        let _run_target_args'_v3412 = v3416 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3417 : string = "&*$0"
                        let v3418 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3407 v3417 
                        let _run_target_args'_v3412 = v3418 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3420 : Ref<Str> = v3407 |> unbox<Ref<Str>>
                        let _run_target_args'_v3412 = v3420 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3424 : Ref<Str> = v3407 |> unbox<Ref<Str>>
                        let _run_target_args'_v3412 = v3424 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3428 : Ref<Str> = v3407 |> unbox<Ref<Str>>
                        let _run_target_args'_v3412 = v3428 
                        #endif
#else
                        let v3432 : Ref<Str> = v3407 |> unbox<Ref<Str>>
                        let _run_target_args'_v3412 = v3432 
                        #endif
                        let v3435 : Ref<Str> = _run_target_args'_v3412 
                        (* run_target_args'
                        let v3445 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3446 : string = "String::from($0)"
                        let v3447 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3435 v3446 
                        let _run_target_args'_v3445 = v3447 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3448 : string = "String::from($0)"
                        let v3449 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3435 v3448 
                        let _run_target_args'_v3445 = v3449 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3450 : string = "String::from($0)"
                        let v3451 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3435 v3450 
                        let _run_target_args'_v3445 = v3451 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3453 : std_string_String = v3435 |> unbox<std_string_String>
                        let _run_target_args'_v3445 = v3453 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3457 : std_string_String = v3435 |> unbox<std_string_String>
                        let _run_target_args'_v3445 = v3457 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3461 : std_string_String = v3435 |> unbox<std_string_String>
                        let _run_target_args'_v3445 = v3461 
                        #endif
#else
                        let v3465 : std_string_String = v3435 |> unbox<std_string_String>
                        let _run_target_args'_v3445 = v3465 
                        #endif
                        let v3468 : std_string_String = _run_target_args'_v3445 
                        let v3474 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3475 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3468 v3474 
                        let v3476 : string = "v3475"
                        let v3477 : string = v3476 + v1285 
                        let v3478 : string = v3477 + v1285 
                        let v3479 : string = "vec![" + v3478 + "]"
                        let v3480 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3479 
                        let v3481 : string = "leptos::prelude::Fragment::new($0)"
                        let v3482 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3480 v3481 
                        let v3483 : string = "leptos::prelude::AnyView::from($0)"
                        let v3484 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3482 v3483 
                        let v3485 : string = "<" + v2792 + " " + v3402 + ">move || { v3484 }</" + v2792 + ">"
                        let v3486 : string = "leptos::prelude::view! { " + v3485 + " }"
                        let v3487 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3486 
                        let v3488 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3487 |> unbox
                        let v3489 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3490 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3488 v3489 
                        let v3491 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3492 : string = " " + v3491 + v1285 + ""
                        let v3493 : string = "Outcome Status"
                        (* run_target_args'
                        let v3498 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3499 : string = "&*$0"
                        let v3500 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3493 v3499 
                        let _run_target_args'_v3498 = v3500 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3501 : string = "&*$0"
                        let v3502 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3493 v3501 
                        let _run_target_args'_v3498 = v3502 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3503 : string = "&*$0"
                        let v3504 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3493 v3503 
                        let _run_target_args'_v3498 = v3504 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3506 : Ref<Str> = v3493 |> unbox<Ref<Str>>
                        let _run_target_args'_v3498 = v3506 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3510 : Ref<Str> = v3493 |> unbox<Ref<Str>>
                        let _run_target_args'_v3498 = v3510 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3514 : Ref<Str> = v3493 |> unbox<Ref<Str>>
                        let _run_target_args'_v3498 = v3514 
                        #endif
#else
                        let v3518 : Ref<Str> = v3493 |> unbox<Ref<Str>>
                        let _run_target_args'_v3498 = v3518 
                        #endif
                        let v3521 : Ref<Str> = _run_target_args'_v3498 
                        (* run_target_args'
                        let v3531 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3532 : string = "String::from($0)"
                        let v3533 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3521 v3532 
                        let _run_target_args'_v3531 = v3533 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3534 : string = "String::from($0)"
                        let v3535 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3521 v3534 
                        let _run_target_args'_v3531 = v3535 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3536 : string = "String::from($0)"
                        let v3537 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3521 v3536 
                        let _run_target_args'_v3531 = v3537 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3539 : std_string_String = v3521 |> unbox<std_string_String>
                        let _run_target_args'_v3531 = v3539 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3543 : std_string_String = v3521 |> unbox<std_string_String>
                        let _run_target_args'_v3531 = v3543 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3547 : std_string_String = v3521 |> unbox<std_string_String>
                        let _run_target_args'_v3531 = v3547 
                        #endif
#else
                        let v3551 : std_string_String = v3521 |> unbox<std_string_String>
                        let _run_target_args'_v3531 = v3551 
                        #endif
                        let v3554 : std_string_String = _run_target_args'_v3531 
                        let v3560 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3561 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3554 v3560 
                        let v3562 : string = "v3561"
                        let v3563 : string = v3562 + v1285 
                        let v3564 : string = v3563 + v1285 
                        let v3565 : string = "vec![" + v3564 + "]"
                        let v3566 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3565 
                        let v3567 : string = "leptos::prelude::Fragment::new($0)"
                        let v3568 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3566 v3567 
                        let v3569 : string = "leptos::prelude::AnyView::from($0)"
                        let v3570 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3568 v3569 
                        let v3571 : string = "<" + v2792 + " " + v3492 + ">move || { v3570 }</" + v2792 + ">"
                        let v3572 : string = "leptos::prelude::view! { " + v3571 + " }"
                        let v3573 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3572 
                        let v3574 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3573 |> unbox
                        let v3575 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3576 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3574 v3575 
                        let v3577 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3578 : string = " " + v3577 + v1285 + ""
                        let v3579 : string = "Hash"
                        (* run_target_args'
                        let v3584 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3585 : string = "&*$0"
                        let v3586 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3579 v3585 
                        let _run_target_args'_v3584 = v3586 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3587 : string = "&*$0"
                        let v3588 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3579 v3587 
                        let _run_target_args'_v3584 = v3588 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3589 : string = "&*$0"
                        let v3590 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3579 v3589 
                        let _run_target_args'_v3584 = v3590 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3592 : Ref<Str> = v3579 |> unbox<Ref<Str>>
                        let _run_target_args'_v3584 = v3592 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3596 : Ref<Str> = v3579 |> unbox<Ref<Str>>
                        let _run_target_args'_v3584 = v3596 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3600 : Ref<Str> = v3579 |> unbox<Ref<Str>>
                        let _run_target_args'_v3584 = v3600 
                        #endif
#else
                        let v3604 : Ref<Str> = v3579 |> unbox<Ref<Str>>
                        let _run_target_args'_v3584 = v3604 
                        #endif
                        let v3607 : Ref<Str> = _run_target_args'_v3584 
                        (* run_target_args'
                        let v3617 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3618 : string = "String::from($0)"
                        let v3619 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3607 v3618 
                        let _run_target_args'_v3617 = v3619 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3620 : string = "String::from($0)"
                        let v3621 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3607 v3620 
                        let _run_target_args'_v3617 = v3621 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3622 : string = "String::from($0)"
                        let v3623 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3607 v3622 
                        let _run_target_args'_v3617 = v3623 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3625 : std_string_String = v3607 |> unbox<std_string_String>
                        let _run_target_args'_v3617 = v3625 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3629 : std_string_String = v3607 |> unbox<std_string_String>
                        let _run_target_args'_v3617 = v3629 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3633 : std_string_String = v3607 |> unbox<std_string_String>
                        let _run_target_args'_v3617 = v3633 
                        #endif
#else
                        let v3637 : std_string_String = v3607 |> unbox<std_string_String>
                        let _run_target_args'_v3617 = v3637 
                        #endif
                        let v3640 : std_string_String = _run_target_args'_v3617 
                        let v3646 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3647 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3640 v3646 
                        let v3648 : string = "v3647"
                        let v3649 : string = v3648 + v1285 
                        let v3650 : string = v3649 + v1285 
                        let v3651 : string = "vec![" + v3650 + "]"
                        let v3652 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3651 
                        let v3653 : string = "leptos::prelude::Fragment::new($0)"
                        let v3654 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3652 v3653 
                        let v3655 : string = "leptos::prelude::AnyView::from($0)"
                        let v3656 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3654 v3655 
                        let v3657 : string = "<" + v2792 + " " + v3578 + ">move || { v3656 }</" + v2792 + ">"
                        let v3658 : string = "leptos::prelude::view! { " + v3657 + " }"
                        let v3659 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3658 
                        let v3660 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3659 |> unbox
                        let v3661 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3662 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3660 v3661 
                        let v3663 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3664 : string = " " + v3663 + v1285 + ""
                        let v3665 : string = "Block Hash"
                        (* run_target_args'
                        let v3670 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3671 : string = "&*$0"
                        let v3672 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3665 v3671 
                        let _run_target_args'_v3670 = v3672 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3673 : string = "&*$0"
                        let v3674 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3665 v3673 
                        let _run_target_args'_v3670 = v3674 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3675 : string = "&*$0"
                        let v3676 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3665 v3675 
                        let _run_target_args'_v3670 = v3676 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3678 : Ref<Str> = v3665 |> unbox<Ref<Str>>
                        let _run_target_args'_v3670 = v3678 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3682 : Ref<Str> = v3665 |> unbox<Ref<Str>>
                        let _run_target_args'_v3670 = v3682 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3686 : Ref<Str> = v3665 |> unbox<Ref<Str>>
                        let _run_target_args'_v3670 = v3686 
                        #endif
#else
                        let v3690 : Ref<Str> = v3665 |> unbox<Ref<Str>>
                        let _run_target_args'_v3670 = v3690 
                        #endif
                        let v3693 : Ref<Str> = _run_target_args'_v3670 
                        (* run_target_args'
                        let v3703 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3704 : string = "String::from($0)"
                        let v3705 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3693 v3704 
                        let _run_target_args'_v3703 = v3705 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3706 : string = "String::from($0)"
                        let v3707 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3693 v3706 
                        let _run_target_args'_v3703 = v3707 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3708 : string = "String::from($0)"
                        let v3709 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3693 v3708 
                        let _run_target_args'_v3703 = v3709 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3711 : std_string_String = v3693 |> unbox<std_string_String>
                        let _run_target_args'_v3703 = v3711 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3715 : std_string_String = v3693 |> unbox<std_string_String>
                        let _run_target_args'_v3703 = v3715 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3719 : std_string_String = v3693 |> unbox<std_string_String>
                        let _run_target_args'_v3703 = v3719 
                        #endif
#else
                        let v3723 : std_string_String = v3693 |> unbox<std_string_String>
                        let _run_target_args'_v3703 = v3723 
                        #endif
                        let v3726 : std_string_String = _run_target_args'_v3703 
                        let v3732 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3733 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3726 v3732 
                        let v3734 : string = "v3733"
                        let v3735 : string = v3734 + v1285 
                        let v3736 : string = v3735 + v1285 
                        let v3737 : string = "vec![" + v3736 + "]"
                        let v3738 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3737 
                        let v3739 : string = "leptos::prelude::Fragment::new($0)"
                        let v3740 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3738 v3739 
                        let v3741 : string = "leptos::prelude::AnyView::from($0)"
                        let v3742 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3740 v3741 
                        let v3743 : string = "<" + v2792 + " " + v3664 + ">move || { v3742 }</" + v2792 + ">"
                        let v3744 : string = "leptos::prelude::view! { " + v3743 + " }"
                        let v3745 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3744 
                        let v3746 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3745 |> unbox
                        let v3747 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3748 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3746 v3747 
                        let v3749 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3750 : string = " " + v3749 + v1285 + ""
                        let v3751 : string = "Receipt ID"
                        (* run_target_args'
                        let v3756 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3757 : string = "&*$0"
                        let v3758 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3751 v3757 
                        let _run_target_args'_v3756 = v3758 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3759 : string = "&*$0"
                        let v3760 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3751 v3759 
                        let _run_target_args'_v3756 = v3760 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3761 : string = "&*$0"
                        let v3762 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3751 v3761 
                        let _run_target_args'_v3756 = v3762 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3764 : Ref<Str> = v3751 |> unbox<Ref<Str>>
                        let _run_target_args'_v3756 = v3764 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3768 : Ref<Str> = v3751 |> unbox<Ref<Str>>
                        let _run_target_args'_v3756 = v3768 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3772 : Ref<Str> = v3751 |> unbox<Ref<Str>>
                        let _run_target_args'_v3756 = v3772 
                        #endif
#else
                        let v3776 : Ref<Str> = v3751 |> unbox<Ref<Str>>
                        let _run_target_args'_v3756 = v3776 
                        #endif
                        let v3779 : Ref<Str> = _run_target_args'_v3756 
                        (* run_target_args'
                        let v3789 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3790 : string = "String::from($0)"
                        let v3791 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3779 v3790 
                        let _run_target_args'_v3789 = v3791 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3792 : string = "String::from($0)"
                        let v3793 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3779 v3792 
                        let _run_target_args'_v3789 = v3793 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3794 : string = "String::from($0)"
                        let v3795 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3779 v3794 
                        let _run_target_args'_v3789 = v3795 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3797 : std_string_String = v3779 |> unbox<std_string_String>
                        let _run_target_args'_v3789 = v3797 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3801 : std_string_String = v3779 |> unbox<std_string_String>
                        let _run_target_args'_v3789 = v3801 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3805 : std_string_String = v3779 |> unbox<std_string_String>
                        let _run_target_args'_v3789 = v3805 
                        #endif
#else
                        let v3809 : std_string_String = v3779 |> unbox<std_string_String>
                        let _run_target_args'_v3789 = v3809 
                        #endif
                        let v3812 : std_string_String = _run_target_args'_v3789 
                        let v3818 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3819 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3812 v3818 
                        let v3820 : string = "v3819"
                        let v3821 : string = v3820 + v1285 
                        let v3822 : string = v3821 + v1285 
                        let v3823 : string = "vec![" + v3822 + "]"
                        let v3824 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3823 
                        let v3825 : string = "leptos::prelude::Fragment::new($0)"
                        let v3826 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3824 v3825 
                        let v3827 : string = "leptos::prelude::AnyView::from($0)"
                        let v3828 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3826 v3827 
                        let v3829 : string = "<" + v2792 + " " + v3750 + ">move || { v3828 }</" + v2792 + ">"
                        let v3830 : string = "leptos::prelude::view! { " + v3829 + " }"
                        let v3831 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3830 
                        let v3832 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3831 |> unbox
                        let v3833 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3834 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3832 v3833 
                        let v3835 : string = "v3834"
                        let v3836 : string = v3835 + v1285 
                        let v3837 : string = v3836 + v1285 
                        let v3838 : string = "v3748"
                        let v3839 : string = v3838 + v1749 
                        let v3840 : string = v3839 + v3837 
                        let v3841 : string = "v3662"
                        let v3842 : string = v3841 + v1749 
                        let v3843 : string = v3842 + v3840 
                        let v3844 : string = "v3576"
                        let v3845 : string = v3844 + v1749 
                        let v3846 : string = v3845 + v3843 
                        let v3847 : string = "v3490"
                        let v3848 : string = v3847 + v1749 
                        let v3849 : string = v3848 + v3846 
                        let v3850 : string = "v3400"
                        let v3851 : string = v3850 + v1749 
                        let v3852 : string = v3851 + v3849 
                        let v3853 : string = "v3314"
                        let v3854 : string = v3853 + v1749 
                        let v3855 : string = v3854 + v3852 
                        let v3856 : string = "v3228"
                        let v3857 : string = v3856 + v1749 
                        let v3858 : string = v3857 + v3855 
                        let v3859 : string = "v3142"
                        let v3860 : string = v3859 + v1749 
                        let v3861 : string = v3860 + v3858 
                        let v3862 : string = "v3056"
                        let v3863 : string = v3862 + v1749 
                        let v3864 : string = v3863 + v3861 
                        let v3865 : string = "v2970"
                        let v3866 : string = v3865 + v1749 
                        let v3867 : string = v3866 + v3864 
                        let v3868 : string = "v2884"
                        let v3869 : string = v3868 + v1749 
                        let v3870 : string = v3869 + v3867 
                        let v3871 : string = "v2798"
                        let v3872 : string = v3871 + v1749 
                        let v3873 : string = v3872 + v3870 
                        let v3874 : string = "vec![" + v3873 + "]"
                        let v3875 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3874 
                        let v3876 : string = "leptos::prelude::Fragment::new($0)"
                        let v3877 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3875 v3876 
                        let v3878 : string = "leptos::prelude::AnyView::from($0)"
                        let v3879 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3877 v3878 
                        let v3880 : string = "<" + v2681 + " " + v1285 + ">move || { v3879 }</" + v2681 + ">"
                        let v3881 : string = "leptos::prelude::view! { " + v3880 + " }"
                        let v3882 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3881 
                        let v3883 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>> = v3882 |> unbox
                        let v3884 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3885 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3883 v3884 
                        let v3886 : string = "v3885"
                        let v3887 : string = v3886 + v1285 
                        let v3888 : string = v3887 + v1285 
                        let v3889 : string = "vec![" + v3888 + "]"
                        let v3890 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3889 
                        let v3891 : string = "leptos::prelude::Fragment::new($0)"
                        let v3892 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3890 v3891 
                        let v3893 : string = "class=\"flex-1 min-w-full divide-y-2 divide-gray-200 text-sm dark:divide-gray-700\""
                        let v3894 : string = " " + v3893 + v1285 + ""
                        let v3895 : string = "class=\"ltr:text-left rtl:text-right\""
                        let v3896 : string = " " + v3895 + v1285 + ""
                        let v3897 : string = "leptos::prelude::AnyView::from($0)"
                        let v3898 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3892 v3897 
                        let v3899 : string = "thead"
                        let v3900 : string = "<" + v3899 + " " + v3896 + ">move || { v3898 }</" + v3899 + ">"
                        let v3901 : string = "leptos::prelude::view! { " + v3900 + " }"
                        let v3902 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3901 
                        let v3903 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Thead>> = v3902 |> unbox
                        let v3904 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3905 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3903 v3904 
                        let v3906 : string = "class=\"divide-y divide-gray-200 dark:divide-gray-700\""
                        let v3907 : string = " " + v3906 + v1285 + ""
                        let v3908 : string = "leptos::prelude::AnyView::from($0)"
                        let v3909 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2708 v3908 
                        let v3910 : string = "tbody"
                        let v3911 : string = "<" + v3910 + " " + v3907 + ">move || { v3909 }</" + v3910 + ">"
                        let v3912 : string = "leptos::prelude::view! { " + v3911 + " }"
                        let v3913 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3912 
                        let v3914 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tbody>> = v3913 |> unbox
                        let v3915 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3916 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3914 v3915 
                        let v3917 : string = "v3916"
                        let v3918 : string = v3917 + v1285 
                        let v3919 : string = v3918 + v1285 
                        let v3920 : string = "v3905"
                        let v3921 : string = v3920 + v1749 
                        let v3922 : string = v3921 + v3919 
                        let v3923 : string = "vec![" + v3922 + "]"
                        let v3924 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3923 
                        let v3925 : string = "leptos::prelude::Fragment::new($0)"
                        let v3926 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3924 v3925 
                        let v3927 : string = "leptos::prelude::AnyView::from($0)"
                        let v3928 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3926 v3927 
                        let v3929 : string = "table"
                        let v3930 : string = "<" + v3929 + " " + v3894 + ">move || { v3928 }</" + v3929 + ">"
                        let v3931 : string = "leptos::prelude::view! { " + v3930 + " }"
                        let v3932 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3931 
                        let v3933 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Table>> = v3932 |> unbox
                        let v3934 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3935 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3933 v3934 
                        v3935
                | _ ->
                    let v3937 : string = "class=\"grid place-content-center py-[10vh]\""
                    let v3938 : string = ""
                    let v3939 : string = " " + v3937 + v3938 + ""
                    let v3940 : string = "class=\"flex flex-1 [gap:4px] items-center\""
                    let v3941 : string = " " + v3940 + v3938 + ""
                    let v3942 : string = "$0"
                    let v3943 : (unit -> string) = closure191()
                    let v3944 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3943 v3942 
                    let v3945 : string = "version=\"1.1\""
                    let v3946 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                    let v3947 : string = "xmlns:xlink=\"http://www.w3.org/1999/xlink\""
                    let v3948 : string = "x=\"0px\""
                    let v3949 : string = "y=\"0px\""
                    let v3950 : string = "viewBox=\"0 0 24 30\""
                    let v3951 : string = "style=\"enable-background:new 0 0 50 50;\""
                    let v3952 : string = "xml:space=\"preserve\""
                    let v3953 : string = "class=move || \" \".to_owned() + &v3944(())"
                    let v3954 : string = " " + v3945 + v3938 + ""
                    let v3955 : string = " " + v3946 + v3954 + ""
                    let v3956 : string = " " + v3947 + v3955 + ""
                    let v3957 : string = " " + v3948 + v3956 + ""
                    let v3958 : string = " " + v3949 + v3957 + ""
                    let v3959 : string = " " + v3950 + v3958 + ""
                    let v3960 : string = " " + v3951 + v3959 + ""
                    let v3961 : string = " " + v3952 + v3960 + ""
                    let v3962 : string = " " + v3953 + v3961 + ""
                    let v3963 : string = "x=\"0\""
                    let v3964 : string = "y=\"10\""
                    let v3965 : string = "width=\"4\""
                    let v3966 : string = "height=\"10\""
                    let v3967 : string = "fill=\"#333\""
                    let v3968 : string = "opacity=\"0.2\""
                    let v3969 : string = " " + v3963 + v3938 + ""
                    let v3970 : string = " " + v3964 + v3969 + ""
                    let v3971 : string = " " + v3965 + v3970 + ""
                    let v3972 : string = " " + v3966 + v3971 + ""
                    let v3973 : string = " " + v3967 + v3972 + ""
                    let v3974 : string = " " + v3968 + v3973 + ""
                    let v3975 : string = "attributeName=\"opacity\""
                    let v3976 : string = "attributeType=\"XML\""
                    let v3977 : string = "values=\"0.2; 1; .2\""
                    let v3978 : string = "begin=\"0s\""
                    let v3979 : string = "dur=\"0.6s\""
                    let v3980 : string = "repeatCount=\"indefinite\""
                    let v3981 : string = " " + v3975 + v3938 + ""
                    let v3982 : string = " " + v3976 + v3981 + ""
                    let v3983 : string = " " + v3977 + v3982 + ""
                    let v3984 : string = " " + v3978 + v3983 + ""
                    let v3985 : string = " " + v3979 + v3984 + ""
                    let v3986 : string = " " + v3980 + v3985 + ""
                    let v3987 : string = "vec![" + v3938 + "]"
                    let v3988 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3987 
                    let v3989 : string = "leptos::prelude::Fragment::new($0)"
                    let v3990 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3988 v3989 
                    let v3991 : string = "leptos::prelude::AnyView::from($0)"
                    let v3992 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3990 v3991 
                    let v3993 : string = "animate"
                    let v3994 : string = "<" + v3993 + " " + v3986 + ">move || { v3992 }</" + v3993 + ">"
                    let v3995 : string = "leptos::prelude::view! { " + v3994 + " }"
                    let v3996 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3995 
                    let v3997 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v3996 |> unbox
                    let v3998 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v3999 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3997 v3998 
                    let v4000 : string = "attributeName=\"height\""
                    let v4001 : string = "attributeType=\"XML\""
                    let v4002 : string = "values=\"10; 20; 10\""
                    let v4003 : string = "begin=\"0s\""
                    let v4004 : string = "dur=\"0.6s\""
                    let v4005 : string = "repeatCount=\"indefinite\""
                    let v4006 : string = " " + v4000 + v3938 + ""
                    let v4007 : string = " " + v4001 + v4006 + ""
                    let v4008 : string = " " + v4002 + v4007 + ""
                    let v4009 : string = " " + v4003 + v4008 + ""
                    let v4010 : string = " " + v4004 + v4009 + ""
                    let v4011 : string = " " + v4005 + v4010 + ""
                    let v4012 : string = "vec![" + v3938 + "]"
                    let v4013 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4012 
                    let v4014 : string = "leptos::prelude::Fragment::new($0)"
                    let v4015 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4013 v4014 
                    let v4016 : string = "leptos::prelude::AnyView::from($0)"
                    let v4017 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4015 v4016 
                    let v4018 : string = "<" + v3993 + " " + v4011 + ">move || { v4017 }</" + v3993 + ">"
                    let v4019 : string = "leptos::prelude::view! { " + v4018 + " }"
                    let v4020 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4019 
                    let v4021 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4020 |> unbox
                    let v4022 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4023 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4021 v4022 
                    let v4024 : string = "attributeName=\"y\""
                    let v4025 : string = "attributeType=\"XML\""
                    let v4026 : string = "values=\"10; 5; 10\""
                    let v4027 : string = "begin=\"0s\""
                    let v4028 : string = "dur=\"0.6s\""
                    let v4029 : string = "repeatCount=\"indefinite\""
                    let v4030 : string = " " + v4024 + v3938 + ""
                    let v4031 : string = " " + v4025 + v4030 + ""
                    let v4032 : string = " " + v4026 + v4031 + ""
                    let v4033 : string = " " + v4027 + v4032 + ""
                    let v4034 : string = " " + v4028 + v4033 + ""
                    let v4035 : string = " " + v4029 + v4034 + ""
                    let v4036 : string = "vec![" + v3938 + "]"
                    let v4037 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4036 
                    let v4038 : string = "leptos::prelude::Fragment::new($0)"
                    let v4039 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4037 v4038 
                    let v4040 : string = "leptos::prelude::AnyView::from($0)"
                    let v4041 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4039 v4040 
                    let v4042 : string = "<" + v3993 + " " + v4035 + ">move || { v4041 }</" + v3993 + ">"
                    let v4043 : string = "leptos::prelude::view! { " + v4042 + " }"
                    let v4044 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4043 
                    let v4045 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4044 |> unbox
                    let v4046 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4047 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4045 v4046 
                    let v4048 : string = "v4047"
                    let v4049 : string = v4048 + v3938 
                    let v4050 : string = v4049 + v3938 
                    let v4051 : string = "v4023"
                    let v4052 : string = ", "
                    let v4053 : string = v4051 + v4052 
                    let v4054 : string = v4053 + v4050 
                    let v4055 : string = "v3999"
                    let v4056 : string = v4055 + v4052 
                    let v4057 : string = v4056 + v4054 
                    let v4058 : string = "vec![" + v4057 + "]"
                    let v4059 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4058 
                    let v4060 : string = "leptos::prelude::Fragment::new($0)"
                    let v4061 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4059 v4060 
                    let v4062 : string = "leptos::prelude::AnyView::from($0)"
                    let v4063 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4061 v4062 
                    let v4064 : string = "rect"
                    let v4065 : string = "<" + v4064 + " " + v3974 + ">move || { v4063 }</" + v4064 + ">"
                    let v4066 : string = "leptos::prelude::view! { " + v4065 + " }"
                    let v4067 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4066 
                    let v4068 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v4067 |> unbox
                    let v4069 : string = "x=\"8\""
                    let v4070 : string = "y=\"10\""
                    let v4071 : string = "width=\"4\""
                    let v4072 : string = "height=\"10\""
                    let v4073 : string = "fill=\"#333\""
                    let v4074 : string = "opacity=\"0.2\""
                    let v4075 : string = " " + v4069 + v3938 + ""
                    let v4076 : string = " " + v4070 + v4075 + ""
                    let v4077 : string = " " + v4071 + v4076 + ""
                    let v4078 : string = " " + v4072 + v4077 + ""
                    let v4079 : string = " " + v4073 + v4078 + ""
                    let v4080 : string = " " + v4074 + v4079 + ""
                    let v4081 : string = "attributeName=\"opacity\""
                    let v4082 : string = "attributeType=\"XML\""
                    let v4083 : string = "values=\"0.2; 1; .2\""
                    let v4084 : string = "begin=\"0.15s\""
                    let v4085 : string = "dur=\"0.6s\""
                    let v4086 : string = "repeatCount=\"indefinite\""
                    let v4087 : string = " " + v4081 + v3938 + ""
                    let v4088 : string = " " + v4082 + v4087 + ""
                    let v4089 : string = " " + v4083 + v4088 + ""
                    let v4090 : string = " " + v4084 + v4089 + ""
                    let v4091 : string = " " + v4085 + v4090 + ""
                    let v4092 : string = " " + v4086 + v4091 + ""
                    let v4093 : string = "vec![" + v3938 + "]"
                    let v4094 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4093 
                    let v4095 : string = "leptos::prelude::Fragment::new($0)"
                    let v4096 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4094 v4095 
                    let v4097 : string = "leptos::prelude::AnyView::from($0)"
                    let v4098 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4096 v4097 
                    let v4099 : string = "<" + v3993 + " " + v4092 + ">move || { v4098 }</" + v3993 + ">"
                    let v4100 : string = "leptos::prelude::view! { " + v4099 + " }"
                    let v4101 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4100 
                    let v4102 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4101 |> unbox
                    let v4103 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4104 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4102 v4103 
                    let v4105 : string = "attributeName=\"opacity\""
                    let v4106 : string = "attributeType=\"XML\""
                    let v4107 : string = "values=\"10; 20; 10\""
                    let v4108 : string = "begin=\"0.15s\""
                    let v4109 : string = "dur=\"0.6s\""
                    let v4110 : string = "repeatCount=\"indefinite\""
                    let v4111 : string = " " + v4105 + v3938 + ""
                    let v4112 : string = " " + v4106 + v4111 + ""
                    let v4113 : string = " " + v4107 + v4112 + ""
                    let v4114 : string = " " + v4108 + v4113 + ""
                    let v4115 : string = " " + v4109 + v4114 + ""
                    let v4116 : string = " " + v4110 + v4115 + ""
                    let v4117 : string = "vec![" + v3938 + "]"
                    let v4118 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4117 
                    let v4119 : string = "leptos::prelude::Fragment::new($0)"
                    let v4120 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4118 v4119 
                    let v4121 : string = "leptos::prelude::AnyView::from($0)"
                    let v4122 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4120 v4121 
                    let v4123 : string = "<" + v3993 + " " + v4116 + ">move || { v4122 }</" + v3993 + ">"
                    let v4124 : string = "leptos::prelude::view! { " + v4123 + " }"
                    let v4125 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4124 
                    let v4126 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4125 |> unbox
                    let v4127 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4128 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4126 v4127 
                    let v4129 : string = "attributeName=\"y\""
                    let v4130 : string = "attributeType=\"XML\""
                    let v4131 : string = "values=\"10; 5; 10\""
                    let v4132 : string = "begin=\"0.15s\""
                    let v4133 : string = "dur=\"0.6s\""
                    let v4134 : string = "repeatCount=\"indefinite\""
                    let v4135 : string = " " + v4129 + v3938 + ""
                    let v4136 : string = " " + v4130 + v4135 + ""
                    let v4137 : string = " " + v4131 + v4136 + ""
                    let v4138 : string = " " + v4132 + v4137 + ""
                    let v4139 : string = " " + v4133 + v4138 + ""
                    let v4140 : string = " " + v4134 + v4139 + ""
                    let v4141 : string = "vec![" + v3938 + "]"
                    let v4142 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4141 
                    let v4143 : string = "leptos::prelude::Fragment::new($0)"
                    let v4144 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4142 v4143 
                    let v4145 : string = "leptos::prelude::AnyView::from($0)"
                    let v4146 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4144 v4145 
                    let v4147 : string = "<" + v3993 + " " + v4140 + ">move || { v4146 }</" + v3993 + ">"
                    let v4148 : string = "leptos::prelude::view! { " + v4147 + " }"
                    let v4149 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4148 
                    let v4150 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4149 |> unbox
                    let v4151 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4152 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4150 v4151 
                    let v4153 : string = "v4152"
                    let v4154 : string = v4153 + v3938 
                    let v4155 : string = v4154 + v3938 
                    let v4156 : string = "v4128"
                    let v4157 : string = v4156 + v4052 
                    let v4158 : string = v4157 + v4155 
                    let v4159 : string = "v4104"
                    let v4160 : string = v4159 + v4052 
                    let v4161 : string = v4160 + v4158 
                    let v4162 : string = "vec![" + v4161 + "]"
                    let v4163 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4162 
                    let v4164 : string = "leptos::prelude::Fragment::new($0)"
                    let v4165 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4163 v4164 
                    let v4166 : string = "leptos::prelude::AnyView::from($0)"
                    let v4167 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4165 v4166 
                    let v4168 : string = "<" + v4064 + " " + v4080 + ">move || { v4167 }</" + v4064 + ">"
                    let v4169 : string = "leptos::prelude::view! { " + v4168 + " }"
                    let v4170 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4169 
                    let v4171 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v4170 |> unbox
                    let v4172 : string = "x=\"16\""
                    let v4173 : string = "y=\"10\""
                    let v4174 : string = "width=\"4\""
                    let v4175 : string = "height=\"10\""
                    let v4176 : string = "fill=\"#333\""
                    let v4177 : string = "opacity=\"0.2\""
                    let v4178 : string = " " + v4172 + v3938 + ""
                    let v4179 : string = " " + v4173 + v4178 + ""
                    let v4180 : string = " " + v4174 + v4179 + ""
                    let v4181 : string = " " + v4175 + v4180 + ""
                    let v4182 : string = " " + v4176 + v4181 + ""
                    let v4183 : string = " " + v4177 + v4182 + ""
                    let v4184 : string = "attributeName=\"opacity\""
                    let v4185 : string = "attributeType=\"XML\""
                    let v4186 : string = "values=\"0.2; 1; .2\""
                    let v4187 : string = "begin=\"0.3s\""
                    let v4188 : string = "dur=\"0.6s\""
                    let v4189 : string = "repeatCount=\"indefinite\""
                    let v4190 : string = " " + v4184 + v3938 + ""
                    let v4191 : string = " " + v4185 + v4190 + ""
                    let v4192 : string = " " + v4186 + v4191 + ""
                    let v4193 : string = " " + v4187 + v4192 + ""
                    let v4194 : string = " " + v4188 + v4193 + ""
                    let v4195 : string = " " + v4189 + v4194 + ""
                    let v4196 : string = "vec![" + v3938 + "]"
                    let v4197 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4196 
                    let v4198 : string = "leptos::prelude::Fragment::new($0)"
                    let v4199 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4197 v4198 
                    let v4200 : string = "leptos::prelude::AnyView::from($0)"
                    let v4201 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4199 v4200 
                    let v4202 : string = "<" + v3993 + " " + v4195 + ">move || { v4201 }</" + v3993 + ">"
                    let v4203 : string = "leptos::prelude::view! { " + v4202 + " }"
                    let v4204 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4203 
                    let v4205 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4204 |> unbox
                    let v4206 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4207 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4205 v4206 
                    let v4208 : string = "attributeName=\"height\""
                    let v4209 : string = "attributeType=\"XML\""
                    let v4210 : string = "values=\"10; 20; 10\""
                    let v4211 : string = "begin=\"0.3s\""
                    let v4212 : string = "dur=\"0.6s\""
                    let v4213 : string = "repeatCount=\"indefinite\""
                    let v4214 : string = " " + v4208 + v3938 + ""
                    let v4215 : string = " " + v4209 + v4214 + ""
                    let v4216 : string = " " + v4210 + v4215 + ""
                    let v4217 : string = " " + v4211 + v4216 + ""
                    let v4218 : string = " " + v4212 + v4217 + ""
                    let v4219 : string = " " + v4213 + v4218 + ""
                    let v4220 : string = "vec![" + v3938 + "]"
                    let v4221 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4220 
                    let v4222 : string = "leptos::prelude::Fragment::new($0)"
                    let v4223 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4221 v4222 
                    let v4224 : string = "leptos::prelude::AnyView::from($0)"
                    let v4225 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4223 v4224 
                    let v4226 : string = "<" + v3993 + " " + v4219 + ">move || { v4225 }</" + v3993 + ">"
                    let v4227 : string = "leptos::prelude::view! { " + v4226 + " }"
                    let v4228 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4227 
                    let v4229 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4228 |> unbox
                    let v4230 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4231 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4229 v4230 
                    let v4232 : string = "attributeName=\"y\""
                    let v4233 : string = "attributeType=\"XML\""
                    let v4234 : string = "values=\"10; 5; 10\""
                    let v4235 : string = "begin=\"0.3s\""
                    let v4236 : string = "dur=\"0.6s\""
                    let v4237 : string = "repeatCount=\"indefinite\""
                    let v4238 : string = " " + v4232 + v3938 + ""
                    let v4239 : string = " " + v4233 + v4238 + ""
                    let v4240 : string = " " + v4234 + v4239 + ""
                    let v4241 : string = " " + v4235 + v4240 + ""
                    let v4242 : string = " " + v4236 + v4241 + ""
                    let v4243 : string = " " + v4237 + v4242 + ""
                    let v4244 : string = "vec![" + v3938 + "]"
                    let v4245 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4244 
                    let v4246 : string = "leptos::prelude::Fragment::new($0)"
                    let v4247 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4245 v4246 
                    let v4248 : string = "leptos::prelude::AnyView::from($0)"
                    let v4249 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4247 v4248 
                    let v4250 : string = "<" + v3993 + " " + v4243 + ">move || { v4249 }</" + v3993 + ">"
                    let v4251 : string = "leptos::prelude::view! { " + v4250 + " }"
                    let v4252 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4251 
                    let v4253 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4252 |> unbox
                    let v4254 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4255 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4253 v4254 
                    let v4256 : string = "v4255"
                    let v4257 : string = v4256 + v3938 
                    let v4258 : string = v4257 + v3938 
                    let v4259 : string = "v4231"
                    let v4260 : string = v4259 + v4052 
                    let v4261 : string = v4260 + v4258 
                    let v4262 : string = "v4207"
                    let v4263 : string = v4262 + v4052 
                    let v4264 : string = v4263 + v4261 
                    let v4265 : string = "vec![" + v4264 + "]"
                    let v4266 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4265 
                    let v4267 : string = "leptos::prelude::Fragment::new($0)"
                    let v4268 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4266 v4267 
                    let v4269 : string = "leptos::prelude::AnyView::from($0)"
                    let v4270 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4268 v4269 
                    let v4271 : string = "<" + v4064 + " " + v4183 + ">move || { v4270 }</" + v4064 + ">"
                    let v4272 : string = "leptos::prelude::view! { " + v4271 + " }"
                    let v4273 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4272 
                    let v4274 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v4273 |> unbox
                    let v4275 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4276 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4274 v4275 
                    let v4277 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4278 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4171 v4277 
                    let v4279 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4280 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4068 v4279 
                    let v4281 : string = "v4276"
                    let v4282 : string = v4281 + v3938 
                    let v4283 : string = v4282 + v3938 
                    let v4284 : string = "v4278"
                    let v4285 : string = v4284 + v4052 
                    let v4286 : string = v4285 + v4283 
                    let v4287 : string = "v4280"
                    let v4288 : string = v4287 + v4052 
                    let v4289 : string = v4288 + v4286 
                    let v4290 : string = "vec![" + v4289 + "]"
                    let v4291 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4290 
                    let v4292 : string = "leptos::prelude::Fragment::new($0)"
                    let v4293 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4291 v4292 
                    let v4294 : string = "leptos::prelude::AnyView::from($0)"
                    let v4295 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4293 v4294 
                    let v4296 : string = "svg"
                    let v4297 : string = "<" + v4296 + " " + v3962 + ">move || { v4295 }</" + v4296 + ">"
                    let v4298 : string = "leptos::prelude::view! { " + v4297 + " }"
                    let v4299 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4298 
                    let v4300 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4299 |> unbox
                    let v4301 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4302 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4300 v4301 
                    let v4303 : string = "Loading..."
                    (* run_target_args'
                    let v4308 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v4309 : string = "&*$0"
                    let v4310 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4303 v4309 
                    let _run_target_args'_v4308 = v4310 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v4311 : string = "&*$0"
                    let v4312 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4303 v4311 
                    let _run_target_args'_v4308 = v4312 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v4313 : string = "&*$0"
                    let v4314 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4303 v4313 
                    let _run_target_args'_v4308 = v4314 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v4316 : Ref<Str> = v4303 |> unbox<Ref<Str>>
                    let _run_target_args'_v4308 = v4316 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v4320 : Ref<Str> = v4303 |> unbox<Ref<Str>>
                    let _run_target_args'_v4308 = v4320 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v4324 : Ref<Str> = v4303 |> unbox<Ref<Str>>
                    let _run_target_args'_v4308 = v4324 
                    #endif
#else
                    let v4328 : Ref<Str> = v4303 |> unbox<Ref<Str>>
                    let _run_target_args'_v4308 = v4328 
                    #endif
                    let v4331 : Ref<Str> = _run_target_args'_v4308 
                    (* run_target_args'
                    let v4341 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v4342 : string = "String::from($0)"
                    let v4343 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4331 v4342 
                    let _run_target_args'_v4341 = v4343 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v4344 : string = "String::from($0)"
                    let v4345 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4331 v4344 
                    let _run_target_args'_v4341 = v4345 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v4346 : string = "String::from($0)"
                    let v4347 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4331 v4346 
                    let _run_target_args'_v4341 = v4347 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v4349 : std_string_String = v4331 |> unbox<std_string_String>
                    let _run_target_args'_v4341 = v4349 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v4353 : std_string_String = v4331 |> unbox<std_string_String>
                    let _run_target_args'_v4341 = v4353 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v4357 : std_string_String = v4331 |> unbox<std_string_String>
                    let _run_target_args'_v4341 = v4357 
                    #endif
#else
                    let v4361 : std_string_String = v4331 |> unbox<std_string_String>
                    let _run_target_args'_v4341 = v4361 
                    #endif
                    let v4364 : std_string_String = _run_target_args'_v4341 
                    let v4370 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v4371 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4364 v4370 
                    let v4372 : string = "v4371"
                    let v4373 : string = v4372 + v3938 
                    let v4374 : string = v4373 + v3938 
                    let v4375 : string = "v4302"
                    let v4376 : string = v4375 + v4052 
                    let v4377 : string = v4376 + v4374 
                    let v4378 : string = "vec![" + v4377 + "]"
                    let v4379 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4378 
                    let v4380 : string = "leptos::prelude::Fragment::new($0)"
                    let v4381 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4379 v4380 
                    let v4382 : string = "leptos::prelude::AnyView::from($0)"
                    let v4383 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4381 v4382 
                    let v4384 : string = "div"
                    let v4385 : string = "<" + v4384 + " " + v3941 + ">move || { v4383 }</" + v4384 + ">"
                    let v4386 : string = "leptos::prelude::view! { " + v4385 + " }"
                    let v4387 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4386 
                    let v4388 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4387 |> unbox
                    let v4389 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4390 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4388 v4389 
                    let v4391 : string = "v4390"
                    let v4392 : string = v4391 + v3938 
                    let v4393 : string = v4392 + v3938 
                    let v4394 : string = "vec![" + v4393 + "]"
                    let v4395 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4394 
                    let v4396 : string = "leptos::prelude::Fragment::new($0)"
                    let v4397 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4395 v4396 
                    let v4398 : string = "leptos::prelude::AnyView::from($0)"
                    let v4399 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4397 v4398 
                    let v4400 : string = "<" + v4384 + " " + v3939 + ">move || { v4399 }</" + v4384 + ">"
                    let v4401 : string = "leptos::prelude::view! { " + v4400 + " }"
                    let v4402 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4401 
                    let v4403 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4402 |> unbox
                    let v4404 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4405 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4403 v4404 
                    v4405
    let v4589 : string = "v4588"
    let v4590 : string = ""
    let v4591 : string = v4589 + v4590 
    let v4592 : string = v4591 + v4590 
    let v4593 : string = "v144"
    let v4594 : string = ", "
    let v4595 : string = v4593 + v4594 
    let v4596 : string = v4595 + v4592 
    let v4597 : string = "vec![" + v4596 + "]"
    let v4598 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4597 
    let v4599 : string = "leptos::prelude::Fragment::new($0)"
    let v4600 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4598 v4599 
    v4600
and closure337 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure338 () () : Ref<Lifetime<StaticLifetime, Str>> =
    let v0 : string = ""
    let v1 : string = "r#\"" + v0 + "\"#"
    let v2 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v1 
    v2
and closure339 () () : string =
    let v0 : string = "Debug"
    v0
and method282 () : (unit -> string) =
    closure339()
and closure341 () () : leptos_dom_Fragment =
    let v0 : string = "Transactions"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method283 () : (unit -> leptos_dom_Fragment) =
    closure341()
and closure343 () () : string =
    let v0 : string = "[max-height:70vh]"
    v0
and closure342 (v0 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>) () : leptos_dom_Fragment =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    (* run_target_args'
    let v7 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v8 : string = "format!(\"{:#?}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2 v8 
    let v10 : string = "fable_library_rust::String_::fromString($0)"
    let v11 : string = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let _run_target_args'_v7 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "format!(\"{:#?}\", $0)"
    let v13 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2 v12 
    let v14 : string = "fable_library_rust::String_::fromString($0)"
    let v15 : string = Fable.Core.RustInterop.emitRustExpr v13 v14 
    let _run_target_args'_v7 = v15 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v16 : string = "format!(\"{:#?}\", $0)"
    let v17 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2 v16 
    let v18 : string = "fable_library_rust::String_::fromString($0)"
    let v19 : string = Fable.Core.RustInterop.emitRustExpr v17 v18 
    let _run_target_args'_v7 = v19 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v21 : string = $"%A{v2}"
    let _run_target_args'_v7 = v21 
    #endif
#if FABLE_COMPILER_PYTHON
    let v25 : string = $"%A{v2}"
    let _run_target_args'_v7 = v25 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v29 : string = $"%A{v2}"
    let _run_target_args'_v7 = v29 
    #endif
#else
    let v33 : string = $"%A{v2}"
    let _run_target_args'_v7 = v33 
    #endif
    let v36 : string = _run_target_args'_v7 
    let v42 : string = "$0"
    let v43 : (unit -> string) = closure343()
    let v44 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v43 v42 
    let v45 : string = "class=move || \"[padding:1px] [font-size:12px] [line-height:12px] [text-wrap:pretty] \".to_owned() + &v44(())"
    let v46 : string = ""
    let v47 : string = " " + v45 + v46 + ""
    (* run_target_args'
    let v52 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v53 : string = "&*$0"
    let v54 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v36 v53 
    let _run_target_args'_v52 = v54 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v55 : string = "&*$0"
    let v56 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v36 v55 
    let _run_target_args'_v52 = v56 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v57 : string = "&*$0"
    let v58 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v36 v57 
    let _run_target_args'_v52 = v58 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v60 : Ref<Str> = v36 |> unbox<Ref<Str>>
    let _run_target_args'_v52 = v60 
    #endif
#if FABLE_COMPILER_PYTHON
    let v64 : Ref<Str> = v36 |> unbox<Ref<Str>>
    let _run_target_args'_v52 = v64 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v68 : Ref<Str> = v36 |> unbox<Ref<Str>>
    let _run_target_args'_v52 = v68 
    #endif
#else
    let v72 : Ref<Str> = v36 |> unbox<Ref<Str>>
    let _run_target_args'_v52 = v72 
    #endif
    let v75 : Ref<Str> = _run_target_args'_v52 
    (* run_target_args'
    let v85 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v86 : string = "String::from($0)"
    let v87 : std_string_String = Fable.Core.RustInterop.emitRustExpr v75 v86 
    let _run_target_args'_v85 = v87 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v88 : string = "String::from($0)"
    let v89 : std_string_String = Fable.Core.RustInterop.emitRustExpr v75 v88 
    let _run_target_args'_v85 = v89 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v90 : string = "String::from($0)"
    let v91 : std_string_String = Fable.Core.RustInterop.emitRustExpr v75 v90 
    let _run_target_args'_v85 = v91 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v93 : std_string_String = v75 |> unbox<std_string_String>
    let _run_target_args'_v85 = v93 
    #endif
#if FABLE_COMPILER_PYTHON
    let v97 : std_string_String = v75 |> unbox<std_string_String>
    let _run_target_args'_v85 = v97 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v101 : std_string_String = v75 |> unbox<std_string_String>
    let _run_target_args'_v85 = v101 
    #endif
#else
    let v105 : std_string_String = v75 |> unbox<std_string_String>
    let _run_target_args'_v85 = v105 
    #endif
    let v108 : std_string_String = _run_target_args'_v85 
    let v114 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v115 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v108 v114 
    let v116 : string = "v115"
    let v117 : string = v116 + v46 
    let v118 : string = v117 + v46 
    let v119 : string = "vec![" + v118 + "]"
    let v120 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v119 
    let v121 : string = "leptos::prelude::Fragment::new($0)"
    let v122 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v120 v121 
    let v123 : string = "leptos::prelude::AnyView::from($0)"
    let v124 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v122 v123 
    let v125 : string = "pre"
    let v126 : string = "<" + v125 + " " + v47 + ">move || { v124 }</" + v125 + ">"
    let v127 : string = "leptos::prelude::view! { " + v126 + " }"
    let v128 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v127 
    let v129 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v128 |> unbox
    let v130 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v131 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v129 v130 
    let v132 : string = "v131"
    let v133 : string = v132 + v46 
    let v134 : string = v133 + v46 
    let v135 : string = "vec![" + v134 + "]"
    let v136 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v135 
    let v137 : string = "leptos::prelude::Fragment::new($0)"
    let v138 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v136 v137 
    v138
and method284 (v0 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>) : (unit -> leptos_dom_Fragment) =
    closure342(v0)
and closure340 (v0 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>) () : leptos_dom_Fragment =
    let v1 : (unit -> leptos_dom_Fragment) = method283()
    let v2 : (unit -> leptos_dom_Fragment) = method284(v0)
    let v3 : string = "$0"
    let v4 : (unit -> string) = closure253()
    let v5 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4 v3 
    let v6 : string = "$0"
    let v7 : (unit -> string) = closure234()
    let v8 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v7 v6 
    let v9 : string = "$0"
    let v10 : (unit -> string) = closure235()
    let v11 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v10 v9 
    let v12 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v11(()) + \" \" + &v8(()) + \" \" + &v5(())"
    let v13 : string = ""
    let v14 : string = " " + v12 + v13 + ""
    let v15 : string = "$0"
    let v16 : (unit -> string) = closure236()
    let v17 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v16 v15 
    let v18 : string = "class=\"[font-size:12px] text-gray-400\""
    let v19 : string = " " + v18 + v13 + ""
    let v20 : leptos_dom_Fragment = v1 ()
    let v21 : string = "leptos::prelude::AnyView::from($0)"
    let v22 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : string = "dt"
    let v24 : string = "<" + v23 + " " + v19 + ">move || { v22 }</" + v23 + ">"
    let v25 : string = "leptos::prelude::view! { " + v24 + " }"
    let v26 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v25 
    let v27 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v26 |> unbox
    let v28 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v29 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v27 v28 
    let v30 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v17(())"
    let v31 : string = " " + v30 + v13 + ""
    let v32 : leptos_dom_Fragment = v2 ()
    let v33 : string = "leptos::prelude::AnyView::from($0)"
    let v34 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v32 v33 
    let v35 : string = "dd"
    let v36 : string = "<" + v35 + " " + v31 + ">move || { v34 }</" + v35 + ">"
    let v37 : string = "leptos::prelude::view! { " + v36 + " }"
    let v38 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v37 
    let v39 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v38 |> unbox
    let v40 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v41 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v39 v40 
    let v42 : string = "v41"
    let v43 : string = v42 + v13 
    let v44 : string = v43 + v13 
    let v45 : string = "v29"
    let v46 : string = ", "
    let v47 : string = v45 + v46 
    let v48 : string = v47 + v44 
    let v49 : string = "vec![" + v48 + "]"
    let v50 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v49 
    let v51 : string = "leptos::prelude::Fragment::new($0)"
    let v52 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v50 v51 
    let v53 : string = "leptos::prelude::AnyView::from($0)"
    let v54 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v52 v53 
    let v55 : string = "dl"
    let v56 : string = "<" + v55 + " " + v14 + ">move || { v54 }</" + v55 + ">"
    let v57 : string = "leptos::prelude::view! { " + v56 + " }"
    let v58 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v57 
    let v59 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v58 |> unbox
    let v60 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v61 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v59 v60 
    let v62 : string = "v61"
    let v63 : string = v62 + v13 
    let v64 : string = v63 + v13 
    let v65 : string = "vec![" + v64 + "]"
    let v66 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v65 
    let v67 : string = "leptos::prelude::Fragment::new($0)"
    let v68 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v66 v67 
    v68
and closure344 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_4 -> (* Settings *)
        true
    | _ ->
        false
and method285 (v0 : leptos_prelude_ReadSignal<US18>) : (unit -> bool) =
    closure344(v0)
and closure345 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_3 -> (* Transactions *)
        true
    | _ ->
        false
and method286 (v0 : leptos_prelude_ReadSignal<US18>) : (unit -> bool) =
    closure345(v0)
and closure346 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_2 -> (* Lists *)
        true
    | _ ->
        false
and method287 (v0 : leptos_prelude_ReadSignal<US18>) : (unit -> bool) =
    closure346(v0)
and closure347 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_1(v3) -> (* Dice *)
        match v3 with
        | US19_0 -> (* Dice' *)
            true
        | _ ->
            false
    | _ ->
        false
and method288 (v0 : leptos_prelude_ReadSignal<US18>) : (unit -> bool) =
    closure347(v0)
and closure348 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and closure349 (v0 : leptos_prelude_ArcMemo<string>) () : std_string_String =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "settings"
    let v4 : string = v2 + "#/" + v3 + ""
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    v65
and closure350 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_4 -> (* Settings *)
        true
    | _ ->
        false
and closure351 (v0 : leptos_prelude_ReadSignal<US18>) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : bool =
        match v2 with
        | US18_4 -> (* Settings *)
            true
        | _ ->
            false
    if v3 then
        let v4 : string = "border-grey-200 text-grey-900"
        let v5 : string = "r#\"" + v4 + "\"#"
        let v6 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v5 
        v6
    else
        let v7 : string = "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700"
        let v8 : string = "r#\"" + v7 + "\"#"
        let v9 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v8 
        v9
and closure352 (v0 : leptos_prelude_ArcMemo<string>) () : std_string_String =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "transactions"
    let v4 : string = v2 + "#/" + v3 + ""
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    v65
and closure353 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_3 -> (* Transactions *)
        true
    | _ ->
        false
and closure354 (v0 : leptos_prelude_ReadSignal<US18>) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : bool =
        match v2 with
        | US18_3 -> (* Transactions *)
            true
        | _ ->
            false
    if v3 then
        let v4 : string = "border-grey-200 text-grey-900"
        let v5 : string = "r#\"" + v4 + "\"#"
        let v6 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v5 
        v6
    else
        let v7 : string = "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700"
        let v8 : string = "r#\"" + v7 + "\"#"
        let v9 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v8 
        v9
and closure355 (v0 : leptos_prelude_ArcMemo<string>) () : std_string_String =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "lists"
    let v4 : string = v2 + "#/" + v3 + ""
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    v65
and closure356 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_2 -> (* Lists *)
        true
    | _ ->
        false
and closure357 (v0 : leptos_prelude_ReadSignal<US18>) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : bool =
        match v2 with
        | US18_2 -> (* Lists *)
            true
        | _ ->
            false
    if v3 then
        let v4 : string = "border-grey-200 text-grey-900"
        let v5 : string = "r#\"" + v4 + "\"#"
        let v6 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v5 
        v6
    else
        let v7 : string = "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700"
        let v8 : string = "r#\"" + v7 + "\"#"
        let v9 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v8 
        v9
and closure358 (v0 : leptos_prelude_ArcMemo<string>) () : std_string_String =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "dice"
    let v4 : string = v2 + "#/" + v3 + ""
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    v65
and closure359 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_1(v3) -> (* Dice *)
        match v3 with
        | US19_0 -> (* Dice' *)
            true
        | _ ->
            false
    | _ ->
        false
and closure360 (v0 : leptos_prelude_ReadSignal<US18>) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v5 : bool =
        match v2 with
        | US18_1(v3) -> (* Dice *)
            match v3 with
            | US19_0 -> (* Dice' *)
                true
            | _ ->
                false
        | _ ->
            false
    if v5 then
        let v6 : string = "border-grey-200 text-grey-900"
        let v7 : string = "r#\"" + v6 + "\"#"
        let v8 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v7 
        v8
    else
        let v9 : string = "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700"
        let v10 : string = "r#\"" + v9 + "\"#"
        let v11 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v10 
        v11
and closure5 () (v0 : int32) : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> =
    let v1 : string = "home.render () / router: " + string v0 + ""
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
    let v5 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = "$0.unwrap()"
    let v7 : Heap2 = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : string = "state_core.use_database (1)"
    let v9 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v10 : bool = Fable.Core.RustInterop.emitRustExpr v8 v9 
    let v11 : unit = ()
    let v12 : string = $"true; let _func0_from_v11 = Func0::from(move || {{ //"
    let v13 : bool = Fable.Core.RustInterop.emitRustExpr () v12 
    let v14 : string = "true; let __future_init = Box::pin(/*"
    let v15 : bool = Fable.Core.RustInterop.emitRustExpr () v14 
    let v16 : string = "*/ async move { /*"
    let v17 : bool = Fable.Core.RustInterop.emitRustExpr () v16 
    let v18 : string = "*/ ()"
    let v19 : bool = Fable.Core.RustInterop.emitRustExpr () v18 
    let v20 : string = "state_core.use_database (2) / database new_local_resource"
    let v21 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : string = "state_core.build_database ()"
    let v24 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr v23 v24 
    let v26 : string = "true; let __future_init = Box::pin(/*"
    let v27 : bool = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : string = "*/ async { /*"
    let v29 : bool = Fable.Core.RustInterop.emitRustExpr () v28 
    let v30 : string = "*/ ()"
    let v31 : bool = Fable.Core.RustInterop.emitRustExpr () v30 
    let v32 : string = "Box::pin(rexie::Rexie::builder(\"database\").version(1).add_object_store(rexie::ObjectStore::new(\"store\")).build())"
    let v33 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v32 
    let v34 : string = "v33.await"
    let v35 : Result<rexie_Rexie, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v34 
    let v36 : (rexie_Error -> std_string_String) = method6()
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "$0.map_err(|x| $1(x))"
    let v40 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v35, v36) v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "$0.map_err(|x| $1(x))"
    let v42 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v35, v36) v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "$0.map_err(|x| $1(x))"
    let v44 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v35, v36) v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v45 : Result<rexie_Rexie, std_string_String> = match v35 with Ok x -> Ok x | Error x -> Error (v36 x)
    let _run_target_args'_v38 = v45 
    #endif
#if FABLE_COMPILER_PYTHON
    let v46 : Result<rexie_Rexie, std_string_String> = match v35 with Ok x -> Ok x | Error x -> Error (v36 x)
    let _run_target_args'_v38 = v46 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v47 : Result<rexie_Rexie, std_string_String> = match v35 with Ok x -> Ok x | Error x -> Error (v36 x)
    let _run_target_args'_v38 = v47 
    #endif
#else
    let v48 : Result<rexie_Rexie, std_string_String> = match v35 with Ok x -> Ok x | Error x -> Error (v36 x)
    let _run_target_args'_v38 = v48 
    #endif
    let v49 : Result<rexie_Rexie, std_string_String> = _run_target_args'_v38 
    let v52 : string = ""
    let v53 : string = "}"
    let v54 : string = v52 + v53 
    let x = v49 //
    let v55 : _ = x
    let v56 : unit = ()
    (* run_target_args'
    let v57 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v58 : string = $"true; let _fix_closure_v56 = $0"
    let v59 : bool = Fable.Core.RustInterop.emitRustExpr v55 v58 
    let _run_target_args'_v57 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v60 : string = $"true; let _fix_closure_v56 = $0"
    let v61 : bool = Fable.Core.RustInterop.emitRustExpr v55 v60 
    let _run_target_args'_v57 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v62 : string = $"true; let _fix_closure_v56 = $0"
    let v63 : bool = Fable.Core.RustInterop.emitRustExpr v55 v62 
    let _run_target_args'_v57 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v57 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v57 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v57 = false 
    #endif
#else
    let _run_target_args'_v57 = false 
    #endif
    let v64 : bool = _run_target_args'_v57 
    let v66 : string = $"true; _fix_closure_v56 " + v54 + "); " + v52 + " // rust.fix_closure'"
    let v67 : bool = Fable.Core.RustInterop.emitRustExpr () v66 
    let v68 : string = "__future_init"
    let v69 : _ = Fable.Core.RustInterop.emitRustExpr () v68 
    let v70 : string = "v69"
    let v71 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v70 
    let v72 : string = "v71.await"
    let v73 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v72 
    (* run_target_args'
    let v75 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v76 : string = "$0.unwrap()"
    let v77 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v73 v76 
    let _run_target_args'_v75 = v77 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v78 : string = "$0.unwrap()"
    let v79 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v73 v78 
    let _run_target_args'_v75 = v79 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v80 : string = "$0.unwrap()"
    let v81 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v73 v80 
    let _run_target_args'_v75 = v81 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v82 : rexie_Rexie = match v73 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v75 = v82 
    #endif
#if FABLE_COMPILER_PYTHON
    let v83 : rexie_Rexie = match v73 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v75 = v83 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v84 : rexie_Rexie = match v73 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v75 = v84 
    #endif
#else
    let v85 : rexie_Rexie = match v73 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v75 = v85 
    #endif
    let v86 : rexie_Rexie = _run_target_args'_v75 
    let v89 : (rexie_Rexie -> rexie_Rexie) = method7()
    let v90 : rexie_Rexie = v89 v86
    let v91 : string = "std::sync::Arc::new(v90)"
    let v92 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v91 
    let v94 : string = $"%A{v92}"
    let v97 : string = "state_core.use_database (3) / database new_local_resource / result: " + string v94 + ""
    let v98 : int64 = 200L
    let v99 : string = method8(v98, v97)
    let v100 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v101 : bool = Fable.Core.RustInterop.emitRustExpr v99 v100 
    let v102 : string = v52 + v53 
    let x = v92 //
    let v103 : _ = x
    let v104 : unit = ()
    (* run_target_args'
    let v105 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v106 : string = $"true; let _fix_closure_v104 = $0"
    let v107 : bool = Fable.Core.RustInterop.emitRustExpr v103 v106 
    let _run_target_args'_v105 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v108 : string = $"true; let _fix_closure_v104 = $0"
    let v109 : bool = Fable.Core.RustInterop.emitRustExpr v103 v108 
    let _run_target_args'_v105 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v110 : string = $"true; let _fix_closure_v104 = $0"
    let v111 : bool = Fable.Core.RustInterop.emitRustExpr v103 v110 
    let _run_target_args'_v105 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v105 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v105 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v105 = false 
    #endif
#else
    let _run_target_args'_v105 = false 
    #endif
    let v112 : bool = _run_target_args'_v105 
    let v114 : string = $"true; _fix_closure_v104 " + v102 + "); " + v52 + " // rust.fix_closure'"
    let v115 : bool = Fable.Core.RustInterop.emitRustExpr () v114 
    let v116 : string = "__future_init"
    let v117 : _ = Fable.Core.RustInterop.emitRustExpr () v116 
    let v118 : string = "v117"
    let v119 : std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>> = Fable.Core.RustInterop.emitRustExpr () v118 
    let v120 : string = $"true; $0 /*"
    let v121 : bool = Fable.Core.RustInterop.emitRustExpr v119 v120 
    let v122 : string = $"*/ }}); //"
    let v123 : bool = Fable.Core.RustInterop.emitRustExpr () v122 
    let v124 : string = $"_func0_from_v11"
    let v125 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>>> = Fable.Core.RustInterop.emitRustExpr () v124 
    let v126 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v127 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v125 v126 
    let v128 : string = "state_core.use_core_database (1)"
    let v129 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v130 : bool = Fable.Core.RustInterop.emitRustExpr v128 v129 
    let v131 : unit = ()
    let v132 : string = $"true; let _func0_from_v131 = Func0::from(move || {{ //"
    let v133 : bool = Fable.Core.RustInterop.emitRustExpr () v132 
    let v134 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v135 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v127 v134 
    let v136 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v137 : bool = Fable.Core.RustInterop.emitRustExpr v135 v136 
    let v138 : string = "x"
    let v139 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v138 
    let v140 : (unit -> unit) = closure8()
    let _v140 = true
    let v141 : string = "PartialEqWrapper($0)"
    let v142 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v139 v141 
    let v143 : string = "true; $0 })"
    let v144 : bool = Fable.Core.RustInterop.emitRustExpr v142 v143 
    let v145 : string = "_optionm_map_"
    let v146 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr () v145 
    let v147 : string = "true; let __future_init = Box::pin(/*"
    let v148 : bool = Fable.Core.RustInterop.emitRustExpr () v147 
    let v149 : string = "*/ async move { /*"
    let v150 : bool = Fable.Core.RustInterop.emitRustExpr () v149 
    let v151 : string = "*/ ()"
    let v152 : bool = Fable.Core.RustInterop.emitRustExpr () v151 
    let v154 : string = $"%A{v146}"
    let v157 : string = "state_core.use_core_database (2) / core_state_heap new_local_resource / database: " + v154 + ""
    let v158 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v159 : bool = Fable.Core.RustInterop.emitRustExpr v157 v158 
    let v160 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v161 : bool = Fable.Core.RustInterop.emitRustExpr v146 v160 
    let v162 : string = "x"
    let v163 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr () v162 
    let v164 : string = "$0.0"
    let v165 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr v163 v164 
    let v166 : string = "true; $0 })"
    let v167 : bool = Fable.Core.RustInterop.emitRustExpr v165 v166 
    let v168 : string = "_optionm_map_"
    let v169 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr () v168 
    let v172 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v173 : US2 option = v169 |> Option.map v172 
    let v187 : US2 = US2_1
    let v188 : US2 = v173 |> Option.defaultValue v187 
    let v618 : US3 =
        match v188 with
        | US2_1 -> (* None *)
            US3_1
        | US2_0(v192) -> (* Some *)
            let v193 : string = "core-state-heap"
            let v194 : string = "state_core.get_data () / id: " + v193 + ""
            let v195 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v196 : bool = Fable.Core.RustInterop.emitRustExpr v194 v195 
            let v197 : string = "true; let __future_init = Box::pin(/*"
            let v198 : bool = Fable.Core.RustInterop.emitRustExpr () v197 
            let v199 : string = "*/ async { /*"
            let v200 : bool = Fable.Core.RustInterop.emitRustExpr () v199 
            let v201 : string = "*/ ()"
            let v202 : bool = Fable.Core.RustInterop.emitRustExpr () v201 
            let v203 : string = "store"
            let v204 : (string []) = [|v203|]
            let v205 : string = "$0.to_vec()"
            let v206 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v204 v205 
            let v207 : unit = ()
            let v208 : string = $"true; let _func1_from_v207 = Func1::from(move |value| {{ //"
            let v209 : bool = Fable.Core.RustInterop.emitRustExpr () v208 
            let v210 : string = $"value"
            let v211 : string = Fable.Core.RustInterop.emitRustExpr () v210 
            (* run_target_args'
            let v216 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v217 : string = "&*$0"
            let v218 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v211 v217 
            let _run_target_args'_v216 = v218 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v219 : string = "&*$0"
            let v220 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v211 v219 
            let _run_target_args'_v216 = v220 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v221 : string = "&*$0"
            let v222 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v211 v221 
            let _run_target_args'_v216 = v222 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v224 : Ref<Str> = v211 |> unbox<Ref<Str>>
            let _run_target_args'_v216 = v224 
            #endif
#if FABLE_COMPILER_PYTHON
            let v228 : Ref<Str> = v211 |> unbox<Ref<Str>>
            let _run_target_args'_v216 = v228 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v232 : Ref<Str> = v211 |> unbox<Ref<Str>>
            let _run_target_args'_v216 = v232 
            #endif
#else
            let v236 : Ref<Str> = v211 |> unbox<Ref<Str>>
            let _run_target_args'_v216 = v236 
            #endif
            let v239 : Ref<Str> = _run_target_args'_v216 
            (* run_target_args'
            let v249 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v250 : string = "String::from($0)"
            let v251 : std_string_String = Fable.Core.RustInterop.emitRustExpr v239 v250 
            let _run_target_args'_v249 = v251 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v252 : string = "String::from($0)"
            let v253 : std_string_String = Fable.Core.RustInterop.emitRustExpr v239 v252 
            let _run_target_args'_v249 = v253 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v254 : string = "String::from($0)"
            let v255 : std_string_String = Fable.Core.RustInterop.emitRustExpr v239 v254 
            let _run_target_args'_v249 = v255 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v257 : std_string_String = v239 |> unbox<std_string_String>
            let _run_target_args'_v249 = v257 
            #endif
#if FABLE_COMPILER_PYTHON
            let v261 : std_string_String = v239 |> unbox<std_string_String>
            let _run_target_args'_v249 = v261 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v265 : std_string_String = v239 |> unbox<std_string_String>
            let _run_target_args'_v249 = v265 
            #endif
#else
            let v269 : std_string_String = v239 |> unbox<std_string_String>
            let _run_target_args'_v249 = v269 
            #endif
            let v272 : std_string_String = _run_target_args'_v249 
            let func1_from_result = v272 //
            let v278 : _ = func1_from_result
            let v279 : string = $"true; $0 /*"
            let v280 : bool = Fable.Core.RustInterop.emitRustExpr v278 v279 
            let v281 : string = $"*/ }}); //"
            let v282 : bool = Fable.Core.RustInterop.emitRustExpr () v281 
            let v283 : string = $"_func1_from_v207"
            let v284 : Func0<string, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v283 
            let v285 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v286 : (string -> std_string_String) = closure10(v284)
            let v287 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v206, v286) v285 
            let v288 : std_sync_Arc<rexie_Rexie> = method11(v192)
            let v289 : string = "$0.transaction(&v287, rexie::TransactionMode::ReadOnly)"
            let v290 : Result<rexie_Transaction, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v288 v289 
            let v291 : (rexie_Error -> std_string_String) = method12()
            (* run_target_args'
            let v293 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v294 : string = "$0.map_err(|x| $1(x))"
            let v295 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v290, v291) v294 
            let _run_target_args'_v293 = v295 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v296 : string = "$0.map_err(|x| $1(x))"
            let v297 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v290, v291) v296 
            let _run_target_args'_v293 = v297 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v298 : string = "$0.map_err(|x| $1(x))"
            let v299 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v290, v291) v298 
            let _run_target_args'_v293 = v299 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v300 : Result<rexie_Transaction, std_string_String> = match v290 with Ok x -> Ok x | Error x -> Error (v291 x)
            let _run_target_args'_v293 = v300 
            #endif
#if FABLE_COMPILER_PYTHON
            let v301 : Result<rexie_Transaction, std_string_String> = match v290 with Ok x -> Ok x | Error x -> Error (v291 x)
            let _run_target_args'_v293 = v301 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v302 : Result<rexie_Transaction, std_string_String> = match v290 with Ok x -> Ok x | Error x -> Error (v291 x)
            let _run_target_args'_v293 = v302 
            #endif
#else
            let v303 : Result<rexie_Transaction, std_string_String> = match v290 with Ok x -> Ok x | Error x -> Error (v291 x)
            let _run_target_args'_v293 = v303 
            #endif
            let v304 : Result<rexie_Transaction, std_string_String> = _run_target_args'_v293 
            let v307 : string = "$0?"
            let v308 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v304 v307 
            let v309 : string = method13()
            (* run_target_args'
            let v314 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v315 : string = "&*$0"
            let v316 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v309 v315 
            let _run_target_args'_v314 = v316 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v317 : string = "&*$0"
            let v318 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v309 v317 
            let _run_target_args'_v314 = v318 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v319 : string = "&*$0"
            let v320 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v309 v319 
            let _run_target_args'_v314 = v320 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v322 : Ref<Str> = v309 |> unbox<Ref<Str>>
            let _run_target_args'_v314 = v322 
            #endif
#if FABLE_COMPILER_PYTHON
            let v326 : Ref<Str> = v309 |> unbox<Ref<Str>>
            let _run_target_args'_v314 = v326 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v330 : Ref<Str> = v309 |> unbox<Ref<Str>>
            let _run_target_args'_v314 = v330 
            #endif
#else
            let v334 : Ref<Str> = v309 |> unbox<Ref<Str>>
            let _run_target_args'_v314 = v334 
            #endif
            let v337 : Ref<Str> = _run_target_args'_v314 
            let v343 : string = "v308.store($0)"
            let v344 : Result<rexie_Store, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v337 v343 
            let v345 : (rexie_Error -> std_string_String) = method14()
            (* run_target_args'
            let v347 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v348 : string = "$0.map_err(|x| $1(x))"
            let v349 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v344, v345) v348 
            let _run_target_args'_v347 = v349 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v350 : string = "$0.map_err(|x| $1(x))"
            let v351 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v344, v345) v350 
            let _run_target_args'_v347 = v351 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v352 : string = "$0.map_err(|x| $1(x))"
            let v353 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v344, v345) v352 
            let _run_target_args'_v347 = v353 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v354 : Result<rexie_Store, std_string_String> = match v344 with Ok x -> Ok x | Error x -> Error (v345 x)
            let _run_target_args'_v347 = v354 
            #endif
#if FABLE_COMPILER_PYTHON
            let v355 : Result<rexie_Store, std_string_String> = match v344 with Ok x -> Ok x | Error x -> Error (v345 x)
            let _run_target_args'_v347 = v355 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v356 : Result<rexie_Store, std_string_String> = match v344 with Ok x -> Ok x | Error x -> Error (v345 x)
            let _run_target_args'_v347 = v356 
            #endif
#else
            let v357 : Result<rexie_Store, std_string_String> = match v344 with Ok x -> Ok x | Error x -> Error (v345 x)
            let _run_target_args'_v347 = v357 
            #endif
            let v358 : Result<rexie_Store, std_string_String> = _run_target_args'_v347 
            let v361 : string = "$0?"
            let v362 : rexie_Store = Fable.Core.RustInterop.emitRustExpr v358 v361 
            let v363 : string = method15()
            (* run_target_args'
            let v368 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v369 : string = "&*$0"
            let v370 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v363 v369 
            let _run_target_args'_v368 = v370 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v371 : string = "&*$0"
            let v372 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v363 v371 
            let _run_target_args'_v368 = v372 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v373 : string = "&*$0"
            let v374 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v363 v373 
            let _run_target_args'_v368 = v374 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v376 : Ref<Str> = v363 |> unbox<Ref<Str>>
            let _run_target_args'_v368 = v376 
            #endif
#if FABLE_COMPILER_PYTHON
            let v380 : Ref<Str> = v363 |> unbox<Ref<Str>>
            let _run_target_args'_v368 = v380 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v384 : Ref<Str> = v363 |> unbox<Ref<Str>>
            let _run_target_args'_v368 = v384 
            #endif
#else
            let v388 : Ref<Str> = v363 |> unbox<Ref<Str>>
            let _run_target_args'_v368 = v388 
            #endif
            let v391 : Ref<Str> = _run_target_args'_v368 
            let v397 : string = "wasm_bindgen::JsValue::from_str($0)"
            let v398 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr v391 v397 
            let v399 : string = $"Box::pin(rexie::Store::get(&v362, v398))"
            let v400 : std_pin_Pin<Box<Dyn<std_future_Future<Result<wasm_bindgen_JsValue option, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v399 
            let v401 : string = "v400.await"
            let v402 : Result<wasm_bindgen_JsValue option, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v401 
            let v403 : (rexie_Error -> std_string_String) = method16()
            (* run_target_args'
            let v405 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v406 : string = "$0.map_err(|x| $1(x))"
            let v407 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v402, v403) v406 
            let _run_target_args'_v405 = v407 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v408 : string = "$0.map_err(|x| $1(x))"
            let v409 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v402, v403) v408 
            let _run_target_args'_v405 = v409 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v410 : string = "$0.map_err(|x| $1(x))"
            let v411 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v402, v403) v410 
            let _run_target_args'_v405 = v411 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v412 : Result<wasm_bindgen_JsValue option, std_string_String> = match v402 with Ok x -> Ok x | Error x -> Error (v403 x)
            let _run_target_args'_v405 = v412 
            #endif
#if FABLE_COMPILER_PYTHON
            let v413 : Result<wasm_bindgen_JsValue option, std_string_String> = match v402 with Ok x -> Ok x | Error x -> Error (v403 x)
            let _run_target_args'_v405 = v413 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v414 : Result<wasm_bindgen_JsValue option, std_string_String> = match v402 with Ok x -> Ok x | Error x -> Error (v403 x)
            let _run_target_args'_v405 = v414 
            #endif
#else
            let v415 : Result<wasm_bindgen_JsValue option, std_string_String> = match v402 with Ok x -> Ok x | Error x -> Error (v403 x)
            let _run_target_args'_v405 = v415 
            #endif
            let v416 : Result<wasm_bindgen_JsValue option, std_string_String> = _run_target_args'_v405 
            let v419 : string = "$0?"
            let v420 : wasm_bindgen_JsValue option = Fable.Core.RustInterop.emitRustExpr v416 v419 
            let v423 : (wasm_bindgen_JsValue -> US4) = method17()
            let v424 : US4 option = v420 |> Option.map v423 
            let v438 : US4 = US4_1
            let v439 : US4 = v424 |> Option.defaultValue v438 
            let v547 : US3 =
                match v439 with
                | US4_1 -> (* None *)
                    US3_1
                | US4_0(v443) -> (* Some *)
                    let v444 : wasm_bindgen_JsValue = method18(v443)
                    let v445 : string = "serde_wasm_bindgen::from_value(v444)"
                    let v446 : Result<serde_json_Value option, serde_wasm_bindgen_Error> = Fable.Core.RustInterop.emitRustExpr () v445 
                    let v447 : (serde_wasm_bindgen_Error -> std_string_String) = method19()
                    (* run_target_args'
                    let v449 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v450 : string = "$0.map_err(|x| $1(x))"
                    let v451 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v446, v447) v450 
                    let _run_target_args'_v449 = v451 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v452 : string = "$0.map_err(|x| $1(x))"
                    let v453 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v446, v447) v452 
                    let _run_target_args'_v449 = v453 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v454 : string = "$0.map_err(|x| $1(x))"
                    let v455 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v446, v447) v454 
                    let _run_target_args'_v449 = v455 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v456 : Result<serde_json_Value option, std_string_String> = match v446 with Ok x -> Ok x | Error x -> Error (v447 x)
                    let _run_target_args'_v449 = v456 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v457 : Result<serde_json_Value option, std_string_String> = match v446 with Ok x -> Ok x | Error x -> Error (v447 x)
                    let _run_target_args'_v449 = v457 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v458 : Result<serde_json_Value option, std_string_String> = match v446 with Ok x -> Ok x | Error x -> Error (v447 x)
                    let _run_target_args'_v449 = v458 
                    #endif
#else
                    let v459 : Result<serde_json_Value option, std_string_String> = match v446 with Ok x -> Ok x | Error x -> Error (v447 x)
                    let _run_target_args'_v449 = v459 
                    #endif
                    let v460 : Result<serde_json_Value option, std_string_String> = _run_target_args'_v449 
                    let v463 : string = "$0?"
                    let v464 : serde_json_Value option = Fable.Core.RustInterop.emitRustExpr v460 v463 
                    let v467 : (serde_json_Value -> US5) = method20()
                    let v468 : US5 option = v464 |> Option.map v467 
                    let v482 : US5 = US5_1
                    let v483 : US5 = v468 |> Option.defaultValue v482 
                    match v483 with
                    | US5_1 -> (* None *)
                        US3_1
                    | US5_0(v487) -> (* Some *)
                        let v488 : serde_json_Value = method21(v487)
                        let v489 : string = "serde_json::from_value(v488)"
                        let v490 : Result<Vec<uint8>, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr () v489 
                        let v491 : (serde_json_Error -> std_string_String) = method22()
                        (* run_target_args'
                        let v493 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v494 : string = "$0.map_err(|x| $1(x))"
                        let v495 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v490, v491) v494 
                        let _run_target_args'_v493 = v495 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v496 : string = "$0.map_err(|x| $1(x))"
                        let v497 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v490, v491) v496 
                        let _run_target_args'_v493 = v497 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v498 : string = "$0.map_err(|x| $1(x))"
                        let v499 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v490, v491) v498 
                        let _run_target_args'_v493 = v499 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v500 : Result<Vec<uint8>, std_string_String> = match v490 with Ok x -> Ok x | Error x -> Error (v491 x)
                        let _run_target_args'_v493 = v500 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v501 : Result<Vec<uint8>, std_string_String> = match v490 with Ok x -> Ok x | Error x -> Error (v491 x)
                        let _run_target_args'_v493 = v501 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v502 : Result<Vec<uint8>, std_string_String> = match v490 with Ok x -> Ok x | Error x -> Error (v491 x)
                        let _run_target_args'_v493 = v502 
                        #endif
#else
                        let v503 : Result<Vec<uint8>, std_string_String> = match v490 with Ok x -> Ok x | Error x -> Error (v491 x)
                        let _run_target_args'_v493 = v503 
                        #endif
                        let v504 : Result<Vec<uint8>, std_string_String> = _run_target_args'_v493 
                        let v507 : string = "$0?"
                        let v508 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v504 v507 
                        let v509 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                        let v510 : (uint8 []) = Fable.Core.RustInterop.emitRustExpr v508 v509 
                        let v511 : int32 = v510.Length
                        let v512 : string = "state_core.get_data () / data_len: " + string v511 + ""
                        let v513 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v514 : bool = Fable.Core.RustInterop.emitRustExpr v512 v513 
                        let v515 : string = "$0.to_vec()"
                        let v516 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v510 v515 
                        let v517 : string = "v516.as_slice()"
                        let v518 : Ref<Slice<uint8>> = Fable.Core.RustInterop.emitRustExpr () v517 
                        let v519 : string = "true; let mut v518 = v518"
                        let v520 : bool = Fable.Core.RustInterop.emitRustExpr () v519 
                        let v521 : string = "borsh::BorshDeserialize::deserialize(&mut v518)"
                        let v522 : Result<Heap3 option, borsh_io_Error> = Fable.Core.RustInterop.emitRustExpr () v521 
                        let v523 : (borsh_io_Error -> std_string_String) = method23()
                        (* run_target_args'
                        let v525 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v526 : string = "$0.map_err(|x| $1(x))"
                        let v527 : Result<Heap3 option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v522, v523) v526 
                        let _run_target_args'_v525 = v527 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v528 : string = "$0.map_err(|x| $1(x))"
                        let v529 : Result<Heap3 option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v522, v523) v528 
                        let _run_target_args'_v525 = v529 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v530 : string = "$0.map_err(|x| $1(x))"
                        let v531 : Result<Heap3 option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v522, v523) v530 
                        let _run_target_args'_v525 = v531 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v532 : Result<Heap3 option, std_string_String> = match v522 with Ok x -> Ok x | Error x -> Error (v523 x)
                        let _run_target_args'_v525 = v532 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v533 : Result<Heap3 option, std_string_String> = match v522 with Ok x -> Ok x | Error x -> Error (v523 x)
                        let _run_target_args'_v525 = v533 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v534 : Result<Heap3 option, std_string_String> = match v522 with Ok x -> Ok x | Error x -> Error (v523 x)
                        let _run_target_args'_v525 = v534 
                        #endif
#else
                        let v535 : Result<Heap3 option, std_string_String> = match v522 with Ok x -> Ok x | Error x -> Error (v523 x)
                        let _run_target_args'_v525 = v535 
                        #endif
                        let v536 : Result<Heap3 option, std_string_String> = _run_target_args'_v525 
                        let v539 : string = "$0?"
                        let v540 : Heap3 option = Fable.Core.RustInterop.emitRustExpr v536 v539 
                        US3_0(v540)
            let v555 : Heap3 option option =
                match v547 with
                | US3_1 -> (* None *)
                    let v553 : Heap3 option option = None
                    v553
                | US3_0(v548) -> (* Some *)
                    let v550 : Heap3 option option = Some v548 
                    v550
            let v557 : Result<Heap3 option option, std_string_String> = Ok v555 
            let v560 : string = v52 + v53 
            let x = v557 //
            let v561 : _ = x
            let v562 : unit = ()
            (* run_target_args'
            let v563 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v564 : string = $"true; let _fix_closure_v562 = $0"
            let v565 : bool = Fable.Core.RustInterop.emitRustExpr v561 v564 
            let _run_target_args'_v563 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v566 : string = $"true; let _fix_closure_v562 = $0"
            let v567 : bool = Fable.Core.RustInterop.emitRustExpr v561 v566 
            let _run_target_args'_v563 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v568 : string = $"true; let _fix_closure_v562 = $0"
            let v569 : bool = Fable.Core.RustInterop.emitRustExpr v561 v568 
            let _run_target_args'_v563 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v563 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v563 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v563 = false 
            #endif
#else
            let _run_target_args'_v563 = false 
            #endif
            let v570 : bool = _run_target_args'_v563 
            let v572 : string = $"true; _fix_closure_v562 " + v560 + "); " + v52 + " // rust.fix_closure'"
            let v573 : bool = Fable.Core.RustInterop.emitRustExpr () v572 
            let v574 : string = "__future_init"
            let v575 : _ = Fable.Core.RustInterop.emitRustExpr () v574 
            let v576 : string = "v575"
            let v577 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap3 option option, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v576 
            let v578 : string = "v577.await"
            let v579 : Result<Heap3 option option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v578 
            let v580 : (Heap3 option option -> US6) = method24()
            let v581 : (std_string_String -> US6) = method25()
            let v583 : US6 = match v579 with Ok x -> v580 x | Error x -> v581 x
            match v583 with
            | US6_1(v609) -> (* Error *)
                let v610 : string = "state_core.use_core_database (3) / error: " + string v609 + ""
                let v611 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v612 : bool = Fable.Core.RustInterop.emitRustExpr v610 v611 
                US3_1
            | US6_0(v586) -> (* Ok *)
                let v589 : (Heap3 option -> US3) = method26()
                let v590 : US3 option = v586 |> Option.map v589 
                let v604 : US3 = US3_1
                let v605 : US3 = v590 |> Option.defaultValue v604 
                v605
    let v645 : US7 =
        match v618 with
        | US3_1 -> (* None *)
            US7_1
        | US3_0(v619) -> (* Some *)
            let v622 : (Heap3 -> US8) = method27()
            let v623 : US8 option = v619 |> Option.map v622 
            let v637 : US8 = US8_1
            let v638 : US8 = v623 |> Option.defaultValue v637 
            US7_0(v638)
    let v652 : US8 =
        match v645 with
        | US7_0(v646) -> (* Some *)
            match v646 with
            | US8_0(v647) -> (* Some *)
                US8_0(v647)
            | _ ->
                US8_1
        | _ ->
            US8_1
    let v653 : string = v52 + v53 
    let x = v652 //
    let v654 : _ = x
    let v655 : unit = ()
    (* run_target_args'
    let v656 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v657 : string = $"true; let _fix_closure_v655 = $0"
    let v658 : bool = Fable.Core.RustInterop.emitRustExpr v654 v657 
    let _run_target_args'_v656 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v659 : string = $"true; let _fix_closure_v655 = $0"
    let v660 : bool = Fable.Core.RustInterop.emitRustExpr v654 v659 
    let _run_target_args'_v656 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v661 : string = $"true; let _fix_closure_v655 = $0"
    let v662 : bool = Fable.Core.RustInterop.emitRustExpr v654 v661 
    let _run_target_args'_v656 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v656 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v656 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v656 = false 
    #endif
#else
    let _run_target_args'_v656 = false 
    #endif
    let v663 : bool = _run_target_args'_v656 
    let v665 : string = $"true; _fix_closure_v655 " + v653 + "); " + v52 + " // rust.fix_closure'"
    let v666 : bool = Fable.Core.RustInterop.emitRustExpr () v665 
    let v667 : string = "__future_init"
    let v668 : _ = Fable.Core.RustInterop.emitRustExpr () v667 
    let v669 : string = "v668"
    let v670 : std_pin_Pin<Box<Dyn<std_future_Future<US8>>>> = Fable.Core.RustInterop.emitRustExpr () v669 
    let v671 : string = $"true; $0 /*"
    let v672 : bool = Fable.Core.RustInterop.emitRustExpr v670 v671 
    let v673 : string = $"*/ }}); //"
    let v674 : bool = Fable.Core.RustInterop.emitRustExpr () v673 
    let v675 : string = $"_func0_from_v131"
    let v676 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<US8>>>>> = Fable.Core.RustInterop.emitRustExpr () v675 
    let v677 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v678 : leptos_prelude_ArcLocalResource<US8> = Fable.Core.RustInterop.emitRustExpr v676 v677 
    let v679 : unit = ()
    let v680 : string = $"true; let _func0_from_v679 = Func0::from(move || {{ //"
    let v681 : bool = Fable.Core.RustInterop.emitRustExpr () v680 
    let v682 : string = "state_core.use_core_database (4) / effect core_state_heap / ##1"
    let v683 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v684 : bool = Fable.Core.RustInterop.emitRustExpr v682 v683 
    let v685 : web_sys_Window = method28()
    let v686 : Result<web_sys_Storage option, wasm_bindgen_JsValue> = method29(v685)
    let v687 : (web_sys_Storage option -> US9) = method30()
    let v688 : (wasm_bindgen_JsValue -> US9) = method31()
    let v690 : US9 = match v686 with Ok x -> v687 x | Error x -> v688 x
    let v720 : US10 =
        match v690 with
        | US9_1(v717) -> (* Error *)
            US10_1(v717)
        | US9_0(v693) -> (* Ok *)
            let v696 : (web_sys_Storage -> US11) = method32()
            let v697 : US11 option = v693 |> Option.map v696 
            let v711 : US11 = US11_1
            let v712 : US11 = v697 |> Option.defaultValue v711 
            US10_0(v712)
    let v1287 : bool =
        match v720 with
        | US10_0(v721) -> (* Ok *)
            match v721 with
            | US11_0(v722) -> (* Some *)
                let v723 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
                let v724 : US8 option = Fable.Core.RustInterop.emitRustExpr v678 v723 
                let v727 : (US8 -> US7) = method33()
                let v728 : US7 option = v724 |> Option.map v727 
                let v742 : US7 = US7_1
                let v743 : US7 = v728 |> Option.defaultValue v742 
                let v748 : string = $"%A{v743}"
                let v751 : string = "state_core.use_core_database (5) / effect core_state_heap / ##2 / core_state_heap: " + v748 + ""
                let v752 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v753 : bool = Fable.Core.RustInterop.emitRustExpr v751 v752 
                let v1216 : US8 =
                    match v743 with
                    | US7_0(v754) -> (* Some *)
                        match v754 with
                        | US8_0(v755) -> (* Some *)
                            US8_0(v755)
                        | _ ->
                            let v757 : web_sys_Storage = method34(v722)
                            let v758 : string = method35()
                            (* run_target_args'
                            let v763 : unit = ()
                            run_target_args' *)
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v764 : string = "&*$0"
                            let v765 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v758 v764 
                            let _run_target_args'_v763 = v765 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v766 : string = "&*$0"
                            let v767 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v758 v766 
                            let _run_target_args'_v763 = v767 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v768 : string = "&*$0"
                            let v769 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v758 v768 
                            let _run_target_args'_v763 = v769 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v771 : Ref<Str> = v758 |> unbox<Ref<Str>>
                            let _run_target_args'_v763 = v771 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v775 : Ref<Str> = v758 |> unbox<Ref<Str>>
                            let _run_target_args'_v763 = v775 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v779 : Ref<Str> = v758 |> unbox<Ref<Str>>
                            let _run_target_args'_v763 = v779 
                            #endif
#else
                            let v783 : Ref<Str> = v758 |> unbox<Ref<Str>>
                            let _run_target_args'_v763 = v783 
                            #endif
                            let v786 : Ref<Str> = _run_target_args'_v763 
                            let v792 : string = $"web_sys::Storage::get_item(&v757, $0)"
                            let v793 : Result<std_string_String option, wasm_bindgen_JsValue> = Fable.Core.RustInterop.emitRustExpr v786 v792 
                            let v794 : (std_string_String option -> US12) = method36()
                            let v795 : (wasm_bindgen_JsValue -> US12) = method37()
                            let v797 : US12 = match v793 with Ok x -> v794 x | Error x -> v795 x
                            let v830 : US13 =
                                match v797 with
                                | US12_1(v827) -> (* Error *)
                                    US13_1(v827)
                                | US12_0(v800) -> (* Ok *)
                                    let v801 : std_string_String option = method38(v800)
                                    let v802 : string = "serde_json::from_value(v801.into()).unwrap()"
                                    let v803 : std_string_String option = Fable.Core.RustInterop.emitRustExpr () v802 
                                    let v806 : (std_string_String -> US14) = method39()
                                    let v807 : US14 option = v803 |> Option.map v806 
                                    let v821 : US14 = US14_1
                                    let v822 : US14 = v807 |> Option.defaultValue v821 
                                    US13_0(v822)
                            let v836 : US15 =
                                match v830 with
                                | US13_1(v833) -> (* Error *)
                                    US15_1
                                | US13_0(v831) -> (* Ok *)
                                    US15_0(v831)
                            let v843 : US14 =
                                match v836 with
                                | US15_0(v837) -> (* Some *)
                                    match v837 with
                                    | US14_0(v838) -> (* Some *)
                                        US14_0(v838)
                                    | _ ->
                                        US14_1
                                | _ ->
                                    US14_1
                            let v851 : std_string_String option =
                                match v843 with
                                | US14_1 -> (* None *)
                                    let v849 : std_string_String option = None
                                    v849
                                | US14_0(v844) -> (* Some *)
                                    let v846 : std_string_String option = Some v844 
                                    v846
                            let v854 : (std_string_String -> US8) = method40()
                            let v855 : US8 option = v851 |> Option.map v854 
                            let v959 : (US8 -> US7) = method33()
                            let v960 : US7 option = v855 |> Option.map v959 
                            let v974 : US7 = US7_1
                            let v975 : US7 = v960 |> Option.defaultValue v974 
                            match v975 with
                            | US7_0(v979) -> (* Some *)
                                match v979 with
                                | US8_0(v980) -> (* Some *)
                                    US8_0(v980)
                                | _ ->
                                    US8_1
                            | _ ->
                                US8_1
                    | _ ->
                        let v987 : web_sys_Storage = method34(v722)
                        let v988 : string = method35()
                        (* run_target_args'
                        let v993 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v994 : string = "&*$0"
                        let v995 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v988 v994 
                        let _run_target_args'_v993 = v995 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v996 : string = "&*$0"
                        let v997 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v988 v996 
                        let _run_target_args'_v993 = v997 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v998 : string = "&*$0"
                        let v999 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v988 v998 
                        let _run_target_args'_v993 = v999 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1001 : Ref<Str> = v988 |> unbox<Ref<Str>>
                        let _run_target_args'_v993 = v1001 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1005 : Ref<Str> = v988 |> unbox<Ref<Str>>
                        let _run_target_args'_v993 = v1005 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1009 : Ref<Str> = v988 |> unbox<Ref<Str>>
                        let _run_target_args'_v993 = v1009 
                        #endif
#else
                        let v1013 : Ref<Str> = v988 |> unbox<Ref<Str>>
                        let _run_target_args'_v993 = v1013 
                        #endif
                        let v1016 : Ref<Str> = _run_target_args'_v993 
                        let v1022 : string = $"web_sys::Storage::get_item(&v987, $0)"
                        let v1023 : Result<std_string_String option, wasm_bindgen_JsValue> = Fable.Core.RustInterop.emitRustExpr v1016 v1022 
                        let v1024 : (std_string_String option -> US12) = method36()
                        let v1025 : (wasm_bindgen_JsValue -> US12) = method37()
                        let v1027 : US12 = match v1023 with Ok x -> v1024 x | Error x -> v1025 x
                        let v1060 : US13 =
                            match v1027 with
                            | US12_1(v1057) -> (* Error *)
                                US13_1(v1057)
                            | US12_0(v1030) -> (* Ok *)
                                let v1031 : std_string_String option = method38(v1030)
                                let v1032 : string = "serde_json::from_value(v1031.into()).unwrap()"
                                let v1033 : std_string_String option = Fable.Core.RustInterop.emitRustExpr () v1032 
                                let v1036 : (std_string_String -> US14) = method39()
                                let v1037 : US14 option = v1033 |> Option.map v1036 
                                let v1051 : US14 = US14_1
                                let v1052 : US14 = v1037 |> Option.defaultValue v1051 
                                US13_0(v1052)
                        let v1066 : US15 =
                            match v1060 with
                            | US13_1(v1063) -> (* Error *)
                                US15_1
                            | US13_0(v1061) -> (* Ok *)
                                US15_0(v1061)
                        let v1073 : US14 =
                            match v1066 with
                            | US15_0(v1067) -> (* Some *)
                                match v1067 with
                                | US14_0(v1068) -> (* Some *)
                                    US14_0(v1068)
                                | _ ->
                                    US14_1
                            | _ ->
                                US14_1
                        let v1081 : std_string_String option =
                            match v1073 with
                            | US14_1 -> (* None *)
                                let v1079 : std_string_String option = None
                                v1079
                            | US14_0(v1074) -> (* Some *)
                                let v1076 : std_string_String option = Some v1074 
                                v1076
                        let v1084 : (std_string_String -> US8) = method40()
                        let v1085 : US8 option = v1081 |> Option.map v1084 
                        let v1189 : (US8 -> US7) = method33()
                        let v1190 : US7 option = v1085 |> Option.map v1189 
                        let v1204 : US7 = US7_1
                        let v1205 : US7 = v1190 |> Option.defaultValue v1204 
                        match v1205 with
                        | US7_0(v1209) -> (* Some *)
                            match v1209 with
                            | US8_0(v1210) -> (* Some *)
                                US8_0(v1210)
                            | _ ->
                                US8_1
                        | _ ->
                            US8_1
                let v1218 : string = $"%A{v1216}"
                let v1221 : string = "state_core.use_core_database (6) / effect core_state_heap / ##3 / core_state_heap: " + v1218 + ""
                let v1222 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v1223 : bool = Fable.Core.RustInterop.emitRustExpr v1221 v1222 
                match v1216 with
                | US8_0(v1224) -> (* Some *)
                    let v1225 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
                    let v1226 : string = "Box::pin($0)"
                    let v1227 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1225 v1226 
                    let v1228 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                    let v1229 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1227 v1228 
                    let v1230 : leptos_prelude_ArcRwSignal<bool> = v1229.l0
                    let v1231 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
                    let v1232 : bool = Fable.Core.RustInterop.emitRustExpr v1230 v1231 
                    let v1234 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
                    let v1237 : string = "*/ | { *x = $0(x.clone()) }); //"
                    let v1238 : (bool -> bool) = closure32(v1224)
                    let v1239 : bool = Fable.Core.RustInterop.emitRustExpr v1238 v1237 
                    let v1240 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
                    let v1241 : string = "Box::pin($0)"
                    let v1242 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1240 v1241 
                    let v1243 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                    let v1244 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1242 v1243 
                    let v1245 : leptos_prelude_ArcRwSignal<bool> = v1244.l1
                    let v1246 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
                    let v1247 : bool = Fable.Core.RustInterop.emitRustExpr v1245 v1246 
                    let v1249 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
                    let v1252 : string = "*/ | { *x = $0(x.clone()) }); //"
                    let v1253 : (bool -> bool) = closure33(v1224)
                    let v1254 : bool = Fable.Core.RustInterop.emitRustExpr v1253 v1252 
                    let v1255 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
                    let v1256 : string = "Box::pin($0)"
                    let v1257 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1255 v1256 
                    let v1258 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                    let v1259 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1257 v1258 
                    let v1260 : leptos_prelude_ArcRwSignal<std_string_String> = v1259.l2
                    let v1261 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
                    let v1262 : bool = Fable.Core.RustInterop.emitRustExpr v1260 v1261 
                    let v1264 : TypeEmit<std_string_String> = null |> unbox<TypeEmit<std_string_String>>
                    let v1267 : string = "*/ | { *x = $0(x.clone()) }); //"
                    let v1268 : (std_string_String -> std_string_String) = closure34(v1224)
                    let v1269 : bool = Fable.Core.RustInterop.emitRustExpr v1268 v1267 
                    let v1270 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
                    let v1271 : string = "Box::pin($0)"
                    let v1272 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1270 v1271 
                    let v1273 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                    let v1274 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1272 v1273 
                    let v1275 : leptos_prelude_ArcRwSignal<Heap0> = v1274.l3
                    let v1276 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
                    let v1277 : bool = Fable.Core.RustInterop.emitRustExpr v1275 v1276 
                    let v1279 : TypeEmit<Heap0> = null |> unbox<TypeEmit<Heap0>>
                    let v1282 : string = "*/ | { *x = $0(x.clone()) }); //"
                    let v1283 : (Heap0 -> Heap0) = closure35(v1224)
                    let v1284 : bool = Fable.Core.RustInterop.emitRustExpr v1283 v1282 
                    true
                | _ ->
                    false
            | _ ->
                false
        | _ ->
            false
    // rust.func0_from / is_unit
    let v1288 : string = $"true; /*"
    let v1289 : bool = Fable.Core.RustInterop.emitRustExpr () v1288 
    let v1290 : string = $"*/ }}); //"
    let v1291 : bool = Fable.Core.RustInterop.emitRustExpr () v1290 
    let v1292 : string = $"_func0_from_v679"
    let v1293 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v1292 
    let v1294 : string = "true; leptos::prelude::Effect::new(move |_| { v1293() })"
    let v1295 : bool = Fable.Core.RustInterop.emitRustExpr () v1294 
    let v1296 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1297 : (unit -> std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>) = closure36(v7)
    let v1298 : leptos_prelude_ArcMemo<std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>> = Fable.Core.RustInterop.emitRustExpr v1297 v1296 
    let v1299 : string = $"leptos::prelude::signal($0)"
    let struct (v1300 : leptos_prelude_ReadSignal<bool>, v1301 : leptos_prelude_WriteSignal<bool>) = Fable.Core.RustInterop.emitRustExpr false v1299 
    let v1302 : unit = ()
    let v1303 : string = $"true; let _func1_from_v1302 = Func1::from(move |value| {{ //"
    let v1304 : bool = Fable.Core.RustInterop.emitRustExpr () v1303 
    let v1305 : string = $"value"
    let v1306 : Heap3 = Fable.Core.RustInterop.emitRustExpr () v1305 
    let v1308 : string = $"%A{v1306}"
    let v1311 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v1312 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v127 v1311 
    let v1315 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v1316 : US2 option = v1312 |> Option.map v1315 
    let v1330 : US2 = US2_1
    let v1331 : US2 = v1316 |> Option.defaultValue v1330 
    let v1335 : string = "true; let __future_init = Box::pin(/*"
    let v1336 : bool = Fable.Core.RustInterop.emitRustExpr () v1335 
    let v1337 : string = "*/ async move { /*"
    let v1338 : bool = Fable.Core.RustInterop.emitRustExpr () v1337 
    let v1339 : string = "*/ ()"
    let v1340 : bool = Fable.Core.RustInterop.emitRustExpr () v1339 
    let v1441 : bool =
        match v1331 with
        | US2_1 -> (* None *)
            let v1437 : string = "state_core.use_core_database (13) / set_core_state_heap_action / database=None"
            let v1438 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1439 : bool = Fable.Core.RustInterop.emitRustExpr v1437 v1438 
            false
        | US2_0(v1341) -> (* Some *)
            let v1342 : string = "state_core.use_core_database (12) / set_core_state_heap_action / value: " + string v1308 + ""
            let v1343 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1344 : bool = Fable.Core.RustInterop.emitRustExpr v1342 v1343 
            let v1346 : string = $"%A{v1306}"
            let v1349 : int64 = System.Convert.ToInt64 v1346.Length
            let v1350 : string = "state_core.set_data () / data_len: " + string v1349 + ""
            let v1351 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1352 : bool = Fable.Core.RustInterop.emitRustExpr v1350 v1351 
            let v1353 : string = "true; let __future_init = Box::pin(/*"
            let v1354 : bool = Fable.Core.RustInterop.emitRustExpr () v1353 
            let v1355 : string = "*/ async move { /*"
            let v1356 : bool = Fable.Core.RustInterop.emitRustExpr () v1355 
            let v1357 : string = "*/ ()"
            let v1358 : bool = Fable.Core.RustInterop.emitRustExpr () v1357 
            let v1359 : string = "true; let mut data = Vec::new()"
            let v1360 : bool = Fable.Core.RustInterop.emitRustExpr () v1359 
            let v1361 : string = "true; borsh::BorshSerialize::serialize(&$0, &mut data).unwrap()"
            let v1362 : bool = Fable.Core.RustInterop.emitRustExpr v1306 v1361 
            let v1363 : string = "data"
            let v1364 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr () v1363 
            let v1365 : string = "serde_wasm_bindgen::to_value(&v1364).unwrap()"
            let v1366 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr () v1365 
            let v1367 : string = method43()
            (* run_target_args'
            let v1372 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1373 : string = "&*$0"
            let v1374 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1367 v1373 
            let _run_target_args'_v1372 = v1374 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1375 : string = "&*$0"
            let v1376 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1367 v1375 
            let _run_target_args'_v1372 = v1376 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1377 : string = "&*$0"
            let v1378 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1367 v1377 
            let _run_target_args'_v1372 = v1378 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1380 : Ref<Str> = v1367 |> unbox<Ref<Str>>
            let _run_target_args'_v1372 = v1380 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1384 : Ref<Str> = v1367 |> unbox<Ref<Str>>
            let _run_target_args'_v1372 = v1384 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1388 : Ref<Str> = v1367 |> unbox<Ref<Str>>
            let _run_target_args'_v1372 = v1388 
            #endif
#else
            let v1392 : Ref<Str> = v1367 |> unbox<Ref<Str>>
            let _run_target_args'_v1372 = v1392 
            #endif
            let v1395 : Ref<Str> = _run_target_args'_v1372 
            let v1401 : string = "$0.transaction(&[\"store\"], rexie::TransactionMode::ReadWrite)?"
            let v1402 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v1341 v1401 
            let v1403 : string = "v1402.store(\"store\")?"
            let v1404 : rexie_Store = Fable.Core.RustInterop.emitRustExpr () v1403 
            let v1405 : string = "true; v1404.put(&v1366, Some(&$0.into())).await?"
            let v1406 : bool = Fable.Core.RustInterop.emitRustExpr v1395 v1405 
            let v1407 : string = "true; v1402.done().await?"
            let v1408 : bool = Fable.Core.RustInterop.emitRustExpr () v1407 
            let v1410 : Result<unit, rexie_Error> = Ok () 
            let v1413 : string = v52 + v53 
            let x = v1410 //
            let v1414 : _ = x
            let v1415 : unit = ()
            (* run_target_args'
            let v1416 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1417 : string = $"true; let _fix_closure_v1415 = $0"
            let v1418 : bool = Fable.Core.RustInterop.emitRustExpr v1414 v1417 
            let _run_target_args'_v1416 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1419 : string = $"true; let _fix_closure_v1415 = $0"
            let v1420 : bool = Fable.Core.RustInterop.emitRustExpr v1414 v1419 
            let _run_target_args'_v1416 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1421 : string = $"true; let _fix_closure_v1415 = $0"
            let v1422 : bool = Fable.Core.RustInterop.emitRustExpr v1414 v1421 
            let _run_target_args'_v1416 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v1416 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v1416 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v1416 = false 
            #endif
#else
            let _run_target_args'_v1416 = false 
            #endif
            let v1423 : bool = _run_target_args'_v1416 
            let v1425 : string = $"true; _fix_closure_v1415 " + v1413 + "); " + v52 + " // rust.fix_closure'"
            let v1426 : bool = Fable.Core.RustInterop.emitRustExpr () v1425 
            let v1427 : string = "__future_init"
            let v1428 : _ = Fable.Core.RustInterop.emitRustExpr () v1427 
            let v1429 : string = "v1428"
            let v1430 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v1429 
            let v1431 : string = "v1430.await"
            let v1432 : Result<unit, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v1431 
            (* run_target_args'
            let v1433 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1434 : string = "$0.unwrap()"
            Fable.Core.RustInterop.emitRustExpr v1432 v1434 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1435 : string = "$0.unwrap()"
            Fable.Core.RustInterop.emitRustExpr v1432 v1435 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1436 : string = "$0.unwrap()"
            Fable.Core.RustInterop.emitRustExpr v1432 v1436 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            match v1432 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
            #endif
#if FABLE_COMPILER_PYTHON
            match v1432 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            match v1432 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
            #endif
#else
            match v1432 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
            #endif
            // run_target_args' is_unit
            true
    let v1442 : string = v52 + v53 
    let x = () //
    let v1443 : _ = x
    let v1444 : unit = ()
    (* run_target_args'
    let v1445 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let _run_target_args'_v1445 = false 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let _run_target_args'_v1445 = false 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let _run_target_args'_v1445 = false 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v1445 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v1445 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v1445 = false 
    #endif
#else
    let _run_target_args'_v1445 = false 
    #endif
    let v1446 : bool = _run_target_args'_v1445 
    let v1448 : string = $"true; _fix_closure_v1444 " + v1442 + "); " + v52 + " // rust.fix_closure'"
    let v1449 : bool = Fable.Core.RustInterop.emitRustExpr () v1448 
    let v1450 : string = "__future_init"
    let v1451 : _ = Fable.Core.RustInterop.emitRustExpr () v1450 
    let v1452 : string = "v1451"
    let v1453 : std_pin_Pin<Box<Dyn<std_future_Future<unit>>>> = Fable.Core.RustInterop.emitRustExpr () v1452 
    let func1_from_result = v1453 //
    let v1454 : _ = func1_from_result
    let v1455 : string = $"true; $0 /*"
    let v1456 : bool = Fable.Core.RustInterop.emitRustExpr v1454 v1455 
    let v1457 : string = $"*/ }}); //"
    let v1458 : bool = Fable.Core.RustInterop.emitRustExpr () v1457 
    let v1459 : string = $"_func1_from_v1302"
    let v1460 : Func0<Heap3, std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>> = Fable.Core.RustInterop.emitRustExpr () v1459 
    let v1461 : string = "leptos::prelude::ArcAction::new(move |value: &std::sync::Arc<Heap3>| $0(value.clone()))"
    let v1462 : (Heap3 -> std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>) = closure37(v1460)
    let v1463 : leptos_prelude_ArcAction<Heap3, unit> = Fable.Core.RustInterop.emitRustExpr v1462 v1461 
    let v1464 : unit = ()
    let v1465 : string = $"true; let _func0_from_v1464 = Func0::from(move || {{ //"
    let v1466 : bool = Fable.Core.RustInterop.emitRustExpr () v1465 
    let v1467 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v1468 : bool = Fable.Core.RustInterop.emitRustExpr v1300 v1467 
    let v1469 : string = "state_core.use_core_database (14) / effect new_core_state_heap / ##1 / loaded: " + string v1468 + ""
    let v1470 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1471 : bool = Fable.Core.RustInterop.emitRustExpr v1469 v1470 
    let v1472 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
    let v1473 : string = "Box::pin($0)"
    let v1474 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1472 v1473 
    let v1475 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v1476 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1474 v1475 
    let v1477 : leptos_prelude_ArcRwSignal<bool> = v1476.l0
    let v1478 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v1479 : bool = Fable.Core.RustInterop.emitRustExpr v1477 v1478 
    let v1480 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
    let v1481 : string = "Box::pin($0)"
    let v1482 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1480 v1481 
    let v1483 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v1484 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1482 v1483 
    let v1485 : leptos_prelude_ArcRwSignal<bool> = v1484.l1
    let v1486 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v1487 : bool = Fable.Core.RustInterop.emitRustExpr v1485 v1486 
    let v1488 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
    let v1489 : string = "Box::pin($0)"
    let v1490 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1488 v1489 
    let v1491 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v1492 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1490 v1491 
    let v1493 : leptos_prelude_ArcRwSignal<std_string_String> = v1492.l2
    let v1494 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v1495 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1493 v1494 
    let v1496 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
    let v1497 : string = "Box::pin($0)"
    let v1498 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1496 v1497 
    let v1499 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v1500 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1498 v1499 
    let v1501 : leptos_prelude_ArcRwSignal<Heap0> = v1500.l3
    let v1502 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v1503 : Heap0 = Fable.Core.RustInterop.emitRustExpr v1501 v1502 
    let v1504 : Heap3 = {l0 = v1479; l1 = v1487; l2 = v1495; l3 = v1503} : Heap3
    let v1506 : string = $"%A{v1504}"
    let v1509 : string = "state_core.use_core_database (15) / effect new_core_state_heap / ##2 / new_core_state_heap: " + string v1506 + ""
    let v1510 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1511 : bool = Fable.Core.RustInterop.emitRustExpr v1509 v1510 
    let v1512 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v1513 : std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>> = Fable.Core.RustInterop.emitRustExpr v1298 v1512 
    let v1514 : string = "dark_mode_key"
    (* run_target_args'
    let v1519 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v1520 : string = "&*$0"
    let v1521 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1514 v1520 
    let _run_target_args'_v1519 = v1521 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v1522 : string = "&*$0"
    let v1523 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1514 v1522 
    let _run_target_args'_v1519 = v1523 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v1524 : string = "&*$0"
    let v1525 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1514 v1524 
    let _run_target_args'_v1519 = v1525 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v1527 : Ref<Str> = v1514 |> unbox<Ref<Str>>
    let _run_target_args'_v1519 = v1527 
    #endif
#if FABLE_COMPILER_PYTHON
    let v1531 : Ref<Str> = v1514 |> unbox<Ref<Str>>
    let _run_target_args'_v1519 = v1531 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v1535 : Ref<Str> = v1514 |> unbox<Ref<Str>>
    let _run_target_args'_v1519 = v1535 
    #endif
#else
    let v1539 : Ref<Str> = v1514 |> unbox<Ref<Str>>
    let _run_target_args'_v1519 = v1539 
    #endif
    let v1542 : Ref<Str> = _run_target_args'_v1519 
    (* run_target_args'
    let v1552 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v1553 : string = "String::from($0)"
    let v1554 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1542 v1553 
    let _run_target_args'_v1552 = v1554 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v1555 : string = "String::from($0)"
    let v1556 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1542 v1555 
    let _run_target_args'_v1552 = v1556 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v1557 : string = "String::from($0)"
    let v1558 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1542 v1557 
    let _run_target_args'_v1552 = v1558 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v1560 : std_string_String = v1542 |> unbox<std_string_String>
    let _run_target_args'_v1552 = v1560 
    #endif
#if FABLE_COMPILER_PYTHON
    let v1564 : std_string_String = v1542 |> unbox<std_string_String>
    let _run_target_args'_v1552 = v1564 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v1568 : std_string_String = v1542 |> unbox<std_string_String>
    let _run_target_args'_v1552 = v1568 
    #endif
#else
    let v1572 : std_string_String = v1542 |> unbox<std_string_String>
    let _run_target_args'_v1552 = v1572 
    #endif
    let v1575 : std_string_String = _run_target_args'_v1552 
    let v1581 : std_string_String = method45(v1575)
    let v1582 : string = "std::collections::HashMap::get(&$0, &v1581).map(|x| x).cloned()"
    let v1583 : leptos_prelude_ArcRwSignal<bool> option = Fable.Core.RustInterop.emitRustExpr v1513 v1582 
    let v1586 : (leptos_prelude_ArcRwSignal<bool> -> US16) = method46()
    let v1587 : US16 option = v1583 |> Option.map v1586 
    let v1601 : US16 = US16_1
    let v1602 : US16 = v1587 |> Option.defaultValue v1601 
    let v1612 : US17 =
        match v1602 with
        | US16_1 -> (* None *)
            US17_1
        | US16_0(v1606) -> (* Some *)
            let v1607 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
            let v1608 : bool = Fable.Core.RustInterop.emitRustExpr v1606 v1607 
            US17_0(v1608)
    let v1615 : bool =
        match v1612 with
        | US17_1 -> (* None *)
            false
        | US17_0(v1613) -> (* Some *)
            v1613
    let v1616 : string = "state_core.use_core_database (16) / effect new_core_state_heap / ##3 / dark_mode_loading: " + string v1615 + ""
    let v1617 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1618 : bool = Fable.Core.RustInterop.emitRustExpr v1616 v1617 
    let v1619 : bool = v1615 = false
    let v1718 : bool =
        if v1619 then
            let v1620 : bool = v1468 = false
            if v1620 then
                let v1621 : string = $"true; leptos::prelude::WriteSignal::update(&$0, |x: &mut /*"
                let v1622 : bool = Fable.Core.RustInterop.emitRustExpr v1301 v1621 
                let v1624 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
                let v1627 : string = "*/ | { *x = $0(x.clone()) }); //"
                let v1628 : (bool -> bool) = closure39()
                let v1629 : bool = Fable.Core.RustInterop.emitRustExpr v1628 v1627 
                true
            else
                let v1630 : string = "state_core.use_core_database (18) / effect new_core_state_heap / ##4"
                let v1631 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v1632 : bool = Fable.Core.RustInterop.emitRustExpr v1630 v1631 
                let v1633 : web_sys_Window = method28()
                let v1634 : Result<web_sys_Storage option, wasm_bindgen_JsValue> = method29(v1633)
                let v1635 : (web_sys_Storage option -> US9) = method30()
                let v1636 : (wasm_bindgen_JsValue -> US9) = method31()
                let v1638 : US9 = match v1634 with Ok x -> v1635 x | Error x -> v1636 x
                let v1668 : US10 =
                    match v1638 with
                    | US9_1(v1665) -> (* Error *)
                        US10_1(v1665)
                    | US9_0(v1641) -> (* Ok *)
                        let v1644 : (web_sys_Storage -> US11) = method32()
                        let v1645 : US11 option = v1641 |> Option.map v1644 
                        let v1659 : US11 = US11_1
                        let v1660 : US11 = v1645 |> Option.defaultValue v1659 
                        US10_0(v1660)
                match v1668 with
                | US10_0(v1669) -> (* Ok *)
                    match v1669 with
                    | US11_0(v1670) -> (* Some *)
                        let v1671 : string = "true; leptos::prelude::ArcAction::dispatch(&$0, $1.clone())"
                        let v1672 : bool = Fable.Core.RustInterop.emitRustExpr struct (v1463, v1504) v1671 
                        let v1673 : web_sys_Storage = method47(v1670)
                        let v1674 : string = method48()
                        (* run_target_args'
                        let v1679 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1680 : string = "&*$0"
                        let v1681 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1674 v1680 
                        let _run_target_args'_v1679 = v1681 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1682 : string = "&*$0"
                        let v1683 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1674 v1682 
                        let _run_target_args'_v1679 = v1683 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1684 : string = "&*$0"
                        let v1685 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1674 v1684 
                        let _run_target_args'_v1679 = v1685 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1687 : Ref<Str> = v1674 |> unbox<Ref<Str>>
                        let _run_target_args'_v1679 = v1687 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1691 : Ref<Str> = v1674 |> unbox<Ref<Str>>
                        let _run_target_args'_v1679 = v1691 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1695 : Ref<Str> = v1674 |> unbox<Ref<Str>>
                        let _run_target_args'_v1679 = v1695 
                        #endif
#else
                        let v1699 : Ref<Str> = v1674 |> unbox<Ref<Str>>
                        let _run_target_args'_v1679 = v1699 
                        #endif
                        let v1702 : Ref<Str> = _run_target_args'_v1679 
                        let v1708 : Heap3 = method49(v1504)
                        let v1709 : string = "serde_json::json!(v1708).to_string()"
                        let v1710 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v1709 
                        let v1711 : string = "$0.as_str()"
                        let v1712 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1710 v1711 
                        let v1713 : string = $"true; web_sys::Storage::set(&v1673, $0, v1712).unwrap()"
                        let v1714 : bool = Fable.Core.RustInterop.emitRustExpr v1702 v1713 
                        true
                    | _ ->
                        false
                | _ ->
                    false
        else
            false
    // rust.func0_from / is_unit
    let v1719 : string = $"true; /*"
    let v1720 : bool = Fable.Core.RustInterop.emitRustExpr () v1719 
    let v1721 : string = $"*/ }}); //"
    let v1722 : bool = Fable.Core.RustInterop.emitRustExpr () v1721 
    let v1723 : string = $"_func0_from_v1464"
    let v1724 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v1723 
    let v1725 : string = "true; leptos::prelude::Effect::new(move |_| { v1724() })"
    let v1726 : bool = Fable.Core.RustInterop.emitRustExpr () v1725 
    let v1727 : string = "class=\"flex flex-1\""
    let v1728 : (unit -> bool) = method50(v7)
    let v1729 : string = "class:dark"
    let v1730 : string = "" + v1729 + "={move || v1728()}"
    let v1731 : string = " " + v1727 + v52 + ""
    let v1732 : string = " " + v1730 + v1731 + ""
    let v1733 : string = "content.render ()"
    let v1734 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1735 : bool = Fable.Core.RustInterop.emitRustExpr v1733 v1734 
    let v1736 : string = "leptos_router::hooks::use_location()"
    let v1737 : leptos_router_location_Location = Fable.Core.RustInterop.emitRustExpr () v1736 
    let v1738 : string = "std::sync::Arc::new(leptos_router::hooks::use_navigate())"
    let v1739 : std_sync_Arc<Dyn<ActionFn2<Ref<Str>, leptos_router_NavigateOptions>>> = Fable.Core.RustInterop.emitRustExpr () v1738 
    let v1740 : string = "leptos_router::hooks::use_location()"
    let v1741 : leptos_router_location_Location = Fable.Core.RustInterop.emitRustExpr () v1740 
    let v1742 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1743 : (unit -> string) = closure41(v1741)
    let v1744 : leptos_prelude_ArcMemo<string> = Fable.Core.RustInterop.emitRustExpr v1743 v1742 
    let v1745 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
    let v1746 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v1745 
    let v1747 : string = "$0.unwrap()"
    let v1748 : Heap2 = Fable.Core.RustInterop.emitRustExpr v1746 v1747 
    let v1749 : string = $"leptos::prelude::signal($0)"
    let v1750 : US18 = US18_0
    let struct (v1751 : leptos_prelude_ReadSignal<US18>, v1752 : leptos_prelude_WriteSignal<US18>) = Fable.Core.RustInterop.emitRustExpr v1750 v1749 
    let v1753 : string = $"leptos::prelude::signal($0)"
    let struct (v1754 : leptos_prelude_ReadSignal<bool>, v1755 : leptos_prelude_WriteSignal<bool>) = Fable.Core.RustInterop.emitRustExpr false v1753 
    let v1756 : unit = ()
    let v1757 : string = $"true; let _func0_from_v1756 = Func0::from(move || {{ //"
    let v1758 : bool = Fable.Core.RustInterop.emitRustExpr () v1757 
    let v1759 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v1760 : bool = Fable.Core.RustInterop.emitRustExpr v1754 v1759 
    let v1761 : string = "$0.hash"
    let v1762 : leptos_prelude_Memo<std_string_String> = Fable.Core.RustInterop.emitRustExpr v1737 v1761 
    let v1763 : string = $"leptos::prelude::Memo::get(&$0)"
    let v1764 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1762 v1763 
    let v1765 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v1766 : string = Fable.Core.RustInterop.emitRustExpr v1744 v1765 
    let v1767 : string = $"{v1766}{v1764}"
    let v1768 : string = "content.render () / effect 1 / new_url_hash: " + v1767 + " / loaded: " + string v1760 + ""
    let v1769 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1770 : bool = Fable.Core.RustInterop.emitRustExpr v1768 v1769 
    let v1771 : bool = v1760 = false
    let v1903 : bool =
        if v1771 then
            let v1772 : std_string_String = method51(v1764)
            let v1773 : string = "v1772 == \"\""
            let v1774 : bool = Fable.Core.RustInterop.emitRustExpr () v1773 
            if v1774 then
                let v1775 : leptos_prelude_ArcRwSignal<Heap1> = v1748.l0
                let v1776 : string = "Box::pin($0)"
                let v1777 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1775 v1776 
                let v1778 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                let v1779 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1777 v1778 
                let v1780 : leptos_prelude_ArcRwSignal<std_string_String> = v1779.l2
                let v1781 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
                let v1782 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1780 v1781 
                let v1783 : string = "fable_library_rust::String_::fromString($0)"
                let v1784 : string = Fable.Core.RustInterop.emitRustExpr v1782 v1783 
                let v1785 : string = "content.render () / effect 1 / url_hash: " + v1784 + ""
                let v1786 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v1787 : bool = Fable.Core.RustInterop.emitRustExpr v1785 v1786 
                let v1789 : string = "#"
                let v1790 : bool = v1784.Contains v1789 
                if v1790 then
                    (* run_target_args'
                    let v1797 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1798 : string = "&*$0"
                    let v1799 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1784 v1798 
                    let _run_target_args'_v1797 = v1799 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1800 : string = "&*$0"
                    let v1801 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1784 v1800 
                    let _run_target_args'_v1797 = v1801 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1802 : string = "&*$0"
                    let v1803 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1784 v1802 
                    let _run_target_args'_v1797 = v1803 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1805 : Ref<Str> = v1784 |> unbox<Ref<Str>>
                    let _run_target_args'_v1797 = v1805 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1809 : Ref<Str> = v1784 |> unbox<Ref<Str>>
                    let _run_target_args'_v1797 = v1809 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1813 : Ref<Str> = v1784 |> unbox<Ref<Str>>
                    let _run_target_args'_v1797 = v1813 
                    #endif
#else
                    let v1817 : Ref<Str> = v1784 |> unbox<Ref<Str>>
                    let _run_target_args'_v1797 = v1817 
                    #endif
                    let v1820 : Ref<Str> = _run_target_args'_v1797 
                    let v1826 : string = "$0($1, Default::default())"
                    Fable.Core.RustInterop.emitRustExpr struct (v1739, v1820) v1826 
                    ()
            let v1827 : string = $"true; leptos::prelude::WriteSignal::set(&$0, $1); //"
            let v1828 : bool = Fable.Core.RustInterop.emitRustExpr struct (v1755, true) v1827 
            true
        else
            let v1829 : leptos_prelude_ArcRwSignal<Heap1> = v1748.l0
            let v1830 : string = "Box::pin($0)"
            let v1831 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1829 v1830 
            let v1832 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
            let v1833 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1831 v1832 
            let v1834 : leptos_prelude_ArcRwSignal<std_string_String> = v1833.l2
            (* run_target_args'
            let v1839 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1840 : string = "&*$0"
            let v1841 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1767 v1840 
            let _run_target_args'_v1839 = v1841 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1842 : string = "&*$0"
            let v1843 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1767 v1842 
            let _run_target_args'_v1839 = v1843 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1844 : string = "&*$0"
            let v1845 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1767 v1844 
            let _run_target_args'_v1839 = v1845 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1847 : Ref<Str> = v1767 |> unbox<Ref<Str>>
            let _run_target_args'_v1839 = v1847 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1851 : Ref<Str> = v1767 |> unbox<Ref<Str>>
            let _run_target_args'_v1839 = v1851 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1855 : Ref<Str> = v1767 |> unbox<Ref<Str>>
            let _run_target_args'_v1839 = v1855 
            #endif
#else
            let v1859 : Ref<Str> = v1767 |> unbox<Ref<Str>>
            let _run_target_args'_v1839 = v1859 
            #endif
            let v1862 : Ref<Str> = _run_target_args'_v1839 
            (* run_target_args'
            let v1872 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1873 : string = "String::from($0)"
            let v1874 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1862 v1873 
            let _run_target_args'_v1872 = v1874 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1875 : string = "String::from($0)"
            let v1876 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1862 v1875 
            let _run_target_args'_v1872 = v1876 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1877 : string = "String::from($0)"
            let v1878 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1862 v1877 
            let _run_target_args'_v1872 = v1878 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1880 : std_string_String = v1862 |> unbox<std_string_String>
            let _run_target_args'_v1872 = v1880 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1884 : std_string_String = v1862 |> unbox<std_string_String>
            let _run_target_args'_v1872 = v1884 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1888 : std_string_String = v1862 |> unbox<std_string_String>
            let _run_target_args'_v1872 = v1888 
            #endif
#else
            let v1892 : std_string_String = v1862 |> unbox<std_string_String>
            let _run_target_args'_v1872 = v1892 
            #endif
            let v1895 : std_string_String = _run_target_args'_v1872 
            let v1901 : string = $"true; leptos::prelude::ArcRwSignal::set(&$0, $1); //"
            let v1902 : bool = Fable.Core.RustInterop.emitRustExpr struct (v1834, v1895) v1901 
            false
    // rust.func0_from / is_unit
    let v1904 : string = $"true; /*"
    let v1905 : bool = Fable.Core.RustInterop.emitRustExpr () v1904 
    let v1906 : string = $"*/ }}); //"
    let v1907 : bool = Fable.Core.RustInterop.emitRustExpr () v1906 
    let v1908 : string = $"_func0_from_v1756"
    let v1909 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v1908 
    let v1910 : string = "true; leptos::prelude::Effect::new(move |_| { v1909() })"
    let v1911 : bool = Fable.Core.RustInterop.emitRustExpr () v1910 
    let v1912 : unit = ()
    let v1913 : string = $"true; let _func0_from_v1912 = Func0::from(move || {{ //"
    let v1914 : bool = Fable.Core.RustInterop.emitRustExpr () v1913 
    let v1915 : string = "$0.hash"
    let v1916 : leptos_prelude_Memo<std_string_String> = Fable.Core.RustInterop.emitRustExpr v1737 v1915 
    let v1917 : string = $"leptos::prelude::Memo::get(&$0)"
    let v1918 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1916 v1917 
    let v1919 : std_string_String = method52(v1918)
    let v1920 : string = "v1919.strip_prefix('#')"
    let v1921 : Ref<Str> option = Fable.Core.RustInterop.emitRustExpr () v1920 
    let v1922 : string = "r#\"" + v52 + "\"#"
    let v1923 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v1922 
    let v1924 : string = "v1921.unwrap_or(v1923)"
    let v1925 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v1924 
    let v1926 : string = "leptos_router::location::Url::try_from($0)"
    let v1927 : Result<leptos_router_Url, std_string_String> = Fable.Core.RustInterop.emitRustExpr v1925 v1926 
    let v1928 : (leptos_router_Url -> US20) = method53()
    let v1929 : (std_string_String -> US20) = method54()
    let v1931 : US20 = match v1927 with Ok x -> v1928 x | Error x -> v1929 x
    (* run_target_args'
    let v1938 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v1939 : string = "format!(\"{:#?}\", $0)"
    let v1940 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1931 v1939 
    let v1941 : string = "fable_library_rust::String_::fromString($0)"
    let v1942 : string = Fable.Core.RustInterop.emitRustExpr v1940 v1941 
    let _run_target_args'_v1938 = v1942 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v1943 : string = "format!(\"{:#?}\", $0)"
    let v1944 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1931 v1943 
    let v1945 : string = "fable_library_rust::String_::fromString($0)"
    let v1946 : string = Fable.Core.RustInterop.emitRustExpr v1944 v1945 
    let _run_target_args'_v1938 = v1946 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v1947 : string = "format!(\"{:#?}\", $0)"
    let v1948 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1931 v1947 
    let v1949 : string = "fable_library_rust::String_::fromString($0)"
    let v1950 : string = Fable.Core.RustInterop.emitRustExpr v1948 v1949 
    let _run_target_args'_v1938 = v1950 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v1952 : string = $"%A{v1931}"
    let _run_target_args'_v1938 = v1952 
    #endif
#if FABLE_COMPILER_PYTHON
    let v1956 : string = $"%A{v1931}"
    let _run_target_args'_v1938 = v1956 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v1960 : string = $"%A{v1931}"
    let _run_target_args'_v1938 = v1960 
    #endif
#else
    let v1964 : string = $"%A{v1931}"
    let _run_target_args'_v1938 = v1964 
    #endif
    let v1967 : string = _run_target_args'_v1938 
    let v1973 : string = "content.render () / effect 2 / hash_url: " + v1967 + ""
    let v1974 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1975 : bool = Fable.Core.RustInterop.emitRustExpr v1973 v1974 
    let v2100 : bool =
        match v1931 with
        | US20_1(v2095) -> (* Error *)
            let v2096 : string = "content.render () / effect 2 / hash_url error: " + string v2095 + ""
            let v2097 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2098 : bool = Fable.Core.RustInterop.emitRustExpr v2096 v2097 
            false
        | US20_0(v1976) -> (* Ok *)
            let v1977 : string = "$0.pathname"
            let v1978 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1976 v1977 
            let v1979 : string = "fable_library_rust::String_::fromString($0)"
            let v1980 : string = Fable.Core.RustInterop.emitRustExpr v1978 v1979 
            let v1981 : string = "dice"
            let v1982 : string = "/" + v1981 + ""
            let v1984 : bool = v1980.StartsWith (v1982, false, null)
            let v1991 : US21 =
                if v1984 then
                    let v1987 : US19 = US19_0
                    let v1988 : US18 = US18_1(v1987)
                    US21_0(v1988)
                else
                    US21_1
            let v2009 : US21 =
                match v1991 with
                | US21_1 -> (* None *)
                    let v1994 : string = "$0.pathname"
                    let v1995 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1976 v1994 
                    let v1996 : string = "fable_library_rust::String_::fromString($0)"
                    let v1997 : string = Fable.Core.RustInterop.emitRustExpr v1995 v1996 
                    let v1998 : string = "lists"
                    let v1999 : string = "/" + v1998 + ""
                    let v2001 : bool = v1997.StartsWith (v1999, false, null)
                    if v2001 then
                        let v2004 : US18 = US18_2
                        US21_0(v2004)
                    else
                        US21_1
                | US21_0(v1992) -> (* Some *)
                    US21_0(v1992)
            let v2027 : US21 =
                match v2009 with
                | US21_1 -> (* None *)
                    let v2012 : string = "$0.pathname"
                    let v2013 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1976 v2012 
                    let v2014 : string = "fable_library_rust::String_::fromString($0)"
                    let v2015 : string = Fable.Core.RustInterop.emitRustExpr v2013 v2014 
                    let v2016 : string = "transactions"
                    let v2017 : string = "/" + v2016 + ""
                    let v2019 : bool = v2015.StartsWith (v2017, false, null)
                    if v2019 then
                        let v2022 : US18 = US18_3
                        US21_0(v2022)
                    else
                        US21_1
                | US21_0(v2010) -> (* Some *)
                    US21_0(v2010)
            let v2045 : US21 =
                match v2027 with
                | US21_1 -> (* None *)
                    let v2030 : string = "$0.pathname"
                    let v2031 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1976 v2030 
                    let v2032 : string = "fable_library_rust::String_::fromString($0)"
                    let v2033 : string = Fable.Core.RustInterop.emitRustExpr v2031 v2032 
                    let v2034 : string = "settings"
                    let v2035 : string = "/" + v2034 + ""
                    let v2037 : bool = v2033.StartsWith (v2035, false, null)
                    if v2037 then
                        let v2040 : US18 = US18_4
                        US21_0(v2040)
                    else
                        US21_1
                | US21_0(v2028) -> (* Some *)
                    US21_0(v2028)
            let v2050 : US18 =
                match v2045 with
                | US21_1 -> (* None *)
                    let v2047 : US19 = US19_0
                    US18_1(v2047)
                | US21_0(v2046) -> (* Some *)
                    v2046
            (* run_target_args'
            let v2055 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2056 : string = "format!(\"{:#?}\", $0)"
            let v2057 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2050 v2056 
            let v2058 : string = "fable_library_rust::String_::fromString($0)"
            let v2059 : string = Fable.Core.RustInterop.emitRustExpr v2057 v2058 
            let _run_target_args'_v2055 = v2059 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2060 : string = "format!(\"{:#?}\", $0)"
            let v2061 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2050 v2060 
            let v2062 : string = "fable_library_rust::String_::fromString($0)"
            let v2063 : string = Fable.Core.RustInterop.emitRustExpr v2061 v2062 
            let _run_target_args'_v2055 = v2063 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2064 : string = "format!(\"{:#?}\", $0)"
            let v2065 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2050 v2064 
            let v2066 : string = "fable_library_rust::String_::fromString($0)"
            let v2067 : string = Fable.Core.RustInterop.emitRustExpr v2065 v2066 
            let _run_target_args'_v2055 = v2067 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2069 : string = $"%A{v2050}"
            let _run_target_args'_v2055 = v2069 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2073 : string = $"%A{v2050}"
            let _run_target_args'_v2055 = v2073 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2077 : string = $"%A{v2050}"
            let _run_target_args'_v2055 = v2077 
            #endif
#else
            let v2081 : string = $"%A{v2050}"
            let _run_target_args'_v2055 = v2081 
            #endif
            let v2084 : string = _run_target_args'_v2055 
            let v2090 : string = "content.render () / effect 2 / new_tab: " + v2084 + ""
            let v2091 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2092 : bool = Fable.Core.RustInterop.emitRustExpr v2090 v2091 
            let v2093 : string = $"true; leptos::prelude::WriteSignal::set(&$0, $1); //"
            let v2094 : bool = Fable.Core.RustInterop.emitRustExpr struct (v1752, v2050) v2093 
            true
    // rust.func0_from / is_unit
    let v2101 : string = $"true; /*"
    let v2102 : bool = Fable.Core.RustInterop.emitRustExpr () v2101 
    let v2103 : string = $"*/ }}); //"
    let v2104 : bool = Fable.Core.RustInterop.emitRustExpr () v2103 
    let v2105 : string = $"_func0_from_v1912"
    let v2106 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v2105 
    let v2107 : string = "true; leptos::prelude::Effect::new(move |_| { v2106() })"
    let v2108 : bool = Fable.Core.RustInterop.emitRustExpr () v2107 
    let v2109 : string = "class=\"flex flex-1 max-[100px]:[overflow-x:auto]\""
    let v2110 : string = " " + v2109 + v52 + ""
    let v2111 : string = "class=\"flex flex-1 flex-col [width:100vw] [max-width:100vw] max-[100px]:[min-width:800px] [height:100vh] [max-height:100dvh] [max-height:-webkit-fill-available] max-[60px]:[min-height:600px] bg-gray-50 text-gray-700 text-sm\""
    let v2112 : string = " " + v2111 + v52 + ""
    let v2113 : string = "class=\"flex flex-1 flex-col [overflow:hidden]\""
    let v2114 : string = " " + v2113 + v52 + ""
    let v2115 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2116 : US18 = Fable.Core.RustInterop.emitRustExpr v1751 v2115 
    let v5435 : US22 =
        match v2116 with
        | US18_1(v2117) -> (* Dice *)
            let v2118 : string = "dice_view.render (1)"
            let v2119 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2120 : bool = Fable.Core.RustInterop.emitRustExpr v2118 v2119 
            let v2121 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
            let v2122 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v2121 
            let v2123 : string = "$0.unwrap()"
            let v2124 : Heap2 = Fable.Core.RustInterop.emitRustExpr v2122 v2123 
            let v2125 : string = "use_transactions.render (1)"
            let v2126 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2127 : bool = Fable.Core.RustInterop.emitRustExpr v2125 v2126 
            let v2128 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2129 : (unit -> Vec<string>) = closure44(v2124)
            let v2130 : leptos_prelude_ArcMemo<Vec<string>> = Fable.Core.RustInterop.emitRustExpr v2129 v2128 
            let v2131 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2132 : (unit -> (struct (string * US23 * string * bool * bool) [])) = closure46(v2130)
            let v2133 : leptos_prelude_ArcMemo<(struct (string * US23 * string * bool * bool) [])> = Fable.Core.RustInterop.emitRustExpr v2132 v2131 
            let v2134 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2135 : (unit -> Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>) = closure48(v2124, v2130)
            let v2136 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>> = Fable.Core.RustInterop.emitRustExpr v2135 v2134 
            let v2137 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2138 : (unit -> Vec<struct (string * US23 * string * bool * bool)>) = closure51(v2136)
            let v2139 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr v2138 v2137 
            let v2140 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2141 : (unit -> (string [])) = closure55(v2136)
            let v2142 : leptos_prelude_ArcMemo<(string [])> = Fable.Core.RustInterop.emitRustExpr v2141 v2140 
            let v2143 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) = closure60()
            let v2144 : leptos_prelude_ArcMemo<Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>> = method78(v2139, v2143)
            let v2146 : string = $"%A{v2144}"
            let v2149 : string = "use_transactions.render (7) / root func0 / result: " + string v2146 + ""
            let v2150 : int64 = 200L
            let v2151 : string = method8(v2150, v2149)
            let v2152 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2153 : bool = Fable.Core.RustInterop.emitRustExpr v2151 v2152 
            let v2154 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2155 : (unit -> Result<(struct (string * unativeint * Heap5) []) option, std_string_String>) = closure90(v2142, v2144)
            let v2156 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v2155 v2154 
            let v2157 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2158 : (unit -> Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String>) = closure107(v2156)
            let v2159 : leptos_prelude_ArcMemo<Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v2158 v2157 
            let v2160 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2161 : (unit -> Vec<struct (string * US23 * string * bool * bool)>) = closure115(v2159)
            let v2162 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr v2161 v2160 
            let v2163 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option)) = closure119()
            let v2164 : leptos_prelude_ArcMemo<Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>> = method159(v2162, v2163)
            let v2166 : string = $"%A{v2164}"
            let v2169 : string = "use_transactions.render (12) / rpc_response func0 / result: " + string v2166 + ""
            let v2170 : int64 = 200L
            let v2171 : string = method8(v2170, v2169)
            let v2172 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2173 : bool = Fable.Core.RustInterop.emitRustExpr v2171 v2172 
            let v2174 : unit = ()
            let v2175 : string = $"true; let _func1_from_v2174 = Func1::from(move |value| {{ //"
            let v2176 : bool = Fable.Core.RustInterop.emitRustExpr () v2175 
            let v2177 : string = $"value"
            let v2178 : Heap6 = Fable.Core.RustInterop.emitRustExpr () v2177 
            let v2180 : string = $"%A{v2178}"
            let v2183 : string = "dice_view.render (2) / set_max_action / value: " + string v2180 + ""
            let v2184 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2185 : bool = Fable.Core.RustInterop.emitRustExpr v2183 v2184 
            let v2186 : string = "true; let __future_init = Box::pin(/*"
            let v2187 : bool = Fable.Core.RustInterop.emitRustExpr () v2186 
            let v2188 : string = "*/ async move { /*"
            let v2189 : bool = Fable.Core.RustInterop.emitRustExpr () v2188 
            let v2190 : string = "*/ ()"
            let v2191 : bool = Fable.Core.RustInterop.emitRustExpr () v2190 
            let v2192 : string = "2.0"
            (* run_target_args'
            let v2197 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2198 : string = "&*$0"
            let v2199 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2192 v2198 
            let _run_target_args'_v2197 = v2199 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2200 : string = "&*$0"
            let v2201 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2192 v2200 
            let _run_target_args'_v2197 = v2201 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2202 : string = "&*$0"
            let v2203 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2192 v2202 
            let _run_target_args'_v2197 = v2203 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2205 : Ref<Str> = v2192 |> unbox<Ref<Str>>
            let _run_target_args'_v2197 = v2205 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2209 : Ref<Str> = v2192 |> unbox<Ref<Str>>
            let _run_target_args'_v2197 = v2209 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2213 : Ref<Str> = v2192 |> unbox<Ref<Str>>
            let _run_target_args'_v2197 = v2213 
            #endif
#else
            let v2217 : Ref<Str> = v2192 |> unbox<Ref<Str>>
            let _run_target_args'_v2197 = v2217 
            #endif
            let v2220 : Ref<Str> = _run_target_args'_v2197 
            (* run_target_args'
            let v2230 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2231 : string = "String::from($0)"
            let v2232 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2220 v2231 
            let _run_target_args'_v2230 = v2232 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2233 : string = "String::from($0)"
            let v2234 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2220 v2233 
            let _run_target_args'_v2230 = v2234 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2235 : string = "String::from($0)"
            let v2236 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2220 v2235 
            let _run_target_args'_v2230 = v2236 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2238 : std_string_String = v2220 |> unbox<std_string_String>
            let _run_target_args'_v2230 = v2238 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2242 : std_string_String = v2220 |> unbox<std_string_String>
            let _run_target_args'_v2230 = v2242 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2246 : std_string_String = v2220 |> unbox<std_string_String>
            let _run_target_args'_v2230 = v2246 
            #endif
#else
            let v2250 : std_string_String = v2220 |> unbox<std_string_String>
            let _run_target_args'_v2230 = v2250 
            #endif
            let v2253 : std_string_String = _run_target_args'_v2230 
            let v2259 : string = "dontcare"
            (* run_target_args'
            let v2264 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2265 : string = "&*$0"
            let v2266 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2259 v2265 
            let _run_target_args'_v2264 = v2266 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2267 : string = "&*$0"
            let v2268 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2259 v2267 
            let _run_target_args'_v2264 = v2268 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2269 : string = "&*$0"
            let v2270 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2259 v2269 
            let _run_target_args'_v2264 = v2270 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2272 : Ref<Str> = v2259 |> unbox<Ref<Str>>
            let _run_target_args'_v2264 = v2272 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2276 : Ref<Str> = v2259 |> unbox<Ref<Str>>
            let _run_target_args'_v2264 = v2276 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2280 : Ref<Str> = v2259 |> unbox<Ref<Str>>
            let _run_target_args'_v2264 = v2280 
            #endif
#else
            let v2284 : Ref<Str> = v2259 |> unbox<Ref<Str>>
            let _run_target_args'_v2264 = v2284 
            #endif
            let v2287 : Ref<Str> = _run_target_args'_v2264 
            (* run_target_args'
            let v2297 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2298 : string = "String::from($0)"
            let v2299 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2287 v2298 
            let _run_target_args'_v2297 = v2299 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2300 : string = "String::from($0)"
            let v2301 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2287 v2300 
            let _run_target_args'_v2297 = v2301 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2302 : string = "String::from($0)"
            let v2303 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2287 v2302 
            let _run_target_args'_v2297 = v2303 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2305 : std_string_String = v2287 |> unbox<std_string_String>
            let _run_target_args'_v2297 = v2305 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2309 : std_string_String = v2287 |> unbox<std_string_String>
            let _run_target_args'_v2297 = v2309 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2313 : std_string_String = v2287 |> unbox<std_string_String>
            let _run_target_args'_v2297 = v2313 
            #endif
#else
            let v2317 : std_string_String = v2287 |> unbox<std_string_String>
            let _run_target_args'_v2297 = v2317 
            #endif
            let v2320 : std_string_String = _run_target_args'_v2297 
            let v2326 : string = "EXPERIMENTAL_tx_status"
            (* run_target_args'
            let v2331 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2332 : string = "&*$0"
            let v2333 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2326 v2332 
            let _run_target_args'_v2331 = v2333 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2334 : string = "&*$0"
            let v2335 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2326 v2334 
            let _run_target_args'_v2331 = v2335 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2336 : string = "&*$0"
            let v2337 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2326 v2336 
            let _run_target_args'_v2331 = v2337 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2339 : Ref<Str> = v2326 |> unbox<Ref<Str>>
            let _run_target_args'_v2331 = v2339 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2343 : Ref<Str> = v2326 |> unbox<Ref<Str>>
            let _run_target_args'_v2331 = v2343 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2347 : Ref<Str> = v2326 |> unbox<Ref<Str>>
            let _run_target_args'_v2331 = v2347 
            #endif
#else
            let v2351 : Ref<Str> = v2326 |> unbox<Ref<Str>>
            let _run_target_args'_v2331 = v2351 
            #endif
            let v2354 : Ref<Str> = _run_target_args'_v2331 
            (* run_target_args'
            let v2364 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2365 : string = "String::from($0)"
            let v2366 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2354 v2365 
            let _run_target_args'_v2364 = v2366 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2367 : string = "String::from($0)"
            let v2368 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2354 v2367 
            let _run_target_args'_v2364 = v2368 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2369 : string = "String::from($0)"
            let v2370 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2354 v2369 
            let _run_target_args'_v2364 = v2370 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2372 : std_string_String = v2354 |> unbox<std_string_String>
            let _run_target_args'_v2364 = v2372 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2376 : std_string_String = v2354 |> unbox<std_string_String>
            let _run_target_args'_v2364 = v2376 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2380 : std_string_String = v2354 |> unbox<std_string_String>
            let _run_target_args'_v2364 = v2380 
            #endif
#else
            let v2384 : std_string_String = v2354 |> unbox<std_string_String>
            let _run_target_args'_v2364 = v2384 
            #endif
            let v2387 : std_string_String = _run_target_args'_v2364 
            let v2393 : string = "9JgptZpFQGtUvusnoF9ysVqHXD8fXCri8mFxPTMnt3kS"
            (* run_target_args'
            let v2398 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2399 : string = "&*$0"
            let v2400 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2393 v2399 
            let _run_target_args'_v2398 = v2400 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2401 : string = "&*$0"
            let v2402 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2393 v2401 
            let _run_target_args'_v2398 = v2402 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2403 : string = "&*$0"
            let v2404 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2393 v2403 
            let _run_target_args'_v2398 = v2404 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2406 : Ref<Str> = v2393 |> unbox<Ref<Str>>
            let _run_target_args'_v2398 = v2406 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2410 : Ref<Str> = v2393 |> unbox<Ref<Str>>
            let _run_target_args'_v2398 = v2410 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2414 : Ref<Str> = v2393 |> unbox<Ref<Str>>
            let _run_target_args'_v2398 = v2414 
            #endif
#else
            let v2418 : Ref<Str> = v2393 |> unbox<Ref<Str>>
            let _run_target_args'_v2398 = v2418 
            #endif
            let v2421 : Ref<Str> = _run_target_args'_v2398 
            (* run_target_args'
            let v2431 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2432 : string = "String::from($0)"
            let v2433 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2421 v2432 
            let _run_target_args'_v2431 = v2433 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2434 : string = "String::from($0)"
            let v2435 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2421 v2434 
            let _run_target_args'_v2431 = v2435 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2436 : string = "String::from($0)"
            let v2437 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2421 v2436 
            let _run_target_args'_v2431 = v2437 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2439 : std_string_String = v2421 |> unbox<std_string_String>
            let _run_target_args'_v2431 = v2439 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2443 : std_string_String = v2421 |> unbox<std_string_String>
            let _run_target_args'_v2431 = v2443 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2447 : std_string_String = v2421 |> unbox<std_string_String>
            let _run_target_args'_v2431 = v2447 
            #endif
#else
            let v2451 : std_string_String = v2421 |> unbox<std_string_String>
            let _run_target_args'_v2431 = v2451 
            #endif
            let v2454 : std_string_String = _run_target_args'_v2431 
            let v2460 : string = "bowen"
            (* run_target_args'
            let v2465 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2466 : string = "&*$0"
            let v2467 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2460 v2466 
            let _run_target_args'_v2465 = v2467 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2468 : string = "&*$0"
            let v2469 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2460 v2468 
            let _run_target_args'_v2465 = v2469 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2470 : string = "&*$0"
            let v2471 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2460 v2470 
            let _run_target_args'_v2465 = v2471 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2473 : Ref<Str> = v2460 |> unbox<Ref<Str>>
            let _run_target_args'_v2465 = v2473 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2477 : Ref<Str> = v2460 |> unbox<Ref<Str>>
            let _run_target_args'_v2465 = v2477 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2481 : Ref<Str> = v2460 |> unbox<Ref<Str>>
            let _run_target_args'_v2465 = v2481 
            #endif
#else
            let v2485 : Ref<Str> = v2460 |> unbox<Ref<Str>>
            let _run_target_args'_v2465 = v2485 
            #endif
            let v2488 : Ref<Str> = _run_target_args'_v2465 
            (* run_target_args'
            let v2498 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2499 : string = "String::from($0)"
            let v2500 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2488 v2499 
            let _run_target_args'_v2498 = v2500 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2501 : string = "String::from($0)"
            let v2502 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2488 v2501 
            let _run_target_args'_v2498 = v2502 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2503 : string = "String::from($0)"
            let v2504 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2488 v2503 
            let _run_target_args'_v2498 = v2504 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2506 : std_string_String = v2488 |> unbox<std_string_String>
            let _run_target_args'_v2498 = v2506 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2510 : std_string_String = v2488 |> unbox<std_string_String>
            let _run_target_args'_v2498 = v2510 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2514 : std_string_String = v2488 |> unbox<std_string_String>
            let _run_target_args'_v2498 = v2514 
            #endif
#else
            let v2518 : std_string_String = v2488 |> unbox<std_string_String>
            let _run_target_args'_v2498 = v2518 
            #endif
            let v2521 : std_string_String = _run_target_args'_v2498 
            let v2527 : (std_string_String []) = [|v2454; v2521|]
            let v2528 : string = "$0.to_vec()"
            let v2529 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v2527 v2528 
            let v2530 : string = "crate::model::near::rpc::RpcInput { jsonrpc: $0, id: $1, method: $2, params: v2529 }"
            let v2531 : crate_model_near_rpc_RpcInput = Fable.Core.RustInterop.emitRustExpr struct (v2253, v2320, v2387) v2530 
            let v2532 : string = method167()
            (* run_target_args'
            let v2537 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2538 : string = "&*$0"
            let v2539 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2532 v2538 
            let _run_target_args'_v2537 = v2539 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2540 : string = "&*$0"
            let v2541 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2532 v2540 
            let _run_target_args'_v2537 = v2541 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2542 : string = "&*$0"
            let v2543 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2532 v2542 
            let _run_target_args'_v2537 = v2543 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2545 : Ref<Str> = v2532 |> unbox<Ref<Str>>
            let _run_target_args'_v2537 = v2545 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2549 : Ref<Str> = v2532 |> unbox<Ref<Str>>
            let _run_target_args'_v2537 = v2549 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2553 : Ref<Str> = v2532 |> unbox<Ref<Str>>
            let _run_target_args'_v2537 = v2553 
            #endif
#else
            let v2557 : Ref<Str> = v2532 |> unbox<Ref<Str>>
            let _run_target_args'_v2537 = v2557 
            #endif
            let v2560 : Ref<Str> = _run_target_args'_v2537 
            (* run_target_args'
            let v2570 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2571 : string = "String::from($0)"
            let v2572 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2560 v2571 
            let _run_target_args'_v2570 = v2572 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2573 : string = "String::from($0)"
            let v2574 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2560 v2573 
            let _run_target_args'_v2570 = v2574 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2575 : string = "String::from($0)"
            let v2576 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2560 v2575 
            let _run_target_args'_v2570 = v2576 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2578 : std_string_String = v2560 |> unbox<std_string_String>
            let _run_target_args'_v2570 = v2578 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2582 : std_string_String = v2560 |> unbox<std_string_String>
            let _run_target_args'_v2570 = v2582 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2586 : std_string_String = v2560 |> unbox<std_string_String>
            let _run_target_args'_v2570 = v2586 
            #endif
#else
            let v2590 : std_string_String = v2560 |> unbox<std_string_String>
            let _run_target_args'_v2570 = v2590 
            #endif
            let v2593 : std_string_String = _run_target_args'_v2570 
            let v2599 : std_string_String = method92(v2593)
            let v2600 : string = "reqwest_wasm::Client::builder().build().map_err(|err| err.to_string())?.post(v2599)"
            let v2601 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr () v2600 
            let v2602 : string = "reqwest_wasm::RequestBuilder::json(v2601, &v2531)"
            let v2603 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr () v2602 
            let v2604 : reqwest_RequestBuilder = method94(v2603)
            let v2605 : string = "Box::pin(reqwest_wasm::RequestBuilder::send(v2604))"
            let v2606 : std_pin_Pin<Box<Dyn<std_future_Future<Result<reqwest_Response, reqwest_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v2605 
            let v2607 : string = "v2606.await"
            let v2608 : Result<reqwest_Response, reqwest_Error> = Fable.Core.RustInterop.emitRustExpr () v2607 
            let v2609 : (reqwest_Error -> std_string_String) = method95()
            (* run_target_args'
            let v2611 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2612 : string = "$0.map_err(|x| $1(x))"
            let v2613 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2608, v2609) v2612 
            let _run_target_args'_v2611 = v2613 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2614 : string = "$0.map_err(|x| $1(x))"
            let v2615 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2608, v2609) v2614 
            let _run_target_args'_v2611 = v2615 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2616 : string = "$0.map_err(|x| $1(x))"
            let v2617 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2608, v2609) v2616 
            let _run_target_args'_v2611 = v2617 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2618 : Result<reqwest_Response, std_string_String> = match v2608 with Ok x -> Ok x | Error x -> Error (v2609 x)
            let _run_target_args'_v2611 = v2618 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2619 : Result<reqwest_Response, std_string_String> = match v2608 with Ok x -> Ok x | Error x -> Error (v2609 x)
            let _run_target_args'_v2611 = v2619 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2620 : Result<reqwest_Response, std_string_String> = match v2608 with Ok x -> Ok x | Error x -> Error (v2609 x)
            let _run_target_args'_v2611 = v2620 
            #endif
#else
            let v2621 : Result<reqwest_Response, std_string_String> = match v2608 with Ok x -> Ok x | Error x -> Error (v2609 x)
            let _run_target_args'_v2611 = v2621 
            #endif
            let v2622 : Result<reqwest_Response, std_string_String> = _run_target_args'_v2611 
            let v2625 : string = "$0?"
            let v2626 : reqwest_Response = Fable.Core.RustInterop.emitRustExpr v2622 v2625 
            let v2627 : string = "Box::pin(reqwest_wasm::Response::text(v2626))"
            let v2628 : std_pin_Pin<Box<Dyn<std_future_Future<Result<std_string_String, reqwest_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v2627 
            let v2629 : string = "v2628.await"
            let v2630 : Result<std_string_String, reqwest_Error> = Fable.Core.RustInterop.emitRustExpr () v2629 
            let v2631 : (reqwest_Error -> std_string_String) = method95()
            (* run_target_args'
            let v2633 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2634 : string = "$0.map_err(|x| $1(x))"
            let v2635 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2630, v2631) v2634 
            let _run_target_args'_v2633 = v2635 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2636 : string = "$0.map_err(|x| $1(x))"
            let v2637 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2630, v2631) v2636 
            let _run_target_args'_v2633 = v2637 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2638 : string = "$0.map_err(|x| $1(x))"
            let v2639 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2630, v2631) v2638 
            let _run_target_args'_v2633 = v2639 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2640 : Result<std_string_String, std_string_String> = match v2630 with Ok x -> Ok x | Error x -> Error (v2631 x)
            let _run_target_args'_v2633 = v2640 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2641 : Result<std_string_String, std_string_String> = match v2630 with Ok x -> Ok x | Error x -> Error (v2631 x)
            let _run_target_args'_v2633 = v2641 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2642 : Result<std_string_String, std_string_String> = match v2630 with Ok x -> Ok x | Error x -> Error (v2631 x)
            let _run_target_args'_v2633 = v2642 
            #endif
#else
            let v2643 : Result<std_string_String, std_string_String> = match v2630 with Ok x -> Ok x | Error x -> Error (v2631 x)
            let _run_target_args'_v2633 = v2643 
            #endif
            let v2644 : Result<std_string_String, std_string_String> = _run_target_args'_v2633 
            let v2647 : string = "$0?"
            let v2648 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2644 v2647 
            let v2651 : US14 = US14_0(v2648)
            let v2652 : Result<US14, std_string_String> = Ok v2651 
            let v2657 : string = $"%A{v2652}"
            let v2660 : string = "dice_view.render (x) / roll_action new_arc_action / result1 / result: " + string v2657 + ""
            let v2661 : int64 = 200L
            let v2662 : string = method8(v2661, v2660)
            let v2663 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2664 : bool = Fable.Core.RustInterop.emitRustExpr v2662 v2663 
            let v2665 : (US14 -> US57) = method168()
            let v2666 : (std_string_String -> US57) = method169()
            let v2668 : US57 = match v2652 with Ok x -> v2665 x | Error x -> v2666 x
            let v2999 : US58 =
                match v2668 with
                | US57_0(v2671) -> (* Ok *)
                    match v2671 with
                    | US14_0(v2672) -> (* Some *)
                        let v2673 : string = "fable_library_rust::String_::fromString($0)"
                        let v2674 : string = Fable.Core.RustInterop.emitRustExpr v2672 v2673 
                        let v2675 : string = method41(v2674)
                        (* run_target_args'
                        let v2680 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2681 : string = "&*$0"
                        let v2682 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2675 v2681 
                        let _run_target_args'_v2680 = v2682 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2683 : string = "&*$0"
                        let v2684 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2675 v2683 
                        let _run_target_args'_v2680 = v2684 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2685 : string = "&*$0"
                        let v2686 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2675 v2685 
                        let _run_target_args'_v2680 = v2686 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2688 : Ref<Str> = v2675 |> unbox<Ref<Str>>
                        let _run_target_args'_v2680 = v2688 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2692 : Ref<Str> = v2675 |> unbox<Ref<Str>>
                        let _run_target_args'_v2680 = v2692 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2696 : Ref<Str> = v2675 |> unbox<Ref<Str>>
                        let _run_target_args'_v2680 = v2696 
                        #endif
#else
                        let v2700 : Ref<Str> = v2675 |> unbox<Ref<Str>>
                        let _run_target_args'_v2680 = v2700 
                        #endif
                        let v2703 : Ref<Str> = _run_target_args'_v2680 
                        let v2709 : string = "serde_json::from_str(&$0)"
                        let v2710 : Result<crate_model_near_rpc_RpcResponse, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v2703 v2709 
                        let v2711 : (serde_json_Error -> std_string_String) = method42()
                        (* run_target_args'
                        let v2713 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2714 : string = "$0.map_err(|x| $1(x))"
                        let v2715 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2710, v2711) v2714 
                        let _run_target_args'_v2713 = v2715 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2716 : string = "$0.map_err(|x| $1(x))"
                        let v2717 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2710, v2711) v2716 
                        let _run_target_args'_v2713 = v2717 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2718 : string = "$0.map_err(|x| $1(x))"
                        let v2719 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2710, v2711) v2718 
                        let _run_target_args'_v2713 = v2719 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2720 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v2710 with Ok x -> Ok x | Error x -> Error (v2711 x)
                        let _run_target_args'_v2713 = v2720 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2721 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v2710 with Ok x -> Ok x | Error x -> Error (v2711 x)
                        let _run_target_args'_v2713 = v2721 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2722 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v2710 with Ok x -> Ok x | Error x -> Error (v2711 x)
                        let _run_target_args'_v2713 = v2722 
                        #endif
#else
                        let v2723 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v2710 with Ok x -> Ok x | Error x -> Error (v2711 x)
                        let _run_target_args'_v2713 = v2723 
                        #endif
                        let v2724 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = _run_target_args'_v2713 
                        let v2727 : (crate_model_near_rpc_RpcResponse -> US60) = method170()
                        let v2728 : (std_string_String -> US60) = method171()
                        let v2730 : US60 = match v2724 with Ok x -> v2727 x | Error x -> v2728 x
                        let v2983 : US61 =
                            match v2730 with
                            | US60_1(v2980) -> (* Error *)
                                US61_1(v2980)
                            | US60_0(v2733) -> (* Ok *)
                                let v2734 : string = "$0.jsonrpc"
                                let v2735 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2733 v2734 
                                let v2736 : string = "$0.result"
                                let v2737 : crate_model_near_rpc_TransactionStatus option = Fable.Core.RustInterop.emitRustExpr v2733 v2736 
                                let v2740 : (crate_model_near_rpc_TransactionStatus -> struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) []))) = method150()
                                let v2741 : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option = v2737 |> Option.map v2740 
                                let v2929 : string = "$0.error"
                                let v2930 : crate_model_near_rpc_RpcError option = Fable.Core.RustInterop.emitRustExpr v2733 v2929 
                                let v2933 : (crate_model_near_rpc_RpcError -> struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String)) = method157()
                                let v2934 : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option = v2930 |> Option.map v2933 
                                let v2977 : string = "$0.id"
                                let v2978 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v2733 v2977 
                                US61_0(v2735, v2741, v2934, v2978)
                        match v2983 with
                        | US61_1(v2990) -> (* Error *)
                            US58_1(v2990)
                        | US61_0(v2984, v2985, v2986, v2987) -> (* Ok *)
                            let v2988 : US59 = US59_0(v2984, v2985, v2986, v2987)
                            US58_0(v2988)
                    | _ ->
                        let v2994 : US59 = US59_1
                        US58_0(v2994)
                | _ ->
                    let v2997 : US59 = US59_1
                    US58_0(v2997)
            let v3011 : Result<US59, std_string_String> =
                match v2999 with
                | US58_1(v3005) -> (* Error *)
                    let v3007 : Result<US59, std_string_String> = Error v3005 
                    v3007
                | US58_0(v3000) -> (* Ok *)
                    let v3002 : Result<US59, std_string_String> = Ok v3000 
                    v3002
            let v3013 : string = $"%A{v3011}"
            let v3016 : string = "dice_view.render (x) / roll_action new_arc_action / result2 / result: " + string v3013 + ""
            let v3017 : int64 = 200L
            let v3018 : string = method8(v3017, v3016)
            let v3019 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3020 : bool = Fable.Core.RustInterop.emitRustExpr v3018 v3019 
            let v3021 : string = v52 + v53 
            let x = v3011 //
            let v3022 : _ = x
            let v3023 : unit = ()
            (* run_target_args'
            let v3024 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3025 : string = $"true; let _fix_closure_v3023 = $0"
            let v3026 : bool = Fable.Core.RustInterop.emitRustExpr v3022 v3025 
            let _run_target_args'_v3024 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3027 : string = $"true; let _fix_closure_v3023 = $0"
            let v3028 : bool = Fable.Core.RustInterop.emitRustExpr v3022 v3027 
            let _run_target_args'_v3024 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3029 : string = $"true; let _fix_closure_v3023 = $0"
            let v3030 : bool = Fable.Core.RustInterop.emitRustExpr v3022 v3029 
            let _run_target_args'_v3024 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v3024 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v3024 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v3024 = false 
            #endif
#else
            let _run_target_args'_v3024 = false 
            #endif
            let v3031 : bool = _run_target_args'_v3024 
            let v3033 : string = $"true; _fix_closure_v3023 " + v3021 + "); " + v52 + " // rust.fix_closure'"
            let v3034 : bool = Fable.Core.RustInterop.emitRustExpr () v3033 
            let v3035 : string = "__future_init"
            let v3036 : _ = Fable.Core.RustInterop.emitRustExpr () v3035 
            let v3037 : string = "v3036"
            let v3038 : std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v3037 
            let func1_from_result = v3038 //
            let v3039 : _ = func1_from_result
            let v3040 : string = $"true; $0 /*"
            let v3041 : bool = Fable.Core.RustInterop.emitRustExpr v3039 v3040 
            let v3042 : string = $"*/ }}); //"
            let v3043 : bool = Fable.Core.RustInterop.emitRustExpr () v3042 
            let v3044 : string = $"_func1_from_v2174"
            let v3045 : Func0<Heap6, std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v3044 
            let v3046 : string = "leptos::prelude::ArcAction::new(move |value: &std::sync::Arc<Heap6>| $0(value.clone()))"
            let v3047 : (Heap6 -> std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>) = closure141(v3045)
            let v3048 : leptos_prelude_ArcAction<Heap6, Result<US59, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v3047 v3046 
            let v3049 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3050 : (unit -> Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>) = closure142(v3048)
            let v3051 : leptos_prelude_ArcMemo<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v3050 v3049 
            let v3052 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3053 : (unit -> string option) = closure147(v3051)
            let v3054 : leptos_prelude_ArcMemo<string option> = Fable.Core.RustInterop.emitRustExpr v3053 v3052 
            let v3055 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3056 : (unit -> US31) = closure152(v2124)
            let v3057 : leptos_prelude_ArcMemo<US31> = Fable.Core.RustInterop.emitRustExpr v3056 v3055 
            let v3058 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3059 : (unit -> Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))>) = closure153(v2124)
            let v3060 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))>> = Fable.Core.RustInterop.emitRustExpr v3059 v3058 
            let v3061 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3062 : (unit -> Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>) = closure158(v3060)
            let v3063 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> = Fable.Core.RustInterop.emitRustExpr v3062 v3061 
            let v3064 : string = "vec![" + v52 + "]"
            let v3065 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3064 
            let v3066 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3067 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3065 v3066 
            let v3068 : string = "class=\"flex flex-col [position:relative]\""
            let v3069 : string = " " + v3068 + v52 + ""
            let v3070 : string = "$0"
            let v3071 : (unit -> string) = closure161()
            let v3072 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3071 v3070 
            let v3073 : string = "$0"
            let v3074 : (unit -> bool) = closure162()
            let v3075 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v3074 v3073 
            let v3076 : string = "class=\"[position:absolute] [right:0] [top:0]\""
            let v3077 : string = " " + v3076 + v52 + ""
            let v3078 : string = "v3067"
            let v3079 : string = v3078 + v52 
            let v3080 : string = v3079 + v52 
            let v3081 : string = "vec![" + v3080 + "]"
            let v3082 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3081 
            let v3083 : string = "leptos::prelude::Fragment::new($0)"
            let v3084 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3082 v3083 
            let v3085 : string = "leptos::prelude::AnyView::from($0)"
            let v3086 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3084 v3085 
            let v3087 : string = "div"
            let v3088 : string = "<" + v3087 + " " + v3077 + ">move || { v3086 }</" + v3087 + ">"
            let v3089 : string = "leptos::prelude::view! { " + v3088 + " }"
            let v3090 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3089 
            let v3091 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3090 |> unbox
            let v3092 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3093 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3091 v3092 
            let v3094 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v3072(())"
            let v3095 : string = "open=move || v3075(())"
            let v3096 : string = " " + v3094 + v52 + ""
            let v3097 : string = " " + v3095 + v3096 + ""
            let v3098 : string = "$0"
            let v3099 : (unit -> string) = closure163()
            let v3100 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3099 v3098 
            let v3101 : string = "$0"
            let v3102 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure164()
            let v3103 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v3102 v3101 
            let v3104 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v3103(()) + \" \" + &v3100(())"
            let v3105 : string = " " + v3104 + v52 + ""
            let v3106 : string = "class=\"flex items-center gap-2\""
            let v3107 : string = " " + v3106 + v52 + ""
            let v3108 : (unit -> string) = method187()
            let v3109 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
            let v3110 : string = " " + v3109 + v52 + ""
            let v3111 : string = v3108 ()
            (* run_target_args'
            let v3116 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3117 : string = "&*$0"
            let v3118 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3111 v3117 
            let _run_target_args'_v3116 = v3118 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3119 : string = "&*$0"
            let v3120 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3111 v3119 
            let _run_target_args'_v3116 = v3120 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3121 : string = "&*$0"
            let v3122 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3111 v3121 
            let _run_target_args'_v3116 = v3122 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3124 : Ref<Str> = v3111 |> unbox<Ref<Str>>
            let _run_target_args'_v3116 = v3124 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3128 : Ref<Str> = v3111 |> unbox<Ref<Str>>
            let _run_target_args'_v3116 = v3128 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3132 : Ref<Str> = v3111 |> unbox<Ref<Str>>
            let _run_target_args'_v3116 = v3132 
            #endif
#else
            let v3136 : Ref<Str> = v3111 |> unbox<Ref<Str>>
            let _run_target_args'_v3116 = v3136 
            #endif
            let v3139 : Ref<Str> = _run_target_args'_v3116 
            (* run_target_args'
            let v3149 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3150 : string = "String::from($0)"
            let v3151 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3139 v3150 
            let _run_target_args'_v3149 = v3151 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3152 : string = "String::from($0)"
            let v3153 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3139 v3152 
            let _run_target_args'_v3149 = v3153 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3154 : string = "String::from($0)"
            let v3155 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3139 v3154 
            let _run_target_args'_v3149 = v3155 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3157 : std_string_String = v3139 |> unbox<std_string_String>
            let _run_target_args'_v3149 = v3157 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3161 : std_string_String = v3139 |> unbox<std_string_String>
            let _run_target_args'_v3149 = v3161 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3165 : std_string_String = v3139 |> unbox<std_string_String>
            let _run_target_args'_v3149 = v3165 
            #endif
#else
            let v3169 : std_string_String = v3139 |> unbox<std_string_String>
            let _run_target_args'_v3149 = v3169 
            #endif
            let v3172 : std_string_String = _run_target_args'_v3149 
            let v3178 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v3179 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3172 v3178 
            let v3180 : string = "v3179"
            let v3181 : string = v3180 + v52 
            let v3182 : string = v3181 + v52 
            let v3183 : string = "vec![" + v3182 + "]"
            let v3184 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3183 
            let v3185 : string = "leptos::prelude::Fragment::new($0)"
            let v3186 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3184 v3185 
            let v3187 : string = "leptos::prelude::AnyView::from($0)"
            let v3188 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3186 v3187 
            let v3189 : string = "span"
            let v3190 : string = "<" + v3189 + " " + v3110 + ">move || { v3188 }</" + v3189 + ">"
            let v3191 : string = "leptos::prelude::view! { " + v3190 + " }"
            let v3192 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3191 
            let v3193 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v3192 |> unbox
            let v3194 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3195 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3193 v3194 
            let v3196 : string = "v3195"
            let v3197 : string = v3196 + v52 
            let v3198 : string = v3197 + v52 
            let v3199 : string = "vec![" + v3198 + "]"
            let v3200 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3199 
            let v3201 : string = "leptos::prelude::Fragment::new($0)"
            let v3202 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3200 v3201 
            let v3203 : string = "leptos::prelude::AnyView::from($0)"
            let v3204 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3202 v3203 
            let v3205 : string = "<" + v3087 + " " + v3107 + ">move || { v3204 }</" + v3087 + ">"
            let v3206 : string = "leptos::prelude::view! { " + v3205 + " }"
            let v3207 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3206 
            let v3208 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3207 |> unbox
            let v3209 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3210 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3208 v3209 
            let v3211 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
            let v3212 : string = " " + v3211 + v52 + ""
            let v3213 : string = "$0"
            let v3214 : (unit -> string) = closure166()
            let v3215 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3214 v3213 
            let v3216 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v3217 : string = "viewBox=\"0 0 20 20\""
            let v3218 : string = "fill=\"currentColor\""
            let v3219 : string = "class=move || \" \".to_owned() + &v3215(())"
            let v3220 : string = " " + v3216 + v52 + ""
            let v3221 : string = " " + v3217 + v3220 + ""
            let v3222 : string = " " + v3218 + v3221 + ""
            let v3223 : string = " " + v3219 + v3222 + ""
            let v3224 : string = "fill-rule=\"evenodd\""
            let v3225 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
            let v3226 : string = "clip-rule=\"evenodd\""
            let v3227 : string = " " + v3224 + v52 + ""
            let v3228 : string = " " + v3225 + v3227 + ""
            let v3229 : string = " " + v3226 + v3228 + ""
            let v3230 : string = "vec![" + v52 + "]"
            let v3231 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3230 
            let v3232 : string = "leptos::prelude::Fragment::new($0)"
            let v3233 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3231 v3232 
            let v3234 : string = "leptos::prelude::AnyView::from($0)"
            let v3235 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3233 v3234 
            let v3236 : string = "path"
            let v3237 : string = "<" + v3236 + " " + v3229 + ">move || { v3235 }</" + v3236 + ">"
            let v3238 : string = "leptos::prelude::view! { " + v3237 + " }"
            let v3239 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3238 
            let v3240 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v3239 |> unbox
            let v3241 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3242 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3240 v3241 
            let v3243 : string = "v3242"
            let v3244 : string = v3243 + v52 
            let v3245 : string = v3244 + v52 
            let v3246 : string = "vec![" + v3245 + "]"
            let v3247 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3246 
            let v3248 : string = "leptos::prelude::Fragment::new($0)"
            let v3249 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3247 v3248 
            let v3250 : string = "leptos::prelude::AnyView::from($0)"
            let v3251 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3249 v3250 
            let v3252 : string = "svg"
            let v3253 : string = "<" + v3252 + " " + v3223 + ">move || { v3251 }</" + v3252 + ">"
            let v3254 : string = "leptos::prelude::view! { " + v3253 + " }"
            let v3255 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3254 
            let v3256 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v3255 |> unbox
            let v3257 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3258 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3256 v3257 
            let v3259 : string = "v3258"
            let v3260 : string = v3259 + v52 
            let v3261 : string = v3260 + v52 
            let v3262 : string = "vec![" + v3261 + "]"
            let v3263 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3262 
            let v3264 : string = "leptos::prelude::Fragment::new($0)"
            let v3265 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3263 v3264 
            let v3266 : string = "leptos::prelude::AnyView::from($0)"
            let v3267 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3265 v3266 
            let v3268 : string = "<" + v3189 + " " + v3212 + ">move || { v3267 }</" + v3189 + ">"
            let v3269 : string = "leptos::prelude::view! { " + v3268 + " }"
            let v3270 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3269 
            let v3271 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v3270 |> unbox
            let v3272 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3273 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3271 v3272 
            let v3274 : string = "v3273"
            let v3275 : string = v3274 + v52 
            let v3276 : string = v3275 + v52 
            let v3277 : string = "v3210"
            let v3278 : string = ", "
            let v3279 : string = v3277 + v3278 
            let v3280 : string = v3279 + v3276 
            let v3281 : string = "vec![" + v3280 + "]"
            let v3282 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3281 
            let v3283 : string = "leptos::prelude::Fragment::new($0)"
            let v3284 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3282 v3283 
            let v3285 : string = "leptos::prelude::AnyView::from($0)"
            let v3286 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3284 v3285 
            let v3287 : string = "summary"
            let v3288 : string = "<" + v3287 + " " + v3105 + ">move || { v3286 }</" + v3287 + ">"
            let v3289 : string = "leptos::prelude::view! { " + v3288 + " }"
            let v3290 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3289 
            let v3291 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v3290 |> unbox
            let v3292 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3293 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3291 v3292 
            let v3294 : string = "class=\"flex flex-1 flex-col\""
            let v3295 : string = " " + v3294 + v52 + ""
            let v3296 : string = "Func0::new(move || $0())"
            let v3297 : (unit -> leptos_dom_Fragment) = closure167(v2124, v3048, v3054, v3057, v3063)
            let v3298 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v3297 v3296 
            let v3299 : Func0<leptos_dom_Fragment> = method195(v3298)
            let v3300 : string = "(move || v3299())()"
            let v3301 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v3300 
            let v3302 : string = "leptos::prelude::AnyView::from($0)"
            let v3303 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3301 v3302 
            let v3304 : string = "<" + v3087 + " " + v3295 + ">move || { v3303 }</" + v3087 + ">"
            let v3305 : string = "leptos::prelude::view! { " + v3304 + " }"
            let v3306 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3305 
            let v3307 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3306 |> unbox
            let v3308 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3309 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3307 v3308 
            let v3310 : string = "v3309"
            let v3311 : string = v3310 + v52 
            let v3312 : string = v3311 + v52 
            let v3313 : string = "v3293"
            let v3314 : string = v3313 + v3278 
            let v3315 : string = v3314 + v3312 
            let v3316 : string = "vec![" + v3315 + "]"
            let v3317 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3316 
            let v3318 : string = "leptos::prelude::Fragment::new($0)"
            let v3319 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3317 v3318 
            let v3320 : string = "leptos::prelude::AnyView::from($0)"
            let v3321 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3319 v3320 
            let v3322 : string = "details"
            let v3323 : string = "<" + v3322 + " " + v3097 + ">move || { v3321 }</" + v3322 + ">"
            let v3324 : string = "leptos::prelude::view! { " + v3323 + " }"
            let v3325 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3324 
            let v3326 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v3325 |> unbox
            let v3327 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3328 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3326 v3327 
            let v3329 : string = "v3328"
            let v3330 : string = v3329 + v52 
            let v3331 : string = v3330 + v52 
            let v3332 : string = "v3093"
            let v3333 : string = v3332 + v3278 
            let v3334 : string = v3333 + v3331 
            let v3335 : string = "vec![" + v3334 + "]"
            let v3336 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3335 
            let v3337 : string = "leptos::prelude::Fragment::new($0)"
            let v3338 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3336 v3337 
            let v3339 : string = "leptos::prelude::AnyView::from($0)"
            let v3340 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3338 v3339 
            let v3341 : string = "<" + v3087 + " " + v3069 + ">move || { v3340 }</" + v3087 + ">"
            let v3342 : string = "leptos::prelude::view! { " + v3341 + " }"
            let v3343 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3342 
            let v3344 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3343 |> unbox
            let v3345 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3346 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3344 v3345 
            let v3347 : string = "vec![" + v52 + "]"
            let v3348 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3347 
            let v3349 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3350 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3348 v3349 
            let v3351 : string = "class=\"flex flex-col [position:relative]\""
            let v3352 : string = " " + v3351 + v52 + ""
            let v3353 : string = "$0"
            let v3354 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3071 v3353 
            let v3355 : string = "$0"
            let v3356 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v3074 v3355 
            let v3357 : string = "class=\"[position:absolute] [right:0] [top:0]\""
            let v3358 : string = " " + v3357 + v52 + ""
            let v3359 : string = "v3350"
            let v3360 : string = v3359 + v52 
            let v3361 : string = v3360 + v52 
            let v3362 : string = "vec![" + v3361 + "]"
            let v3363 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3362 
            let v3364 : string = "leptos::prelude::Fragment::new($0)"
            let v3365 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3363 v3364 
            let v3366 : string = "leptos::prelude::AnyView::from($0)"
            let v3367 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3365 v3366 
            let v3368 : string = "<" + v3087 + " " + v3358 + ">move || { v3367 }</" + v3087 + ">"
            let v3369 : string = "leptos::prelude::view! { " + v3368 + " }"
            let v3370 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3369 
            let v3371 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3370 |> unbox
            let v3372 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3373 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3371 v3372 
            let v3374 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v3354(())"
            let v3375 : string = "open=move || v3356(())"
            let v3376 : string = " " + v3374 + v52 + ""
            let v3377 : string = " " + v3375 + v3376 + ""
            let v3378 : string = "$0"
            let v3379 : (unit -> string) = closure183()
            let v3380 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3379 v3378 
            let v3381 : string = "$0"
            let v3382 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure184()
            let v3383 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v3382 v3381 
            let v3384 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v3383(()) + \" \" + &v3380(())"
            let v3385 : string = " " + v3384 + v52 + ""
            let v3386 : string = "class=\"flex items-center gap-2\""
            let v3387 : string = " " + v3386 + v52 + ""
            let v3388 : (unit -> string) = method198()
            let v3389 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
            let v3390 : string = " " + v3389 + v52 + ""
            let v3391 : string = v3388 ()
            (* run_target_args'
            let v3396 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3397 : string = "&*$0"
            let v3398 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3391 v3397 
            let _run_target_args'_v3396 = v3398 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3399 : string = "&*$0"
            let v3400 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3391 v3399 
            let _run_target_args'_v3396 = v3400 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3401 : string = "&*$0"
            let v3402 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3391 v3401 
            let _run_target_args'_v3396 = v3402 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3404 : Ref<Str> = v3391 |> unbox<Ref<Str>>
            let _run_target_args'_v3396 = v3404 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3408 : Ref<Str> = v3391 |> unbox<Ref<Str>>
            let _run_target_args'_v3396 = v3408 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3412 : Ref<Str> = v3391 |> unbox<Ref<Str>>
            let _run_target_args'_v3396 = v3412 
            #endif
#else
            let v3416 : Ref<Str> = v3391 |> unbox<Ref<Str>>
            let _run_target_args'_v3396 = v3416 
            #endif
            let v3419 : Ref<Str> = _run_target_args'_v3396 
            (* run_target_args'
            let v3429 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3430 : string = "String::from($0)"
            let v3431 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3419 v3430 
            let _run_target_args'_v3429 = v3431 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3432 : string = "String::from($0)"
            let v3433 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3419 v3432 
            let _run_target_args'_v3429 = v3433 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3434 : string = "String::from($0)"
            let v3435 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3419 v3434 
            let _run_target_args'_v3429 = v3435 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3437 : std_string_String = v3419 |> unbox<std_string_String>
            let _run_target_args'_v3429 = v3437 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3441 : std_string_String = v3419 |> unbox<std_string_String>
            let _run_target_args'_v3429 = v3441 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3445 : std_string_String = v3419 |> unbox<std_string_String>
            let _run_target_args'_v3429 = v3445 
            #endif
#else
            let v3449 : std_string_String = v3419 |> unbox<std_string_String>
            let _run_target_args'_v3429 = v3449 
            #endif
            let v3452 : std_string_String = _run_target_args'_v3429 
            let v3458 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v3459 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3452 v3458 
            let v3460 : string = "v3459"
            let v3461 : string = v3460 + v52 
            let v3462 : string = v3461 + v52 
            let v3463 : string = "vec![" + v3462 + "]"
            let v3464 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3463 
            let v3465 : string = "leptos::prelude::Fragment::new($0)"
            let v3466 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3464 v3465 
            let v3467 : string = "leptos::prelude::AnyView::from($0)"
            let v3468 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3466 v3467 
            let v3469 : string = "<" + v3189 + " " + v3390 + ">move || { v3468 }</" + v3189 + ">"
            let v3470 : string = "leptos::prelude::view! { " + v3469 + " }"
            let v3471 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3470 
            let v3472 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v3471 |> unbox
            let v3473 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3474 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3472 v3473 
            let v3475 : string = "v3474"
            let v3476 : string = v3475 + v52 
            let v3477 : string = v3476 + v52 
            let v3478 : string = "vec![" + v3477 + "]"
            let v3479 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3478 
            let v3480 : string = "leptos::prelude::Fragment::new($0)"
            let v3481 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3479 v3480 
            let v3482 : string = "leptos::prelude::AnyView::from($0)"
            let v3483 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3481 v3482 
            let v3484 : string = "<" + v3087 + " " + v3387 + ">move || { v3483 }</" + v3087 + ">"
            let v3485 : string = "leptos::prelude::view! { " + v3484 + " }"
            let v3486 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3485 
            let v3487 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3486 |> unbox
            let v3488 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3489 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3487 v3488 
            let v3490 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
            let v3491 : string = " " + v3490 + v52 + ""
            let v3492 : string = "$0"
            let v3493 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3214 v3492 
            let v3494 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v3495 : string = "viewBox=\"0 0 20 20\""
            let v3496 : string = "fill=\"currentColor\""
            let v3497 : string = "class=move || \" \".to_owned() + &v3493(())"
            let v3498 : string = " " + v3494 + v52 + ""
            let v3499 : string = " " + v3495 + v3498 + ""
            let v3500 : string = " " + v3496 + v3499 + ""
            let v3501 : string = " " + v3497 + v3500 + ""
            let v3502 : string = "fill-rule=\"evenodd\""
            let v3503 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
            let v3504 : string = "clip-rule=\"evenodd\""
            let v3505 : string = " " + v3502 + v52 + ""
            let v3506 : string = " " + v3503 + v3505 + ""
            let v3507 : string = " " + v3504 + v3506 + ""
            let v3508 : string = "vec![" + v52 + "]"
            let v3509 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3508 
            let v3510 : string = "leptos::prelude::Fragment::new($0)"
            let v3511 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3509 v3510 
            let v3512 : string = "leptos::prelude::AnyView::from($0)"
            let v3513 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3511 v3512 
            let v3514 : string = "<" + v3236 + " " + v3507 + ">move || { v3513 }</" + v3236 + ">"
            let v3515 : string = "leptos::prelude::view! { " + v3514 + " }"
            let v3516 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3515 
            let v3517 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v3516 |> unbox
            let v3518 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3519 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3517 v3518 
            let v3520 : string = "v3519"
            let v3521 : string = v3520 + v52 
            let v3522 : string = v3521 + v52 
            let v3523 : string = "vec![" + v3522 + "]"
            let v3524 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3523 
            let v3525 : string = "leptos::prelude::Fragment::new($0)"
            let v3526 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3524 v3525 
            let v3527 : string = "leptos::prelude::AnyView::from($0)"
            let v3528 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3526 v3527 
            let v3529 : string = "<" + v3252 + " " + v3501 + ">move || { v3528 }</" + v3252 + ">"
            let v3530 : string = "leptos::prelude::view! { " + v3529 + " }"
            let v3531 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3530 
            let v3532 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v3531 |> unbox
            let v3533 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3534 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3532 v3533 
            let v3535 : string = "v3534"
            let v3536 : string = v3535 + v52 
            let v3537 : string = v3536 + v52 
            let v3538 : string = "vec![" + v3537 + "]"
            let v3539 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3538 
            let v3540 : string = "leptos::prelude::Fragment::new($0)"
            let v3541 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3539 v3540 
            let v3542 : string = "leptos::prelude::AnyView::from($0)"
            let v3543 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3541 v3542 
            let v3544 : string = "<" + v3189 + " " + v3491 + ">move || { v3543 }</" + v3189 + ">"
            let v3545 : string = "leptos::prelude::view! { " + v3544 + " }"
            let v3546 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3545 
            let v3547 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v3546 |> unbox
            let v3548 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3549 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3547 v3548 
            let v3550 : string = "v3549"
            let v3551 : string = v3550 + v52 
            let v3552 : string = v3551 + v52 
            let v3553 : string = "v3489"
            let v3554 : string = v3553 + v3278 
            let v3555 : string = v3554 + v3552 
            let v3556 : string = "vec![" + v3555 + "]"
            let v3557 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3556 
            let v3558 : string = "leptos::prelude::Fragment::new($0)"
            let v3559 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3557 v3558 
            let v3560 : string = "leptos::prelude::AnyView::from($0)"
            let v3561 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3559 v3560 
            let v3562 : string = "<" + v3287 + " " + v3385 + ">move || { v3561 }</" + v3287 + ">"
            let v3563 : string = "leptos::prelude::view! { " + v3562 + " }"
            let v3564 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3563 
            let v3565 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v3564 |> unbox
            let v3566 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3567 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3565 v3566 
            let v3568 : string = "class=\"flex flex-1 flex-col\""
            let v3569 : string = " " + v3568 + v52 + ""
            let v3570 : string = "Func0::new(move || $0())"
            let v3571 : (unit -> leptos_dom_Fragment) = closure186(v2164, v2156, v2136)
            let v3572 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v3571 v3570 
            let v3573 : Func0<leptos_dom_Fragment> = method195(v3572)
            let v3574 : string = "(move || v3573())()"
            let v3575 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v3574 
            let v3576 : string = "leptos::prelude::AnyView::from($0)"
            let v3577 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3575 v3576 
            let v3578 : string = "<" + v3087 + " " + v3569 + ">move || { v3577 }</" + v3087 + ">"
            let v3579 : string = "leptos::prelude::view! { " + v3578 + " }"
            let v3580 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3579 
            let v3581 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3580 |> unbox
            let v3582 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3583 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3581 v3582 
            let v3584 : string = "v3583"
            let v3585 : string = v3584 + v52 
            let v3586 : string = v3585 + v52 
            let v3587 : string = "v3567"
            let v3588 : string = v3587 + v3278 
            let v3589 : string = v3588 + v3586 
            let v3590 : string = "vec![" + v3589 + "]"
            let v3591 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3590 
            let v3592 : string = "leptos::prelude::Fragment::new($0)"
            let v3593 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3591 v3592 
            let v3594 : string = "leptos::prelude::AnyView::from($0)"
            let v3595 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3593 v3594 
            let v3596 : string = "<" + v3322 + " " + v3377 + ">move || { v3595 }</" + v3322 + ">"
            let v3597 : string = "leptos::prelude::view! { " + v3596 + " }"
            let v3598 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3597 
            let v3599 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v3598 |> unbox
            let v3600 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3601 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3599 v3600 
            let v3602 : string = "v3601"
            let v3603 : string = v3602 + v52 
            let v3604 : string = v3603 + v52 
            let v3605 : string = "v3373"
            let v3606 : string = v3605 + v3278 
            let v3607 : string = v3606 + v3604 
            let v3608 : string = "vec![" + v3607 + "]"
            let v3609 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3608 
            let v3610 : string = "leptos::prelude::Fragment::new($0)"
            let v3611 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3609 v3610 
            let v3612 : string = "leptos::prelude::AnyView::from($0)"
            let v3613 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3611 v3612 
            let v3614 : string = "<" + v3087 + " " + v3352 + ">move || { v3613 }</" + v3087 + ">"
            let v3615 : string = "leptos::prelude::view! { " + v3614 + " }"
            let v3616 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3615 
            let v3617 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3616 |> unbox
            let v3618 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3619 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3617 v3618 
            let v3620 : string = "v3619"
            let v3621 : string = v3620 + v52 
            let v3622 : string = v3621 + v52 
            let v3623 : string = "v3346"
            let v3624 : string = v3623 + v3278 
            let v3625 : string = v3624 + v3622 
            let v3626 : string = "vec![" + v3625 + "]"
            let v3627 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3626 
            let v3628 : string = "leptos::prelude::Fragment::new($0)"
            let v3629 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3627 v3628 
            US22_0(v3629)
        | US18_2 -> (* Lists *)
            let v3631 : string = "lists_view.render ()"
            let v3632 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3633 : bool = Fable.Core.RustInterop.emitRustExpr v3631 v3632 
            let v3634 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
            let v3635 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v3634 
            let v3636 : string = "$0.unwrap()"
            let v3637 : Heap2 = Fable.Core.RustInterop.emitRustExpr v3635 v3636 
            let v3638 : string = "???"
            (* run_target_args'
            let v3643 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3644 : string = "&*$0"
            let v3645 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3638 v3644 
            let _run_target_args'_v3643 = v3645 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3646 : string = "&*$0"
            let v3647 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3638 v3646 
            let _run_target_args'_v3643 = v3647 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3648 : string = "&*$0"
            let v3649 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3638 v3648 
            let _run_target_args'_v3643 = v3649 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3651 : Ref<Str> = v3638 |> unbox<Ref<Str>>
            let _run_target_args'_v3643 = v3651 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3655 : Ref<Str> = v3638 |> unbox<Ref<Str>>
            let _run_target_args'_v3643 = v3655 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3659 : Ref<Str> = v3638 |> unbox<Ref<Str>>
            let _run_target_args'_v3643 = v3659 
            #endif
#else
            let v3663 : Ref<Str> = v3638 |> unbox<Ref<Str>>
            let _run_target_args'_v3643 = v3663 
            #endif
            let v3666 : Ref<Str> = _run_target_args'_v3643 
            (* run_target_args'
            let v3676 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3677 : string = "String::from($0)"
            let v3678 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3666 v3677 
            let _run_target_args'_v3676 = v3678 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3679 : string = "String::from($0)"
            let v3680 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3666 v3679 
            let _run_target_args'_v3676 = v3680 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3681 : string = "String::from($0)"
            let v3682 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3666 v3681 
            let _run_target_args'_v3676 = v3682 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3684 : std_string_String = v3666 |> unbox<std_string_String>
            let _run_target_args'_v3676 = v3684 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3688 : std_string_String = v3666 |> unbox<std_string_String>
            let _run_target_args'_v3676 = v3688 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3692 : std_string_String = v3666 |> unbox<std_string_String>
            let _run_target_args'_v3676 = v3692 
            #endif
#else
            let v3696 : std_string_String = v3666 |> unbox<std_string_String>
            let _run_target_args'_v3676 = v3696 
            #endif
            let v3699 : std_string_String = _run_target_args'_v3676 
            let v3705 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v3706 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3699 v3705 
            let v3707 : string = "v3706"
            let v3708 : string = v3707 + v52 
            let v3709 : string = v3708 + v52 
            let v3710 : string = "vec![" + v3709 + "]"
            let v3711 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3710 
            let v3712 : string = "leptos::prelude::Fragment::new($0)"
            let v3713 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3711 v3712 
            US22_0(v3713)
        | US18_4 -> (* Settings *)
            let v4450 : string = "settings_view.render ()"
            let v4451 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v4452 : bool = Fable.Core.RustInterop.emitRustExpr v4450 v4451 
            let v4453 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
            let v4454 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v4453 
            let v4455 : string = "$0.unwrap()"
            let v4456 : Heap2 = Fable.Core.RustInterop.emitRustExpr v4454 v4455 
            let v4457 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v4458 : (unit -> Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>) = closure192(v4456)
            let v4459 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>> = Fable.Core.RustInterop.emitRustExpr v4458 v4457 
            let v4460 : string = $"leptos::prelude::signal($0)"
            let struct (v4461 : leptos_prelude_ReadSignal<int32>, v4462 : leptos_prelude_WriteSignal<int32>) = Fable.Core.RustInterop.emitRustExpr 0 v4460 
            let v4463 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v4464 : (unit -> Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>) = closure195(v4459, v4461)
            let v4465 : leptos_prelude_ArcMemo<Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>> = Fable.Core.RustInterop.emitRustExpr v4464 v4463 
            let v4466 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v4467 : (unit -> int32) = closure198(v4465)
            let v4468 : leptos_prelude_ArcMemo<int32> = Fable.Core.RustInterop.emitRustExpr v4467 v4466 
            let v4469 : unit = ()
            let v4470 : string = $"true; let _func0_from_v4469 = Func0::from(move || {{ //"
            let v4471 : bool = Fable.Core.RustInterop.emitRustExpr () v4470 
            let v4472 : leptos_prelude_ArcRwSignal<Heap1> = v4456.l0
            let v4473 : string = "Box::pin($0)"
            let v4474 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v4472 v4473 
            let v4475 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
            let v4476 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4474 v4475 
            let v4477 : leptos_prelude_ArcRwSignal<Heap0> = v4476.l3
            let v4478 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
            let v4479 : bool = Fable.Core.RustInterop.emitRustExpr v4477 v4478 
            let v4481 : TypeEmit<Heap0> = null |> unbox<TypeEmit<Heap0>>
            let v4484 : string = "*/ | { *x = $0(x.clone()) }); //"
            let v4485 : (Heap0 -> Heap0) = closure199(v4459)
            let v4486 : bool = Fable.Core.RustInterop.emitRustExpr v4485 v4484 
            let v4487 : string = $"true; leptos::prelude::WriteSignal::update(&$0, |x: &mut /*"
            let v4488 : bool = Fable.Core.RustInterop.emitRustExpr v4462 v4487 
            let v4490 : TypeEmit<int32> = null |> unbox<TypeEmit<int32>>
            let v4493 : string = "*/ | { *x = $0(x.clone()) }); //"
            let v4494 : (int32 -> int32) = closure201()
            let v4495 : bool = Fable.Core.RustInterop.emitRustExpr v4494 v4493 
            // rust.func0_from / is_unit
            let v4496 : string = $"true; /*"
            let v4497 : bool = Fable.Core.RustInterop.emitRustExpr () v4496 
            let v4498 : string = $"*/ }}); //"
            let v4499 : bool = Fable.Core.RustInterop.emitRustExpr () v4498 
            let v4500 : string = $"_func0_from_v4469"
            let v4501 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v4500 
            let v4502 : string = "$0"
            let v4503 : (unit -> string) = closure202()
            let v4504 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4503 v4502 
            let v4505 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v4506 : string = "fill=\"none\""
            let v4507 : string = "viewBox=\"0 0 24 24\""
            let v4508 : string = "stroke-width=\"1.5\""
            let v4509 : string = "stroke=\"currentColor\""
            let v4510 : string = "class=move || \" \".to_owned() + &v4504(())"
            let v4511 : string = " " + v4505 + v52 + ""
            let v4512 : string = " " + v4506 + v4511 + ""
            let v4513 : string = " " + v4507 + v4512 + ""
            let v4514 : string = " " + v4508 + v4513 + ""
            let v4515 : string = " " + v4509 + v4514 + ""
            let v4516 : string = " " + v4510 + v4515 + ""
            let v4517 : string = "stroke-linecap=\"round\""
            let v4518 : string = "stroke-linejoin=\"round\""
            let v4519 : string = "d=\"M12 6v12m6-6H6\""
            let v4520 : string = " " + v4517 + v52 + ""
            let v4521 : string = " " + v4518 + v4520 + ""
            let v4522 : string = " " + v4519 + v4521 + ""
            let v4523 : string = "vec![" + v52 + "]"
            let v4524 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4523 
            let v4525 : string = "leptos::prelude::Fragment::new($0)"
            let v4526 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4524 v4525 
            let v4527 : string = "leptos::prelude::AnyView::from($0)"
            let v4528 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4526 v4527 
            let v4529 : string = "path"
            let v4530 : string = "<" + v4529 + " " + v4522 + ">move || { v4528 }</" + v4529 + ">"
            let v4531 : string = "leptos::prelude::view! { " + v4530 + " }"
            let v4532 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4531 
            let v4533 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4532 |> unbox
            let v4534 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4535 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4533 v4534 
            let v4536 : string = "v4535"
            let v4537 : string = v4536 + v52 
            let v4538 : string = v4537 + v52 
            let v4539 : string = "vec![" + v4538 + "]"
            let v4540 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4539 
            let v4541 : string = "leptos::prelude::Fragment::new($0)"
            let v4542 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4540 v4541 
            let v4543 : string = "leptos::prelude::AnyView::from($0)"
            let v4544 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4542 v4543 
            let v4545 : string = "svg"
            let v4546 : string = "<" + v4545 + " " + v4516 + ">move || { v4544 }</" + v4545 + ">"
            let v4547 : string = "leptos::prelude::view! { " + v4546 + " }"
            let v4548 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4547 
            let v4549 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4548 |> unbox
            let v4550 : string = "on:click=move |_| v4501()"
            let v4551 : string = "aria-label=\"Add\""
            let v4552 : string = "$0"
            let v4553 : (unit -> std_string_String) = closure203()
            let v4554 : (unit -> std_string_String) = Fable.Core.RustInterop.emitRustExpr v4553 v4552 
            let v4555 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] pb-[8px] pt-[8px] px-[12px] \".to_owned() + &v4554(())"
            let v4556 : string = " " + v4555 + v52 + ""
            let v4557 : string = " " + v4550 + v4556 + ""
            let v4558 : string = " " + v4551 + v4557 + ""
            let v4559 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4560 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4549 v4559 
            let v4561 : string = "v4560"
            let v4562 : string = v4561 + v52 
            let v4563 : string = v4562 + v52 
            let v4564 : string = "vec![" + v4563 + "]"
            let v4565 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4564 
            let v4566 : string = "leptos::prelude::Fragment::new($0)"
            let v4567 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4565 v4566 
            let v4568 : string = "leptos::prelude::AnyView::from($0)"
            let v4569 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4567 v4568 
            let v4570 : string = "button"
            let v4571 : string = "<" + v4570 + " " + v4558 + ">move || { v4569 }</" + v4570 + ">"
            let v4572 : string = "leptos::prelude::view! { " + v4571 + " }"
            let v4573 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4572 
            let v4574 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Button>> = v4573 |> unbox
            let v4575 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4576 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4574 v4575 
            let v4577 : string = "vec![" + v52 + "]"
            let v4578 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4577 
            let v4579 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4580 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4578 v4579 
            let v4581 : string = "class=\"flex flex-col [position:relative]\""
            let v4582 : string = " " + v4581 + v52 + ""
            let v4583 : string = "$0"
            let v4584 : (unit -> string) = closure161()
            let v4585 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4584 v4583 
            let v4586 : string = "$0"
            let v4587 : (unit -> bool) = closure162()
            let v4588 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v4587 v4586 
            let v4589 : string = "class=\"[position:absolute] [right:0] [top:0]\""
            let v4590 : string = " " + v4589 + v52 + ""
            let v4591 : string = "v4576"
            let v4592 : string = v4591 + v52 
            let v4593 : string = v4592 + v52 
            let v4594 : string = "vec![" + v4593 + "]"
            let v4595 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4594 
            let v4596 : string = "leptos::prelude::Fragment::new($0)"
            let v4597 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4595 v4596 
            let v4598 : string = "leptos::prelude::AnyView::from($0)"
            let v4599 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4597 v4598 
            let v4600 : string = "div"
            let v4601 : string = "<" + v4600 + " " + v4590 + ">move || { v4599 }</" + v4600 + ">"
            let v4602 : string = "leptos::prelude::view! { " + v4601 + " }"
            let v4603 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4602 
            let v4604 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4603 |> unbox
            let v4605 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4606 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4604 v4605 
            let v4607 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v4585(())"
            let v4608 : string = "open=move || v4588(())"
            let v4609 : string = " " + v4607 + v52 + ""
            let v4610 : string = " " + v4608 + v4609 + ""
            let v4611 : string = "$0"
            let v4612 : (unit -> string) = closure204()
            let v4613 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4612 v4611 
            let v4614 : string = "$0"
            let v4615 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure205(v4576)
            let v4616 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v4615 v4614 
            let v4617 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v4616(()) + \" \" + &v4613(())"
            let v4618 : string = " " + v4617 + v52 + ""
            let v4619 : string = "class=\"flex items-center gap-2\""
            let v4620 : string = " " + v4619 + v52 + ""
            let v4621 : (unit -> string) = method214(v4576)
            let v4622 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
            let v4623 : string = " " + v4622 + v52 + ""
            let v4624 : string = v4621 ()
            (* run_target_args'
            let v4629 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v4630 : string = "&*$0"
            let v4631 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4624 v4630 
            let _run_target_args'_v4629 = v4631 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v4632 : string = "&*$0"
            let v4633 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4624 v4632 
            let _run_target_args'_v4629 = v4633 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v4634 : string = "&*$0"
            let v4635 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4624 v4634 
            let _run_target_args'_v4629 = v4635 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v4637 : Ref<Str> = v4624 |> unbox<Ref<Str>>
            let _run_target_args'_v4629 = v4637 
            #endif
#if FABLE_COMPILER_PYTHON
            let v4641 : Ref<Str> = v4624 |> unbox<Ref<Str>>
            let _run_target_args'_v4629 = v4641 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v4645 : Ref<Str> = v4624 |> unbox<Ref<Str>>
            let _run_target_args'_v4629 = v4645 
            #endif
#else
            let v4649 : Ref<Str> = v4624 |> unbox<Ref<Str>>
            let _run_target_args'_v4629 = v4649 
            #endif
            let v4652 : Ref<Str> = _run_target_args'_v4629 
            (* run_target_args'
            let v4662 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v4663 : string = "String::from($0)"
            let v4664 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4652 v4663 
            let _run_target_args'_v4662 = v4664 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v4665 : string = "String::from($0)"
            let v4666 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4652 v4665 
            let _run_target_args'_v4662 = v4666 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v4667 : string = "String::from($0)"
            let v4668 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4652 v4667 
            let _run_target_args'_v4662 = v4668 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v4670 : std_string_String = v4652 |> unbox<std_string_String>
            let _run_target_args'_v4662 = v4670 
            #endif
#if FABLE_COMPILER_PYTHON
            let v4674 : std_string_String = v4652 |> unbox<std_string_String>
            let _run_target_args'_v4662 = v4674 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v4678 : std_string_String = v4652 |> unbox<std_string_String>
            let _run_target_args'_v4662 = v4678 
            #endif
#else
            let v4682 : std_string_String = v4652 |> unbox<std_string_String>
            let _run_target_args'_v4662 = v4682 
            #endif
            let v4685 : std_string_String = _run_target_args'_v4662 
            let v4691 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v4692 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4685 v4691 
            let v4693 : string = "v4692"
            let v4694 : string = v4693 + v52 
            let v4695 : string = v4694 + v52 
            let v4696 : string = "vec![" + v4695 + "]"
            let v4697 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4696 
            let v4698 : string = "leptos::prelude::Fragment::new($0)"
            let v4699 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4697 v4698 
            let v4700 : string = "leptos::prelude::AnyView::from($0)"
            let v4701 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4699 v4700 
            let v4702 : string = "span"
            let v4703 : string = "<" + v4702 + " " + v4623 + ">move || { v4701 }</" + v4702 + ">"
            let v4704 : string = "leptos::prelude::view! { " + v4703 + " }"
            let v4705 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4704 
            let v4706 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4705 |> unbox
            let v4707 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4708 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4706 v4707 
            let v4709 : string = "v4708"
            let v4710 : string = v4709 + v52 
            let v4711 : string = v4710 + v52 
            let v4712 : string = "vec![" + v4711 + "]"
            let v4713 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4712 
            let v4714 : string = "leptos::prelude::Fragment::new($0)"
            let v4715 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4713 v4714 
            let v4716 : string = "leptos::prelude::AnyView::from($0)"
            let v4717 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4715 v4716 
            let v4718 : string = "<" + v4600 + " " + v4620 + ">move || { v4717 }</" + v4600 + ">"
            let v4719 : string = "leptos::prelude::view! { " + v4718 + " }"
            let v4720 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4719 
            let v4721 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4720 |> unbox
            let v4722 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4723 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4721 v4722 
            let v4724 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
            let v4725 : string = " " + v4724 + v52 + ""
            let v4726 : string = "$0"
            let v4727 : (unit -> string) = closure166()
            let v4728 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4727 v4726 
            let v4729 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v4730 : string = "viewBox=\"0 0 20 20\""
            let v4731 : string = "fill=\"currentColor\""
            let v4732 : string = "class=move || \" \".to_owned() + &v4728(())"
            let v4733 : string = " " + v4729 + v52 + ""
            let v4734 : string = " " + v4730 + v4733 + ""
            let v4735 : string = " " + v4731 + v4734 + ""
            let v4736 : string = " " + v4732 + v4735 + ""
            let v4737 : string = "fill-rule=\"evenodd\""
            let v4738 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
            let v4739 : string = "clip-rule=\"evenodd\""
            let v4740 : string = " " + v4737 + v52 + ""
            let v4741 : string = " " + v4738 + v4740 + ""
            let v4742 : string = " " + v4739 + v4741 + ""
            let v4743 : string = "vec![" + v52 + "]"
            let v4744 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4743 
            let v4745 : string = "leptos::prelude::Fragment::new($0)"
            let v4746 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4744 v4745 
            let v4747 : string = "leptos::prelude::AnyView::from($0)"
            let v4748 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4746 v4747 
            let v4749 : string = "<" + v4529 + " " + v4742 + ">move || { v4748 }</" + v4529 + ">"
            let v4750 : string = "leptos::prelude::view! { " + v4749 + " }"
            let v4751 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4750 
            let v4752 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4751 |> unbox
            let v4753 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4754 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4752 v4753 
            let v4755 : string = "v4754"
            let v4756 : string = v4755 + v52 
            let v4757 : string = v4756 + v52 
            let v4758 : string = "vec![" + v4757 + "]"
            let v4759 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4758 
            let v4760 : string = "leptos::prelude::Fragment::new($0)"
            let v4761 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4759 v4760 
            let v4762 : string = "leptos::prelude::AnyView::from($0)"
            let v4763 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4761 v4762 
            let v4764 : string = "<" + v4545 + " " + v4736 + ">move || { v4763 }</" + v4545 + ">"
            let v4765 : string = "leptos::prelude::view! { " + v4764 + " }"
            let v4766 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4765 
            let v4767 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4766 |> unbox
            let v4768 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4769 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4767 v4768 
            let v4770 : string = "v4769"
            let v4771 : string = v4770 + v52 
            let v4772 : string = v4771 + v52 
            let v4773 : string = "vec![" + v4772 + "]"
            let v4774 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4773 
            let v4775 : string = "leptos::prelude::Fragment::new($0)"
            let v4776 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4774 v4775 
            let v4777 : string = "leptos::prelude::AnyView::from($0)"
            let v4778 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4776 v4777 
            let v4779 : string = "<" + v4702 + " " + v4725 + ">move || { v4778 }</" + v4702 + ">"
            let v4780 : string = "leptos::prelude::view! { " + v4779 + " }"
            let v4781 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4780 
            let v4782 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4781 |> unbox
            let v4783 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4784 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4782 v4783 
            let v4785 : string = "v4784"
            let v4786 : string = v4785 + v52 
            let v4787 : string = v4786 + v52 
            let v4788 : string = "v4723"
            let v4789 : string = ", "
            let v4790 : string = v4788 + v4789 
            let v4791 : string = v4790 + v4787 
            let v4792 : string = "vec![" + v4791 + "]"
            let v4793 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4792 
            let v4794 : string = "leptos::prelude::Fragment::new($0)"
            let v4795 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4793 v4794 
            let v4796 : string = "leptos::prelude::AnyView::from($0)"
            let v4797 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4795 v4796 
            let v4798 : string = "summary"
            let v4799 : string = "<" + v4798 + " " + v4618 + ">move || { v4797 }</" + v4798 + ">"
            let v4800 : string = "leptos::prelude::view! { " + v4799 + " }"
            let v4801 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4800 
            let v4802 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v4801 |> unbox
            let v4803 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4804 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4802 v4803 
            let v4805 : string = "class=\"flex flex-1 flex-col\""
            let v4806 : string = " " + v4805 + v52 + ""
            let v4807 : string = "Func0::new(move || $0())"
            let v4808 : (unit -> leptos_dom_Fragment) = closure207(v4456, v4465, v4468, v4459, v4462)
            let v4809 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v4808 v4807 
            let v4810 : Func0<leptos_dom_Fragment> = method195(v4809)
            let v4811 : string = "(move || v4810())()"
            let v4812 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v4811 
            let v4813 : string = "leptos::prelude::AnyView::from($0)"
            let v4814 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4812 v4813 
            let v4815 : string = "<" + v4600 + " " + v4806 + ">move || { v4814 }</" + v4600 + ">"
            let v4816 : string = "leptos::prelude::view! { " + v4815 + " }"
            let v4817 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4816 
            let v4818 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4817 |> unbox
            let v4819 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4820 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4818 v4819 
            let v4821 : string = "v4820"
            let v4822 : string = v4821 + v52 
            let v4823 : string = v4822 + v52 
            let v4824 : string = "v4804"
            let v4825 : string = v4824 + v4789 
            let v4826 : string = v4825 + v4823 
            let v4827 : string = "vec![" + v4826 + "]"
            let v4828 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4827 
            let v4829 : string = "leptos::prelude::Fragment::new($0)"
            let v4830 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4828 v4829 
            let v4831 : string = "leptos::prelude::AnyView::from($0)"
            let v4832 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4830 v4831 
            let v4833 : string = "details"
            let v4834 : string = "<" + v4833 + " " + v4610 + ">move || { v4832 }</" + v4833 + ">"
            let v4835 : string = "leptos::prelude::view! { " + v4834 + " }"
            let v4836 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4835 
            let v4837 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v4836 |> unbox
            let v4838 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4839 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4837 v4838 
            let v4840 : string = "v4839"
            let v4841 : string = v4840 + v52 
            let v4842 : string = v4841 + v52 
            let v4843 : string = "v4606"
            let v4844 : string = v4843 + v4789 
            let v4845 : string = v4844 + v4842 
            let v4846 : string = "vec![" + v4845 + "]"
            let v4847 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4846 
            let v4848 : string = "leptos::prelude::Fragment::new($0)"
            let v4849 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4847 v4848 
            let v4850 : string = "leptos::prelude::AnyView::from($0)"
            let v4851 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4849 v4850 
            let v4852 : string = "<" + v4600 + " " + v4582 + ">move || { v4851 }</" + v4600 + ">"
            let v4853 : string = "leptos::prelude::view! { " + v4852 + " }"
            let v4854 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4853 
            let v4855 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4854 |> unbox
            let v4856 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4857 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4855 v4856 
            let v4858 : string = "vec![" + v52 + "]"
            let v4859 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4858 
            let v4860 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4861 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4859 v4860 
            let v4862 : string = "class=\"flex flex-col [position:relative]\""
            let v4863 : string = " " + v4862 + v52 + ""
            let v4864 : string = "$0"
            let v4865 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4584 v4864 
            let v4866 : string = "$0"
            let v4867 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v4587 v4866 
            let v4868 : string = "class=\"[position:absolute] [right:0] [top:0]\""
            let v4869 : string = " " + v4868 + v52 + ""
            let v4870 : string = "v4861"
            let v4871 : string = v4870 + v52 
            let v4872 : string = v4871 + v52 
            let v4873 : string = "vec![" + v4872 + "]"
            let v4874 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4873 
            let v4875 : string = "leptos::prelude::Fragment::new($0)"
            let v4876 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4874 v4875 
            let v4877 : string = "leptos::prelude::AnyView::from($0)"
            let v4878 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4876 v4877 
            let v4879 : string = "<" + v4600 + " " + v4869 + ">move || { v4878 }</" + v4600 + ">"
            let v4880 : string = "leptos::prelude::view! { " + v4879 + " }"
            let v4881 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4880 
            let v4882 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4881 |> unbox
            let v4883 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4884 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4882 v4883 
            let v4885 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v4865(())"
            let v4886 : string = "open=move || v4867(())"
            let v4887 : string = " " + v4885 + v52 + ""
            let v4888 : string = " " + v4886 + v4887 + ""
            let v4889 : string = "$0"
            let v4890 : (unit -> string) = closure223()
            let v4891 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4890 v4889 
            let v4892 : string = "$0"
            let v4893 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure224()
            let v4894 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v4893 v4892 
            let v4895 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v4894(()) + \" \" + &v4891(())"
            let v4896 : string = " " + v4895 + v52 + ""
            let v4897 : string = "class=\"flex items-center gap-2\""
            let v4898 : string = " " + v4897 + v52 + ""
            let v4899 : (unit -> string) = method228()
            let v4900 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
            let v4901 : string = " " + v4900 + v52 + ""
            let v4902 : string = v4899 ()
            (* run_target_args'
            let v4907 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v4908 : string = "&*$0"
            let v4909 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4902 v4908 
            let _run_target_args'_v4907 = v4909 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v4910 : string = "&*$0"
            let v4911 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4902 v4910 
            let _run_target_args'_v4907 = v4911 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v4912 : string = "&*$0"
            let v4913 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4902 v4912 
            let _run_target_args'_v4907 = v4913 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v4915 : Ref<Str> = v4902 |> unbox<Ref<Str>>
            let _run_target_args'_v4907 = v4915 
            #endif
#if FABLE_COMPILER_PYTHON
            let v4919 : Ref<Str> = v4902 |> unbox<Ref<Str>>
            let _run_target_args'_v4907 = v4919 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v4923 : Ref<Str> = v4902 |> unbox<Ref<Str>>
            let _run_target_args'_v4907 = v4923 
            #endif
#else
            let v4927 : Ref<Str> = v4902 |> unbox<Ref<Str>>
            let _run_target_args'_v4907 = v4927 
            #endif
            let v4930 : Ref<Str> = _run_target_args'_v4907 
            (* run_target_args'
            let v4940 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v4941 : string = "String::from($0)"
            let v4942 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4930 v4941 
            let _run_target_args'_v4940 = v4942 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v4943 : string = "String::from($0)"
            let v4944 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4930 v4943 
            let _run_target_args'_v4940 = v4944 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v4945 : string = "String::from($0)"
            let v4946 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4930 v4945 
            let _run_target_args'_v4940 = v4946 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v4948 : std_string_String = v4930 |> unbox<std_string_String>
            let _run_target_args'_v4940 = v4948 
            #endif
#if FABLE_COMPILER_PYTHON
            let v4952 : std_string_String = v4930 |> unbox<std_string_String>
            let _run_target_args'_v4940 = v4952 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v4956 : std_string_String = v4930 |> unbox<std_string_String>
            let _run_target_args'_v4940 = v4956 
            #endif
#else
            let v4960 : std_string_String = v4930 |> unbox<std_string_String>
            let _run_target_args'_v4940 = v4960 
            #endif
            let v4963 : std_string_String = _run_target_args'_v4940 
            let v4969 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v4970 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4963 v4969 
            let v4971 : string = "v4970"
            let v4972 : string = v4971 + v52 
            let v4973 : string = v4972 + v52 
            let v4974 : string = "vec![" + v4973 + "]"
            let v4975 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4974 
            let v4976 : string = "leptos::prelude::Fragment::new($0)"
            let v4977 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4975 v4976 
            let v4978 : string = "leptos::prelude::AnyView::from($0)"
            let v4979 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4977 v4978 
            let v4980 : string = "<" + v4702 + " " + v4901 + ">move || { v4979 }</" + v4702 + ">"
            let v4981 : string = "leptos::prelude::view! { " + v4980 + " }"
            let v4982 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4981 
            let v4983 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4982 |> unbox
            let v4984 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4985 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4983 v4984 
            let v4986 : string = "v4985"
            let v4987 : string = v4986 + v52 
            let v4988 : string = v4987 + v52 
            let v4989 : string = "vec![" + v4988 + "]"
            let v4990 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4989 
            let v4991 : string = "leptos::prelude::Fragment::new($0)"
            let v4992 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4990 v4991 
            let v4993 : string = "leptos::prelude::AnyView::from($0)"
            let v4994 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4992 v4993 
            let v4995 : string = "<" + v4600 + " " + v4898 + ">move || { v4994 }</" + v4600 + ">"
            let v4996 : string = "leptos::prelude::view! { " + v4995 + " }"
            let v4997 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4996 
            let v4998 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4997 |> unbox
            let v4999 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5000 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4998 v4999 
            let v5001 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
            let v5002 : string = " " + v5001 + v52 + ""
            let v5003 : string = "$0"
            let v5004 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4727 v5003 
            let v5005 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v5006 : string = "viewBox=\"0 0 20 20\""
            let v5007 : string = "fill=\"currentColor\""
            let v5008 : string = "class=move || \" \".to_owned() + &v5004(())"
            let v5009 : string = " " + v5005 + v52 + ""
            let v5010 : string = " " + v5006 + v5009 + ""
            let v5011 : string = " " + v5007 + v5010 + ""
            let v5012 : string = " " + v5008 + v5011 + ""
            let v5013 : string = "fill-rule=\"evenodd\""
            let v5014 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
            let v5015 : string = "clip-rule=\"evenodd\""
            let v5016 : string = " " + v5013 + v52 + ""
            let v5017 : string = " " + v5014 + v5016 + ""
            let v5018 : string = " " + v5015 + v5017 + ""
            let v5019 : string = "vec![" + v52 + "]"
            let v5020 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5019 
            let v5021 : string = "leptos::prelude::Fragment::new($0)"
            let v5022 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5020 v5021 
            let v5023 : string = "leptos::prelude::AnyView::from($0)"
            let v5024 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5022 v5023 
            let v5025 : string = "<" + v4529 + " " + v5018 + ">move || { v5024 }</" + v4529 + ">"
            let v5026 : string = "leptos::prelude::view! { " + v5025 + " }"
            let v5027 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5026 
            let v5028 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v5027 |> unbox
            let v5029 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5030 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5028 v5029 
            let v5031 : string = "v5030"
            let v5032 : string = v5031 + v52 
            let v5033 : string = v5032 + v52 
            let v5034 : string = "vec![" + v5033 + "]"
            let v5035 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5034 
            let v5036 : string = "leptos::prelude::Fragment::new($0)"
            let v5037 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5035 v5036 
            let v5038 : string = "leptos::prelude::AnyView::from($0)"
            let v5039 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5037 v5038 
            let v5040 : string = "<" + v4545 + " " + v5012 + ">move || { v5039 }</" + v4545 + ">"
            let v5041 : string = "leptos::prelude::view! { " + v5040 + " }"
            let v5042 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5041 
            let v5043 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v5042 |> unbox
            let v5044 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5045 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5043 v5044 
            let v5046 : string = "v5045"
            let v5047 : string = v5046 + v52 
            let v5048 : string = v5047 + v52 
            let v5049 : string = "vec![" + v5048 + "]"
            let v5050 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5049 
            let v5051 : string = "leptos::prelude::Fragment::new($0)"
            let v5052 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5050 v5051 
            let v5053 : string = "leptos::prelude::AnyView::from($0)"
            let v5054 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5052 v5053 
            let v5055 : string = "<" + v4702 + " " + v5002 + ">move || { v5054 }</" + v4702 + ">"
            let v5056 : string = "leptos::prelude::view! { " + v5055 + " }"
            let v5057 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5056 
            let v5058 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v5057 |> unbox
            let v5059 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5060 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5058 v5059 
            let v5061 : string = "v5060"
            let v5062 : string = v5061 + v52 
            let v5063 : string = v5062 + v52 
            let v5064 : string = "v5000"
            let v5065 : string = v5064 + v4789 
            let v5066 : string = v5065 + v5063 
            let v5067 : string = "vec![" + v5066 + "]"
            let v5068 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5067 
            let v5069 : string = "leptos::prelude::Fragment::new($0)"
            let v5070 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5068 v5069 
            let v5071 : string = "leptos::prelude::AnyView::from($0)"
            let v5072 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5070 v5071 
            let v5073 : string = "<" + v4798 + " " + v4896 + ">move || { v5072 }</" + v4798 + ">"
            let v5074 : string = "leptos::prelude::view! { " + v5073 + " }"
            let v5075 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5074 
            let v5076 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v5075 |> unbox
            let v5077 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5078 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5076 v5077 
            let v5079 : string = "class=\"flex flex-1 flex-col\""
            let v5080 : string = " " + v5079 + v52 + ""
            let v5081 : string = "Func0::new(move || $0())"
            let v5082 : (unit -> leptos_dom_Fragment) = closure226(v4456)
            let v5083 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v5082 v5081 
            let v5084 : Func0<leptos_dom_Fragment> = method195(v5083)
            let v5085 : string = "(move || v5084())()"
            let v5086 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v5085 
            let v5087 : string = "leptos::prelude::AnyView::from($0)"
            let v5088 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5086 v5087 
            let v5089 : string = "<" + v4600 + " " + v5080 + ">move || { v5088 }</" + v4600 + ">"
            let v5090 : string = "leptos::prelude::view! { " + v5089 + " }"
            let v5091 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5090 
            let v5092 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5091 |> unbox
            let v5093 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5094 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5092 v5093 
            let v5095 : string = "v5094"
            let v5096 : string = v5095 + v52 
            let v5097 : string = v5096 + v52 
            let v5098 : string = "v5078"
            let v5099 : string = v5098 + v4789 
            let v5100 : string = v5099 + v5097 
            let v5101 : string = "vec![" + v5100 + "]"
            let v5102 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5101 
            let v5103 : string = "leptos::prelude::Fragment::new($0)"
            let v5104 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5102 v5103 
            let v5105 : string = "leptos::prelude::AnyView::from($0)"
            let v5106 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5104 v5105 
            let v5107 : string = "<" + v4833 + " " + v4888 + ">move || { v5106 }</" + v4833 + ">"
            let v5108 : string = "leptos::prelude::view! { " + v5107 + " }"
            let v5109 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5108 
            let v5110 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v5109 |> unbox
            let v5111 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5112 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5110 v5111 
            let v5113 : string = "v5112"
            let v5114 : string = v5113 + v52 
            let v5115 : string = v5114 + v52 
            let v5116 : string = "v4884"
            let v5117 : string = v5116 + v4789 
            let v5118 : string = v5117 + v5115 
            let v5119 : string = "vec![" + v5118 + "]"
            let v5120 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5119 
            let v5121 : string = "leptos::prelude::Fragment::new($0)"
            let v5122 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5120 v5121 
            let v5123 : string = "leptos::prelude::AnyView::from($0)"
            let v5124 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5122 v5123 
            let v5125 : string = "<" + v4600 + " " + v4863 + ">move || { v5124 }</" + v4600 + ">"
            let v5126 : string = "leptos::prelude::view! { " + v5125 + " }"
            let v5127 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5126 
            let v5128 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5127 |> unbox
            let v5129 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5130 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5128 v5129 
            let v5131 : leptos_prelude_ArcRwSignal<Heap1> = v4456.l0
            let v5132 : string = "Box::pin($0)"
            let v5133 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v5131 v5132 
            let v5134 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
            let v5135 : Heap1 = Fable.Core.RustInterop.emitRustExpr v5133 v5134 
            let v5136 : leptos_prelude_ArcRwSignal<bool> = v5135.l1
            let v5137 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
            let v5138 : bool = Fable.Core.RustInterop.emitRustExpr v5136 v5137 
            let v5416 : leptos_prelude_AnyView_ =
                if v5138 then
                    let v5139 : string = "vec![" + v52 + "]"
                    let v5140 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5139 
                    let v5141 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5142 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5140 v5141 
                    let v5143 : string = "class=\"flex flex-col [position:relative]\""
                    let v5144 : string = " " + v5143 + v52 + ""
                    let v5145 : string = "$0"
                    let v5146 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4584 v5145 
                    let v5147 : string = "$0"
                    let v5148 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v4587 v5147 
                    let v5149 : string = "class=\"[position:absolute] [right:0] [top:0]\""
                    let v5150 : string = " " + v5149 + v52 + ""
                    let v5151 : string = "v5142"
                    let v5152 : string = v5151 + v52 
                    let v5153 : string = v5152 + v52 
                    let v5154 : string = "vec![" + v5153 + "]"
                    let v5155 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5154 
                    let v5156 : string = "leptos::prelude::Fragment::new($0)"
                    let v5157 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5155 v5156 
                    let v5158 : string = "leptos::prelude::AnyView::from($0)"
                    let v5159 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5157 v5158 
                    let v5160 : string = "<" + v4600 + " " + v5150 + ">move || { v5159 }</" + v4600 + ">"
                    let v5161 : string = "leptos::prelude::view! { " + v5160 + " }"
                    let v5162 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5161 
                    let v5163 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5162 |> unbox
                    let v5164 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5165 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5163 v5164 
                    let v5166 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v5146(())"
                    let v5167 : string = "open=move || v5148(())"
                    let v5168 : string = " " + v5166 + v52 + ""
                    let v5169 : string = " " + v5167 + v5168 + ""
                    let v5170 : string = "$0"
                    let v5171 : (unit -> string) = closure243()
                    let v5172 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v5171 v5170 
                    let v5173 : string = "$0"
                    let v5174 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure244()
                    let v5175 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v5174 v5173 
                    let v5176 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v5175(()) + \" \" + &v5172(())"
                    let v5177 : string = " " + v5176 + v52 + ""
                    let v5178 : string = "class=\"flex items-center gap-2\""
                    let v5179 : string = " " + v5178 + v52 + ""
                    let v5180 : (unit -> string) = method237()
                    let v5181 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
                    let v5182 : string = " " + v5181 + v52 + ""
                    let v5183 : string = v5180 ()
                    (* run_target_args'
                    let v5188 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v5189 : string = "&*$0"
                    let v5190 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5183 v5189 
                    let _run_target_args'_v5188 = v5190 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v5191 : string = "&*$0"
                    let v5192 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5183 v5191 
                    let _run_target_args'_v5188 = v5192 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v5193 : string = "&*$0"
                    let v5194 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5183 v5193 
                    let _run_target_args'_v5188 = v5194 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v5196 : Ref<Str> = v5183 |> unbox<Ref<Str>>
                    let _run_target_args'_v5188 = v5196 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v5200 : Ref<Str> = v5183 |> unbox<Ref<Str>>
                    let _run_target_args'_v5188 = v5200 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v5204 : Ref<Str> = v5183 |> unbox<Ref<Str>>
                    let _run_target_args'_v5188 = v5204 
                    #endif
#else
                    let v5208 : Ref<Str> = v5183 |> unbox<Ref<Str>>
                    let _run_target_args'_v5188 = v5208 
                    #endif
                    let v5211 : Ref<Str> = _run_target_args'_v5188 
                    (* run_target_args'
                    let v5221 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v5222 : string = "String::from($0)"
                    let v5223 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5211 v5222 
                    let _run_target_args'_v5221 = v5223 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v5224 : string = "String::from($0)"
                    let v5225 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5211 v5224 
                    let _run_target_args'_v5221 = v5225 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v5226 : string = "String::from($0)"
                    let v5227 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5211 v5226 
                    let _run_target_args'_v5221 = v5227 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v5229 : std_string_String = v5211 |> unbox<std_string_String>
                    let _run_target_args'_v5221 = v5229 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v5233 : std_string_String = v5211 |> unbox<std_string_String>
                    let _run_target_args'_v5221 = v5233 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v5237 : std_string_String = v5211 |> unbox<std_string_String>
                    let _run_target_args'_v5221 = v5237 
                    #endif
#else
                    let v5241 : std_string_String = v5211 |> unbox<std_string_String>
                    let _run_target_args'_v5221 = v5241 
                    #endif
                    let v5244 : std_string_String = _run_target_args'_v5221 
                    let v5250 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v5251 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5244 v5250 
                    let v5252 : string = "v5251"
                    let v5253 : string = v5252 + v52 
                    let v5254 : string = v5253 + v52 
                    let v5255 : string = "vec![" + v5254 + "]"
                    let v5256 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5255 
                    let v5257 : string = "leptos::prelude::Fragment::new($0)"
                    let v5258 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5256 v5257 
                    let v5259 : string = "leptos::prelude::AnyView::from($0)"
                    let v5260 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5258 v5259 
                    let v5261 : string = "<" + v4702 + " " + v5182 + ">move || { v5260 }</" + v4702 + ">"
                    let v5262 : string = "leptos::prelude::view! { " + v5261 + " }"
                    let v5263 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5262 
                    let v5264 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v5263 |> unbox
                    let v5265 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5266 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5264 v5265 
                    let v5267 : string = "v5266"
                    let v5268 : string = v5267 + v52 
                    let v5269 : string = v5268 + v52 
                    let v5270 : string = "vec![" + v5269 + "]"
                    let v5271 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5270 
                    let v5272 : string = "leptos::prelude::Fragment::new($0)"
                    let v5273 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5271 v5272 
                    let v5274 : string = "leptos::prelude::AnyView::from($0)"
                    let v5275 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5273 v5274 
                    let v5276 : string = "<" + v4600 + " " + v5179 + ">move || { v5275 }</" + v4600 + ">"
                    let v5277 : string = "leptos::prelude::view! { " + v5276 + " }"
                    let v5278 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5277 
                    let v5279 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5278 |> unbox
                    let v5280 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5281 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5279 v5280 
                    let v5282 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
                    let v5283 : string = " " + v5282 + v52 + ""
                    let v5284 : string = "$0"
                    let v5285 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4727 v5284 
                    let v5286 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                    let v5287 : string = "viewBox=\"0 0 20 20\""
                    let v5288 : string = "fill=\"currentColor\""
                    let v5289 : string = "class=move || \" \".to_owned() + &v5285(())"
                    let v5290 : string = " " + v5286 + v52 + ""
                    let v5291 : string = " " + v5287 + v5290 + ""
                    let v5292 : string = " " + v5288 + v5291 + ""
                    let v5293 : string = " " + v5289 + v5292 + ""
                    let v5294 : string = "fill-rule=\"evenodd\""
                    let v5295 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
                    let v5296 : string = "clip-rule=\"evenodd\""
                    let v5297 : string = " " + v5294 + v52 + ""
                    let v5298 : string = " " + v5295 + v5297 + ""
                    let v5299 : string = " " + v5296 + v5298 + ""
                    let v5300 : string = "vec![" + v52 + "]"
                    let v5301 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5300 
                    let v5302 : string = "leptos::prelude::Fragment::new($0)"
                    let v5303 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5301 v5302 
                    let v5304 : string = "leptos::prelude::AnyView::from($0)"
                    let v5305 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5303 v5304 
                    let v5306 : string = "<" + v4529 + " " + v5299 + ">move || { v5305 }</" + v4529 + ">"
                    let v5307 : string = "leptos::prelude::view! { " + v5306 + " }"
                    let v5308 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5307 
                    let v5309 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v5308 |> unbox
                    let v5310 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5311 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5309 v5310 
                    let v5312 : string = "v5311"
                    let v5313 : string = v5312 + v52 
                    let v5314 : string = v5313 + v52 
                    let v5315 : string = "vec![" + v5314 + "]"
                    let v5316 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5315 
                    let v5317 : string = "leptos::prelude::Fragment::new($0)"
                    let v5318 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5316 v5317 
                    let v5319 : string = "leptos::prelude::AnyView::from($0)"
                    let v5320 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5318 v5319 
                    let v5321 : string = "<" + v4545 + " " + v5293 + ">move || { v5320 }</" + v4545 + ">"
                    let v5322 : string = "leptos::prelude::view! { " + v5321 + " }"
                    let v5323 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5322 
                    let v5324 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v5323 |> unbox
                    let v5325 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5326 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5324 v5325 
                    let v5327 : string = "v5326"
                    let v5328 : string = v5327 + v52 
                    let v5329 : string = v5328 + v52 
                    let v5330 : string = "vec![" + v5329 + "]"
                    let v5331 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5330 
                    let v5332 : string = "leptos::prelude::Fragment::new($0)"
                    let v5333 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5331 v5332 
                    let v5334 : string = "leptos::prelude::AnyView::from($0)"
                    let v5335 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5333 v5334 
                    let v5336 : string = "<" + v4702 + " " + v5283 + ">move || { v5335 }</" + v4702 + ">"
                    let v5337 : string = "leptos::prelude::view! { " + v5336 + " }"
                    let v5338 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5337 
                    let v5339 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v5338 |> unbox
                    let v5340 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5341 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5339 v5340 
                    let v5342 : string = "v5341"
                    let v5343 : string = v5342 + v52 
                    let v5344 : string = v5343 + v52 
                    let v5345 : string = "v5281"
                    let v5346 : string = v5345 + v4789 
                    let v5347 : string = v5346 + v5344 
                    let v5348 : string = "vec![" + v5347 + "]"
                    let v5349 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5348 
                    let v5350 : string = "leptos::prelude::Fragment::new($0)"
                    let v5351 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5349 v5350 
                    let v5352 : string = "leptos::prelude::AnyView::from($0)"
                    let v5353 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5351 v5352 
                    let v5354 : string = "<" + v4798 + " " + v5177 + ">move || { v5353 }</" + v4798 + ">"
                    let v5355 : string = "leptos::prelude::view! { " + v5354 + " }"
                    let v5356 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5355 
                    let v5357 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v5356 |> unbox
                    let v5358 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5359 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5357 v5358 
                    let v5360 : string = "class=\"flex flex-1 flex-col\""
                    let v5361 : string = " " + v5360 + v52 + ""
                    let v5362 : string = "Func0::new(move || $0())"
                    let v5363 : (unit -> leptos_dom_Fragment) = closure246()
                    let v5364 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v5363 v5362 
                    let v5365 : Func0<leptos_dom_Fragment> = method195(v5364)
                    let v5366 : string = "(move || v5365())()"
                    let v5367 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v5366 
                    let v5368 : string = "leptos::prelude::AnyView::from($0)"
                    let v5369 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5367 v5368 
                    let v5370 : string = "<" + v4600 + " " + v5361 + ">move || { v5369 }</" + v4600 + ">"
                    let v5371 : string = "leptos::prelude::view! { " + v5370 + " }"
                    let v5372 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5371 
                    let v5373 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5372 |> unbox
                    let v5374 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5375 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5373 v5374 
                    let v5376 : string = "v5375"
                    let v5377 : string = v5376 + v52 
                    let v5378 : string = v5377 + v52 
                    let v5379 : string = "v5359"
                    let v5380 : string = v5379 + v4789 
                    let v5381 : string = v5380 + v5378 
                    let v5382 : string = "vec![" + v5381 + "]"
                    let v5383 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5382 
                    let v5384 : string = "leptos::prelude::Fragment::new($0)"
                    let v5385 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5383 v5384 
                    let v5386 : string = "leptos::prelude::AnyView::from($0)"
                    let v5387 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5385 v5386 
                    let v5388 : string = "<" + v4833 + " " + v5169 + ">move || { v5387 }</" + v4833 + ">"
                    let v5389 : string = "leptos::prelude::view! { " + v5388 + " }"
                    let v5390 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5389 
                    let v5391 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v5390 |> unbox
                    let v5392 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5393 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5391 v5392 
                    let v5394 : string = "v5393"
                    let v5395 : string = v5394 + v52 
                    let v5396 : string = v5395 + v52 
                    let v5397 : string = "v5165"
                    let v5398 : string = v5397 + v4789 
                    let v5399 : string = v5398 + v5396 
                    let v5400 : string = "vec![" + v5399 + "]"
                    let v5401 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5400 
                    let v5402 : string = "leptos::prelude::Fragment::new($0)"
                    let v5403 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5401 v5402 
                    let v5404 : string = "leptos::prelude::AnyView::from($0)"
                    let v5405 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5403 v5404 
                    let v5406 : string = "<" + v4600 + " " + v5144 + ">move || { v5405 }</" + v4600 + ">"
                    let v5407 : string = "leptos::prelude::view! { " + v5406 + " }"
                    let v5408 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5407 
                    let v5409 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5408 |> unbox
                    let v5410 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5411 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5409 v5410 
                    v5411
                else
                    let v5412 : string = "vec![" + v52 + "]"
                    let v5413 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5412 
                    let v5414 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5415 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5413 v5414 
                    v5415
            let v5417 : string = "v5416"
            let v5418 : string = v5417 + v52 
            let v5419 : string = v5418 + v52 
            let v5420 : string = "v5130"
            let v5421 : string = v5420 + v4789 
            let v5422 : string = v5421 + v5419 
            let v5423 : string = "v4857"
            let v5424 : string = v5423 + v4789 
            let v5425 : string = v5424 + v5422 
            let v5426 : string = "vec![" + v5425 + "]"
            let v5427 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5426 
            let v5428 : string = "leptos::prelude::Fragment::new($0)"
            let v5429 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5427 v5428 
            US22_0(v5429)
        | US18_3 -> (* Transactions *)
            let v3715 : string = "transactions_view.render (1)"
            let v3716 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3717 : bool = Fable.Core.RustInterop.emitRustExpr v3715 v3716 
            let v3718 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
            let v3719 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v3718 
            let v3720 : string = "$0.unwrap()"
            let v3721 : Heap2 = Fable.Core.RustInterop.emitRustExpr v3719 v3720 
            let v3722 : string = "use_transactions.render (1)"
            let v3723 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3724 : bool = Fable.Core.RustInterop.emitRustExpr v3722 v3723 
            let v3725 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3726 : (unit -> Vec<string>) = closure44(v3721)
            let v3727 : leptos_prelude_ArcMemo<Vec<string>> = Fable.Core.RustInterop.emitRustExpr v3726 v3725 
            let v3728 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3729 : (unit -> (struct (string * US23 * string * bool * bool) [])) = closure46(v3727)
            let v3730 : leptos_prelude_ArcMemo<(struct (string * US23 * string * bool * bool) [])> = Fable.Core.RustInterop.emitRustExpr v3729 v3728 
            let v3731 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3732 : (unit -> Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>) = closure48(v3721, v3727)
            let v3733 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>> = Fable.Core.RustInterop.emitRustExpr v3732 v3731 
            let v3734 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3735 : (unit -> Vec<struct (string * US23 * string * bool * bool)>) = closure51(v3733)
            let v3736 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr v3735 v3734 
            let v3737 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3738 : (unit -> (string [])) = closure55(v3733)
            let v3739 : leptos_prelude_ArcMemo<(string [])> = Fable.Core.RustInterop.emitRustExpr v3738 v3737 
            let v3740 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) = closure60()
            let v3741 : leptos_prelude_ArcMemo<Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>> = method78(v3736, v3740)
            let v3743 : string = $"%A{v3741}"
            let v3746 : string = "use_transactions.render (7) / root func0 / result: " + string v3743 + ""
            let v3747 : int64 = 200L
            let v3748 : string = method8(v3747, v3746)
            let v3749 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3750 : bool = Fable.Core.RustInterop.emitRustExpr v3748 v3749 
            let v3751 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3752 : (unit -> Result<(struct (string * unativeint * Heap5) []) option, std_string_String>) = closure90(v3739, v3741)
            let v3753 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v3752 v3751 
            let v3754 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3755 : (unit -> Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String>) = closure107(v3753)
            let v3756 : leptos_prelude_ArcMemo<Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v3755 v3754 
            let v3757 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3758 : (unit -> Vec<struct (string * US23 * string * bool * bool)>) = closure115(v3756)
            let v3759 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr v3758 v3757 
            let v3760 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option)) = closure119()
            let v3761 : leptos_prelude_ArcMemo<Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>> = method159(v3759, v3760)
            let v3763 : string = $"%A{v3761}"
            let v3766 : string = "use_transactions.render (12) / rpc_response func0 / result: " + string v3763 + ""
            let v3767 : int64 = 200L
            let v3768 : string = method8(v3767, v3766)
            let v3769 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3770 : bool = Fable.Core.RustInterop.emitRustExpr v3768 v3769 
            let v3771 : string = $"leptos::prelude::signal($0)"
            let struct (v3772 : leptos_prelude_ReadSignal<bool>, v3773 : leptos_prelude_WriteSignal<bool>) = Fable.Core.RustInterop.emitRustExpr false v3771 
            let v3774 : (unit -> unit) = closure254(v3773)
            let v3775 : string = "let v3774 = $0"
            Fable.Core.RustInterop.emitRustExpr v3774 v3775 
            let v3776 : string = "$0"
            let v3777 : (unit -> string) = closure255()
            let v3778 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3777 v3776 
            let v3779 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v3780 : string = "fill=\"none\""
            let v3781 : string = "viewBox=\"0 0 24 24\""
            let v3782 : string = "stroke-width=\"1.5\""
            let v3783 : string = "stroke=\"currentColor\""
            let v3784 : string = "class=move || \" \".to_owned() + &v3778(())"
            let v3785 : string = " " + v3779 + v52 + ""
            let v3786 : string = " " + v3780 + v3785 + ""
            let v3787 : string = " " + v3781 + v3786 + ""
            let v3788 : string = " " + v3782 + v3787 + ""
            let v3789 : string = " " + v3783 + v3788 + ""
            let v3790 : string = " " + v3784 + v3789 + ""
            let v3791 : string = "stroke-linecap=\"round\""
            let v3792 : string = "stroke-linejoin=\"round\""
            let v3793 : string = "d=\"M10.343 3.94c.09-.542.56-.94 1.11-.94h1.093c.55 0 1.02.398 1.11.94l.149.894c.07.424.384.764.78.93.398.164.855.142 1.205-.108l.737-.527a1.125 1.125 0 011.45.12l.773.774c.39.389.44 1.002.12 1.45l-.527.737c-.25.35-.272.806-.107 1.204.165.397.505.71.93.78l.893.15c.543.09.94.56.94 1.109v1.094c0 .55-.397 1.02-.94 1.11l-.893.149c-.425.07-.765.383-.93.78-.165.398-.143.854.107 1.204l.527.738c.32.447.269 1.06-.12 1.45l-.774.773a1.125 1.125 0 01-1.449.12l-.738-.527c-.35-.25-.806-.272-1.203-.107-.397.165-.71.505-.781.929l-.149.894c-.09.542-.56.94-1.11.94h-1.094c-.55 0-1.019-.398-1.11-.94l-.148-.894c-.071-.424-.384-.764-.781-.93-.398-.164-.854-.142-1.204.108l-.738.527c-.447.32-1.06.269-1.45-.12l-.773-.774a1.125 1.125 0 01-.12-1.45l.527-.737c.25-.35.273-.806.108-1.204-.165-.397-.505-.71-.93-.78l-.894-.15c-.542-.09-.94-.56-.94-1.109v-1.094c0-.55.398-1.02.94-1.11l.894-.149c.424-.07.765-.383.93-.78.165-.398.143-.854-.107-1.204l-.527-.738a1.125 1.125 0 01.12-1.45l.773-.773a1.125 1.125 0 011.45-.12l.737.527c.35.25.807.272 1.204.107.397-.165.71-.505.78-.929l.15-.894z\""
            let v3794 : string = " " + v3791 + v52 + ""
            let v3795 : string = " " + v3792 + v3794 + ""
            let v3796 : string = " " + v3793 + v3795 + ""
            let v3797 : string = "vec![" + v52 + "]"
            let v3798 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3797 
            let v3799 : string = "leptos::prelude::Fragment::new($0)"
            let v3800 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3798 v3799 
            let v3801 : string = "leptos::prelude::AnyView::from($0)"
            let v3802 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3800 v3801 
            let v3803 : string = "path"
            let v3804 : string = "<" + v3803 + " " + v3796 + ">move || { v3802 }</" + v3803 + ">"
            let v3805 : string = "leptos::prelude::view! { " + v3804 + " }"
            let v3806 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3805 
            let v3807 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v3806 |> unbox
            let v3808 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3809 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3807 v3808 
            let v3810 : string = "stroke-linecap=\"round\""
            let v3811 : string = "stroke-linejoin=\"round\""
            let v3812 : string = "d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\""
            let v3813 : string = " " + v3810 + v52 + ""
            let v3814 : string = " " + v3811 + v3813 + ""
            let v3815 : string = " " + v3812 + v3814 + ""
            let v3816 : string = "vec![" + v52 + "]"
            let v3817 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3816 
            let v3818 : string = "leptos::prelude::Fragment::new($0)"
            let v3819 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3817 v3818 
            let v3820 : string = "leptos::prelude::AnyView::from($0)"
            let v3821 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3819 v3820 
            let v3822 : string = "<" + v3803 + " " + v3815 + ">move || { v3821 }</" + v3803 + ">"
            let v3823 : string = "leptos::prelude::view! { " + v3822 + " }"
            let v3824 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3823 
            let v3825 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v3824 |> unbox
            let v3826 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3827 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3825 v3826 
            let v3828 : string = "v3827"
            let v3829 : string = v3828 + v52 
            let v3830 : string = v3829 + v52 
            let v3831 : string = "v3809"
            let v3832 : string = ", "
            let v3833 : string = v3831 + v3832 
            let v3834 : string = v3833 + v3830 
            let v3835 : string = "vec![" + v3834 + "]"
            let v3836 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3835 
            let v3837 : string = "leptos::prelude::Fragment::new($0)"
            let v3838 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3836 v3837 
            let v3839 : string = "leptos::prelude::AnyView::from($0)"
            let v3840 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3838 v3839 
            let v3841 : string = "svg"
            let v3842 : string = "<" + v3841 + " " + v3790 + ">move || { v3840 }</" + v3841 + ">"
            let v3843 : string = "leptos::prelude::view! { " + v3842 + " }"
            let v3844 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3843 
            let v3845 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v3844 |> unbox
            let v3846 : string = "on:click=move |_| v3774()"
            let v3847 : string = "aria-label=\"Settings\""
            let v3848 : string = "$0"
            let v3849 : (unit -> std_string_String) = closure256(v3772)
            let v3850 : (unit -> std_string_String) = Fable.Core.RustInterop.emitRustExpr v3849 v3848 
            let v3851 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] pb-[8px] pt-[8px] px-[12px] \".to_owned() + &v3850(())"
            let v3852 : string = " " + v3851 + v52 + ""
            let v3853 : string = " " + v3846 + v3852 + ""
            let v3854 : string = " " + v3847 + v3853 + ""
            let v3855 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3856 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3845 v3855 
            let v3857 : string = "v3856"
            let v3858 : string = v3857 + v52 
            let v3859 : string = v3858 + v52 
            let v3860 : string = "vec![" + v3859 + "]"
            let v3861 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3860 
            let v3862 : string = "leptos::prelude::Fragment::new($0)"
            let v3863 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3861 v3862 
            let v3864 : string = "leptos::prelude::AnyView::from($0)"
            let v3865 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3863 v3864 
            let v3866 : string = "button"
            let v3867 : string = "<" + v3866 + " " + v3854 + ">move || { v3865 }</" + v3866 + ">"
            let v3868 : string = "leptos::prelude::view! { " + v3867 + " }"
            let v3869 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3868 
            let v3870 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Button>> = v3869 |> unbox
            let v3871 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3872 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3870 v3871 
            let v3873 : string = "vec![" + v52 + "]"
            let v3874 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3873 
            let v3875 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3876 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3874 v3875 
            let v3877 : string = "class=\"flex flex-col [position:relative]\""
            let v3878 : string = " " + v3877 + v52 + ""
            let v3879 : string = "$0"
            let v3880 : (unit -> string) = closure161()
            let v3881 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3880 v3879 
            let v3882 : string = "$0"
            let v3883 : (unit -> bool) = closure162()
            let v3884 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v3883 v3882 
            let v3885 : string = "class=\"[position:absolute] [right:0] [top:0]\""
            let v3886 : string = " " + v3885 + v52 + ""
            let v3887 : string = "v3872"
            let v3888 : string = v3887 + v52 
            let v3889 : string = v3888 + v52 
            let v3890 : string = "vec![" + v3889 + "]"
            let v3891 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3890 
            let v3892 : string = "leptos::prelude::Fragment::new($0)"
            let v3893 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3891 v3892 
            let v3894 : string = "leptos::prelude::AnyView::from($0)"
            let v3895 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3893 v3894 
            let v3896 : string = "div"
            let v3897 : string = "<" + v3896 + " " + v3886 + ">move || { v3895 }</" + v3896 + ">"
            let v3898 : string = "leptos::prelude::view! { " + v3897 + " }"
            let v3899 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3898 
            let v3900 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3899 |> unbox
            let v3901 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3902 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3900 v3901 
            let v3903 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v3881(())"
            let v3904 : string = "open=move || v3884(())"
            let v3905 : string = " " + v3903 + v52 + ""
            let v3906 : string = " " + v3904 + v3905 + ""
            let v3907 : string = "$0"
            let v3908 : (unit -> string) = closure257()
            let v3909 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3908 v3907 
            let v3910 : string = "$0"
            let v3911 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure258(v3872)
            let v3912 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v3911 v3910 
            let v3913 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v3912(()) + \" \" + &v3909(())"
            let v3914 : string = " " + v3913 + v52 + ""
            let v3915 : string = "class=\"flex items-center gap-2\""
            let v3916 : string = " " + v3915 + v52 + ""
            let v3917 : (unit -> string) = method243(v3872)
            let v3918 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
            let v3919 : string = " " + v3918 + v52 + ""
            let v3920 : string = v3917 ()
            (* run_target_args'
            let v3925 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3926 : string = "&*$0"
            let v3927 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3920 v3926 
            let _run_target_args'_v3925 = v3927 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3928 : string = "&*$0"
            let v3929 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3920 v3928 
            let _run_target_args'_v3925 = v3929 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3930 : string = "&*$0"
            let v3931 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3920 v3930 
            let _run_target_args'_v3925 = v3931 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3933 : Ref<Str> = v3920 |> unbox<Ref<Str>>
            let _run_target_args'_v3925 = v3933 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3937 : Ref<Str> = v3920 |> unbox<Ref<Str>>
            let _run_target_args'_v3925 = v3937 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3941 : Ref<Str> = v3920 |> unbox<Ref<Str>>
            let _run_target_args'_v3925 = v3941 
            #endif
#else
            let v3945 : Ref<Str> = v3920 |> unbox<Ref<Str>>
            let _run_target_args'_v3925 = v3945 
            #endif
            let v3948 : Ref<Str> = _run_target_args'_v3925 
            (* run_target_args'
            let v3958 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3959 : string = "String::from($0)"
            let v3960 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3948 v3959 
            let _run_target_args'_v3958 = v3960 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3961 : string = "String::from($0)"
            let v3962 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3948 v3961 
            let _run_target_args'_v3958 = v3962 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3963 : string = "String::from($0)"
            let v3964 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3948 v3963 
            let _run_target_args'_v3958 = v3964 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3966 : std_string_String = v3948 |> unbox<std_string_String>
            let _run_target_args'_v3958 = v3966 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3970 : std_string_String = v3948 |> unbox<std_string_String>
            let _run_target_args'_v3958 = v3970 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3974 : std_string_String = v3948 |> unbox<std_string_String>
            let _run_target_args'_v3958 = v3974 
            #endif
#else
            let v3978 : std_string_String = v3948 |> unbox<std_string_String>
            let _run_target_args'_v3958 = v3978 
            #endif
            let v3981 : std_string_String = _run_target_args'_v3958 
            let v3987 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v3988 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3981 v3987 
            let v3989 : string = "v3988"
            let v3990 : string = v3989 + v52 
            let v3991 : string = v3990 + v52 
            let v3992 : string = "vec![" + v3991 + "]"
            let v3993 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3992 
            let v3994 : string = "leptos::prelude::Fragment::new($0)"
            let v3995 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3993 v3994 
            let v3996 : string = "leptos::prelude::AnyView::from($0)"
            let v3997 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3995 v3996 
            let v3998 : string = "span"
            let v3999 : string = "<" + v3998 + " " + v3919 + ">move || { v3997 }</" + v3998 + ">"
            let v4000 : string = "leptos::prelude::view! { " + v3999 + " }"
            let v4001 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4000 
            let v4002 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4001 |> unbox
            let v4003 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4004 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4002 v4003 
            let v4005 : string = "v4004"
            let v4006 : string = v4005 + v52 
            let v4007 : string = v4006 + v52 
            let v4008 : string = "vec![" + v4007 + "]"
            let v4009 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4008 
            let v4010 : string = "leptos::prelude::Fragment::new($0)"
            let v4011 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4009 v4010 
            let v4012 : string = "leptos::prelude::AnyView::from($0)"
            let v4013 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4011 v4012 
            let v4014 : string = "<" + v3896 + " " + v3916 + ">move || { v4013 }</" + v3896 + ">"
            let v4015 : string = "leptos::prelude::view! { " + v4014 + " }"
            let v4016 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4015 
            let v4017 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4016 |> unbox
            let v4018 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4019 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4017 v4018 
            let v4020 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
            let v4021 : string = " " + v4020 + v52 + ""
            let v4022 : string = "$0"
            let v4023 : (unit -> string) = closure166()
            let v4024 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4023 v4022 
            let v4025 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v4026 : string = "viewBox=\"0 0 20 20\""
            let v4027 : string = "fill=\"currentColor\""
            let v4028 : string = "class=move || \" \".to_owned() + &v4024(())"
            let v4029 : string = " " + v4025 + v52 + ""
            let v4030 : string = " " + v4026 + v4029 + ""
            let v4031 : string = " " + v4027 + v4030 + ""
            let v4032 : string = " " + v4028 + v4031 + ""
            let v4033 : string = "fill-rule=\"evenodd\""
            let v4034 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
            let v4035 : string = "clip-rule=\"evenodd\""
            let v4036 : string = " " + v4033 + v52 + ""
            let v4037 : string = " " + v4034 + v4036 + ""
            let v4038 : string = " " + v4035 + v4037 + ""
            let v4039 : string = "vec![" + v52 + "]"
            let v4040 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4039 
            let v4041 : string = "leptos::prelude::Fragment::new($0)"
            let v4042 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4040 v4041 
            let v4043 : string = "leptos::prelude::AnyView::from($0)"
            let v4044 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4042 v4043 
            let v4045 : string = "<" + v3803 + " " + v4038 + ">move || { v4044 }</" + v3803 + ">"
            let v4046 : string = "leptos::prelude::view! { " + v4045 + " }"
            let v4047 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4046 
            let v4048 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4047 |> unbox
            let v4049 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4050 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4048 v4049 
            let v4051 : string = "v4050"
            let v4052 : string = v4051 + v52 
            let v4053 : string = v4052 + v52 
            let v4054 : string = "vec![" + v4053 + "]"
            let v4055 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4054 
            let v4056 : string = "leptos::prelude::Fragment::new($0)"
            let v4057 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4055 v4056 
            let v4058 : string = "leptos::prelude::AnyView::from($0)"
            let v4059 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4057 v4058 
            let v4060 : string = "<" + v3841 + " " + v4032 + ">move || { v4059 }</" + v3841 + ">"
            let v4061 : string = "leptos::prelude::view! { " + v4060 + " }"
            let v4062 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4061 
            let v4063 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4062 |> unbox
            let v4064 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4065 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4063 v4064 
            let v4066 : string = "v4065"
            let v4067 : string = v4066 + v52 
            let v4068 : string = v4067 + v52 
            let v4069 : string = "vec![" + v4068 + "]"
            let v4070 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4069 
            let v4071 : string = "leptos::prelude::Fragment::new($0)"
            let v4072 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4070 v4071 
            let v4073 : string = "leptos::prelude::AnyView::from($0)"
            let v4074 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4072 v4073 
            let v4075 : string = "<" + v3998 + " " + v4021 + ">move || { v4074 }</" + v3998 + ">"
            let v4076 : string = "leptos::prelude::view! { " + v4075 + " }"
            let v4077 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4076 
            let v4078 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4077 |> unbox
            let v4079 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4080 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4078 v4079 
            let v4081 : string = "v4080"
            let v4082 : string = v4081 + v52 
            let v4083 : string = v4082 + v52 
            let v4084 : string = "v4019"
            let v4085 : string = v4084 + v3832 
            let v4086 : string = v4085 + v4083 
            let v4087 : string = "vec![" + v4086 + "]"
            let v4088 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4087 
            let v4089 : string = "leptos::prelude::Fragment::new($0)"
            let v4090 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4088 v4089 
            let v4091 : string = "leptos::prelude::AnyView::from($0)"
            let v4092 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4090 v4091 
            let v4093 : string = "summary"
            let v4094 : string = "<" + v4093 + " " + v3914 + ">move || { v4092 }</" + v4093 + ">"
            let v4095 : string = "leptos::prelude::view! { " + v4094 + " }"
            let v4096 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4095 
            let v4097 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v4096 |> unbox
            let v4098 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4099 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4097 v4098 
            let v4100 : string = "class=\"flex flex-1 flex-col\""
            let v4101 : string = " " + v4100 + v52 + ""
            let v4102 : string = "Func0::new(move || $0())"
            let v4103 : (unit -> leptos_dom_Fragment) = closure260(v3721, v3753, v3733, v3772)
            let v4104 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v4103 v4102 
            let v4105 : Func0<leptos_dom_Fragment> = method195(v4104)
            let v4106 : string = "(move || v4105())()"
            let v4107 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v4106 
            let v4108 : string = "leptos::prelude::AnyView::from($0)"
            let v4109 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4107 v4108 
            let v4110 : string = "<" + v3896 + " " + v4101 + ">move || { v4109 }</" + v3896 + ">"
            let v4111 : string = "leptos::prelude::view! { " + v4110 + " }"
            let v4112 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4111 
            let v4113 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4112 |> unbox
            let v4114 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4115 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4113 v4114 
            let v4116 : string = "v4115"
            let v4117 : string = v4116 + v52 
            let v4118 : string = v4117 + v52 
            let v4119 : string = "v4099"
            let v4120 : string = v4119 + v3832 
            let v4121 : string = v4120 + v4118 
            let v4122 : string = "vec![" + v4121 + "]"
            let v4123 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4122 
            let v4124 : string = "leptos::prelude::Fragment::new($0)"
            let v4125 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4123 v4124 
            let v4126 : string = "leptos::prelude::AnyView::from($0)"
            let v4127 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4125 v4126 
            let v4128 : string = "details"
            let v4129 : string = "<" + v4128 + " " + v3906 + ">move || { v4127 }</" + v4128 + ">"
            let v4130 : string = "leptos::prelude::view! { " + v4129 + " }"
            let v4131 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4130 
            let v4132 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v4131 |> unbox
            let v4133 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4134 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4132 v4133 
            let v4135 : string = "v4134"
            let v4136 : string = v4135 + v52 
            let v4137 : string = v4136 + v52 
            let v4138 : string = "v3902"
            let v4139 : string = v4138 + v3832 
            let v4140 : string = v4139 + v4137 
            let v4141 : string = "vec![" + v4140 + "]"
            let v4142 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4141 
            let v4143 : string = "leptos::prelude::Fragment::new($0)"
            let v4144 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4142 v4143 
            let v4145 : string = "leptos::prelude::AnyView::from($0)"
            let v4146 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4144 v4145 
            let v4147 : string = "<" + v3896 + " " + v3878 + ">move || { v4146 }</" + v3896 + ">"
            let v4148 : string = "leptos::prelude::view! { " + v4147 + " }"
            let v4149 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4148 
            let v4150 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4149 |> unbox
            let v4151 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4152 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4150 v4151 
            let v4153 : leptos_prelude_ArcRwSignal<Heap1> = v3721.l0
            let v4154 : string = "Box::pin($0)"
            let v4155 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v4153 v4154 
            let v4156 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
            let v4157 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4155 v4156 
            let v4158 : leptos_prelude_ArcRwSignal<bool> = v4157.l1
            let v4159 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
            let v4160 : bool = Fable.Core.RustInterop.emitRustExpr v4158 v4159 
            let v4438 : leptos_prelude_AnyView_ =
                if v4160 then
                    let v4161 : string = "vec![" + v52 + "]"
                    let v4162 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4161 
                    let v4163 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4164 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4162 v4163 
                    let v4165 : string = "class=\"flex flex-col [position:relative]\""
                    let v4166 : string = " " + v4165 + v52 + ""
                    let v4167 : string = "$0"
                    let v4168 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3880 v4167 
                    let v4169 : string = "$0"
                    let v4170 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v3883 v4169 
                    let v4171 : string = "class=\"[position:absolute] [right:0] [top:0]\""
                    let v4172 : string = " " + v4171 + v52 + ""
                    let v4173 : string = "v4164"
                    let v4174 : string = v4173 + v52 
                    let v4175 : string = v4174 + v52 
                    let v4176 : string = "vec![" + v4175 + "]"
                    let v4177 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4176 
                    let v4178 : string = "leptos::prelude::Fragment::new($0)"
                    let v4179 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4177 v4178 
                    let v4180 : string = "leptos::prelude::AnyView::from($0)"
                    let v4181 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4179 v4180 
                    let v4182 : string = "<" + v3896 + " " + v4172 + ">move || { v4181 }</" + v3896 + ">"
                    let v4183 : string = "leptos::prelude::view! { " + v4182 + " }"
                    let v4184 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4183 
                    let v4185 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4184 |> unbox
                    let v4186 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4187 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4185 v4186 
                    let v4188 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v4168(())"
                    let v4189 : string = "open=move || v4170(())"
                    let v4190 : string = " " + v4188 + v52 + ""
                    let v4191 : string = " " + v4189 + v4190 + ""
                    let v4192 : string = "$0"
                    let v4193 : (unit -> string) = closure337()
                    let v4194 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4193 v4192 
                    let v4195 : string = "$0"
                    let v4196 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure338()
                    let v4197 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v4196 v4195 
                    let v4198 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v4197(()) + \" \" + &v4194(())"
                    let v4199 : string = " " + v4198 + v52 + ""
                    let v4200 : string = "class=\"flex items-center gap-2\""
                    let v4201 : string = " " + v4200 + v52 + ""
                    let v4202 : (unit -> string) = method282()
                    let v4203 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
                    let v4204 : string = " " + v4203 + v52 + ""
                    let v4205 : string = v4202 ()
                    (* run_target_args'
                    let v4210 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v4211 : string = "&*$0"
                    let v4212 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4205 v4211 
                    let _run_target_args'_v4210 = v4212 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v4213 : string = "&*$0"
                    let v4214 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4205 v4213 
                    let _run_target_args'_v4210 = v4214 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v4215 : string = "&*$0"
                    let v4216 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4205 v4215 
                    let _run_target_args'_v4210 = v4216 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v4218 : Ref<Str> = v4205 |> unbox<Ref<Str>>
                    let _run_target_args'_v4210 = v4218 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v4222 : Ref<Str> = v4205 |> unbox<Ref<Str>>
                    let _run_target_args'_v4210 = v4222 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v4226 : Ref<Str> = v4205 |> unbox<Ref<Str>>
                    let _run_target_args'_v4210 = v4226 
                    #endif
#else
                    let v4230 : Ref<Str> = v4205 |> unbox<Ref<Str>>
                    let _run_target_args'_v4210 = v4230 
                    #endif
                    let v4233 : Ref<Str> = _run_target_args'_v4210 
                    (* run_target_args'
                    let v4243 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v4244 : string = "String::from($0)"
                    let v4245 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4233 v4244 
                    let _run_target_args'_v4243 = v4245 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v4246 : string = "String::from($0)"
                    let v4247 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4233 v4246 
                    let _run_target_args'_v4243 = v4247 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v4248 : string = "String::from($0)"
                    let v4249 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4233 v4248 
                    let _run_target_args'_v4243 = v4249 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v4251 : std_string_String = v4233 |> unbox<std_string_String>
                    let _run_target_args'_v4243 = v4251 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v4255 : std_string_String = v4233 |> unbox<std_string_String>
                    let _run_target_args'_v4243 = v4255 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v4259 : std_string_String = v4233 |> unbox<std_string_String>
                    let _run_target_args'_v4243 = v4259 
                    #endif
#else
                    let v4263 : std_string_String = v4233 |> unbox<std_string_String>
                    let _run_target_args'_v4243 = v4263 
                    #endif
                    let v4266 : std_string_String = _run_target_args'_v4243 
                    let v4272 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v4273 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4266 v4272 
                    let v4274 : string = "v4273"
                    let v4275 : string = v4274 + v52 
                    let v4276 : string = v4275 + v52 
                    let v4277 : string = "vec![" + v4276 + "]"
                    let v4278 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4277 
                    let v4279 : string = "leptos::prelude::Fragment::new($0)"
                    let v4280 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4278 v4279 
                    let v4281 : string = "leptos::prelude::AnyView::from($0)"
                    let v4282 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4280 v4281 
                    let v4283 : string = "<" + v3998 + " " + v4204 + ">move || { v4282 }</" + v3998 + ">"
                    let v4284 : string = "leptos::prelude::view! { " + v4283 + " }"
                    let v4285 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4284 
                    let v4286 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4285 |> unbox
                    let v4287 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4288 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4286 v4287 
                    let v4289 : string = "v4288"
                    let v4290 : string = v4289 + v52 
                    let v4291 : string = v4290 + v52 
                    let v4292 : string = "vec![" + v4291 + "]"
                    let v4293 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4292 
                    let v4294 : string = "leptos::prelude::Fragment::new($0)"
                    let v4295 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4293 v4294 
                    let v4296 : string = "leptos::prelude::AnyView::from($0)"
                    let v4297 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4295 v4296 
                    let v4298 : string = "<" + v3896 + " " + v4201 + ">move || { v4297 }</" + v3896 + ">"
                    let v4299 : string = "leptos::prelude::view! { " + v4298 + " }"
                    let v4300 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4299 
                    let v4301 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4300 |> unbox
                    let v4302 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4303 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4301 v4302 
                    let v4304 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
                    let v4305 : string = " " + v4304 + v52 + ""
                    let v4306 : string = "$0"
                    let v4307 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4023 v4306 
                    let v4308 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                    let v4309 : string = "viewBox=\"0 0 20 20\""
                    let v4310 : string = "fill=\"currentColor\""
                    let v4311 : string = "class=move || \" \".to_owned() + &v4307(())"
                    let v4312 : string = " " + v4308 + v52 + ""
                    let v4313 : string = " " + v4309 + v4312 + ""
                    let v4314 : string = " " + v4310 + v4313 + ""
                    let v4315 : string = " " + v4311 + v4314 + ""
                    let v4316 : string = "fill-rule=\"evenodd\""
                    let v4317 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
                    let v4318 : string = "clip-rule=\"evenodd\""
                    let v4319 : string = " " + v4316 + v52 + ""
                    let v4320 : string = " " + v4317 + v4319 + ""
                    let v4321 : string = " " + v4318 + v4320 + ""
                    let v4322 : string = "vec![" + v52 + "]"
                    let v4323 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4322 
                    let v4324 : string = "leptos::prelude::Fragment::new($0)"
                    let v4325 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4323 v4324 
                    let v4326 : string = "leptos::prelude::AnyView::from($0)"
                    let v4327 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4325 v4326 
                    let v4328 : string = "<" + v3803 + " " + v4321 + ">move || { v4327 }</" + v3803 + ">"
                    let v4329 : string = "leptos::prelude::view! { " + v4328 + " }"
                    let v4330 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4329 
                    let v4331 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4330 |> unbox
                    let v4332 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4333 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4331 v4332 
                    let v4334 : string = "v4333"
                    let v4335 : string = v4334 + v52 
                    let v4336 : string = v4335 + v52 
                    let v4337 : string = "vec![" + v4336 + "]"
                    let v4338 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4337 
                    let v4339 : string = "leptos::prelude::Fragment::new($0)"
                    let v4340 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4338 v4339 
                    let v4341 : string = "leptos::prelude::AnyView::from($0)"
                    let v4342 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4340 v4341 
                    let v4343 : string = "<" + v3841 + " " + v4315 + ">move || { v4342 }</" + v3841 + ">"
                    let v4344 : string = "leptos::prelude::view! { " + v4343 + " }"
                    let v4345 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4344 
                    let v4346 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4345 |> unbox
                    let v4347 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4348 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4346 v4347 
                    let v4349 : string = "v4348"
                    let v4350 : string = v4349 + v52 
                    let v4351 : string = v4350 + v52 
                    let v4352 : string = "vec![" + v4351 + "]"
                    let v4353 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4352 
                    let v4354 : string = "leptos::prelude::Fragment::new($0)"
                    let v4355 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4353 v4354 
                    let v4356 : string = "leptos::prelude::AnyView::from($0)"
                    let v4357 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4355 v4356 
                    let v4358 : string = "<" + v3998 + " " + v4305 + ">move || { v4357 }</" + v3998 + ">"
                    let v4359 : string = "leptos::prelude::view! { " + v4358 + " }"
                    let v4360 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4359 
                    let v4361 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4360 |> unbox
                    let v4362 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4363 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4361 v4362 
                    let v4364 : string = "v4363"
                    let v4365 : string = v4364 + v52 
                    let v4366 : string = v4365 + v52 
                    let v4367 : string = "v4303"
                    let v4368 : string = v4367 + v3832 
                    let v4369 : string = v4368 + v4366 
                    let v4370 : string = "vec![" + v4369 + "]"
                    let v4371 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4370 
                    let v4372 : string = "leptos::prelude::Fragment::new($0)"
                    let v4373 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4371 v4372 
                    let v4374 : string = "leptos::prelude::AnyView::from($0)"
                    let v4375 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4373 v4374 
                    let v4376 : string = "<" + v4093 + " " + v4199 + ">move || { v4375 }</" + v4093 + ">"
                    let v4377 : string = "leptos::prelude::view! { " + v4376 + " }"
                    let v4378 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4377 
                    let v4379 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v4378 |> unbox
                    let v4380 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4381 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4379 v4380 
                    let v4382 : string = "class=\"flex flex-1 flex-col\""
                    let v4383 : string = " " + v4382 + v52 + ""
                    let v4384 : string = "Func0::new(move || $0())"
                    let v4385 : (unit -> leptos_dom_Fragment) = closure340(v3753)
                    let v4386 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v4385 v4384 
                    let v4387 : Func0<leptos_dom_Fragment> = method195(v4386)
                    let v4388 : string = "(move || v4387())()"
                    let v4389 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v4388 
                    let v4390 : string = "leptos::prelude::AnyView::from($0)"
                    let v4391 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4389 v4390 
                    let v4392 : string = "<" + v3896 + " " + v4383 + ">move || { v4391 }</" + v3896 + ">"
                    let v4393 : string = "leptos::prelude::view! { " + v4392 + " }"
                    let v4394 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4393 
                    let v4395 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4394 |> unbox
                    let v4396 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4397 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4395 v4396 
                    let v4398 : string = "v4397"
                    let v4399 : string = v4398 + v52 
                    let v4400 : string = v4399 + v52 
                    let v4401 : string = "v4381"
                    let v4402 : string = v4401 + v3832 
                    let v4403 : string = v4402 + v4400 
                    let v4404 : string = "vec![" + v4403 + "]"
                    let v4405 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4404 
                    let v4406 : string = "leptos::prelude::Fragment::new($0)"
                    let v4407 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4405 v4406 
                    let v4408 : string = "leptos::prelude::AnyView::from($0)"
                    let v4409 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4407 v4408 
                    let v4410 : string = "<" + v4128 + " " + v4191 + ">move || { v4409 }</" + v4128 + ">"
                    let v4411 : string = "leptos::prelude::view! { " + v4410 + " }"
                    let v4412 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4411 
                    let v4413 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v4412 |> unbox
                    let v4414 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4415 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4413 v4414 
                    let v4416 : string = "v4415"
                    let v4417 : string = v4416 + v52 
                    let v4418 : string = v4417 + v52 
                    let v4419 : string = "v4187"
                    let v4420 : string = v4419 + v3832 
                    let v4421 : string = v4420 + v4418 
                    let v4422 : string = "vec![" + v4421 + "]"
                    let v4423 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4422 
                    let v4424 : string = "leptos::prelude::Fragment::new($0)"
                    let v4425 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4423 v4424 
                    let v4426 : string = "leptos::prelude::AnyView::from($0)"
                    let v4427 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4425 v4426 
                    let v4428 : string = "<" + v3896 + " " + v4166 + ">move || { v4427 }</" + v3896 + ">"
                    let v4429 : string = "leptos::prelude::view! { " + v4428 + " }"
                    let v4430 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4429 
                    let v4431 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4430 |> unbox
                    let v4432 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4433 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4431 v4432 
                    v4433
                else
                    let v4434 : string = "vec![" + v52 + "]"
                    let v4435 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4434 
                    let v4436 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4437 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4435 v4436 
                    v4437
            let v4439 : string = "v4438"
            let v4440 : string = v4439 + v52 
            let v4441 : string = v4440 + v52 
            let v4442 : string = "v4152"
            let v4443 : string = v4442 + v3832 
            let v4444 : string = v4443 + v4441 
            let v4445 : string = "vec![" + v4444 + "]"
            let v4446 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4445 
            let v4447 : string = "leptos::prelude::Fragment::new($0)"
            let v4448 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4446 v4447 
            US22_0(v4448)
        | _ ->
            US22_1
    let v5453 : leptos_prelude_AnyView_ =
        match v5435 with
        | US22_1 -> (* None *)
            let v5448 : string = "vec![" + v52 + "]"
            let v5449 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5448 
            let v5450 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5451 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5449 v5450 
            v5451
        | US22_0(v5436) -> (* Some *)
            let v5437 : string = "class=\"flex flex-1 flex-col [overflow-y:auto]\""
            let v5438 : string = " " + v5437 + v52 + ""
            let v5439 : string = "leptos::prelude::AnyView::from($0)"
            let v5440 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5436 v5439 
            let v5441 : string = "div"
            let v5442 : string = "<" + v5441 + " " + v5438 + ">move || { v5440 }</" + v5441 + ">"
            let v5443 : string = "leptos::prelude::view! { " + v5442 + " }"
            let v5444 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5443 
            let v5445 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5444 |> unbox
            let v5446 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5447 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5445 v5446 
            v5447
    let v5454 : string = "v5453"
    let v5455 : string = v5454 + v52 
    let v5456 : string = v5455 + v52 
    let v5457 : string = "vec![" + v5456 + "]"
    let v5458 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5457 
    let v5459 : string = "leptos::prelude::Fragment::new($0)"
    let v5460 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5458 v5459 
    let v5461 : string = "leptos::prelude::AnyView::from($0)"
    let v5462 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5460 v5461 
    let v5463 : string = "main"
    let v5464 : string = "<" + v5463 + " " + v2114 + ">move || { v5462 }</" + v5463 + ">"
    let v5465 : string = "leptos::prelude::view! { " + v5464 + " }"
    let v5466 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5465 
    let v5467 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Main>> = v5466 |> unbox
    let v5468 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5469 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5467 v5468 
    let v5470 : string = "class=\"flex\""
    let v5471 : string = " " + v5470 + v52 + ""
    let v5472 : string = "menu_tabs.render ()"
    let v5473 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v5474 : bool = Fable.Core.RustInterop.emitRustExpr v5472 v5473 
    let v5475 : string = "leptos_router::hooks::use_location()"
    let v5476 : leptos_router_location_Location = Fable.Core.RustInterop.emitRustExpr () v5475 
    let v5477 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v5478 : (unit -> string) = closure41(v5476)
    let v5479 : leptos_prelude_ArcMemo<string> = Fable.Core.RustInterop.emitRustExpr v5478 v5477 
    let v5480 : string = "class=\"hidden\""
    let v5481 : string = " " + v5480 + v52 + ""
    let v5482 : string = "for=\"Tab\""
    let v5483 : string = "class=\"sr-only\""
    let v5484 : string = " " + v5482 + v52 + ""
    let v5485 : string = " " + v5483 + v5484 + ""
    let v5486 : string = "Tab"
    (* run_target_args'
    let v5491 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5492 : string = "&*$0"
    let v5493 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5486 v5492 
    let _run_target_args'_v5491 = v5493 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5494 : string = "&*$0"
    let v5495 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5486 v5494 
    let _run_target_args'_v5491 = v5495 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5496 : string = "&*$0"
    let v5497 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5486 v5496 
    let _run_target_args'_v5491 = v5497 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5499 : Ref<Str> = v5486 |> unbox<Ref<Str>>
    let _run_target_args'_v5491 = v5499 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5503 : Ref<Str> = v5486 |> unbox<Ref<Str>>
    let _run_target_args'_v5491 = v5503 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5507 : Ref<Str> = v5486 |> unbox<Ref<Str>>
    let _run_target_args'_v5491 = v5507 
    #endif
#else
    let v5511 : Ref<Str> = v5486 |> unbox<Ref<Str>>
    let _run_target_args'_v5491 = v5511 
    #endif
    let v5514 : Ref<Str> = _run_target_args'_v5491 
    (* run_target_args'
    let v5524 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5525 : string = "String::from($0)"
    let v5526 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5514 v5525 
    let _run_target_args'_v5524 = v5526 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5527 : string = "String::from($0)"
    let v5528 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5514 v5527 
    let _run_target_args'_v5524 = v5528 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5529 : string = "String::from($0)"
    let v5530 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5514 v5529 
    let _run_target_args'_v5524 = v5530 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5532 : std_string_String = v5514 |> unbox<std_string_String>
    let _run_target_args'_v5524 = v5532 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5536 : std_string_String = v5514 |> unbox<std_string_String>
    let _run_target_args'_v5524 = v5536 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5540 : std_string_String = v5514 |> unbox<std_string_String>
    let _run_target_args'_v5524 = v5540 
    #endif
#else
    let v5544 : std_string_String = v5514 |> unbox<std_string_String>
    let _run_target_args'_v5524 = v5544 
    #endif
    let v5547 : std_string_String = _run_target_args'_v5524 
    let v5553 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v5554 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5547 v5553 
    let v5555 : string = "v5554"
    let v5556 : string = v5555 + v52 
    let v5557 : string = v5556 + v52 
    let v5558 : string = "vec![" + v5557 + "]"
    let v5559 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5558 
    let v5560 : string = "leptos::prelude::Fragment::new($0)"
    let v5561 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5559 v5560 
    let v5562 : string = "leptos::prelude::AnyView::from($0)"
    let v5563 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5561 v5562 
    let v5564 : string = "label"
    let v5565 : string = "<" + v5564 + " " + v5485 + ">move || { v5563 }</" + v5564 + ">"
    let v5566 : string = "leptos::prelude::view! { " + v5565 + " }"
    let v5567 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5566 
    let v5568 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Label>> = v5567 |> unbox
    let v5569 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5570 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5568 v5569 
    let v5571 : string = "id=\"Tab\""
    let v5572 : string = "class=\"w-full rounded-md border-gray-200\""
    let v5573 : string = " " + v5571 + v52 + ""
    let v5574 : string = " " + v5572 + v5573 + ""
    let v5575 : (unit -> bool) = method285(v1751)
    let v5576 : string = "selected=v5575()"
    let v5577 : string = " " + v5576 + v52 + ""
    let v5578 : string = "Settings"
    (* run_target_args'
    let v5583 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5584 : string = "&*$0"
    let v5585 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5578 v5584 
    let _run_target_args'_v5583 = v5585 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5586 : string = "&*$0"
    let v5587 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5578 v5586 
    let _run_target_args'_v5583 = v5587 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5588 : string = "&*$0"
    let v5589 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5578 v5588 
    let _run_target_args'_v5583 = v5589 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5591 : Ref<Str> = v5578 |> unbox<Ref<Str>>
    let _run_target_args'_v5583 = v5591 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5595 : Ref<Str> = v5578 |> unbox<Ref<Str>>
    let _run_target_args'_v5583 = v5595 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5599 : Ref<Str> = v5578 |> unbox<Ref<Str>>
    let _run_target_args'_v5583 = v5599 
    #endif
#else
    let v5603 : Ref<Str> = v5578 |> unbox<Ref<Str>>
    let _run_target_args'_v5583 = v5603 
    #endif
    let v5606 : Ref<Str> = _run_target_args'_v5583 
    (* run_target_args'
    let v5616 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5617 : string = "String::from($0)"
    let v5618 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5606 v5617 
    let _run_target_args'_v5616 = v5618 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5619 : string = "String::from($0)"
    let v5620 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5606 v5619 
    let _run_target_args'_v5616 = v5620 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5621 : string = "String::from($0)"
    let v5622 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5606 v5621 
    let _run_target_args'_v5616 = v5622 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5624 : std_string_String = v5606 |> unbox<std_string_String>
    let _run_target_args'_v5616 = v5624 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5628 : std_string_String = v5606 |> unbox<std_string_String>
    let _run_target_args'_v5616 = v5628 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5632 : std_string_String = v5606 |> unbox<std_string_String>
    let _run_target_args'_v5616 = v5632 
    #endif
#else
    let v5636 : std_string_String = v5606 |> unbox<std_string_String>
    let _run_target_args'_v5616 = v5636 
    #endif
    let v5639 : std_string_String = _run_target_args'_v5616 
    let v5645 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v5646 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5639 v5645 
    let v5647 : string = "v5646"
    let v5648 : string = v5647 + v52 
    let v5649 : string = v5648 + v52 
    let v5650 : string = "vec![" + v5649 + "]"
    let v5651 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5650 
    let v5652 : string = "leptos::prelude::Fragment::new($0)"
    let v5653 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5651 v5652 
    let v5654 : string = "leptos::prelude::AnyView::from($0)"
    let v5655 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5653 v5654 
    let v5656 : string = "option"
    let v5657 : string = "<" + v5656 + " " + v5577 + ">move || { v5655 }</" + v5656 + ">"
    let v5658 : string = "leptos::prelude::view! { " + v5657 + " }"
    let v5659 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5658 
    let v5660 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Option>> = v5659 |> unbox
    let v5661 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5662 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5660 v5661 
    let v5663 : (unit -> bool) = method286(v1751)
    let v5664 : string = "selected=v5663()"
    let v5665 : string = " " + v5664 + v52 + ""
    let v5666 : string = "Transactions"
    (* run_target_args'
    let v5671 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5672 : string = "&*$0"
    let v5673 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5666 v5672 
    let _run_target_args'_v5671 = v5673 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5674 : string = "&*$0"
    let v5675 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5666 v5674 
    let _run_target_args'_v5671 = v5675 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5676 : string = "&*$0"
    let v5677 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5666 v5676 
    let _run_target_args'_v5671 = v5677 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5679 : Ref<Str> = v5666 |> unbox<Ref<Str>>
    let _run_target_args'_v5671 = v5679 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5683 : Ref<Str> = v5666 |> unbox<Ref<Str>>
    let _run_target_args'_v5671 = v5683 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5687 : Ref<Str> = v5666 |> unbox<Ref<Str>>
    let _run_target_args'_v5671 = v5687 
    #endif
#else
    let v5691 : Ref<Str> = v5666 |> unbox<Ref<Str>>
    let _run_target_args'_v5671 = v5691 
    #endif
    let v5694 : Ref<Str> = _run_target_args'_v5671 
    (* run_target_args'
    let v5704 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5705 : string = "String::from($0)"
    let v5706 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5694 v5705 
    let _run_target_args'_v5704 = v5706 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5707 : string = "String::from($0)"
    let v5708 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5694 v5707 
    let _run_target_args'_v5704 = v5708 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5709 : string = "String::from($0)"
    let v5710 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5694 v5709 
    let _run_target_args'_v5704 = v5710 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5712 : std_string_String = v5694 |> unbox<std_string_String>
    let _run_target_args'_v5704 = v5712 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5716 : std_string_String = v5694 |> unbox<std_string_String>
    let _run_target_args'_v5704 = v5716 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5720 : std_string_String = v5694 |> unbox<std_string_String>
    let _run_target_args'_v5704 = v5720 
    #endif
#else
    let v5724 : std_string_String = v5694 |> unbox<std_string_String>
    let _run_target_args'_v5704 = v5724 
    #endif
    let v5727 : std_string_String = _run_target_args'_v5704 
    let v5733 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v5734 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5727 v5733 
    let v5735 : string = "v5734"
    let v5736 : string = v5735 + v52 
    let v5737 : string = v5736 + v52 
    let v5738 : string = "vec![" + v5737 + "]"
    let v5739 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5738 
    let v5740 : string = "leptos::prelude::Fragment::new($0)"
    let v5741 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5739 v5740 
    let v5742 : string = "leptos::prelude::AnyView::from($0)"
    let v5743 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5741 v5742 
    let v5744 : string = "<" + v5656 + " " + v5665 + ">move || { v5743 }</" + v5656 + ">"
    let v5745 : string = "leptos::prelude::view! { " + v5744 + " }"
    let v5746 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5745 
    let v5747 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Option>> = v5746 |> unbox
    let v5748 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5749 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5747 v5748 
    let v5750 : (unit -> bool) = method287(v1751)
    let v5751 : string = "selected=v5750()"
    let v5752 : string = " " + v5751 + v52 + ""
    let v5753 : string = "Lists"
    (* run_target_args'
    let v5758 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5759 : string = "&*$0"
    let v5760 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5753 v5759 
    let _run_target_args'_v5758 = v5760 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5761 : string = "&*$0"
    let v5762 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5753 v5761 
    let _run_target_args'_v5758 = v5762 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5763 : string = "&*$0"
    let v5764 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5753 v5763 
    let _run_target_args'_v5758 = v5764 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5766 : Ref<Str> = v5753 |> unbox<Ref<Str>>
    let _run_target_args'_v5758 = v5766 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5770 : Ref<Str> = v5753 |> unbox<Ref<Str>>
    let _run_target_args'_v5758 = v5770 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5774 : Ref<Str> = v5753 |> unbox<Ref<Str>>
    let _run_target_args'_v5758 = v5774 
    #endif
#else
    let v5778 : Ref<Str> = v5753 |> unbox<Ref<Str>>
    let _run_target_args'_v5758 = v5778 
    #endif
    let v5781 : Ref<Str> = _run_target_args'_v5758 
    (* run_target_args'
    let v5791 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5792 : string = "String::from($0)"
    let v5793 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5781 v5792 
    let _run_target_args'_v5791 = v5793 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5794 : string = "String::from($0)"
    let v5795 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5781 v5794 
    let _run_target_args'_v5791 = v5795 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5796 : string = "String::from($0)"
    let v5797 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5781 v5796 
    let _run_target_args'_v5791 = v5797 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5799 : std_string_String = v5781 |> unbox<std_string_String>
    let _run_target_args'_v5791 = v5799 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5803 : std_string_String = v5781 |> unbox<std_string_String>
    let _run_target_args'_v5791 = v5803 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5807 : std_string_String = v5781 |> unbox<std_string_String>
    let _run_target_args'_v5791 = v5807 
    #endif
#else
    let v5811 : std_string_String = v5781 |> unbox<std_string_String>
    let _run_target_args'_v5791 = v5811 
    #endif
    let v5814 : std_string_String = _run_target_args'_v5791 
    let v5820 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v5821 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5814 v5820 
    let v5822 : string = "v5821"
    let v5823 : string = v5822 + v52 
    let v5824 : string = v5823 + v52 
    let v5825 : string = "vec![" + v5824 + "]"
    let v5826 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5825 
    let v5827 : string = "leptos::prelude::Fragment::new($0)"
    let v5828 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5826 v5827 
    let v5829 : string = "leptos::prelude::AnyView::from($0)"
    let v5830 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5828 v5829 
    let v5831 : string = "<" + v5656 + " " + v5752 + ">move || { v5830 }</" + v5656 + ">"
    let v5832 : string = "leptos::prelude::view! { " + v5831 + " }"
    let v5833 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5832 
    let v5834 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Option>> = v5833 |> unbox
    let v5835 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5836 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5834 v5835 
    let v5837 : (unit -> bool) = method288(v1751)
    let v5838 : string = "selected=v5837()"
    let v5839 : string = " " + v5838 + v52 + ""
    let v5840 : string = "Dice"
    (* run_target_args'
    let v5845 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5846 : string = "&*$0"
    let v5847 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5840 v5846 
    let _run_target_args'_v5845 = v5847 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5848 : string = "&*$0"
    let v5849 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5840 v5848 
    let _run_target_args'_v5845 = v5849 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5850 : string = "&*$0"
    let v5851 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5840 v5850 
    let _run_target_args'_v5845 = v5851 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5853 : Ref<Str> = v5840 |> unbox<Ref<Str>>
    let _run_target_args'_v5845 = v5853 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5857 : Ref<Str> = v5840 |> unbox<Ref<Str>>
    let _run_target_args'_v5845 = v5857 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5861 : Ref<Str> = v5840 |> unbox<Ref<Str>>
    let _run_target_args'_v5845 = v5861 
    #endif
#else
    let v5865 : Ref<Str> = v5840 |> unbox<Ref<Str>>
    let _run_target_args'_v5845 = v5865 
    #endif
    let v5868 : Ref<Str> = _run_target_args'_v5845 
    (* run_target_args'
    let v5878 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5879 : string = "String::from($0)"
    let v5880 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5868 v5879 
    let _run_target_args'_v5878 = v5880 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5881 : string = "String::from($0)"
    let v5882 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5868 v5881 
    let _run_target_args'_v5878 = v5882 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5883 : string = "String::from($0)"
    let v5884 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5868 v5883 
    let _run_target_args'_v5878 = v5884 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5886 : std_string_String = v5868 |> unbox<std_string_String>
    let _run_target_args'_v5878 = v5886 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5890 : std_string_String = v5868 |> unbox<std_string_String>
    let _run_target_args'_v5878 = v5890 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5894 : std_string_String = v5868 |> unbox<std_string_String>
    let _run_target_args'_v5878 = v5894 
    #endif
#else
    let v5898 : std_string_String = v5868 |> unbox<std_string_String>
    let _run_target_args'_v5878 = v5898 
    #endif
    let v5901 : std_string_String = _run_target_args'_v5878 
    let v5907 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v5908 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5901 v5907 
    let v5909 : string = "v5908"
    let v5910 : string = v5909 + v52 
    let v5911 : string = v5910 + v52 
    let v5912 : string = "vec![" + v5911 + "]"
    let v5913 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5912 
    let v5914 : string = "leptos::prelude::Fragment::new($0)"
    let v5915 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5913 v5914 
    let v5916 : string = "leptos::prelude::AnyView::from($0)"
    let v5917 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5915 v5916 
    let v5918 : string = "<" + v5656 + " " + v5839 + ">move || { v5917 }</" + v5656 + ">"
    let v5919 : string = "leptos::prelude::view! { " + v5918 + " }"
    let v5920 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5919 
    let v5921 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Option>> = v5920 |> unbox
    let v5922 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5923 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5921 v5922 
    let v5924 : string = "v5662"
    let v5925 : string = v5924 + v52 
    let v5926 : string = v5925 + v52 
    let v5927 : string = "v5749"
    let v5928 : string = ", "
    let v5929 : string = v5927 + v5928 
    let v5930 : string = v5929 + v5926 
    let v5931 : string = "v5836"
    let v5932 : string = v5931 + v5928 
    let v5933 : string = v5932 + v5930 
    let v5934 : string = "v5923"
    let v5935 : string = v5934 + v5928 
    let v5936 : string = v5935 + v5933 
    let v5937 : string = "vec![" + v5936 + "]"
    let v5938 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5937 
    let v5939 : string = "leptos::prelude::Fragment::new($0)"
    let v5940 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5938 v5939 
    let v5941 : string = "leptos::prelude::AnyView::from($0)"
    let v5942 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5940 v5941 
    let v5943 : string = "select"
    let v5944 : string = "<" + v5943 + " " + v5574 + ">move || { v5942 }</" + v5943 + ">"
    let v5945 : string = "leptos::prelude::view! { " + v5944 + " }"
    let v5946 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5945 
    let v5947 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Select>> = v5946 |> unbox
    let v5948 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5949 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5947 v5948 
    let v5950 : string = "v5949"
    let v5951 : string = v5950 + v52 
    let v5952 : string = v5951 + v52 
    let v5953 : string = "v5570"
    let v5954 : string = v5953 + v5928 
    let v5955 : string = v5954 + v5952 
    let v5956 : string = "vec![" + v5955 + "]"
    let v5957 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5956 
    let v5958 : string = "leptos::prelude::Fragment::new($0)"
    let v5959 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5957 v5958 
    let v5960 : string = "leptos::prelude::AnyView::from($0)"
    let v5961 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5959 v5960 
    let v5962 : string = "div"
    let v5963 : string = "<" + v5962 + " " + v5481 + ">move || { v5961 }</" + v5962 + ">"
    let v5964 : string = "leptos::prelude::view! { " + v5963 + " }"
    let v5965 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5964 
    let v5966 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5965 |> unbox
    let v5967 : string = "class=\"flex flex-1 [overflow-x:auto] [overflow-y:hidden]\""
    let v5968 : string = " " + v5967 + v52 + ""
    let v5969 : string = "class=\"flex flex-1 border-t border-gray-200\""
    let v5970 : string = " " + v5969 + v52 + ""
    let v5971 : string = "class=\"-mb-px flex [flex-flow:wrap] [flex-grow:1] [flex-shrink:0] gap-[3px] [overflow-wrap:anywhere]\""
    let v5972 : string = "aria-label=\"Tabs\""
    let v5973 : string = " " + v5971 + v52 + ""
    let v5974 : string = " " + v5972 + v5973 + ""
    let v5975 : string = "$0"
    let v5976 : (unit -> string) = closure348()
    let v5977 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v5976 v5975 
    let v5978 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v5979 : string = "fill=\"none\""
    let v5980 : string = "viewBox=\"0 0 24 24\""
    let v5981 : string = "stroke-width=\"1.5\""
    let v5982 : string = "stroke=\"currentColor\""
    let v5983 : string = "class=move || \" \".to_owned() + &v5977(())"
    let v5984 : string = " " + v5978 + v52 + ""
    let v5985 : string = " " + v5979 + v5984 + ""
    let v5986 : string = " " + v5980 + v5985 + ""
    let v5987 : string = " " + v5981 + v5986 + ""
    let v5988 : string = " " + v5982 + v5987 + ""
    let v5989 : string = " " + v5983 + v5988 + ""
    let v5990 : string = "stroke-linecap=\"round\""
    let v5991 : string = "stroke-linejoin=\"round\""
    let v5992 : string = "d=\"M10.343 3.94c.09-.542.56-.94 1.11-.94h1.093c.55 0 1.02.398 1.11.94l.149.894c.07.424.384.764.78.93.398.164.855.142 1.205-.108l.737-.527a1.125 1.125 0 011.45.12l.773.774c.39.389.44 1.002.12 1.45l-.527.737c-.25.35-.272.806-.107 1.204.165.397.505.71.93.78l.893.15c.543.09.94.56.94 1.109v1.094c0 .55-.397 1.02-.94 1.11l-.893.149c-.425.07-.765.383-.93.78-.165.398-.143.854.107 1.204l.527.738c.32.447.269 1.06-.12 1.45l-.774.773a1.125 1.125 0 01-1.449.12l-.738-.527c-.35-.25-.806-.272-1.203-.107-.397.165-.71.505-.781.929l-.149.894c-.09.542-.56.94-1.11.94h-1.094c-.55 0-1.019-.398-1.11-.94l-.148-.894c-.071-.424-.384-.764-.781-.93-.398-.164-.854-.142-1.204.108l-.738.527c-.447.32-1.06.269-1.45-.12l-.773-.774a1.125 1.125 0 01-.12-1.45l.527-.737c.25-.35.273-.806.108-1.204-.165-.397-.505-.71-.93-.78l-.894-.15c-.542-.09-.94-.56-.94-1.109v-1.094c0-.55.398-1.02.94-1.11l.894-.149c.424-.07.765-.383.93-.78.165-.398.143-.854-.107-1.204l-.527-.738a1.125 1.125 0 01.12-1.45l.773-.773a1.125 1.125 0 011.45-.12l.737.527c.35.25.807.272 1.204.107.397-.165.71-.505.78-.929l.15-.894z\""
    let v5993 : string = " " + v5990 + v52 + ""
    let v5994 : string = " " + v5991 + v5993 + ""
    let v5995 : string = " " + v5992 + v5994 + ""
    let v5996 : string = "vec![" + v52 + "]"
    let v5997 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5996 
    let v5998 : string = "leptos::prelude::Fragment::new($0)"
    let v5999 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5997 v5998 
    let v6000 : string = "leptos::prelude::AnyView::from($0)"
    let v6001 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5999 v6000 
    let v6002 : string = "path"
    let v6003 : string = "<" + v6002 + " " + v5995 + ">move || { v6001 }</" + v6002 + ">"
    let v6004 : string = "leptos::prelude::view! { " + v6003 + " }"
    let v6005 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6004 
    let v6006 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v6005 |> unbox
    let v6007 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6008 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6006 v6007 
    let v6009 : string = "stroke-linecap=\"round\""
    let v6010 : string = "stroke-linejoin=\"round\""
    let v6011 : string = "d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\""
    let v6012 : string = " " + v6009 + v52 + ""
    let v6013 : string = " " + v6010 + v6012 + ""
    let v6014 : string = " " + v6011 + v6013 + ""
    let v6015 : string = "vec![" + v52 + "]"
    let v6016 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6015 
    let v6017 : string = "leptos::prelude::Fragment::new($0)"
    let v6018 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6016 v6017 
    let v6019 : string = "leptos::prelude::AnyView::from($0)"
    let v6020 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6018 v6019 
    let v6021 : string = "<" + v6002 + " " + v6014 + ">move || { v6020 }</" + v6002 + ">"
    let v6022 : string = "leptos::prelude::view! { " + v6021 + " }"
    let v6023 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6022 
    let v6024 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v6023 |> unbox
    let v6025 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6026 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6024 v6025 
    let v6027 : string = "v6026"
    let v6028 : string = v6027 + v52 
    let v6029 : string = v6028 + v52 
    let v6030 : string = "v6008"
    let v6031 : string = v6030 + v5928 
    let v6032 : string = v6031 + v6029 
    let v6033 : string = "vec![" + v6032 + "]"
    let v6034 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6033 
    let v6035 : string = "leptos::prelude::Fragment::new($0)"
    let v6036 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6034 v6035 
    let v6037 : string = "leptos::prelude::AnyView::from($0)"
    let v6038 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6036 v6037 
    let v6039 : string = "svg"
    let v6040 : string = "<" + v6039 + " " + v5989 + ">move || { v6038 }</" + v6039 + ">"
    let v6041 : string = "leptos::prelude::view! { " + v6040 + " }"
    let v6042 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6041 
    let v6043 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v6042 |> unbox
    let v6044 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6045 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6043 v6044 
    let v6046 : string = "v6045"
    let v6047 : string = v6046 + v52 
    let v6048 : string = v6047 + v52 
    let v6049 : string = "vec![" + v6048 + "]"
    let v6050 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6049 
    let v6051 : string = "leptos::prelude::Fragment::new($0)"
    let v6052 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6050 v6051 
    let v6053 : (unit -> std_string_String) = closure349(v5479)
    let v6054 : string = "let v6053 = $0"
    Fable.Core.RustInterop.emitRustExpr v6053 v6054 
    let v6055 : string = "$0"
    let v6056 : (unit -> bool) = closure350(v1751)
    let v6057 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v6056 v6055 
    let v6058 : string = "$0"
    let v6059 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure351(v1751)
    let v6060 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v6059 v6058 
    let v6061 : string = "href=move || v6053()"
    let v6062 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] flex-1 gap-2 border-t-2 [white-space:nowrap] mb-[11px] pt-[8px] pr-[15px] pl-[15px] text-sm font-medium \".to_owned() + v6060(())"
    let v6063 : string = "aria-current=move || if v6057(()) { \"page\" } else { \"\" }"
    let v6064 : string = " " + v6061 + v52 + ""
    let v6065 : string = " " + v6062 + v6064 + ""
    let v6066 : string = " " + v6063 + v6065 + ""
    let v6067 : string = "leptos::prelude::AnyView::from($0)"
    let v6068 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6052 v6067 
    (* run_target_args'
    let v6073 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6074 : string = "&*$0"
    let v6075 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5578 v6074 
    let _run_target_args'_v6073 = v6075 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6076 : string = "&*$0"
    let v6077 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5578 v6076 
    let _run_target_args'_v6073 = v6077 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6078 : string = "&*$0"
    let v6079 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5578 v6078 
    let _run_target_args'_v6073 = v6079 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6081 : Ref<Str> = v5578 |> unbox<Ref<Str>>
    let _run_target_args'_v6073 = v6081 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6085 : Ref<Str> = v5578 |> unbox<Ref<Str>>
    let _run_target_args'_v6073 = v6085 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6089 : Ref<Str> = v5578 |> unbox<Ref<Str>>
    let _run_target_args'_v6073 = v6089 
    #endif
#else
    let v6093 : Ref<Str> = v5578 |> unbox<Ref<Str>>
    let _run_target_args'_v6073 = v6093 
    #endif
    let v6096 : Ref<Str> = _run_target_args'_v6073 
    (* run_target_args'
    let v6106 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6107 : string = "String::from($0)"
    let v6108 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6096 v6107 
    let _run_target_args'_v6106 = v6108 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6109 : string = "String::from($0)"
    let v6110 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6096 v6109 
    let _run_target_args'_v6106 = v6110 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6111 : string = "String::from($0)"
    let v6112 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6096 v6111 
    let _run_target_args'_v6106 = v6112 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6114 : std_string_String = v6096 |> unbox<std_string_String>
    let _run_target_args'_v6106 = v6114 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6118 : std_string_String = v6096 |> unbox<std_string_String>
    let _run_target_args'_v6106 = v6118 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6122 : std_string_String = v6096 |> unbox<std_string_String>
    let _run_target_args'_v6106 = v6122 
    #endif
#else
    let v6126 : std_string_String = v6096 |> unbox<std_string_String>
    let _run_target_args'_v6106 = v6126 
    #endif
    let v6129 : std_string_String = _run_target_args'_v6106 
    let v6135 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v6136 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6129 v6135 
    let v6137 : string = "v6136"
    let v6138 : string = v6137 + v52 
    let v6139 : string = v6138 + v52 
    let v6140 : string = "v6068"
    let v6141 : string = v6140 + v5928 
    let v6142 : string = v6141 + v6139 
    let v6143 : string = "vec![" + v6142 + "]"
    let v6144 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6143 
    let v6145 : string = "leptos::prelude::Fragment::new($0)"
    let v6146 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6144 v6145 
    let v6147 : string = "leptos::prelude::AnyView::from($0)"
    let v6148 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6146 v6147 
    let v6149 : string = "a"
    let v6150 : string = "<" + v6149 + " " + v6066 + ">move || { v6148 }</" + v6149 + ">"
    let v6151 : string = "leptos::prelude::view! { " + v6150 + " }"
    let v6152 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6151 
    let v6153 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_A>> = v6152 |> unbox
    let v6154 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6155 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6153 v6154 
    let v6156 : string = "$0"
    let v6157 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v5976 v6156 
    let v6158 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v6159 : string = "fill=\"none\""
    let v6160 : string = "height=\"100%\""
    let v6161 : string = "viewBox=\"0 0 24 24\""
    let v6162 : string = "stroke-width=\"1.5\""
    let v6163 : string = "stroke=\"currentColor\""
    let v6164 : string = "class=move || \"text-gray-700 \".to_owned() + &v6157(())"
    let v6165 : string = " " + v6158 + v52 + ""
    let v6166 : string = " " + v6159 + v6165 + ""
    let v6167 : string = " " + v6160 + v6166 + ""
    let v6168 : string = " " + v6161 + v6167 + ""
    let v6169 : string = " " + v6162 + v6168 + ""
    let v6170 : string = " " + v6163 + v6169 + ""
    let v6171 : string = " " + v6164 + v6170 + ""
    let v6172 : string = "stroke-linecap=\"round\""
    let v6173 : string = "stroke-linejoin=\"round\""
    let v6174 : string = "d=\"M4 12h16m-7-7l7 7-7 7m-2-14l-7 7 7 7\""
    let v6175 : string = " " + v6172 + v52 + ""
    let v6176 : string = " " + v6173 + v6175 + ""
    let v6177 : string = " " + v6174 + v6176 + ""
    let v6178 : string = "vec![" + v52 + "]"
    let v6179 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6178 
    let v6180 : string = "leptos::prelude::Fragment::new($0)"
    let v6181 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6179 v6180 
    let v6182 : string = "leptos::prelude::AnyView::from($0)"
    let v6183 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6181 v6182 
    let v6184 : string = "<" + v6002 + " " + v6177 + ">move || { v6183 }</" + v6002 + ">"
    let v6185 : string = "leptos::prelude::view! { " + v6184 + " }"
    let v6186 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6185 
    let v6187 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v6186 |> unbox
    let v6188 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6189 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6187 v6188 
    let v6190 : string = "v6189"
    let v6191 : string = v6190 + v52 
    let v6192 : string = v6191 + v52 
    let v6193 : string = "vec![" + v6192 + "]"
    let v6194 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6193 
    let v6195 : string = "leptos::prelude::Fragment::new($0)"
    let v6196 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6194 v6195 
    let v6197 : string = "leptos::prelude::AnyView::from($0)"
    let v6198 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6196 v6197 
    let v6199 : string = "<" + v6039 + " " + v6171 + ">move || { v6198 }</" + v6039 + ">"
    let v6200 : string = "leptos::prelude::view! { " + v6199 + " }"
    let v6201 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6200 
    let v6202 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v6201 |> unbox
    let v6203 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6204 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6202 v6203 
    let v6205 : string = "v6204"
    let v6206 : string = v6205 + v52 
    let v6207 : string = v6206 + v52 
    let v6208 : string = "vec![" + v6207 + "]"
    let v6209 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6208 
    let v6210 : string = "leptos::prelude::Fragment::new($0)"
    let v6211 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6209 v6210 
    let v6212 : (unit -> std_string_String) = closure352(v5479)
    let v6213 : string = "let v6212 = $0"
    Fable.Core.RustInterop.emitRustExpr v6212 v6213 
    let v6214 : string = "$0"
    let v6215 : (unit -> bool) = closure353(v1751)
    let v6216 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v6215 v6214 
    let v6217 : string = "$0"
    let v6218 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure354(v1751)
    let v6219 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v6218 v6217 
    let v6220 : string = "href=move || v6212()"
    let v6221 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] flex-1 gap-2 border-t-2 [white-space:nowrap] mb-[11px] pt-[8px] pr-[15px] pl-[15px] text-sm font-medium \".to_owned() + v6219(())"
    let v6222 : string = "aria-current=move || if v6216(()) { \"page\" } else { \"\" }"
    let v6223 : string = " " + v6220 + v52 + ""
    let v6224 : string = " " + v6221 + v6223 + ""
    let v6225 : string = " " + v6222 + v6224 + ""
    let v6226 : string = "leptos::prelude::AnyView::from($0)"
    let v6227 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6211 v6226 
    (* run_target_args'
    let v6232 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6233 : string = "&*$0"
    let v6234 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5666 v6233 
    let _run_target_args'_v6232 = v6234 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6235 : string = "&*$0"
    let v6236 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5666 v6235 
    let _run_target_args'_v6232 = v6236 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6237 : string = "&*$0"
    let v6238 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5666 v6237 
    let _run_target_args'_v6232 = v6238 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6240 : Ref<Str> = v5666 |> unbox<Ref<Str>>
    let _run_target_args'_v6232 = v6240 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6244 : Ref<Str> = v5666 |> unbox<Ref<Str>>
    let _run_target_args'_v6232 = v6244 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6248 : Ref<Str> = v5666 |> unbox<Ref<Str>>
    let _run_target_args'_v6232 = v6248 
    #endif
#else
    let v6252 : Ref<Str> = v5666 |> unbox<Ref<Str>>
    let _run_target_args'_v6232 = v6252 
    #endif
    let v6255 : Ref<Str> = _run_target_args'_v6232 
    (* run_target_args'
    let v6265 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6266 : string = "String::from($0)"
    let v6267 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6255 v6266 
    let _run_target_args'_v6265 = v6267 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6268 : string = "String::from($0)"
    let v6269 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6255 v6268 
    let _run_target_args'_v6265 = v6269 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6270 : string = "String::from($0)"
    let v6271 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6255 v6270 
    let _run_target_args'_v6265 = v6271 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6273 : std_string_String = v6255 |> unbox<std_string_String>
    let _run_target_args'_v6265 = v6273 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6277 : std_string_String = v6255 |> unbox<std_string_String>
    let _run_target_args'_v6265 = v6277 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6281 : std_string_String = v6255 |> unbox<std_string_String>
    let _run_target_args'_v6265 = v6281 
    #endif
#else
    let v6285 : std_string_String = v6255 |> unbox<std_string_String>
    let _run_target_args'_v6265 = v6285 
    #endif
    let v6288 : std_string_String = _run_target_args'_v6265 
    let v6294 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v6295 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6288 v6294 
    let v6296 : string = "v6295"
    let v6297 : string = v6296 + v52 
    let v6298 : string = v6297 + v52 
    let v6299 : string = "v6227"
    let v6300 : string = v6299 + v5928 
    let v6301 : string = v6300 + v6298 
    let v6302 : string = "vec![" + v6301 + "]"
    let v6303 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6302 
    let v6304 : string = "leptos::prelude::Fragment::new($0)"
    let v6305 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6303 v6304 
    let v6306 : string = "leptos::prelude::AnyView::from($0)"
    let v6307 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6305 v6306 
    let v6308 : string = "<" + v6149 + " " + v6225 + ">move || { v6307 }</" + v6149 + ">"
    let v6309 : string = "leptos::prelude::view! { " + v6308 + " }"
    let v6310 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6309 
    let v6311 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_A>> = v6310 |> unbox
    let v6312 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6313 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6311 v6312 
    let v6314 : string = "$0"
    let v6315 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v5976 v6314 
    let v6316 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v6317 : string = "fill=\"none\""
    let v6318 : string = "height=\"100%\""
    let v6319 : string = "viewBox=\"0 0 24 24\""
    let v6320 : string = "stroke-width=\"1.5\""
    let v6321 : string = "stroke=\"currentColor\""
    let v6322 : string = "class=move || \"text-gray-700 \".to_owned() + &v6315(())"
    let v6323 : string = " " + v6316 + v52 + ""
    let v6324 : string = " " + v6317 + v6323 + ""
    let v6325 : string = " " + v6318 + v6324 + ""
    let v6326 : string = " " + v6319 + v6325 + ""
    let v6327 : string = " " + v6320 + v6326 + ""
    let v6328 : string = " " + v6321 + v6327 + ""
    let v6329 : string = " " + v6322 + v6328 + ""
    let v6330 : string = "stroke-linecap=\"round\""
    let v6331 : string = "stroke-linejoin=\"round\""
    let v6332 : string = "d=\"M4.75 6.75h14.5M4.75 12h14.5M4.75 17.25h14.5\""
    let v6333 : string = " " + v6330 + v52 + ""
    let v6334 : string = " " + v6331 + v6333 + ""
    let v6335 : string = " " + v6332 + v6334 + ""
    let v6336 : string = "vec![" + v52 + "]"
    let v6337 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6336 
    let v6338 : string = "leptos::prelude::Fragment::new($0)"
    let v6339 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6337 v6338 
    let v6340 : string = "leptos::prelude::AnyView::from($0)"
    let v6341 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6339 v6340 
    let v6342 : string = "<" + v6002 + " " + v6335 + ">move || { v6341 }</" + v6002 + ">"
    let v6343 : string = "leptos::prelude::view! { " + v6342 + " }"
    let v6344 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6343 
    let v6345 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v6344 |> unbox
    let v6346 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6347 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6345 v6346 
    let v6348 : string = "cx=\"3\""
    let v6349 : string = "cy=\"6.75\""
    let v6350 : string = "r=\"1\""
    let v6351 : string = "fill=\"currentColor\""
    let v6352 : string = " " + v6348 + v52 + ""
    let v6353 : string = " " + v6349 + v6352 + ""
    let v6354 : string = " " + v6350 + v6353 + ""
    let v6355 : string = " " + v6351 + v6354 + ""
    let v6356 : string = "vec![" + v52 + "]"
    let v6357 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6356 
    let v6358 : string = "leptos::prelude::Fragment::new($0)"
    let v6359 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6357 v6358 
    let v6360 : string = "leptos::prelude::AnyView::from($0)"
    let v6361 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6359 v6360 
    let v6362 : string = "circle"
    let v6363 : string = "<" + v6362 + " " + v6355 + ">move || { v6361 }</" + v6362 + ">"
    let v6364 : string = "leptos::prelude::view! { " + v6363 + " }"
    let v6365 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6364 
    let v6366 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6365 |> unbox
    let v6367 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6368 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6366 v6367 
    let v6369 : string = "cx=\"3\""
    let v6370 : string = "cy=\"12\""
    let v6371 : string = "r=\"1\""
    let v6372 : string = "fill=\"currentColor\""
    let v6373 : string = " " + v6369 + v52 + ""
    let v6374 : string = " " + v6370 + v6373 + ""
    let v6375 : string = " " + v6371 + v6374 + ""
    let v6376 : string = " " + v6372 + v6375 + ""
    let v6377 : string = "vec![" + v52 + "]"
    let v6378 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6377 
    let v6379 : string = "leptos::prelude::Fragment::new($0)"
    let v6380 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6378 v6379 
    let v6381 : string = "leptos::prelude::AnyView::from($0)"
    let v6382 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6380 v6381 
    let v6383 : string = "<" + v6362 + " " + v6376 + ">move || { v6382 }</" + v6362 + ">"
    let v6384 : string = "leptos::prelude::view! { " + v6383 + " }"
    let v6385 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6384 
    let v6386 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6385 |> unbox
    let v6387 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6388 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6386 v6387 
    let v6389 : string = "cx=\"3\""
    let v6390 : string = "cy=\"17.25\""
    let v6391 : string = "r=\"1\""
    let v6392 : string = "fill=\"currentColor\""
    let v6393 : string = " " + v6389 + v52 + ""
    let v6394 : string = " " + v6390 + v6393 + ""
    let v6395 : string = " " + v6391 + v6394 + ""
    let v6396 : string = " " + v6392 + v6395 + ""
    let v6397 : string = "vec![" + v52 + "]"
    let v6398 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6397 
    let v6399 : string = "leptos::prelude::Fragment::new($0)"
    let v6400 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6398 v6399 
    let v6401 : string = "leptos::prelude::AnyView::from($0)"
    let v6402 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6400 v6401 
    let v6403 : string = "<" + v6362 + " " + v6396 + ">move || { v6402 }</" + v6362 + ">"
    let v6404 : string = "leptos::prelude::view! { " + v6403 + " }"
    let v6405 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6404 
    let v6406 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6405 |> unbox
    let v6407 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6408 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6406 v6407 
    let v6409 : string = "v6408"
    let v6410 : string = v6409 + v52 
    let v6411 : string = v6410 + v52 
    let v6412 : string = "v6388"
    let v6413 : string = v6412 + v5928 
    let v6414 : string = v6413 + v6411 
    let v6415 : string = "v6368"
    let v6416 : string = v6415 + v5928 
    let v6417 : string = v6416 + v6414 
    let v6418 : string = "v6347"
    let v6419 : string = v6418 + v5928 
    let v6420 : string = v6419 + v6417 
    let v6421 : string = "vec![" + v6420 + "]"
    let v6422 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6421 
    let v6423 : string = "leptos::prelude::Fragment::new($0)"
    let v6424 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6422 v6423 
    let v6425 : string = "leptos::prelude::AnyView::from($0)"
    let v6426 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6424 v6425 
    let v6427 : string = "<" + v6039 + " " + v6329 + ">move || { v6426 }</" + v6039 + ">"
    let v6428 : string = "leptos::prelude::view! { " + v6427 + " }"
    let v6429 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6428 
    let v6430 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v6429 |> unbox
    let v6431 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6432 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6430 v6431 
    let v6433 : string = "v6432"
    let v6434 : string = v6433 + v52 
    let v6435 : string = v6434 + v52 
    let v6436 : string = "vec![" + v6435 + "]"
    let v6437 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6436 
    let v6438 : string = "leptos::prelude::Fragment::new($0)"
    let v6439 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6437 v6438 
    let v6440 : (unit -> std_string_String) = closure355(v5479)
    let v6441 : string = "let v6440 = $0"
    Fable.Core.RustInterop.emitRustExpr v6440 v6441 
    let v6442 : string = "$0"
    let v6443 : (unit -> bool) = closure356(v1751)
    let v6444 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v6443 v6442 
    let v6445 : string = "$0"
    let v6446 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure357(v1751)
    let v6447 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v6446 v6445 
    let v6448 : string = "href=move || v6440()"
    let v6449 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] flex-1 gap-2 border-t-2 [white-space:nowrap] mb-[11px] pt-[8px] pr-[15px] pl-[15px] text-sm font-medium \".to_owned() + v6447(())"
    let v6450 : string = "aria-current=move || if v6444(()) { \"page\" } else { \"\" }"
    let v6451 : string = " " + v6448 + v52 + ""
    let v6452 : string = " " + v6449 + v6451 + ""
    let v6453 : string = " " + v6450 + v6452 + ""
    let v6454 : string = "leptos::prelude::AnyView::from($0)"
    let v6455 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6439 v6454 
    (* run_target_args'
    let v6460 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6461 : string = "&*$0"
    let v6462 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5753 v6461 
    let _run_target_args'_v6460 = v6462 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6463 : string = "&*$0"
    let v6464 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5753 v6463 
    let _run_target_args'_v6460 = v6464 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6465 : string = "&*$0"
    let v6466 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5753 v6465 
    let _run_target_args'_v6460 = v6466 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6468 : Ref<Str> = v5753 |> unbox<Ref<Str>>
    let _run_target_args'_v6460 = v6468 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6472 : Ref<Str> = v5753 |> unbox<Ref<Str>>
    let _run_target_args'_v6460 = v6472 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6476 : Ref<Str> = v5753 |> unbox<Ref<Str>>
    let _run_target_args'_v6460 = v6476 
    #endif
#else
    let v6480 : Ref<Str> = v5753 |> unbox<Ref<Str>>
    let _run_target_args'_v6460 = v6480 
    #endif
    let v6483 : Ref<Str> = _run_target_args'_v6460 
    (* run_target_args'
    let v6493 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6494 : string = "String::from($0)"
    let v6495 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6483 v6494 
    let _run_target_args'_v6493 = v6495 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6496 : string = "String::from($0)"
    let v6497 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6483 v6496 
    let _run_target_args'_v6493 = v6497 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6498 : string = "String::from($0)"
    let v6499 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6483 v6498 
    let _run_target_args'_v6493 = v6499 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6501 : std_string_String = v6483 |> unbox<std_string_String>
    let _run_target_args'_v6493 = v6501 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6505 : std_string_String = v6483 |> unbox<std_string_String>
    let _run_target_args'_v6493 = v6505 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6509 : std_string_String = v6483 |> unbox<std_string_String>
    let _run_target_args'_v6493 = v6509 
    #endif
#else
    let v6513 : std_string_String = v6483 |> unbox<std_string_String>
    let _run_target_args'_v6493 = v6513 
    #endif
    let v6516 : std_string_String = _run_target_args'_v6493 
    let v6522 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v6523 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6516 v6522 
    let v6524 : string = "v6523"
    let v6525 : string = v6524 + v52 
    let v6526 : string = v6525 + v52 
    let v6527 : string = "v6455"
    let v6528 : string = v6527 + v5928 
    let v6529 : string = v6528 + v6526 
    let v6530 : string = "vec![" + v6529 + "]"
    let v6531 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6530 
    let v6532 : string = "leptos::prelude::Fragment::new($0)"
    let v6533 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6531 v6532 
    let v6534 : string = "leptos::prelude::AnyView::from($0)"
    let v6535 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6533 v6534 
    let v6536 : string = "<" + v6149 + " " + v6453 + ">move || { v6535 }</" + v6149 + ">"
    let v6537 : string = "leptos::prelude::view! { " + v6536 + " }"
    let v6538 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6537 
    let v6539 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_A>> = v6538 |> unbox
    let v6540 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6541 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6539 v6540 
    let v6542 : string = "$0"
    let v6543 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v5976 v6542 
    let v6544 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v6545 : string = "fill=\"none\""
    let v6546 : string = "viewBox=\"0 0 24 24\""
    let v6547 : string = "stroke-width=\"1.5\""
    let v6548 : string = "stroke=\"currentColor\""
    let v6549 : string = "class=move || \" \".to_owned() + &v6543(())"
    let v6550 : string = " " + v6544 + v52 + ""
    let v6551 : string = " " + v6545 + v6550 + ""
    let v6552 : string = " " + v6546 + v6551 + ""
    let v6553 : string = " " + v6547 + v6552 + ""
    let v6554 : string = " " + v6548 + v6553 + ""
    let v6555 : string = " " + v6549 + v6554 + ""
    let v6556 : string = "x=\"3\""
    let v6557 : string = "y=\"3\""
    let v6558 : string = "width=\"18\""
    let v6559 : string = "height=\"18\""
    let v6560 : string = "rx=\"2\""
    let v6561 : string = "stroke-linecap=\"round\""
    let v6562 : string = "stroke-linejoin=\"round\""
    let v6563 : string = " " + v6556 + v52 + ""
    let v6564 : string = " " + v6557 + v6563 + ""
    let v6565 : string = " " + v6558 + v6564 + ""
    let v6566 : string = " " + v6559 + v6565 + ""
    let v6567 : string = " " + v6560 + v6566 + ""
    let v6568 : string = " " + v6561 + v6567 + ""
    let v6569 : string = " " + v6562 + v6568 + ""
    let v6570 : string = "vec![" + v52 + "]"
    let v6571 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6570 
    let v6572 : string = "leptos::prelude::Fragment::new($0)"
    let v6573 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6571 v6572 
    let v6574 : string = "leptos::prelude::AnyView::from($0)"
    let v6575 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6573 v6574 
    let v6576 : string = "rect"
    let v6577 : string = "<" + v6576 + " " + v6569 + ">move || { v6575 }</" + v6576 + ">"
    let v6578 : string = "leptos::prelude::view! { " + v6577 + " }"
    let v6579 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6578 
    let v6580 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v6579 |> unbox
    let v6581 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6582 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6580 v6581 
    let v6583 : string = "cx=\"7.5\""
    let v6584 : string = "cy=\"7.5\""
    let v6585 : string = "r=\"1.5\""
    let v6586 : string = "fill=\"currentColor\""
    let v6587 : string = " " + v6583 + v52 + ""
    let v6588 : string = " " + v6584 + v6587 + ""
    let v6589 : string = " " + v6585 + v6588 + ""
    let v6590 : string = " " + v6586 + v6589 + ""
    let v6591 : string = "vec![" + v52 + "]"
    let v6592 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6591 
    let v6593 : string = "leptos::prelude::Fragment::new($0)"
    let v6594 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6592 v6593 
    let v6595 : string = "leptos::prelude::AnyView::from($0)"
    let v6596 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6594 v6595 
    let v6597 : string = "<" + v6362 + " " + v6590 + ">move || { v6596 }</" + v6362 + ">"
    let v6598 : string = "leptos::prelude::view! { " + v6597 + " }"
    let v6599 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6598 
    let v6600 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6599 |> unbox
    let v6601 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6602 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6600 v6601 
    let v6603 : string = "cx=\"16.5\""
    let v6604 : string = "cy=\"7.5\""
    let v6605 : string = "r=\"1.5\""
    let v6606 : string = "fill=\"currentColor\""
    let v6607 : string = " " + v6603 + v52 + ""
    let v6608 : string = " " + v6604 + v6607 + ""
    let v6609 : string = " " + v6605 + v6608 + ""
    let v6610 : string = " " + v6606 + v6609 + ""
    let v6611 : string = "vec![" + v52 + "]"
    let v6612 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6611 
    let v6613 : string = "leptos::prelude::Fragment::new($0)"
    let v6614 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6612 v6613 
    let v6615 : string = "leptos::prelude::AnyView::from($0)"
    let v6616 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6614 v6615 
    let v6617 : string = "<" + v6362 + " " + v6610 + ">move || { v6616 }</" + v6362 + ">"
    let v6618 : string = "leptos::prelude::view! { " + v6617 + " }"
    let v6619 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6618 
    let v6620 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6619 |> unbox
    let v6621 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6622 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6620 v6621 
    let v6623 : string = "cx=\"12\""
    let v6624 : string = "cy=\"12\""
    let v6625 : string = "r=\"1.5\""
    let v6626 : string = "fill=\"currentColor\""
    let v6627 : string = " " + v6623 + v52 + ""
    let v6628 : string = " " + v6624 + v6627 + ""
    let v6629 : string = " " + v6625 + v6628 + ""
    let v6630 : string = " " + v6626 + v6629 + ""
    let v6631 : string = "vec![" + v52 + "]"
    let v6632 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6631 
    let v6633 : string = "leptos::prelude::Fragment::new($0)"
    let v6634 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6632 v6633 
    let v6635 : string = "leptos::prelude::AnyView::from($0)"
    let v6636 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6634 v6635 
    let v6637 : string = "<" + v6362 + " " + v6630 + ">move || { v6636 }</" + v6362 + ">"
    let v6638 : string = "leptos::prelude::view! { " + v6637 + " }"
    let v6639 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6638 
    let v6640 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6639 |> unbox
    let v6641 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6642 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6640 v6641 
    let v6643 : string = "cx=\"7.5\""
    let v6644 : string = "cy=\"16.5\""
    let v6645 : string = "r=\"1.5\""
    let v6646 : string = "fill=\"currentColor\""
    let v6647 : string = " " + v6643 + v52 + ""
    let v6648 : string = " " + v6644 + v6647 + ""
    let v6649 : string = " " + v6645 + v6648 + ""
    let v6650 : string = " " + v6646 + v6649 + ""
    let v6651 : string = "vec![" + v52 + "]"
    let v6652 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6651 
    let v6653 : string = "leptos::prelude::Fragment::new($0)"
    let v6654 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6652 v6653 
    let v6655 : string = "leptos::prelude::AnyView::from($0)"
    let v6656 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6654 v6655 
    let v6657 : string = "<" + v6362 + " " + v6650 + ">move || { v6656 }</" + v6362 + ">"
    let v6658 : string = "leptos::prelude::view! { " + v6657 + " }"
    let v6659 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6658 
    let v6660 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6659 |> unbox
    let v6661 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6662 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6660 v6661 
    let v6663 : string = "cx=\"16.5\""
    let v6664 : string = "cy=\"16.5\""
    let v6665 : string = "r=\"1.5\""
    let v6666 : string = "fill=\"currentColor\""
    let v6667 : string = " " + v6663 + v52 + ""
    let v6668 : string = " " + v6664 + v6667 + ""
    let v6669 : string = " " + v6665 + v6668 + ""
    let v6670 : string = " " + v6666 + v6669 + ""
    let v6671 : string = "vec![" + v52 + "]"
    let v6672 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6671 
    let v6673 : string = "leptos::prelude::Fragment::new($0)"
    let v6674 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6672 v6673 
    let v6675 : string = "leptos::prelude::AnyView::from($0)"
    let v6676 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6674 v6675 
    let v6677 : string = "<" + v6362 + " " + v6670 + ">move || { v6676 }</" + v6362 + ">"
    let v6678 : string = "leptos::prelude::view! { " + v6677 + " }"
    let v6679 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6678 
    let v6680 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6679 |> unbox
    let v6681 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6682 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6680 v6681 
    let v6683 : string = "v6682"
    let v6684 : string = v6683 + v52 
    let v6685 : string = v6684 + v52 
    let v6686 : string = "v6662"
    let v6687 : string = v6686 + v5928 
    let v6688 : string = v6687 + v6685 
    let v6689 : string = "v6642"
    let v6690 : string = v6689 + v5928 
    let v6691 : string = v6690 + v6688 
    let v6692 : string = "v6622"
    let v6693 : string = v6692 + v5928 
    let v6694 : string = v6693 + v6691 
    let v6695 : string = "v6602"
    let v6696 : string = v6695 + v5928 
    let v6697 : string = v6696 + v6694 
    let v6698 : string = "v6582"
    let v6699 : string = v6698 + v5928 
    let v6700 : string = v6699 + v6697 
    let v6701 : string = "vec![" + v6700 + "]"
    let v6702 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6701 
    let v6703 : string = "leptos::prelude::Fragment::new($0)"
    let v6704 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6702 v6703 
    let v6705 : string = "leptos::prelude::AnyView::from($0)"
    let v6706 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6704 v6705 
    let v6707 : string = "<" + v6039 + " " + v6555 + ">move || { v6706 }</" + v6039 + ">"
    let v6708 : string = "leptos::prelude::view! { " + v6707 + " }"
    let v6709 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6708 
    let v6710 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v6709 |> unbox
    let v6711 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6712 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6710 v6711 
    let v6713 : string = "v6712"
    let v6714 : string = v6713 + v52 
    let v6715 : string = v6714 + v52 
    let v6716 : string = "vec![" + v6715 + "]"
    let v6717 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6716 
    let v6718 : string = "leptos::prelude::Fragment::new($0)"
    let v6719 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6717 v6718 
    let v6720 : (unit -> std_string_String) = closure358(v5479)
    let v6721 : string = "let v6720 = $0"
    Fable.Core.RustInterop.emitRustExpr v6720 v6721 
    let v6722 : string = "$0"
    let v6723 : (unit -> bool) = closure359(v1751)
    let v6724 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v6723 v6722 
    let v6725 : string = "$0"
    let v6726 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure360(v1751)
    let v6727 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v6726 v6725 
    let v6728 : string = "href=move || v6720()"
    let v6729 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] flex-1 gap-2 border-t-2 [white-space:nowrap] mb-[11px] pt-[8px] pr-[15px] pl-[15px] text-sm font-medium \".to_owned() + v6727(())"
    let v6730 : string = "aria-current=move || if v6724(()) { \"page\" } else { \"\" }"
    let v6731 : string = " " + v6728 + v52 + ""
    let v6732 : string = " " + v6729 + v6731 + ""
    let v6733 : string = " " + v6730 + v6732 + ""
    let v6734 : string = "leptos::prelude::AnyView::from($0)"
    let v6735 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6719 v6734 
    (* run_target_args'
    let v6740 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6741 : string = "&*$0"
    let v6742 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5840 v6741 
    let _run_target_args'_v6740 = v6742 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6743 : string = "&*$0"
    let v6744 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5840 v6743 
    let _run_target_args'_v6740 = v6744 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6745 : string = "&*$0"
    let v6746 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5840 v6745 
    let _run_target_args'_v6740 = v6746 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6748 : Ref<Str> = v5840 |> unbox<Ref<Str>>
    let _run_target_args'_v6740 = v6748 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6752 : Ref<Str> = v5840 |> unbox<Ref<Str>>
    let _run_target_args'_v6740 = v6752 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6756 : Ref<Str> = v5840 |> unbox<Ref<Str>>
    let _run_target_args'_v6740 = v6756 
    #endif
#else
    let v6760 : Ref<Str> = v5840 |> unbox<Ref<Str>>
    let _run_target_args'_v6740 = v6760 
    #endif
    let v6763 : Ref<Str> = _run_target_args'_v6740 
    (* run_target_args'
    let v6773 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6774 : string = "String::from($0)"
    let v6775 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6763 v6774 
    let _run_target_args'_v6773 = v6775 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6776 : string = "String::from($0)"
    let v6777 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6763 v6776 
    let _run_target_args'_v6773 = v6777 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6778 : string = "String::from($0)"
    let v6779 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6763 v6778 
    let _run_target_args'_v6773 = v6779 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6781 : std_string_String = v6763 |> unbox<std_string_String>
    let _run_target_args'_v6773 = v6781 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6785 : std_string_String = v6763 |> unbox<std_string_String>
    let _run_target_args'_v6773 = v6785 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6789 : std_string_String = v6763 |> unbox<std_string_String>
    let _run_target_args'_v6773 = v6789 
    #endif
#else
    let v6793 : std_string_String = v6763 |> unbox<std_string_String>
    let _run_target_args'_v6773 = v6793 
    #endif
    let v6796 : std_string_String = _run_target_args'_v6773 
    let v6802 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v6803 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6796 v6802 
    let v6804 : string = "v6803"
    let v6805 : string = v6804 + v52 
    let v6806 : string = v6805 + v52 
    let v6807 : string = "v6735"
    let v6808 : string = v6807 + v5928 
    let v6809 : string = v6808 + v6806 
    let v6810 : string = "vec![" + v6809 + "]"
    let v6811 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6810 
    let v6812 : string = "leptos::prelude::Fragment::new($0)"
    let v6813 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6811 v6812 
    let v6814 : string = "leptos::prelude::AnyView::from($0)"
    let v6815 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6813 v6814 
    let v6816 : string = "<" + v6149 + " " + v6733 + ">move || { v6815 }</" + v6149 + ">"
    let v6817 : string = "leptos::prelude::view! { " + v6816 + " }"
    let v6818 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6817 
    let v6819 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_A>> = v6818 |> unbox
    let v6820 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6821 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6819 v6820 
    let v6822 : string = "v6155"
    let v6823 : string = v6822 + v52 
    let v6824 : string = v6823 + v52 
    let v6825 : string = "v6313"
    let v6826 : string = v6825 + v5928 
    let v6827 : string = v6826 + v6824 
    let v6828 : string = "v6541"
    let v6829 : string = v6828 + v5928 
    let v6830 : string = v6829 + v6827 
    let v6831 : string = "v6821"
    let v6832 : string = v6831 + v5928 
    let v6833 : string = v6832 + v6830 
    let v6834 : string = "vec![" + v6833 + "]"
    let v6835 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6834 
    let v6836 : string = "leptos::prelude::Fragment::new($0)"
    let v6837 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6835 v6836 
    let v6838 : string = "leptos::prelude::AnyView::from($0)"
    let v6839 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6837 v6838 
    let v6840 : string = "nav"
    let v6841 : string = "<" + v6840 + " " + v5974 + ">move || { v6839 }</" + v6840 + ">"
    let v6842 : string = "leptos::prelude::view! { " + v6841 + " }"
    let v6843 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6842 
    let v6844 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Nav>> = v6843 |> unbox
    let v6845 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6846 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6844 v6845 
    let v6847 : string = "v6846"
    let v6848 : string = v6847 + v52 
    let v6849 : string = v6848 + v52 
    let v6850 : string = "vec![" + v6849 + "]"
    let v6851 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6850 
    let v6852 : string = "leptos::prelude::Fragment::new($0)"
    let v6853 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6851 v6852 
    let v6854 : string = "leptos::prelude::AnyView::from($0)"
    let v6855 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6853 v6854 
    let v6856 : string = "<" + v5962 + " " + v5970 + ">move || { v6855 }</" + v5962 + ">"
    let v6857 : string = "leptos::prelude::view! { " + v6856 + " }"
    let v6858 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6857 
    let v6859 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v6858 |> unbox
    let v6860 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6861 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6859 v6860 
    let v6862 : string = "v6861"
    let v6863 : string = v6862 + v52 
    let v6864 : string = v6863 + v52 
    let v6865 : string = "vec![" + v6864 + "]"
    let v6866 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6865 
    let v6867 : string = "leptos::prelude::Fragment::new($0)"
    let v6868 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6866 v6867 
    let v6869 : string = "leptos::prelude::AnyView::from($0)"
    let v6870 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6868 v6869 
    let v6871 : string = "<" + v5962 + " " + v5968 + ">move || { v6870 }</" + v5962 + ">"
    let v6872 : string = "leptos::prelude::view! { " + v6871 + " }"
    let v6873 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6872 
    let v6874 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v6873 |> unbox
    let v6875 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6876 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6874 v6875 
    let v6877 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6878 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5966 v6877 
    let v6879 : string = "v6876"
    let v6880 : string = v6879 + v52 
    let v6881 : string = v6880 + v52 
    let v6882 : string = "v6878"
    let v6883 : string = v6882 + v5928 
    let v6884 : string = v6883 + v6881 
    let v6885 : string = "vec![" + v6884 + "]"
    let v6886 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6885 
    let v6887 : string = "leptos::prelude::Fragment::new($0)"
    let v6888 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6886 v6887 
    let v6889 : string = "leptos::prelude::AnyView::from($0)"
    let v6890 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6888 v6889 
    let v6891 : string = "<" + v5962 + " " + v5471 + ">move || { v6890 }</" + v5962 + ">"
    let v6892 : string = "leptos::prelude::view! { " + v6891 + " }"
    let v6893 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6892 
    let v6894 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v6893 |> unbox
    let v6895 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6896 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6894 v6895 
    let v6897 : string = "v6896"
    let v6898 : string = v6897 + v52 
    let v6899 : string = v6898 + v52 
    let v6900 : string = "v5469"
    let v6901 : string = v6900 + v5928 
    let v6902 : string = v6901 + v6899 
    let v6903 : string = "vec![" + v6902 + "]"
    let v6904 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6903 
    let v6905 : string = "leptos::prelude::Fragment::new($0)"
    let v6906 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6904 v6905 
    let v6907 : string = "leptos::prelude::AnyView::from($0)"
    let v6908 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6906 v6907 
    let v6909 : string = "<" + v5962 + " " + v2112 + ">move || { v6908 }</" + v5962 + ">"
    let v6910 : string = "leptos::prelude::view! { " + v6909 + " }"
    let v6911 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6910 
    let v6912 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v6911 |> unbox
    let v6913 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6914 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6912 v6913 
    let v6915 : string = "v6914"
    let v6916 : string = v6915 + v52 
    let v6917 : string = v6916 + v52 
    let v6918 : string = "vec![" + v6917 + "]"
    let v6919 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6918 
    let v6920 : string = "leptos::prelude::Fragment::new($0)"
    let v6921 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6919 v6920 
    let v6922 : string = "leptos::prelude::AnyView::from($0)"
    let v6923 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6921 v6922 
    let v6924 : string = "<" + v5962 + " " + v2110 + ">move || { v6923 }</" + v5962 + ">"
    let v6925 : string = "leptos::prelude::view! { " + v6924 + " }"
    let v6926 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6925 
    let v6927 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v6926 |> unbox
    let v6928 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6929 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6927 v6928 
    let v6930 : string = "v6929"
    let v6931 : string = v6930 + v52 
    let v6932 : string = v6931 + v52 
    let v6933 : string = "vec![" + v6932 + "]"
    let v6934 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6933 
    let v6935 : string = "leptos::prelude::Fragment::new($0)"
    let v6936 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6934 v6935 
    let v6937 : string = "leptos::prelude::AnyView::from($0)"
    let v6938 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6936 v6937 
    let v6939 : string = "<" + v5962 + " " + v1732 + ">move || { v6938 }</" + v5962 + ">"
    let v6940 : string = "leptos::prelude::view! { " + v6939 + " }"
    let v6941 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6940 
    let v6942 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v6941 |> unbox
    v6942
and method5 () : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>) =
    closure5()
and method289 (v0 : std_string_String) : std_string_String =
    v0
and closure361 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) () : leptos_prelude_AnyView_ =
    let v1 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v0 1
    let v2 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v3 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "v3"
    let v5 : string = ""
    let v6 : string = v4 + v5 
    let v7 : string = v6 + v5 
    let v8 : string = "vec![" + v7 + "]"
    let v9 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : string = "leptos::prelude::Fragment::new($0)"
    let v11 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "leptos::prelude::AnyView::from($0)"
    let v13 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v11 v12 
    v13
and method290 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) : (unit -> leptos_prelude_AnyView_) =
    closure361(v0)
and closure362 () () : leptos_dom_Fragment =
    let v0 : string = ""
    let v1 : string = "vec![" + v0 + "]"
    let v2 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1 
    let v3 : string = "leptos::prelude::Fragment::new($0)"
    let v4 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2 v3 
    v4
and closure363 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) () : leptos_prelude_AnyView_ =
    let v1 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v0 2
    let v2 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v3 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "v3"
    let v5 : string = ""
    let v6 : string = v4 + v5 
    let v7 : string = v6 + v5 
    let v8 : string = "vec![" + v7 + "]"
    let v9 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : string = "leptos::prelude::Fragment::new($0)"
    let v11 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "leptos::prelude::AnyView::from($0)"
    let v13 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v11 v12 
    v13
and method291 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) : (unit -> leptos_prelude_AnyView_) =
    closure363(v0)
and closure364 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) () : leptos_prelude_AnyView_ =
    let v1 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v0 3
    let v2 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v3 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "v3"
    let v5 : string = ""
    let v6 : string = v4 + v5 
    let v7 : string = v6 + v5 
    let v8 : string = "vec![" + v7 + "]"
    let v9 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : string = "leptos::prelude::Fragment::new($0)"
    let v11 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "leptos::prelude::AnyView::from($0)"
    let v13 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v11 v12 
    v13
and method292 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) : (unit -> leptos_prelude_AnyView_) =
    closure364(v0)
and closure365 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) () : leptos_prelude_AnyView_ =
    let v1 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v0 4
    let v2 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v3 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "v3"
    let v5 : string = ""
    let v6 : string = v4 + v5 
    let v7 : string = v6 + v5 
    let v8 : string = "vec![" + v7 + "]"
    let v9 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : string = "leptos::prelude::Fragment::new($0)"
    let v11 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "leptos::prelude::AnyView::from($0)"
    let v13 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v11 v12 
    v13
and method293 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) : (unit -> leptos_prelude_AnyView_) =
    closure365(v0)
and closure4 () () : Vec<leptos_prelude_View<leptos_router_NestedRoute>> =
    let v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>) = method5()
    let v1 : string = ""
    (* run_target_args'
    let v6 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v7 : string = "&*$0"
    let v8 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v7 
    let _run_target_args'_v6 = v8 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v9 : string = "&*$0"
    let v10 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v9 
    let _run_target_args'_v6 = v10 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v11 : string = "&*$0"
    let v12 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v11 
    let _run_target_args'_v6 = v12 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v14 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v14 
    #endif
#if FABLE_COMPILER_PYTHON
    let v18 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v18 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v22 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v22 
    #endif
#else
    let v26 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v26 
    #endif
    let v29 : Ref<Str> = _run_target_args'_v6 
    (* run_target_args'
    let v39 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v40 : string = "String::from($0)"
    let v41 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v40 
    let _run_target_args'_v39 = v41 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v42 
    let _run_target_args'_v39 = v43 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v44 
    let _run_target_args'_v39 = v45 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v47 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v47 
    #endif
#if FABLE_COMPILER_PYTHON
    let v51 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v51 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v55 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v55 
    #endif
#else
    let v59 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v59 
    #endif
    let v62 : std_string_String = _run_target_args'_v39 
    let v68 : std_string_String = method289(v62)
    let v69 : (unit -> leptos_prelude_AnyView_) = method290(v0)
    let v70 : string = "path=leptos_router::path!(v68)"
    let v71 : string = "view= move || v69()"
    let v72 : (unit -> leptos_dom_Fragment) = closure362()
    let v73 : string = "children=Box::new(move || v72())"
    let v74 : string = " " + v70 + v1 + ""
    let v75 : string = " " + v71 + v74 + ""
    let v76 : string = " " + v73 + v75 + ""
    let v77 : string = "leptos_router::components::ParentRoute"
    let v78 : string = "<" + v77 + " " + v76 + " />"
    let v79 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v78 + " })"
    let v80 : leptos_prelude_View<leptos_router_NestedRoute> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "/"
    (* run_target_args'
    let v86 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v87 : string = "&*$0"
    let v88 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v87 
    let _run_target_args'_v86 = v88 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v89 : string = "&*$0"
    let v90 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v89 
    let _run_target_args'_v86 = v90 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v91 : string = "&*$0"
    let v92 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v91 
    let _run_target_args'_v86 = v92 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v94 : Ref<Str> = v81 |> unbox<Ref<Str>>
    let _run_target_args'_v86 = v94 
    #endif
#if FABLE_COMPILER_PYTHON
    let v98 : Ref<Str> = v81 |> unbox<Ref<Str>>
    let _run_target_args'_v86 = v98 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v102 : Ref<Str> = v81 |> unbox<Ref<Str>>
    let _run_target_args'_v86 = v102 
    #endif
#else
    let v106 : Ref<Str> = v81 |> unbox<Ref<Str>>
    let _run_target_args'_v86 = v106 
    #endif
    let v109 : Ref<Str> = _run_target_args'_v86 
    (* run_target_args'
    let v119 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v120 : string = "String::from($0)"
    let v121 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v120 
    let _run_target_args'_v119 = v121 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v122 : string = "String::from($0)"
    let v123 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v122 
    let _run_target_args'_v119 = v123 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v124 : string = "String::from($0)"
    let v125 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v124 
    let _run_target_args'_v119 = v125 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v127 : std_string_String = v109 |> unbox<std_string_String>
    let _run_target_args'_v119 = v127 
    #endif
#if FABLE_COMPILER_PYTHON
    let v131 : std_string_String = v109 |> unbox<std_string_String>
    let _run_target_args'_v119 = v131 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v135 : std_string_String = v109 |> unbox<std_string_String>
    let _run_target_args'_v119 = v135 
    #endif
#else
    let v139 : std_string_String = v109 |> unbox<std_string_String>
    let _run_target_args'_v119 = v139 
    #endif
    let v142 : std_string_String = _run_target_args'_v119 
    let v148 : std_string_String = method289(v142)
    let v149 : (unit -> leptos_prelude_AnyView_) = method291(v0)
    let v150 : string = "path=leptos_router::path!(v148)"
    let v151 : string = "view= move || v149()"
    let v152 : string = "children=Box::new(move || v72())"
    let v153 : string = " " + v150 + v1 + ""
    let v154 : string = " " + v151 + v153 + ""
    let v155 : string = " " + v152 + v154 + ""
    let v156 : string = "<" + v77 + " " + v155 + " />"
    let v157 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v156 + " })"
    let v158 : leptos_prelude_View<leptos_router_NestedRoute> = Fable.Core.RustInterop.emitRustExpr () v157 
    let v159 : string = "/*"
    (* run_target_args'
    let v164 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v165 : string = "&*$0"
    let v166 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v159 v165 
    let _run_target_args'_v164 = v166 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v167 : string = "&*$0"
    let v168 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v159 v167 
    let _run_target_args'_v164 = v168 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v169 : string = "&*$0"
    let v170 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v159 v169 
    let _run_target_args'_v164 = v170 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v172 : Ref<Str> = v159 |> unbox<Ref<Str>>
    let _run_target_args'_v164 = v172 
    #endif
#if FABLE_COMPILER_PYTHON
    let v176 : Ref<Str> = v159 |> unbox<Ref<Str>>
    let _run_target_args'_v164 = v176 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v180 : Ref<Str> = v159 |> unbox<Ref<Str>>
    let _run_target_args'_v164 = v180 
    #endif
#else
    let v184 : Ref<Str> = v159 |> unbox<Ref<Str>>
    let _run_target_args'_v164 = v184 
    #endif
    let v187 : Ref<Str> = _run_target_args'_v164 
    (* run_target_args'
    let v197 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v198 : string = "String::from($0)"
    let v199 : std_string_String = Fable.Core.RustInterop.emitRustExpr v187 v198 
    let _run_target_args'_v197 = v199 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v200 : string = "String::from($0)"
    let v201 : std_string_String = Fable.Core.RustInterop.emitRustExpr v187 v200 
    let _run_target_args'_v197 = v201 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v202 : string = "String::from($0)"
    let v203 : std_string_String = Fable.Core.RustInterop.emitRustExpr v187 v202 
    let _run_target_args'_v197 = v203 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v205 : std_string_String = v187 |> unbox<std_string_String>
    let _run_target_args'_v197 = v205 
    #endif
#if FABLE_COMPILER_PYTHON
    let v209 : std_string_String = v187 |> unbox<std_string_String>
    let _run_target_args'_v197 = v209 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v213 : std_string_String = v187 |> unbox<std_string_String>
    let _run_target_args'_v197 = v213 
    #endif
#else
    let v217 : std_string_String = v187 |> unbox<std_string_String>
    let _run_target_args'_v197 = v217 
    #endif
    let v220 : std_string_String = _run_target_args'_v197 
    let v226 : std_string_String = method289(v220)
    let v227 : (unit -> leptos_prelude_AnyView_) = method292(v0)
    let v228 : string = "path=leptos_router::path!(v226)"
    let v229 : string = "view= move || v227()"
    let v230 : string = "children=Box::new(move || v72())"
    let v231 : string = " " + v228 + v1 + ""
    let v232 : string = " " + v229 + v231 + ""
    let v233 : string = " " + v230 + v232 + ""
    let v234 : string = "<" + v77 + " " + v233 + " />"
    let v235 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v234 + " })"
    let v236 : leptos_prelude_View<leptos_router_NestedRoute> = Fable.Core.RustInterop.emitRustExpr () v235 
    let v237 : string = "*"
    (* run_target_args'
    let v242 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v243 : string = "&*$0"
    let v244 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v237 v243 
    let _run_target_args'_v242 = v244 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v245 : string = "&*$0"
    let v246 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v237 v245 
    let _run_target_args'_v242 = v246 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v247 : string = "&*$0"
    let v248 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v237 v247 
    let _run_target_args'_v242 = v248 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v250 : Ref<Str> = v237 |> unbox<Ref<Str>>
    let _run_target_args'_v242 = v250 
    #endif
#if FABLE_COMPILER_PYTHON
    let v254 : Ref<Str> = v237 |> unbox<Ref<Str>>
    let _run_target_args'_v242 = v254 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v258 : Ref<Str> = v237 |> unbox<Ref<Str>>
    let _run_target_args'_v242 = v258 
    #endif
#else
    let v262 : Ref<Str> = v237 |> unbox<Ref<Str>>
    let _run_target_args'_v242 = v262 
    #endif
    let v265 : Ref<Str> = _run_target_args'_v242 
    (* run_target_args'
    let v275 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v276 : string = "String::from($0)"
    let v277 : std_string_String = Fable.Core.RustInterop.emitRustExpr v265 v276 
    let _run_target_args'_v275 = v277 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v278 : string = "String::from($0)"
    let v279 : std_string_String = Fable.Core.RustInterop.emitRustExpr v265 v278 
    let _run_target_args'_v275 = v279 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v280 : string = "String::from($0)"
    let v281 : std_string_String = Fable.Core.RustInterop.emitRustExpr v265 v280 
    let _run_target_args'_v275 = v281 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v283 : std_string_String = v265 |> unbox<std_string_String>
    let _run_target_args'_v275 = v283 
    #endif
#if FABLE_COMPILER_PYTHON
    let v287 : std_string_String = v265 |> unbox<std_string_String>
    let _run_target_args'_v275 = v287 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v291 : std_string_String = v265 |> unbox<std_string_String>
    let _run_target_args'_v275 = v291 
    #endif
#else
    let v295 : std_string_String = v265 |> unbox<std_string_String>
    let _run_target_args'_v275 = v295 
    #endif
    let v298 : std_string_String = _run_target_args'_v275 
    let v304 : std_string_String = method289(v298)
    let v305 : (unit -> leptos_prelude_AnyView_) = method293(v0)
    let v306 : string = "path=leptos_router::path!(v304)"
    let v307 : string = "view= move || v305()"
    let v308 : string = "children=Box::new(move || v72())"
    let v309 : string = " " + v306 + v1 + ""
    let v310 : string = " " + v307 + v309 + ""
    let v311 : string = " " + v308 + v310 + ""
    let v312 : string = "<" + v77 + " " + v311 + " />"
    let v313 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v312 + " })"
    let v314 : leptos_prelude_View<leptos_router_NestedRoute> = Fable.Core.RustInterop.emitRustExpr () v313 
    let v315 : string = "v314"
    let v316 : string = v315 + v1 
    let v317 : string = v316 + v1 
    let v318 : string = "v236"
    let v319 : string = ", "
    let v320 : string = v318 + v319 
    let v321 : string = v320 + v317 
    let v322 : string = "v158"
    let v323 : string = v322 + v319 
    let v324 : string = v323 + v321 
    let v325 : string = "v80"
    let v326 : string = v325 + v319 
    let v327 : string = v326 + v324 
    let v328 : string = "vec![" + v327 + "]"
    let v329 : Vec<leptos_prelude_View<leptos_router_NestedRoute>> = Fable.Core.RustInterop.emitRustExpr () v328 
    v329
and method4 () : (unit -> Vec<leptos_prelude_View<leptos_router_NestedRoute>>) =
    closure4()
and method294 (v0 : (unit -> Vec<leptos_prelude_View<leptos_router_NestedRoute>>)) : (unit -> Vec<leptos_prelude_View<leptos_router_NestedRoute>>) =
    v0
and closure3 () () : leptos_dom_Fragment =
    let v0 : (unit -> Vec<leptos_prelude_View<leptos_router_NestedRoute>>) = method4()
    let v1 : (unit -> Vec<leptos_prelude_View<leptos_router_NestedRoute>>) = method294(v0)
    let v2 : string = "leptos.routes / fallback"
    (* run_target_args'
    let v7 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2 v8 
    let _run_target_args'_v7 = v9 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2 v10 
    let _run_target_args'_v7 = v11 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2 v12 
    let _run_target_args'_v7 = v13 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v15 : Ref<Str> = v2 |> unbox<Ref<Str>>
    let _run_target_args'_v7 = v15 
    #endif
#if FABLE_COMPILER_PYTHON
    let v19 : Ref<Str> = v2 |> unbox<Ref<Str>>
    let _run_target_args'_v7 = v19 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v23 : Ref<Str> = v2 |> unbox<Ref<Str>>
    let _run_target_args'_v7 = v23 
    #endif
#else
    let v27 : Ref<Str> = v2 |> unbox<Ref<Str>>
    let _run_target_args'_v7 = v27 
    #endif
    let v30 : Ref<Str> = _run_target_args'_v7 
    (* run_target_args'
    let v40 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v30 v41 
    let _run_target_args'_v40 = v42 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v30 v43 
    let _run_target_args'_v40 = v44 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v30 v45 
    let _run_target_args'_v40 = v46 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v48 : std_string_String = v30 |> unbox<std_string_String>
    let _run_target_args'_v40 = v48 
    #endif
#if FABLE_COMPILER_PYTHON
    let v52 : std_string_String = v30 |> unbox<std_string_String>
    let _run_target_args'_v40 = v52 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v56 : std_string_String = v30 |> unbox<std_string_String>
    let _run_target_args'_v40 = v56 
    #endif
#else
    let v60 : std_string_String = v30 |> unbox<std_string_String>
    let _run_target_args'_v40 = v60 
    #endif
    let v63 : std_string_String = _run_target_args'_v40 
    let v69 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v70 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v63 v69 
    let v71 : string = "fallback=move || v70"
    let v72 : string = "children=leptos::children::ToChildren::to_children(move || v1())"
    let v73 : string = ""
    let v74 : string = " " + v71 + v73 + ""
    let v75 : string = " " + v72 + v74 + ""
    let v76 : string = "leptos_router::components::Routes"
    let v77 : string = "<" + v76 + " " + v75 + " />"
    let v78 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v77 + " })"
    let v79 : leptos_prelude_View<_> = Fable.Core.RustInterop.emitRustExpr () v78 
    let v80 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v79 v80 
    let v82 : string = "v81"
    let v83 : string = v82 + v73 
    let v84 : string = v83 + v73 
    let v85 : string = "vec![" + v84 + "]"
    let v86 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v85 
    let v87 : string = "leptos::prelude::Fragment::new($0)"
    let v88 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v86 v87 
    v88
and closure2 () () : Impl<leptos_IntoView> =
    let v0 : string = "app.render ()"
    let v1 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v2 : bool = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "true; leptos_meta::provide_meta_context()"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr () v3 
    let v5 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v6 : leptos_prelude_ArcRwSignal<bool> = Fable.Core.RustInterop.emitRustExpr false v5 
    let v7 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v8 : leptos_prelude_ArcRwSignal<bool> = Fable.Core.RustInterop.emitRustExpr false v7 
    let v9 : string = ""
    (* run_target_args'
    let v14 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v15 : string = "&*$0"
    let v16 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v9 v15 
    let _run_target_args'_v14 = v16 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v17 : string = "&*$0"
    let v18 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v9 v17 
    let _run_target_args'_v14 = v18 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v9 v19 
    let _run_target_args'_v14 = v20 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v22 : Ref<Str> = v9 |> unbox<Ref<Str>>
    let _run_target_args'_v14 = v22 
    #endif
#if FABLE_COMPILER_PYTHON
    let v26 : Ref<Str> = v9 |> unbox<Ref<Str>>
    let _run_target_args'_v14 = v26 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v9 |> unbox<Ref<Str>>
    let _run_target_args'_v14 = v30 
    #endif
#else
    let v34 : Ref<Str> = v9 |> unbox<Ref<Str>>
    let _run_target_args'_v14 = v34 
    #endif
    let v37 : Ref<Str> = _run_target_args'_v14 
    (* run_target_args'
    let v47 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v48 : string = "String::from($0)"
    let v49 : std_string_String = Fable.Core.RustInterop.emitRustExpr v37 v48 
    let _run_target_args'_v47 = v49 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v50 : string = "String::from($0)"
    let v51 : std_string_String = Fable.Core.RustInterop.emitRustExpr v37 v50 
    let _run_target_args'_v47 = v51 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v37 v52 
    let _run_target_args'_v47 = v53 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v55 : std_string_String = v37 |> unbox<std_string_String>
    let _run_target_args'_v47 = v55 
    #endif
#if FABLE_COMPILER_PYTHON
    let v59 : std_string_String = v37 |> unbox<std_string_String>
    let _run_target_args'_v47 = v59 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v63 : std_string_String = v37 |> unbox<std_string_String>
    let _run_target_args'_v47 = v63 
    #endif
#else
    let v67 : std_string_String = v37 |> unbox<std_string_String>
    let _run_target_args'_v47 = v67 
    #endif
    let v70 : std_string_String = _run_target_args'_v47 
    let v76 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v77 : leptos_prelude_ArcRwSignal<std_string_String> = Fable.Core.RustInterop.emitRustExpr v70 v76 
    let v78 : string = "i574n.near"
    (* run_target_args'
    let v83 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v84 : string = "&*$0"
    let v85 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v78 v84 
    let _run_target_args'_v83 = v85 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v86 : string = "&*$0"
    let v87 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v78 v86 
    let _run_target_args'_v83 = v87 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v88 : string = "&*$0"
    let v89 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v78 v88 
    let _run_target_args'_v83 = v89 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v91 : Ref<Str> = v78 |> unbox<Ref<Str>>
    let _run_target_args'_v83 = v91 
    #endif
#if FABLE_COMPILER_PYTHON
    let v95 : Ref<Str> = v78 |> unbox<Ref<Str>>
    let _run_target_args'_v83 = v95 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v99 : Ref<Str> = v78 |> unbox<Ref<Str>>
    let _run_target_args'_v83 = v99 
    #endif
#else
    let v103 : Ref<Str> = v78 |> unbox<Ref<Str>>
    let _run_target_args'_v83 = v103 
    #endif
    let v106 : Ref<Str> = _run_target_args'_v83 
    (* run_target_args'
    let v116 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v117 : string = "String::from($0)"
    let v118 : std_string_String = Fable.Core.RustInterop.emitRustExpr v106 v117 
    let _run_target_args'_v116 = v118 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v119 : string = "String::from($0)"
    let v120 : std_string_String = Fable.Core.RustInterop.emitRustExpr v106 v119 
    let _run_target_args'_v116 = v120 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v121 : string = "String::from($0)"
    let v122 : std_string_String = Fable.Core.RustInterop.emitRustExpr v106 v121 
    let _run_target_args'_v116 = v122 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v124 : std_string_String = v106 |> unbox<std_string_String>
    let _run_target_args'_v116 = v124 
    #endif
#if FABLE_COMPILER_PYTHON
    let v128 : std_string_String = v106 |> unbox<std_string_String>
    let _run_target_args'_v116 = v128 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v132 : std_string_String = v106 |> unbox<std_string_String>
    let _run_target_args'_v116 = v132 
    #endif
#else
    let v136 : std_string_String = v106 |> unbox<std_string_String>
    let _run_target_args'_v116 = v136 
    #endif
    let v139 : std_string_String = _run_target_args'_v116 
    let v146 : (bool * std_string_String) = true, v139 
    let v149 : string = "luckier.near"
    (* run_target_args'
    let v154 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v155 : string = "&*$0"
    let v156 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v149 v155 
    let _run_target_args'_v154 = v156 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v157 : string = "&*$0"
    let v158 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v149 v157 
    let _run_target_args'_v154 = v158 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v159 : string = "&*$0"
    let v160 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v149 v159 
    let _run_target_args'_v154 = v160 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v162 : Ref<Str> = v149 |> unbox<Ref<Str>>
    let _run_target_args'_v154 = v162 
    #endif
#if FABLE_COMPILER_PYTHON
    let v166 : Ref<Str> = v149 |> unbox<Ref<Str>>
    let _run_target_args'_v154 = v166 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v170 : Ref<Str> = v149 |> unbox<Ref<Str>>
    let _run_target_args'_v154 = v170 
    #endif
#else
    let v174 : Ref<Str> = v149 |> unbox<Ref<Str>>
    let _run_target_args'_v154 = v174 
    #endif
    let v177 : Ref<Str> = _run_target_args'_v154 
    (* run_target_args'
    let v187 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v188 : string = "String::from($0)"
    let v189 : std_string_String = Fable.Core.RustInterop.emitRustExpr v177 v188 
    let _run_target_args'_v187 = v189 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v190 : string = "String::from($0)"
    let v191 : std_string_String = Fable.Core.RustInterop.emitRustExpr v177 v190 
    let _run_target_args'_v187 = v191 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v192 : string = "String::from($0)"
    let v193 : std_string_String = Fable.Core.RustInterop.emitRustExpr v177 v192 
    let _run_target_args'_v187 = v193 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v195 : std_string_String = v177 |> unbox<std_string_String>
    let _run_target_args'_v187 = v195 
    #endif
#if FABLE_COMPILER_PYTHON
    let v199 : std_string_String = v177 |> unbox<std_string_String>
    let _run_target_args'_v187 = v199 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v203 : std_string_String = v177 |> unbox<std_string_String>
    let _run_target_args'_v187 = v203 
    #endif
#else
    let v207 : std_string_String = v177 |> unbox<std_string_String>
    let _run_target_args'_v187 = v207 
    #endif
    let v210 : std_string_String = _run_target_args'_v187 
    let v217 : (bool * std_string_String) = true, v210 
    let v220 : ((bool * std_string_String) []) = [|v146; v217|]
    let v221 : string = "$0.to_vec()"
    let v222 : Vec<(bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr v220 v221 
    let v223 : std_string_String option = None
    let v224 : US1 = US1_0
    let v225 : Heap0 = {l0 = v222; l1 = v223; l2 = 1; l3 = 1; l4 = v224} : Heap0
    let v226 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v227 : leptos_prelude_ArcRwSignal<Heap0> = Fable.Core.RustInterop.emitRustExpr v225 v226 
    let v228 : Heap1 = {l0 = v6; l1 = v8; l2 = v77; l3 = v227} : Heap1
    let v229 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v230 : leptos_prelude_ArcRwSignal<Heap1> = Fable.Core.RustInterop.emitRustExpr v228 v229 
    let v231 : string = "std::collections::HashMap::new()"
    let v232 : std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>> = Fable.Core.RustInterop.emitRustExpr () v231 
    let v233 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v234 : leptos_prelude_ArcRwSignal<std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>> = Fable.Core.RustInterop.emitRustExpr v232 v233 
    let v235 : Heap2 = {l0 = v230; l1 = v234} : Heap2
    let v236 : string = $"true; leptos::context::provide_context::<std::sync::Arc<Heap2>>($0)"
    let v237 : bool = Fable.Core.RustInterop.emitRustExpr v235 v236 
    let v238 : (unit -> leptos_dom_Fragment) = closure3()
    let v239 : string = "children=Box::new(move || v238())"
    let v240 : string = " " + v239 + v9 + ""
    let v241 : string = "leptos_router::components::Router"
    let v242 : string = "<" + v241 + " " + v240 + " />"
    let v243 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v242 + " })"
    let v244 : leptos_prelude_View<_> = Fable.Core.RustInterop.emitRustExpr () v243 
    let v245 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v246 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v244 v245 
    let v247 : Impl<leptos_IntoView> = v246 |> unbox
    v247
and method3 () : unit =
    let v0 : string = "true; leptos::prelude::mount_to_body(|| $0()); //"
    let v1 : (unit -> Impl<leptos_IntoView>) = closure2()
    let v2 : bool = Fable.Core.RustInterop.emitRustExpr v1 v0 
    ()
and closure366 () () : unit =
    method3()
and method295 () : (unit -> unit) =
    closure366()
and method296 (v0 : Box<Dyn<FnUnit>>) : Box<Dyn<FnUnit>> =
    v0
and closure0 () (v0 : (string [])) : int32 =
    let v1 : string = "main / args: " + string v0 + ""
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "let _ = console_log::init_with_level(log::Level::Debug)"
    Fable.Core.RustInterop.emitRustExpr () v4 
    let v5 : string = "console_error_panic_hook::set_once()"
    Fable.Core.RustInterop.emitRustExpr () v5 
    let v6 : string = "leptos::prelude::document().body()"
    let v7 : web_sys_HtmlElement option = Fable.Core.RustInterop.emitRustExpr () v6 
    let v10 : (web_sys_HtmlElement -> US0) = method0()
    let v11 : US0 option = v7 |> Option.map v10 
    let v25 : US0 = US0_1
    let v26 : US0 = v11 |> Option.defaultValue v25 
    let v31 : string = $"%A{v26}"
    let v34 : string = "main / mount_to_body / body: " + string v31 + ""
    let v35 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v36 : bool = Fable.Core.RustInterop.emitRustExpr v34 v35 
    match v26 with
    | US0_0(v37) -> (* Some *)
        let v38 : string = method1()
        (* run_target_args'
        let v43 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v44 : string = "&*$0"
        let v45 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v38 v44 
        let _run_target_args'_v43 = v45 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v46 : string = "&*$0"
        let v47 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v38 v46 
        let _run_target_args'_v43 = v47 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v48 : string = "&*$0"
        let v49 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v38 v48 
        let _run_target_args'_v43 = v49 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v51 : Ref<Str> = v38 |> unbox<Ref<Str>>
        let _run_target_args'_v43 = v51 
        #endif
#if FABLE_COMPILER_PYTHON
        let v55 : Ref<Str> = v38 |> unbox<Ref<Str>>
        let _run_target_args'_v43 = v55 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v59 : Ref<Str> = v38 |> unbox<Ref<Str>>
        let _run_target_args'_v43 = v59 
        #endif
#else
        let v63 : Ref<Str> = v38 |> unbox<Ref<Str>>
        let _run_target_args'_v43 = v63 
        #endif
        let v66 : Ref<Str> = _run_target_args'_v43 
        let v72 : web_sys_HtmlElement = method2(v37)
        let v73 : string = "v72.set_inner_html($0)"
        Fable.Core.RustInterop.emitRustExpr v66 v73 
        method3()
    | _ ->
        let v74 : (unit -> unit) = method295()
        let v75 : string = "Box::new(move || v74())"
        let v76 : Box<Dyn<FnUnit>> = Fable.Core.RustInterop.emitRustExpr () v75 
        let v77 : Box<Dyn<FnUnit>> = method296(v76)
        let v78 : string = "wasm_bindgen::closure::Closure::wrap(v77)"
        let v79 : wasm_bindgen_closure_Closure<Dyn<FnUnit>> = Fable.Core.RustInterop.emitRustExpr () v78 
        let v80 : string = "wasm_bindgen::closure::Closure::as_ref(&v79)"
        let v81 : Ref<wasm_bindgen_JsValue> = Fable.Core.RustInterop.emitRustExpr () v80 
        let v82 : string = "wasm_bindgen::JsCast::unchecked_ref(v81)"
        let v83 : Ref<js_sys_Function> = Fable.Core.RustInterop.emitRustExpr () v82 
        let v84 : string = "leptos::prelude::document().add_event_listener_with_callback(\"DOMContentLoaded\", v83).unwrap()"
        Fable.Core.RustInterop.emitRustExpr () v84 
        let v85 : string = "v79.forget()"
        Fable.Core.RustInterop.emitRustExpr () v85 
        ()
    0
let v0 : ((string []) -> int32) = closure0()
let main args = v0 args
()
