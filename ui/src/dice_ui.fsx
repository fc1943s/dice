#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("web_sys::HtmlElement")>]
#endif
type web_sys_HtmlElement = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("&$0")>]
type Ref<'T> = class end
#else
type Ref<'T> = 'T
#endif

#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ArcRwSignal<$0>")>]
#endif
type leptos_prelude_ArcRwSignal<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::string::String")>]
type std_string_String = class end
#else
type std_string_String = string
#endif

#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Vec<$0>")>]
#endif
type Vec<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::collections::HashMap<$0, $1>")>]
#endif
type std_collections_HashMap<'K, 'V> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::pin::Pin<$0>")>]
#endif
type std_pin_Pin<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("rexie::Error")>]
#endif
type rexie_Error = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("rexie::Rexie")>]
#endif
type rexie_Rexie = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::sync::Arc<$0>")>]
#endif
type std_sync_Arc<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Func0<$0>")>]
#endif
type Func0<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ArcLocalResource<$0>")>]
#endif
type leptos_prelude_ArcLocalResource<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("*/ $0 /*")>]
#endif
type TypeEmit<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("PartialEqWrapper<$0>")>]
#endif
type PartialEqWrapper<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Func1<$0, $1>")>]
#endif
type Func0<'T, 'U> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("rexie::Transaction")>]
#endif
type rexie_Transaction = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("rexie::Store")>]
#endif
type rexie_Store = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("wasm_bindgen::JsValue")>]
#endif
type wasm_bindgen_JsValue = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("serde_wasm_bindgen::Error")>]
#endif
type serde_wasm_bindgen_Error = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("serde_json::Value")>]
#endif
type serde_json_Value = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("serde_json::Error")>]
#endif
type serde_json_Error = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("borsh::io::Error")>]
#endif
type borsh_io_Error = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("web_sys::Window")>]
#endif
type web_sys_Window = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("web_sys::Storage")>]
#endif
type web_sys_Storage = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ArcMemo<$0>")>]
#endif
type leptos_prelude_ArcMemo<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ReadSignal<$0>")>]
#endif
type leptos_prelude_ReadSignal<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::WriteSignal<$0>")>]
#endif
type leptos_prelude_WriteSignal<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ArcAction<$0, $1>")>]
#endif
type leptos_prelude_ArcAction<'T, 'U> = class end
#if FABLE_COMPILER
Fable.Core.RustInterop.emitRustExpr () ");
use leptos::prelude::*;
//"
#endif
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos_router::location::Location")>]
#endif
type leptos_router_location_Location = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::Memo<$0>")>]
#endif
type leptos_prelude_Memo<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos_router::location::Url")>]
#endif
type leptos_router_Url = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::Root")>]
#endif
type crate_model_near_nearblocks_Root = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::Txn")>]
#endif
type crate_model_near_nearblocks_Txn = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::Block")>]
#endif
type crate_model_near_nearblocks_Block = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::Action")>]
#endif
type crate_model_near_nearblocks_Action = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::ActionsAgg")>]
#endif
type crate_model_near_nearblocks_ActionsAgg = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::Outcomes")>]
#endif
type crate_model_near_nearblocks_Outcomes = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::OutcomesAgg")>]
#endif
type crate_model_near_nearblocks_OutcomesAgg = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("futures::future::TryJoinAll<$0>")>]
#endif
type futures_future_TryJoinAll<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("reqwest_wasm::RequestBuilder")>]
#endif
type reqwest_RequestBuilder = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("reqwest_wasm::Error")>]
#endif
type reqwest_Error = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("reqwest_wasm::Response")>]
#endif
type reqwest_Response = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::Action<$0, $1>")>]
#endif
type leptos_prelude_Action<'T, 'U> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ArcSignal<$0>")>]
#endif
type leptos_prelude_ArcSignal<'T> = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::RpcInput")>] type crate_model_near_rpc_RpcInput = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::RpcResponse")>] type crate_model_near_rpc_RpcResponse = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::TransactionStatus")>] type crate_model_near_rpc_TransactionStatus = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::Receipt")>] type crate_model_near_rpc_Receipt = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::ReceiptDetail")>] type crate_model_near_rpc_ReceiptDetail = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::ActionDetail")>] type crate_model_near_rpc_ActionDetail = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::TransferDetail")>] type crate_model_near_rpc_TransferDetail = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::ReceiptsOutcome")>] type crate_model_near_rpc_ReceiptsOutcome = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::OutcomeDetail")>] type crate_model_near_rpc_OutcomeDetail = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::Metadata")>] type crate_model_near_rpc_Metadata = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::GasProfile")>] type crate_model_near_rpc_GasProfile = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::Proof")>] type crate_model_near_rpc_Proof = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::RpcError")>] type crate_model_near_rpc_RpcError = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::ErrorCause")>] type crate_model_near_rpc_ErrorCause = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::ErrorCauseInfo")>] type crate_model_near_rpc_ErrorCauseInfo = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::AnyView")>]
#endif
type leptos_prelude_AnyView_ = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::Fragment")>]
#endif
type leptos_dom_Fragment = class end
#if FABLE_COMPILER
Fable.Core.RustInterop.emitRustExpr () ");
use leptos::prelude::ElementChild;
//"
#endif
#if FABLE_COMPILER
Fable.Core.RustInterop.emitRustExpr () ");
use leptos::prelude::ClassAttribute;
//"
#endif
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("impl $0")>]
#endif
type Impl<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::View<$0>")>]
#endif
type leptos_prelude_View<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("chrono::DateTime<$0>")>]
#endif
type chrono_DateTime<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("chrono::NaiveDateTime")>]
#endif
type chrono_NaiveDateTime = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::ev::Event")>]
#endif
type leptos_ev_Event = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Box<$0>")>]
#endif
type Box<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("wasm_bindgen::closure::Closure<$0>")>]
#endif
type wasm_bindgen_closure_Closure<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("str")>]
type Str = class end
#else
type Str = string
#endif

#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::IntoView")>]
#endif
type leptos_IntoView = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos_router::NestedRoute<_, _, _, _>")>]
#endif
type leptos_router_NestedRoute = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::HtmlElement<$0, _, _>")>]
#endif
type leptos_dom_html_HtmlElement<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Div")>]
#endif
type leptos_html_Div = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("dyn $0")>]
#endif
type Dyn<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::future::Future<Output = $0>")>]
#endif
type std_future_Future<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("[$0]")>]
#endif
type Slice<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Fn($0, $1)")>]
#endif
type ActionFn2<'T, 'U> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos_router::NavigateOptions")>]
#endif
type leptos_router_NavigateOptions = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("$0 $1")>]
#endif
type Lifetime<'T, 'U> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("'static")>]
#endif
type StaticLifetime = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Span")>]
#endif
type leptos_html_Span = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::svg::Path")>]
#endif
type leptos_svg_Path = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::svg::Svg")>]
#endif
type leptos_svg_Svg = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Summary")>]
#endif
type leptos_html_Summary = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Pre")>]
#endif
type leptos_html_Pre = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::svg::Circle")>]
#endif
type leptos_svg_Circle = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Button")>]
#endif
type leptos_html_Button = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Details")>]
#endif
type leptos_html_Details = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Input")>]
#endif
type leptos_html_Input = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::svg::Animate")>]
#endif
type leptos_svg_Animate = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::svg::Rect")>]
#endif
type leptos_svg_Rect = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Th")>]
#endif
type leptos_html_Th = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Tr")>]
#endif
type leptos_html_Tr = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("chrono::Utc")>]
#endif
type chrono_Utc = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("chrono::Local")>]
#endif
type chrono_Local = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Td")>]
#endif
type leptos_html_Td = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Thead")>]
#endif
type leptos_html_Thead = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Tbody")>]
#endif
type leptos_html_Tbody = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Table")>]
#endif
type leptos_html_Table = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Label")>]
#endif
type leptos_html_Label = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Dt")>]
#endif
type leptos_html_Dt = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Dd")>]
#endif
type leptos_html_Dd = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Dl")>]
#endif
type leptos_html_Dl = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Main")>]
#endif
type leptos_html_Main = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Option_")>]
#endif
type leptos_html_Option = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Select")>]
#endif
type leptos_html_Select = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::A")>]
#endif
type leptos_html_A = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Nav")>]
#endif
type leptos_html_Nav = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Fn()")>]
#endif
type FnUnit = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("js_sys::Function")>]
#endif
type js_sys_Function = class end
type [<Struct>] US0 =
    | US0_0 of f0_0 : web_sys_HtmlElement
    | US0_1
and [<Struct>] US1 =
    | US1_0
    | US1_1
and Heap0 = {l0 : Vec<(bool * std_string_String)>; l1 : std_string_String option; l2 : int32; l3 : int32; l4 : US1}
and Heap1 = {l0 : leptos_prelude_ArcRwSignal<bool>; l1 : leptos_prelude_ArcRwSignal<bool>; l2 : leptos_prelude_ArcRwSignal<std_string_String>; l3 : leptos_prelude_ArcRwSignal<Heap0>}
and  Heap2 = {l0 : leptos_prelude_ArcRwSignal<Heap1>; l1 : leptos_prelude_ArcRwSignal<std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>>}
and [<Struct>] US2 =
    | US2_0 of f0_0 : std_sync_Arc<rexie_Rexie>
    | US2_1
and Heap3 = {l0 : bool; l1 : bool; l2 : std_string_String; l3 : Heap0}
and [<Struct>] US3 =
    | US3_0 of f0_0 : Heap3 option
    | US3_1
and [<Struct>] US4 =
    | US4_0 of f0_0 : wasm_bindgen_JsValue
    | US4_1
and [<Struct>] US5 =
    | US5_0 of f0_0 : serde_json_Value
    | US5_1
and [<Struct>] US6 =
    | US6_0 of f0_0 : Heap3 option option
    | US6_1 of f1_0 : std_string_String
and [<Struct>] US8 =
    | US8_0 of f0_0 : Heap3
    | US8_1
and [<Struct>] US7 =
    | US7_0 of f0_0 : US8
    | US7_1
and [<Struct>] US9 =
    | US9_0 of f0_0 : web_sys_Storage option
    | US9_1 of f1_0 : wasm_bindgen_JsValue
and [<Struct>] US11 =
    | US11_0 of f0_0 : web_sys_Storage
    | US11_1
and [<Struct>] US10 =
    | US10_0 of f0_0 : US11
    | US10_1 of f1_0 : wasm_bindgen_JsValue
and [<Struct>] US12 =
    | US12_0 of f0_0 : std_string_String option
    | US12_1 of f1_0 : wasm_bindgen_JsValue
and [<Struct>] US14 =
    | US14_0 of f0_0 : std_string_String
    | US14_1
and [<Struct>] US13 =
    | US13_0 of f0_0 : US14
    | US13_1 of f1_0 : wasm_bindgen_JsValue
and [<Struct>] US15 =
    | US15_0 of f0_0 : US14
    | US15_1
and [<Struct>] US16 =
    | US16_0 of f0_0 : leptos_prelude_ArcRwSignal<bool>
    | US16_1
and [<Struct>] US17 =
    | US17_0 of f0_0 : bool
    | US17_1
and [<Struct>] US19 =
    | US19_0
and [<Struct>] US18 =
    | US18_0
    | US18_1 of f1_0 : US19
    | US18_2
    | US18_3
    | US18_4
and [<Struct>] US20 =
    | US20_0 of f0_0 : leptos_router_Url
    | US20_1 of f1_0 : std_string_String
and [<Struct>] US21 =
    | US21_0 of f0_0 : US18
    | US21_1
and [<Struct>] US22 =
    | US22_0 of f0_0 : leptos_dom_Fragment
    | US22_1
and [<Struct>] US23 =
    | US23_0
    | US23_1
and Mut0 = {mutable l0 : int32}
and UH0 =
    | UH0_0
    | UH0_1 of Vec<struct (string * US23 * string * bool * bool)> * UH0
and UH1 =
    | UH1_0
    | UH1_1 of Vec<string> * UH1
and Heap4 = {l0 : std_string_String}
and [<Struct>] US24 =
    | US24_0 of f0_0 : Vec<Heap4 option>
    | US24_1 of f1_0 : std_string_String
and [<Struct>] US25 =
    | US25_0 of f0_0 : Heap4
    | US25_1
and [<Struct>] US26 =
    | US26_0 of f0_0 : Result<Vec<Heap4 option>, std_string_String>
    | US26_1
and [<Struct>] US28 =
    | US28_0 of f0_0 : Vec<US25>
    | US28_1 of f1_0 : std_string_String
and [<Struct>] US27 =
    | US27_0 of f0_0 : US28
    | US27_1
and [<Struct>] US31 =
    | US31_0 of f0_0 : string
    | US31_1
and [<Struct>] US30 =
    | US30_0 of f0_0 : US31
    | US30_1 of f1_0 : std_string_String
and [<Struct>] US29 =
    | US29_0 of f0_0 : US30
    | US29_1
and [<Struct>] US32 =
    | US32_0 of f0_0 : US25
    | US32_1
and [<Struct>] US33 =
    | US33_0 of f0_0 : string option
    | US33_1 of f1_0 : std_string_String
and [<Struct>] US34 =
    | US34_0 of f0_0 : Vec<unit>
    | US34_1 of f1_0 : std_string_String
and [<Struct>] US36 =
    | US36_0 of f0_0 : (US25 [])
    | US36_1 of f1_0 : std_string_String
and [<Struct>] US35 =
    | US35_0 of f0_0 : US36
    | US35_1
and [<Struct>] US37 =
    | US37_0 of f0_0 : Result<Vec<string option>, std_string_String>
    | US37_1
and [<Struct>] US39 =
    | US39_0 of f0_0 : Vec<string option>
    | US39_1 of f1_0 : std_string_String
and [<Struct>] US38 =
    | US38_0 of f0_0 : US39
    | US38_1
and [<Struct>] US41 =
    | US41_0 of f0_0 : Vec<US31>
    | US41_1 of f1_0 : std_string_String
and [<Struct>] US40 =
    | US40_0 of f0_0 : US41
    | US40_1
and [<Struct>] US42 =
    | US42_0 of f0_0 : US31
    | US42_1
and Heap5 = {l0 : std_string_String; l1 : std_string_String; l2 : std_string_String; l3 : std_string_String; l4 : std_string_String; l5 : std_string_String; l6 : uint32; l7 : (struct (std_string_String * std_string_String option) []); l8 : float; l9 : bool; l10 : float; l11 : (std_string_String [])}
and [<Struct>] US43 =
    | US43_0 of f0_0 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option
    | US43_1 of f1_0 : std_string_String
and [<Struct>] US45 =
    | US45_0 of f0_0 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])
    | US45_1
and [<Struct>] US44 =
    | US44_0 of f0_0 : US45
    | US44_1 of f1_0 : std_string_String
and [<Struct>] US47 =
    | US47_0 of f0_0 : (struct (string * unativeint * Heap5) [])
    | US47_1
and [<Struct>] US46 =
    | US46_0 of f0_0 : US47
    | US46_1 of f1_0 : std_string_String
and [<Struct>] US49 =
    | US49_0 of f0_0 : Vec<struct (string * unativeint * Heap5)>
    | US49_1
and [<Struct>] US48 =
    | US48_0 of f0_0 : US49
    | US48_1 of f1_0 : std_string_String
and [<Struct>] US50 =
    | US50_0 of f0_0 : Vec<struct (string * unativeint * Heap5)> option
    | US50_1 of f1_0 : std_string_String
and UH2 =
    | UH2_0
    | UH2_1 of Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> * UH2
and Mut1 = {mutable l0 : int32; mutable l1 : UH2}
and [<Struct>] US51 =
    | US51_0 of f0_0 : Vec<struct (string * unativeint * Heap5)>
    | US51_1 of f1_0 : std_string_String
and [<Struct>] US52 =
    | US52_0 of f0_0 : (struct (string * unativeint * Heap5) [])
    | US52_1 of f1_0 : std_string_String
and [<Struct>] US53 =
    | US53_0 of f0_0 : (struct (string * unativeint * Heap5) []) option
    | US53_1 of f1_0 : std_string_String
and [<Struct>] US55 =
    | US55_0 of f0_0 : (struct (string * US23 * string * bool * bool) [])
    | US55_1
and [<Struct>] US54 =
    | US54_0 of f0_0 : US55
    | US54_1 of f1_0 : std_string_String
and [<Struct>] US56 =
    | US56_0 of f0_0 : (struct (string * US23 * string * bool * bool) []) option
    | US56_1 of f1_0 : std_string_String
and Heap6 = {l0 : int32}
and [<Struct>] US57 =
    | US57_0 of f0_0 : US14
    | US57_1 of f1_0 : std_string_String
and [<Struct>] US59 =
    | US59_0 of f0_0 : std_string_String * f0_1 : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * f0_2 : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * f0_3 : std_string_String option
    | US59_1
and [<Struct>] US58 =
    | US58_0 of f0_0 : US59
    | US58_1 of f1_0 : std_string_String
and [<Struct>] US60 =
    | US60_0 of f0_0 : crate_model_near_rpc_RpcResponse
    | US60_1 of f1_0 : std_string_String
and [<Struct>] US61 =
    | US61_0 of f0_0 : std_string_String * f0_1 : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * f0_2 : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * f0_3 : std_string_String option
    | US61_1 of f1_0 : std_string_String
and [<Struct>] US62 =
    | US62_0 of f0_0 : US58
    | US62_1
and [<Struct>] US63 =
    | US63_0 of f0_0 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option
    | US63_1 of f1_0 : std_string_String
and [<Struct>] US64 =
    | US64_0 of f0_0 : std_string_String * f0_1 : std_string_String * f0_2 : struct (std_string_String option * std_string_String option) option * f0_3 : int32 * f0_4 : std_string_String * f0_5 : std_string_String
    | US64_1
and [<Struct>] US65 =
    | US65_0 of f0_0 : leptos_prelude_ArcMemo<US31>
    | US65_1
and [<Struct>] US66 =
    | US66_0 of f0_0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>>
    | US66_1
and [<Struct>] US67 =
    | US67_0 of f0_0 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>
    | US67_1
and [<Struct>] US68 =
    | US68_0 of f0_0 : chrono_DateTime<chrono_Utc>
    | US68_1
and [<Struct>] US69 =
    | US69_0 of f0_0 : string
    | US69_1 of f1_0 : string
and Mut2 = {mutable l0 : int32; mutable l1 : US31}
and [<Struct>] US70 =
    | US70_0 of f0_0 : std_string_String
    | US70_1 of f1_0 : std_string_String
let rec closure1 () (v0 : web_sys_HtmlElement) : US0 =
    US0_0(v0)
and method0 () : (web_sys_HtmlElement -> US0) =
    closure1()
and method1 () : string =
    let v0 : string = ""
    v0
and method2 (v0 : web_sys_HtmlElement) : web_sys_HtmlElement =
    v0
and closure6 () (v0 : rexie_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method6 () : (rexie_Error -> std_string_String) =
    closure6()
and closure7 () (v0 : rexie_Rexie) : rexie_Rexie =
    v0
and method7 () : (rexie_Rexie -> rexie_Rexie) =
    closure7()
and method8 (v0 : int64, v1 : string) : string =
    let v2 : int64 = System.Convert.ToInt64 v1.Length
    let v3 : bool = v2 <= v0
    if v3 then
        v1
    else
        let v5 : (int64 -> float) = float
        let v6 : float = v5 v0
        let v9 : float = v6 / 2.0
        let v10 : (float -> float) = ceil
        let v11 : float = v10 v9
        let v13 : (float -> int64) = int64
        let v14 : int64 = v13 v11
        let v17 : (float -> float) = floor
        let v18 : float = v17 v9
        let v20 : (float -> int64) = int64
        let v21 : int64 = v20 v18
        let v24 : int64 = v14 - 1L
        let v26 : string = v1.[int 0L..int v24]
        let v30 : int64 = v2 - v21
        let v31 : int64 = v2 - 1L
        let v33 : string = v1.[int v30..int v31]
        let v37 : string = "..."
        let v38 : (string []) = [|v26; v37; v33|]
        let v40 : string seq = v38 |> Seq.ofArray
        let v45 : (string -> (string seq -> string)) = String.concat
        let v46 : string = ""
        let v47 : (string seq -> string) = v45 v46
        v47 v40
and closure8 () () : unit =
    let v0 : string = "} //"
    Fable.Core.RustInterop.emitRustExpr () v0 
    let v1 : string = "#[derive( //"
    Fable.Core.RustInterop.emitRustExpr () v1 
    let v2 : string = "  Debug, //"
    Fable.Core.RustInterop.emitRustExpr () v2 
    let v3 : string = "  Clone, //"
    Fable.Core.RustInterop.emitRustExpr () v3 
    let v4 : string = ")] //"
    Fable.Core.RustInterop.emitRustExpr () v4 
    let v5 : string = "pub struct PartialEqWrapper<T>(T); /*"
    Fable.Core.RustInterop.emitRustExpr () v5 
    let v6 : string = "*/ impl PartialEq for PartialEqWrapper< /*"
    Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : TypeEmit<std_sync_Arc<rexie_Rexie>> = null |> unbox<TypeEmit<std_sync_Arc<rexie_Rexie>>>
    let v11 : string = "*/ > { //"
    Fable.Core.RustInterop.emitRustExpr () v11 
    let v12 : string = "fn eq(&self, other: &Self) -> bool { //"
    Fable.Core.RustInterop.emitRustExpr () v12 
    let v13 : string = $"self"
    let v14 : Ref<PartialEqWrapper<std_sync_Arc<rexie_Rexie>>> = Fable.Core.RustInterop.emitRustExpr () v13 
    let v15 : string = $"other"
    let v16 : Ref<PartialEqWrapper<std_sync_Arc<rexie_Rexie>>> = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = "&$0.0"
    let v18 : Ref<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v16 v17 
    let v19 : string = "&$0.0"
    let v20 : Ref<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v14 v19 
    let v21 : string = "std::sync::Arc::ptr_eq($0, $1)"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr struct (v20, v18) v21 
    let v23 : string = $"v22 //"
    Fable.Core.RustInterop.emitRustExpr () v23 
    let v24 : string = "} } } fn _main() { { { //"
    Fable.Core.RustInterop.emitRustExpr () v24 
    ()
and closure9 () (v0 : std_sync_Arc<rexie_Rexie>) : US2 =
    US2_0(v0)
and method9 () : (std_sync_Arc<rexie_Rexie> -> US2) =
    closure9()
and method10 (v0 : Func0<string, std_string_String>) : Func0<string, std_string_String> =
    v0
and closure10 (v0 : Func0<string, std_string_String>) (v1 : string) : std_string_String =
    let v2 : Func0<string, std_string_String> = method10(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method11 (v0 : std_sync_Arc<rexie_Rexie>) : std_sync_Arc<rexie_Rexie> =
    v0
and closure11 () (v0 : rexie_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method12 () : (rexie_Error -> std_string_String) =
    closure11()
and method13 () : string =
    let v0 : string = "store"
    v0
and closure12 () (v0 : rexie_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method14 () : (rexie_Error -> std_string_String) =
    closure12()
and method15 () : string =
    let v0 : string = "core-state-heap"
    v0
and closure13 () (v0 : rexie_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method16 () : (rexie_Error -> std_string_String) =
    closure13()
and closure14 () (v0 : wasm_bindgen_JsValue) : US4 =
    US4_0(v0)
and method17 () : (wasm_bindgen_JsValue -> US4) =
    closure14()
and method18 (v0 : wasm_bindgen_JsValue) : wasm_bindgen_JsValue =
    v0
and closure15 () (v0 : serde_wasm_bindgen_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method19 () : (serde_wasm_bindgen_Error -> std_string_String) =
    closure15()
and closure16 () (v0 : serde_json_Value) : US5 =
    US5_0(v0)
and method20 () : (serde_json_Value -> US5) =
    closure16()
and method21 (v0 : serde_json_Value) : serde_json_Value =
    v0
and closure17 () (v0 : serde_json_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method22 () : (serde_json_Error -> std_string_String) =
    closure17()
and closure18 () (v0 : borsh_io_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method23 () : (borsh_io_Error -> std_string_String) =
    closure18()
and closure19 () (v0 : Heap3 option option) : US6 =
    US6_0(v0)
and method24 () : (Heap3 option option -> US6) =
    closure19()
and closure20 () (v0 : std_string_String) : US6 =
    US6_1(v0)
and method25 () : (std_string_String -> US6) =
    closure20()
and closure21 () (v0 : Heap3 option) : US3 =
    US3_0(v0)
and method26 () : (Heap3 option -> US3) =
    closure21()
and closure22 () (v0 : Heap3) : US8 =
    US8_0(v0)
and method27 () : (Heap3 -> US8) =
    closure22()
and method28 () : web_sys_Window =
    let v0 : string = "leptos::prelude::window()"
    let v1 : web_sys_Window = Fable.Core.RustInterop.emitRustExpr () v0 
    v1
and method29 (v0 : web_sys_Window) : Result<web_sys_Storage option, wasm_bindgen_JsValue> =
    let v1 : string = "$0.local_storage()"
    let v2 : Result<web_sys_Storage option, wasm_bindgen_JsValue> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    v2
and closure23 () (v0 : web_sys_Storage option) : US9 =
    US9_0(v0)
and method30 () : (web_sys_Storage option -> US9) =
    closure23()
and closure24 () (v0 : wasm_bindgen_JsValue) : US9 =
    US9_1(v0)
and method31 () : (wasm_bindgen_JsValue -> US9) =
    closure24()
and closure25 () (v0 : web_sys_Storage) : US11 =
    US11_0(v0)
and method32 () : (web_sys_Storage -> US11) =
    closure25()
and closure26 () (v0 : US8) : US7 =
    US7_0(v0)
and method33 () : (US8 -> US7) =
    closure26()
and method34 (v0 : web_sys_Storage) : web_sys_Storage =
    v0
and method35 () : string =
    let v0 : string = "core-state-heap"
    v0
and closure27 () (v0 : std_string_String option) : US12 =
    US12_0(v0)
and method36 () : (std_string_String option -> US12) =
    closure27()
and closure28 () (v0 : wasm_bindgen_JsValue) : US12 =
    US12_1(v0)
and method37 () : (wasm_bindgen_JsValue -> US12) =
    closure28()
and method38 (v0 : std_string_String option) : std_string_String option =
    v0
and closure29 () (v0 : std_string_String) : US14 =
    US14_0(v0)
and method39 () : (std_string_String -> US14) =
    closure29()
and method41 (v0 : string) : string =
    v0
and closure31 () (v0 : serde_json_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method42 () : (serde_json_Error -> std_string_String) =
    closure31()
and closure30 () (v0 : std_string_String) : US8 =
    let v1 : string = "fable_library_rust::String_::fromString($0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = method41(v2)
    (* run_target_args'
    let v8 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v9 : string = "&*$0"
    let v10 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3 v9 
    let _run_target_args'_v8 = v10 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v11 : string = "&*$0"
    let v12 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3 v11 
    let _run_target_args'_v8 = v12 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v13 : string = "&*$0"
    let v14 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3 v13 
    let _run_target_args'_v8 = v14 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v16 : Ref<Str> = v3 |> unbox<Ref<Str>>
    let _run_target_args'_v8 = v16 
    #endif
#if FABLE_COMPILER_PYTHON
    let v20 : Ref<Str> = v3 |> unbox<Ref<Str>>
    let _run_target_args'_v8 = v20 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v24 : Ref<Str> = v3 |> unbox<Ref<Str>>
    let _run_target_args'_v8 = v24 
    #endif
#else
    let v28 : Ref<Str> = v3 |> unbox<Ref<Str>>
    let _run_target_args'_v8 = v28 
    #endif
    let v31 : Ref<Str> = _run_target_args'_v8 
    let v40 : string = "serde_json::from_str(&$0)"
    let v41 : Result<Heap3, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v31 v40 
    let v42 : (serde_json_Error -> std_string_String) = method42()
    (* run_target_args'
    let v44 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v45 : string = "$0.map_err(|x| $1(x))"
    let v46 : Result<Heap3, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v41, v42) v45 
    let _run_target_args'_v44 = v46 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v47 : string = "$0.map_err(|x| $1(x))"
    let v48 : Result<Heap3, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v41, v42) v47 
    let _run_target_args'_v44 = v48 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v49 : string = "$0.map_err(|x| $1(x))"
    let v50 : Result<Heap3, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v41, v42) v49 
    let _run_target_args'_v44 = v50 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v51 : Result<Heap3, std_string_String> = match v41 with Ok x -> Ok x | Error x -> Error (v42 x)
    let _run_target_args'_v44 = v51 
    #endif
#if FABLE_COMPILER_PYTHON
    let v52 : Result<Heap3, std_string_String> = match v41 with Ok x -> Ok x | Error x -> Error (v42 x)
    let _run_target_args'_v44 = v52 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v53 : Result<Heap3, std_string_String> = match v41 with Ok x -> Ok x | Error x -> Error (v42 x)
    let _run_target_args'_v44 = v53 
    #endif
#else
    let v54 : Result<Heap3, std_string_String> = match v41 with Ok x -> Ok x | Error x -> Error (v42 x)
    let _run_target_args'_v44 = v54 
    #endif
    let v55 : Result<Heap3, std_string_String> = _run_target_args'_v44 
    (* run_target_args'
    let v59 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v60 : string = "$0.ok()"
    let v61 : Heap3 option = Fable.Core.RustInterop.emitRustExpr v55 v60 
    let _run_target_args'_v59 = v61 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v62 : string = "$0.ok()"
    let v63 : Heap3 option = Fable.Core.RustInterop.emitRustExpr v55 v62 
    let _run_target_args'_v59 = v63 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v64 : string = "$0.ok()"
    let v65 : Heap3 option = Fable.Core.RustInterop.emitRustExpr v55 v64 
    let _run_target_args'_v59 = v65 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v66 : Heap3 option = match v55 with Ok x -> Some x | Error _ -> None
    let _run_target_args'_v59 = v66 
    #endif
#if FABLE_COMPILER_PYTHON
    let v67 : Heap3 option = match v55 with Ok x -> Some x | Error _ -> None
    let _run_target_args'_v59 = v67 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v68 : Heap3 option = match v55 with Ok x -> Some x | Error _ -> None
    let _run_target_args'_v59 = v68 
    #endif
#else
    let v69 : Heap3 option = match v55 with Ok x -> Some x | Error _ -> None
    let _run_target_args'_v59 = v69 
    #endif
    let v70 : Heap3 option = _run_target_args'_v59 
    let v75 : (Heap3 -> US8) = method27()
    let v76 : US8 option = v70 |> Option.map v75 
    let v96 : US8 = US8_1
    let v97 : US8 = v76 |> Option.defaultValue v96 
    v97
and method40 () : (std_string_String -> US8) =
    closure30()
and closure32 (v0 : Heap3) (v1 : bool) : bool =
    let v2 : string = "state_core.use_core_database (7) / effect core_state_heap / dark_mode signal_update"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : bool = v0.l0
    v5
and closure33 (v0 : Heap3) (v1 : bool) : bool =
    let v2 : string = "state_core.use_core_database (8) / effect core_state_heap / debug signal_update"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : bool = v0.l1
    v5
and closure34 (v0 : Heap3) (v1 : std_string_String) : std_string_String =
    let v2 : string = "state_core.use_core_database (9) / effect core_state_heap / url_hash signal_update"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : std_string_String = v0.l2
    v5
and closure35 (v0 : Heap3) (v1 : Heap0) : Heap0 =
    let v2 : string = "state_core.use_core_database (10) / effect core_state_heap / data signal_update"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : Heap0 = v0.l3
    v5
and closure36 (v0 : Heap2) () : std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>> =
    let v1 : string = "state_core.use_core_database (11) / loading new_arc_memo"
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : leptos_prelude_ArcRwSignal<std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>> = v0.l1
    let v5 : string = "Box::pin($0)"
    let v6 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>>>> = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v8 : std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>> = Fable.Core.RustInterop.emitRustExpr v6 v7 
    v8
and method43 () : string =
    let v0 : string = "core-state-heap"
    v0
and method44 (v0 : Func0<Heap3, std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>>) : Func0<Heap3, std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>> =
    v0
and closure37 (v0 : Func0<Heap3, std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>>) (v1 : Heap3) : std_pin_Pin<Box<Dyn<std_future_Future<unit>>>> =
    let v2 : Func0<Heap3, std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>> = method44(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : std_pin_Pin<Box<Dyn<std_future_Future<unit>>>> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method45 (v0 : std_string_String) : std_string_String =
    v0
and closure38 () (v0 : leptos_prelude_ArcRwSignal<bool>) : US16 =
    US16_0(v0)
and method46 () : (leptos_prelude_ArcRwSignal<bool> -> US16) =
    closure38()
and closure39 () (v0 : bool) : bool =
    let v1 : string = "state_core.use_core_database (17) / effect new_core_state_heap / set_loaded |> signal_update true"
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    true
and method47 (v0 : web_sys_Storage) : web_sys_Storage =
    v0
and method48 () : string =
    let v0 : string = "core-state-heap"
    v0
and method49 (v0 : Heap3) : Heap3 =
    v0
and closure40 (v0 : Heap2) () : bool =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<bool> = v5.l0
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr v6 v7 
    v8
and method50 (v0 : Heap2) : (unit -> bool) =
    closure40(v0)
and closure41 (v0 : leptos_router_location_Location) () : string =
    let v1 : string = "$0.pathname"
    let v2 : leptos_prelude_Memo<std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = $"leptos::prelude::Memo::get(&$0)"
    let v4 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = "fable_library_rust::String_::fromString($0)"
    let v6 : string = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : string = "$0.search"
    let v8 : leptos_prelude_Memo<std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v7 
    let v9 : string = $"leptos::prelude::Memo::get(&$0)"
    let v10 : std_string_String = Fable.Core.RustInterop.emitRustExpr v8 v9 
    let v11 : string = "fable_library_rust::String_::fromString($0)"
    let v12 : string = Fable.Core.RustInterop.emitRustExpr v10 v11 
    let v13 : bool = v12 = ""
    let v16 : string =
        if v13 then
            let v14 : string = ""
            v14
        else
            let v15 : string = $"?{v12}"
            v15
    let v17 : string = v6 + v16 
    v17
and method51 (v0 : std_string_String) : std_string_String =
    v0
and method52 (v0 : std_string_String) : std_string_String =
    v0
and closure42 () (v0 : leptos_router_Url) : US20 =
    US20_0(v0)
and method53 () : (leptos_router_Url -> US20) =
    closure42()
and closure43 () (v0 : std_string_String) : US20 =
    US20_1(v0)
and method54 () : (std_string_String -> US20) =
    closure43()
and closure45 () struct (v0 : bool, v1 : std_string_String) : bool =
    v0
and method55 () : (struct (bool * std_string_String) -> bool) =
    closure45()
and method56 (v0 : Vec<struct (bool * std_string_String)>) : Vec<struct (bool * std_string_String)> =
    v0
and closure44 (v0 : Heap2) () : Vec<string> =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<Heap0> = v5.l3
    let v7 : string = "Box::pin($0)"
    let v8 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v6 v7 
    let v9 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v10 : Heap0 = Fable.Core.RustInterop.emitRustExpr v8 v9 
    let v11 : Vec<(bool * std_string_String)> = v10.l0
    let v12 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
    let v13 : bool = Fable.Core.RustInterop.emitRustExpr v11 v12 
    let v14 : string = "x"
    let v15 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr () v14 
    let (a, b) = v15 
    let v18 : bool = a
    let v19 : std_string_String = b
    let v24 : string = "true; $0 }).collect::<Vec<_>>()"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr struct (v18, v19) v24 
    let v26 : string = "_vec_map"
    let v27 : Vec<struct (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : (struct (bool * std_string_String) -> bool) = method55()
    let v29 : Vec<struct (bool * std_string_String)> = method56(v27)
    let v30 : string = "v29.into_iter().filter(|x| v28(x.clone().clone())).collect::<Vec<_>>()"
    let v31 : Vec<struct (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v30 
    let v32 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
    let v33 : bool = Fable.Core.RustInterop.emitRustExpr v31 v32 
    let v34 : string = "x"
    let struct (v35 : bool, v36 : std_string_String) = Fable.Core.RustInterop.emitRustExpr () v34 
    let v37 : string = "true; $0 }).collect::<Vec<_>>()"
    let v38 : bool = Fable.Core.RustInterop.emitRustExpr v36 v37 
    let v39 : string = "_vec_map"
    let v40 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v39 
    let v41 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
    let v42 : bool = Fable.Core.RustInterop.emitRustExpr v40 v41 
    let v43 : string = "x"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v43 
    let v45 : string = "fable_library_rust::String_::fromString($0)"
    let v46 : string = Fable.Core.RustInterop.emitRustExpr v44 v45 
    let v47 : string = "true; $0 }).collect::<Vec<_>>()"
    let v48 : bool = Fable.Core.RustInterop.emitRustExpr v46 v47 
    let v49 : string = "_vec_map"
    let v50 : Vec<string> = Fable.Core.RustInterop.emitRustExpr () v49 
    let v52 : string = $"%A{v50}"
    let v55 : string = "use_transactions.render (2) / accounts new_arc_memo / result: " + string v52 + ""
    let v56 : int64 = 200L
    let v57 : string = method8(v56, v55)
    let v58 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v59 : bool = Fable.Core.RustInterop.emitRustExpr v57 v58 
    v50
and method57 (v0 : Func0<string, struct (string * US23 * string * bool * bool)>) : Func0<string, struct (string * US23 * string * bool * bool)> =
    v0
and closure47 (v0 : Func0<string, struct (string * US23 * string * bool * bool)>) (v1 : string) : struct (string * US23 * string * bool * bool) =
    let v2 : Func0<string, struct (string * US23 * string * bool * bool)> = method57(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : string, v6 : US23, v7 : string, v8 : bool, v9 : bool) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9)
and closure46 (v0 : leptos_prelude_ArcMemo<Vec<string>>) () : (struct (string * US23 * string * bool * bool) []) =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let v7 : string = Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : string = "https://api3.nearblocks.io/v1/account/" + v7 + ""
    let v9 : US23 = US23_0
    let v10 : string = ""
    let func1_from_result = struct (v8, v9, v10, false, true) //
    let v11 : _ = func1_from_result
    let v12 : string = $"true; $0 /*"
    let v13 : bool = Fable.Core.RustInterop.emitRustExpr v11 v12 
    let v14 : string = $"*/ }}); //"
    let v15 : bool = Fable.Core.RustInterop.emitRustExpr () v14 
    let v16 : string = $"_func1_from_v3"
    let v17 : Func0<string, struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr () v16 
    let v18 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v19 : (string -> struct (string * US23 * string * bool * bool)) = closure47(v17)
    let v20 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr struct (v2, v19) v18 
    let v21 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v22 : (struct (string * US23 * string * bool * bool) []) = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v24 : string = $"%A{v22}"
    let v27 : string = "use_transactions.render (3) / accounts_metadata new_arc_memo / result: " + string v24 + ""
    let v28 : int64 = 200L
    let v29 : string = method8(v28, v27)
    let v30 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v31 : bool = Fable.Core.RustInterop.emitRustExpr v29 v30 
    v22
and method59 (v0 : int32, v1 : Mut0) : bool =
    let v2 : int32 = v1.l0
    let v3 : bool = v2 < v0
    v3
and method58 (v0 : Heap0) : Vec<int32> =
    let v1 : int32 = v0.l3
    let v2 : (int32 []) = Array.zeroCreate<int32> (v1)
    let v3 : Mut0 = {l0 = 0} : Mut0
    while method59(v1, v3) do
        let v5 : int32 = v3.l0
        v2.[int v5] <- v5
        let v6 : int32 = v5 + 1
        v3.l0 <- v6
        ()
    let v7 : string = "$0.to_vec()"
    let v8 : Vec<int32> = Fable.Core.RustInterop.emitRustExpr v2 v7 
    v8
and method60 (v0 : Func0<int32, struct (string * US23 * string * bool * bool)>) : Func0<int32, struct (string * US23 * string * bool * bool)> =
    v0
and closure49 (v0 : Func0<int32, struct (string * US23 * string * bool * bool)>) (v1 : int32) : struct (string * US23 * string * bool * bool) =
    let v2 : Func0<int32, struct (string * US23 * string * bool * bool)> = method60(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : string, v6 : US23, v7 : string, v8 : bool, v9 : bool) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9)
and method61 (v0 : Func0<string, struct (string * Vec<struct (string * US23 * string * bool * bool)>)>) : Func0<string, struct (string * Vec<struct (string * US23 * string * bool * bool)>)> =
    v0
and closure50 (v0 : Func0<string, struct (string * Vec<struct (string * US23 * string * bool * bool)>)>) (v1 : string) : struct (string * Vec<struct (string * US23 * string * bool * bool)>) =
    let v2 : Func0<string, struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = method61(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : string, v6 : Vec<struct (string * US23 * string * bool * bool)>) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6)
and closure48 (v0 : Heap2, v1 : leptos_prelude_ArcMemo<Vec<string>>) () : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> =
    let v2 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v3 : string = "Box::pin($0)"
    let v4 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v6 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : leptos_prelude_ArcRwSignal<Heap0> = v6.l3
    let v8 : string = "Box::pin($0)"
    let v9 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v10 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v11 : Heap0 = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v13 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v1 v12 
    let v14 : unit = ()
    let v15 : string = $"true; let _func1_from_v14 = Func1::from(move |value| {{ //"
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = $"value"
    let v18 : string = Fable.Core.RustInterop.emitRustExpr () v17 
    let v19 : Vec<int32> = method58(v11)
    let v20 : unit = ()
    let v21 : string = $"true; let _func1_from_v20 = Func1::from(move |value| {{ //"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr () v21 
    let v23 : string = $"value"
    let v24 : int32 = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : int32 = v24 + 1
    let v26 : string = "https://api3.nearblocks.io/v1/account/" + v18 + "/txns?&order=desc&page=" + string v25 + "&per_page=" + string 25 + ""
    let v27 : US23 = US23_0
    let v28 : string = ""
    let func1_from_result = struct (v26, v27, v28, false, true) //
    let v29 : _ = func1_from_result
    let v30 : string = $"true; $0 /*"
    let v31 : bool = Fable.Core.RustInterop.emitRustExpr v29 v30 
    let v32 : string = $"*/ }}); //"
    let v33 : bool = Fable.Core.RustInterop.emitRustExpr () v32 
    let v34 : string = $"_func1_from_v20"
    let v35 : Func0<int32, struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr () v34 
    let v36 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v37 : (int32 -> struct (string * US23 * string * bool * bool)) = closure49(v35)
    let v38 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr struct (v19, v37) v36 
    let func1_from_result = struct (v18, v38) //
    let v39 : _ = func1_from_result
    let v40 : string = $"true; $0 /*"
    let v41 : bool = Fable.Core.RustInterop.emitRustExpr v39 v40 
    let v42 : string = $"*/ }}); //"
    let v43 : bool = Fable.Core.RustInterop.emitRustExpr () v42 
    let v44 : string = $"_func1_from_v14"
    let v45 : Func0<string, struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr () v44 
    let v46 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v47 : (string -> struct (string * Vec<struct (string * US23 * string * bool * bool)>)) = closure50(v45)
    let v48 : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr struct (v13, v47) v46 
    let v50 : string = $"%A{v48}"
    let v53 : string = "use_transactions.render (4) / accounts_requests new_arc_memo / result: " + string v50 + ""
    let v54 : int64 = 200L
    let v55 : string = method8(v54, v53)
    let v56 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v57 : bool = Fable.Core.RustInterop.emitRustExpr v55 v56 
    v48
and method62 (v0 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<struct (string * US23 * string * bool * bool)>>) : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<struct (string * US23 * string * bool * bool)>> =
    v0
and closure52 (v0 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<struct (string * US23 * string * bool * bool)>>) struct (v1 : string, v2 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<struct (string * US23 * string * bool * bool)> =
    let v3 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<struct (string * US23 * string * bool * bool)>> = method62(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let v6 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v4 v5 
    v6
and closure54 (v0 : Vec<struct (string * US23 * string * bool * bool)>) (v1 : UH0) : UH0 =
    UH0_1(v0, v1)
and closure53 () (v0 : Vec<struct (string * US23 * string * bool * bool)>) : (UH0 -> UH0) =
    closure54(v0)
and method63 () : (Vec<struct (string * US23 * string * bool * bool)> -> (UH0 -> UH0)) =
    closure53()
and method65 (v0 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<struct (string * US23 * string * bool * bool)> =
    v0
and method66 (v0 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<struct (string * US23 * string * bool * bool)> =
    v0
and method64 (v0 : UH0, v1 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<struct (string * US23 * string * bool * bool)> =
    match v0 with
    | UH0_1(v2, v3) -> (* Cons *)
        let v4 : Vec<struct (string * US23 * string * bool * bool)> = method65(v2)
        let v5 : Vec<struct (string * US23 * string * bool * bool)> = method66(v1)
        let v6 : string = "true; let mut v5 = v5"
        let v7 : bool = Fable.Core.RustInterop.emitRustExpr () v6 
        let v8 : string = "true; v5.extend(v4)"
        let v9 : bool = Fable.Core.RustInterop.emitRustExpr () v8 
        let v10 : string = "v5"
        let v11 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr () v10 
        method64(v3, v11)
    | UH0_0 -> (* Nil *)
        v1
and closure51 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>>) () : Vec<struct (string * US23 * string * bool * bool)> =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let struct (v7 : string, v8 : Vec<struct (string * US23 * string * bool * bool)>) = Fable.Core.RustInterop.emitRustExpr () v6 
    let func1_from_result = v8 //
    let v9 : _ = func1_from_result
    let v10 : string = $"true; $0 /*"
    let v11 : bool = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = $"*/ }}); //"
    let v13 : bool = Fable.Core.RustInterop.emitRustExpr () v12 
    let v14 : string = $"_func1_from_v3"
    let v15 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr () v14 
    let v16 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v17 : (struct (string * Vec<struct (string * US23 * string * bool * bool)>) -> Vec<struct (string * US23 * string * bool * bool)>) = closure52(v15)
    let v18 : Vec<Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr struct (v2, v17) v16 
    let v19 : (struct (string * US23 * string * bool * bool) []) = [||]
    let v20 : string = "$0.to_vec()"
    let v21 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v19 v20 
    let v22 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v23 : (Vec<struct (string * US23 * string * bool * bool)> []) = Fable.Core.RustInterop.emitRustExpr v18 v22 
    let v25 : Vec<struct (string * US23 * string * bool * bool)> list = v23 |> Array.toList
    let v33 : ((Vec<struct (string * US23 * string * bool * bool)> -> (UH0 -> UH0)) -> (Vec<struct (string * US23 * string * bool * bool)> list -> (UH0 -> UH0))) = List.foldBack
    let v34 : (Vec<struct (string * US23 * string * bool * bool)> -> (UH0 -> UH0)) = method63()
    let v35 : (Vec<struct (string * US23 * string * bool * bool)> list -> (UH0 -> UH0)) = v33 v34
    let v36 : (UH0 -> UH0) = v35 v25
    let v37 : UH0 = UH0_0
    let v38 : UH0 = v36 v37
    let v67 : Vec<struct (string * US23 * string * bool * bool)> = method64(v38, v21)
    let v69 : string = $"%A{v67}"
    let v72 : string = "use_transactions.render (5) / txns_requests new_arc_memo / result: " + string v69 + ""
    let v73 : int64 = 200L
    let v74 : string = method8(v73, v72)
    let v75 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v76 : bool = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v67
and method67 (v0 : Func0<struct (string * US23 * string * bool * bool), string>) : Func0<struct (string * US23 * string * bool * bool), string> =
    v0
and closure56 (v0 : Func0<struct (string * US23 * string * bool * bool), string>) struct (v1 : string, v2 : US23, v3 : string, v4 : bool, v5 : bool) : string =
    let v6 : Func0<struct (string * US23 * string * bool * bool), string> = method67(v0)
    let func1_move_x = struct (v1, v2, v3, v4, v5) //
    let v7 : _ = func1_move_x
    let v8 : string = "(move |x| v6(x))($0)"
    let v9 : string = Fable.Core.RustInterop.emitRustExpr v7 v8 
    v9
and method68 (v0 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<string>>) : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<string>> =
    v0
and closure57 (v0 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<string>>) struct (v1 : string, v2 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<string> =
    let v3 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<string>> = method68(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let v6 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v4 v5 
    v6
and closure59 (v0 : Vec<string>) (v1 : UH1) : UH1 =
    UH1_1(v0, v1)
and closure58 () (v0 : Vec<string>) : (UH1 -> UH1) =
    closure59(v0)
and method69 () : (Vec<string> -> (UH1 -> UH1)) =
    closure58()
and method71 (v0 : Vec<string>) : Vec<string> =
    v0
and method72 (v0 : Vec<string>) : Vec<string> =
    v0
and method70 (v0 : UH1, v1 : Vec<string>) : Vec<string> =
    match v0 with
    | UH1_1(v2, v3) -> (* Cons *)
        let v4 : Vec<string> = method71(v2)
        let v5 : Vec<string> = method72(v1)
        let v6 : string = "true; let mut v5 = v5"
        let v7 : bool = Fable.Core.RustInterop.emitRustExpr () v6 
        let v8 : string = "true; v5.extend(v4)"
        let v9 : bool = Fable.Core.RustInterop.emitRustExpr () v8 
        let v10 : string = "v5"
        let v11 : Vec<string> = Fable.Core.RustInterop.emitRustExpr () v10 
        method70(v3, v11)
    | UH1_0 -> (* Nil *)
        v1
and closure55 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>>) () : (string []) =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let struct (v7 : string, v8 : Vec<struct (string * US23 * string * bool * bool)>) = Fable.Core.RustInterop.emitRustExpr () v6 
    let v9 : unit = ()
    let v10 : string = $"true; let _func1_from_v9 = Func1::from(move |value| {{ //"
    let v11 : bool = Fable.Core.RustInterop.emitRustExpr () v10 
    let v12 : string = $"value"
    let struct (v13 : string, v14 : US23, v15 : string, v16 : bool, v17 : bool) = Fable.Core.RustInterop.emitRustExpr () v12 
    let func1_from_result = v7 //
    let v18 : _ = func1_from_result
    let v19 : string = $"true; $0 /*"
    let v20 : bool = Fable.Core.RustInterop.emitRustExpr v18 v19 
    let v21 : string = $"*/ }}); //"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr () v21 
    let v23 : string = $"_func1_from_v9"
    let v24 : Func0<struct (string * US23 * string * bool * bool), string> = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v26 : (struct (string * US23 * string * bool * bool) -> string) = closure56(v24)
    let v27 : Vec<string> = Fable.Core.RustInterop.emitRustExpr struct (v8, v26) v25 
    let func1_from_result = v27 //
    let v28 : _ = func1_from_result
    let v29 : string = $"true; $0 /*"
    let v30 : bool = Fable.Core.RustInterop.emitRustExpr v28 v29 
    let v31 : string = $"*/ }}); //"
    let v32 : bool = Fable.Core.RustInterop.emitRustExpr () v31 
    let v33 : string = $"_func1_from_v3"
    let v34 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<string>> = Fable.Core.RustInterop.emitRustExpr () v33 
    let v35 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v36 : (struct (string * Vec<struct (string * US23 * string * bool * bool)>) -> Vec<string>) = closure57(v34)
    let v37 : Vec<Vec<string>> = Fable.Core.RustInterop.emitRustExpr struct (v2, v36) v35 
    let v38 : (string []) = [||]
    let v39 : string = "$0.to_vec()"
    let v40 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v38 v39 
    let v41 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v42 : (Vec<string> []) = Fable.Core.RustInterop.emitRustExpr v37 v41 
    let v44 : Vec<string> list = v42 |> Array.toList
    let v52 : ((Vec<string> -> (UH1 -> UH1)) -> (Vec<string> list -> (UH1 -> UH1))) = List.foldBack
    let v53 : (Vec<string> -> (UH1 -> UH1)) = method69()
    let v54 : (Vec<string> list -> (UH1 -> UH1)) = v52 v53
    let v55 : (UH1 -> UH1) = v54 v44
    let v56 : UH1 = UH1_0
    let v57 : UH1 = v55 v56
    let v86 : Vec<string> = method70(v57, v40)
    let v87 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v88 : (string []) = Fable.Core.RustInterop.emitRustExpr v86 v87 
    let v90 : string = $"%A{v88}"
    let v93 : string = "use_transactions.render (6) / urls_accounts new_arc_memo / result: " + string v90 + ""
    let v94 : int64 = 200L
    let v95 : string = method8(v94, v93)
    let v96 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v97 : bool = Fable.Core.RustInterop.emitRustExpr v95 v96 
    v88
and method73 (v0 : Func0<crate_model_near_nearblocks_Action, struct (std_string_String * std_string_String option)>) : Func0<crate_model_near_nearblocks_Action, struct (std_string_String * std_string_String option)> =
    v0
and closure61 (v0 : Func0<crate_model_near_nearblocks_Action, struct (std_string_String * std_string_String option)>) (v1 : crate_model_near_nearblocks_Action) : struct (std_string_String * std_string_String option) =
    let v2 : Func0<crate_model_near_nearblocks_Action, struct (std_string_String * std_string_String option)> = method73(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : std_string_String option) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6)
and method74 (v0 : (struct (std_string_String * std_string_String option) [])) : (struct (std_string_String * std_string_String option) []) =
    v0
and closure62 () (v0 : Vec<std_string_String>) : (std_string_String []) =
    let v1 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v2 : (std_string_String []) = Fable.Core.RustInterop.emitRustExpr v0 v1 
    v2
and method75 () : (Vec<std_string_String> -> (std_string_String [])) =
    closure62()
and method76 (v0 : Func0<crate_model_near_nearblocks_Txn, struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))>) : Func0<crate_model_near_nearblocks_Txn, struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> =
    v0
and closure63 (v0 : Func0<crate_model_near_nearblocks_Txn, struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))>) (v1 : crate_model_near_nearblocks_Txn) : struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) =
    let v2 : Func0<crate_model_near_nearblocks_Txn, struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = method76(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : std_string_String, v7 : std_string_String, v8 : std_string_String, v9 : std_string_String, v10 : std_string_String, v11 : uint32, v12 : (struct (std_string_String * std_string_String option) []), v13 : float, v14 : bool, v15 : float, v16 : (std_string_String [])) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16)
and method77 (v0 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) =
    v0
and closure60 () (v0 : crate_model_near_nearblocks_Root) : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) =
    let v1 : string = "$0.txns"
    let v2 : Vec<crate_model_near_nearblocks_Txn> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let v7 : crate_model_near_nearblocks_Txn = Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : string = "$0.receipt_id"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v10 : string = "$0.predecessor_account_id"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v10 
    let v12 : string = "$0.receiver_account_id"
    let v13 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v12 
    let v14 : string = "$0.transaction_hash"
    let v15 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v14 
    let v16 : string = "$0.included_in_block_hash"
    let v17 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v16 
    let v18 : string = "$0.block_timestamp"
    let v19 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v18 
    let v20 : string = "$0.block"
    let v21 : crate_model_near_nearblocks_Block = Fable.Core.RustInterop.emitRustExpr v7 v20 
    let v22 : string = "$0.block_height"
    let v23 : uint32 = Fable.Core.RustInterop.emitRustExpr v21 v22 
    let v24 : string = "$0.actions"
    let v25 : Vec<crate_model_near_nearblocks_Action> = Fable.Core.RustInterop.emitRustExpr v7 v24 
    let v26 : unit = ()
    let v27 : string = $"true; let _func1_from_v26 = Func1::from(move |value| {{ //"
    let v28 : bool = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : string = $"value"
    let v30 : crate_model_near_nearblocks_Action = Fable.Core.RustInterop.emitRustExpr () v29 
    let v31 : string = "$0.action"
    let v32 : std_string_String = Fable.Core.RustInterop.emitRustExpr v30 v31 
    let v33 : string = "$0.method"
    let v34 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v30 v33 
    let func1_from_result = struct (v32, v34) //
    let v35 : _ = func1_from_result
    let v36 : string = $"true; $0 /*"
    let v37 : bool = Fable.Core.RustInterop.emitRustExpr v35 v36 
    let v38 : string = $"*/ }}); //"
    let v39 : bool = Fable.Core.RustInterop.emitRustExpr () v38 
    let v40 : string = $"_func1_from_v26"
    let v41 : Func0<crate_model_near_nearblocks_Action, struct (std_string_String * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr () v40 
    let v42 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v43 : (crate_model_near_nearblocks_Action -> struct (std_string_String * std_string_String option)) = closure61(v41)
    let v44 : Vec<struct (std_string_String * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr struct (v25, v43) v42 
    let v45 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v46 : (struct (std_string_String * std_string_String option) []) = Fable.Core.RustInterop.emitRustExpr v44 v45 
    let v47 : (struct (std_string_String * std_string_String option) []) = method74(v46)
    let v48 : string = "$0.actions_agg"
    let v49 : crate_model_near_nearblocks_ActionsAgg = Fable.Core.RustInterop.emitRustExpr v7 v48 
    let v50 : string = "$0.deposit"
    let v51 : float = Fable.Core.RustInterop.emitRustExpr v49 v50 
    let v52 : string = "$0.outcomes"
    let v53 : crate_model_near_nearblocks_Outcomes = Fable.Core.RustInterop.emitRustExpr v7 v52 
    let v54 : string = "$0.status"
    let v55 : bool = Fable.Core.RustInterop.emitRustExpr v53 v54 
    let v56 : string = "$0.outcomes_agg"
    let v57 : crate_model_near_nearblocks_OutcomesAgg = Fable.Core.RustInterop.emitRustExpr v7 v56 
    let v58 : string = "$0.transaction_fee"
    let v59 : float = Fable.Core.RustInterop.emitRustExpr v57 v58 
    let v60 : string = "$0.logs"
    let v61 : Vec<std_string_String> option = Fable.Core.RustInterop.emitRustExpr v7 v60 
    let v64 : (Vec<std_string_String> -> (std_string_String [])) = method75()
    let v65 : (std_string_String []) option = v61 |> Option.map v64 
    let v84 : (std_string_String []) = [||]
    let v86 : (std_string_String []) = v65 |> Option.defaultValue v84 
    let func1_from_result = struct (v9, v11, v13, v15, v17, v19, v23, v47, v51, v55, v59, v86) //
    let v89 : _ = func1_from_result
    let v90 : string = $"true; $0 /*"
    let v91 : bool = Fable.Core.RustInterop.emitRustExpr v89 v90 
    let v92 : string = $"*/ }}); //"
    let v93 : bool = Fable.Core.RustInterop.emitRustExpr () v92 
    let v94 : string = $"_func1_from_v3"
    let v95 : Func0<crate_model_near_nearblocks_Txn, struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr () v94 
    let v96 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v97 : (crate_model_near_nearblocks_Txn -> struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))) = closure63(v95)
    let v98 : Vec<struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr struct (v2, v97) v96 
    let v99 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v100 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) = Fable.Core.RustInterop.emitRustExpr v98 v99 
    let v101 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) = method77(v100)
    v101
and closure64 (v0 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>>) () : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option =
    let v1 : string = "state_core.use_requests (2) / database_memo"
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v5 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v0 v4 
    let v6 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v7 : bool = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : string = "x"
    let v9 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : (unit -> unit) = closure8()
    let _v10 = true
    let v11 : string = "PartialEqWrapper($0)"
    let v12 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v9 v11 
    let v13 : string = "true; $0 })"
    let v14 : bool = Fable.Core.RustInterop.emitRustExpr v12 v13 
    let v15 : string = "_optionm_map_"
    let v16 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr () v15 
    v16
and method79 (v0 : string) : string =
    v0
and method80 (v0 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>>) : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> =
    v0
and closure65 (v0 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>>) struct (v1 : string, v2 : US23, v3 : string, v4 : bool, v5 : bool) : std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>> =
    let v6 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = method80(v0)
    let func1_move_x = struct (v1, v2, v3, v4, v5) //
    let v7 : _ = func1_move_x
    let v8 : string = "(move |x| v6(x))($0)"
    let v9 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr v7 v8 
    v9
and method81 (v0 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>>) : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> =
    v0
and closure66 (v0 : leptos_prelude_ArcLocalResource<Result<Vec<Heap4 option>, std_string_String>>) () : Result<Vec<Heap4 option>, std_string_String> option =
    let v1 : string = "state_core.use_requests (5) / state_data_func"
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : web_sys_Window = method28()
    let v5 : Result<web_sys_Storage option, wasm_bindgen_JsValue> = method29(v4)
    let v6 : (web_sys_Storage option -> US9) = method30()
    let v7 : (wasm_bindgen_JsValue -> US9) = method31()
    let v9 : US9 = match v5 with Ok x -> v6 x | Error x -> v7 x
    let v45 : US10 =
        match v9 with
        | US9_1(v42) -> (* Error *)
            US10_1(v42)
        | US9_0(v12) -> (* Ok *)
            let v15 : (web_sys_Storage -> US11) = method32()
            let v16 : US11 option = v12 |> Option.map v15 
            let v36 : US11 = US11_1
            let v37 : US11 = v16 |> Option.defaultValue v36 
            US10_0(v37)
    let v59 : Result<Vec<Heap4 option>, std_string_String> option =
        match v45 with
        | US10_0(v46) -> (* Ok *)
            match v46 with
            | US11_0(v47) -> (* Some *)
                let v48 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
                let v49 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v0 v48 
                v49
            | _ ->
                let v51 : Result<Vec<Heap4 option>, std_string_String> option = None
                v51
        | _ ->
            let v56 : Result<Vec<Heap4 option>, std_string_String> option = None
            v56
    let v61 : string = $"%A{v59}"
    let v64 : string = "state_core.use_requests (6) / state_data_func func0 / result: " + string v61 + ""
    let v65 : int64 = 200L
    let v66 : string = method8(v65, v64)
    let v67 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v68 : bool = Fable.Core.RustInterop.emitRustExpr v66 v67 
    v59
and closure67 () (v0 : Result<Vec<Heap4 option>, std_string_String>) : US26 =
    US26_0(v0)
and method82 () : (Result<Vec<Heap4 option>, std_string_String> -> US26) =
    closure67()
and closure68 () (v0 : Vec<Heap4 option>) : US24 =
    US24_0(v0)
and method83 () : (Vec<Heap4 option> -> US24) =
    closure68()
and closure69 () (v0 : std_string_String) : US24 =
    US24_1(v0)
and method84 () : (std_string_String -> US24) =
    closure69()
and closure70 () (v0 : Heap4) : US25 =
    US25_0(v0)
and method85 () : (Heap4 -> US25) =
    closure70()
and closure73 () (v0 : US25) : US32 =
    US32_0(v0)
and method87 () : (US25 -> US32) =
    closure73()
and method88 (v0 : US23) : US23 =
    v0
and method89 (v0 : string) : string =
    v0
and method90 (v0 : std_string_String) : std_string_String =
    v0
and method91 (v0 : string) : string =
    v0
and method92 (v0 : std_string_String) : std_string_String =
    v0
and method93 (v0 : reqwest_RequestBuilder) : reqwest_RequestBuilder =
    v0
and method94 (v0 : reqwest_RequestBuilder) : reqwest_RequestBuilder =
    v0
and closure74 () (v0 : reqwest_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method95 () : (reqwest_Error -> std_string_String) =
    closure74()
and closure72 (v0 : US27, v1 : int32) struct (v2 : string, v3 : US23, v4 : string, v5 : bool, v6 : bool) : std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>> =
    let v7 : string = "true; let __future_init = Box::pin(/*"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr () v7 
    let v9 : string = "*/ async move { /*"
    let v10 : bool = Fable.Core.RustInterop.emitRustExpr () v9 
    let v11 : string = "*/ ()"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr () v11 
    let v69 : US29 =
        match v0 with
        | US27_1 -> (* None *)
            US29_1
        | US27_0(v13) -> (* Some *)
            let v65 : US30 =
                match v13 with
                | US28_1(v62) -> (* Error *)
                    US30_1(v62)
                | US28_0(v14) -> (* Ok *)
                    let v15 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v16 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v14 v15 
                    let v17 : US25 option = v16 |> Array.tryItem v1 
                    let v20 : (US25 -> US32) = method87()
                    let v21 : US32 option = v17 |> Option.map v20 
                    let v41 : US32 = US32_1
                    let v42 : US32 = v21 |> Option.defaultValue v41 
                    let v52 : US25 =
                        match v42 with
                        | US32_0(v46) -> (* Some *)
                            match v46 with
                            | US25_0(v47) -> (* Some *)
                                US25_0(v47)
                            | _ ->
                                US25_1
                        | _ ->
                            US25_1
                    let v60 : US31 =
                        match v52 with
                        | US25_1 -> (* None *)
                            US31_1
                        | US25_0(v53) -> (* Some *)
                            let v54 : std_string_String = v53.l0
                            let v55 : string = "fable_library_rust::String_::fromString($0)"
                            let v56 : string = Fable.Core.RustInterop.emitRustExpr v54 v55 
                            US31_0(v56)
                    US30_0(v60)
            US29_0(v65)
    let v71 : string = $"%A{struct (v3, v5, v6)}"
    let v74 : int64 = 400L
    let v75 : string = method8(v74, v71)
    let v77 : string = $"%A{v0}"
    let v80 : int64 = 400L
    let v81 : string = method8(v80, v77)
    let v83 : string = $"%A{v69}"
    let v86 : int64 = 400L
    let v87 : string = method8(v86, v83)
    let v112 : bool =
        if v6 then
            true
        else
            match v0 with
            | US27_0(v88) -> (* Some *)
                match v88 with
                | US28_0(v89) -> (* Ok *)
                    let v90 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v91 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v89 v90 
                    let v92 : int32 = v91.Length
                    let v93 : bool = v92 = 0
                    if v93 then
                        false
                    else
                        match v69 with
                        | US29_0(v94) -> (* Some *)
                            match v94 with
                            | US30_0(v95) -> (* Ok *)
                                match v95 with
                                | US31_1 -> (* None *)
                                    true
                                | _ ->
                                    false
                            | _ ->
                                false
                        | _ ->
                            false
                | _ ->
                    match v69 with
                    | US29_0(v100) -> (* Some *)
                        match v100 with
                        | US30_0(v101) -> (* Ok *)
                            match v101 with
                            | US31_1 -> (* None *)
                                true
                            | _ ->
                                false
                        | _ ->
                            false
                    | _ ->
                        false
            | _ ->
                match v69 with
                | US29_0(v106) -> (* Some *)
                    match v106 with
                    | US30_0(v107) -> (* Ok *)
                        match v107 with
                        | US31_1 -> (* None *)
                            true
                        | _ ->
                            false
                    | _ ->
                        false
                | _ ->
                    false
    let v113 : string = "state_core.use_requests (9) / result memo / state_data: " + string v81 + " / state_data': " + string v87 + " / request: " + string v75 + " / should_fetch: " + string v112 + ""
    let v114 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v115 : bool = Fable.Core.RustInterop.emitRustExpr v113 v114 
    let v116 : bool = v112 = false
    let v559 : US33 =
        if v116 then
            let v118 : string option = None
            US33_0(v118)
        else
            let v122 : US23 = method88(v3)
            let v276 : reqwest_RequestBuilder =
                match v122 with
                | US23_0 -> (* Get *)
                    let v123 : string = method89(v2)
                    (* run_target_args'
                    let v128 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v129 : string = "&*$0"
                    let v130 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v123 v129 
                    let _run_target_args'_v128 = v130 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v131 : string = "&*$0"
                    let v132 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v123 v131 
                    let _run_target_args'_v128 = v132 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v133 : string = "&*$0"
                    let v134 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v123 v133 
                    let _run_target_args'_v128 = v134 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v136 : Ref<Str> = v123 |> unbox<Ref<Str>>
                    let _run_target_args'_v128 = v136 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v140 : Ref<Str> = v123 |> unbox<Ref<Str>>
                    let _run_target_args'_v128 = v140 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v144 : Ref<Str> = v123 |> unbox<Ref<Str>>
                    let _run_target_args'_v128 = v144 
                    #endif
#else
                    let v148 : Ref<Str> = v123 |> unbox<Ref<Str>>
                    let _run_target_args'_v128 = v148 
                    #endif
                    let v151 : Ref<Str> = _run_target_args'_v128 
                    (* run_target_args'
                    let v164 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v165 : string = "String::from($0)"
                    let v166 : std_string_String = Fable.Core.RustInterop.emitRustExpr v151 v165 
                    let _run_target_args'_v164 = v166 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v167 : string = "String::from($0)"
                    let v168 : std_string_String = Fable.Core.RustInterop.emitRustExpr v151 v167 
                    let _run_target_args'_v164 = v168 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v169 : string = "String::from($0)"
                    let v170 : std_string_String = Fable.Core.RustInterop.emitRustExpr v151 v169 
                    let _run_target_args'_v164 = v170 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v172 : std_string_String = v151 |> unbox<std_string_String>
                    let _run_target_args'_v164 = v172 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v176 : std_string_String = v151 |> unbox<std_string_String>
                    let _run_target_args'_v164 = v176 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v180 : std_string_String = v151 |> unbox<std_string_String>
                    let _run_target_args'_v164 = v180 
                    #endif
#else
                    let v184 : std_string_String = v151 |> unbox<std_string_String>
                    let _run_target_args'_v164 = v184 
                    #endif
                    let v187 : std_string_String = _run_target_args'_v164 
                    let v196 : std_string_String = method90(v187)
                    let v197 : string = "reqwest_wasm::Client::builder().build().map_err(|err| err.to_string())?.get(v196)"
                    let v198 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr () v197 
                    v198
                | US23_1 -> (* Post *)
                    let v199 : string = method91(v2)
                    (* run_target_args'
                    let v204 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v205 : string = "&*$0"
                    let v206 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v199 v205 
                    let _run_target_args'_v204 = v206 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v207 : string = "&*$0"
                    let v208 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v199 v207 
                    let _run_target_args'_v204 = v208 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v209 : string = "&*$0"
                    let v210 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v199 v209 
                    let _run_target_args'_v204 = v210 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v212 : Ref<Str> = v199 |> unbox<Ref<Str>>
                    let _run_target_args'_v204 = v212 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v216 : Ref<Str> = v199 |> unbox<Ref<Str>>
                    let _run_target_args'_v204 = v216 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v220 : Ref<Str> = v199 |> unbox<Ref<Str>>
                    let _run_target_args'_v204 = v220 
                    #endif
#else
                    let v224 : Ref<Str> = v199 |> unbox<Ref<Str>>
                    let _run_target_args'_v204 = v224 
                    #endif
                    let v227 : Ref<Str> = _run_target_args'_v204 
                    (* run_target_args'
                    let v240 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v241 : string = "String::from($0)"
                    let v242 : std_string_String = Fable.Core.RustInterop.emitRustExpr v227 v241 
                    let _run_target_args'_v240 = v242 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v243 : string = "String::from($0)"
                    let v244 : std_string_String = Fable.Core.RustInterop.emitRustExpr v227 v243 
                    let _run_target_args'_v240 = v244 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v245 : string = "String::from($0)"
                    let v246 : std_string_String = Fable.Core.RustInterop.emitRustExpr v227 v245 
                    let _run_target_args'_v240 = v246 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v248 : std_string_String = v227 |> unbox<std_string_String>
                    let _run_target_args'_v240 = v248 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v252 : std_string_String = v227 |> unbox<std_string_String>
                    let _run_target_args'_v240 = v252 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v256 : std_string_String = v227 |> unbox<std_string_String>
                    let _run_target_args'_v240 = v256 
                    #endif
#else
                    let v260 : std_string_String = v227 |> unbox<std_string_String>
                    let _run_target_args'_v240 = v260 
                    #endif
                    let v263 : std_string_String = _run_target_args'_v240 
                    let v272 : std_string_String = method92(v263)
                    let v273 : string = "reqwest_wasm::Client::builder().build().map_err(|err| err.to_string())?.post(v272)"
                    let v274 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr () v273 
                    v274
            (* run_target_args'
            let v281 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v282 : string = "&*$0"
            let v283 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v282 
            let _run_target_args'_v281 = v283 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v284 : string = "&*$0"
            let v285 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v284 
            let _run_target_args'_v281 = v285 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v286 : string = "&*$0"
            let v287 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v286 
            let _run_target_args'_v281 = v287 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v289 : Ref<Str> = v4 |> unbox<Ref<Str>>
            let _run_target_args'_v281 = v289 
            #endif
#if FABLE_COMPILER_PYTHON
            let v293 : Ref<Str> = v4 |> unbox<Ref<Str>>
            let _run_target_args'_v281 = v293 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v297 : Ref<Str> = v4 |> unbox<Ref<Str>>
            let _run_target_args'_v281 = v297 
            #endif
#else
            let v301 : Ref<Str> = v4 |> unbox<Ref<Str>>
            let _run_target_args'_v281 = v301 
            #endif
            let v304 : Ref<Str> = _run_target_args'_v281 
            (* run_target_args'
            let v317 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v318 : string = "String::from($0)"
            let v319 : std_string_String = Fable.Core.RustInterop.emitRustExpr v304 v318 
            let _run_target_args'_v317 = v319 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v320 : string = "String::from($0)"
            let v321 : std_string_String = Fable.Core.RustInterop.emitRustExpr v304 v320 
            let _run_target_args'_v317 = v321 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v322 : string = "String::from($0)"
            let v323 : std_string_String = Fable.Core.RustInterop.emitRustExpr v304 v322 
            let _run_target_args'_v317 = v323 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v325 : std_string_String = v304 |> unbox<std_string_String>
            let _run_target_args'_v317 = v325 
            #endif
#if FABLE_COMPILER_PYTHON
            let v329 : std_string_String = v304 |> unbox<std_string_String>
            let _run_target_args'_v317 = v329 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v333 : std_string_String = v304 |> unbox<std_string_String>
            let _run_target_args'_v317 = v333 
            #endif
#else
            let v337 : std_string_String = v304 |> unbox<std_string_String>
            let _run_target_args'_v317 = v337 
            #endif
            let v340 : std_string_String = _run_target_args'_v317 
            let v349 : string = "reqwest_wasm::RequestBuilder::body(v276, $0)"
            let v350 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr v340 v349 
            let v351 : bool = v5 = false
            let v506 : reqwest_RequestBuilder =
                if v351 then
                    let v352 : string = "v350"
                    let v353 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr () v352 
                    v353
                else
                    let v354 : string = "reqwest_wasm::header::CONTENT_TYPE.to_string()"
                    let v355 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v354 
                    let v356 : string = "fable_library_rust::String_::fromString($0)"
                    let v357 : string = Fable.Core.RustInterop.emitRustExpr v355 v356 
                    let v358 : reqwest_RequestBuilder = method93(v350)
                    (* run_target_args'
                    let v363 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v364 : string = "&*$0"
                    let v365 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v357 v364 
                    let _run_target_args'_v363 = v365 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v366 : string = "&*$0"
                    let v367 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v357 v366 
                    let _run_target_args'_v363 = v367 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v368 : string = "&*$0"
                    let v369 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v357 v368 
                    let _run_target_args'_v363 = v369 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v371 : Ref<Str> = v357 |> unbox<Ref<Str>>
                    let _run_target_args'_v363 = v371 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v375 : Ref<Str> = v357 |> unbox<Ref<Str>>
                    let _run_target_args'_v363 = v375 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v379 : Ref<Str> = v357 |> unbox<Ref<Str>>
                    let _run_target_args'_v363 = v379 
                    #endif
#else
                    let v383 : Ref<Str> = v357 |> unbox<Ref<Str>>
                    let _run_target_args'_v363 = v383 
                    #endif
                    let v386 : Ref<Str> = _run_target_args'_v363 
                    (* run_target_args'
                    let v399 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v400 : string = "String::from($0)"
                    let v401 : std_string_String = Fable.Core.RustInterop.emitRustExpr v386 v400 
                    let _run_target_args'_v399 = v401 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v402 : string = "String::from($0)"
                    let v403 : std_string_String = Fable.Core.RustInterop.emitRustExpr v386 v402 
                    let _run_target_args'_v399 = v403 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v404 : string = "String::from($0)"
                    let v405 : std_string_String = Fable.Core.RustInterop.emitRustExpr v386 v404 
                    let _run_target_args'_v399 = v405 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v407 : std_string_String = v386 |> unbox<std_string_String>
                    let _run_target_args'_v399 = v407 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v411 : std_string_String = v386 |> unbox<std_string_String>
                    let _run_target_args'_v399 = v411 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v415 : std_string_String = v386 |> unbox<std_string_String>
                    let _run_target_args'_v399 = v415 
                    #endif
#else
                    let v419 : std_string_String = v386 |> unbox<std_string_String>
                    let _run_target_args'_v399 = v419 
                    #endif
                    let v422 : std_string_String = _run_target_args'_v399 
                    let v431 : string = "application/json"
                    (* run_target_args'
                    let v436 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v437 : string = "&*$0"
                    let v438 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v431 v437 
                    let _run_target_args'_v436 = v438 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v439 : string = "&*$0"
                    let v440 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v431 v439 
                    let _run_target_args'_v436 = v440 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v441 : string = "&*$0"
                    let v442 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v431 v441 
                    let _run_target_args'_v436 = v442 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v444 : Ref<Str> = v431 |> unbox<Ref<Str>>
                    let _run_target_args'_v436 = v444 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v448 : Ref<Str> = v431 |> unbox<Ref<Str>>
                    let _run_target_args'_v436 = v448 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v452 : Ref<Str> = v431 |> unbox<Ref<Str>>
                    let _run_target_args'_v436 = v452 
                    #endif
#else
                    let v456 : Ref<Str> = v431 |> unbox<Ref<Str>>
                    let _run_target_args'_v436 = v456 
                    #endif
                    let v459 : Ref<Str> = _run_target_args'_v436 
                    (* run_target_args'
                    let v472 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v473 : string = "String::from($0)"
                    let v474 : std_string_String = Fable.Core.RustInterop.emitRustExpr v459 v473 
                    let _run_target_args'_v472 = v474 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v475 : string = "String::from($0)"
                    let v476 : std_string_String = Fable.Core.RustInterop.emitRustExpr v459 v475 
                    let _run_target_args'_v472 = v476 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v477 : string = "String::from($0)"
                    let v478 : std_string_String = Fable.Core.RustInterop.emitRustExpr v459 v477 
                    let _run_target_args'_v472 = v478 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v480 : std_string_String = v459 |> unbox<std_string_String>
                    let _run_target_args'_v472 = v480 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v484 : std_string_String = v459 |> unbox<std_string_String>
                    let _run_target_args'_v472 = v484 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v488 : std_string_String = v459 |> unbox<std_string_String>
                    let _run_target_args'_v472 = v488 
                    #endif
#else
                    let v492 : std_string_String = v459 |> unbox<std_string_String>
                    let _run_target_args'_v472 = v492 
                    #endif
                    let v495 : std_string_String = _run_target_args'_v472 
                    let v504 : string = "reqwest_wasm::RequestBuilder::header(v358, $0, $1)"
                    let v505 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr struct (v422, v495) v504 
                    v505
            let v507 : reqwest_RequestBuilder = method94(v506)
            let v508 : string = "Box::pin(reqwest_wasm::RequestBuilder::send(v507))"
            let v509 : std_pin_Pin<Box<Dyn<std_future_Future<Result<reqwest_Response, reqwest_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v508 
            let v510 : string = "v509.await"
            let v511 : Result<reqwest_Response, reqwest_Error> = Fable.Core.RustInterop.emitRustExpr () v510 
            let v512 : (reqwest_Error -> std_string_String) = method95()
            (* run_target_args'
            let v514 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v515 : string = "$0.map_err(|x| $1(x))"
            let v516 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v511, v512) v515 
            let _run_target_args'_v514 = v516 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v517 : string = "$0.map_err(|x| $1(x))"
            let v518 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v511, v512) v517 
            let _run_target_args'_v514 = v518 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v519 : string = "$0.map_err(|x| $1(x))"
            let v520 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v511, v512) v519 
            let _run_target_args'_v514 = v520 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v521 : Result<reqwest_Response, std_string_String> = match v511 with Ok x -> Ok x | Error x -> Error (v512 x)
            let _run_target_args'_v514 = v521 
            #endif
#if FABLE_COMPILER_PYTHON
            let v522 : Result<reqwest_Response, std_string_String> = match v511 with Ok x -> Ok x | Error x -> Error (v512 x)
            let _run_target_args'_v514 = v522 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v523 : Result<reqwest_Response, std_string_String> = match v511 with Ok x -> Ok x | Error x -> Error (v512 x)
            let _run_target_args'_v514 = v523 
            #endif
#else
            let v524 : Result<reqwest_Response, std_string_String> = match v511 with Ok x -> Ok x | Error x -> Error (v512 x)
            let _run_target_args'_v514 = v524 
            #endif
            let v525 : Result<reqwest_Response, std_string_String> = _run_target_args'_v514 
            let v528 : string = "$0?"
            let v529 : reqwest_Response = Fable.Core.RustInterop.emitRustExpr v525 v528 
            let v530 : string = "Box::pin(reqwest_wasm::Response::text(v529))"
            let v531 : std_pin_Pin<Box<Dyn<std_future_Future<Result<std_string_String, reqwest_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v530 
            let v532 : string = "v531.await"
            let v533 : Result<std_string_String, reqwest_Error> = Fable.Core.RustInterop.emitRustExpr () v532 
            let v534 : (reqwest_Error -> std_string_String) = method95()
            (* run_target_args'
            let v536 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v537 : string = "$0.map_err(|x| $1(x))"
            let v538 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v533, v534) v537 
            let _run_target_args'_v536 = v538 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v539 : string = "$0.map_err(|x| $1(x))"
            let v540 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v533, v534) v539 
            let _run_target_args'_v536 = v540 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v541 : string = "$0.map_err(|x| $1(x))"
            let v542 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v533, v534) v541 
            let _run_target_args'_v536 = v542 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v543 : Result<std_string_String, std_string_String> = match v533 with Ok x -> Ok x | Error x -> Error (v534 x)
            let _run_target_args'_v536 = v543 
            #endif
#if FABLE_COMPILER_PYTHON
            let v544 : Result<std_string_String, std_string_String> = match v533 with Ok x -> Ok x | Error x -> Error (v534 x)
            let _run_target_args'_v536 = v544 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v545 : Result<std_string_String, std_string_String> = match v533 with Ok x -> Ok x | Error x -> Error (v534 x)
            let _run_target_args'_v536 = v545 
            #endif
#else
            let v546 : Result<std_string_String, std_string_String> = match v533 with Ok x -> Ok x | Error x -> Error (v534 x)
            let _run_target_args'_v536 = v546 
            #endif
            let v547 : Result<std_string_String, std_string_String> = _run_target_args'_v536 
            let v550 : string = "$0?"
            let v551 : std_string_String = Fable.Core.RustInterop.emitRustExpr v547 v550 
            let v552 : string = "fable_library_rust::String_::fromString($0)"
            let v553 : string = Fable.Core.RustInterop.emitRustExpr v551 v552 
            let v555 : string option = Some v553 
            US33_0(v555)
    let v571 : Result<string option, std_string_String> =
        match v559 with
        | US33_1(v565) -> (* Error *)
            let v567 : Result<string option, std_string_String> = Error v565 
            v567
        | US33_0(v560) -> (* Ok *)
            let v562 : Result<string option, std_string_String> = Ok v560 
            v562
    let v572 : string = ""
    let v573 : string = "}"
    let v574 : string = v572 + v573 
    let x = v571 //
    let v575 : _ = x
    let v576 : unit = ()
    (* run_target_args'
    let v577 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v578 : string = $"true; let _fix_closure_v576 = $0"
    let v579 : bool = Fable.Core.RustInterop.emitRustExpr v575 v578 
    let _run_target_args'_v577 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v580 : string = $"true; let _fix_closure_v576 = $0"
    let v581 : bool = Fable.Core.RustInterop.emitRustExpr v575 v580 
    let _run_target_args'_v577 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v582 : string = $"true; let _fix_closure_v576 = $0"
    let v583 : bool = Fable.Core.RustInterop.emitRustExpr v575 v582 
    let _run_target_args'_v577 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v577 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v577 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v577 = false 
    #endif
#else
    let _run_target_args'_v577 = false 
    #endif
    let v584 : bool = _run_target_args'_v577 
    let v585 : string = $"true; _fix_closure_v576 " + v574 + "); " + v572 + " // rust.fix_closure'"
    let v586 : bool = Fable.Core.RustInterop.emitRustExpr () v585 
    let v587 : string = "__future_init"
    let v588 : _ = Fable.Core.RustInterop.emitRustExpr () v587 
    let v589 : string = "v588"
    let v590 : std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v589 
    v590
and closure71 (v0 : US27) (v1 : int32) : (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>) =
    closure72(v0, v1)
and method86 (v0 : US27) : (int32 -> (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>)) =
    closure71(v0)
and method96 (v0 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<struct (string * US23 * string * bool * bool)> =
    v0
and method97 (v0 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>>) : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> =
    v0
and method98 (v0 : string) : string =
    v0
and closure75 () (v0 : rexie_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method99 () : (rexie_Error -> std_string_String) =
    closure75()
and method100 (v0 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>>) : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> =
    v0
and closure76 (v0 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>>) struct (v1 : string, v2 : US23, v3 : string, v4 : bool, v5 : bool) : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>> =
    let v6 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = method100(v0)
    let func1_move_x = struct (v1, v2, v3, v4, v5) //
    let v7 : _ = func1_move_x
    let v8 : string = "(move |x| v6(x))($0)"
    let v9 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr v7 v8 
    v9
and method101 (v0 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>>) : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> =
    v0
and method102 (v0 : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>>) : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>> =
    v0
and closure77 (v0 : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>>) (v1 : Heap4) : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>> =
    let v2 : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>> = method102(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure79 () (v0 : Result<Vec<string option>, std_string_String>) : US37 =
    US37_0(v0)
and method103 () : (Result<Vec<string option>, std_string_String> -> US37) =
    closure79()
and closure80 () (v0 : Vec<string option>) : US39 =
    US39_0(v0)
and method104 () : (Vec<string option> -> US39) =
    closure80()
and closure81 () (v0 : std_string_String) : US39 =
    US39_1(v0)
and method105 () : (std_string_String -> US39) =
    closure81()
and closure82 () (v0 : string) : US31 =
    US31_0(v0)
and method106 () : (string -> US31) =
    closure82()
and closure85 () (v0 : US31) : US42 =
    US42_0(v0)
and method108 () : (US31 -> US42) =
    closure85()
and closure86 () (v0 : crate_model_near_nearblocks_Root) : crate_model_near_nearblocks_Root option =
    let v2 : crate_model_near_nearblocks_Root option = Some v0 
    v2
and method109 () : (crate_model_near_nearblocks_Root -> crate_model_near_nearblocks_Root option) =
    closure86()
and method110 (v0 : Result<crate_model_near_nearblocks_Root, std_string_String>) : Result<crate_model_near_nearblocks_Root, std_string_String> =
    v0
and closure84 (v0 : US35, v1 : US41, v2 : int32) struct (v3 : string, v4 : US23, v5 : string, v6 : bool, v7 : bool) : Result<crate_model_near_nearblocks_Root option, std_string_String> =
    let v62 : US29 =
        match v0 with
        | US35_1 -> (* None *)
            US29_1
        | US35_0(v8) -> (* Some *)
            let v58 : US30 =
                match v8 with
                | US36_1(v55) -> (* Error *)
                    US30_1(v55)
                | US36_0(v9) -> (* Ok *)
                    let v10 : US25 option = v9 |> Array.tryItem v2 
                    let v13 : (US25 -> US32) = method87()
                    let v14 : US32 option = v10 |> Option.map v13 
                    let v34 : US32 = US32_1
                    let v35 : US32 = v14 |> Option.defaultValue v34 
                    let v45 : US25 =
                        match v35 with
                        | US32_0(v39) -> (* Some *)
                            match v39 with
                            | US25_0(v40) -> (* Some *)
                                US25_0(v40)
                            | _ ->
                                US25_1
                        | _ ->
                            US25_1
                    let v53 : US31 =
                        match v45 with
                        | US25_1 -> (* None *)
                            US31_1
                        | US25_0(v46) -> (* Some *)
                            let v47 : std_string_String = v46.l0
                            let v48 : string = "fable_library_rust::String_::fromString($0)"
                            let v49 : string = Fable.Core.RustInterop.emitRustExpr v47 v48 
                            US31_0(v49)
                    US30_0(v53)
            US29_0(v58)
    let v64 : string = $"%A{struct (v3, v4, v5, v6, v7)}"
    let v67 : int64 = 400L
    let v68 : string = method8(v67, v64)
    let v70 : string = $"%A{v62}"
    let v73 : int64 = 400L
    let v74 : string = method8(v73, v70)
    let v75 : string = "state_core.use_request (15) / result memo / request: " + string v68 + " / state_data: " + string v74 + ""
    let v76 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v77 : bool = Fable.Core.RustInterop.emitRustExpr v75 v76 
    let v79 : string = $"%A{v1}"
    let v82 : int64 = 400L
    let v83 : string = method8(v82, v79)
    let v84 : string = "state_core.use_request (16) / effect / json: " + string v83 + ""
    let v85 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v86 : bool = Fable.Core.RustInterop.emitRustExpr v84 v85 
    let v129 : US31 =
        match v1 with
        | US41_1(v126) -> (* Error *)
            US31_1
        | US41_0(v87) -> (* Ok *)
            let v88 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
            let v89 : (US31 []) = Fable.Core.RustInterop.emitRustExpr v87 v88 
            let v90 : US31 option = v89 |> Array.tryItem v2 
            let v93 : (US31 -> US42) = method108()
            let v94 : US42 option = v90 |> Option.map v93 
            let v114 : US42 = US42_1
            let v115 : US42 = v94 |> Option.defaultValue v114 
            match v115 with
            | US42_0(v119) -> (* Some *)
                match v119 with
                | US31_0(v120) -> (* Some *)
                    US31_0(v120)
                | _ ->
                    US31_1
            | _ ->
                US31_1
    match v129 with
    | US31_0(v130) -> (* Some *)
        let v131 : string = method41(v130)
        (* run_target_args'
        let v136 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v137 : string = "&*$0"
        let v138 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v131 v137 
        let _run_target_args'_v136 = v138 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v139 : string = "&*$0"
        let v140 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v131 v139 
        let _run_target_args'_v136 = v140 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v141 : string = "&*$0"
        let v142 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v131 v141 
        let _run_target_args'_v136 = v142 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v144 : Ref<Str> = v131 |> unbox<Ref<Str>>
        let _run_target_args'_v136 = v144 
        #endif
#if FABLE_COMPILER_PYTHON
        let v148 : Ref<Str> = v131 |> unbox<Ref<Str>>
        let _run_target_args'_v136 = v148 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v152 : Ref<Str> = v131 |> unbox<Ref<Str>>
        let _run_target_args'_v136 = v152 
        #endif
#else
        let v156 : Ref<Str> = v131 |> unbox<Ref<Str>>
        let _run_target_args'_v136 = v156 
        #endif
        let v159 : Ref<Str> = _run_target_args'_v136 
        let v168 : string = "serde_json::from_str(&$0)"
        let v169 : Result<crate_model_near_nearblocks_Root, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v159 v168 
        let v170 : (serde_json_Error -> std_string_String) = method42()
        (* run_target_args'
        let v172 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v173 : string = "$0.map_err(|x| $1(x))"
        let v174 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v169, v170) v173 
        let _run_target_args'_v172 = v174 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v175 : string = "$0.map_err(|x| $1(x))"
        let v176 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v169, v170) v175 
        let _run_target_args'_v172 = v176 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v177 : string = "$0.map_err(|x| $1(x))"
        let v178 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v169, v170) v177 
        let _run_target_args'_v172 = v178 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v179 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v169 with Ok x -> Ok x | Error x -> Error (v170 x)
        let _run_target_args'_v172 = v179 
        #endif
#if FABLE_COMPILER_PYTHON
        let v180 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v169 with Ok x -> Ok x | Error x -> Error (v170 x)
        let _run_target_args'_v172 = v180 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v181 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v169 with Ok x -> Ok x | Error x -> Error (v170 x)
        let _run_target_args'_v172 = v181 
        #endif
#else
        let v182 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v169 with Ok x -> Ok x | Error x -> Error (v170 x)
        let _run_target_args'_v172 = v182 
        #endif
        let v183 : Result<crate_model_near_nearblocks_Root, std_string_String> = _run_target_args'_v172 
        let v186 : (crate_model_near_nearblocks_Root -> crate_model_near_nearblocks_Root option) = method109()
        let v187 : Result<crate_model_near_nearblocks_Root, std_string_String> = method110(v183)
        let v188 : string = "v187.map(|x| v186(x))"
        let v189 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v188 
        v189
    | _ ->
        match v62 with
        | US29_0(v190) -> (* Some *)
            match v190 with
            | US30_0(v191) -> (* Ok *)
                match v191 with
                | US31_0(v192) -> (* Some *)
                    let v193 : string = method41(v192)
                    (* run_target_args'
                    let v198 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v199 : string = "&*$0"
                    let v200 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v193 v199 
                    let _run_target_args'_v198 = v200 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v201 : string = "&*$0"
                    let v202 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v193 v201 
                    let _run_target_args'_v198 = v202 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v203 : string = "&*$0"
                    let v204 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v193 v203 
                    let _run_target_args'_v198 = v204 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v206 : Ref<Str> = v193 |> unbox<Ref<Str>>
                    let _run_target_args'_v198 = v206 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v210 : Ref<Str> = v193 |> unbox<Ref<Str>>
                    let _run_target_args'_v198 = v210 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v214 : Ref<Str> = v193 |> unbox<Ref<Str>>
                    let _run_target_args'_v198 = v214 
                    #endif
#else
                    let v218 : Ref<Str> = v193 |> unbox<Ref<Str>>
                    let _run_target_args'_v198 = v218 
                    #endif
                    let v221 : Ref<Str> = _run_target_args'_v198 
                    let v230 : string = "serde_json::from_str(&$0)"
                    let v231 : Result<crate_model_near_nearblocks_Root, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v221 v230 
                    let v232 : (serde_json_Error -> std_string_String) = method42()
                    (* run_target_args'
                    let v234 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v235 : string = "$0.map_err(|x| $1(x))"
                    let v236 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v231, v232) v235 
                    let _run_target_args'_v234 = v236 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v237 : string = "$0.map_err(|x| $1(x))"
                    let v238 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v231, v232) v237 
                    let _run_target_args'_v234 = v238 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v239 : string = "$0.map_err(|x| $1(x))"
                    let v240 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v231, v232) v239 
                    let _run_target_args'_v234 = v240 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v241 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v231 with Ok x -> Ok x | Error x -> Error (v232 x)
                    let _run_target_args'_v234 = v241 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v242 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v231 with Ok x -> Ok x | Error x -> Error (v232 x)
                    let _run_target_args'_v234 = v242 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v243 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v231 with Ok x -> Ok x | Error x -> Error (v232 x)
                    let _run_target_args'_v234 = v243 
                    #endif
#else
                    let v244 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v231 with Ok x -> Ok x | Error x -> Error (v232 x)
                    let _run_target_args'_v234 = v244 
                    #endif
                    let v245 : Result<crate_model_near_nearblocks_Root, std_string_String> = _run_target_args'_v234 
                    let v248 : (crate_model_near_nearblocks_Root -> crate_model_near_nearblocks_Root option) = method109()
                    let v249 : Result<crate_model_near_nearblocks_Root, std_string_String> = method110(v245)
                    let v250 : string = "v249.map(|x| v248(x))"
                    let v251 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v250 
                    v251
                | _ ->
                    let v253 : string = $"%A{struct (v129, v62)}"
                    let v256 : string = "state_core.use_request (17) / json Error / value: " + string v253 + ""
                    let v257 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                    let v258 : bool = Fable.Core.RustInterop.emitRustExpr v256 v257 
                    let v260 : crate_model_near_nearblocks_Root option = None
                    let v264 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Ok v260 
                    v264
            | _ ->
                let v269 : string = $"%A{struct (v129, v62)}"
                let v272 : string = "state_core.use_request (17) / json Error / value: " + string v269 + ""
                let v273 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v274 : bool = Fable.Core.RustInterop.emitRustExpr v272 v273 
                let v276 : crate_model_near_nearblocks_Root option = None
                let v280 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Ok v276 
                v280
        | _ ->
            let v285 : string = $"%A{struct (v129, v62)}"
            let v288 : string = "state_core.use_request (17) / json Error / value: " + string v285 + ""
            let v289 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v290 : bool = Fable.Core.RustInterop.emitRustExpr v288 v289 
            let v292 : crate_model_near_nearblocks_Root option = None
            let v296 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Ok v292 
            v296
and closure83 (v0 : US35, v1 : US41) (v2 : int32) : (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_nearblocks_Root option, std_string_String>) =
    closure84(v0, v1, v2)
and method107 (v0 : US35, v1 : US41) : (int32 -> (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_nearblocks_Root option, std_string_String>)) =
    closure83(v0, v1)
and closure78 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>, v1 : leptos_prelude_ArcMemo<Result<Vec<Heap4 option>, std_string_String> option>, v2 : leptos_prelude_ArcLocalResource<Result<Vec<string option>, std_string_String>>, v3 : leptos_prelude_Action<Heap4, Result<Vec<unit>, std_string_String>>) () : (Result<crate_model_near_nearblocks_Root option, std_string_String> []) =
    let v4 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v5 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v4 
    let v7 : string = $"%A{v5}"
    let v10 : string = "state_core.use_requests (13) / result memo / requests: " + string v7 + ""
    let v11 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr v10 v11 
    let v13 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v14 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v1 v13 
    let v17 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v18 : US26 option = v14 |> Option.map v17 
    let v38 : US26 = US26_1
    let v39 : US26 = v18 |> Option.defaultValue v38 
    let v97 : US35 =
        match v39 with
        | US26_1 -> (* None *)
            US35_1
        | US26_0(v43) -> (* Some *)
            let v44 : (Vec<Heap4 option> -> US24) = method83()
            let v45 : (std_string_String -> US24) = method84()
            let v47 : US24 = match v43 with Ok x -> v44 x | Error x -> v45 x
            let v93 : US36 =
                match v47 with
                | US24_1(v90) -> (* Error *)
                    US36_1(v90)
                | US24_0(v50) -> (* Ok *)
                    let v51 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v52 : bool = Fable.Core.RustInterop.emitRustExpr v50 v51 
                    let v53 : string = "x"
                    let v54 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v53 
                    let v57 : (Heap4 -> US25) = method85()
                    let v58 : US25 option = v54 |> Option.map v57 
                    let v78 : US25 = US25_1
                    let v79 : US25 = v58 |> Option.defaultValue v78 
                    let v83 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v84 : bool = Fable.Core.RustInterop.emitRustExpr v79 v83 
                    let v85 : string = "_vec_map"
                    let v86 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v85 
                    let v87 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v88 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v86 v87 
                    US36_0(v88)
            US35_0(v93)
    let v99 : string = $"%A{v97}"
    let v102 : int64 = 400L
    let v103 : string = method8(v102, v99)
    let v104 : string = "state_core.use_request (14) / result_memo / state_data: " + string v103 + ""
    let v105 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v106 : bool = Fable.Core.RustInterop.emitRustExpr v104 v105 
    let v107 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v108 : Result<Vec<string option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v2 v107 
    let v111 : (Result<Vec<string option>, std_string_String> -> US37) = method103()
    let v112 : US37 option = v108 |> Option.map v111 
    let v132 : US37 = US37_1
    let v133 : US37 = v112 |> Option.defaultValue v132 
    let v147 : US38 =
        match v133 with
        | US37_1 -> (* None *)
            US38_1
        | US37_0(v137) -> (* Some *)
            let v138 : (Vec<string option> -> US39) = method104()
            let v139 : (std_string_String -> US39) = method105()
            let v141 : US39 = match v137 with Ok x -> v138 x | Error x -> v139 x
            US38_0(v141)
    let v194 : US40 =
        match v147 with
        | US38_1 -> (* None *)
            US40_1
        | US38_0(v148) -> (* Some *)
            let v190 : US41 =
                match v148 with
                | US39_1(v187) -> (* Error *)
                    US41_1(v187)
                | US39_0(v149) -> (* Ok *)
                    let v150 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v151 : bool = Fable.Core.RustInterop.emitRustExpr v149 v150 
                    let v152 : string = "x"
                    let v153 : string option = Fable.Core.RustInterop.emitRustExpr () v152 
                    let v156 : (string -> US31) = method106()
                    let v157 : US31 option = v153 |> Option.map v156 
                    let v177 : US31 = US31_1
                    let v178 : US31 = v157 |> Option.defaultValue v177 
                    let v182 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v183 : bool = Fable.Core.RustInterop.emitRustExpr v178 v182 
                    let v184 : string = "_vec_map"
                    let v185 : Vec<US31> = Fable.Core.RustInterop.emitRustExpr () v184 
                    US41_0(v185)
            US40_0(v190)
    let v195 : (US31 []) = [||]
    let v196 : string = "$0.to_vec()"
    let v197 : Vec<US31> = Fable.Core.RustInterop.emitRustExpr v195 v196 
    let v201 : US41 =
        match v194 with
        | US40_1 -> (* None *)
            US41_0(v197)
        | US40_0(v198) -> (* Some *)
            v198
    let v290 : bool =
        match v201 with
        | US41_1(v288) -> (* Error *)
            false
        | US41_0(v202) -> (* Ok *)
            let v203 : string = "true; $0.into_iter().for_each(|x| { //"
            let v204 : bool = Fable.Core.RustInterop.emitRustExpr v202 v203 
            let v205 : string = "x"
            let v206 : US31 = Fable.Core.RustInterop.emitRustExpr () v205 
            let v283 : bool =
                match v206 with
                | US31_0(v207) -> (* Some *)
                    (* run_target_args'
                    let v212 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v213 : string = "&*$0"
                    let v214 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v207 v213 
                    let _run_target_args'_v212 = v214 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v215 : string = "&*$0"
                    let v216 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v207 v215 
                    let _run_target_args'_v212 = v216 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v217 : string = "&*$0"
                    let v218 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v207 v217 
                    let _run_target_args'_v212 = v218 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v220 : Ref<Str> = v207 |> unbox<Ref<Str>>
                    let _run_target_args'_v212 = v220 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v224 : Ref<Str> = v207 |> unbox<Ref<Str>>
                    let _run_target_args'_v212 = v224 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v228 : Ref<Str> = v207 |> unbox<Ref<Str>>
                    let _run_target_args'_v212 = v228 
                    #endif
#else
                    let v232 : Ref<Str> = v207 |> unbox<Ref<Str>>
                    let _run_target_args'_v212 = v232 
                    #endif
                    let v235 : Ref<Str> = _run_target_args'_v212 
                    (* run_target_args'
                    let v248 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v249 : string = "String::from($0)"
                    let v250 : std_string_String = Fable.Core.RustInterop.emitRustExpr v235 v249 
                    let _run_target_args'_v248 = v250 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v251 : string = "String::from($0)"
                    let v252 : std_string_String = Fable.Core.RustInterop.emitRustExpr v235 v251 
                    let _run_target_args'_v248 = v252 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v253 : string = "String::from($0)"
                    let v254 : std_string_String = Fable.Core.RustInterop.emitRustExpr v235 v253 
                    let _run_target_args'_v248 = v254 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v256 : std_string_String = v235 |> unbox<std_string_String>
                    let _run_target_args'_v248 = v256 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v260 : std_string_String = v235 |> unbox<std_string_String>
                    let _run_target_args'_v248 = v260 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v264 : std_string_String = v235 |> unbox<std_string_String>
                    let _run_target_args'_v248 = v264 
                    #endif
#else
                    let v268 : std_string_String = v235 |> unbox<std_string_String>
                    let _run_target_args'_v248 = v268 
                    #endif
                    let v271 : std_string_String = _run_target_args'_v248 
                    let v280 : Heap4 = {l0 = v271} : Heap4
                    let v281 : string = "true; leptos::prelude::Action::dispatch(&$0, $1.clone())"
                    let v282 : bool = Fable.Core.RustInterop.emitRustExpr struct (v3, v280) v281 
                    true
                | _ ->
                    false
            let v284 : string = $"true"
            let v285 : bool = Fable.Core.RustInterop.emitRustExpr () v284 
            let v286 : string = "true; }); //"
            let v287 : bool = Fable.Core.RustInterop.emitRustExpr () v286 
            false
    let v291 : (int32 -> (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_nearblocks_Root option, std_string_String>)) = method107(v97, v201)
    let v292 : Vec<struct (string * US23 * string * bool * bool)> = method96(v5)
    let v293 : string = "v292.iter().enumerate().map(|(i, x)| v291(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v294 : Vec<Result<crate_model_near_nearblocks_Root option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v293 
    let v295 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v296 : (Result<crate_model_near_nearblocks_Root option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v294 v295 
    let v298 : string = $"%A{v296}"
    let v301 : string = "state_core.use_requests (18) / result_func func0 / result: " + string v298 + ""
    let v302 : int64 = 200L
    let v303 : string = method8(v302, v301)
    let v304 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v305 : bool = Fable.Core.RustInterop.emitRustExpr v303 v304 
    v296
and method112 (v0 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []))) : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) =
    v0
and closure88 (v0 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []))) (v1 : crate_model_near_nearblocks_Root option) : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option =
    let v3 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) = method112(v0)
    let v4 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option = v1 |> Option.map v3 
    v4
and method111 (v0 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []))) : (crate_model_near_nearblocks_Root option -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option) =
    closure88(v0)
and method113 (v0 : Result<crate_model_near_nearblocks_Root option, std_string_String>) : Result<crate_model_near_nearblocks_Root option, std_string_String> =
    v0
and method114 (v0 : Func0<Result<crate_model_near_nearblocks_Root option, std_string_String>, Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>) : Func0<Result<crate_model_near_nearblocks_Root option, std_string_String>, Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> =
    v0
and closure89 (v0 : Func0<Result<crate_model_near_nearblocks_Root option, std_string_String>, Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>) (v1 : Result<crate_model_near_nearblocks_Root option, std_string_String>) : Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String> =
    let v2 : Func0<Result<crate_model_near_nearblocks_Root option, std_string_String>, Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> = method114(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure87 (v0 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])), v1 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>>, v2 : leptos_prelude_ArcLocalResource<Result<Vec<Heap4 option>, std_string_String>>, v3 : leptos_prelude_ArcMemo<(Result<crate_model_near_nearblocks_Root option, std_string_String> [])>) () : Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> =
    let v4 : string = $"leptos::prelude::Submission::pending(&$0.into()).into()"
    let v5 : leptos_prelude_ArcSignal<bool> = Fable.Core.RustInterop.emitRustExpr v1 v4 
    let v6 : string = $"leptos::prelude::ArcSignal::get(&$0)"
    let v7 : bool = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : string = $"leptos::prelude::Submission::pending(&$0.into()).into()"
    let v9 : leptos_prelude_ArcSignal<bool> = Fable.Core.RustInterop.emitRustExpr v2 v8 
    let v10 : string = $"leptos::prelude::ArcSignal::get(&$0)"
    let v11 : bool = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v13 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v1 v12 
    let v16 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v17 : US2 option = v13 |> Option.map v16 
    let v37 : US2 = US2_1
    let v38 : US2 = v17 |> Option.defaultValue v37 
    let v42 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v43 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v2 v42 
    let v46 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v47 : US26 option = v43 |> Option.map v46 
    let v67 : US26 = US26_1
    let v68 : US26 = v47 |> Option.defaultValue v67 
    let v126 : US35 =
        match v68 with
        | US26_1 -> (* None *)
            US35_1
        | US26_0(v72) -> (* Some *)
            let v73 : (Vec<Heap4 option> -> US24) = method83()
            let v74 : (std_string_String -> US24) = method84()
            let v76 : US24 = match v72 with Ok x -> v73 x | Error x -> v74 x
            let v122 : US36 =
                match v76 with
                | US24_1(v119) -> (* Error *)
                    US36_1(v119)
                | US24_0(v79) -> (* Ok *)
                    let v80 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v81 : bool = Fable.Core.RustInterop.emitRustExpr v79 v80 
                    let v82 : string = "x"
                    let v83 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v82 
                    let v86 : (Heap4 -> US25) = method85()
                    let v87 : US25 option = v83 |> Option.map v86 
                    let v107 : US25 = US25_1
                    let v108 : US25 = v87 |> Option.defaultValue v107 
                    let v112 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v113 : bool = Fable.Core.RustInterop.emitRustExpr v108 v112 
                    let v114 : string = "_vec_map"
                    let v115 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v114 
                    let v116 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v117 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v115 v116 
                    US36_0(v117)
            US35_0(v122)
    let v128 : string = $"%A{v38}"
    let v131 : int64 = 400L
    let v132 : string = method8(v131, v128)
    let v134 : string = $"%A{v126}"
    let v137 : int64 = 400L
    let v138 : string = method8(v137, v134)
    let v139 : string = "state_core.use_request (19) / result move / database: " + string v132 + " / database_loading: " + string v7 + " / state_data: " + string v138 + " / state_data_loading: " + string v11 + ""
    let v140 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v141 : bool = Fable.Core.RustInterop.emitRustExpr v139 v140 
    let v142 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v143 : (Result<crate_model_near_nearblocks_Root option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v3 v142 
    let v144 : string = "$0.to_vec()"
    let v145 : Vec<Result<crate_model_near_nearblocks_Root option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v143 v144 
    let v146 : unit = ()
    let v147 : string = $"true; let _func1_from_v146 = Func1::from(move |value| {{ //"
    let v148 : bool = Fable.Core.RustInterop.emitRustExpr () v147 
    let v149 : string = $"value"
    let v150 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v149 
    let v151 : (crate_model_near_nearblocks_Root option -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option) = method111(v0)
    let v152 : Result<crate_model_near_nearblocks_Root option, std_string_String> = method113(v150)
    let v153 : string = "v152.map(|x| v151(x))"
    let v154 : Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v153 
    let func1_from_result = v154 //
    let v155 : _ = func1_from_result
    let v156 : string = $"true; $0 /*"
    let v157 : bool = Fable.Core.RustInterop.emitRustExpr v155 v156 
    let v158 : string = $"*/ }}); //"
    let v159 : bool = Fable.Core.RustInterop.emitRustExpr () v158 
    let v160 : string = $"_func1_from_v146"
    let v161 : Func0<Result<crate_model_near_nearblocks_Root option, std_string_String>, Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v160 
    let v162 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v163 : (Result<crate_model_near_nearblocks_Root option, std_string_String> -> Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>) = closure89(v161)
    let v164 : Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr struct (v145, v163) v162 
    let v166 : string = $"%A{v164}"
    let v169 : string = "state_core.use_requests (20) / result func0 / result: " + string v166 + ""
    let v170 : int64 = 200L
    let v171 : string = method8(v170, v169)
    let v172 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v173 : bool = Fable.Core.RustInterop.emitRustExpr v171 v172 
    v164
and method78 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>, v1 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []))) : leptos_prelude_ArcMemo<Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>> =
    let v2 : string = "state_core.use_requests (1)"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = "state_core.use_database (1)"
    let v6 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v7 : bool = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : unit = ()
    let v9 : string = $"true; let _func0_from_v8 = Func0::from(move || {{ //"
    let v10 : bool = Fable.Core.RustInterop.emitRustExpr () v9 
    let v11 : string = "true; let __future_init = Box::pin(/*"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr () v11 
    let v13 : string = "*/ async move { /*"
    let v14 : bool = Fable.Core.RustInterop.emitRustExpr () v13 
    let v15 : string = "*/ ()"
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = "state_core.use_database (2) / database new_local_resource"
    let v18 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v19 : bool = Fable.Core.RustInterop.emitRustExpr v17 v18 
    let v20 : string = "state_core.build_database ()"
    let v21 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : string = "true; let __future_init = Box::pin(/*"
    let v24 : bool = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : string = "*/ async { /*"
    let v26 : bool = Fable.Core.RustInterop.emitRustExpr () v25 
    let v27 : string = "*/ ()"
    let v28 : bool = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : string = "Box::pin(rexie::Rexie::builder(\"database\").version(1).add_object_store(rexie::ObjectStore::new(\"store\")).build())"
    let v30 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v29 
    let v31 : string = "v30.await"
    let v32 : Result<rexie_Rexie, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v31 
    let v33 : (rexie_Error -> std_string_String) = method6()
    (* run_target_args'
    let v35 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v36 : string = "$0.map_err(|x| $1(x))"
    let v37 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v36 
    let _run_target_args'_v35 = v37 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v38 : string = "$0.map_err(|x| $1(x))"
    let v39 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v38 
    let _run_target_args'_v35 = v39 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v40 : string = "$0.map_err(|x| $1(x))"
    let v41 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v40 
    let _run_target_args'_v35 = v41 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v42 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v42 
    #endif
#if FABLE_COMPILER_PYTHON
    let v43 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v43 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v44 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v44 
    #endif
#else
    let v45 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v45 
    #endif
    let v46 : Result<rexie_Rexie, std_string_String> = _run_target_args'_v35 
    let v49 : string = ""
    let v50 : string = "}"
    let v51 : string = v49 + v50 
    let x = v46 //
    let v52 : _ = x
    let v53 : unit = ()
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = $"true; let _fix_closure_v53 = $0"
    let v56 : bool = Fable.Core.RustInterop.emitRustExpr v52 v55 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = $"true; let _fix_closure_v53 = $0"
    let v58 : bool = Fable.Core.RustInterop.emitRustExpr v52 v57 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = $"true; let _fix_closure_v53 = $0"
    let v60 : bool = Fable.Core.RustInterop.emitRustExpr v52 v59 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v54 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v54 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v54 = false 
    #endif
#else
    let _run_target_args'_v54 = false 
    #endif
    let v61 : bool = _run_target_args'_v54 
    let v62 : string = $"true; _fix_closure_v53 " + v51 + "); " + v49 + " // rust.fix_closure'"
    let v63 : bool = Fable.Core.RustInterop.emitRustExpr () v62 
    let v64 : string = "__future_init"
    let v65 : _ = Fable.Core.RustInterop.emitRustExpr () v64 
    let v66 : string = "v65"
    let v67 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v66 
    let v68 : string = "v67.await"
    let v69 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v68 
    (* run_target_args'
    let v71 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v72 : string = "$0.unwrap()"
    let v73 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v69 v72 
    let _run_target_args'_v71 = v73 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v74 : string = "$0.unwrap()"
    let v75 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v69 v74 
    let _run_target_args'_v71 = v75 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v76 : string = "$0.unwrap()"
    let v77 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v69 v76 
    let _run_target_args'_v71 = v77 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v78 : rexie_Rexie = match v69 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v71 = v78 
    #endif
#if FABLE_COMPILER_PYTHON
    let v79 : rexie_Rexie = match v69 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v71 = v79 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v80 : rexie_Rexie = match v69 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v71 = v80 
    #endif
#else
    let v81 : rexie_Rexie = match v69 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v71 = v81 
    #endif
    let v82 : rexie_Rexie = _run_target_args'_v71 
    let v85 : (rexie_Rexie -> rexie_Rexie) = method7()
    let v86 : rexie_Rexie = v85 v82
    let v87 : string = "std::sync::Arc::new(v86)"
    let v88 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v87 
    let v90 : string = $"%A{v88}"
    let v93 : string = "state_core.use_database (3) / database new_local_resource / result: " + string v90 + ""
    let v94 : int64 = 200L
    let v95 : string = method8(v94, v93)
    let v96 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v97 : bool = Fable.Core.RustInterop.emitRustExpr v95 v96 
    let v98 : string = v49 + v50 
    let x = v88 //
    let v99 : _ = x
    let v100 : unit = ()
    (* run_target_args'
    let v101 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v102 : string = $"true; let _fix_closure_v100 = $0"
    let v103 : bool = Fable.Core.RustInterop.emitRustExpr v99 v102 
    let _run_target_args'_v101 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v104 : string = $"true; let _fix_closure_v100 = $0"
    let v105 : bool = Fable.Core.RustInterop.emitRustExpr v99 v104 
    let _run_target_args'_v101 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v106 : string = $"true; let _fix_closure_v100 = $0"
    let v107 : bool = Fable.Core.RustInterop.emitRustExpr v99 v106 
    let _run_target_args'_v101 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v101 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v101 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v101 = false 
    #endif
#else
    let _run_target_args'_v101 = false 
    #endif
    let v108 : bool = _run_target_args'_v101 
    let v109 : string = $"true; _fix_closure_v100 " + v98 + "); " + v49 + " // rust.fix_closure'"
    let v110 : bool = Fable.Core.RustInterop.emitRustExpr () v109 
    let v111 : string = "__future_init"
    let v112 : _ = Fable.Core.RustInterop.emitRustExpr () v111 
    let v113 : string = "v112"
    let v114 : std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>> = Fable.Core.RustInterop.emitRustExpr () v113 
    let v115 : string = $"true; $0 /*"
    let v116 : bool = Fable.Core.RustInterop.emitRustExpr v114 v115 
    let v117 : string = $"*/ }}); //"
    let v118 : bool = Fable.Core.RustInterop.emitRustExpr () v117 
    let v119 : string = $"_func0_from_v8"
    let v120 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>>> = Fable.Core.RustInterop.emitRustExpr () v119 
    let v121 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v122 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v120 v121 
    let v123 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v124 : (unit -> PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option) = closure64(v122)
    let v125 : leptos_prelude_ArcMemo<PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option> = Fable.Core.RustInterop.emitRustExpr v124 v123 
    let v126 : unit = ()
    let v127 : string = $"true; let _func0_from_v126 = Func0::from(move || {{ //"
    let v128 : bool = Fable.Core.RustInterop.emitRustExpr () v127 
    let v129 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v130 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v122 v129 
    let v131 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v132 : bool = Fable.Core.RustInterop.emitRustExpr v130 v131 
    let v133 : string = "x"
    let v134 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v133 
    let v135 : (unit -> unit) = closure8()
    let _v135 = true
    let v136 : string = "PartialEqWrapper($0)"
    let v137 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v134 v136 
    let v138 : string = "true; $0 })"
    let v139 : bool = Fable.Core.RustInterop.emitRustExpr v137 v138 
    let v140 : string = "_optionm_map_"
    let v141 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr () v140 
    let v142 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v143 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v142 
    let v144 : string = "true; let __future_init = Box::pin(/*"
    let v145 : bool = Fable.Core.RustInterop.emitRustExpr () v144 
    let v146 : string = "*/ async move { /*"
    let v147 : bool = Fable.Core.RustInterop.emitRustExpr () v146 
    let v148 : string = "*/ ()"
    let v149 : bool = Fable.Core.RustInterop.emitRustExpr () v148 
    let v151 : string = $"%A{v141}"
    let v155 : string = $"%A{v143}"
    let v158 : int64 = 400L
    let v159 : string = method8(v158, v155)
    let v160 : string = "state_core.use_requests (3) / state_data_resource new_local_resource / request : " + string v159 + " / database: " + string v151 + ""
    let v161 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v162 : bool = Fable.Core.RustInterop.emitRustExpr v160 v161 
    let v163 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v164 : bool = Fable.Core.RustInterop.emitRustExpr v141 v163 
    let v165 : string = "x"
    let v166 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr () v165 
    let v167 : string = "$0.0"
    let v168 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr v166 v167 
    let v169 : string = "true; $0 })"
    let v170 : bool = Fable.Core.RustInterop.emitRustExpr v168 v169 
    let v171 : string = "_optionm_map_"
    let v172 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr () v171 
    let v175 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v176 : US2 option = v172 |> Option.map v175 
    let v196 : US2 = US2_1
    let v197 : US2 = v176 |> Option.defaultValue v196 
    let v714 : US24 =
        match v197 with
        | US2_0(v201) -> (* Some *)
            let v202 : unit = ()
            let v203 : string = $"true; let _func1_from_v202 = Func1::from(move |value| {{ //"
            let v204 : bool = Fable.Core.RustInterop.emitRustExpr () v203 
            let v205 : string = $"value"
            let struct (v206 : string, v207 : US23, v208 : string, v209 : bool, v210 : bool) = Fable.Core.RustInterop.emitRustExpr () v205 
            let v211 : string = "url[" + v206 + "](" + $"%A{v208}" + ")"
            let v212 : string = "state_core.get_data () / id: " + v211 + ""
            let v213 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v214 : bool = Fable.Core.RustInterop.emitRustExpr v212 v213 
            let v215 : string = "true; let __future_init = Box::pin(/*"
            let v216 : bool = Fable.Core.RustInterop.emitRustExpr () v215 
            let v217 : string = "*/ async { /*"
            let v218 : bool = Fable.Core.RustInterop.emitRustExpr () v217 
            let v219 : string = "*/ ()"
            let v220 : bool = Fable.Core.RustInterop.emitRustExpr () v219 
            let v221 : string = "store"
            let v222 : (string []) = [|v221|]
            let v223 : string = "$0.to_vec()"
            let v224 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v222 v223 
            let v225 : unit = ()
            let v226 : string = $"true; let _func1_from_v225 = Func1::from(move |value| {{ //"
            let v227 : bool = Fable.Core.RustInterop.emitRustExpr () v226 
            let v228 : string = $"value"
            let v229 : string = Fable.Core.RustInterop.emitRustExpr () v228 
            (* run_target_args'
            let v234 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v235 : string = "&*$0"
            let v236 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v229 v235 
            let _run_target_args'_v234 = v236 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v237 : string = "&*$0"
            let v238 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v229 v237 
            let _run_target_args'_v234 = v238 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v239 : string = "&*$0"
            let v240 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v229 v239 
            let _run_target_args'_v234 = v240 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v242 : Ref<Str> = v229 |> unbox<Ref<Str>>
            let _run_target_args'_v234 = v242 
            #endif
#if FABLE_COMPILER_PYTHON
            let v246 : Ref<Str> = v229 |> unbox<Ref<Str>>
            let _run_target_args'_v234 = v246 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v250 : Ref<Str> = v229 |> unbox<Ref<Str>>
            let _run_target_args'_v234 = v250 
            #endif
#else
            let v254 : Ref<Str> = v229 |> unbox<Ref<Str>>
            let _run_target_args'_v234 = v254 
            #endif
            let v257 : Ref<Str> = _run_target_args'_v234 
            (* run_target_args'
            let v270 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v271 : string = "String::from($0)"
            let v272 : std_string_String = Fable.Core.RustInterop.emitRustExpr v257 v271 
            let _run_target_args'_v270 = v272 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v273 : string = "String::from($0)"
            let v274 : std_string_String = Fable.Core.RustInterop.emitRustExpr v257 v273 
            let _run_target_args'_v270 = v274 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v275 : string = "String::from($0)"
            let v276 : std_string_String = Fable.Core.RustInterop.emitRustExpr v257 v275 
            let _run_target_args'_v270 = v276 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v278 : std_string_String = v257 |> unbox<std_string_String>
            let _run_target_args'_v270 = v278 
            #endif
#if FABLE_COMPILER_PYTHON
            let v282 : std_string_String = v257 |> unbox<std_string_String>
            let _run_target_args'_v270 = v282 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v286 : std_string_String = v257 |> unbox<std_string_String>
            let _run_target_args'_v270 = v286 
            #endif
#else
            let v290 : std_string_String = v257 |> unbox<std_string_String>
            let _run_target_args'_v270 = v290 
            #endif
            let v293 : std_string_String = _run_target_args'_v270 
            let func1_from_result = v293 //
            let v302 : _ = func1_from_result
            let v303 : string = $"true; $0 /*"
            let v304 : bool = Fable.Core.RustInterop.emitRustExpr v302 v303 
            let v305 : string = $"*/ }}); //"
            let v306 : bool = Fable.Core.RustInterop.emitRustExpr () v305 
            let v307 : string = $"_func1_from_v225"
            let v308 : Func0<string, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v307 
            let v309 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v310 : (string -> std_string_String) = closure10(v308)
            let v311 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v224, v310) v309 
            let v312 : std_sync_Arc<rexie_Rexie> = method11(v201)
            let v313 : string = "$0.transaction(&v311, rexie::TransactionMode::ReadOnly)"
            let v314 : Result<rexie_Transaction, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v312 v313 
            let v315 : (rexie_Error -> std_string_String) = method12()
            (* run_target_args'
            let v317 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v318 : string = "$0.map_err(|x| $1(x))"
            let v319 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v314, v315) v318 
            let _run_target_args'_v317 = v319 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v320 : string = "$0.map_err(|x| $1(x))"
            let v321 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v314, v315) v320 
            let _run_target_args'_v317 = v321 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v322 : string = "$0.map_err(|x| $1(x))"
            let v323 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v314, v315) v322 
            let _run_target_args'_v317 = v323 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v324 : Result<rexie_Transaction, std_string_String> = match v314 with Ok x -> Ok x | Error x -> Error (v315 x)
            let _run_target_args'_v317 = v324 
            #endif
#if FABLE_COMPILER_PYTHON
            let v325 : Result<rexie_Transaction, std_string_String> = match v314 with Ok x -> Ok x | Error x -> Error (v315 x)
            let _run_target_args'_v317 = v325 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v326 : Result<rexie_Transaction, std_string_String> = match v314 with Ok x -> Ok x | Error x -> Error (v315 x)
            let _run_target_args'_v317 = v326 
            #endif
#else
            let v327 : Result<rexie_Transaction, std_string_String> = match v314 with Ok x -> Ok x | Error x -> Error (v315 x)
            let _run_target_args'_v317 = v327 
            #endif
            let v328 : Result<rexie_Transaction, std_string_String> = _run_target_args'_v317 
            let v331 : string = "$0?"
            let v332 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v328 v331 
            let v333 : string = method13()
            (* run_target_args'
            let v338 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v339 : string = "&*$0"
            let v340 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v333 v339 
            let _run_target_args'_v338 = v340 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v341 : string = "&*$0"
            let v342 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v333 v341 
            let _run_target_args'_v338 = v342 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v343 : string = "&*$0"
            let v344 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v333 v343 
            let _run_target_args'_v338 = v344 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v346 : Ref<Str> = v333 |> unbox<Ref<Str>>
            let _run_target_args'_v338 = v346 
            #endif
#if FABLE_COMPILER_PYTHON
            let v350 : Ref<Str> = v333 |> unbox<Ref<Str>>
            let _run_target_args'_v338 = v350 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v354 : Ref<Str> = v333 |> unbox<Ref<Str>>
            let _run_target_args'_v338 = v354 
            #endif
#else
            let v358 : Ref<Str> = v333 |> unbox<Ref<Str>>
            let _run_target_args'_v338 = v358 
            #endif
            let v361 : Ref<Str> = _run_target_args'_v338 
            let v370 : string = "v332.store($0)"
            let v371 : Result<rexie_Store, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v361 v370 
            let v372 : (rexie_Error -> std_string_String) = method14()
            (* run_target_args'
            let v374 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v375 : string = "$0.map_err(|x| $1(x))"
            let v376 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v371, v372) v375 
            let _run_target_args'_v374 = v376 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v377 : string = "$0.map_err(|x| $1(x))"
            let v378 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v371, v372) v377 
            let _run_target_args'_v374 = v378 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v379 : string = "$0.map_err(|x| $1(x))"
            let v380 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v371, v372) v379 
            let _run_target_args'_v374 = v380 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v381 : Result<rexie_Store, std_string_String> = match v371 with Ok x -> Ok x | Error x -> Error (v372 x)
            let _run_target_args'_v374 = v381 
            #endif
#if FABLE_COMPILER_PYTHON
            let v382 : Result<rexie_Store, std_string_String> = match v371 with Ok x -> Ok x | Error x -> Error (v372 x)
            let _run_target_args'_v374 = v382 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v383 : Result<rexie_Store, std_string_String> = match v371 with Ok x -> Ok x | Error x -> Error (v372 x)
            let _run_target_args'_v374 = v383 
            #endif
#else
            let v384 : Result<rexie_Store, std_string_String> = match v371 with Ok x -> Ok x | Error x -> Error (v372 x)
            let _run_target_args'_v374 = v384 
            #endif
            let v385 : Result<rexie_Store, std_string_String> = _run_target_args'_v374 
            let v388 : string = "$0?"
            let v389 : rexie_Store = Fable.Core.RustInterop.emitRustExpr v385 v388 
            let v390 : string = method79(v211)
            (* run_target_args'
            let v395 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v396 : string = "&*$0"
            let v397 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v390 v396 
            let _run_target_args'_v395 = v397 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v398 : string = "&*$0"
            let v399 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v390 v398 
            let _run_target_args'_v395 = v399 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v400 : string = "&*$0"
            let v401 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v390 v400 
            let _run_target_args'_v395 = v401 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v403 : Ref<Str> = v390 |> unbox<Ref<Str>>
            let _run_target_args'_v395 = v403 
            #endif
#if FABLE_COMPILER_PYTHON
            let v407 : Ref<Str> = v390 |> unbox<Ref<Str>>
            let _run_target_args'_v395 = v407 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v411 : Ref<Str> = v390 |> unbox<Ref<Str>>
            let _run_target_args'_v395 = v411 
            #endif
#else
            let v415 : Ref<Str> = v390 |> unbox<Ref<Str>>
            let _run_target_args'_v395 = v415 
            #endif
            let v418 : Ref<Str> = _run_target_args'_v395 
            let v427 : string = "wasm_bindgen::JsValue::from_str($0)"
            let v428 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr v418 v427 
            let v429 : string = $"Box::pin(rexie::Store::get(&v389, v428))"
            let v430 : std_pin_Pin<Box<Dyn<std_future_Future<Result<wasm_bindgen_JsValue option, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v429 
            let v431 : string = "v430.await"
            let v432 : Result<wasm_bindgen_JsValue option, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v431 
            let v433 : (rexie_Error -> std_string_String) = method16()
            (* run_target_args'
            let v435 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v436 : string = "$0.map_err(|x| $1(x))"
            let v437 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v432, v433) v436 
            let _run_target_args'_v435 = v437 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v438 : string = "$0.map_err(|x| $1(x))"
            let v439 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v432, v433) v438 
            let _run_target_args'_v435 = v439 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v440 : string = "$0.map_err(|x| $1(x))"
            let v441 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v432, v433) v440 
            let _run_target_args'_v435 = v441 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v442 : Result<wasm_bindgen_JsValue option, std_string_String> = match v432 with Ok x -> Ok x | Error x -> Error (v433 x)
            let _run_target_args'_v435 = v442 
            #endif
#if FABLE_COMPILER_PYTHON
            let v443 : Result<wasm_bindgen_JsValue option, std_string_String> = match v432 with Ok x -> Ok x | Error x -> Error (v433 x)
            let _run_target_args'_v435 = v443 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v444 : Result<wasm_bindgen_JsValue option, std_string_String> = match v432 with Ok x -> Ok x | Error x -> Error (v433 x)
            let _run_target_args'_v435 = v444 
            #endif
#else
            let v445 : Result<wasm_bindgen_JsValue option, std_string_String> = match v432 with Ok x -> Ok x | Error x -> Error (v433 x)
            let _run_target_args'_v435 = v445 
            #endif
            let v446 : Result<wasm_bindgen_JsValue option, std_string_String> = _run_target_args'_v435 
            let v449 : string = "$0?"
            let v450 : wasm_bindgen_JsValue option = Fable.Core.RustInterop.emitRustExpr v446 v449 
            let v453 : (wasm_bindgen_JsValue -> US4) = method17()
            let v454 : US4 option = v450 |> Option.map v453 
            let v474 : US4 = US4_1
            let v475 : US4 = v454 |> Option.defaultValue v474 
            let v589 : US25 =
                match v475 with
                | US4_1 -> (* None *)
                    US25_1
                | US4_0(v479) -> (* Some *)
                    let v480 : wasm_bindgen_JsValue = method18(v479)
                    let v481 : string = "serde_wasm_bindgen::from_value(v480)"
                    let v482 : Result<serde_json_Value option, serde_wasm_bindgen_Error> = Fable.Core.RustInterop.emitRustExpr () v481 
                    let v483 : (serde_wasm_bindgen_Error -> std_string_String) = method19()
                    (* run_target_args'
                    let v485 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v486 : string = "$0.map_err(|x| $1(x))"
                    let v487 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v482, v483) v486 
                    let _run_target_args'_v485 = v487 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v488 : string = "$0.map_err(|x| $1(x))"
                    let v489 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v482, v483) v488 
                    let _run_target_args'_v485 = v489 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v490 : string = "$0.map_err(|x| $1(x))"
                    let v491 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v482, v483) v490 
                    let _run_target_args'_v485 = v491 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v492 : Result<serde_json_Value option, std_string_String> = match v482 with Ok x -> Ok x | Error x -> Error (v483 x)
                    let _run_target_args'_v485 = v492 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v493 : Result<serde_json_Value option, std_string_String> = match v482 with Ok x -> Ok x | Error x -> Error (v483 x)
                    let _run_target_args'_v485 = v493 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v494 : Result<serde_json_Value option, std_string_String> = match v482 with Ok x -> Ok x | Error x -> Error (v483 x)
                    let _run_target_args'_v485 = v494 
                    #endif
#else
                    let v495 : Result<serde_json_Value option, std_string_String> = match v482 with Ok x -> Ok x | Error x -> Error (v483 x)
                    let _run_target_args'_v485 = v495 
                    #endif
                    let v496 : Result<serde_json_Value option, std_string_String> = _run_target_args'_v485 
                    let v499 : string = "$0?"
                    let v500 : serde_json_Value option = Fable.Core.RustInterop.emitRustExpr v496 v499 
                    let v503 : (serde_json_Value -> US5) = method20()
                    let v504 : US5 option = v500 |> Option.map v503 
                    let v524 : US5 = US5_1
                    let v525 : US5 = v504 |> Option.defaultValue v524 
                    match v525 with
                    | US5_1 -> (* None *)
                        US25_1
                    | US5_0(v529) -> (* Some *)
                        let v530 : serde_json_Value = method21(v529)
                        let v531 : string = "serde_json::from_value(v530)"
                        let v532 : Result<Vec<uint8>, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr () v531 
                        let v533 : (serde_json_Error -> std_string_String) = method22()
                        (* run_target_args'
                        let v535 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v536 : string = "$0.map_err(|x| $1(x))"
                        let v537 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v532, v533) v536 
                        let _run_target_args'_v535 = v537 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v538 : string = "$0.map_err(|x| $1(x))"
                        let v539 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v532, v533) v538 
                        let _run_target_args'_v535 = v539 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v540 : string = "$0.map_err(|x| $1(x))"
                        let v541 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v532, v533) v540 
                        let _run_target_args'_v535 = v541 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v542 : Result<Vec<uint8>, std_string_String> = match v532 with Ok x -> Ok x | Error x -> Error (v533 x)
                        let _run_target_args'_v535 = v542 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v543 : Result<Vec<uint8>, std_string_String> = match v532 with Ok x -> Ok x | Error x -> Error (v533 x)
                        let _run_target_args'_v535 = v543 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v544 : Result<Vec<uint8>, std_string_String> = match v532 with Ok x -> Ok x | Error x -> Error (v533 x)
                        let _run_target_args'_v535 = v544 
                        #endif
#else
                        let v545 : Result<Vec<uint8>, std_string_String> = match v532 with Ok x -> Ok x | Error x -> Error (v533 x)
                        let _run_target_args'_v535 = v545 
                        #endif
                        let v546 : Result<Vec<uint8>, std_string_String> = _run_target_args'_v535 
                        let v549 : string = "$0?"
                        let v550 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v546 v549 
                        let v551 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                        let v552 : (uint8 []) = Fable.Core.RustInterop.emitRustExpr v550 v551 
                        let v553 : int32 = v552.Length
                        let v554 : string = "state_core.get_data () / data_len: " + string v553 + ""
                        let v555 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v556 : bool = Fable.Core.RustInterop.emitRustExpr v554 v555 
                        let v557 : string = "$0.to_vec()"
                        let v558 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v552 v557 
                        let v559 : string = "v558.as_slice()"
                        let v560 : Ref<Slice<uint8>> = Fable.Core.RustInterop.emitRustExpr () v559 
                        let v561 : string = "true; let mut v560 = v560"
                        let v562 : bool = Fable.Core.RustInterop.emitRustExpr () v561 
                        let v563 : string = "borsh::BorshDeserialize::deserialize(&mut v560)"
                        let v564 : Result<Heap4, borsh_io_Error> = Fable.Core.RustInterop.emitRustExpr () v563 
                        let v565 : (borsh_io_Error -> std_string_String) = method23()
                        (* run_target_args'
                        let v567 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v568 : string = "$0.map_err(|x| $1(x))"
                        let v569 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v564, v565) v568 
                        let _run_target_args'_v567 = v569 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v570 : string = "$0.map_err(|x| $1(x))"
                        let v571 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v564, v565) v570 
                        let _run_target_args'_v567 = v571 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v572 : string = "$0.map_err(|x| $1(x))"
                        let v573 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v564, v565) v572 
                        let _run_target_args'_v567 = v573 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v574 : Result<Heap4, std_string_String> = match v564 with Ok x -> Ok x | Error x -> Error (v565 x)
                        let _run_target_args'_v567 = v574 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v575 : Result<Heap4, std_string_String> = match v564 with Ok x -> Ok x | Error x -> Error (v565 x)
                        let _run_target_args'_v567 = v575 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v576 : Result<Heap4, std_string_String> = match v564 with Ok x -> Ok x | Error x -> Error (v565 x)
                        let _run_target_args'_v567 = v576 
                        #endif
#else
                        let v577 : Result<Heap4, std_string_String> = match v564 with Ok x -> Ok x | Error x -> Error (v565 x)
                        let _run_target_args'_v567 = v577 
                        #endif
                        let v578 : Result<Heap4, std_string_String> = _run_target_args'_v567 
                        let v581 : string = "$0?"
                        let v582 : Heap4 = Fable.Core.RustInterop.emitRustExpr v578 v581 
                        US25_0(v582)
            let v600 : Heap4 option =
                match v589 with
                | US25_1 -> (* None *)
                    let v596 : Heap4 option = None
                    v596
                | US25_0(v590) -> (* Some *)
                    let v592 : Heap4 option = Some v590 
                    v592
            let v602 : Result<Heap4 option, std_string_String> = Ok v600 
            let v605 : string = v49 + v50 
            let x = v602 //
            let v606 : _ = x
            let v607 : unit = ()
            (* run_target_args'
            let v608 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v609 : string = $"true; let _fix_closure_v607 = $0"
            let v610 : bool = Fable.Core.RustInterop.emitRustExpr v606 v609 
            let _run_target_args'_v608 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v611 : string = $"true; let _fix_closure_v607 = $0"
            let v612 : bool = Fable.Core.RustInterop.emitRustExpr v606 v611 
            let _run_target_args'_v608 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v613 : string = $"true; let _fix_closure_v607 = $0"
            let v614 : bool = Fable.Core.RustInterop.emitRustExpr v606 v613 
            let _run_target_args'_v608 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v608 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v608 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v608 = false 
            #endif
#else
            let _run_target_args'_v608 = false 
            #endif
            let v615 : bool = _run_target_args'_v608 
            let v616 : string = $"true; _fix_closure_v607 " + v605 + "); " + v49 + " // rust.fix_closure'"
            let v617 : bool = Fable.Core.RustInterop.emitRustExpr () v616 
            let v618 : string = "__future_init"
            let v619 : _ = Fable.Core.RustInterop.emitRustExpr () v618 
            let v620 : string = "v619"
            let v621 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v620 
            let func1_from_result = v621 //
            let v622 : _ = func1_from_result
            let v623 : string = $"true; $0 /*"
            let v624 : bool = Fable.Core.RustInterop.emitRustExpr v622 v623 
            let v625 : string = $"*/ }}); //"
            let v626 : bool = Fable.Core.RustInterop.emitRustExpr () v625 
            let v627 : string = $"_func1_from_v202"
            let v628 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v627 
            let v629 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v630 : (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>) = closure65(v628)
            let v631 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr struct (v143, v630) v629 
            let v632 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = method81(v631)
            let v633 : string = "futures::future::try_join_all(v632)"
            let v634 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v633 
            let v635 : string = "v634.await"
            let v636 : Result<Vec<Heap4 option>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v635 
            let v637 : string = "$0?"
            let v638 : Vec<Heap4 option> = Fable.Core.RustInterop.emitRustExpr v636 v637 
            US24_0(v638)
        | _ ->
            let v640 : string = "database=None"
            (* run_target_args'
            let v645 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v646 : string = "&*$0"
            let v647 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v640 v646 
            let _run_target_args'_v645 = v647 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v648 : string = "&*$0"
            let v649 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v640 v648 
            let _run_target_args'_v645 = v649 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v650 : string = "&*$0"
            let v651 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v640 v650 
            let _run_target_args'_v645 = v651 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v653 : Ref<Str> = v640 |> unbox<Ref<Str>>
            let _run_target_args'_v645 = v653 
            #endif
#if FABLE_COMPILER_PYTHON
            let v657 : Ref<Str> = v640 |> unbox<Ref<Str>>
            let _run_target_args'_v645 = v657 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v661 : Ref<Str> = v640 |> unbox<Ref<Str>>
            let _run_target_args'_v645 = v661 
            #endif
#else
            let v665 : Ref<Str> = v640 |> unbox<Ref<Str>>
            let _run_target_args'_v645 = v665 
            #endif
            let v668 : Ref<Str> = _run_target_args'_v645 
            (* run_target_args'
            let v681 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v682 : string = "String::from($0)"
            let v683 : std_string_String = Fable.Core.RustInterop.emitRustExpr v668 v682 
            let _run_target_args'_v681 = v683 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v684 : string = "String::from($0)"
            let v685 : std_string_String = Fable.Core.RustInterop.emitRustExpr v668 v684 
            let _run_target_args'_v681 = v685 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v686 : string = "String::from($0)"
            let v687 : std_string_String = Fable.Core.RustInterop.emitRustExpr v668 v686 
            let _run_target_args'_v681 = v687 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v689 : std_string_String = v668 |> unbox<std_string_String>
            let _run_target_args'_v681 = v689 
            #endif
#if FABLE_COMPILER_PYTHON
            let v693 : std_string_String = v668 |> unbox<std_string_String>
            let _run_target_args'_v681 = v693 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v697 : std_string_String = v668 |> unbox<std_string_String>
            let _run_target_args'_v681 = v697 
            #endif
#else
            let v701 : std_string_String = v668 |> unbox<std_string_String>
            let _run_target_args'_v681 = v701 
            #endif
            let v704 : std_string_String = _run_target_args'_v681 
            US24_1(v704)
    let v726 : Result<Vec<Heap4 option>, std_string_String> =
        match v714 with
        | US24_1(v720) -> (* Error *)
            let v722 : Result<Vec<Heap4 option>, std_string_String> = Error v720 
            v722
        | US24_0(v715) -> (* Ok *)
            let v717 : Result<Vec<Heap4 option>, std_string_String> = Ok v715 
            v717
    let v728 : string = $"%A{v726}"
    let v731 : string = "state_core.use_requests (4) / state_data_resource new_local_resource / result: " + string v728 + ""
    let v732 : int64 = 200L
    let v733 : string = method8(v732, v731)
    let v734 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v735 : bool = Fable.Core.RustInterop.emitRustExpr v733 v734 
    let v736 : string = v49 + v50 
    let x = v726 //
    let v737 : _ = x
    let v738 : unit = ()
    (* run_target_args'
    let v739 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v740 : string = $"true; let _fix_closure_v738 = $0"
    let v741 : bool = Fable.Core.RustInterop.emitRustExpr v737 v740 
    let _run_target_args'_v739 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v742 : string = $"true; let _fix_closure_v738 = $0"
    let v743 : bool = Fable.Core.RustInterop.emitRustExpr v737 v742 
    let _run_target_args'_v739 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v744 : string = $"true; let _fix_closure_v738 = $0"
    let v745 : bool = Fable.Core.RustInterop.emitRustExpr v737 v744 
    let _run_target_args'_v739 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v739 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v739 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v739 = false 
    #endif
#else
    let _run_target_args'_v739 = false 
    #endif
    let v746 : bool = _run_target_args'_v739 
    let v747 : string = $"true; _fix_closure_v738 " + v736 + "); " + v49 + " // rust.fix_closure'"
    let v748 : bool = Fable.Core.RustInterop.emitRustExpr () v747 
    let v749 : string = "__future_init"
    let v750 : _ = Fable.Core.RustInterop.emitRustExpr () v749 
    let v751 : string = "v750"
    let v752 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<Heap4 option>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v751 
    let v753 : string = $"true; $0 /*"
    let v754 : bool = Fable.Core.RustInterop.emitRustExpr v752 v753 
    let v755 : string = $"*/ }}); //"
    let v756 : bool = Fable.Core.RustInterop.emitRustExpr () v755 
    let v757 : string = $"_func0_from_v126"
    let v758 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<Heap4 option>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v757 
    let v759 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v760 : leptos_prelude_ArcLocalResource<Result<Vec<Heap4 option>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v758 v759 
    let v761 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v762 : (unit -> Result<Vec<Heap4 option>, std_string_String> option) = closure66(v760)
    let v763 : leptos_prelude_ArcMemo<Result<Vec<Heap4 option>, std_string_String> option> = Fable.Core.RustInterop.emitRustExpr v762 v761 
    let v764 : unit = ()
    let v765 : string = $"true; let _func0_from_v764 = Func0::from(move || {{ //"
    let v766 : bool = Fable.Core.RustInterop.emitRustExpr () v765 
    let v767 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v768 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v767 
    let v769 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v770 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v763 v769 
    let v772 : string = $"%A{v768}"
    let v775 : int64 = 400L
    let v776 : string = method8(v775, v772)
    let v777 : string = "state_core.use_requests (7) / json new_local_resource / requests: " + string v776 + ""
    let v778 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v779 : bool = Fable.Core.RustInterop.emitRustExpr v777 v778 
    let v780 : string = "true; let __future_init = Box::pin(/*"
    let v781 : bool = Fable.Core.RustInterop.emitRustExpr () v780 
    let v782 : string = "*/ async move { /*"
    let v783 : bool = Fable.Core.RustInterop.emitRustExpr () v782 
    let v784 : string = "*/ ()"
    let v785 : bool = Fable.Core.RustInterop.emitRustExpr () v784 
    let v788 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v789 : US26 option = v770 |> Option.map v788 
    let v809 : US26 = US26_1
    let v810 : US26 = v789 |> Option.defaultValue v809 
    let v866 : US27 =
        match v810 with
        | US26_1 -> (* None *)
            US27_1
        | US26_0(v814) -> (* Some *)
            let v815 : (Vec<Heap4 option> -> US24) = method83()
            let v816 : (std_string_String -> US24) = method84()
            let v818 : US24 = match v814 with Ok x -> v815 x | Error x -> v816 x
            let v862 : US28 =
                match v818 with
                | US24_1(v859) -> (* Error *)
                    US28_1(v859)
                | US24_0(v821) -> (* Ok *)
                    let v822 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v823 : bool = Fable.Core.RustInterop.emitRustExpr v821 v822 
                    let v824 : string = "x"
                    let v825 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v824 
                    let v828 : (Heap4 -> US25) = method85()
                    let v829 : US25 option = v825 |> Option.map v828 
                    let v849 : US25 = US25_1
                    let v850 : US25 = v829 |> Option.defaultValue v849 
                    let v854 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v855 : bool = Fable.Core.RustInterop.emitRustExpr v850 v854 
                    let v856 : string = "_vec_map"
                    let v857 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v856 
                    US28_0(v857)
            US27_0(v862)
    let v868 : string = $"%A{v866}"
    let v871 : int64 = 400L
    let v872 : string = method8(v871, v868)
    let v873 : string = "state_core.use_requests (8) / result_memo / state_data: " + string v872 + ""
    let v874 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v875 : bool = Fable.Core.RustInterop.emitRustExpr v873 v874 
    let v876 : (int32 -> (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>)) = method86(v866)
    let v877 : Vec<struct (string * US23 * string * bool * bool)> = method96(v768)
    let v878 : string = "v877.iter().enumerate().map(|(i, x)| v876(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v879 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v878 
    let v880 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = method97(v879)
    let v881 : string = "futures::future::try_join_all(v880)"
    let v882 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v881 
    let v883 : string = "v882.await"
    let v884 : Result<Vec<string option>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v883 
    let v885 : string = "$0?"
    let v886 : Vec<string option> = Fable.Core.RustInterop.emitRustExpr v884 v885 
    let v888 : Result<Vec<string option>, std_string_String> = Ok v886 
    let v891 : string = v49 + v50 
    let x = v888 //
    let v892 : _ = x
    let v893 : unit = ()
    (* run_target_args'
    let v894 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v895 : string = $"true; let _fix_closure_v893 = $0"
    let v896 : bool = Fable.Core.RustInterop.emitRustExpr v892 v895 
    let _run_target_args'_v894 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v897 : string = $"true; let _fix_closure_v893 = $0"
    let v898 : bool = Fable.Core.RustInterop.emitRustExpr v892 v897 
    let _run_target_args'_v894 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v899 : string = $"true; let _fix_closure_v893 = $0"
    let v900 : bool = Fable.Core.RustInterop.emitRustExpr v892 v899 
    let _run_target_args'_v894 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v894 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v894 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v894 = false 
    #endif
#else
    let _run_target_args'_v894 = false 
    #endif
    let v901 : bool = _run_target_args'_v894 
    let v902 : string = $"true; _fix_closure_v893 " + v891 + "); " + v49 + " // rust.fix_closure'"
    let v903 : bool = Fable.Core.RustInterop.emitRustExpr () v902 
    let v904 : string = "__future_init"
    let v905 : _ = Fable.Core.RustInterop.emitRustExpr () v904 
    let v906 : string = "v905"
    let v907 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<string option>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v906 
    let v908 : string = $"true; $0 /*"
    let v909 : bool = Fable.Core.RustInterop.emitRustExpr v907 v908 
    let v910 : string = $"*/ }}); //"
    let v911 : bool = Fable.Core.RustInterop.emitRustExpr () v910 
    let v912 : string = $"_func0_from_v764"
    let v913 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<string option>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v912 
    let v914 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v915 : leptos_prelude_ArcLocalResource<Result<Vec<string option>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v913 v914 
    let v916 : unit = ()
    let v917 : string = $"true; let _func1_from_v916 = Func1::from(move |value| {{ //"
    let v918 : bool = Fable.Core.RustInterop.emitRustExpr () v917 
    let v919 : string = $"value"
    let v920 : Heap4 = Fable.Core.RustInterop.emitRustExpr () v919 
    let v922 : string = $"%A{v920}"
    let v925 : int64 = System.Convert.ToInt64 v922.Length
    let v926 : string = "state_core.use_requests (10) / set_state_data_action / value_len: " + string v925 + ""
    let v927 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v928 : bool = Fable.Core.RustInterop.emitRustExpr v926 v927 
    let v929 : string = "true; let __future_init = Box::pin(/*"
    let v930 : bool = Fable.Core.RustInterop.emitRustExpr () v929 
    let v931 : string = "*/ async move { /*"
    let v932 : bool = Fable.Core.RustInterop.emitRustExpr () v931 
    let v933 : string = "*/ ()"
    let v934 : bool = Fable.Core.RustInterop.emitRustExpr () v933 
    let v935 : string = "Box::pin($0)"
    let v936 : std_pin_Pin<Box<leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>>> = Fable.Core.RustInterop.emitRustExpr v0 v935 
    let v937 : string = $"leptos::prelude::ArcMemo::get_untracked(&$0)"
    let v938 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v936 v937 
    let v939 : string = "Box::pin($0)"
    let v940 : std_pin_Pin<Box<leptos_prelude_ArcMemo<PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option>>> = Fable.Core.RustInterop.emitRustExpr v125 v939 
    let v941 : string = $"leptos::prelude::ArcMemo::get_untracked(&$0)"
    let v942 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr v940 v941 
    let v943 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v944 : bool = Fable.Core.RustInterop.emitRustExpr v942 v943 
    let v945 : string = "x"
    let v946 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr () v945 
    let v947 : string = "$0.0"
    let v948 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr v946 v947 
    let v949 : string = "true; $0 })"
    let v950 : bool = Fable.Core.RustInterop.emitRustExpr v948 v949 
    let v951 : string = "_optionm_map_"
    let v952 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr () v951 
    let v955 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v956 : US2 option = v952 |> Option.map v955 
    let v976 : US2 = US2_1
    let v977 : US2 = v956 |> Option.defaultValue v976 
    let v1155 : US34 =
        match v977 with
        | US2_0(v981) -> (* Some *)
            let v982 : unit = ()
            let v983 : string = $"true; let _func1_from_v982 = Func1::from(move |value| {{ //"
            let v984 : bool = Fable.Core.RustInterop.emitRustExpr () v983 
            let v985 : string = $"value"
            let struct (v986 : string, v987 : US23, v988 : string, v989 : bool, v990 : bool) = Fable.Core.RustInterop.emitRustExpr () v985 
            let v991 : string = "true; let __future_init = Box::pin(/*"
            let v992 : bool = Fable.Core.RustInterop.emitRustExpr () v991 
            let v993 : string = "*/ async move { /*"
            let v994 : bool = Fable.Core.RustInterop.emitRustExpr () v993 
            let v995 : string = "*/ ()"
            let v996 : bool = Fable.Core.RustInterop.emitRustExpr () v995 
            let v997 : string = "state_core.use_requests (11) / set_state_data_action / database=Some(_) / url: " + v986 + ""
            let v998 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v999 : bool = Fable.Core.RustInterop.emitRustExpr v997 v998 
            let v1000 : string = "url[" + v986 + "](" + $"%A{v988}" + ")"
            let v1002 : string = $"%A{v920}"
            let v1005 : int64 = System.Convert.ToInt64 v1002.Length
            let v1006 : string = "state_core.set_data () / data_len: " + string v1005 + ""
            let v1007 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1008 : bool = Fable.Core.RustInterop.emitRustExpr v1006 v1007 
            let v1009 : string = "true; let __future_init = Box::pin(/*"
            let v1010 : bool = Fable.Core.RustInterop.emitRustExpr () v1009 
            let v1011 : string = "*/ async move { /*"
            let v1012 : bool = Fable.Core.RustInterop.emitRustExpr () v1011 
            let v1013 : string = "*/ ()"
            let v1014 : bool = Fable.Core.RustInterop.emitRustExpr () v1013 
            let v1015 : string = "true; let mut data = Vec::new()"
            let v1016 : bool = Fable.Core.RustInterop.emitRustExpr () v1015 
            let v1017 : string = "true; borsh::BorshSerialize::serialize(&$0, &mut data).unwrap()"
            let v1018 : bool = Fable.Core.RustInterop.emitRustExpr v920 v1017 
            let v1019 : string = "data"
            let v1020 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr () v1019 
            let v1021 : string = "serde_wasm_bindgen::to_value(&v1020).unwrap()"
            let v1022 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr () v1021 
            let v1023 : string = method98(v1000)
            (* run_target_args'
            let v1028 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1029 : string = "&*$0"
            let v1030 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1023 v1029 
            let _run_target_args'_v1028 = v1030 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1031 : string = "&*$0"
            let v1032 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1023 v1031 
            let _run_target_args'_v1028 = v1032 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1033 : string = "&*$0"
            let v1034 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1023 v1033 
            let _run_target_args'_v1028 = v1034 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1036 : Ref<Str> = v1023 |> unbox<Ref<Str>>
            let _run_target_args'_v1028 = v1036 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1040 : Ref<Str> = v1023 |> unbox<Ref<Str>>
            let _run_target_args'_v1028 = v1040 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1044 : Ref<Str> = v1023 |> unbox<Ref<Str>>
            let _run_target_args'_v1028 = v1044 
            #endif
#else
            let v1048 : Ref<Str> = v1023 |> unbox<Ref<Str>>
            let _run_target_args'_v1028 = v1048 
            #endif
            let v1051 : Ref<Str> = _run_target_args'_v1028 
            let v1060 : string = "$0.transaction(&[\"store\"], rexie::TransactionMode::ReadWrite)?"
            let v1061 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v981 v1060 
            let v1062 : string = "v1061.store(\"store\")?"
            let v1063 : rexie_Store = Fable.Core.RustInterop.emitRustExpr () v1062 
            let v1064 : string = "true; v1063.put(&v1022, Some(&$0.into())).await?"
            let v1065 : bool = Fable.Core.RustInterop.emitRustExpr v1051 v1064 
            let v1066 : string = "true; v1061.done().await?"
            let v1067 : bool = Fable.Core.RustInterop.emitRustExpr () v1066 
            let v1069 : Result<unit, rexie_Error> = Ok () 
            let v1072 : string = v49 + v50 
            let x = v1069 //
            let v1073 : _ = x
            let v1074 : unit = ()
            (* run_target_args'
            let v1075 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1076 : string = $"true; let _fix_closure_v1074 = $0"
            let v1077 : bool = Fable.Core.RustInterop.emitRustExpr v1073 v1076 
            let _run_target_args'_v1075 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1078 : string = $"true; let _fix_closure_v1074 = $0"
            let v1079 : bool = Fable.Core.RustInterop.emitRustExpr v1073 v1078 
            let _run_target_args'_v1075 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1080 : string = $"true; let _fix_closure_v1074 = $0"
            let v1081 : bool = Fable.Core.RustInterop.emitRustExpr v1073 v1080 
            let _run_target_args'_v1075 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v1075 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v1075 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v1075 = false 
            #endif
#else
            let _run_target_args'_v1075 = false 
            #endif
            let v1082 : bool = _run_target_args'_v1075 
            let v1083 : string = $"true; _fix_closure_v1074 " + v1072 + "); " + v49 + " // rust.fix_closure'"
            let v1084 : bool = Fable.Core.RustInterop.emitRustExpr () v1083 
            let v1085 : string = "__future_init"
            let v1086 : _ = Fable.Core.RustInterop.emitRustExpr () v1085 
            let v1087 : string = "v1086"
            let v1088 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v1087 
            let v1089 : string = "v1088.await"
            let v1090 : Result<unit, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v1089 
            let v1091 : (rexie_Error -> std_string_String) = method99()
            (* run_target_args'
            let v1093 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1094 : string = "$0.map_err(|x| $1(x))"
            let v1095 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1090, v1091) v1094 
            let _run_target_args'_v1093 = v1095 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1096 : string = "$0.map_err(|x| $1(x))"
            let v1097 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1090, v1091) v1096 
            let _run_target_args'_v1093 = v1097 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1098 : string = "$0.map_err(|x| $1(x))"
            let v1099 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1090, v1091) v1098 
            let _run_target_args'_v1093 = v1099 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1100 : Result<unit, std_string_String> = match v1090 with Ok x -> Ok x | Error x -> Error (v1091 x)
            let _run_target_args'_v1093 = v1100 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1101 : Result<unit, std_string_String> = match v1090 with Ok x -> Ok x | Error x -> Error (v1091 x)
            let _run_target_args'_v1093 = v1101 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1102 : Result<unit, std_string_String> = match v1090 with Ok x -> Ok x | Error x -> Error (v1091 x)
            let _run_target_args'_v1093 = v1102 
            #endif
#else
            let v1103 : Result<unit, std_string_String> = match v1090 with Ok x -> Ok x | Error x -> Error (v1091 x)
            let _run_target_args'_v1093 = v1103 
            #endif
            let v1104 : Result<unit, std_string_String> = _run_target_args'_v1093 
            let v1107 : string = "true; $0?"
            let v1108 : bool = Fable.Core.RustInterop.emitRustExpr v1104 v1107 
            
            let v1110 : Result<unit, std_string_String> = Ok () 
            let v1113 : string = v49 + v50 
            let x = v1110 //
            let v1114 : _ = x
            let v1115 : unit = ()
            (* run_target_args'
            let v1116 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1117 : string = $"true; let _fix_closure_v1115 = $0"
            let v1118 : bool = Fable.Core.RustInterop.emitRustExpr v1114 v1117 
            let _run_target_args'_v1116 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1119 : string = $"true; let _fix_closure_v1115 = $0"
            let v1120 : bool = Fable.Core.RustInterop.emitRustExpr v1114 v1119 
            let _run_target_args'_v1116 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1121 : string = $"true; let _fix_closure_v1115 = $0"
            let v1122 : bool = Fable.Core.RustInterop.emitRustExpr v1114 v1121 
            let _run_target_args'_v1116 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v1116 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v1116 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v1116 = false 
            #endif
#else
            let _run_target_args'_v1116 = false 
            #endif
            let v1123 : bool = _run_target_args'_v1116 
            let v1124 : string = $"true; _fix_closure_v1115 " + v1113 + "); " + v49 + " // rust.fix_closure'"
            let v1125 : bool = Fable.Core.RustInterop.emitRustExpr () v1124 
            let v1126 : string = "__future_init"
            let v1127 : _ = Fable.Core.RustInterop.emitRustExpr () v1126 
            let v1128 : string = "v1127"
            let v1129 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v1128 
            let func1_from_result = v1129 //
            let v1130 : _ = func1_from_result
            let v1131 : string = $"true; $0 /*"
            let v1132 : bool = Fable.Core.RustInterop.emitRustExpr v1130 v1131 
            let v1133 : string = $"*/ }}); //"
            let v1134 : bool = Fable.Core.RustInterop.emitRustExpr () v1133 
            let v1135 : string = $"_func1_from_v982"
            let v1136 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1135 
            let v1137 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v1138 : (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>) = closure76(v1136)
            let v1139 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr struct (v938, v1138) v1137 
            let v1140 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = method101(v1139)
            let v1141 : string = "futures::future::try_join_all(v1140)"
            let v1142 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1141 
            let v1143 : string = "v1142.await"
            let v1144 : Result<Vec<unit>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v1143 
            let v1145 : string = "$0?"
            let v1146 : Vec<unit> = Fable.Core.RustInterop.emitRustExpr v1144 v1145 
            US34_0(v1146)
        | _ ->
            let v1148 : string = "state_core.use_requests (12) / set_state_data_action / database,request=None"
            let v1149 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1150 : bool = Fable.Core.RustInterop.emitRustExpr v1148 v1149 
            let v1151 : (unit []) = [||]
            let v1152 : string = "$0.to_vec()"
            let v1153 : Vec<unit> = Fable.Core.RustInterop.emitRustExpr v1151 v1152 
            US34_0(v1153)
    let v1167 : Result<Vec<unit>, std_string_String> =
        match v1155 with
        | US34_1(v1161) -> (* Error *)
            let v1163 : Result<Vec<unit>, std_string_String> = Error v1161 
            v1163
        | US34_0(v1156) -> (* Ok *)
            let v1158 : Result<Vec<unit>, std_string_String> = Ok v1156 
            v1158
    let v1168 : string = v49 + v50 
    let x = v1167 //
    let v1169 : _ = x
    let v1170 : unit = ()
    (* run_target_args'
    let v1171 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v1172 : string = $"true; let _fix_closure_v1170 = $0"
    let v1173 : bool = Fable.Core.RustInterop.emitRustExpr v1169 v1172 
    let _run_target_args'_v1171 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v1174 : string = $"true; let _fix_closure_v1170 = $0"
    let v1175 : bool = Fable.Core.RustInterop.emitRustExpr v1169 v1174 
    let _run_target_args'_v1171 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v1176 : string = $"true; let _fix_closure_v1170 = $0"
    let v1177 : bool = Fable.Core.RustInterop.emitRustExpr v1169 v1176 
    let _run_target_args'_v1171 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v1171 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v1171 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v1171 = false 
    #endif
#else
    let _run_target_args'_v1171 = false 
    #endif
    let v1178 : bool = _run_target_args'_v1171 
    let v1179 : string = $"true; _fix_closure_v1170 " + v1168 + "); " + v49 + " // rust.fix_closure'"
    let v1180 : bool = Fable.Core.RustInterop.emitRustExpr () v1179 
    let v1181 : string = "__future_init"
    let v1182 : _ = Fable.Core.RustInterop.emitRustExpr () v1181 
    let v1183 : string = "v1182"
    let v1184 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v1183 
    let func1_from_result = v1184 //
    let v1185 : _ = func1_from_result
    let v1186 : string = $"true; $0 /*"
    let v1187 : bool = Fable.Core.RustInterop.emitRustExpr v1185 v1186 
    let v1188 : string = $"*/ }}); //"
    let v1189 : bool = Fable.Core.RustInterop.emitRustExpr () v1188 
    let v1190 : string = $"_func1_from_v916"
    let v1191 : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1190 
    let v1192 : string = "leptos::prelude::Action::new(move |value: &std::sync::Arc<Heap4>| $0(value.clone()))"
    let v1193 : (Heap4 -> std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>) = closure77(v1191)
    let v1194 : leptos_prelude_Action<Heap4, Result<Vec<unit>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v1193 v1192 
    let v1195 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1196 : (unit -> (Result<crate_model_near_nearblocks_Root option, std_string_String> [])) = closure78(v0, v763, v915, v1194)
    let v1197 : leptos_prelude_ArcMemo<(Result<crate_model_near_nearblocks_Root option, std_string_String> [])> = Fable.Core.RustInterop.emitRustExpr v1196 v1195 
    let v1198 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1199 : (unit -> Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>) = closure87(v1, v122, v760, v1197)
    let v1200 : leptos_prelude_ArcMemo<Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>> = Fable.Core.RustInterop.emitRustExpr v1199 v1198 
    v1200
and closure91 () (v0 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option) : US43 =
    US43_0(v0)
and method115 () : ((struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option -> US43) =
    closure91()
and closure92 () (v0 : std_string_String) : US43 =
    US43_1(v0)
and method116 () : (std_string_String -> US43) =
    closure92()
and method117 (v0 : Func0<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>, US43>) : Func0<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>, US43> =
    v0
and closure93 (v0 : Func0<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>, US43>) (v1 : Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>) : US43 =
    let v2 : Func0<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>, US43> = method117(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : US43 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure94 () (v0 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) : US45 =
    US45_0(v0)
and method118 () : ((struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) -> US45) =
    closure94()
and method119 (v0 : Func0<US43, US44>) : Func0<US43, US44> =
    v0
and closure95 (v0 : Func0<US43, US44>) (v1 : US43) : US44 =
    let v2 : Func0<US43, US44> = method119(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : US44 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure96 () (v0 : US44) : bool =
    match v0 with
    | US44_0(v1) -> (* Ok *)
        match v1 with
        | US45_1 -> (* None *)
            true
        | _ ->
            false
    | _ ->
        false
and method120 () : (US44 -> bool) =
    closure96()
and method121 (v0 : Vec<US44>) : Vec<US44> =
    v0
and method123 (v0 : Func0<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))), struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))>) : Func0<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))), struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> =
    v0
and closure99 (v0 : Func0<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))), struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))>) (v1 : (unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])))) : struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) =
    let v2 : Func0<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))), struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = method123(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : unativeint, v6 : std_string_String, v7 : std_string_String, v8 : std_string_String, v9 : std_string_String, v10 : std_string_String, v11 : std_string_String, v12 : uint32, v13 : (struct (std_string_String * std_string_String option) []), v14 : float, v15 : bool, v16 : float, v17 : (std_string_String [])) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17)
and method124 (v0 : Func0<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])), struct (string * unativeint * Heap5)>) : Func0<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])), struct (string * unativeint * Heap5)> =
    v0
and closure100 (v0 : Func0<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])), struct (string * unativeint * Heap5)>) struct (v1 : unativeint, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : std_string_String, v7 : std_string_String, v8 : uint32, v9 : (struct (std_string_String * std_string_String option) []), v10 : float, v11 : bool, v12 : float, v13 : (std_string_String [])) : struct (string * unativeint * Heap5) =
    let v14 : Func0<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])), struct (string * unativeint * Heap5)> = method124(v0)
    let func1_move_x = struct (v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13) //
    let v15 : _ = func1_move_x
    let v16 : string = "(move |x| v14(x))($0)"
    let struct (v17 : string, v18 : unativeint, v19 : Heap5) = Fable.Core.RustInterop.emitRustExpr v15 v16 
    struct (v17, v18, v19)
and closure98 (v0 : (string []), v1 : int32) (v2 : US44) : US48 =
    let v3 : string = v0.[int v1]
    match v2 with
    | US44_1(v122) -> (* Error *)
        US48_1(v122)
    | US44_0(v4) -> (* Ok *)
        let v120 : US49 =
            match v4 with
            | US45_1 -> (* None *)
                US49_1
            | US45_0(v5) -> (* Some *)
                let v6 : string = "$0.to_vec()"
                let v7 : Vec<struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr v5 v6 
                let v8 : string = "v7.into_iter()"
                let v9 : _ = Fable.Core.RustInterop.emitRustExpr () v8 
                let v10 : string = "v9.enumerate().map(std::sync::Arc::new)"
                let v11 : _ = Fable.Core.RustInterop.emitRustExpr () v10 
                let v12 : string = "$0.collect::<Vec<_>>()"
                let v13 : Vec<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])))> = Fable.Core.RustInterop.emitRustExpr v11 v12 
                let v14 : unit = ()
                let v15 : string = $"true; let _func1_from_v14 = Func1::from(move |value| {{ //"
                let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
                let v17 : string = $"value"
                let v18 : (unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))) = Fable.Core.RustInterop.emitRustExpr () v17 
                let (a, b) = v18 
                let v32 : unativeint = a
                let struct (v33 : std_string_String, v34 : std_string_String, v35 : std_string_String, v36 : std_string_String, v37 : std_string_String, v38 : std_string_String, v39 : uint32, v40 : (struct (std_string_String * std_string_String option) []), v41 : float, v42 : bool, v43 : float, v44 : (std_string_String [])) = b
                let func1_from_result = struct (v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44) //
                let v71 : _ = func1_from_result
                let v72 : string = $"true; $0 /*"
                let v73 : bool = Fable.Core.RustInterop.emitRustExpr v71 v72 
                let v74 : string = $"*/ }}); //"
                let v75 : bool = Fable.Core.RustInterop.emitRustExpr () v74 
                let v76 : string = $"_func1_from_v14"
                let v77 : Func0<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))), struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr () v76 
                let v78 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
                let v79 : ((unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))) -> struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))) = closure99(v77)
                let v80 : Vec<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr struct (v13, v79) v78 
                let v81 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                let v82 : (struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) = Fable.Core.RustInterop.emitRustExpr v80 v81 
                let v83 : string = "$0.to_vec()"
                let v84 : Vec<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr v82 v83 
                let v85 : unit = ()
                let v86 : string = $"true; let _func1_from_v85 = Func1::from(move |value| {{ //"
                let v87 : bool = Fable.Core.RustInterop.emitRustExpr () v86 
                let v88 : string = $"value"
                let struct (v89 : unativeint, v90 : std_string_String, v91 : std_string_String, v92 : std_string_String, v93 : std_string_String, v94 : std_string_String, v95 : std_string_String, v96 : uint32, v97 : (struct (std_string_String * std_string_String option) []), v98 : float, v99 : bool, v100 : float, v101 : (std_string_String [])) = Fable.Core.RustInterop.emitRustExpr () v88 
                let v103 : unativeint = v1 |> unativeint 
                let v106 : Heap5 = {l0 = v90; l1 = v91; l2 = v92; l3 = v93; l4 = v94; l5 = v95; l6 = v96; l7 = v97; l8 = v98; l9 = v99; l10 = v100; l11 = v101} : Heap5
                let func1_from_result = struct (v3, v103, v106) //
                let v107 : _ = func1_from_result
                let v108 : string = $"true; $0 /*"
                let v109 : bool = Fable.Core.RustInterop.emitRustExpr v107 v108 
                let v110 : string = $"*/ }}); //"
                let v111 : bool = Fable.Core.RustInterop.emitRustExpr () v110 
                let v112 : string = $"_func1_from_v85"
                let v113 : Func0<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])), struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr () v112 
                let v114 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
                let v115 : (struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) -> struct (string * unativeint * Heap5)) = closure100(v113)
                let v116 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr struct (v84, v115) v114 
                US49_0(v116)
        US48_0(v120)
and closure97 (v0 : (string [])) (v1 : int32) : (US44 -> US48) =
    closure98(v0, v1)
and method122 (v0 : (string [])) : (int32 -> (US44 -> US48)) =
    closure97(v0)
and method125 (v0 : Vec<US44>) : Vec<US44> =
    v0
and method126 (v0 : Func0<US48, US50>) : Func0<US48, US50> =
    v0
and closure101 (v0 : Func0<US48, US50>) (v1 : US48) : US50 =
    let v2 : Func0<US48, US50> = method126(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : US50 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method127 (v0 : Func0<US50, Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>>) : Func0<US50, Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>> =
    v0
and closure102 (v0 : Func0<US50, Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>>) (v1 : US50) : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> =
    let v2 : Func0<US50, Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>> = method127(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method128 (v0 : int32, v1 : Mut1) : bool =
    let v2 : int32 = v1.l0
    let v3 : bool = v2 < v0
    v3
and closure103 () (v0 : Vec<struct (string * unativeint * Heap5)> option) : US50 =
    US50_0(v0)
and method130 () : (Vec<struct (string * unativeint * Heap5)> option -> US50) =
    closure103()
and closure104 () (v0 : std_string_String) : US50 =
    US50_1(v0)
and method131 () : (std_string_String -> US50) =
    closure104()
and closure105 () (v0 : Vec<struct (string * unativeint * Heap5)>) : US49 =
    US49_0(v0)
and method132 () : (Vec<struct (string * unativeint * Heap5)> -> US49) =
    closure105()
and method133 (v0 : Vec<struct (string * unativeint * Heap5)>) : Vec<struct (string * unativeint * Heap5)> =
    v0
and method134 (v0 : Vec<struct (string * unativeint * Heap5)>) : Vec<struct (string * unativeint * Heap5)> =
    v0
and method129 (v0 : UH2, v1 : US51) : US51 =
    match v0 with
    | UH2_1(v2, v3) -> (* Cons *)
        let v4 : (Vec<struct (string * unativeint * Heap5)> option -> US50) = method130()
        let v5 : (std_string_String -> US50) = method131()
        let v7 : US50 = match v2 with Ok x -> v4 x | Error x -> v5 x
        let v43 : US48 =
            match v7 with
            | US50_1(v40) -> (* Error *)
                US48_1(v40)
            | US50_0(v10) -> (* Ok *)
                let v13 : (Vec<struct (string * unativeint * Heap5)> -> US49) = method132()
                let v14 : US49 option = v10 |> Option.map v13 
                let v34 : US49 = US49_1
                let v35 : US49 = v14 |> Option.defaultValue v34 
                US48_0(v35)
        let v64 : US51 =
            match v1 with
            | US51_0(v44) -> (* Ok *)
                match v43 with
                | US48_1(v57) -> (* Error *)
                    US51_1(v57)
                | US48_0(v45) -> (* Ok *)
                    match v45 with
                    | US49_0(v46) -> (* Some *)
                        let v47 : Vec<struct (string * unativeint * Heap5)> = method133(v46)
                        let v48 : Vec<struct (string * unativeint * Heap5)> = method134(v44)
                        let v49 : string = "true; let mut v48 = v48"
                        let v50 : bool = Fable.Core.RustInterop.emitRustExpr () v49 
                        let v51 : string = "true; v48.extend(v47)"
                        let v52 : bool = Fable.Core.RustInterop.emitRustExpr () v51 
                        let v53 : string = "v48"
                        let v54 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr () v53 
                        US51_0(v54)
                    | _ ->
                        v1
            | _ ->
                match v43 with
                | US48_1(v61) -> (* Error *)
                    US51_1(v61)
                | _ ->
                    v1
        method129(v3, v64)
    | UH2_0 -> (* Nil *)
        v1
and method135 (v0 : Vec<struct (string * unativeint * Heap5)>) : Vec<struct (string * unativeint * Heap5)> =
    v0
and closure106 () struct (v0 : string, v1 : unativeint, v2 : Heap5) : std_string_String =
    let v3 : std_string_String = v2.l5
    v3
and method136 () : (struct (string * unativeint * Heap5) -> std_string_String) =
    closure106()
and method137 (v0 : Vec<struct (string * unativeint * Heap5)>) : Vec<struct (string * unativeint * Heap5)> =
    v0
and closure90 (v0 : leptos_prelude_ArcMemo<(string [])>, v1 : leptos_prelude_ArcMemo<Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>>) () : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> =
    let v2 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v3 : Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : unit = ()
    let v5 : string = $"true; let _func1_from_v4 = Func1::from(move |value| {{ //"
    let v6 : bool = Fable.Core.RustInterop.emitRustExpr () v5 
    let v7 : string = $"value"
    let v8 : Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v7 
    let v9 : ((struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option -> US43) = method115()
    let v10 : (std_string_String -> US43) = method116()
    let v12 : US43 = match v8 with Ok x -> v9 x | Error x -> v10 x
    let func1_from_result = v12 //
    let v15 : _ = func1_from_result
    let v16 : string = $"true; $0 /*"
    let v17 : bool = Fable.Core.RustInterop.emitRustExpr v15 v16 
    let v18 : string = $"*/ }}); //"
    let v19 : bool = Fable.Core.RustInterop.emitRustExpr () v18 
    let v20 : string = $"_func1_from_v4"
    let v21 : Func0<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>, US43> = Fable.Core.RustInterop.emitRustExpr () v20 
    let v22 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v23 : (Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String> -> US43) = closure93(v21)
    let v24 : Vec<US43> = Fable.Core.RustInterop.emitRustExpr struct (v3, v23) v22 
    let v25 : unit = ()
    let v26 : string = $"true; let _func1_from_v25 = Func1::from(move |value| {{ //"
    let v27 : bool = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : string = $"value"
    let v29 : US43 = Fable.Core.RustInterop.emitRustExpr () v28 
    let v63 : US44 =
        match v29 with
        | US43_1(v60) -> (* Error *)
            US44_1(v60)
        | US43_0(v30) -> (* Ok *)
            let v33 : ((struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) -> US45) = method118()
            let v34 : US45 option = v30 |> Option.map v33 
            let v54 : US45 = US45_1
            let v55 : US45 = v34 |> Option.defaultValue v54 
            US44_0(v55)
    let func1_from_result = v63 //
    let v64 : _ = func1_from_result
    let v65 : string = $"true; $0 /*"
    let v66 : bool = Fable.Core.RustInterop.emitRustExpr v64 v65 
    let v67 : string = $"*/ }}); //"
    let v68 : bool = Fable.Core.RustInterop.emitRustExpr () v67 
    let v69 : string = $"_func1_from_v25"
    let v70 : Func0<US43, US44> = Fable.Core.RustInterop.emitRustExpr () v69 
    let v71 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v72 : (US43 -> US44) = closure95(v70)
    let v73 : Vec<US44> = Fable.Core.RustInterop.emitRustExpr struct (v24, v72) v71 
    let v75 : string = $"%A{v73}"
    let v78 : int64 = 400L
    let v79 : string = method8(v78, v75)
    let v80 : string = "transactions.render (8) / txns move / root: " + string v79 + ""
    let v81 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v82 : bool = Fable.Core.RustInterop.emitRustExpr v80 v81 
    let v83 : (US44 -> bool) = method120()
    let v84 : Vec<US44> = method121(v73)
    let v85 : string = "v84.into_iter().filter(|x| v83(x.clone().clone())).collect::<Vec<_>>()"
    let v86 : Vec<US44> = Fable.Core.RustInterop.emitRustExpr () v85 
    let v87 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v88 : (US44 []) = Fable.Core.RustInterop.emitRustExpr v86 v87 
    let v89 : int32 = v88.Length
    let v90 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v91 : (US44 []) = Fable.Core.RustInterop.emitRustExpr v73 v90 
    let v92 : int32 = v91.Length
    let v93 : bool = v89 = v92
    let v217 : US46 =
        if v93 then
            let v94 : US47 = US47_1
            US46_0(v94)
        else
            let v96 : string = $"leptos::prelude::ArcMemo::get(&$0)"
            let v97 : (string []) = Fable.Core.RustInterop.emitRustExpr v0 v96 
            let v98 : (int32 -> (US44 -> US48)) = method122(v97)
            let v99 : Vec<US44> = method125(v73)
            let v100 : string = "v99.iter().enumerate().map(|(i, x)| v98(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
            let v101 : Vec<US48> = Fable.Core.RustInterop.emitRustExpr () v100 
            let v102 : unit = ()
            let v103 : string = $"true; let _func1_from_v102 = Func1::from(move |value| {{ //"
            let v104 : bool = Fable.Core.RustInterop.emitRustExpr () v103 
            let v105 : string = $"value"
            let v106 : US48 = Fable.Core.RustInterop.emitRustExpr () v105 
            let v123 : US50 =
                match v106 with
                | US48_1(v120) -> (* Error *)
                    US50_1(v120)
                | US48_0(v107) -> (* Ok *)
                    let v118 : Vec<struct (string * unativeint * Heap5)> option =
                        match v107 with
                        | US49_1 -> (* None *)
                            let v114 : Vec<struct (string * unativeint * Heap5)> option = None
                            v114
                        | US49_0(v108) -> (* Some *)
                            let v110 : Vec<struct (string * unativeint * Heap5)> option = Some v108 
                            v110
                    US50_0(v118)
            let func1_from_result = v123 //
            let v124 : _ = func1_from_result
            let v125 : string = $"true; $0 /*"
            let v126 : bool = Fable.Core.RustInterop.emitRustExpr v124 v125 
            let v127 : string = $"*/ }}); //"
            let v128 : bool = Fable.Core.RustInterop.emitRustExpr () v127 
            let v129 : string = $"_func1_from_v102"
            let v130 : Func0<US48, US50> = Fable.Core.RustInterop.emitRustExpr () v129 
            let v131 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v132 : (US48 -> US50) = closure101(v130)
            let v133 : Vec<US50> = Fable.Core.RustInterop.emitRustExpr struct (v101, v132) v131 
            let v134 : unit = ()
            let v135 : string = $"true; let _func1_from_v134 = Func1::from(move |value| {{ //"
            let v136 : bool = Fable.Core.RustInterop.emitRustExpr () v135 
            let v137 : string = $"value"
            let v138 : US50 = Fable.Core.RustInterop.emitRustExpr () v137 
            let v150 : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> =
                match v138 with
                | US50_1(v144) -> (* Error *)
                    let v146 : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> = Error v144 
                    v146
                | US50_0(v139) -> (* Ok *)
                    let v141 : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> = Ok v139 
                    v141
            let func1_from_result = v150 //
            let v151 : _ = func1_from_result
            let v152 : string = $"true; $0 /*"
            let v153 : bool = Fable.Core.RustInterop.emitRustExpr v151 v152 
            let v154 : string = $"*/ }}); //"
            let v155 : bool = Fable.Core.RustInterop.emitRustExpr () v154 
            let v156 : string = $"_func1_from_v134"
            let v157 : Func0<US50, Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v156 
            let v158 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v159 : (US50 -> Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>) = closure102(v157)
            let v160 : Vec<Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr struct (v133, v159) v158 
            let v161 : (struct (string * unativeint * Heap5) []) = [||]
            let v162 : string = "$0.to_vec()"
            let v163 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr v161 v162 
            let v164 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
            let v165 : (Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v160 v164 
            let v166 : int32 = v165.Length
            let v167 : UH2 = UH2_0
            let v168 : Mut1 = {l0 = 0; l1 = v167} : Mut1
            while method128(v166, v168) do
                let v170 : int32 = v168.l0
                let v171 : int32 =  -v170
                let v172 : int32 = v171 + v166
                let v173 : int32 = v172 - 1
                let v174 : UH2 = v168.l1
                let v175 : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> = v165.[int v173]
                let v176 : int32 = v170 + 1
                let v177 : UH2 = UH2_1(v175, v174)
                v168.l0 <- v176
                v168.l1 <- v177
                ()
            let v178 : UH2 = v168.l1
            let v179 : US51 = US51_0(v163)
            let v180 : US51 = method129(v178, v179)
            let v194 : US51 =
                match v180 with
                | US51_1(v191) -> (* Error *)
                    US51_1(v191)
                | US51_0(v181) -> (* Ok *)
                    let v182 : Vec<struct (string * unativeint * Heap5)> = method135(v181)
                    let v183 : (struct (string * unativeint * Heap5) -> std_string_String) = method136()
                    let v184 : string = "true; let mut v182 = v182"
                    let v185 : bool = Fable.Core.RustInterop.emitRustExpr () v184 
                    let v186 : string = "true; v182.sort_by_key(|x| v183(x.clone()))"
                    let v187 : bool = Fable.Core.RustInterop.emitRustExpr () v186 
                    let v188 : string = "v182"
                    let v189 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr () v188 
                    US51_0(v189)
            let v209 : US52 =
                match v194 with
                | US51_1(v206) -> (* Error *)
                    US52_1(v206)
                | US51_0(v195) -> (* Ok *)
                    let v196 : Vec<struct (string * unativeint * Heap5)> = method137(v195)
                    let v197 : string = "true; let mut v196 = v196"
                    let v198 : bool = Fable.Core.RustInterop.emitRustExpr () v197 
                    let v199 : string = "true; v196.reverse()"
                    let v200 : bool = Fable.Core.RustInterop.emitRustExpr () v199 
                    let v201 : string = "v196"
                    let v202 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr () v201 
                    let v203 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v204 : (struct (string * unativeint * Heap5) []) = Fable.Core.RustInterop.emitRustExpr v202 v203 
                    US52_0(v204)
            match v209 with
            | US52_1(v213) -> (* Error *)
                US46_1(v213)
            | US52_0(v210) -> (* Ok *)
                let v211 : US47 = US47_0(v210)
                US46_0(v211)
    let v234 : US53 =
        match v217 with
        | US46_1(v231) -> (* Error *)
            US53_1(v231)
        | US46_0(v218) -> (* Ok *)
            let v229 : (struct (string * unativeint * Heap5) []) option =
                match v218 with
                | US47_1 -> (* None *)
                    let v225 : (struct (string * unativeint * Heap5) []) option = None
                    v225
                | US47_0(v219) -> (* Some *)
                    let v221 : (struct (string * unativeint * Heap5) []) option = Some v219 
                    v221
            US53_0(v229)
    let v246 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> =
        match v234 with
        | US53_1(v240) -> (* Error *)
            let v242 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Error v240 
            v242
        | US53_0(v235) -> (* Ok *)
            let v237 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Ok v235 
            v237
    let v248 : string = $"%A{v246}"
    let v251 : string = "use_transactions.render (9) / txns new_arc_memo / result: " + string v248 + " / loading: " + string v93 + ""
    let v252 : int64 = 200L
    let v253 : string = method8(v252, v251)
    let v254 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v255 : bool = Fable.Core.RustInterop.emitRustExpr v253 v254 
    v246
and closure108 () (v0 : (struct (string * unativeint * Heap5) []) option) : US53 =
    US53_0(v0)
and method138 () : ((struct (string * unativeint * Heap5) []) option -> US53) =
    closure108()
and closure109 () (v0 : std_string_String) : US53 =
    US53_1(v0)
and method139 () : (std_string_String -> US53) =
    closure109()
and closure110 () (v0 : (struct (string * unativeint * Heap5) [])) : US47 =
    US47_0(v0)
and method140 () : ((struct (string * unativeint * Heap5) []) -> US47) =
    closure110()
and closure111 () (v0 : serde_json_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method141 () : (serde_json_Error -> std_string_String) =
    closure111()
and closure112 () (v0 : std_string_String) : string =
    let v1 : string = "fable_library_rust::String_::fromString($0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    v2
and method142 () : (std_string_String -> string) =
    closure112()
and method143 (v0 : Result<std_string_String, std_string_String>) : Result<std_string_String, std_string_String> =
    v0
and closure113 () (v0 : string) : struct (string * US23 * string * bool * bool) =
    let v1 : string = "https://rpc.mainnet.near.org"
    let v2 : US23 = US23_1
    struct (v1, v2, v0, true, false)
and method144 () : (string -> struct (string * US23 * string * bool * bool)) =
    closure113()
and method145 (v0 : Result<string, std_string_String>) : Result<string, std_string_String> =
    v0
and method146 (v0 : Func0<struct (string * unativeint * Heap5), Result<struct (string * US23 * string * bool * bool), std_string_String>>) : Func0<struct (string * unativeint * Heap5), Result<struct (string * US23 * string * bool * bool), std_string_String>> =
    v0
and closure114 (v0 : Func0<struct (string * unativeint * Heap5), Result<struct (string * US23 * string * bool * bool), std_string_String>>) struct (v1 : string, v2 : unativeint, v3 : Heap5) : Result<struct (string * US23 * string * bool * bool), std_string_String> =
    let v4 : Func0<struct (string * unativeint * Heap5), Result<struct (string * US23 * string * bool * bool), std_string_String>> = method146(v0)
    let func1_move_x = struct (v1, v2, v3) //
    let v5 : _ = func1_move_x
    let v6 : string = "(move |x| v4(x))($0)"
    let v7 : Result<struct (string * US23 * string * bool * bool), std_string_String> = Fable.Core.RustInterop.emitRustExpr v5 v6 
    v7
and closure107 (v0 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>) () : Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String> =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : ((struct (string * unativeint * Heap5) []) option -> US53) = method138()
    let v4 : (std_string_String -> US53) = method139()
    let v6 : US53 = match v2 with Ok x -> v3 x | Error x -> v4 x
    let v42 : US46 =
        match v6 with
        | US53_1(v39) -> (* Error *)
            US46_1(v39)
        | US53_0(v9) -> (* Ok *)
            let v12 : ((struct (string * unativeint * Heap5) []) -> US47) = method140()
            let v13 : US47 option = v9 |> Option.map v12 
            let v33 : US47 = US47_1
            let v34 : US47 = v13 |> Option.defaultValue v33 
            US46_0(v34)
    let v402 : US54 =
        match v42 with
        | US46_1(v399) -> (* Error *)
            US54_1(v399)
        | US46_0(v43) -> (* Ok *)
            match v43 with
            | US47_0(v44) -> (* Some *)
                let v45 : string = "$0.to_vec()"
                let v46 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr v44 v45 
                let v47 : unit = ()
                let v48 : string = $"true; let _func1_from_v47 = Func1::from(move |value| {{ //"
                let v49 : bool = Fable.Core.RustInterop.emitRustExpr () v48 
                let v50 : string = $"value"
                let struct (v51 : string, v52 : unativeint, v53 : Heap5) = Fable.Core.RustInterop.emitRustExpr () v50 
                let v54 : string = "2.0"
                (* run_target_args'
                let v59 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v60 : string = "&*$0"
                let v61 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v54 v60 
                let _run_target_args'_v59 = v61 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v62 : string = "&*$0"
                let v63 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v54 v62 
                let _run_target_args'_v59 = v63 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v64 : string = "&*$0"
                let v65 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v54 v64 
                let _run_target_args'_v59 = v65 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v67 : Ref<Str> = v54 |> unbox<Ref<Str>>
                let _run_target_args'_v59 = v67 
                #endif
#if FABLE_COMPILER_PYTHON
                let v71 : Ref<Str> = v54 |> unbox<Ref<Str>>
                let _run_target_args'_v59 = v71 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v75 : Ref<Str> = v54 |> unbox<Ref<Str>>
                let _run_target_args'_v59 = v75 
                #endif
#else
                let v79 : Ref<Str> = v54 |> unbox<Ref<Str>>
                let _run_target_args'_v59 = v79 
                #endif
                let v82 : Ref<Str> = _run_target_args'_v59 
                (* run_target_args'
                let v95 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v96 : string = "String::from($0)"
                let v97 : std_string_String = Fable.Core.RustInterop.emitRustExpr v82 v96 
                let _run_target_args'_v95 = v97 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v98 : string = "String::from($0)"
                let v99 : std_string_String = Fable.Core.RustInterop.emitRustExpr v82 v98 
                let _run_target_args'_v95 = v99 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v100 : string = "String::from($0)"
                let v101 : std_string_String = Fable.Core.RustInterop.emitRustExpr v82 v100 
                let _run_target_args'_v95 = v101 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v103 : std_string_String = v82 |> unbox<std_string_String>
                let _run_target_args'_v95 = v103 
                #endif
#if FABLE_COMPILER_PYTHON
                let v107 : std_string_String = v82 |> unbox<std_string_String>
                let _run_target_args'_v95 = v107 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v111 : std_string_String = v82 |> unbox<std_string_String>
                let _run_target_args'_v95 = v111 
                #endif
#else
                let v115 : std_string_String = v82 |> unbox<std_string_String>
                let _run_target_args'_v95 = v115 
                #endif
                let v118 : std_string_String = _run_target_args'_v95 
                let v127 : string = "dontcare"
                (* run_target_args'
                let v132 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v133 : string = "&*$0"
                let v134 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v127 v133 
                let _run_target_args'_v132 = v134 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v135 : string = "&*$0"
                let v136 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v127 v135 
                let _run_target_args'_v132 = v136 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v137 : string = "&*$0"
                let v138 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v127 v137 
                let _run_target_args'_v132 = v138 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v140 : Ref<Str> = v127 |> unbox<Ref<Str>>
                let _run_target_args'_v132 = v140 
                #endif
#if FABLE_COMPILER_PYTHON
                let v144 : Ref<Str> = v127 |> unbox<Ref<Str>>
                let _run_target_args'_v132 = v144 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v148 : Ref<Str> = v127 |> unbox<Ref<Str>>
                let _run_target_args'_v132 = v148 
                #endif
#else
                let v152 : Ref<Str> = v127 |> unbox<Ref<Str>>
                let _run_target_args'_v132 = v152 
                #endif
                let v155 : Ref<Str> = _run_target_args'_v132 
                (* run_target_args'
                let v168 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v169 : string = "String::from($0)"
                let v170 : std_string_String = Fable.Core.RustInterop.emitRustExpr v155 v169 
                let _run_target_args'_v168 = v170 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v171 : string = "String::from($0)"
                let v172 : std_string_String = Fable.Core.RustInterop.emitRustExpr v155 v171 
                let _run_target_args'_v168 = v172 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v173 : string = "String::from($0)"
                let v174 : std_string_String = Fable.Core.RustInterop.emitRustExpr v155 v173 
                let _run_target_args'_v168 = v174 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v176 : std_string_String = v155 |> unbox<std_string_String>
                let _run_target_args'_v168 = v176 
                #endif
#if FABLE_COMPILER_PYTHON
                let v180 : std_string_String = v155 |> unbox<std_string_String>
                let _run_target_args'_v168 = v180 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v184 : std_string_String = v155 |> unbox<std_string_String>
                let _run_target_args'_v168 = v184 
                #endif
#else
                let v188 : std_string_String = v155 |> unbox<std_string_String>
                let _run_target_args'_v168 = v188 
                #endif
                let v191 : std_string_String = _run_target_args'_v168 
                let v200 : string = "EXPERIMENTAL_tx_status"
                (* run_target_args'
                let v205 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v206 : string = "&*$0"
                let v207 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v200 v206 
                let _run_target_args'_v205 = v207 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v208 : string = "&*$0"
                let v209 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v200 v208 
                let _run_target_args'_v205 = v209 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v210 : string = "&*$0"
                let v211 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v200 v210 
                let _run_target_args'_v205 = v211 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v213 : Ref<Str> = v200 |> unbox<Ref<Str>>
                let _run_target_args'_v205 = v213 
                #endif
#if FABLE_COMPILER_PYTHON
                let v217 : Ref<Str> = v200 |> unbox<Ref<Str>>
                let _run_target_args'_v205 = v217 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v221 : Ref<Str> = v200 |> unbox<Ref<Str>>
                let _run_target_args'_v205 = v221 
                #endif
#else
                let v225 : Ref<Str> = v200 |> unbox<Ref<Str>>
                let _run_target_args'_v205 = v225 
                #endif
                let v228 : Ref<Str> = _run_target_args'_v205 
                (* run_target_args'
                let v241 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v242 : string = "String::from($0)"
                let v243 : std_string_String = Fable.Core.RustInterop.emitRustExpr v228 v242 
                let _run_target_args'_v241 = v243 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v244 : string = "String::from($0)"
                let v245 : std_string_String = Fable.Core.RustInterop.emitRustExpr v228 v244 
                let _run_target_args'_v241 = v245 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v246 : string = "String::from($0)"
                let v247 : std_string_String = Fable.Core.RustInterop.emitRustExpr v228 v246 
                let _run_target_args'_v241 = v247 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v249 : std_string_String = v228 |> unbox<std_string_String>
                let _run_target_args'_v241 = v249 
                #endif
#if FABLE_COMPILER_PYTHON
                let v253 : std_string_String = v228 |> unbox<std_string_String>
                let _run_target_args'_v241 = v253 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v257 : std_string_String = v228 |> unbox<std_string_String>
                let _run_target_args'_v241 = v257 
                #endif
#else
                let v261 : std_string_String = v228 |> unbox<std_string_String>
                let _run_target_args'_v241 = v261 
                #endif
                let v264 : std_string_String = _run_target_args'_v241 
                let v273 : std_string_String = v53.l3
                let v274 : string = "bowen"
                (* run_target_args'
                let v279 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v280 : string = "&*$0"
                let v281 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v274 v280 
                let _run_target_args'_v279 = v281 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v282 : string = "&*$0"
                let v283 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v274 v282 
                let _run_target_args'_v279 = v283 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v284 : string = "&*$0"
                let v285 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v274 v284 
                let _run_target_args'_v279 = v285 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v287 : Ref<Str> = v274 |> unbox<Ref<Str>>
                let _run_target_args'_v279 = v287 
                #endif
#if FABLE_COMPILER_PYTHON
                let v291 : Ref<Str> = v274 |> unbox<Ref<Str>>
                let _run_target_args'_v279 = v291 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v295 : Ref<Str> = v274 |> unbox<Ref<Str>>
                let _run_target_args'_v279 = v295 
                #endif
#else
                let v299 : Ref<Str> = v274 |> unbox<Ref<Str>>
                let _run_target_args'_v279 = v299 
                #endif
                let v302 : Ref<Str> = _run_target_args'_v279 
                (* run_target_args'
                let v315 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v316 : string = "String::from($0)"
                let v317 : std_string_String = Fable.Core.RustInterop.emitRustExpr v302 v316 
                let _run_target_args'_v315 = v317 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v318 : string = "String::from($0)"
                let v319 : std_string_String = Fable.Core.RustInterop.emitRustExpr v302 v318 
                let _run_target_args'_v315 = v319 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v320 : string = "String::from($0)"
                let v321 : std_string_String = Fable.Core.RustInterop.emitRustExpr v302 v320 
                let _run_target_args'_v315 = v321 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v323 : std_string_String = v302 |> unbox<std_string_String>
                let _run_target_args'_v315 = v323 
                #endif
#if FABLE_COMPILER_PYTHON
                let v327 : std_string_String = v302 |> unbox<std_string_String>
                let _run_target_args'_v315 = v327 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v331 : std_string_String = v302 |> unbox<std_string_String>
                let _run_target_args'_v315 = v331 
                #endif
#else
                let v335 : std_string_String = v302 |> unbox<std_string_String>
                let _run_target_args'_v315 = v335 
                #endif
                let v338 : std_string_String = _run_target_args'_v315 
                let v347 : (std_string_String []) = [|v273; v338|]
                let v348 : string = "$0.to_vec()"
                let v349 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v347 v348 
                let v350 : string = "crate::model::near::rpc::RpcInput { jsonrpc: $0, id: $1, method: $2, params: v349 }"
                let v351 : crate_model_near_rpc_RpcInput = Fable.Core.RustInterop.emitRustExpr struct (v118, v191, v264) v350 
                let v352 : string = "serde_json::to_string(&v351)"
                let v353 : Result<std_string_String, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr () v352 
                let v354 : (serde_json_Error -> std_string_String) = method141()
                (* run_target_args'
                let v356 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v357 : string = "$0.map_err(|x| $1(x))"
                let v358 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v353, v354) v357 
                let _run_target_args'_v356 = v358 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v359 : string = "$0.map_err(|x| $1(x))"
                let v360 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v353, v354) v359 
                let _run_target_args'_v356 = v360 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v361 : string = "$0.map_err(|x| $1(x))"
                let v362 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v353, v354) v361 
                let _run_target_args'_v356 = v362 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v363 : Result<std_string_String, std_string_String> = match v353 with Ok x -> Ok x | Error x -> Error (v354 x)
                let _run_target_args'_v356 = v363 
                #endif
#if FABLE_COMPILER_PYTHON
                let v364 : Result<std_string_String, std_string_String> = match v353 with Ok x -> Ok x | Error x -> Error (v354 x)
                let _run_target_args'_v356 = v364 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v365 : Result<std_string_String, std_string_String> = match v353 with Ok x -> Ok x | Error x -> Error (v354 x)
                let _run_target_args'_v356 = v365 
                #endif
#else
                let v366 : Result<std_string_String, std_string_String> = match v353 with Ok x -> Ok x | Error x -> Error (v354 x)
                let _run_target_args'_v356 = v366 
                #endif
                let v367 : Result<std_string_String, std_string_String> = _run_target_args'_v356 
                let v370 : (std_string_String -> string) = method142()
                let v371 : Result<std_string_String, std_string_String> = method143(v367)
                let v372 : string = "v371.map(|x| v370(x))"
                let v373 : Result<string, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v372 
                let v374 : (string -> struct (string * US23 * string * bool * bool)) = method144()
                let v375 : Result<string, std_string_String> = method145(v373)
                let v376 : string = "v375.map(|x| v374(x))"
                let v377 : Result<struct (string * US23 * string * bool * bool), std_string_String> = Fable.Core.RustInterop.emitRustExpr () v376 
                let func1_from_result = v377 //
                let v378 : _ = func1_from_result
                let v379 : string = $"true; $0 /*"
                let v380 : bool = Fable.Core.RustInterop.emitRustExpr v378 v379 
                let v381 : string = $"*/ }}); //"
                let v382 : bool = Fable.Core.RustInterop.emitRustExpr () v381 
                let v383 : string = $"_func1_from_v47"
                let v384 : Func0<struct (string * unativeint * Heap5), Result<struct (string * US23 * string * bool * bool), std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v383 
                let v385 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
                let v386 : (struct (string * unativeint * Heap5) -> Result<struct (string * US23 * string * bool * bool), std_string_String>) = closure114(v384)
                let v387 : Vec<Result<struct (string * US23 * string * bool * bool), std_string_String>> = Fable.Core.RustInterop.emitRustExpr struct (v46, v386) v385 
                let v388 : string = "v387.into_iter().collect()"
                let v389 : Result<Vec<struct (string * US23 * string * bool * bool)>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v388 
                let v390 : string = "$0?"
                let v391 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v389 v390 
                let v392 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                let v393 : (struct (string * US23 * string * bool * bool) []) = Fable.Core.RustInterop.emitRustExpr v391 v392 
                let v394 : US55 = US55_0(v393)
                US54_0(v394)
            | _ ->
                let v396 : US55 = US55_1
                US54_0(v396)
    let v419 : US56 =
        match v402 with
        | US54_1(v416) -> (* Error *)
            US56_1(v416)
        | US54_0(v403) -> (* Ok *)
            let v414 : (struct (string * US23 * string * bool * bool) []) option =
                match v403 with
                | US55_1 -> (* None *)
                    let v410 : (struct (string * US23 * string * bool * bool) []) option = None
                    v410
                | US55_0(v404) -> (* Some *)
                    let v406 : (struct (string * US23 * string * bool * bool) []) option = Some v404 
                    v406
            US56_0(v414)
    let v431 : Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String> =
        match v419 with
        | US56_1(v425) -> (* Error *)
            let v427 : Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String> = Error v425 
            v427
        | US56_0(v420) -> (* Ok *)
            let v422 : Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String> = Ok v420 
            v422
    let v433 : string = $"%A{v431}"
    let v436 : string = "use_transactions.render (10) / rpc_requests new_arc_memo / result: " + string v433 + ""
    let v437 : int64 = 200L
    let v438 : string = method8(v437, v436)
    let v439 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v440 : bool = Fable.Core.RustInterop.emitRustExpr v438 v439 
    v431
and closure116 () (v0 : (struct (string * US23 * string * bool * bool) []) option) : US56 =
    US56_0(v0)
and method147 () : ((struct (string * US23 * string * bool * bool) []) option -> US56) =
    closure116()
and closure117 () (v0 : std_string_String) : US56 =
    US56_1(v0)
and method148 () : (std_string_String -> US56) =
    closure117()
and closure118 () (v0 : (struct (string * US23 * string * bool * bool) [])) : US55 =
    US55_0(v0)
and method149 () : ((struct (string * US23 * string * bool * bool) []) -> US55) =
    closure118()
and closure115 (v0 : leptos_prelude_ArcMemo<Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String>>) () : Vec<struct (string * US23 * string * bool * bool)> =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : ((struct (string * US23 * string * bool * bool) []) option -> US56) = method147()
    let v4 : (std_string_String -> US56) = method148()
    let v6 : US56 = match v2 with Ok x -> v3 x | Error x -> v4 x
    let v42 : US54 =
        match v6 with
        | US56_1(v39) -> (* Error *)
            US54_1(v39)
        | US56_0(v9) -> (* Ok *)
            let v12 : ((struct (string * US23 * string * bool * bool) []) -> US55) = method149()
            let v13 : US55 option = v9 |> Option.map v12 
            let v33 : US55 = US55_1
            let v34 : US55 = v13 |> Option.defaultValue v33 
            US54_0(v34)
    let v48 : (struct (string * US23 * string * bool * bool) []) =
        match v42 with
        | US54_0(v43) -> (* Ok *)
            match v43 with
            | US55_0(v44) -> (* Some *)
                v44
            | _ ->
                [||]
        | _ ->
            [||]
    let v49 : string = "$0.to_vec()"
    let v50 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v48 v49 
    let v52 : string = $"%A{v50}"
    let v55 : string = "use_transactions.render (11) / rpc_requests' new_arc_memo / result: " + string v52 + ""
    let v56 : int64 = 200L
    let v57 : string = method8(v56, v55)
    let v58 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v59 : bool = Fable.Core.RustInterop.emitRustExpr v57 v58 
    v50
and closure121 () (v0 : crate_model_near_rpc_TransferDetail) : struct (std_string_String * std_string_String option * float option * std_string_String option) =
    let v1 : string = "$0.deposit"
    let v2 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "$0.args"
    let v4 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v0 v3 
    let v5 : string = "$0.gas"
    let v6 : float option = Fable.Core.RustInterop.emitRustExpr v0 v5 
    let v7 : string = "$0.method_name"
    let v8 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v0 v7 
    struct (v2, v4, v6, v8)
and method151 (v0 : Func0<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>, std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>>) : Func0<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>, std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>> =
    v0
and closure122 (v0 : Func0<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>, std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>>) (v1 : std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>) : std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> =
    let v2 : Func0<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>, std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>> = method151(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method152 (v0 : Func0<crate_model_near_rpc_Receipt, struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)>) : Func0<crate_model_near_rpc_Receipt, struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)> =
    v0
and closure123 (v0 : Func0<crate_model_near_rpc_Receipt, struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)>) (v1 : crate_model_near_rpc_Receipt) : struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) =
    let v2 : Func0<crate_model_near_rpc_Receipt, struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)> = method152(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []), v7 : std_string_String, v8 : (std_string_String []), v9 : (std_string_String []), v10 : std_string_String, v11 : std_string_String, v12 : std_string_String, v13 : std_string_String) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9, v10, v11, v12, v13)
and method153 (v0 : Func0<crate_model_near_rpc_GasProfile, struct (std_string_String * std_string_String * std_string_String)>) : Func0<crate_model_near_rpc_GasProfile, struct (std_string_String * std_string_String * std_string_String)> =
    v0
and closure124 (v0 : Func0<crate_model_near_rpc_GasProfile, struct (std_string_String * std_string_String * std_string_String)>) (v1 : crate_model_near_rpc_GasProfile) : struct (std_string_String * std_string_String * std_string_String) =
    let v2 : Func0<crate_model_near_rpc_GasProfile, struct (std_string_String * std_string_String * std_string_String)> = method153(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : std_string_String, v7 : std_string_String) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7)
and method155 (v0 : Func0<crate_model_near_rpc_Proof, struct (std_string_String * std_string_String)>) : Func0<crate_model_near_rpc_Proof, struct (std_string_String * std_string_String)> =
    v0
and closure126 (v0 : Func0<crate_model_near_rpc_Proof, struct (std_string_String * std_string_String)>) (v1 : crate_model_near_rpc_Proof) : struct (std_string_String * std_string_String) =
    let v2 : Func0<crate_model_near_rpc_Proof, struct (std_string_String * std_string_String)> = method155(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : std_string_String) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6)
and closure125 () (v0 : Vec<crate_model_near_rpc_Proof>) : (struct (std_string_String * std_string_String) []) =
    let v1 : unit = ()
    let v2 : string = $"true; let _func1_from_v1 = Func1::from(move |value| {{ //"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr () v2 
    let v4 : string = $"value"
    let v5 : crate_model_near_rpc_Proof = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = "$0.direction"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : string = "$0.hash"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5 v8 
    let func1_from_result = struct (v7, v9) //
    let v10 : _ = func1_from_result
    let v11 : string = $"true; $0 /*"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr v10 v11 
    let v13 : string = $"*/ }}); //"
    let v14 : bool = Fable.Core.RustInterop.emitRustExpr () v13 
    let v15 : string = $"_func1_from_v1"
    let v16 : Func0<crate_model_near_rpc_Proof, struct (std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v18 : (crate_model_near_rpc_Proof -> struct (std_string_String * std_string_String)) = closure126(v16)
    let v19 : Vec<struct (std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v0, v18) v17 
    let v20 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v21 : (struct (std_string_String * std_string_String) []) = Fable.Core.RustInterop.emitRustExpr v19 v20 
    v21
and method154 () : (Vec<crate_model_near_rpc_Proof> -> (struct (std_string_String * std_string_String) [])) =
    closure125()
and method156 (v0 : Func0<crate_model_near_rpc_ReceiptsOutcome, struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))>) : Func0<crate_model_near_rpc_ReceiptsOutcome, struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))> =
    v0
and closure127 (v0 : Func0<crate_model_near_rpc_ReceiptsOutcome, struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))>) (v1 : crate_model_near_rpc_ReceiptsOutcome) : struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) =
    let v2 : Func0<crate_model_near_rpc_ReceiptsOutcome, struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))> = method156(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : std_string_String, v7 : std_string_String, v8 : uint64, v9 : (std_string_String []), v10 : (struct (std_string_String * std_string_String * std_string_String) []), v11 : uint8, v12 : (std_string_String []), v13 : std_collections_HashMap<std_string_String, std_string_String>, v14 : std_string_String option, v15 : (struct (std_string_String * std_string_String) [])) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15)
and closure120 () (v0 : crate_model_near_rpc_TransactionStatus) : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) =
    let v1 : string = "$0.receipts"
    let v2 : Vec<crate_model_near_rpc_Receipt> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let v7 : crate_model_near_rpc_Receipt = Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : string = "$0.predecessor_id"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v10 : string = "$0.receipt"
    let v11 : crate_model_near_rpc_ReceiptDetail = Fable.Core.RustInterop.emitRustExpr v7 v10 
    let v12 : string = "$0.action"
    let v13 : crate_model_near_rpc_ActionDetail = Fable.Core.RustInterop.emitRustExpr v11 v12 
    let v14 : string = "$0.actions"
    let v15 : Vec<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>> = Fable.Core.RustInterop.emitRustExpr v13 v14 
    let v16 : unit = ()
    let v17 : string = $"true; let _func1_from_v16 = Func1::from(move |value| {{ //"
    let v18 : bool = Fable.Core.RustInterop.emitRustExpr () v17 
    let v19 : string = $"value"
    let v20 : std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail> = Fable.Core.RustInterop.emitRustExpr () v19 
    let v21 : string = "$0.into_iter().map(|(k, v)| (k, $1(v))).collect()"
    let v22 : (crate_model_near_rpc_TransferDetail -> struct (std_string_String * std_string_String option * float option * std_string_String option)) = closure121()
    let v23 : std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr struct (v20, v22) v21 
    let func1_from_result = v23 //
    let v24 : _ = func1_from_result
    let v25 : string = $"true; $0 /*"
    let v26 : bool = Fable.Core.RustInterop.emitRustExpr v24 v25 
    let v27 : string = $"*/ }}); //"
    let v28 : bool = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : string = $"_func1_from_v16"
    let v30 : Func0<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>, std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>> = Fable.Core.RustInterop.emitRustExpr () v29 
    let v31 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v32 : (std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail> -> std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>) = closure122(v30)
    let v33 : Vec<std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>> = Fable.Core.RustInterop.emitRustExpr struct (v15, v32) v31 
    let v34 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v35 : (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) = Fable.Core.RustInterop.emitRustExpr v33 v34 
    let v36 : string = "$0.gas_price"
    let v37 : std_string_String = Fable.Core.RustInterop.emitRustExpr v13 v36 
    let v38 : string = "$0.input_data_ids"
    let v39 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v13 v38 
    let v40 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v41 : (std_string_String []) = Fable.Core.RustInterop.emitRustExpr v39 v40 
    let v42 : string = "$0.output_data_receivers"
    let v43 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v13 v42 
    let v44 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v45 : (std_string_String []) = Fable.Core.RustInterop.emitRustExpr v43 v44 
    let v46 : string = "$0.signer_id"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v13 v46 
    let v48 : string = "$0.signer_public_key"
    let v49 : std_string_String = Fable.Core.RustInterop.emitRustExpr v13 v48 
    let v50 : string = "$0.receipt_id"
    let v51 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v50 
    let v52 : string = "$0.receiver_id"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v52 
    let func1_from_result = struct (v9, v35, v37, v41, v45, v47, v49, v51, v53) //
    let v54 : _ = func1_from_result
    let v55 : string = $"true; $0 /*"
    let v56 : bool = Fable.Core.RustInterop.emitRustExpr v54 v55 
    let v57 : string = $"*/ }}); //"
    let v58 : bool = Fable.Core.RustInterop.emitRustExpr () v57 
    let v59 : string = $"_func1_from_v3"
    let v60 : Func0<crate_model_near_rpc_Receipt, struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v59 
    let v61 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v62 : (crate_model_near_rpc_Receipt -> struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)) = closure123(v60)
    let v63 : Vec<struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v2, v62) v61 
    let v64 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v65 : (struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) = Fable.Core.RustInterop.emitRustExpr v63 v64 
    let v66 : string = "$0.receipts_outcome"
    let v67 : Vec<crate_model_near_rpc_ReceiptsOutcome> = Fable.Core.RustInterop.emitRustExpr v0 v66 
    let v68 : unit = ()
    let v69 : string = $"true; let _func1_from_v68 = Func1::from(move |value| {{ //"
    let v70 : bool = Fable.Core.RustInterop.emitRustExpr () v69 
    let v71 : string = $"value"
    let v72 : crate_model_near_rpc_ReceiptsOutcome = Fable.Core.RustInterop.emitRustExpr () v71 
    let v73 : string = "$0.block_hash"
    let v74 : std_string_String = Fable.Core.RustInterop.emitRustExpr v72 v73 
    let v75 : string = "$0.id"
    let v76 : std_string_String = Fable.Core.RustInterop.emitRustExpr v72 v75 
    let v77 : string = "$0.outcome"
    let v78 : crate_model_near_rpc_OutcomeDetail = Fable.Core.RustInterop.emitRustExpr v72 v77 
    let v79 : string = "$0.executor_id"
    let v80 : std_string_String = Fable.Core.RustInterop.emitRustExpr v78 v79 
    let v81 : string = "$0.gas_burnt"
    let v82 : uint64 = Fable.Core.RustInterop.emitRustExpr v78 v81 
    let v83 : string = "$0.logs"
    let v84 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v78 v83 
    let v85 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v86 : (std_string_String []) = Fable.Core.RustInterop.emitRustExpr v84 v85 
    let v87 : string = "$0.metadata"
    let v88 : crate_model_near_rpc_Metadata = Fable.Core.RustInterop.emitRustExpr v78 v87 
    let v89 : string = "$0.gas_profile"
    let v90 : Vec<crate_model_near_rpc_GasProfile> = Fable.Core.RustInterop.emitRustExpr v88 v89 
    let v91 : unit = ()
    let v92 : string = $"true; let _func1_from_v91 = Func1::from(move |value| {{ //"
    let v93 : bool = Fable.Core.RustInterop.emitRustExpr () v92 
    let v94 : string = $"value"
    let v95 : crate_model_near_rpc_GasProfile = Fable.Core.RustInterop.emitRustExpr () v94 
    let v96 : string = "$0.cost"
    let v97 : std_string_String = Fable.Core.RustInterop.emitRustExpr v95 v96 
    let v98 : string = "$0.cost_category"
    let v99 : std_string_String = Fable.Core.RustInterop.emitRustExpr v95 v98 
    let v100 : string = "$0.gas_used"
    let v101 : std_string_String = Fable.Core.RustInterop.emitRustExpr v95 v100 
    let func1_from_result = struct (v97, v99, v101) //
    let v102 : _ = func1_from_result
    let v103 : string = $"true; $0 /*"
    let v104 : bool = Fable.Core.RustInterop.emitRustExpr v102 v103 
    let v105 : string = $"*/ }}); //"
    let v106 : bool = Fable.Core.RustInterop.emitRustExpr () v105 
    let v107 : string = $"_func1_from_v91"
    let v108 : Func0<crate_model_near_rpc_GasProfile, struct (std_string_String * std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v107 
    let v109 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v110 : (crate_model_near_rpc_GasProfile -> struct (std_string_String * std_string_String * std_string_String)) = closure124(v108)
    let v111 : Vec<struct (std_string_String * std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v90, v110) v109 
    let v112 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v113 : (struct (std_string_String * std_string_String * std_string_String) []) = Fable.Core.RustInterop.emitRustExpr v111 v112 
    let v114 : string = "$0.version"
    let v115 : uint8 = Fable.Core.RustInterop.emitRustExpr v88 v114 
    let v116 : string = "$0.receipt_ids"
    let v117 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v78 v116 
    let v118 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v119 : (std_string_String []) = Fable.Core.RustInterop.emitRustExpr v117 v118 
    let v120 : string = "$0.status"
    let v121 : std_collections_HashMap<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr v78 v120 
    let v122 : string = "$0.tokens_burnt"
    let v123 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v78 v122 
    let v124 : string = "$0.proof"
    let v125 : Vec<crate_model_near_rpc_Proof> option = Fable.Core.RustInterop.emitRustExpr v72 v124 
    let v128 : (Vec<crate_model_near_rpc_Proof> -> (struct (std_string_String * std_string_String) [])) = method154()
    let v129 : (struct (std_string_String * std_string_String) []) option = v125 |> Option.map v128 
    let v167 : (struct (std_string_String * std_string_String) []) = [||]
    let v169 : (struct (std_string_String * std_string_String) []) = v129 |> Option.defaultValue v167 
    let func1_from_result = struct (v74, v76, v80, v82, v86, v113, v115, v119, v121, v123, v169) //
    let v172 : _ = func1_from_result
    let v173 : string = $"true; $0 /*"
    let v174 : bool = Fable.Core.RustInterop.emitRustExpr v172 v173 
    let v175 : string = $"*/ }}); //"
    let v176 : bool = Fable.Core.RustInterop.emitRustExpr () v175 
    let v177 : string = $"_func1_from_v68"
    let v178 : Func0<crate_model_near_rpc_ReceiptsOutcome, struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))> = Fable.Core.RustInterop.emitRustExpr () v177 
    let v179 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v180 : (crate_model_near_rpc_ReceiptsOutcome -> struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))) = closure127(v178)
    let v181 : Vec<struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))> = Fable.Core.RustInterop.emitRustExpr struct (v67, v180) v179 
    let v182 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v183 : (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) []) = Fable.Core.RustInterop.emitRustExpr v181 v182 
    struct (v65, v183)
and method150 () : (crate_model_near_rpc_TransactionStatus -> struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) []))) =
    closure120()
and closure129 () (v0 : crate_model_near_rpc_ErrorCauseInfo) : struct (std_string_String option * std_string_String option) =
    let v1 : string = "$0.error_message"
    let v2 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "$0.requested_transaction_hash"
    let v4 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v0 v3 
    struct (v2, v4)
and method158 () : (crate_model_near_rpc_ErrorCauseInfo -> struct (std_string_String option * std_string_String option)) =
    closure129()
and closure128 () (v0 : crate_model_near_rpc_RpcError) : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) =
    let v1 : string = "$0.name"
    let v2 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "$0.cause"
    let v4 : crate_model_near_rpc_ErrorCause = Fable.Core.RustInterop.emitRustExpr v0 v3 
    let v5 : string = "$0.name"
    let v6 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : string = "$0.info"
    let v8 : crate_model_near_rpc_ErrorCauseInfo option = Fable.Core.RustInterop.emitRustExpr v4 v7 
    let v11 : (crate_model_near_rpc_ErrorCauseInfo -> struct (std_string_String option * std_string_String option)) = method158()
    let v12 : struct (std_string_String option * std_string_String option) option = v8 |> Option.map v11 
    let v33 : string = "$0.code"
    let v34 : int32 = Fable.Core.RustInterop.emitRustExpr v0 v33 
    let v35 : string = "$0.message"
    let v36 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v35 
    let v37 : string = "$0.data"
    let v38 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v37 
    struct (v2, v6, v12, v34, v36, v38)
and method157 () : (crate_model_near_rpc_RpcError -> struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String)) =
    closure128()
and closure119 () (v0 : crate_model_near_rpc_RpcResponse) : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) =
    let v1 : string = "$0.jsonrpc"
    let v2 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "$0.result"
    let v4 : crate_model_near_rpc_TransactionStatus option = Fable.Core.RustInterop.emitRustExpr v0 v3 
    let v7 : (crate_model_near_rpc_TransactionStatus -> struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) []))) = method150()
    let v8 : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option = v4 |> Option.map v7 
    let v208 : string = "$0.error"
    let v209 : crate_model_near_rpc_RpcError option = Fable.Core.RustInterop.emitRustExpr v0 v208 
    let v212 : (crate_model_near_rpc_RpcError -> struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String)) = method157()
    let v213 : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option = v209 |> Option.map v212 
    let v268 : string = "$0.id"
    let v269 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v0 v268 
    struct (v2, v8, v213, v269)
and closure133 () (v0 : crate_model_near_rpc_RpcResponse) : crate_model_near_rpc_RpcResponse option =
    let v2 : crate_model_near_rpc_RpcResponse option = Some v0 
    v2
and method161 () : (crate_model_near_rpc_RpcResponse -> crate_model_near_rpc_RpcResponse option) =
    closure133()
and method162 (v0 : Result<crate_model_near_rpc_RpcResponse, std_string_String>) : Result<crate_model_near_rpc_RpcResponse, std_string_String> =
    v0
and closure132 (v0 : US35, v1 : US41, v2 : int32) struct (v3 : string, v4 : US23, v5 : string, v6 : bool, v7 : bool) : Result<crate_model_near_rpc_RpcResponse option, std_string_String> =
    let v62 : US29 =
        match v0 with
        | US35_1 -> (* None *)
            US29_1
        | US35_0(v8) -> (* Some *)
            let v58 : US30 =
                match v8 with
                | US36_1(v55) -> (* Error *)
                    US30_1(v55)
                | US36_0(v9) -> (* Ok *)
                    let v10 : US25 option = v9 |> Array.tryItem v2 
                    let v13 : (US25 -> US32) = method87()
                    let v14 : US32 option = v10 |> Option.map v13 
                    let v34 : US32 = US32_1
                    let v35 : US32 = v14 |> Option.defaultValue v34 
                    let v45 : US25 =
                        match v35 with
                        | US32_0(v39) -> (* Some *)
                            match v39 with
                            | US25_0(v40) -> (* Some *)
                                US25_0(v40)
                            | _ ->
                                US25_1
                        | _ ->
                            US25_1
                    let v53 : US31 =
                        match v45 with
                        | US25_1 -> (* None *)
                            US31_1
                        | US25_0(v46) -> (* Some *)
                            let v47 : std_string_String = v46.l0
                            let v48 : string = "fable_library_rust::String_::fromString($0)"
                            let v49 : string = Fable.Core.RustInterop.emitRustExpr v47 v48 
                            US31_0(v49)
                    US30_0(v53)
            US29_0(v58)
    let v64 : string = $"%A{struct (v3, v4, v5, v6, v7)}"
    let v67 : int64 = 400L
    let v68 : string = method8(v67, v64)
    let v70 : string = $"%A{v62}"
    let v73 : int64 = 400L
    let v74 : string = method8(v73, v70)
    let v75 : string = "state_core.use_request (15) / result memo / request: " + string v68 + " / state_data: " + string v74 + ""
    let v76 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v77 : bool = Fable.Core.RustInterop.emitRustExpr v75 v76 
    let v79 : string = $"%A{v1}"
    let v82 : int64 = 400L
    let v83 : string = method8(v82, v79)
    let v84 : string = "state_core.use_request (16) / effect / json: " + string v83 + ""
    let v85 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v86 : bool = Fable.Core.RustInterop.emitRustExpr v84 v85 
    let v129 : US31 =
        match v1 with
        | US41_1(v126) -> (* Error *)
            US31_1
        | US41_0(v87) -> (* Ok *)
            let v88 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
            let v89 : (US31 []) = Fable.Core.RustInterop.emitRustExpr v87 v88 
            let v90 : US31 option = v89 |> Array.tryItem v2 
            let v93 : (US31 -> US42) = method108()
            let v94 : US42 option = v90 |> Option.map v93 
            let v114 : US42 = US42_1
            let v115 : US42 = v94 |> Option.defaultValue v114 
            match v115 with
            | US42_0(v119) -> (* Some *)
                match v119 with
                | US31_0(v120) -> (* Some *)
                    US31_0(v120)
                | _ ->
                    US31_1
            | _ ->
                US31_1
    match v129 with
    | US31_0(v130) -> (* Some *)
        let v131 : string = method41(v130)
        (* run_target_args'
        let v136 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v137 : string = "&*$0"
        let v138 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v131 v137 
        let _run_target_args'_v136 = v138 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v139 : string = "&*$0"
        let v140 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v131 v139 
        let _run_target_args'_v136 = v140 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v141 : string = "&*$0"
        let v142 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v131 v141 
        let _run_target_args'_v136 = v142 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v144 : Ref<Str> = v131 |> unbox<Ref<Str>>
        let _run_target_args'_v136 = v144 
        #endif
#if FABLE_COMPILER_PYTHON
        let v148 : Ref<Str> = v131 |> unbox<Ref<Str>>
        let _run_target_args'_v136 = v148 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v152 : Ref<Str> = v131 |> unbox<Ref<Str>>
        let _run_target_args'_v136 = v152 
        #endif
#else
        let v156 : Ref<Str> = v131 |> unbox<Ref<Str>>
        let _run_target_args'_v136 = v156 
        #endif
        let v159 : Ref<Str> = _run_target_args'_v136 
        let v168 : string = "serde_json::from_str(&$0)"
        let v169 : Result<crate_model_near_rpc_RpcResponse, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v159 v168 
        let v170 : (serde_json_Error -> std_string_String) = method42()
        (* run_target_args'
        let v172 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v173 : string = "$0.map_err(|x| $1(x))"
        let v174 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v169, v170) v173 
        let _run_target_args'_v172 = v174 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v175 : string = "$0.map_err(|x| $1(x))"
        let v176 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v169, v170) v175 
        let _run_target_args'_v172 = v176 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v177 : string = "$0.map_err(|x| $1(x))"
        let v178 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v169, v170) v177 
        let _run_target_args'_v172 = v178 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v179 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v169 with Ok x -> Ok x | Error x -> Error (v170 x)
        let _run_target_args'_v172 = v179 
        #endif
#if FABLE_COMPILER_PYTHON
        let v180 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v169 with Ok x -> Ok x | Error x -> Error (v170 x)
        let _run_target_args'_v172 = v180 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v181 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v169 with Ok x -> Ok x | Error x -> Error (v170 x)
        let _run_target_args'_v172 = v181 
        #endif
#else
        let v182 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v169 with Ok x -> Ok x | Error x -> Error (v170 x)
        let _run_target_args'_v172 = v182 
        #endif
        let v183 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = _run_target_args'_v172 
        let v186 : (crate_model_near_rpc_RpcResponse -> crate_model_near_rpc_RpcResponse option) = method161()
        let v187 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = method162(v183)
        let v188 : string = "v187.map(|x| v186(x))"
        let v189 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v188 
        v189
    | _ ->
        match v62 with
        | US29_0(v190) -> (* Some *)
            match v190 with
            | US30_0(v191) -> (* Ok *)
                match v191 with
                | US31_0(v192) -> (* Some *)
                    let v193 : string = method41(v192)
                    (* run_target_args'
                    let v198 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v199 : string = "&*$0"
                    let v200 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v193 v199 
                    let _run_target_args'_v198 = v200 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v201 : string = "&*$0"
                    let v202 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v193 v201 
                    let _run_target_args'_v198 = v202 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v203 : string = "&*$0"
                    let v204 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v193 v203 
                    let _run_target_args'_v198 = v204 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v206 : Ref<Str> = v193 |> unbox<Ref<Str>>
                    let _run_target_args'_v198 = v206 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v210 : Ref<Str> = v193 |> unbox<Ref<Str>>
                    let _run_target_args'_v198 = v210 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v214 : Ref<Str> = v193 |> unbox<Ref<Str>>
                    let _run_target_args'_v198 = v214 
                    #endif
#else
                    let v218 : Ref<Str> = v193 |> unbox<Ref<Str>>
                    let _run_target_args'_v198 = v218 
                    #endif
                    let v221 : Ref<Str> = _run_target_args'_v198 
                    let v230 : string = "serde_json::from_str(&$0)"
                    let v231 : Result<crate_model_near_rpc_RpcResponse, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v221 v230 
                    let v232 : (serde_json_Error -> std_string_String) = method42()
                    (* run_target_args'
                    let v234 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v235 : string = "$0.map_err(|x| $1(x))"
                    let v236 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v231, v232) v235 
                    let _run_target_args'_v234 = v236 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v237 : string = "$0.map_err(|x| $1(x))"
                    let v238 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v231, v232) v237 
                    let _run_target_args'_v234 = v238 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v239 : string = "$0.map_err(|x| $1(x))"
                    let v240 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v231, v232) v239 
                    let _run_target_args'_v234 = v240 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v241 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v231 with Ok x -> Ok x | Error x -> Error (v232 x)
                    let _run_target_args'_v234 = v241 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v242 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v231 with Ok x -> Ok x | Error x -> Error (v232 x)
                    let _run_target_args'_v234 = v242 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v243 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v231 with Ok x -> Ok x | Error x -> Error (v232 x)
                    let _run_target_args'_v234 = v243 
                    #endif
#else
                    let v244 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v231 with Ok x -> Ok x | Error x -> Error (v232 x)
                    let _run_target_args'_v234 = v244 
                    #endif
                    let v245 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = _run_target_args'_v234 
                    let v248 : (crate_model_near_rpc_RpcResponse -> crate_model_near_rpc_RpcResponse option) = method161()
                    let v249 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = method162(v245)
                    let v250 : string = "v249.map(|x| v248(x))"
                    let v251 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v250 
                    v251
                | _ ->
                    let v253 : string = $"%A{struct (v129, v62)}"
                    let v256 : string = "state_core.use_request (17) / json Error / value: " + string v253 + ""
                    let v257 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                    let v258 : bool = Fable.Core.RustInterop.emitRustExpr v256 v257 
                    let v260 : crate_model_near_rpc_RpcResponse option = None
                    let v264 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Ok v260 
                    v264
            | _ ->
                let v269 : string = $"%A{struct (v129, v62)}"
                let v272 : string = "state_core.use_request (17) / json Error / value: " + string v269 + ""
                let v273 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v274 : bool = Fable.Core.RustInterop.emitRustExpr v272 v273 
                let v276 : crate_model_near_rpc_RpcResponse option = None
                let v280 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Ok v276 
                v280
        | _ ->
            let v285 : string = $"%A{struct (v129, v62)}"
            let v288 : string = "state_core.use_request (17) / json Error / value: " + string v285 + ""
            let v289 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v290 : bool = Fable.Core.RustInterop.emitRustExpr v288 v289 
            let v292 : crate_model_near_rpc_RpcResponse option = None
            let v296 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Ok v292 
            v296
and closure131 (v0 : US35, v1 : US41) (v2 : int32) : (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_rpc_RpcResponse option, std_string_String>) =
    closure132(v0, v1, v2)
and method160 (v0 : US35, v1 : US41) : (int32 -> (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_rpc_RpcResponse option, std_string_String>)) =
    closure131(v0, v1)
and closure130 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>, v1 : leptos_prelude_ArcMemo<Result<Vec<Heap4 option>, std_string_String> option>, v2 : leptos_prelude_ArcLocalResource<Result<Vec<string option>, std_string_String>>, v3 : leptos_prelude_Action<Heap4, Result<Vec<unit>, std_string_String>>) () : (Result<crate_model_near_rpc_RpcResponse option, std_string_String> []) =
    let v4 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v5 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v4 
    let v7 : string = $"%A{v5}"
    let v10 : string = "state_core.use_requests (13) / result memo / requests: " + string v7 + ""
    let v11 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr v10 v11 
    let v13 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v14 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v1 v13 
    let v17 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v18 : US26 option = v14 |> Option.map v17 
    let v38 : US26 = US26_1
    let v39 : US26 = v18 |> Option.defaultValue v38 
    let v97 : US35 =
        match v39 with
        | US26_1 -> (* None *)
            US35_1
        | US26_0(v43) -> (* Some *)
            let v44 : (Vec<Heap4 option> -> US24) = method83()
            let v45 : (std_string_String -> US24) = method84()
            let v47 : US24 = match v43 with Ok x -> v44 x | Error x -> v45 x
            let v93 : US36 =
                match v47 with
                | US24_1(v90) -> (* Error *)
                    US36_1(v90)
                | US24_0(v50) -> (* Ok *)
                    let v51 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v52 : bool = Fable.Core.RustInterop.emitRustExpr v50 v51 
                    let v53 : string = "x"
                    let v54 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v53 
                    let v57 : (Heap4 -> US25) = method85()
                    let v58 : US25 option = v54 |> Option.map v57 
                    let v78 : US25 = US25_1
                    let v79 : US25 = v58 |> Option.defaultValue v78 
                    let v83 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v84 : bool = Fable.Core.RustInterop.emitRustExpr v79 v83 
                    let v85 : string = "_vec_map"
                    let v86 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v85 
                    let v87 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v88 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v86 v87 
                    US36_0(v88)
            US35_0(v93)
    let v99 : string = $"%A{v97}"
    let v102 : int64 = 400L
    let v103 : string = method8(v102, v99)
    let v104 : string = "state_core.use_request (14) / result_memo / state_data: " + string v103 + ""
    let v105 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v106 : bool = Fable.Core.RustInterop.emitRustExpr v104 v105 
    let v107 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v108 : Result<Vec<string option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v2 v107 
    let v111 : (Result<Vec<string option>, std_string_String> -> US37) = method103()
    let v112 : US37 option = v108 |> Option.map v111 
    let v132 : US37 = US37_1
    let v133 : US37 = v112 |> Option.defaultValue v132 
    let v147 : US38 =
        match v133 with
        | US37_1 -> (* None *)
            US38_1
        | US37_0(v137) -> (* Some *)
            let v138 : (Vec<string option> -> US39) = method104()
            let v139 : (std_string_String -> US39) = method105()
            let v141 : US39 = match v137 with Ok x -> v138 x | Error x -> v139 x
            US38_0(v141)
    let v194 : US40 =
        match v147 with
        | US38_1 -> (* None *)
            US40_1
        | US38_0(v148) -> (* Some *)
            let v190 : US41 =
                match v148 with
                | US39_1(v187) -> (* Error *)
                    US41_1(v187)
                | US39_0(v149) -> (* Ok *)
                    let v150 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v151 : bool = Fable.Core.RustInterop.emitRustExpr v149 v150 
                    let v152 : string = "x"
                    let v153 : string option = Fable.Core.RustInterop.emitRustExpr () v152 
                    let v156 : (string -> US31) = method106()
                    let v157 : US31 option = v153 |> Option.map v156 
                    let v177 : US31 = US31_1
                    let v178 : US31 = v157 |> Option.defaultValue v177 
                    let v182 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v183 : bool = Fable.Core.RustInterop.emitRustExpr v178 v182 
                    let v184 : string = "_vec_map"
                    let v185 : Vec<US31> = Fable.Core.RustInterop.emitRustExpr () v184 
                    US41_0(v185)
            US40_0(v190)
    let v195 : (US31 []) = [||]
    let v196 : string = "$0.to_vec()"
    let v197 : Vec<US31> = Fable.Core.RustInterop.emitRustExpr v195 v196 
    let v201 : US41 =
        match v194 with
        | US40_1 -> (* None *)
            US41_0(v197)
        | US40_0(v198) -> (* Some *)
            v198
    let v290 : bool =
        match v201 with
        | US41_1(v288) -> (* Error *)
            false
        | US41_0(v202) -> (* Ok *)
            let v203 : string = "true; $0.into_iter().for_each(|x| { //"
            let v204 : bool = Fable.Core.RustInterop.emitRustExpr v202 v203 
            let v205 : string = "x"
            let v206 : US31 = Fable.Core.RustInterop.emitRustExpr () v205 
            let v283 : bool =
                match v206 with
                | US31_0(v207) -> (* Some *)
                    (* run_target_args'
                    let v212 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v213 : string = "&*$0"
                    let v214 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v207 v213 
                    let _run_target_args'_v212 = v214 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v215 : string = "&*$0"
                    let v216 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v207 v215 
                    let _run_target_args'_v212 = v216 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v217 : string = "&*$0"
                    let v218 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v207 v217 
                    let _run_target_args'_v212 = v218 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v220 : Ref<Str> = v207 |> unbox<Ref<Str>>
                    let _run_target_args'_v212 = v220 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v224 : Ref<Str> = v207 |> unbox<Ref<Str>>
                    let _run_target_args'_v212 = v224 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v228 : Ref<Str> = v207 |> unbox<Ref<Str>>
                    let _run_target_args'_v212 = v228 
                    #endif
#else
                    let v232 : Ref<Str> = v207 |> unbox<Ref<Str>>
                    let _run_target_args'_v212 = v232 
                    #endif
                    let v235 : Ref<Str> = _run_target_args'_v212 
                    (* run_target_args'
                    let v248 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v249 : string = "String::from($0)"
                    let v250 : std_string_String = Fable.Core.RustInterop.emitRustExpr v235 v249 
                    let _run_target_args'_v248 = v250 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v251 : string = "String::from($0)"
                    let v252 : std_string_String = Fable.Core.RustInterop.emitRustExpr v235 v251 
                    let _run_target_args'_v248 = v252 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v253 : string = "String::from($0)"
                    let v254 : std_string_String = Fable.Core.RustInterop.emitRustExpr v235 v253 
                    let _run_target_args'_v248 = v254 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v256 : std_string_String = v235 |> unbox<std_string_String>
                    let _run_target_args'_v248 = v256 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v260 : std_string_String = v235 |> unbox<std_string_String>
                    let _run_target_args'_v248 = v260 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v264 : std_string_String = v235 |> unbox<std_string_String>
                    let _run_target_args'_v248 = v264 
                    #endif
#else
                    let v268 : std_string_String = v235 |> unbox<std_string_String>
                    let _run_target_args'_v248 = v268 
                    #endif
                    let v271 : std_string_String = _run_target_args'_v248 
                    let v280 : Heap4 = {l0 = v271} : Heap4
                    let v281 : string = "true; leptos::prelude::Action::dispatch(&$0, $1.clone())"
                    let v282 : bool = Fable.Core.RustInterop.emitRustExpr struct (v3, v280) v281 
                    true
                | _ ->
                    false
            let v284 : string = $"true"
            let v285 : bool = Fable.Core.RustInterop.emitRustExpr () v284 
            let v286 : string = "true; }); //"
            let v287 : bool = Fable.Core.RustInterop.emitRustExpr () v286 
            false
    let v291 : (int32 -> (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_rpc_RpcResponse option, std_string_String>)) = method160(v97, v201)
    let v292 : Vec<struct (string * US23 * string * bool * bool)> = method96(v5)
    let v293 : string = "v292.iter().enumerate().map(|(i, x)| v291(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v294 : Vec<Result<crate_model_near_rpc_RpcResponse option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v293 
    let v295 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v296 : (Result<crate_model_near_rpc_RpcResponse option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v294 v295 
    let v298 : string = $"%A{v296}"
    let v301 : string = "state_core.use_requests (18) / result_func func0 / result: " + string v298 + ""
    let v302 : int64 = 200L
    let v303 : string = method8(v302, v301)
    let v304 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v305 : bool = Fable.Core.RustInterop.emitRustExpr v303 v304 
    v296
and method164 (v0 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option))) : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option)) =
    v0
and closure135 (v0 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option))) (v1 : crate_model_near_rpc_RpcResponse option) : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option =
    let v3 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option)) = method164(v0)
    let v4 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option = v1 |> Option.map v3 
    v4
and method163 (v0 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option))) : (crate_model_near_rpc_RpcResponse option -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option) =
    closure135(v0)
and method165 (v0 : Result<crate_model_near_rpc_RpcResponse option, std_string_String>) : Result<crate_model_near_rpc_RpcResponse option, std_string_String> =
    v0
and method166 (v0 : Func0<Result<crate_model_near_rpc_RpcResponse option, std_string_String>, Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>) : Func0<Result<crate_model_near_rpc_RpcResponse option, std_string_String>, Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> =
    v0
and closure136 (v0 : Func0<Result<crate_model_near_rpc_RpcResponse option, std_string_String>, Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>) (v1 : Result<crate_model_near_rpc_RpcResponse option, std_string_String>) : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> =
    let v2 : Func0<Result<crate_model_near_rpc_RpcResponse option, std_string_String>, Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> = method166(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure134 (v0 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option)), v1 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>>, v2 : leptos_prelude_ArcLocalResource<Result<Vec<Heap4 option>, std_string_String>>, v3 : leptos_prelude_ArcMemo<(Result<crate_model_near_rpc_RpcResponse option, std_string_String> [])>) () : Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> =
    let v4 : string = $"leptos::prelude::Submission::pending(&$0.into()).into()"
    let v5 : leptos_prelude_ArcSignal<bool> = Fable.Core.RustInterop.emitRustExpr v1 v4 
    let v6 : string = $"leptos::prelude::ArcSignal::get(&$0)"
    let v7 : bool = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : string = $"leptos::prelude::Submission::pending(&$0.into()).into()"
    let v9 : leptos_prelude_ArcSignal<bool> = Fable.Core.RustInterop.emitRustExpr v2 v8 
    let v10 : string = $"leptos::prelude::ArcSignal::get(&$0)"
    let v11 : bool = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v13 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v1 v12 
    let v16 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v17 : US2 option = v13 |> Option.map v16 
    let v37 : US2 = US2_1
    let v38 : US2 = v17 |> Option.defaultValue v37 
    let v42 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v43 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v2 v42 
    let v46 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v47 : US26 option = v43 |> Option.map v46 
    let v67 : US26 = US26_1
    let v68 : US26 = v47 |> Option.defaultValue v67 
    let v126 : US35 =
        match v68 with
        | US26_1 -> (* None *)
            US35_1
        | US26_0(v72) -> (* Some *)
            let v73 : (Vec<Heap4 option> -> US24) = method83()
            let v74 : (std_string_String -> US24) = method84()
            let v76 : US24 = match v72 with Ok x -> v73 x | Error x -> v74 x
            let v122 : US36 =
                match v76 with
                | US24_1(v119) -> (* Error *)
                    US36_1(v119)
                | US24_0(v79) -> (* Ok *)
                    let v80 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v81 : bool = Fable.Core.RustInterop.emitRustExpr v79 v80 
                    let v82 : string = "x"
                    let v83 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v82 
                    let v86 : (Heap4 -> US25) = method85()
                    let v87 : US25 option = v83 |> Option.map v86 
                    let v107 : US25 = US25_1
                    let v108 : US25 = v87 |> Option.defaultValue v107 
                    let v112 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v113 : bool = Fable.Core.RustInterop.emitRustExpr v108 v112 
                    let v114 : string = "_vec_map"
                    let v115 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v114 
                    let v116 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v117 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v115 v116 
                    US36_0(v117)
            US35_0(v122)
    let v128 : string = $"%A{v38}"
    let v131 : int64 = 400L
    let v132 : string = method8(v131, v128)
    let v134 : string = $"%A{v126}"
    let v137 : int64 = 400L
    let v138 : string = method8(v137, v134)
    let v139 : string = "state_core.use_request (19) / result move / database: " + string v132 + " / database_loading: " + string v7 + " / state_data: " + string v138 + " / state_data_loading: " + string v11 + ""
    let v140 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v141 : bool = Fable.Core.RustInterop.emitRustExpr v139 v140 
    let v142 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v143 : (Result<crate_model_near_rpc_RpcResponse option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v3 v142 
    let v144 : string = "$0.to_vec()"
    let v145 : Vec<Result<crate_model_near_rpc_RpcResponse option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v143 v144 
    let v146 : unit = ()
    let v147 : string = $"true; let _func1_from_v146 = Func1::from(move |value| {{ //"
    let v148 : bool = Fable.Core.RustInterop.emitRustExpr () v147 
    let v149 : string = $"value"
    let v150 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v149 
    let v151 : (crate_model_near_rpc_RpcResponse option -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option) = method163(v0)
    let v152 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = method165(v150)
    let v153 : string = "v152.map(|x| v151(x))"
    let v154 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v153 
    let func1_from_result = v154 //
    let v155 : _ = func1_from_result
    let v156 : string = $"true; $0 /*"
    let v157 : bool = Fable.Core.RustInterop.emitRustExpr v155 v156 
    let v158 : string = $"*/ }}); //"
    let v159 : bool = Fable.Core.RustInterop.emitRustExpr () v158 
    let v160 : string = $"_func1_from_v146"
    let v161 : Func0<Result<crate_model_near_rpc_RpcResponse option, std_string_String>, Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v160 
    let v162 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v163 : (Result<crate_model_near_rpc_RpcResponse option, std_string_String> -> Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>) = closure136(v161)
    let v164 : Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr struct (v145, v163) v162 
    let v166 : string = $"%A{v164}"
    let v169 : string = "state_core.use_requests (20) / result func0 / result: " + string v166 + ""
    let v170 : int64 = 200L
    let v171 : string = method8(v170, v169)
    let v172 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v173 : bool = Fable.Core.RustInterop.emitRustExpr v171 v172 
    v164
and method159 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>, v1 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option))) : leptos_prelude_ArcMemo<Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>> =
    let v2 : string = "state_core.use_requests (1)"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = "state_core.use_database (1)"
    let v6 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v7 : bool = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : unit = ()
    let v9 : string = $"true; let _func0_from_v8 = Func0::from(move || {{ //"
    let v10 : bool = Fable.Core.RustInterop.emitRustExpr () v9 
    let v11 : string = "true; let __future_init = Box::pin(/*"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr () v11 
    let v13 : string = "*/ async move { /*"
    let v14 : bool = Fable.Core.RustInterop.emitRustExpr () v13 
    let v15 : string = "*/ ()"
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = "state_core.use_database (2) / database new_local_resource"
    let v18 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v19 : bool = Fable.Core.RustInterop.emitRustExpr v17 v18 
    let v20 : string = "state_core.build_database ()"
    let v21 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : string = "true; let __future_init = Box::pin(/*"
    let v24 : bool = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : string = "*/ async { /*"
    let v26 : bool = Fable.Core.RustInterop.emitRustExpr () v25 
    let v27 : string = "*/ ()"
    let v28 : bool = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : string = "Box::pin(rexie::Rexie::builder(\"database\").version(1).add_object_store(rexie::ObjectStore::new(\"store\")).build())"
    let v30 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v29 
    let v31 : string = "v30.await"
    let v32 : Result<rexie_Rexie, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v31 
    let v33 : (rexie_Error -> std_string_String) = method6()
    (* run_target_args'
    let v35 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v36 : string = "$0.map_err(|x| $1(x))"
    let v37 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v36 
    let _run_target_args'_v35 = v37 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v38 : string = "$0.map_err(|x| $1(x))"
    let v39 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v38 
    let _run_target_args'_v35 = v39 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v40 : string = "$0.map_err(|x| $1(x))"
    let v41 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v40 
    let _run_target_args'_v35 = v41 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v42 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v42 
    #endif
#if FABLE_COMPILER_PYTHON
    let v43 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v43 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v44 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v44 
    #endif
#else
    let v45 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v45 
    #endif
    let v46 : Result<rexie_Rexie, std_string_String> = _run_target_args'_v35 
    let v49 : string = ""
    let v50 : string = "}"
    let v51 : string = v49 + v50 
    let x = v46 //
    let v52 : _ = x
    let v53 : unit = ()
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = $"true; let _fix_closure_v53 = $0"
    let v56 : bool = Fable.Core.RustInterop.emitRustExpr v52 v55 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = $"true; let _fix_closure_v53 = $0"
    let v58 : bool = Fable.Core.RustInterop.emitRustExpr v52 v57 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = $"true; let _fix_closure_v53 = $0"
    let v60 : bool = Fable.Core.RustInterop.emitRustExpr v52 v59 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v54 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v54 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v54 = false 
    #endif
#else
    let _run_target_args'_v54 = false 
    #endif
    let v61 : bool = _run_target_args'_v54 
    let v62 : string = $"true; _fix_closure_v53 " + v51 + "); " + v49 + " // rust.fix_closure'"
    let v63 : bool = Fable.Core.RustInterop.emitRustExpr () v62 
    let v64 : string = "__future_init"
    let v65 : _ = Fable.Core.RustInterop.emitRustExpr () v64 
    let v66 : string = "v65"
    let v67 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v66 
    let v68 : string = "v67.await"
    let v69 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v68 
    (* run_target_args'
    let v71 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v72 : string = "$0.unwrap()"
    let v73 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v69 v72 
    let _run_target_args'_v71 = v73 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v74 : string = "$0.unwrap()"
    let v75 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v69 v74 
    let _run_target_args'_v71 = v75 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v76 : string = "$0.unwrap()"
    let v77 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v69 v76 
    let _run_target_args'_v71 = v77 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v78 : rexie_Rexie = match v69 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v71 = v78 
    #endif
#if FABLE_COMPILER_PYTHON
    let v79 : rexie_Rexie = match v69 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v71 = v79 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v80 : rexie_Rexie = match v69 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v71 = v80 
    #endif
#else
    let v81 : rexie_Rexie = match v69 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v71 = v81 
    #endif
    let v82 : rexie_Rexie = _run_target_args'_v71 
    let v85 : (rexie_Rexie -> rexie_Rexie) = method7()
    let v86 : rexie_Rexie = v85 v82
    let v87 : string = "std::sync::Arc::new(v86)"
    let v88 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v87 
    let v90 : string = $"%A{v88}"
    let v93 : string = "state_core.use_database (3) / database new_local_resource / result: " + string v90 + ""
    let v94 : int64 = 200L
    let v95 : string = method8(v94, v93)
    let v96 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v97 : bool = Fable.Core.RustInterop.emitRustExpr v95 v96 
    let v98 : string = v49 + v50 
    let x = v88 //
    let v99 : _ = x
    let v100 : unit = ()
    (* run_target_args'
    let v101 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v102 : string = $"true; let _fix_closure_v100 = $0"
    let v103 : bool = Fable.Core.RustInterop.emitRustExpr v99 v102 
    let _run_target_args'_v101 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v104 : string = $"true; let _fix_closure_v100 = $0"
    let v105 : bool = Fable.Core.RustInterop.emitRustExpr v99 v104 
    let _run_target_args'_v101 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v106 : string = $"true; let _fix_closure_v100 = $0"
    let v107 : bool = Fable.Core.RustInterop.emitRustExpr v99 v106 
    let _run_target_args'_v101 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v101 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v101 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v101 = false 
    #endif
#else
    let _run_target_args'_v101 = false 
    #endif
    let v108 : bool = _run_target_args'_v101 
    let v109 : string = $"true; _fix_closure_v100 " + v98 + "); " + v49 + " // rust.fix_closure'"
    let v110 : bool = Fable.Core.RustInterop.emitRustExpr () v109 
    let v111 : string = "__future_init"
    let v112 : _ = Fable.Core.RustInterop.emitRustExpr () v111 
    let v113 : string = "v112"
    let v114 : std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>> = Fable.Core.RustInterop.emitRustExpr () v113 
    let v115 : string = $"true; $0 /*"
    let v116 : bool = Fable.Core.RustInterop.emitRustExpr v114 v115 
    let v117 : string = $"*/ }}); //"
    let v118 : bool = Fable.Core.RustInterop.emitRustExpr () v117 
    let v119 : string = $"_func0_from_v8"
    let v120 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>>> = Fable.Core.RustInterop.emitRustExpr () v119 
    let v121 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v122 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v120 v121 
    let v123 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v124 : (unit -> PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option) = closure64(v122)
    let v125 : leptos_prelude_ArcMemo<PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option> = Fable.Core.RustInterop.emitRustExpr v124 v123 
    let v126 : unit = ()
    let v127 : string = $"true; let _func0_from_v126 = Func0::from(move || {{ //"
    let v128 : bool = Fable.Core.RustInterop.emitRustExpr () v127 
    let v129 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v130 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v122 v129 
    let v131 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v132 : bool = Fable.Core.RustInterop.emitRustExpr v130 v131 
    let v133 : string = "x"
    let v134 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v133 
    let v135 : (unit -> unit) = closure8()
    let _v135 = true
    let v136 : string = "PartialEqWrapper($0)"
    let v137 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v134 v136 
    let v138 : string = "true; $0 })"
    let v139 : bool = Fable.Core.RustInterop.emitRustExpr v137 v138 
    let v140 : string = "_optionm_map_"
    let v141 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr () v140 
    let v142 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v143 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v142 
    let v144 : string = "true; let __future_init = Box::pin(/*"
    let v145 : bool = Fable.Core.RustInterop.emitRustExpr () v144 
    let v146 : string = "*/ async move { /*"
    let v147 : bool = Fable.Core.RustInterop.emitRustExpr () v146 
    let v148 : string = "*/ ()"
    let v149 : bool = Fable.Core.RustInterop.emitRustExpr () v148 
    let v151 : string = $"%A{v141}"
    let v155 : string = $"%A{v143}"
    let v158 : int64 = 400L
    let v159 : string = method8(v158, v155)
    let v160 : string = "state_core.use_requests (3) / state_data_resource new_local_resource / request : " + string v159 + " / database: " + string v151 + ""
    let v161 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v162 : bool = Fable.Core.RustInterop.emitRustExpr v160 v161 
    let v163 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v164 : bool = Fable.Core.RustInterop.emitRustExpr v141 v163 
    let v165 : string = "x"
    let v166 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr () v165 
    let v167 : string = "$0.0"
    let v168 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr v166 v167 
    let v169 : string = "true; $0 })"
    let v170 : bool = Fable.Core.RustInterop.emitRustExpr v168 v169 
    let v171 : string = "_optionm_map_"
    let v172 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr () v171 
    let v175 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v176 : US2 option = v172 |> Option.map v175 
    let v196 : US2 = US2_1
    let v197 : US2 = v176 |> Option.defaultValue v196 
    let v714 : US24 =
        match v197 with
        | US2_0(v201) -> (* Some *)
            let v202 : unit = ()
            let v203 : string = $"true; let _func1_from_v202 = Func1::from(move |value| {{ //"
            let v204 : bool = Fable.Core.RustInterop.emitRustExpr () v203 
            let v205 : string = $"value"
            let struct (v206 : string, v207 : US23, v208 : string, v209 : bool, v210 : bool) = Fable.Core.RustInterop.emitRustExpr () v205 
            let v211 : string = "url[" + v206 + "](" + $"%A{v208}" + ")"
            let v212 : string = "state_core.get_data () / id: " + v211 + ""
            let v213 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v214 : bool = Fable.Core.RustInterop.emitRustExpr v212 v213 
            let v215 : string = "true; let __future_init = Box::pin(/*"
            let v216 : bool = Fable.Core.RustInterop.emitRustExpr () v215 
            let v217 : string = "*/ async { /*"
            let v218 : bool = Fable.Core.RustInterop.emitRustExpr () v217 
            let v219 : string = "*/ ()"
            let v220 : bool = Fable.Core.RustInterop.emitRustExpr () v219 
            let v221 : string = "store"
            let v222 : (string []) = [|v221|]
            let v223 : string = "$0.to_vec()"
            let v224 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v222 v223 
            let v225 : unit = ()
            let v226 : string = $"true; let _func1_from_v225 = Func1::from(move |value| {{ //"
            let v227 : bool = Fable.Core.RustInterop.emitRustExpr () v226 
            let v228 : string = $"value"
            let v229 : string = Fable.Core.RustInterop.emitRustExpr () v228 
            (* run_target_args'
            let v234 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v235 : string = "&*$0"
            let v236 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v229 v235 
            let _run_target_args'_v234 = v236 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v237 : string = "&*$0"
            let v238 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v229 v237 
            let _run_target_args'_v234 = v238 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v239 : string = "&*$0"
            let v240 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v229 v239 
            let _run_target_args'_v234 = v240 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v242 : Ref<Str> = v229 |> unbox<Ref<Str>>
            let _run_target_args'_v234 = v242 
            #endif
#if FABLE_COMPILER_PYTHON
            let v246 : Ref<Str> = v229 |> unbox<Ref<Str>>
            let _run_target_args'_v234 = v246 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v250 : Ref<Str> = v229 |> unbox<Ref<Str>>
            let _run_target_args'_v234 = v250 
            #endif
#else
            let v254 : Ref<Str> = v229 |> unbox<Ref<Str>>
            let _run_target_args'_v234 = v254 
            #endif
            let v257 : Ref<Str> = _run_target_args'_v234 
            (* run_target_args'
            let v270 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v271 : string = "String::from($0)"
            let v272 : std_string_String = Fable.Core.RustInterop.emitRustExpr v257 v271 
            let _run_target_args'_v270 = v272 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v273 : string = "String::from($0)"
            let v274 : std_string_String = Fable.Core.RustInterop.emitRustExpr v257 v273 
            let _run_target_args'_v270 = v274 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v275 : string = "String::from($0)"
            let v276 : std_string_String = Fable.Core.RustInterop.emitRustExpr v257 v275 
            let _run_target_args'_v270 = v276 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v278 : std_string_String = v257 |> unbox<std_string_String>
            let _run_target_args'_v270 = v278 
            #endif
#if FABLE_COMPILER_PYTHON
            let v282 : std_string_String = v257 |> unbox<std_string_String>
            let _run_target_args'_v270 = v282 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v286 : std_string_String = v257 |> unbox<std_string_String>
            let _run_target_args'_v270 = v286 
            #endif
#else
            let v290 : std_string_String = v257 |> unbox<std_string_String>
            let _run_target_args'_v270 = v290 
            #endif
            let v293 : std_string_String = _run_target_args'_v270 
            let func1_from_result = v293 //
            let v302 : _ = func1_from_result
            let v303 : string = $"true; $0 /*"
            let v304 : bool = Fable.Core.RustInterop.emitRustExpr v302 v303 
            let v305 : string = $"*/ }}); //"
            let v306 : bool = Fable.Core.RustInterop.emitRustExpr () v305 
            let v307 : string = $"_func1_from_v225"
            let v308 : Func0<string, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v307 
            let v309 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v310 : (string -> std_string_String) = closure10(v308)
            let v311 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v224, v310) v309 
            let v312 : std_sync_Arc<rexie_Rexie> = method11(v201)
            let v313 : string = "$0.transaction(&v311, rexie::TransactionMode::ReadOnly)"
            let v314 : Result<rexie_Transaction, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v312 v313 
            let v315 : (rexie_Error -> std_string_String) = method12()
            (* run_target_args'
            let v317 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v318 : string = "$0.map_err(|x| $1(x))"
            let v319 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v314, v315) v318 
            let _run_target_args'_v317 = v319 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v320 : string = "$0.map_err(|x| $1(x))"
            let v321 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v314, v315) v320 
            let _run_target_args'_v317 = v321 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v322 : string = "$0.map_err(|x| $1(x))"
            let v323 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v314, v315) v322 
            let _run_target_args'_v317 = v323 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v324 : Result<rexie_Transaction, std_string_String> = match v314 with Ok x -> Ok x | Error x -> Error (v315 x)
            let _run_target_args'_v317 = v324 
            #endif
#if FABLE_COMPILER_PYTHON
            let v325 : Result<rexie_Transaction, std_string_String> = match v314 with Ok x -> Ok x | Error x -> Error (v315 x)
            let _run_target_args'_v317 = v325 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v326 : Result<rexie_Transaction, std_string_String> = match v314 with Ok x -> Ok x | Error x -> Error (v315 x)
            let _run_target_args'_v317 = v326 
            #endif
#else
            let v327 : Result<rexie_Transaction, std_string_String> = match v314 with Ok x -> Ok x | Error x -> Error (v315 x)
            let _run_target_args'_v317 = v327 
            #endif
            let v328 : Result<rexie_Transaction, std_string_String> = _run_target_args'_v317 
            let v331 : string = "$0?"
            let v332 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v328 v331 
            let v333 : string = method13()
            (* run_target_args'
            let v338 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v339 : string = "&*$0"
            let v340 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v333 v339 
            let _run_target_args'_v338 = v340 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v341 : string = "&*$0"
            let v342 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v333 v341 
            let _run_target_args'_v338 = v342 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v343 : string = "&*$0"
            let v344 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v333 v343 
            let _run_target_args'_v338 = v344 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v346 : Ref<Str> = v333 |> unbox<Ref<Str>>
            let _run_target_args'_v338 = v346 
            #endif
#if FABLE_COMPILER_PYTHON
            let v350 : Ref<Str> = v333 |> unbox<Ref<Str>>
            let _run_target_args'_v338 = v350 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v354 : Ref<Str> = v333 |> unbox<Ref<Str>>
            let _run_target_args'_v338 = v354 
            #endif
#else
            let v358 : Ref<Str> = v333 |> unbox<Ref<Str>>
            let _run_target_args'_v338 = v358 
            #endif
            let v361 : Ref<Str> = _run_target_args'_v338 
            let v370 : string = "v332.store($0)"
            let v371 : Result<rexie_Store, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v361 v370 
            let v372 : (rexie_Error -> std_string_String) = method14()
            (* run_target_args'
            let v374 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v375 : string = "$0.map_err(|x| $1(x))"
            let v376 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v371, v372) v375 
            let _run_target_args'_v374 = v376 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v377 : string = "$0.map_err(|x| $1(x))"
            let v378 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v371, v372) v377 
            let _run_target_args'_v374 = v378 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v379 : string = "$0.map_err(|x| $1(x))"
            let v380 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v371, v372) v379 
            let _run_target_args'_v374 = v380 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v381 : Result<rexie_Store, std_string_String> = match v371 with Ok x -> Ok x | Error x -> Error (v372 x)
            let _run_target_args'_v374 = v381 
            #endif
#if FABLE_COMPILER_PYTHON
            let v382 : Result<rexie_Store, std_string_String> = match v371 with Ok x -> Ok x | Error x -> Error (v372 x)
            let _run_target_args'_v374 = v382 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v383 : Result<rexie_Store, std_string_String> = match v371 with Ok x -> Ok x | Error x -> Error (v372 x)
            let _run_target_args'_v374 = v383 
            #endif
#else
            let v384 : Result<rexie_Store, std_string_String> = match v371 with Ok x -> Ok x | Error x -> Error (v372 x)
            let _run_target_args'_v374 = v384 
            #endif
            let v385 : Result<rexie_Store, std_string_String> = _run_target_args'_v374 
            let v388 : string = "$0?"
            let v389 : rexie_Store = Fable.Core.RustInterop.emitRustExpr v385 v388 
            let v390 : string = method79(v211)
            (* run_target_args'
            let v395 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v396 : string = "&*$0"
            let v397 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v390 v396 
            let _run_target_args'_v395 = v397 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v398 : string = "&*$0"
            let v399 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v390 v398 
            let _run_target_args'_v395 = v399 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v400 : string = "&*$0"
            let v401 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v390 v400 
            let _run_target_args'_v395 = v401 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v403 : Ref<Str> = v390 |> unbox<Ref<Str>>
            let _run_target_args'_v395 = v403 
            #endif
#if FABLE_COMPILER_PYTHON
            let v407 : Ref<Str> = v390 |> unbox<Ref<Str>>
            let _run_target_args'_v395 = v407 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v411 : Ref<Str> = v390 |> unbox<Ref<Str>>
            let _run_target_args'_v395 = v411 
            #endif
#else
            let v415 : Ref<Str> = v390 |> unbox<Ref<Str>>
            let _run_target_args'_v395 = v415 
            #endif
            let v418 : Ref<Str> = _run_target_args'_v395 
            let v427 : string = "wasm_bindgen::JsValue::from_str($0)"
            let v428 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr v418 v427 
            let v429 : string = $"Box::pin(rexie::Store::get(&v389, v428))"
            let v430 : std_pin_Pin<Box<Dyn<std_future_Future<Result<wasm_bindgen_JsValue option, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v429 
            let v431 : string = "v430.await"
            let v432 : Result<wasm_bindgen_JsValue option, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v431 
            let v433 : (rexie_Error -> std_string_String) = method16()
            (* run_target_args'
            let v435 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v436 : string = "$0.map_err(|x| $1(x))"
            let v437 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v432, v433) v436 
            let _run_target_args'_v435 = v437 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v438 : string = "$0.map_err(|x| $1(x))"
            let v439 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v432, v433) v438 
            let _run_target_args'_v435 = v439 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v440 : string = "$0.map_err(|x| $1(x))"
            let v441 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v432, v433) v440 
            let _run_target_args'_v435 = v441 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v442 : Result<wasm_bindgen_JsValue option, std_string_String> = match v432 with Ok x -> Ok x | Error x -> Error (v433 x)
            let _run_target_args'_v435 = v442 
            #endif
#if FABLE_COMPILER_PYTHON
            let v443 : Result<wasm_bindgen_JsValue option, std_string_String> = match v432 with Ok x -> Ok x | Error x -> Error (v433 x)
            let _run_target_args'_v435 = v443 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v444 : Result<wasm_bindgen_JsValue option, std_string_String> = match v432 with Ok x -> Ok x | Error x -> Error (v433 x)
            let _run_target_args'_v435 = v444 
            #endif
#else
            let v445 : Result<wasm_bindgen_JsValue option, std_string_String> = match v432 with Ok x -> Ok x | Error x -> Error (v433 x)
            let _run_target_args'_v435 = v445 
            #endif
            let v446 : Result<wasm_bindgen_JsValue option, std_string_String> = _run_target_args'_v435 
            let v449 : string = "$0?"
            let v450 : wasm_bindgen_JsValue option = Fable.Core.RustInterop.emitRustExpr v446 v449 
            let v453 : (wasm_bindgen_JsValue -> US4) = method17()
            let v454 : US4 option = v450 |> Option.map v453 
            let v474 : US4 = US4_1
            let v475 : US4 = v454 |> Option.defaultValue v474 
            let v589 : US25 =
                match v475 with
                | US4_1 -> (* None *)
                    US25_1
                | US4_0(v479) -> (* Some *)
                    let v480 : wasm_bindgen_JsValue = method18(v479)
                    let v481 : string = "serde_wasm_bindgen::from_value(v480)"
                    let v482 : Result<serde_json_Value option, serde_wasm_bindgen_Error> = Fable.Core.RustInterop.emitRustExpr () v481 
                    let v483 : (serde_wasm_bindgen_Error -> std_string_String) = method19()
                    (* run_target_args'
                    let v485 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v486 : string = "$0.map_err(|x| $1(x))"
                    let v487 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v482, v483) v486 
                    let _run_target_args'_v485 = v487 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v488 : string = "$0.map_err(|x| $1(x))"
                    let v489 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v482, v483) v488 
                    let _run_target_args'_v485 = v489 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v490 : string = "$0.map_err(|x| $1(x))"
                    let v491 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v482, v483) v490 
                    let _run_target_args'_v485 = v491 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v492 : Result<serde_json_Value option, std_string_String> = match v482 with Ok x -> Ok x | Error x -> Error (v483 x)
                    let _run_target_args'_v485 = v492 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v493 : Result<serde_json_Value option, std_string_String> = match v482 with Ok x -> Ok x | Error x -> Error (v483 x)
                    let _run_target_args'_v485 = v493 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v494 : Result<serde_json_Value option, std_string_String> = match v482 with Ok x -> Ok x | Error x -> Error (v483 x)
                    let _run_target_args'_v485 = v494 
                    #endif
#else
                    let v495 : Result<serde_json_Value option, std_string_String> = match v482 with Ok x -> Ok x | Error x -> Error (v483 x)
                    let _run_target_args'_v485 = v495 
                    #endif
                    let v496 : Result<serde_json_Value option, std_string_String> = _run_target_args'_v485 
                    let v499 : string = "$0?"
                    let v500 : serde_json_Value option = Fable.Core.RustInterop.emitRustExpr v496 v499 
                    let v503 : (serde_json_Value -> US5) = method20()
                    let v504 : US5 option = v500 |> Option.map v503 
                    let v524 : US5 = US5_1
                    let v525 : US5 = v504 |> Option.defaultValue v524 
                    match v525 with
                    | US5_1 -> (* None *)
                        US25_1
                    | US5_0(v529) -> (* Some *)
                        let v530 : serde_json_Value = method21(v529)
                        let v531 : string = "serde_json::from_value(v530)"
                        let v532 : Result<Vec<uint8>, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr () v531 
                        let v533 : (serde_json_Error -> std_string_String) = method22()
                        (* run_target_args'
                        let v535 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v536 : string = "$0.map_err(|x| $1(x))"
                        let v537 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v532, v533) v536 
                        let _run_target_args'_v535 = v537 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v538 : string = "$0.map_err(|x| $1(x))"
                        let v539 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v532, v533) v538 
                        let _run_target_args'_v535 = v539 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v540 : string = "$0.map_err(|x| $1(x))"
                        let v541 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v532, v533) v540 
                        let _run_target_args'_v535 = v541 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v542 : Result<Vec<uint8>, std_string_String> = match v532 with Ok x -> Ok x | Error x -> Error (v533 x)
                        let _run_target_args'_v535 = v542 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v543 : Result<Vec<uint8>, std_string_String> = match v532 with Ok x -> Ok x | Error x -> Error (v533 x)
                        let _run_target_args'_v535 = v543 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v544 : Result<Vec<uint8>, std_string_String> = match v532 with Ok x -> Ok x | Error x -> Error (v533 x)
                        let _run_target_args'_v535 = v544 
                        #endif
#else
                        let v545 : Result<Vec<uint8>, std_string_String> = match v532 with Ok x -> Ok x | Error x -> Error (v533 x)
                        let _run_target_args'_v535 = v545 
                        #endif
                        let v546 : Result<Vec<uint8>, std_string_String> = _run_target_args'_v535 
                        let v549 : string = "$0?"
                        let v550 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v546 v549 
                        let v551 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                        let v552 : (uint8 []) = Fable.Core.RustInterop.emitRustExpr v550 v551 
                        let v553 : int32 = v552.Length
                        let v554 : string = "state_core.get_data () / data_len: " + string v553 + ""
                        let v555 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v556 : bool = Fable.Core.RustInterop.emitRustExpr v554 v555 
                        let v557 : string = "$0.to_vec()"
                        let v558 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v552 v557 
                        let v559 : string = "v558.as_slice()"
                        let v560 : Ref<Slice<uint8>> = Fable.Core.RustInterop.emitRustExpr () v559 
                        let v561 : string = "true; let mut v560 = v560"
                        let v562 : bool = Fable.Core.RustInterop.emitRustExpr () v561 
                        let v563 : string = "borsh::BorshDeserialize::deserialize(&mut v560)"
                        let v564 : Result<Heap4, borsh_io_Error> = Fable.Core.RustInterop.emitRustExpr () v563 
                        let v565 : (borsh_io_Error -> std_string_String) = method23()
                        (* run_target_args'
                        let v567 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v568 : string = "$0.map_err(|x| $1(x))"
                        let v569 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v564, v565) v568 
                        let _run_target_args'_v567 = v569 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v570 : string = "$0.map_err(|x| $1(x))"
                        let v571 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v564, v565) v570 
                        let _run_target_args'_v567 = v571 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v572 : string = "$0.map_err(|x| $1(x))"
                        let v573 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v564, v565) v572 
                        let _run_target_args'_v567 = v573 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v574 : Result<Heap4, std_string_String> = match v564 with Ok x -> Ok x | Error x -> Error (v565 x)
                        let _run_target_args'_v567 = v574 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v575 : Result<Heap4, std_string_String> = match v564 with Ok x -> Ok x | Error x -> Error (v565 x)
                        let _run_target_args'_v567 = v575 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v576 : Result<Heap4, std_string_String> = match v564 with Ok x -> Ok x | Error x -> Error (v565 x)
                        let _run_target_args'_v567 = v576 
                        #endif
#else
                        let v577 : Result<Heap4, std_string_String> = match v564 with Ok x -> Ok x | Error x -> Error (v565 x)
                        let _run_target_args'_v567 = v577 
                        #endif
                        let v578 : Result<Heap4, std_string_String> = _run_target_args'_v567 
                        let v581 : string = "$0?"
                        let v582 : Heap4 = Fable.Core.RustInterop.emitRustExpr v578 v581 
                        US25_0(v582)
            let v600 : Heap4 option =
                match v589 with
                | US25_1 -> (* None *)
                    let v596 : Heap4 option = None
                    v596
                | US25_0(v590) -> (* Some *)
                    let v592 : Heap4 option = Some v590 
                    v592
            let v602 : Result<Heap4 option, std_string_String> = Ok v600 
            let v605 : string = v49 + v50 
            let x = v602 //
            let v606 : _ = x
            let v607 : unit = ()
            (* run_target_args'
            let v608 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v609 : string = $"true; let _fix_closure_v607 = $0"
            let v610 : bool = Fable.Core.RustInterop.emitRustExpr v606 v609 
            let _run_target_args'_v608 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v611 : string = $"true; let _fix_closure_v607 = $0"
            let v612 : bool = Fable.Core.RustInterop.emitRustExpr v606 v611 
            let _run_target_args'_v608 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v613 : string = $"true; let _fix_closure_v607 = $0"
            let v614 : bool = Fable.Core.RustInterop.emitRustExpr v606 v613 
            let _run_target_args'_v608 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v608 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v608 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v608 = false 
            #endif
#else
            let _run_target_args'_v608 = false 
            #endif
            let v615 : bool = _run_target_args'_v608 
            let v616 : string = $"true; _fix_closure_v607 " + v605 + "); " + v49 + " // rust.fix_closure'"
            let v617 : bool = Fable.Core.RustInterop.emitRustExpr () v616 
            let v618 : string = "__future_init"
            let v619 : _ = Fable.Core.RustInterop.emitRustExpr () v618 
            let v620 : string = "v619"
            let v621 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v620 
            let func1_from_result = v621 //
            let v622 : _ = func1_from_result
            let v623 : string = $"true; $0 /*"
            let v624 : bool = Fable.Core.RustInterop.emitRustExpr v622 v623 
            let v625 : string = $"*/ }}); //"
            let v626 : bool = Fable.Core.RustInterop.emitRustExpr () v625 
            let v627 : string = $"_func1_from_v202"
            let v628 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v627 
            let v629 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v630 : (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>) = closure65(v628)
            let v631 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr struct (v143, v630) v629 
            let v632 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = method81(v631)
            let v633 : string = "futures::future::try_join_all(v632)"
            let v634 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v633 
            let v635 : string = "v634.await"
            let v636 : Result<Vec<Heap4 option>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v635 
            let v637 : string = "$0?"
            let v638 : Vec<Heap4 option> = Fable.Core.RustInterop.emitRustExpr v636 v637 
            US24_0(v638)
        | _ ->
            let v640 : string = "database=None"
            (* run_target_args'
            let v645 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v646 : string = "&*$0"
            let v647 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v640 v646 
            let _run_target_args'_v645 = v647 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v648 : string = "&*$0"
            let v649 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v640 v648 
            let _run_target_args'_v645 = v649 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v650 : string = "&*$0"
            let v651 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v640 v650 
            let _run_target_args'_v645 = v651 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v653 : Ref<Str> = v640 |> unbox<Ref<Str>>
            let _run_target_args'_v645 = v653 
            #endif
#if FABLE_COMPILER_PYTHON
            let v657 : Ref<Str> = v640 |> unbox<Ref<Str>>
            let _run_target_args'_v645 = v657 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v661 : Ref<Str> = v640 |> unbox<Ref<Str>>
            let _run_target_args'_v645 = v661 
            #endif
#else
            let v665 : Ref<Str> = v640 |> unbox<Ref<Str>>
            let _run_target_args'_v645 = v665 
            #endif
            let v668 : Ref<Str> = _run_target_args'_v645 
            (* run_target_args'
            let v681 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v682 : string = "String::from($0)"
            let v683 : std_string_String = Fable.Core.RustInterop.emitRustExpr v668 v682 
            let _run_target_args'_v681 = v683 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v684 : string = "String::from($0)"
            let v685 : std_string_String = Fable.Core.RustInterop.emitRustExpr v668 v684 
            let _run_target_args'_v681 = v685 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v686 : string = "String::from($0)"
            let v687 : std_string_String = Fable.Core.RustInterop.emitRustExpr v668 v686 
            let _run_target_args'_v681 = v687 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v689 : std_string_String = v668 |> unbox<std_string_String>
            let _run_target_args'_v681 = v689 
            #endif
#if FABLE_COMPILER_PYTHON
            let v693 : std_string_String = v668 |> unbox<std_string_String>
            let _run_target_args'_v681 = v693 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v697 : std_string_String = v668 |> unbox<std_string_String>
            let _run_target_args'_v681 = v697 
            #endif
#else
            let v701 : std_string_String = v668 |> unbox<std_string_String>
            let _run_target_args'_v681 = v701 
            #endif
            let v704 : std_string_String = _run_target_args'_v681 
            US24_1(v704)
    let v726 : Result<Vec<Heap4 option>, std_string_String> =
        match v714 with
        | US24_1(v720) -> (* Error *)
            let v722 : Result<Vec<Heap4 option>, std_string_String> = Error v720 
            v722
        | US24_0(v715) -> (* Ok *)
            let v717 : Result<Vec<Heap4 option>, std_string_String> = Ok v715 
            v717
    let v728 : string = $"%A{v726}"
    let v731 : string = "state_core.use_requests (4) / state_data_resource new_local_resource / result: " + string v728 + ""
    let v732 : int64 = 200L
    let v733 : string = method8(v732, v731)
    let v734 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v735 : bool = Fable.Core.RustInterop.emitRustExpr v733 v734 
    let v736 : string = v49 + v50 
    let x = v726 //
    let v737 : _ = x
    let v738 : unit = ()
    (* run_target_args'
    let v739 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v740 : string = $"true; let _fix_closure_v738 = $0"
    let v741 : bool = Fable.Core.RustInterop.emitRustExpr v737 v740 
    let _run_target_args'_v739 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v742 : string = $"true; let _fix_closure_v738 = $0"
    let v743 : bool = Fable.Core.RustInterop.emitRustExpr v737 v742 
    let _run_target_args'_v739 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v744 : string = $"true; let _fix_closure_v738 = $0"
    let v745 : bool = Fable.Core.RustInterop.emitRustExpr v737 v744 
    let _run_target_args'_v739 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v739 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v739 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v739 = false 
    #endif
#else
    let _run_target_args'_v739 = false 
    #endif
    let v746 : bool = _run_target_args'_v739 
    let v747 : string = $"true; _fix_closure_v738 " + v736 + "); " + v49 + " // rust.fix_closure'"
    let v748 : bool = Fable.Core.RustInterop.emitRustExpr () v747 
    let v749 : string = "__future_init"
    let v750 : _ = Fable.Core.RustInterop.emitRustExpr () v749 
    let v751 : string = "v750"
    let v752 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<Heap4 option>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v751 
    let v753 : string = $"true; $0 /*"
    let v754 : bool = Fable.Core.RustInterop.emitRustExpr v752 v753 
    let v755 : string = $"*/ }}); //"
    let v756 : bool = Fable.Core.RustInterop.emitRustExpr () v755 
    let v757 : string = $"_func0_from_v126"
    let v758 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<Heap4 option>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v757 
    let v759 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v760 : leptos_prelude_ArcLocalResource<Result<Vec<Heap4 option>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v758 v759 
    let v761 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v762 : (unit -> Result<Vec<Heap4 option>, std_string_String> option) = closure66(v760)
    let v763 : leptos_prelude_ArcMemo<Result<Vec<Heap4 option>, std_string_String> option> = Fable.Core.RustInterop.emitRustExpr v762 v761 
    let v764 : unit = ()
    let v765 : string = $"true; let _func0_from_v764 = Func0::from(move || {{ //"
    let v766 : bool = Fable.Core.RustInterop.emitRustExpr () v765 
    let v767 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v768 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v767 
    let v769 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v770 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v763 v769 
    let v772 : string = $"%A{v768}"
    let v775 : int64 = 400L
    let v776 : string = method8(v775, v772)
    let v777 : string = "state_core.use_requests (7) / json new_local_resource / requests: " + string v776 + ""
    let v778 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v779 : bool = Fable.Core.RustInterop.emitRustExpr v777 v778 
    let v780 : string = "true; let __future_init = Box::pin(/*"
    let v781 : bool = Fable.Core.RustInterop.emitRustExpr () v780 
    let v782 : string = "*/ async move { /*"
    let v783 : bool = Fable.Core.RustInterop.emitRustExpr () v782 
    let v784 : string = "*/ ()"
    let v785 : bool = Fable.Core.RustInterop.emitRustExpr () v784 
    let v788 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v789 : US26 option = v770 |> Option.map v788 
    let v809 : US26 = US26_1
    let v810 : US26 = v789 |> Option.defaultValue v809 
    let v866 : US27 =
        match v810 with
        | US26_1 -> (* None *)
            US27_1
        | US26_0(v814) -> (* Some *)
            let v815 : (Vec<Heap4 option> -> US24) = method83()
            let v816 : (std_string_String -> US24) = method84()
            let v818 : US24 = match v814 with Ok x -> v815 x | Error x -> v816 x
            let v862 : US28 =
                match v818 with
                | US24_1(v859) -> (* Error *)
                    US28_1(v859)
                | US24_0(v821) -> (* Ok *)
                    let v822 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v823 : bool = Fable.Core.RustInterop.emitRustExpr v821 v822 
                    let v824 : string = "x"
                    let v825 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v824 
                    let v828 : (Heap4 -> US25) = method85()
                    let v829 : US25 option = v825 |> Option.map v828 
                    let v849 : US25 = US25_1
                    let v850 : US25 = v829 |> Option.defaultValue v849 
                    let v854 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v855 : bool = Fable.Core.RustInterop.emitRustExpr v850 v854 
                    let v856 : string = "_vec_map"
                    let v857 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v856 
                    US28_0(v857)
            US27_0(v862)
    let v868 : string = $"%A{v866}"
    let v871 : int64 = 400L
    let v872 : string = method8(v871, v868)
    let v873 : string = "state_core.use_requests (8) / result_memo / state_data: " + string v872 + ""
    let v874 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v875 : bool = Fable.Core.RustInterop.emitRustExpr v873 v874 
    let v876 : (int32 -> (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>)) = method86(v866)
    let v877 : Vec<struct (string * US23 * string * bool * bool)> = method96(v768)
    let v878 : string = "v877.iter().enumerate().map(|(i, x)| v876(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v879 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v878 
    let v880 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = method97(v879)
    let v881 : string = "futures::future::try_join_all(v880)"
    let v882 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v881 
    let v883 : string = "v882.await"
    let v884 : Result<Vec<string option>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v883 
    let v885 : string = "$0?"
    let v886 : Vec<string option> = Fable.Core.RustInterop.emitRustExpr v884 v885 
    let v888 : Result<Vec<string option>, std_string_String> = Ok v886 
    let v891 : string = v49 + v50 
    let x = v888 //
    let v892 : _ = x
    let v893 : unit = ()
    (* run_target_args'
    let v894 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v895 : string = $"true; let _fix_closure_v893 = $0"
    let v896 : bool = Fable.Core.RustInterop.emitRustExpr v892 v895 
    let _run_target_args'_v894 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v897 : string = $"true; let _fix_closure_v893 = $0"
    let v898 : bool = Fable.Core.RustInterop.emitRustExpr v892 v897 
    let _run_target_args'_v894 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v899 : string = $"true; let _fix_closure_v893 = $0"
    let v900 : bool = Fable.Core.RustInterop.emitRustExpr v892 v899 
    let _run_target_args'_v894 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v894 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v894 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v894 = false 
    #endif
#else
    let _run_target_args'_v894 = false 
    #endif
    let v901 : bool = _run_target_args'_v894 
    let v902 : string = $"true; _fix_closure_v893 " + v891 + "); " + v49 + " // rust.fix_closure'"
    let v903 : bool = Fable.Core.RustInterop.emitRustExpr () v902 
    let v904 : string = "__future_init"
    let v905 : _ = Fable.Core.RustInterop.emitRustExpr () v904 
    let v906 : string = "v905"
    let v907 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<string option>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v906 
    let v908 : string = $"true; $0 /*"
    let v909 : bool = Fable.Core.RustInterop.emitRustExpr v907 v908 
    let v910 : string = $"*/ }}); //"
    let v911 : bool = Fable.Core.RustInterop.emitRustExpr () v910 
    let v912 : string = $"_func0_from_v764"
    let v913 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<string option>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v912 
    let v914 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v915 : leptos_prelude_ArcLocalResource<Result<Vec<string option>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v913 v914 
    let v916 : unit = ()
    let v917 : string = $"true; let _func1_from_v916 = Func1::from(move |value| {{ //"
    let v918 : bool = Fable.Core.RustInterop.emitRustExpr () v917 
    let v919 : string = $"value"
    let v920 : Heap4 = Fable.Core.RustInterop.emitRustExpr () v919 
    let v922 : string = $"%A{v920}"
    let v925 : int64 = System.Convert.ToInt64 v922.Length
    let v926 : string = "state_core.use_requests (10) / set_state_data_action / value_len: " + string v925 + ""
    let v927 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v928 : bool = Fable.Core.RustInterop.emitRustExpr v926 v927 
    let v929 : string = "true; let __future_init = Box::pin(/*"
    let v930 : bool = Fable.Core.RustInterop.emitRustExpr () v929 
    let v931 : string = "*/ async move { /*"
    let v932 : bool = Fable.Core.RustInterop.emitRustExpr () v931 
    let v933 : string = "*/ ()"
    let v934 : bool = Fable.Core.RustInterop.emitRustExpr () v933 
    let v935 : string = "Box::pin($0)"
    let v936 : std_pin_Pin<Box<leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>>> = Fable.Core.RustInterop.emitRustExpr v0 v935 
    let v937 : string = $"leptos::prelude::ArcMemo::get_untracked(&$0)"
    let v938 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v936 v937 
    let v939 : string = "Box::pin($0)"
    let v940 : std_pin_Pin<Box<leptos_prelude_ArcMemo<PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option>>> = Fable.Core.RustInterop.emitRustExpr v125 v939 
    let v941 : string = $"leptos::prelude::ArcMemo::get_untracked(&$0)"
    let v942 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr v940 v941 
    let v943 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v944 : bool = Fable.Core.RustInterop.emitRustExpr v942 v943 
    let v945 : string = "x"
    let v946 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr () v945 
    let v947 : string = "$0.0"
    let v948 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr v946 v947 
    let v949 : string = "true; $0 })"
    let v950 : bool = Fable.Core.RustInterop.emitRustExpr v948 v949 
    let v951 : string = "_optionm_map_"
    let v952 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr () v951 
    let v955 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v956 : US2 option = v952 |> Option.map v955 
    let v976 : US2 = US2_1
    let v977 : US2 = v956 |> Option.defaultValue v976 
    let v1155 : US34 =
        match v977 with
        | US2_0(v981) -> (* Some *)
            let v982 : unit = ()
            let v983 : string = $"true; let _func1_from_v982 = Func1::from(move |value| {{ //"
            let v984 : bool = Fable.Core.RustInterop.emitRustExpr () v983 
            let v985 : string = $"value"
            let struct (v986 : string, v987 : US23, v988 : string, v989 : bool, v990 : bool) = Fable.Core.RustInterop.emitRustExpr () v985 
            let v991 : string = "true; let __future_init = Box::pin(/*"
            let v992 : bool = Fable.Core.RustInterop.emitRustExpr () v991 
            let v993 : string = "*/ async move { /*"
            let v994 : bool = Fable.Core.RustInterop.emitRustExpr () v993 
            let v995 : string = "*/ ()"
            let v996 : bool = Fable.Core.RustInterop.emitRustExpr () v995 
            let v997 : string = "state_core.use_requests (11) / set_state_data_action / database=Some(_) / url: " + v986 + ""
            let v998 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v999 : bool = Fable.Core.RustInterop.emitRustExpr v997 v998 
            let v1000 : string = "url[" + v986 + "](" + $"%A{v988}" + ")"
            let v1002 : string = $"%A{v920}"
            let v1005 : int64 = System.Convert.ToInt64 v1002.Length
            let v1006 : string = "state_core.set_data () / data_len: " + string v1005 + ""
            let v1007 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1008 : bool = Fable.Core.RustInterop.emitRustExpr v1006 v1007 
            let v1009 : string = "true; let __future_init = Box::pin(/*"
            let v1010 : bool = Fable.Core.RustInterop.emitRustExpr () v1009 
            let v1011 : string = "*/ async move { /*"
            let v1012 : bool = Fable.Core.RustInterop.emitRustExpr () v1011 
            let v1013 : string = "*/ ()"
            let v1014 : bool = Fable.Core.RustInterop.emitRustExpr () v1013 
            let v1015 : string = "true; let mut data = Vec::new()"
            let v1016 : bool = Fable.Core.RustInterop.emitRustExpr () v1015 
            let v1017 : string = "true; borsh::BorshSerialize::serialize(&$0, &mut data).unwrap()"
            let v1018 : bool = Fable.Core.RustInterop.emitRustExpr v920 v1017 
            let v1019 : string = "data"
            let v1020 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr () v1019 
            let v1021 : string = "serde_wasm_bindgen::to_value(&v1020).unwrap()"
            let v1022 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr () v1021 
            let v1023 : string = method98(v1000)
            (* run_target_args'
            let v1028 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1029 : string = "&*$0"
            let v1030 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1023 v1029 
            let _run_target_args'_v1028 = v1030 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1031 : string = "&*$0"
            let v1032 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1023 v1031 
            let _run_target_args'_v1028 = v1032 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1033 : string = "&*$0"
            let v1034 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1023 v1033 
            let _run_target_args'_v1028 = v1034 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1036 : Ref<Str> = v1023 |> unbox<Ref<Str>>
            let _run_target_args'_v1028 = v1036 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1040 : Ref<Str> = v1023 |> unbox<Ref<Str>>
            let _run_target_args'_v1028 = v1040 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1044 : Ref<Str> = v1023 |> unbox<Ref<Str>>
            let _run_target_args'_v1028 = v1044 
            #endif
#else
            let v1048 : Ref<Str> = v1023 |> unbox<Ref<Str>>
            let _run_target_args'_v1028 = v1048 
            #endif
            let v1051 : Ref<Str> = _run_target_args'_v1028 
            let v1060 : string = "$0.transaction(&[\"store\"], rexie::TransactionMode::ReadWrite)?"
            let v1061 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v981 v1060 
            let v1062 : string = "v1061.store(\"store\")?"
            let v1063 : rexie_Store = Fable.Core.RustInterop.emitRustExpr () v1062 
            let v1064 : string = "true; v1063.put(&v1022, Some(&$0.into())).await?"
            let v1065 : bool = Fable.Core.RustInterop.emitRustExpr v1051 v1064 
            let v1066 : string = "true; v1061.done().await?"
            let v1067 : bool = Fable.Core.RustInterop.emitRustExpr () v1066 
            let v1069 : Result<unit, rexie_Error> = Ok () 
            let v1072 : string = v49 + v50 
            let x = v1069 //
            let v1073 : _ = x
            let v1074 : unit = ()
            (* run_target_args'
            let v1075 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1076 : string = $"true; let _fix_closure_v1074 = $0"
            let v1077 : bool = Fable.Core.RustInterop.emitRustExpr v1073 v1076 
            let _run_target_args'_v1075 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1078 : string = $"true; let _fix_closure_v1074 = $0"
            let v1079 : bool = Fable.Core.RustInterop.emitRustExpr v1073 v1078 
            let _run_target_args'_v1075 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1080 : string = $"true; let _fix_closure_v1074 = $0"
            let v1081 : bool = Fable.Core.RustInterop.emitRustExpr v1073 v1080 
            let _run_target_args'_v1075 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v1075 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v1075 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v1075 = false 
            #endif
#else
            let _run_target_args'_v1075 = false 
            #endif
            let v1082 : bool = _run_target_args'_v1075 
            let v1083 : string = $"true; _fix_closure_v1074 " + v1072 + "); " + v49 + " // rust.fix_closure'"
            let v1084 : bool = Fable.Core.RustInterop.emitRustExpr () v1083 
            let v1085 : string = "__future_init"
            let v1086 : _ = Fable.Core.RustInterop.emitRustExpr () v1085 
            let v1087 : string = "v1086"
            let v1088 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v1087 
            let v1089 : string = "v1088.await"
            let v1090 : Result<unit, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v1089 
            let v1091 : (rexie_Error -> std_string_String) = method99()
            (* run_target_args'
            let v1093 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1094 : string = "$0.map_err(|x| $1(x))"
            let v1095 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1090, v1091) v1094 
            let _run_target_args'_v1093 = v1095 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1096 : string = "$0.map_err(|x| $1(x))"
            let v1097 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1090, v1091) v1096 
            let _run_target_args'_v1093 = v1097 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1098 : string = "$0.map_err(|x| $1(x))"
            let v1099 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1090, v1091) v1098 
            let _run_target_args'_v1093 = v1099 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1100 : Result<unit, std_string_String> = match v1090 with Ok x -> Ok x | Error x -> Error (v1091 x)
            let _run_target_args'_v1093 = v1100 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1101 : Result<unit, std_string_String> = match v1090 with Ok x -> Ok x | Error x -> Error (v1091 x)
            let _run_target_args'_v1093 = v1101 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1102 : Result<unit, std_string_String> = match v1090 with Ok x -> Ok x | Error x -> Error (v1091 x)
            let _run_target_args'_v1093 = v1102 
            #endif
#else
            let v1103 : Result<unit, std_string_String> = match v1090 with Ok x -> Ok x | Error x -> Error (v1091 x)
            let _run_target_args'_v1093 = v1103 
            #endif
            let v1104 : Result<unit, std_string_String> = _run_target_args'_v1093 
            let v1107 : string = "true; $0?"
            let v1108 : bool = Fable.Core.RustInterop.emitRustExpr v1104 v1107 
            
            let v1110 : Result<unit, std_string_String> = Ok () 
            let v1113 : string = v49 + v50 
            let x = v1110 //
            let v1114 : _ = x
            let v1115 : unit = ()
            (* run_target_args'
            let v1116 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1117 : string = $"true; let _fix_closure_v1115 = $0"
            let v1118 : bool = Fable.Core.RustInterop.emitRustExpr v1114 v1117 
            let _run_target_args'_v1116 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1119 : string = $"true; let _fix_closure_v1115 = $0"
            let v1120 : bool = Fable.Core.RustInterop.emitRustExpr v1114 v1119 
            let _run_target_args'_v1116 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1121 : string = $"true; let _fix_closure_v1115 = $0"
            let v1122 : bool = Fable.Core.RustInterop.emitRustExpr v1114 v1121 
            let _run_target_args'_v1116 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v1116 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v1116 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v1116 = false 
            #endif
#else
            let _run_target_args'_v1116 = false 
            #endif
            let v1123 : bool = _run_target_args'_v1116 
            let v1124 : string = $"true; _fix_closure_v1115 " + v1113 + "); " + v49 + " // rust.fix_closure'"
            let v1125 : bool = Fable.Core.RustInterop.emitRustExpr () v1124 
            let v1126 : string = "__future_init"
            let v1127 : _ = Fable.Core.RustInterop.emitRustExpr () v1126 
            let v1128 : string = "v1127"
            let v1129 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v1128 
            let func1_from_result = v1129 //
            let v1130 : _ = func1_from_result
            let v1131 : string = $"true; $0 /*"
            let v1132 : bool = Fable.Core.RustInterop.emitRustExpr v1130 v1131 
            let v1133 : string = $"*/ }}); //"
            let v1134 : bool = Fable.Core.RustInterop.emitRustExpr () v1133 
            let v1135 : string = $"_func1_from_v982"
            let v1136 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1135 
            let v1137 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v1138 : (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>) = closure76(v1136)
            let v1139 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr struct (v938, v1138) v1137 
            let v1140 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = method101(v1139)
            let v1141 : string = "futures::future::try_join_all(v1140)"
            let v1142 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1141 
            let v1143 : string = "v1142.await"
            let v1144 : Result<Vec<unit>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v1143 
            let v1145 : string = "$0?"
            let v1146 : Vec<unit> = Fable.Core.RustInterop.emitRustExpr v1144 v1145 
            US34_0(v1146)
        | _ ->
            let v1148 : string = "state_core.use_requests (12) / set_state_data_action / database,request=None"
            let v1149 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1150 : bool = Fable.Core.RustInterop.emitRustExpr v1148 v1149 
            let v1151 : (unit []) = [||]
            let v1152 : string = "$0.to_vec()"
            let v1153 : Vec<unit> = Fable.Core.RustInterop.emitRustExpr v1151 v1152 
            US34_0(v1153)
    let v1167 : Result<Vec<unit>, std_string_String> =
        match v1155 with
        | US34_1(v1161) -> (* Error *)
            let v1163 : Result<Vec<unit>, std_string_String> = Error v1161 
            v1163
        | US34_0(v1156) -> (* Ok *)
            let v1158 : Result<Vec<unit>, std_string_String> = Ok v1156 
            v1158
    let v1168 : string = v49 + v50 
    let x = v1167 //
    let v1169 : _ = x
    let v1170 : unit = ()
    (* run_target_args'
    let v1171 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v1172 : string = $"true; let _fix_closure_v1170 = $0"
    let v1173 : bool = Fable.Core.RustInterop.emitRustExpr v1169 v1172 
    let _run_target_args'_v1171 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v1174 : string = $"true; let _fix_closure_v1170 = $0"
    let v1175 : bool = Fable.Core.RustInterop.emitRustExpr v1169 v1174 
    let _run_target_args'_v1171 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v1176 : string = $"true; let _fix_closure_v1170 = $0"
    let v1177 : bool = Fable.Core.RustInterop.emitRustExpr v1169 v1176 
    let _run_target_args'_v1171 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v1171 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v1171 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v1171 = false 
    #endif
#else
    let _run_target_args'_v1171 = false 
    #endif
    let v1178 : bool = _run_target_args'_v1171 
    let v1179 : string = $"true; _fix_closure_v1170 " + v1168 + "); " + v49 + " // rust.fix_closure'"
    let v1180 : bool = Fable.Core.RustInterop.emitRustExpr () v1179 
    let v1181 : string = "__future_init"
    let v1182 : _ = Fable.Core.RustInterop.emitRustExpr () v1181 
    let v1183 : string = "v1182"
    let v1184 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v1183 
    let func1_from_result = v1184 //
    let v1185 : _ = func1_from_result
    let v1186 : string = $"true; $0 /*"
    let v1187 : bool = Fable.Core.RustInterop.emitRustExpr v1185 v1186 
    let v1188 : string = $"*/ }}); //"
    let v1189 : bool = Fable.Core.RustInterop.emitRustExpr () v1188 
    let v1190 : string = $"_func1_from_v916"
    let v1191 : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1190 
    let v1192 : string = "leptos::prelude::Action::new(move |value: &std::sync::Arc<Heap4>| $0(value.clone()))"
    let v1193 : (Heap4 -> std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>) = closure77(v1191)
    let v1194 : leptos_prelude_Action<Heap4, Result<Vec<unit>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v1193 v1192 
    let v1195 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1196 : (unit -> (Result<crate_model_near_rpc_RpcResponse option, std_string_String> [])) = closure130(v0, v763, v915, v1194)
    let v1197 : leptos_prelude_ArcMemo<(Result<crate_model_near_rpc_RpcResponse option, std_string_String> [])> = Fable.Core.RustInterop.emitRustExpr v1196 v1195 
    let v1198 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1199 : (unit -> Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>) = closure134(v1, v122, v760, v1197)
    let v1200 : leptos_prelude_ArcMemo<Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>> = Fable.Core.RustInterop.emitRustExpr v1199 v1198 
    v1200
and method167 () : string =
    let v0 : string = "https://rpc.mainnet.near.org"
    v0
and closure137 () (v0 : US14) : US57 =
    US57_0(v0)
and method168 () : (US14 -> US57) =
    closure137()
and closure138 () (v0 : std_string_String) : US57 =
    US57_1(v0)
and method169 () : (std_string_String -> US57) =
    closure138()
and closure139 () (v0 : crate_model_near_rpc_RpcResponse) : US60 =
    US60_0(v0)
and method170 () : (crate_model_near_rpc_RpcResponse -> US60) =
    closure139()
and closure140 () (v0 : std_string_String) : US60 =
    US60_1(v0)
and method171 () : (std_string_String -> US60) =
    closure140()
and method172 (v0 : Func0<Heap6, std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>>) : Func0<Heap6, std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>> =
    v0
and closure141 (v0 : Func0<Heap6, std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>>) (v1 : Heap6) : std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>> =
    let v2 : Func0<Heap6, std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>> = method172(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure144 () (v0 : US59) : US58 =
    US58_0(v0)
and method174 () : (US59 -> US58) =
    closure144()
and closure145 () (v0 : std_string_String) : US58 =
    US58_1(v0)
and method175 () : (std_string_String -> US58) =
    closure145()
and closure143 () (v0 : Result<US59, std_string_String>) : US58 =
    let v1 : (US59 -> US58) = method174()
    let v2 : (std_string_String -> US58) = method175()
    let v4 : US58 = match v0 with Ok x -> v1 x | Error x -> v2 x
    v4
and method173 () : (Result<US59, std_string_String> -> US58) =
    closure143()
and closure146 () (v0 : US58) : US62 =
    US62_0(v0)
and method176 () : (US58 -> US62) =
    closure146()
and closure142 (v0 : leptos_prelude_ArcAction<Heap6, Result<US59, std_string_String>>) () : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> =
    let v1 : string = "leptos::prelude::ArcAction::value(&$0)"
    let v2 : leptos_prelude_ArcRwSignal<Result<US59, std_string_String> option> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v4 : Result<US59, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v7 : (Result<US59, std_string_String> -> US58) = method173()
    let v8 : US58 option = v4 |> Option.map v7 
    let v33 : (US58 -> US62) = method176()
    let v34 : US62 option = v8 |> Option.map v33 
    let v54 : US62 = US62_1
    let v55 : US62 = v34 |> Option.defaultValue v54 
    let v76 : US58 =
        match v55 with
        | US62_0(v59) -> (* Some *)
            match v59 with
            | US58_1(v60) -> (* Error *)
                US58_1(v60)
            | US58_0(v62) -> (* Ok *)
                match v62 with
                | US59_0(v63, v64, v65, v66) -> (* Some *)
                    let v67 : US59 = US59_0(v63, v64, v65, v66)
                    US58_0(v67)
                | _ ->
                    let v69 : US59 = US59_1
                    US58_0(v69)
        | _ ->
            let v74 : US59 = US59_1
            US58_0(v74)
    let v96 : US63 =
        match v76 with
        | US58_1(v93) -> (* Error *)
            US63_1(v93)
        | US58_0(v77) -> (* Ok *)
            let v91 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option =
                match v77 with
                | US59_1 -> (* None *)
                    let v87 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option = None
                    v87
                | US59_0(v78, v79, v80, v81) -> (* Some *)
                    let v83 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option = Some struct (v78, v79, v80, v81) 
                    v83
            US63_0(v91)
    let v108 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> =
        match v96 with
        | US63_1(v102) -> (* Error *)
            let v104 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = Error v102 
            v104
        | US63_0(v97) -> (* Ok *)
            let v99 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = Ok v97 
            v99
    let v110 : string = $"%A{v108}"
    let v113 : string = "dice_view.render (x) / roll new_arc_memo / result: " + string v110 + ""
    let v114 : int64 = 200L
    let v115 : string = method8(v114, v113)
    let v116 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v117 : bool = Fable.Core.RustInterop.emitRustExpr v115 v116 
    v108
and closure148 () (v0 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option) : US63 =
    US63_0(v0)
and method177 () : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option -> US63) =
    closure148()
and closure149 () (v0 : std_string_String) : US63 =
    US63_1(v0)
and method178 () : (std_string_String -> US63) =
    closure149()
and closure150 () struct (v0 : std_string_String, v1 : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option, v2 : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option, v3 : std_string_String option) : US59 =
    US59_0(v0, v1, v2, v3)
and method179 () : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) -> US59) =
    closure150()
and closure151 () struct (v0 : std_string_String, v1 : std_string_String, v2 : struct (std_string_String option * std_string_String option) option, v3 : int32, v4 : std_string_String, v5 : std_string_String) : US64 =
    US64_0(v0, v1, v2, v3, v4, v5)
and method180 () : (struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) -> US64) =
    closure151()
and closure147 (v0 : leptos_prelude_ArcMemo<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>) () : string option =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option -> US63) = method177()
    let v4 : (std_string_String -> US63) = method178()
    let v6 : US63 = match v2 with Ok x -> v3 x | Error x -> v4 x
    let v45 : US58 =
        match v6 with
        | US63_1(v42) -> (* Error *)
            US58_1(v42)
        | US63_0(v9) -> (* Ok *)
            let v12 : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) -> US59) = method179()
            let v13 : US59 option = v9 |> Option.map v12 
            let v36 : US59 = US59_1
            let v37 : US59 = v13 |> Option.defaultValue v36 
            US58_0(v37)
    let v97 : US31 =
        match v45 with
        | US58_0(v46) -> (* Ok *)
            match v46 with
            | US59_0(v47, v48, v49, v50) -> (* Some *)
                let v53 : (struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) -> US64) = method180()
                let v54 : US64 option = v49 |> Option.map v53 
                let v79 : US64 = US64_1
                let v80 : US64 = v54 |> Option.defaultValue v79 
                match v80 with
                | US64_0(v84, v85, v86, v87, v88, v89) -> (* Some *)
                    let v90 : string = string v84 + ": " + string v88 + " - " + string v89 + " (" + string v85 + ")"
                    US31_0(v90)
                | _ ->
                    US31_1
            | _ ->
                US31_1
        | _ ->
            US31_1
    let v108 : string option =
        match v97 with
        | US31_1 -> (* None *)
            let v104 : string option = None
            v104
        | US31_0(v98) -> (* Some *)
            let v100 : string option = Some v98 
            v100
    let v110 : string = $"%A{v108}"
    let v113 : string = "dice_view.render (x) / error_message new_arc_memo / result: " + string v110 + ""
    let v114 : int64 = 200L
    let v115 : string = method8(v114, v113)
    let v116 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v117 : bool = Fable.Core.RustInterop.emitRustExpr v115 v116 
    v108
and closure152 (v0 : Heap2) () : US31 =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<Heap0> = v5.l3
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : Heap0 = Fable.Core.RustInterop.emitRustExpr v6 v7 
    let v9 : std_string_String option = v8.l1
    let v12 : (std_string_String -> US14) = method39()
    let v13 : US14 option = v9 |> Option.map v12 
    let v33 : US14 = US14_1
    let v34 : US14 = v13 |> Option.defaultValue v33 
    match v34 with
    | US14_1 -> (* None *)
        US31_1
    | US14_0(v38) -> (* Some *)
        let v39 : string = "fable_library_rust::String_::fromString($0)"
        let v40 : string = Fable.Core.RustInterop.emitRustExpr v38 v39 
        US31_0(v40)
and method181 (v0 : Func0<(bool * std_string_String), struct (bool * std_string_String)>) : Func0<(bool * std_string_String), struct (bool * std_string_String)> =
    v0
and closure154 (v0 : Func0<(bool * std_string_String), struct (bool * std_string_String)>) (v1 : (bool * std_string_String)) : struct (bool * std_string_String) =
    let v2 : Func0<(bool * std_string_String), struct (bool * std_string_String)> = method181(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : bool, v6 : std_string_String) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6)
and method182 (v0 : Func0<struct (bool * std_string_String), std_string_String>) : Func0<struct (bool * std_string_String), std_string_String> =
    v0
and closure155 (v0 : Func0<struct (bool * std_string_String), std_string_String>) struct (v1 : bool, v2 : std_string_String) : std_string_String =
    let v3 : Func0<struct (bool * std_string_String), std_string_String> = method182(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let v6 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4 v5 
    v6
and closure157 (v0 : int32) (v1 : std_string_String) : (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)) =
    let v2 : string = $"leptos::prelude::signal($0)"
    let struct (v3 : leptos_prelude_ReadSignal<std_string_String>, v4 : leptos_prelude_WriteSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v6 : (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)) = v0, struct (v3, v4) 
    v6
and closure156 () (v0 : int32) : (std_string_String -> (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))) =
    closure157(v0)
and method183 () : (int32 -> (std_string_String -> (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)))) =
    closure156()
and method184 (v0 : Vec<std_string_String>) : Vec<std_string_String> =
    v0
and closure153 (v0 : Heap2) () : Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))> =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<Heap0> = v5.l3
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : Heap0 = Fable.Core.RustInterop.emitRustExpr v6 v7 
    let v9 : Vec<(bool * std_string_String)> = v8.l0
    let v10 : unit = ()
    let v11 : string = $"true; let _func1_from_v10 = Func1::from(move |value| {{ //"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr () v11 
    let v13 : string = $"value"
    let v14 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr () v13 
    let (a, b) = v14 
    let v17 : bool = a
    let v18 : std_string_String = b
    let func1_from_result = struct (v17, v18) //
    let v23 : _ = func1_from_result
    let v24 : string = $"true; $0 /*"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr v23 v24 
    let v26 : string = $"*/ }}); //"
    let v27 : bool = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : string = $"_func1_from_v10"
    let v29 : Func0<(bool * std_string_String), struct (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v28 
    let v30 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v31 : ((bool * std_string_String) -> struct (bool * std_string_String)) = closure154(v29)
    let v32 : Vec<struct (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v9, v31) v30 
    let v33 : (struct (bool * std_string_String) -> bool) = method55()
    let v34 : Vec<struct (bool * std_string_String)> = method56(v32)
    let v35 : string = "v34.into_iter().filter(|x| v33(x.clone().clone())).collect::<Vec<_>>()"
    let v36 : Vec<struct (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v35 
    let v37 : unit = ()
    let v38 : string = $"true; let _func1_from_v37 = Func1::from(move |value| {{ //"
    let v39 : bool = Fable.Core.RustInterop.emitRustExpr () v38 
    let v40 : string = $"value"
    let struct (v41 : bool, v42 : std_string_String) = Fable.Core.RustInterop.emitRustExpr () v40 
    let func1_from_result = v42 //
    let v43 : _ = func1_from_result
    let v44 : string = $"true; $0 /*"
    let v45 : bool = Fable.Core.RustInterop.emitRustExpr v43 v44 
    let v46 : string = $"*/ }}); //"
    let v47 : bool = Fable.Core.RustInterop.emitRustExpr () v46 
    let v48 : string = $"_func1_from_v37"
    let v49 : Func0<struct (bool * std_string_String), std_string_String> = Fable.Core.RustInterop.emitRustExpr () v48 
    let v50 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v51 : (struct (bool * std_string_String) -> std_string_String) = closure155(v49)
    let v52 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v36, v51) v50 
    let v53 : (int32 -> (std_string_String -> (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)))) = method183()
    let v54 : Vec<std_string_String> = method184(v52)
    let v55 : string = "v54.iter().enumerate().map(|(i, x)| v53(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v56 : Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))> = Fable.Core.RustInterop.emitRustExpr () v55 
    v56
and method185 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)), struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)>) : Func0<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)), struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)> =
    v0
and closure159 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)), struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)>) (v1 : (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))) : struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>) =
    let v2 : Func0<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)), struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)> = method185(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : int32, v6 : leptos_prelude_ReadSignal<std_string_String>, v7 : leptos_prelude_WriteSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7)
and method186 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>), struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>) : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>), struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> =
    v0
and closure160 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>), struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>) struct (v1 : int32, v2 : leptos_prelude_ReadSignal<std_string_String>, v3 : leptos_prelude_WriteSignal<std_string_String>) : struct (int32 * leptos_prelude_ReadSignal<std_string_String>) =
    let v4 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>), struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> = method186(v0)
    let func1_move_x = struct (v1, v2, v3) //
    let v5 : _ = func1_move_x
    let v6 : string = "(move |x| v4(x))($0)"
    let struct (v7 : int32, v8 : leptos_prelude_ReadSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr v5 v6 
    struct (v7, v8)
and closure158 (v0 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))>>) () : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let v7 : (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)) = Fable.Core.RustInterop.emitRustExpr () v6 
    let (a, b) = v7 
    let v11 : int32 = a
    let struct (v12 : leptos_prelude_ReadSignal<std_string_String>, v13 : leptos_prelude_WriteSignal<std_string_String>) = b
    let func1_from_result = struct (v11, v12, v13) //
    let v20 : _ = func1_from_result
    let v21 : string = $"true; $0 /*"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : string = $"*/ }}); //"
    let v24 : bool = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : string = $"_func1_from_v3"
    let v26 : Func0<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)), struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr () v25 
    let v27 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v28 : ((int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)) -> struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)) = closure159(v26)
    let v29 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr struct (v2, v28) v27 
    let v30 : unit = ()
    let v31 : string = $"true; let _func1_from_v30 = Func1::from(move |value| {{ //"
    let v32 : bool = Fable.Core.RustInterop.emitRustExpr () v31 
    let v33 : string = $"value"
    let struct (v34 : int32, v35 : leptos_prelude_ReadSignal<std_string_String>, v36 : leptos_prelude_WriteSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr () v33 
    let func1_from_result = struct (v34, v35) //
    let v37 : _ = func1_from_result
    let v38 : string = $"true; $0 /*"
    let v39 : bool = Fable.Core.RustInterop.emitRustExpr v37 v38 
    let v40 : string = $"*/ }}); //"
    let v41 : bool = Fable.Core.RustInterop.emitRustExpr () v40 
    let v42 : string = $"_func1_from_v30"
    let v43 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>), struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr () v42 
    let v44 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v45 : (struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>) -> struct (int32 * leptos_prelude_ReadSignal<std_string_String>)) = closure160(v43)
    let v46 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr struct (v29, v45) v44 
    v46
and closure161 () () : string =
    let v0 : string = ""
    v0
and closure162 () () : bool =
    true
and closure163 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure164 () () : Ref<Lifetime<StaticLifetime, Str>> =
    let v0 : string = ""
    let v1 : string = "r#\"" + v0 + "\"#"
    let v2 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v1 
    v2
and closure165 () () : string =
    let v0 : string = "Roll"
    v0
and method187 () : (unit -> string) =
    closure165()
and closure166 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and closure168 () () : string =
    let v0 : string = "[align-self:flex-start]"
    v0
and closure169 () () : bool =
    false
and closure170 () () : string =
    let v0 : string = "py-[4px]"
    v0
and closure171 (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option, v1 : leptos_prelude_ArcMemo<US31> option, v2 : Heap2) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v3 : string = ""
    let v4 : string = "r#\"" + v3 + "\"#"
    let v5 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v4 
    v5
and closure173 () (v0 : leptos_prelude_ArcMemo<US31>) : US65 =
    US65_0(v0)
and method189 () : (leptos_prelude_ArcMemo<US31> -> US65) =
    closure173()
and closure172 (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option, v1 : leptos_prelude_ArcMemo<US31> option, v2 : Heap2) () : string =
    let v5 : (leptos_prelude_ArcMemo<US31> -> US65) = method189()
    let v6 : US65 option = v1 |> Option.map v5 
    let v26 : US65 = US65_1
    let v27 : US65 = v6 |> Option.defaultValue v26 
    let v37 : US42 =
        match v27 with
        | US65_1 -> (* None *)
            US42_1
        | US65_0(v31) -> (* Some *)
            let v32 : string = $"leptos::prelude::ArcMemo::get(&$0)"
            let v33 : US31 = Fable.Core.RustInterop.emitRustExpr v31 v32 
            US42_0(v33)
    let v44 : US31 =
        match v37 with
        | US42_0(v38) -> (* Some *)
            match v38 with
            | US31_0(v39) -> (* Some *)
                US31_0(v39)
            | _ ->
                US31_1
        | _ ->
            US31_1
    match v44 with
    | US31_1 -> (* None *)
        let v46 : string = "Select..."
        v46
    | US31_0(v45) -> (* Some *)
        v45
and method188 (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option, v1 : leptos_prelude_ArcMemo<US31> option, v2 : Heap2) : (unit -> string) =
    closure172(v0, v1, v2)
and closure175 () (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>>) : US66 =
    US66_0(v0)
and method190 () : (leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> -> US66) =
    closure175()
and method192 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32>) : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32> =
    v0
and closure176 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32>) struct (v1 : int32, v2 : leptos_prelude_ReadSignal<std_string_String>) : int32 =
    let v3 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32> = method192(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let v6 : int32 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    v6
and method191 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32>) : (struct (int32 * leptos_prelude_ReadSignal<std_string_String>) -> int32) =
    closure176(v0)
and method193 (v0 : std_string_String) : std_string_String =
    v0
and closure177 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and method194 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), leptos_prelude_AnyView_>) : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), leptos_prelude_AnyView_> =
    v0
and closure178 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), leptos_prelude_AnyView_>) struct (v1 : int32, v2 : leptos_prelude_ReadSignal<std_string_String>) : leptos_prelude_AnyView_ =
    let v3 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), leptos_prelude_AnyView_> = method194(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let v6 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4 v5 
    v6
and closure174 (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option, v1 : leptos_prelude_ArcMemo<US31> option, v2 : Heap2) () : leptos_dom_Fragment =
    let v3 : string = "class=\"flex flex-1 flex-col p-[10px] gap-[7px] [border-left-width:1px] [border-bottom-width:1px] border-gray-200 bg-gray-100\""
    let v4 : string = ""
    let v5 : string = " " + v3 + v4 + ""
    let v8 : (leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> -> US66) = method190()
    let v9 : US66 option = v0 |> Option.map v8 
    let v29 : US66 = US66_1
    let v30 : US66 = v9 |> Option.defaultValue v29 
    let v40 : US67 =
        match v30 with
        | US66_1 -> (* None *)
            US67_1
        | US66_0(v34) -> (* Some *)
            let v35 : string = $"leptos::prelude::ArcMemo::get(&$0)"
            let v36 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr v34 v35 
            US67_0(v36)
    let v41 : (struct (int32 * leptos_prelude_ReadSignal<std_string_String>) []) = [||]
    let v42 : string = "$0.to_vec()"
    let v43 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr v41 v42 
    let v46 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> =
        match v40 with
        | US67_1 -> (* None *)
            v43
        | US67_0(v44) -> (* Some *)
            v44
    let v47 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v48 : (struct (int32 * leptos_prelude_ReadSignal<std_string_String>) []) = Fable.Core.RustInterop.emitRustExpr v46 v47 
    let v49 : uint64 = System.Convert.ToUInt64 v48.Length
    let v50 : bool = v49 = 0UL
    let v871 : leptos_dom_Fragment =
        if v50 then
            let v51 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
            let v52 : string = " " + v51 + v4 + ""
            let v53 : string = "class=\"[height:17px]\""
            let v54 : string = " " + v53 + v4 + ""
            let v55 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v56 : string = "fill=\"none\""
            let v57 : string = "height=\"100%\""
            let v58 : string = "viewBox=\"0 0 24 24\""
            let v59 : string = "stroke-width=\"1.5\""
            let v60 : string = "stroke=\"currentColor\""
            let v61 : string = "class=\"text-red-700\""
            let v62 : string = " " + v55 + v4 + ""
            let v63 : string = " " + v56 + v62 + ""
            let v64 : string = " " + v57 + v63 + ""
            let v65 : string = " " + v58 + v64 + ""
            let v66 : string = " " + v59 + v65 + ""
            let v67 : string = " " + v60 + v66 + ""
            let v68 : string = " " + v61 + v67 + ""
            let v69 : string = "stroke-linecap=\"round\""
            let v70 : string = "stroke-linejoin=\"round\""
            let v71 : string = "d=\"M6 18L18 6M6 6l12 12\""
            let v72 : string = " " + v69 + v4 + ""
            let v73 : string = " " + v70 + v72 + ""
            let v74 : string = " " + v71 + v73 + ""
            let v75 : string = "vec![" + v4 + "]"
            let v76 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v75 
            let v77 : string = "leptos::prelude::Fragment::new($0)"
            let v78 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v76 v77 
            let v79 : string = "leptos::prelude::AnyView::from($0)"
            let v80 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v78 v79 
            let v81 : string = "path"
            let v82 : string = "<" + v81 + " " + v74 + ">move || { v80 }</" + v81 + ">"
            let v83 : string = "leptos::prelude::view! { " + v82 + " }"
            let v84 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v83 
            let v85 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v84 |> unbox
            let v86 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v87 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v85 v86 
            let v88 : string = "v87"
            let v89 : string = v88 + v4 
            let v90 : string = v89 + v4 
            let v91 : string = "vec![" + v90 + "]"
            let v92 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v91 
            let v93 : string = "leptos::prelude::Fragment::new($0)"
            let v94 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v92 v93 
            let v95 : string = "leptos::prelude::AnyView::from($0)"
            let v96 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v94 v95 
            let v97 : string = "svg"
            let v98 : string = "<" + v97 + " " + v68 + ">move || { v96 }</" + v97 + ">"
            let v99 : string = "leptos::prelude::view! { " + v98 + " }"
            let v100 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v99 
            let v101 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v100 |> unbox
            let v102 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v103 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v101 v102 
            let v104 : string = "v103"
            let v105 : string = v104 + v4 
            let v106 : string = v105 + v4 
            let v107 : string = "vec![" + v106 + "]"
            let v108 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v107 
            let v109 : string = "leptos::prelude::Fragment::new($0)"
            let v110 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v108 v109 
            let v111 : string = "leptos::prelude::AnyView::from($0)"
            let v112 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v110 v111 
            let v113 : string = "span"
            let v114 : string = "<" + v113 + " " + v54 + ">move || { v112 }</" + v113 + ">"
            let v115 : string = "leptos::prelude::view! { " + v114 + " }"
            let v116 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v115 
            let v117 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v116 |> unbox
            let v118 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v119 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v117 v118 
            let v120 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
            let v121 : string = " " + v120 + v4 + ""
            let v122 : string = "No data"
            (* run_target_args'
            let v127 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v128 : string = "&*$0"
            let v129 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v122 v128 
            let _run_target_args'_v127 = v129 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v130 : string = "&*$0"
            let v131 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v122 v130 
            let _run_target_args'_v127 = v131 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v132 : string = "&*$0"
            let v133 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v122 v132 
            let _run_target_args'_v127 = v133 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v135 : Ref<Str> = v122 |> unbox<Ref<Str>>
            let _run_target_args'_v127 = v135 
            #endif
#if FABLE_COMPILER_PYTHON
            let v139 : Ref<Str> = v122 |> unbox<Ref<Str>>
            let _run_target_args'_v127 = v139 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v143 : Ref<Str> = v122 |> unbox<Ref<Str>>
            let _run_target_args'_v127 = v143 
            #endif
#else
            let v147 : Ref<Str> = v122 |> unbox<Ref<Str>>
            let _run_target_args'_v127 = v147 
            #endif
            let v150 : Ref<Str> = _run_target_args'_v127 
            (* run_target_args'
            let v163 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v164 : string = "String::from($0)"
            let v165 : std_string_String = Fable.Core.RustInterop.emitRustExpr v150 v164 
            let _run_target_args'_v163 = v165 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v166 : string = "String::from($0)"
            let v167 : std_string_String = Fable.Core.RustInterop.emitRustExpr v150 v166 
            let _run_target_args'_v163 = v167 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v168 : string = "String::from($0)"
            let v169 : std_string_String = Fable.Core.RustInterop.emitRustExpr v150 v168 
            let _run_target_args'_v163 = v169 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v171 : std_string_String = v150 |> unbox<std_string_String>
            let _run_target_args'_v163 = v171 
            #endif
#if FABLE_COMPILER_PYTHON
            let v175 : std_string_String = v150 |> unbox<std_string_String>
            let _run_target_args'_v163 = v175 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v179 : std_string_String = v150 |> unbox<std_string_String>
            let _run_target_args'_v163 = v179 
            #endif
#else
            let v183 : std_string_String = v150 |> unbox<std_string_String>
            let _run_target_args'_v163 = v183 
            #endif
            let v186 : std_string_String = _run_target_args'_v163 
            let v195 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v196 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v186 v195 
            let v197 : string = "v196"
            let v198 : string = v197 + v4 
            let v199 : string = v198 + v4 
            let v200 : string = "vec![" + v199 + "]"
            let v201 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v200 
            let v202 : string = "leptos::prelude::Fragment::new($0)"
            let v203 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v201 v202 
            let v204 : string = "leptos::prelude::AnyView::from($0)"
            let v205 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v203 v204 
            let v206 : string = "pre"
            let v207 : string = "<" + v206 + " " + v121 + ">move || { v205 }</" + v206 + ">"
            let v208 : string = "leptos::prelude::view! { " + v207 + " }"
            let v209 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v208 
            let v210 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v209 |> unbox
            let v211 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v212 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v210 v211 
            let v213 : string = "v212"
            let v214 : string = v213 + v4 
            let v215 : string = v214 + v4 
            let v216 : string = "v119"
            let v217 : string = ", "
            let v218 : string = v216 + v217 
            let v219 : string = v218 + v215 
            let v220 : string = "vec![" + v219 + "]"
            let v221 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v220 
            let v222 : string = "leptos::prelude::Fragment::new($0)"
            let v223 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v221 v222 
            let v224 : string = "leptos::prelude::AnyView::from($0)"
            let v225 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v223 v224 
            let v226 : string = "div"
            let v227 : string = "<" + v226 + " " + v52 + ">move || { v225 }</" + v226 + ">"
            let v228 : string = "leptos::prelude::view! { " + v227 + " }"
            let v229 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v228 
            let v230 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v229 |> unbox
            let v231 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v232 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v230 v231 
            let v233 : string = "v232"
            let v234 : string = v233 + v4 
            let v235 : string = v234 + v4 
            let v236 : string = "vec![" + v235 + "]"
            let v237 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v236 
            let v238 : string = "leptos::prelude::Fragment::new($0)"
            let v239 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v237 v238 
            v239
        else
            let v242 : (leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> -> US66) = method190()
            let v243 : US66 option = v0 |> Option.map v242 
            let v263 : US66 = US66_1
            let v264 : US66 = v243 |> Option.defaultValue v263 
            match v264 with
            | US66_1 -> (* None *)
                let v865 : string = "vec![" + v4 + "]"
                let v866 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v865 
                let v867 : string = "leptos::prelude::Fragment::new($0)"
                let v868 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v866 v867 
                v868
            | US66_0(v268) -> (* Some *)
                let v269 : string = "$0"
                let v270 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> = Fable.Core.RustInterop.emitRustExpr v268 v269 
                let v271 : unit = ()
                let v272 : string = $"true; let _func1_from_v271 = Func1::from(move |value| {{ //"
                let v273 : bool = Fable.Core.RustInterop.emitRustExpr () v272 
                let v274 : string = $"value"
                let struct (v275 : int32, v276 : leptos_prelude_ReadSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr () v274 
                let func1_from_result = v275 //
                let v277 : _ = func1_from_result
                let v278 : string = $"true; $0 /*"
                let v279 : bool = Fable.Core.RustInterop.emitRustExpr v277 v278 
                let v280 : string = $"*/ }}); //"
                let v281 : bool = Fable.Core.RustInterop.emitRustExpr () v280 
                let v282 : string = $"_func1_from_v271"
                let v283 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32> = Fable.Core.RustInterop.emitRustExpr () v282 
                let v284 : (struct (int32 * leptos_prelude_ReadSignal<std_string_String>) -> int32) = method191(v283)
                let v285 : unit = ()
                let v286 : string = $"true; let _func1_from_v285 = Func1::from(move |value| {{ //"
                let v287 : bool = Fable.Core.RustInterop.emitRustExpr () v286 
                let v288 : string = $"value"
                let struct (v289 : int32, v290 : leptos_prelude_ReadSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr () v288 
                let v291 : string = $"leptos::prelude::ReadSignal::get(&$0)"
                let v292 : std_string_String = Fable.Core.RustInterop.emitRustExpr v290 v291 
                let v293 : std_string_String = method193(v292)
                let v294 : unit = ()
                let v295 : string = $"true; let _func0_from_v294 = Func0::from(move || {{ //"
                let v296 : bool = Fable.Core.RustInterop.emitRustExpr () v295 
                let v297 : string = "fable_library_rust::String_::fromString($0)"
                let v298 : string = Fable.Core.RustInterop.emitRustExpr v292 v297 
                let v299 : leptos_prelude_ArcRwSignal<Heap1> = v2.l0
                let v300 : string = "Box::pin($0)"
                let v301 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v299 v300 
                let v302 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                let v303 : Heap1 = Fable.Core.RustInterop.emitRustExpr v301 v302 
                let v304 : leptos_prelude_ArcRwSignal<Heap0> = v303.l3
                let v305 : string = "Box::pin($0)"
                let v306 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v304 v305 
                let v307 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                let v308 : Heap0 = Fable.Core.RustInterop.emitRustExpr v306 v307 
                let v309 : Vec<(bool * std_string_String)> = v308.l0
                let v310 : std_string_String option = v308.l1
                let v311 : int32 = v308.l2
                let v312 : int32 = v308.l3
                let v313 : US1 = v308.l4
                let v314 : leptos_prelude_ArcRwSignal<Heap1> = v2.l0
                let v315 : string = "Box::pin($0)"
                let v316 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v314 v315 
                let v317 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                let v318 : Heap1 = Fable.Core.RustInterop.emitRustExpr v316 v317 
                let v319 : leptos_prelude_ArcRwSignal<Heap0> = v318.l3
                (* run_target_args'
                let v324 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v325 : string = "&*$0"
                let v326 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v298 v325 
                let _run_target_args'_v324 = v326 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v327 : string = "&*$0"
                let v328 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v298 v327 
                let _run_target_args'_v324 = v328 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v329 : string = "&*$0"
                let v330 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v298 v329 
                let _run_target_args'_v324 = v330 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v332 : Ref<Str> = v298 |> unbox<Ref<Str>>
                let _run_target_args'_v324 = v332 
                #endif
#if FABLE_COMPILER_PYTHON
                let v336 : Ref<Str> = v298 |> unbox<Ref<Str>>
                let _run_target_args'_v324 = v336 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v340 : Ref<Str> = v298 |> unbox<Ref<Str>>
                let _run_target_args'_v324 = v340 
                #endif
#else
                let v344 : Ref<Str> = v298 |> unbox<Ref<Str>>
                let _run_target_args'_v324 = v344 
                #endif
                let v347 : Ref<Str> = _run_target_args'_v324 
                (* run_target_args'
                let v360 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v361 : string = "String::from($0)"
                let v362 : std_string_String = Fable.Core.RustInterop.emitRustExpr v347 v361 
                let _run_target_args'_v360 = v362 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v363 : string = "String::from($0)"
                let v364 : std_string_String = Fable.Core.RustInterop.emitRustExpr v347 v363 
                let _run_target_args'_v360 = v364 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v365 : string = "String::from($0)"
                let v366 : std_string_String = Fable.Core.RustInterop.emitRustExpr v347 v365 
                let _run_target_args'_v360 = v366 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v368 : std_string_String = v347 |> unbox<std_string_String>
                let _run_target_args'_v360 = v368 
                #endif
#if FABLE_COMPILER_PYTHON
                let v372 : std_string_String = v347 |> unbox<std_string_String>
                let _run_target_args'_v360 = v372 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v376 : std_string_String = v347 |> unbox<std_string_String>
                let _run_target_args'_v360 = v376 
                #endif
#else
                let v380 : std_string_String = v347 |> unbox<std_string_String>
                let _run_target_args'_v360 = v380 
                #endif
                let v383 : std_string_String = _run_target_args'_v360 
                let v393 : std_string_String option = Some v383 
                let v396 : Heap0 = {l0 = v309; l1 = v393; l2 = v311; l3 = v312; l4 = v313} : Heap0
                let v397 : string = $"true; leptos::prelude::ArcRwSignal::set(&$0, $1); //"
                let v398 : bool = Fable.Core.RustInterop.emitRustExpr struct (v319, v396) v397 
                // rust.func0_from / is_unit
                let v399 : string = $"true; /*"
                let v400 : bool = Fable.Core.RustInterop.emitRustExpr () v399 
                let v401 : string = $"*/ }}); //"
                let v402 : bool = Fable.Core.RustInterop.emitRustExpr () v401 
                let v403 : string = $"_func0_from_v294"
                let v404 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v403 
                let v405 : string = "flex"
                let v406 : string = "flex-1"
                let v407 : string = "gap-[10px]"
                let v408 : string = "[align-items:center]"
                let v409 : string = "[justify-content:center]"
                let v410 : string = "inline-block"
                let v411 : string = "rounded"
                let v412 : string = "border"
                let v413 : string = "border-gray-400"
                let v414 : string = "hover:bg-gray-100"
                let v415 : string = "px-[22px]"
                let v416 : string = "py-1"
                let v417 : string = "text-sm"
                let v418 : string = "text-gray-900"
                let v419 : string = "bg-gray-200"
                let v420 : string = "hover:text-gray-600"
                let v421 : string = "focus:outline-none"
                let v422 : string = "focus:ring"
                let v423 : string = "active:text-gray-500"
                let v424 : string list = []
                let v426 : string list = v423 :: v424 
                let v430 : string list = v422 :: v426 
                let v434 : string list = v421 :: v430 
                let v438 : string list = v420 :: v434 
                let v442 : string list = v419 :: v438 
                let v446 : string list = v418 :: v442 
                let v450 : string list = v417 :: v446 
                let v454 : string list = v416 :: v450 
                let v458 : string list = v415 :: v454 
                let v462 : string list = v414 :: v458 
                let v466 : string list = v413 :: v462 
                let v470 : string list = v412 :: v466 
                let v474 : string list = v411 :: v470 
                let v478 : string list = v410 :: v474 
                let v482 : string list = v409 :: v478 
                let v486 : string list = v408 :: v482 
                let v490 : string list = v407 :: v486 
                let v494 : string list = v406 :: v490 
                let v498 : string list = v405 :: v494 
                let v505 : unit = ()
                let _let'_v505 =
                    seq {
                        yield! v498 
                        (* indent
                        ()
                    indent *)
                    }
                    (* indent
                    ()
                indent *)
                let v508 : string seq = _let'_v505 
                let v516 : (string -> (string seq -> string)) = String.concat
                let v517 : string = " "
                let v518 : (string seq -> string) = v516 v517
                let v519 : string = v518 v508
                (* run_target_args'
                let v526 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v527 : string = "&*$0"
                let v528 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v519 v527 
                let _run_target_args'_v526 = v528 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v529 : string = "&*$0"
                let v530 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v519 v529 
                let _run_target_args'_v526 = v530 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v531 : string = "&*$0"
                let v532 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v519 v531 
                let _run_target_args'_v526 = v532 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v534 : Ref<Str> = v519 |> unbox<Ref<Str>>
                let _run_target_args'_v526 = v534 
                #endif
#if FABLE_COMPILER_PYTHON
                let v538 : Ref<Str> = v519 |> unbox<Ref<Str>>
                let _run_target_args'_v526 = v538 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v542 : Ref<Str> = v519 |> unbox<Ref<Str>>
                let _run_target_args'_v526 = v542 
                #endif
#else
                let v546 : Ref<Str> = v519 |> unbox<Ref<Str>>
                let _run_target_args'_v526 = v546 
                #endif
                let v549 : Ref<Str> = _run_target_args'_v526 
                (* run_target_args'
                let v562 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v563 : string = "String::from($0)"
                let v564 : std_string_String = Fable.Core.RustInterop.emitRustExpr v549 v563 
                let _run_target_args'_v562 = v564 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v565 : string = "String::from($0)"
                let v566 : std_string_String = Fable.Core.RustInterop.emitRustExpr v549 v565 
                let _run_target_args'_v562 = v566 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v567 : string = "String::from($0)"
                let v568 : std_string_String = Fable.Core.RustInterop.emitRustExpr v549 v567 
                let _run_target_args'_v562 = v568 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v570 : std_string_String = v549 |> unbox<std_string_String>
                let _run_target_args'_v562 = v570 
                #endif
#if FABLE_COMPILER_PYTHON
                let v574 : std_string_String = v549 |> unbox<std_string_String>
                let _run_target_args'_v562 = v574 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v578 : std_string_String = v549 |> unbox<std_string_String>
                let _run_target_args'_v562 = v578 
                #endif
#else
                let v582 : std_string_String = v549 |> unbox<std_string_String>
                let _run_target_args'_v562 = v582 
                #endif
                let v585 : std_string_String = _run_target_args'_v562 
                let v594 : string = "$0"
                let v595 : std_string_String = Fable.Core.RustInterop.emitRustExpr v585 v594 
                let v596 : string = "class=v595"
                let v597 : string = "on:click=move |_| v404()"
                let v598 : string = "aria-label=v293"
                let v599 : string = " " + v596 + v4 + ""
                let v600 : string = " " + v597 + v599 + ""
                let v601 : string = " " + v598 + v600 + ""
                let v602 : string = "fable_library_rust::String_::fromString($0)"
                let v603 : string = Fable.Core.RustInterop.emitRustExpr v292 v602 
                let v606 : (leptos_prelude_ArcMemo<US31> -> US65) = method189()
                let v607 : US65 option = v1 |> Option.map v606 
                let v627 : US65 = US65_1
                let v628 : US65 = v607 |> Option.defaultValue v627 
                let v638 : US42 =
                    match v628 with
                    | US65_1 -> (* None *)
                        US42_1
                    | US65_0(v632) -> (* Some *)
                        let v633 : string = $"leptos::prelude::ArcMemo::get(&$0)"
                        let v634 : US31 = Fable.Core.RustInterop.emitRustExpr v632 v633 
                        US42_0(v634)
                let v645 : US31 =
                    match v638 with
                    | US42_0(v639) -> (* Some *)
                        match v639 with
                        | US31_0(v640) -> (* Some *)
                            US31_0(v640)
                        | _ ->
                            US31_1
                    | _ ->
                        US31_1
                let v734 : leptos_prelude_AnyView_ =
                    match v645 with
                    | US31_0(v646) -> (* Some *)
                        let v647 : bool = v603 = v646
                        if v647 then
                            let v648 : string = "$0"
                            let v649 : (unit -> string) = closure177()
                            let v650 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v649 v648 
                            let v651 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                            let v652 : string = "fill=\"none\""
                            let v653 : string = "viewBox=\"0 0 24 24\""
                            let v654 : string = "stroke-width=\"1.5\""
                            let v655 : string = "stroke=\"currentColor\""
                            let v656 : string = "class=move || \" \".to_owned() + &v650(())"
                            let v657 : string = " " + v651 + v4 + ""
                            let v658 : string = " " + v652 + v657 + ""
                            let v659 : string = " " + v653 + v658 + ""
                            let v660 : string = " " + v654 + v659 + ""
                            let v661 : string = " " + v655 + v660 + ""
                            let v662 : string = " " + v656 + v661 + ""
                            let v663 : string = "cx=\"12\""
                            let v664 : string = "cy=\"12\""
                            let v665 : string = "r=\"9\""
                            let v666 : string = "stroke-linecap=\"round\""
                            let v667 : string = "stroke-linejoin=\"round\""
                            let v668 : string = " " + v663 + v4 + ""
                            let v669 : string = " " + v664 + v668 + ""
                            let v670 : string = " " + v665 + v669 + ""
                            let v671 : string = " " + v666 + v670 + ""
                            let v672 : string = " " + v667 + v671 + ""
                            let v673 : string = "vec![" + v4 + "]"
                            let v674 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v673 
                            let v675 : string = "leptos::prelude::Fragment::new($0)"
                            let v676 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v674 v675 
                            let v677 : string = "leptos::prelude::AnyView::from($0)"
                            let v678 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v676 v677 
                            let v679 : string = "circle"
                            let v680 : string = "<" + v679 + " " + v672 + ">move || { v678 }</" + v679 + ">"
                            let v681 : string = "leptos::prelude::view! { " + v680 + " }"
                            let v682 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v681 
                            let v683 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v682 |> unbox
                            let v684 : string = "leptos::prelude::IntoAny::into_any($0)"
                            let v685 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v683 v684 
                            let v686 : string = "stroke-linecap=\"round\""
                            let v687 : string = "stroke-linejoin=\"round\""
                            let v688 : string = "d=\"M9 12l2 2l4 -4\""
                            let v689 : string = " " + v686 + v4 + ""
                            let v690 : string = " " + v687 + v689 + ""
                            let v691 : string = " " + v688 + v690 + ""
                            let v692 : string = "vec![" + v4 + "]"
                            let v693 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v692 
                            let v694 : string = "leptos::prelude::Fragment::new($0)"
                            let v695 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v693 v694 
                            let v696 : string = "leptos::prelude::AnyView::from($0)"
                            let v697 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v695 v696 
                            let v698 : string = "path"
                            let v699 : string = "<" + v698 + " " + v691 + ">move || { v697 }</" + v698 + ">"
                            let v700 : string = "leptos::prelude::view! { " + v699 + " }"
                            let v701 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v700 
                            let v702 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v701 |> unbox
                            let v703 : string = "leptos::prelude::IntoAny::into_any($0)"
                            let v704 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v702 v703 
                            let v705 : string = "v704"
                            let v706 : string = v705 + v4 
                            let v707 : string = v706 + v4 
                            let v708 : string = "v685"
                            let v709 : string = ", "
                            let v710 : string = v708 + v709 
                            let v711 : string = v710 + v707 
                            let v712 : string = "vec![" + v711 + "]"
                            let v713 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v712 
                            let v714 : string = "leptos::prelude::Fragment::new($0)"
                            let v715 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v713 v714 
                            let v716 : string = "leptos::prelude::AnyView::from($0)"
                            let v717 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v715 v716 
                            let v718 : string = "svg"
                            let v719 : string = "<" + v718 + " " + v662 + ">move || { v717 }</" + v718 + ">"
                            let v720 : string = "leptos::prelude::view! { " + v719 + " }"
                            let v721 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v720 
                            let v722 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v721 |> unbox
                            let v723 : string = "leptos::prelude::IntoAny::into_any($0)"
                            let v724 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v722 v723 
                            v724
                        else
                            let v725 : string = "vec![" + v4 + "]"
                            let v726 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v725 
                            let v727 : string = "leptos::prelude::IntoAny::into_any($0)"
                            let v728 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v726 v727 
                            v728
                    | _ ->
                        let v730 : string = "vec![" + v4 + "]"
                        let v731 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v730 
                        let v732 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v733 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v731 v732 
                        v733
                (* run_target_args'
                let v739 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v740 : string = "&*$0"
                let v741 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v603 v740 
                let _run_target_args'_v739 = v741 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v742 : string = "&*$0"
                let v743 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v603 v742 
                let _run_target_args'_v739 = v743 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v744 : string = "&*$0"
                let v745 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v603 v744 
                let _run_target_args'_v739 = v745 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v747 : Ref<Str> = v603 |> unbox<Ref<Str>>
                let _run_target_args'_v739 = v747 
                #endif
#if FABLE_COMPILER_PYTHON
                let v751 : Ref<Str> = v603 |> unbox<Ref<Str>>
                let _run_target_args'_v739 = v751 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v755 : Ref<Str> = v603 |> unbox<Ref<Str>>
                let _run_target_args'_v739 = v755 
                #endif
#else
                let v759 : Ref<Str> = v603 |> unbox<Ref<Str>>
                let _run_target_args'_v739 = v759 
                #endif
                let v762 : Ref<Str> = _run_target_args'_v739 
                (* run_target_args'
                let v775 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v776 : string = "String::from($0)"
                let v777 : std_string_String = Fable.Core.RustInterop.emitRustExpr v762 v776 
                let _run_target_args'_v775 = v777 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v778 : string = "String::from($0)"
                let v779 : std_string_String = Fable.Core.RustInterop.emitRustExpr v762 v778 
                let _run_target_args'_v775 = v779 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v780 : string = "String::from($0)"
                let v781 : std_string_String = Fable.Core.RustInterop.emitRustExpr v762 v780 
                let _run_target_args'_v775 = v781 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v783 : std_string_String = v762 |> unbox<std_string_String>
                let _run_target_args'_v775 = v783 
                #endif
#if FABLE_COMPILER_PYTHON
                let v787 : std_string_String = v762 |> unbox<std_string_String>
                let _run_target_args'_v775 = v787 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v791 : std_string_String = v762 |> unbox<std_string_String>
                let _run_target_args'_v775 = v791 
                #endif
#else
                let v795 : std_string_String = v762 |> unbox<std_string_String>
                let _run_target_args'_v775 = v795 
                #endif
                let v798 : std_string_String = _run_target_args'_v775 
                let v807 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                let v808 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v798 v807 
                let v809 : string = "v808"
                let v810 : string = v809 + v4 
                let v811 : string = v810 + v4 
                let v812 : string = "v734"
                let v813 : string = ", "
                let v814 : string = v812 + v813 
                let v815 : string = v814 + v811 
                let v816 : string = "vec![" + v815 + "]"
                let v817 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v816 
                let v818 : string = "leptos::prelude::Fragment::new($0)"
                let v819 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v817 v818 
                let v820 : string = "leptos::prelude::AnyView::from($0)"
                let v821 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v819 v820 
                let v822 : string = "button"
                let v823 : string = "<" + v822 + " " + v601 + ">move || { v821 }</" + v822 + ">"
                let v824 : string = "leptos::prelude::view! { " + v823 + " }"
                let v825 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v824 
                let v826 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Button>> = v825 |> unbox
                let v827 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v828 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v826 v827 
                let v829 : string = "v828"
                let v830 : string = v829 + v4 
                let v831 : string = v830 + v4 
                let v832 : string = "vec![" + v831 + "]"
                let v833 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v832 
                let v834 : string = "leptos::prelude::Fragment::new($0)"
                let v835 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v833 v834 
                let v836 : string = "leptos::prelude::AnyView::from($0)"
                let v837 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v835 v836 
                let func1_from_result = v837 //
                let v838 : _ = func1_from_result
                let v839 : string = $"true; $0 /*"
                let v840 : bool = Fable.Core.RustInterop.emitRustExpr v838 v839 
                let v841 : string = $"*/ }}); //"
                let v842 : bool = Fable.Core.RustInterop.emitRustExpr () v841 
                let v843 : string = $"_func1_from_v285"
                let v844 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v843 
                let v845 : string = "each=v270"
                let v846 : string = "key=move |x| v284(x.to_owned())"
                let v847 : string = "let:x"
                let v848 : (struct (int32 * leptos_prelude_ReadSignal<std_string_String>) -> leptos_prelude_AnyView_) = closure178(v844)
                let v849 : string = "children=move |x| v848(x)"
                let v850 : string = " " + v845 + v4 + ""
                let v851 : string = " " + v846 + v850 + ""
                let v852 : string = " " + v847 + v851 + ""
                let v853 : string = " " + v849 + v852 + ""
                let v854 : string = "leptos::prelude::For"
                let v855 : string = "<" + v854 + " " + v853 + " />"
                let v856 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::view! { " + v855 + " })"
                let v857 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr () v856 
                let v858 : string = "v857"
                let v859 : string = v858 + v4 
                let v860 : string = v859 + v4 
                let v861 : string = "vec![" + v860 + "]"
                let v862 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v861 
                let v863 : string = "leptos::prelude::Fragment::new($0)"
                let v864 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v862 v863 
                v864
    let v872 : string = "leptos::prelude::AnyView::from($0)"
    let v873 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v871 v872 
    let v874 : string = "div"
    let v875 : string = "<" + v874 + " " + v5 + ">move || { v873 }</" + v874 + ">"
    let v876 : string = "leptos::prelude::view! { " + v875 + " }"
    let v877 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v876 
    let v878 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v877 |> unbox
    let v879 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v880 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v878 v879 
    let v881 : string = "v880"
    let v882 : string = v881 + v4 
    let v883 : string = v882 + v4 
    let v884 : string = "vec![" + v883 + "]"
    let v885 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v884 
    let v886 : string = "leptos::prelude::Fragment::new($0)"
    let v887 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v885 v886 
    v887
and method195 (v0 : Func0<leptos_dom_Fragment>) : Func0<leptos_dom_Fragment> =
    v0
and closure179 () () : string =
    let v0 : string = ""
    v0
and method196 (v0 : Func0<std_string_String, unit>) : Func0<std_string_String, unit> =
    v0
and closure180 (v0 : Func0<std_string_String, unit>) (v1 : std_string_String) : unit =
    let v2 : Func0<std_string_String, unit> = method196(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    Fable.Core.RustInterop.emitRustExpr v3 v4 
    ()
and closure181 (v0 : leptos_prelude_ArcAction<Heap6, Result<US59, std_string_String>>) () : bool =
    let v1 : string = "leptos::prelude::ArcAction::pending(&$0)"
    let v2 : leptos_prelude_ArcMemo<bool> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    v4
and method197 (v0 : Func0<bool>) : Func0<bool> =
    v0
and closure182 () () : string =
    let v0 : string = "[width:15px] [height:14px]"
    v0
and closure167 (v0 : Heap2, v1 : leptos_prelude_ArcAction<Heap6, Result<US59, std_string_String>>, v2 : leptos_prelude_ArcMemo<string option>, v3 : leptos_prelude_ArcMemo<US31>, v4 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>>) () : leptos_dom_Fragment =
    let v5 : string = "class=\"flex flex-col p-[10px] gap-[11px]\""
    let v6 : string = ""
    let v7 : string = " " + v5 + v6 + ""
    let v8 : string = "class=\"flex [flex-direction:column] [gap:2px] [align-items:flex-start]\""
    let v9 : string = " " + v8 + v6 + ""
    let v10 : string = "Account"
    (* run_target_args'
    let v15 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v16 : string = "&*$0"
    let v17 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v10 v16 
    let _run_target_args'_v15 = v17 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v18 : string = "&*$0"
    let v19 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v10 v18 
    let _run_target_args'_v15 = v19 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v20 : string = "&*$0"
    let v21 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v10 v20 
    let _run_target_args'_v15 = v21 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v23 : Ref<Str> = v10 |> unbox<Ref<Str>>
    let _run_target_args'_v15 = v23 
    #endif
#if FABLE_COMPILER_PYTHON
    let v27 : Ref<Str> = v10 |> unbox<Ref<Str>>
    let _run_target_args'_v15 = v27 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v31 : Ref<Str> = v10 |> unbox<Ref<Str>>
    let _run_target_args'_v15 = v31 
    #endif
#else
    let v35 : Ref<Str> = v10 |> unbox<Ref<Str>>
    let _run_target_args'_v15 = v35 
    #endif
    let v38 : Ref<Str> = _run_target_args'_v15 
    (* run_target_args'
    let v51 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v38 v52 
    let _run_target_args'_v51 = v53 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v54 : string = "String::from($0)"
    let v55 : std_string_String = Fable.Core.RustInterop.emitRustExpr v38 v54 
    let _run_target_args'_v51 = v55 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v56 : string = "String::from($0)"
    let v57 : std_string_String = Fable.Core.RustInterop.emitRustExpr v38 v56 
    let _run_target_args'_v51 = v57 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v59 : std_string_String = v38 |> unbox<std_string_String>
    let _run_target_args'_v51 = v59 
    #endif
#if FABLE_COMPILER_PYTHON
    let v63 : std_string_String = v38 |> unbox<std_string_String>
    let _run_target_args'_v51 = v63 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v67 : std_string_String = v38 |> unbox<std_string_String>
    let _run_target_args'_v51 = v67 
    #endif
#else
    let v71 : std_string_String = v38 |> unbox<std_string_String>
    let _run_target_args'_v51 = v71 
    #endif
    let v74 : std_string_String = _run_target_args'_v51 
    let v83 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v84 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v74 v83 
    let v86 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option = None
    let v90 : leptos_prelude_ArcMemo<US31> option = None
    let v94 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option = Some v4 
    let v98 : leptos_prelude_ArcMemo<US31> option = Some v3 
    let v101 : string = "vec![" + v6 + "]"
    let v102 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v101 
    let v103 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v104 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v102 v103 
    let v105 : string = "class=\"flex flex-col [position:relative]\""
    let v106 : string = " " + v105 + v6 + ""
    let v107 : string = "$0"
    let v108 : (unit -> string) = closure168()
    let v109 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v108 v107 
    let v110 : string = "$0"
    let v111 : (unit -> bool) = closure169()
    let v112 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v111 v110 
    let v113 : string = "class=\"[position:absolute] [right:0] [top:0]\""
    let v114 : string = " " + v113 + v6 + ""
    let v115 : string = "v104"
    let v116 : string = v115 + v6 
    let v117 : string = v116 + v6 
    let v118 : string = "vec![" + v117 + "]"
    let v119 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v118 
    let v120 : string = "leptos::prelude::Fragment::new($0)"
    let v121 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v119 v120 
    let v122 : string = "leptos::prelude::AnyView::from($0)"
    let v123 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v121 v122 
    let v124 : string = "div"
    let v125 : string = "<" + v124 + " " + v114 + ">move || { v123 }</" + v124 + ">"
    let v126 : string = "leptos::prelude::view! { " + v125 + " }"
    let v127 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v126 
    let v128 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v127 |> unbox
    let v129 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v130 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v128 v129 
    let v131 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v109(())"
    let v132 : string = "open=move || v112(())"
    let v133 : string = " " + v131 + v6 + ""
    let v134 : string = " " + v132 + v133 + ""
    let v135 : string = "$0"
    let v136 : (unit -> string) = closure170()
    let v137 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v136 v135 
    let v138 : string = "$0"
    let v139 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure171(v94, v98, v0)
    let v140 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v139 v138 
    let v141 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v140(()) + \" \" + &v137(())"
    let v142 : string = " " + v141 + v6 + ""
    let v143 : string = "class=\"flex items-center gap-2\""
    let v144 : string = " " + v143 + v6 + ""
    let v145 : (unit -> string) = method188(v94, v98, v0)
    let v146 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
    let v147 : string = " " + v146 + v6 + ""
    let v148 : string = v145 ()
    (* run_target_args'
    let v153 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v154 : string = "&*$0"
    let v155 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v148 v154 
    let _run_target_args'_v153 = v155 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v156 : string = "&*$0"
    let v157 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v148 v156 
    let _run_target_args'_v153 = v157 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v158 : string = "&*$0"
    let v159 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v148 v158 
    let _run_target_args'_v153 = v159 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v161 : Ref<Str> = v148 |> unbox<Ref<Str>>
    let _run_target_args'_v153 = v161 
    #endif
#if FABLE_COMPILER_PYTHON
    let v165 : Ref<Str> = v148 |> unbox<Ref<Str>>
    let _run_target_args'_v153 = v165 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v169 : Ref<Str> = v148 |> unbox<Ref<Str>>
    let _run_target_args'_v153 = v169 
    #endif
#else
    let v173 : Ref<Str> = v148 |> unbox<Ref<Str>>
    let _run_target_args'_v153 = v173 
    #endif
    let v176 : Ref<Str> = _run_target_args'_v153 
    (* run_target_args'
    let v189 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v190 : string = "String::from($0)"
    let v191 : std_string_String = Fable.Core.RustInterop.emitRustExpr v176 v190 
    let _run_target_args'_v189 = v191 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v192 : string = "String::from($0)"
    let v193 : std_string_String = Fable.Core.RustInterop.emitRustExpr v176 v192 
    let _run_target_args'_v189 = v193 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v194 : string = "String::from($0)"
    let v195 : std_string_String = Fable.Core.RustInterop.emitRustExpr v176 v194 
    let _run_target_args'_v189 = v195 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v197 : std_string_String = v176 |> unbox<std_string_String>
    let _run_target_args'_v189 = v197 
    #endif
#if FABLE_COMPILER_PYTHON
    let v201 : std_string_String = v176 |> unbox<std_string_String>
    let _run_target_args'_v189 = v201 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v205 : std_string_String = v176 |> unbox<std_string_String>
    let _run_target_args'_v189 = v205 
    #endif
#else
    let v209 : std_string_String = v176 |> unbox<std_string_String>
    let _run_target_args'_v189 = v209 
    #endif
    let v212 : std_string_String = _run_target_args'_v189 
    let v221 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v222 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v212 v221 
    let v223 : string = "v222"
    let v224 : string = v223 + v6 
    let v225 : string = v224 + v6 
    let v226 : string = "vec![" + v225 + "]"
    let v227 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v226 
    let v228 : string = "leptos::prelude::Fragment::new($0)"
    let v229 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v227 v228 
    let v230 : string = "leptos::prelude::AnyView::from($0)"
    let v231 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v229 v230 
    let v232 : string = "span"
    let v233 : string = "<" + v232 + " " + v147 + ">move || { v231 }</" + v232 + ">"
    let v234 : string = "leptos::prelude::view! { " + v233 + " }"
    let v235 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v234 
    let v236 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v235 |> unbox
    let v237 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v238 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v236 v237 
    let v239 : string = "v238"
    let v240 : string = v239 + v6 
    let v241 : string = v240 + v6 
    let v242 : string = "vec![" + v241 + "]"
    let v243 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v242 
    let v244 : string = "leptos::prelude::Fragment::new($0)"
    let v245 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v243 v244 
    let v246 : string = "leptos::prelude::AnyView::from($0)"
    let v247 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v245 v246 
    let v248 : string = "<" + v124 + " " + v144 + ">move || { v247 }</" + v124 + ">"
    let v249 : string = "leptos::prelude::view! { " + v248 + " }"
    let v250 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v249 
    let v251 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v250 |> unbox
    let v252 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v253 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v251 v252 
    let v254 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
    let v255 : string = " " + v254 + v6 + ""
    let v256 : string = "$0"
    let v257 : (unit -> string) = closure166()
    let v258 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v257 v256 
    let v259 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v260 : string = "viewBox=\"0 0 20 20\""
    let v261 : string = "fill=\"currentColor\""
    let v262 : string = "class=move || \" \".to_owned() + &v258(())"
    let v263 : string = " " + v259 + v6 + ""
    let v264 : string = " " + v260 + v263 + ""
    let v265 : string = " " + v261 + v264 + ""
    let v266 : string = " " + v262 + v265 + ""
    let v267 : string = "fill-rule=\"evenodd\""
    let v268 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
    let v269 : string = "clip-rule=\"evenodd\""
    let v270 : string = " " + v267 + v6 + ""
    let v271 : string = " " + v268 + v270 + ""
    let v272 : string = " " + v269 + v271 + ""
    let v273 : string = "vec![" + v6 + "]"
    let v274 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v273 
    let v275 : string = "leptos::prelude::Fragment::new($0)"
    let v276 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v274 v275 
    let v277 : string = "leptos::prelude::AnyView::from($0)"
    let v278 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v276 v277 
    let v279 : string = "path"
    let v280 : string = "<" + v279 + " " + v272 + ">move || { v278 }</" + v279 + ">"
    let v281 : string = "leptos::prelude::view! { " + v280 + " }"
    let v282 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v281 
    let v283 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v282 |> unbox
    let v284 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v285 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v283 v284 
    let v286 : string = "v285"
    let v287 : string = v286 + v6 
    let v288 : string = v287 + v6 
    let v289 : string = "vec![" + v288 + "]"
    let v290 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v289 
    let v291 : string = "leptos::prelude::Fragment::new($0)"
    let v292 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v290 v291 
    let v293 : string = "leptos::prelude::AnyView::from($0)"
    let v294 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v292 v293 
    let v295 : string = "svg"
    let v296 : string = "<" + v295 + " " + v266 + ">move || { v294 }</" + v295 + ">"
    let v297 : string = "leptos::prelude::view! { " + v296 + " }"
    let v298 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v297 
    let v299 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v298 |> unbox
    let v300 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v301 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v299 v300 
    let v302 : string = "v301"
    let v303 : string = v302 + v6 
    let v304 : string = v303 + v6 
    let v305 : string = "vec![" + v304 + "]"
    let v306 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v305 
    let v307 : string = "leptos::prelude::Fragment::new($0)"
    let v308 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v306 v307 
    let v309 : string = "leptos::prelude::AnyView::from($0)"
    let v310 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v308 v309 
    let v311 : string = "<" + v232 + " " + v255 + ">move || { v310 }</" + v232 + ">"
    let v312 : string = "leptos::prelude::view! { " + v311 + " }"
    let v313 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v312 
    let v314 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v313 |> unbox
    let v315 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v316 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v314 v315 
    let v317 : string = "v316"
    let v318 : string = v317 + v6 
    let v319 : string = v318 + v6 
    let v320 : string = "v253"
    let v321 : string = ", "
    let v322 : string = v320 + v321 
    let v323 : string = v322 + v319 
    let v324 : string = "vec![" + v323 + "]"
    let v325 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v324 
    let v326 : string = "leptos::prelude::Fragment::new($0)"
    let v327 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v325 v326 
    let v328 : string = "leptos::prelude::AnyView::from($0)"
    let v329 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v327 v328 
    let v330 : string = "summary"
    let v331 : string = "<" + v330 + " " + v142 + ">move || { v329 }</" + v330 + ">"
    let v332 : string = "leptos::prelude::view! { " + v331 + " }"
    let v333 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v332 
    let v334 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v333 |> unbox
    let v335 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v336 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v334 v335 
    let v337 : string = "class=\"flex flex-1 flex-col\""
    let v338 : string = " " + v337 + v6 + ""
    let v339 : string = "Func0::new(move || $0())"
    let v340 : (unit -> leptos_dom_Fragment) = closure174(v94, v98, v0)
    let v341 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v340 v339 
    let v342 : Func0<leptos_dom_Fragment> = method195(v341)
    let v343 : string = "(move || v342())()"
    let v344 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v343 
    let v345 : string = "leptos::prelude::AnyView::from($0)"
    let v346 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v344 v345 
    let v347 : string = "<" + v124 + " " + v338 + ">move || { v346 }</" + v124 + ">"
    let v348 : string = "leptos::prelude::view! { " + v347 + " }"
    let v349 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v348 
    let v350 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v349 |> unbox
    let v351 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v352 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v350 v351 
    let v353 : string = "v352"
    let v354 : string = v353 + v6 
    let v355 : string = v354 + v6 
    let v356 : string = "v336"
    let v357 : string = v356 + v321 
    let v358 : string = v357 + v355 
    let v359 : string = "vec![" + v358 + "]"
    let v360 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v359 
    let v361 : string = "leptos::prelude::Fragment::new($0)"
    let v362 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v360 v361 
    let v363 : string = "leptos::prelude::AnyView::from($0)"
    let v364 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v362 v363 
    let v365 : string = "details"
    let v366 : string = "<" + v365 + " " + v134 + ">move || { v364 }</" + v365 + ">"
    let v367 : string = "leptos::prelude::view! { " + v366 + " }"
    let v368 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v367 
    let v369 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v368 |> unbox
    let v370 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v371 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v369 v370 
    let v372 : string = "v371"
    let v373 : string = v372 + v6 
    let v374 : string = v373 + v6 
    let v375 : string = "v130"
    let v376 : string = v375 + v321 
    let v377 : string = v376 + v374 
    let v378 : string = "vec![" + v377 + "]"
    let v379 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v378 
    let v380 : string = "leptos::prelude::Fragment::new($0)"
    let v381 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v379 v380 
    let v382 : string = "leptos::prelude::AnyView::from($0)"
    let v383 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v381 v382 
    let v384 : string = "<" + v124 + " " + v106 + ">move || { v383 }</" + v124 + ">"
    let v385 : string = "leptos::prelude::view! { " + v384 + " }"
    let v386 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v385 
    let v387 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v386 |> unbox
    let v388 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v389 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v387 v388 
    let v390 : string = "v389"
    let v391 : string = v390 + v6 
    let v392 : string = v391 + v6 
    let v393 : string = "v84"
    let v394 : string = v393 + v321 
    let v395 : string = v394 + v392 
    let v396 : string = "vec![" + v395 + "]"
    let v397 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v396 
    let v398 : string = "leptos::prelude::Fragment::new($0)"
    let v399 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v397 v398 
    let v400 : string = "leptos::prelude::AnyView::from($0)"
    let v401 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v399 v400 
    let v402 : string = "<" + v124 + " " + v9 + ">move || { v401 }</" + v124 + ">"
    let v403 : string = "leptos::prelude::view! { " + v402 + " }"
    let v404 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v403 
    let v405 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v404 |> unbox
    let v406 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v407 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v405 v406 
    let v408 : string = "class=\"flex [flex-direction:column] [gap:2px] [align-items:flex-start]\""
    let v409 : string = " " + v408 + v6 + ""
    let v410 : string = "Max"
    (* run_target_args'
    let v415 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v416 : string = "&*$0"
    let v417 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v410 v416 
    let _run_target_args'_v415 = v417 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v418 : string = "&*$0"
    let v419 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v410 v418 
    let _run_target_args'_v415 = v419 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v420 : string = "&*$0"
    let v421 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v410 v420 
    let _run_target_args'_v415 = v421 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v423 : Ref<Str> = v410 |> unbox<Ref<Str>>
    let _run_target_args'_v415 = v423 
    #endif
#if FABLE_COMPILER_PYTHON
    let v427 : Ref<Str> = v410 |> unbox<Ref<Str>>
    let _run_target_args'_v415 = v427 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v431 : Ref<Str> = v410 |> unbox<Ref<Str>>
    let _run_target_args'_v415 = v431 
    #endif
#else
    let v435 : Ref<Str> = v410 |> unbox<Ref<Str>>
    let _run_target_args'_v415 = v435 
    #endif
    let v438 : Ref<Str> = _run_target_args'_v415 
    (* run_target_args'
    let v451 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v452 : string = "String::from($0)"
    let v453 : std_string_String = Fable.Core.RustInterop.emitRustExpr v438 v452 
    let _run_target_args'_v451 = v453 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v454 : string = "String::from($0)"
    let v455 : std_string_String = Fable.Core.RustInterop.emitRustExpr v438 v454 
    let _run_target_args'_v451 = v455 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v456 : string = "String::from($0)"
    let v457 : std_string_String = Fable.Core.RustInterop.emitRustExpr v438 v456 
    let _run_target_args'_v451 = v457 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v459 : std_string_String = v438 |> unbox<std_string_String>
    let _run_target_args'_v451 = v459 
    #endif
#if FABLE_COMPILER_PYTHON
    let v463 : std_string_String = v438 |> unbox<std_string_String>
    let _run_target_args'_v451 = v463 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v467 : std_string_String = v438 |> unbox<std_string_String>
    let _run_target_args'_v451 = v467 
    #endif
#else
    let v471 : std_string_String = v438 |> unbox<std_string_String>
    let _run_target_args'_v451 = v471 
    #endif
    let v474 : std_string_String = _run_target_args'_v451 
    let v483 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v484 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v474 v483 
    let v485 : unit = ()
    let v486 : string = $"true; let _func0_from_v485 = Func0::from(move || {{ //"
    let v487 : bool = Fable.Core.RustInterop.emitRustExpr () v486 
    let v488 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v489 : string = "Box::pin($0)"
    let v490 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v488 v489 
    let v491 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v492 : Heap1 = Fable.Core.RustInterop.emitRustExpr v490 v491 
    let v493 : leptos_prelude_ArcRwSignal<Heap0> = v492.l3
    let v494 : string = "Box::pin($0)"
    let v495 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v493 v494 
    let v496 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v497 : Heap0 = Fable.Core.RustInterop.emitRustExpr v495 v496 
    let v498 : int32 = v497.l2
    let v499 : string = $"true; $0 /*"
    let v500 : bool = Fable.Core.RustInterop.emitRustExpr v498 v499 
    let v501 : string = $"*/ }}); //"
    let v502 : bool = Fable.Core.RustInterop.emitRustExpr () v501 
    let v503 : string = $"_func0_from_v485"
    let v504 : Func0<int32> = Fable.Core.RustInterop.emitRustExpr () v503 
    let v505 : unit = ()
    let v506 : string = $"true; let _func1_from_v505 = Func0::from(move || {{ //"
    let v507 : bool = Fable.Core.RustInterop.emitRustExpr () v506 
    let v508 : string = $"value"
    let v509 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v508 
    let v510 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v511 : string = "Box::pin($0)"
    let v512 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v510 v511 
    let v513 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v514 : Heap1 = Fable.Core.RustInterop.emitRustExpr v512 v513 
    let v515 : leptos_prelude_ArcRwSignal<Heap0> = v514.l3
    let v516 : string = "Box::pin($0)"
    let v517 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v515 v516 
    let v518 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v519 : Heap0 = Fable.Core.RustInterop.emitRustExpr v517 v518 
    let v520 : Vec<(bool * std_string_String)> = v519.l0
    let v521 : std_string_String option = v519.l1
    let v522 : int32 = v519.l2
    let v523 : int32 = v519.l3
    let v524 : US1 = v519.l4
    let v525 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v526 : string = "Box::pin($0)"
    let v527 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v525 v526 
    let v528 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v529 : Heap1 = Fable.Core.RustInterop.emitRustExpr v527 v528 
    let v530 : leptos_prelude_ArcRwSignal<Heap0> = v529.l3
    let v532 : (std_string_String -> string) = _.ToString()
    let v533 : string = v532 v509
    let v536 : bool = "" = v533
    let v550 : int32 =
        if v536 then
            1
        else
            let v542 : int32 = v533 |> int32 
            v542
    let v551 : Heap0 = {l0 = v520; l1 = v521; l2 = v550; l3 = v523; l4 = v524} : Heap0
    let v552 : string = $"true; leptos::prelude::ArcRwSignal::set(&$0, $1); //"
    let v553 : bool = Fable.Core.RustInterop.emitRustExpr struct (v530, v551) v552 
    let v554 : string = $"true; /*"
    let v555 : bool = Fable.Core.RustInterop.emitRustExpr () v554 
    let v556 : string = $"*/ }}); //"
    let v557 : bool = Fable.Core.RustInterop.emitRustExpr () v556 
    let v558 : string = $"_func1_from_v505"
    let v559 : Func0<std_string_String, unit> = Fable.Core.RustInterop.emitRustExpr () v558 
    let v560 : string = "$0"
    let v561 : (unit -> string) = closure179()
    let v562 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v561 v560 
    let v563 : string = "class=move || \"bg-gray-50 h-[31px] [font-size:.875rem] \".to_owned() + &v562(())"
    let v564 : string = "prop:value=move || v504()"
    let v565 : (std_string_String -> unit) = closure180(v559)
    let v566 : string = "on:keyup=move |event: web_sys::KeyboardEvent| v565(leptos::prelude::event_target_value(&event))"
    let v567 : string = " " + v563 + v6 + ""
    let v568 : string = " " + v564 + v567 + ""
    let v569 : string = " " + v566 + v568 + ""
    let v570 : string = "input"
    let v571 : string = "<" + v570 + " " + v569 + " />"
    let v572 : string = "leptos::prelude::view! { " + v571 + " }"
    let v573 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v572 
    let v574 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v573 |> unbox
    let v575 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v576 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v574 v575 
    let v577 : string = "v576"
    let v578 : string = v577 + v6 
    let v579 : string = v578 + v6 
    let v580 : string = "v484"
    let v581 : string = v580 + v321 
    let v582 : string = v581 + v579 
    let v583 : string = "vec![" + v582 + "]"
    let v584 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v583 
    let v585 : string = "leptos::prelude::Fragment::new($0)"
    let v586 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v584 v585 
    let v587 : string = "leptos::prelude::AnyView::from($0)"
    let v588 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v586 v587 
    let v589 : string = "<" + v124 + " " + v409 + ">move || { v588 }</" + v124 + ">"
    let v590 : string = "leptos::prelude::view! { " + v589 + " }"
    let v591 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v590 
    let v592 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v591 |> unbox
    let v593 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v594 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v592 v593 
    let v595 : string = "class=\"flex\""
    let v596 : string = " " + v595 + v6 + ""
    let v597 : string = "Func0::new(move || $0())"
    let v598 : (unit -> bool) = closure181(v1)
    let v599 : Func0<bool> = Fable.Core.RustInterop.emitRustExpr v598 v597 
    let v600 : Func0<bool> = method197(v599)
    let v601 : unit = ()
    let v602 : string = $"true; let _func0_from_v601 = Func0::from(move || {{ //"
    let v603 : bool = Fable.Core.RustInterop.emitRustExpr () v602 
    let v604 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v605 : string = "Box::pin($0)"
    let v606 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v604 v605 
    let v607 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v608 : Heap1 = Fable.Core.RustInterop.emitRustExpr v606 v607 
    let v609 : leptos_prelude_ArcRwSignal<Heap0> = v608.l3
    let v610 : string = "Box::pin($0)"
    let v611 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v609 v610 
    let v612 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v613 : Heap0 = Fable.Core.RustInterop.emitRustExpr v611 v612 
    let v614 : int32 = v613.l2
    let v615 : Heap6 = {l0 = v614} : Heap6
    let v616 : string = "true; leptos::prelude::ArcAction::dispatch(&$0, $1.clone())"
    let v617 : bool = Fable.Core.RustInterop.emitRustExpr struct (v1, v615) v616 
    // rust.func0_from / is_unit
    let v618 : string = $"true; /*"
    let v619 : bool = Fable.Core.RustInterop.emitRustExpr () v618 
    let v620 : string = $"*/ }}); //"
    let v621 : bool = Fable.Core.RustInterop.emitRustExpr () v620 
    let v622 : string = $"_func0_from_v601"
    let v623 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v622 
    let v624 : string = "flex"
    let v625 : string = "gap-[10px]"
    let v626 : string = "[align-items:center]"
    let v627 : string = "inline-block"
    let v628 : string = "rounded"
    let v629 : string = "border"
    let v630 : string = "border-gray-400"
    let v631 : string = "hover:bg-gray-400"
    let v632 : string = "px-4"
    let v633 : string = "py-1"
    let v634 : string = "text-sm"
    let v635 : string = "font-medium"
    let v636 : string = "text-gray-900"
    let v637 : string = "bg-transparent"
    let v638 : string = "hover:text-gray-600"
    let v639 : string = "focus:outline-none"
    let v640 : string = "focus:ring"
    let v641 : string = "active:text-gray-500"
    let v642 : string list = []
    let v644 : string list = v641 :: v642 
    let v648 : string list = v640 :: v644 
    let v652 : string list = v639 :: v648 
    let v656 : string list = v638 :: v652 
    let v660 : string list = v637 :: v656 
    let v664 : string list = v636 :: v660 
    let v668 : string list = v635 :: v664 
    let v672 : string list = v634 :: v668 
    let v676 : string list = v633 :: v672 
    let v680 : string list = v632 :: v676 
    let v684 : string list = v631 :: v680 
    let v688 : string list = v630 :: v684 
    let v692 : string list = v629 :: v688 
    let v696 : string list = v628 :: v692 
    let v700 : string list = v627 :: v696 
    let v704 : string list = v626 :: v700 
    let v708 : string list = v625 :: v704 
    let v712 : string list = v624 :: v708 
    let v719 : unit = ()
    let _let'_v719 =
        seq {
            yield! v712 
            (* indent
            ()
        indent *)
        }
        (* indent
        ()
    indent *)
    let v722 : string seq = _let'_v719 
    let v730 : (string -> (string seq -> string)) = String.concat
    let v731 : string = " "
    let v732 : (string seq -> string) = v730 v731
    let v733 : string = v732 v722
    (* run_target_args'
    let v740 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v741 : string = "&*$0"
    let v742 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v733 v741 
    let _run_target_args'_v740 = v742 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v743 : string = "&*$0"
    let v744 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v733 v743 
    let _run_target_args'_v740 = v744 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v745 : string = "&*$0"
    let v746 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v733 v745 
    let _run_target_args'_v740 = v746 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v748 : Ref<Str> = v733 |> unbox<Ref<Str>>
    let _run_target_args'_v740 = v748 
    #endif
#if FABLE_COMPILER_PYTHON
    let v752 : Ref<Str> = v733 |> unbox<Ref<Str>>
    let _run_target_args'_v740 = v752 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v756 : Ref<Str> = v733 |> unbox<Ref<Str>>
    let _run_target_args'_v740 = v756 
    #endif
#else
    let v760 : Ref<Str> = v733 |> unbox<Ref<Str>>
    let _run_target_args'_v740 = v760 
    #endif
    let v763 : Ref<Str> = _run_target_args'_v740 
    (* run_target_args'
    let v776 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v777 : string = "String::from($0)"
    let v778 : std_string_String = Fable.Core.RustInterop.emitRustExpr v763 v777 
    let _run_target_args'_v776 = v778 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v779 : string = "String::from($0)"
    let v780 : std_string_String = Fable.Core.RustInterop.emitRustExpr v763 v779 
    let _run_target_args'_v776 = v780 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v781 : string = "String::from($0)"
    let v782 : std_string_String = Fable.Core.RustInterop.emitRustExpr v763 v781 
    let _run_target_args'_v776 = v782 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v784 : std_string_String = v763 |> unbox<std_string_String>
    let _run_target_args'_v776 = v784 
    #endif
#if FABLE_COMPILER_PYTHON
    let v788 : std_string_String = v763 |> unbox<std_string_String>
    let _run_target_args'_v776 = v788 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v792 : std_string_String = v763 |> unbox<std_string_String>
    let _run_target_args'_v776 = v792 
    #endif
#else
    let v796 : std_string_String = v763 |> unbox<std_string_String>
    let _run_target_args'_v776 = v796 
    #endif
    let v799 : std_string_String = _run_target_args'_v776 
    let v808 : string = "$0"
    let v809 : std_string_String = Fable.Core.RustInterop.emitRustExpr v799 v808 
    let v810 : string = "class=v809"
    let v811 : string = "prop:disabled=move || v600()"
    let v812 : string = "on:click=move |_| v623()"
    let v813 : string = " " + v810 + v6 + ""
    let v814 : string = " " + v811 + v813 + ""
    let v815 : string = " " + v812 + v814 + ""
    let v816 : string = "Roll"
    (* run_target_args'
    let v821 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v822 : string = "&*$0"
    let v823 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v816 v822 
    let _run_target_args'_v821 = v823 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v824 : string = "&*$0"
    let v825 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v816 v824 
    let _run_target_args'_v821 = v825 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v826 : string = "&*$0"
    let v827 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v816 v826 
    let _run_target_args'_v821 = v827 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v829 : Ref<Str> = v816 |> unbox<Ref<Str>>
    let _run_target_args'_v821 = v829 
    #endif
#if FABLE_COMPILER_PYTHON
    let v833 : Ref<Str> = v816 |> unbox<Ref<Str>>
    let _run_target_args'_v821 = v833 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v837 : Ref<Str> = v816 |> unbox<Ref<Str>>
    let _run_target_args'_v821 = v837 
    #endif
#else
    let v841 : Ref<Str> = v816 |> unbox<Ref<Str>>
    let _run_target_args'_v821 = v841 
    #endif
    let v844 : Ref<Str> = _run_target_args'_v821 
    (* run_target_args'
    let v857 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v858 : string = "String::from($0)"
    let v859 : std_string_String = Fable.Core.RustInterop.emitRustExpr v844 v858 
    let _run_target_args'_v857 = v859 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v860 : string = "String::from($0)"
    let v861 : std_string_String = Fable.Core.RustInterop.emitRustExpr v844 v860 
    let _run_target_args'_v857 = v861 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v862 : string = "String::from($0)"
    let v863 : std_string_String = Fable.Core.RustInterop.emitRustExpr v844 v862 
    let _run_target_args'_v857 = v863 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v865 : std_string_String = v844 |> unbox<std_string_String>
    let _run_target_args'_v857 = v865 
    #endif
#if FABLE_COMPILER_PYTHON
    let v869 : std_string_String = v844 |> unbox<std_string_String>
    let _run_target_args'_v857 = v869 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v873 : std_string_String = v844 |> unbox<std_string_String>
    let _run_target_args'_v857 = v873 
    #endif
#else
    let v877 : std_string_String = v844 |> unbox<std_string_String>
    let _run_target_args'_v857 = v877 
    #endif
    let v880 : std_string_String = _run_target_args'_v857 
    let v889 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v890 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v880 v889 
    let v891 : string = "$0()"
    let v892 : bool = Fable.Core.RustInterop.emitRustExpr v599 v891 
    let v1256 : leptos_prelude_AnyView_ =
        if v892 then
            let v893 : string = "$0"
            let v894 : (unit -> string) = closure182()
            let v895 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v894 v893 
            let v896 : string = "version=\"1.1\""
            let v897 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v898 : string = "xmlns:xlink=\"http://www.w3.org/1999/xlink\""
            let v899 : string = "x=\"0px\""
            let v900 : string = "y=\"0px\""
            let v901 : string = "viewBox=\"0 0 24 30\""
            let v902 : string = "style=\"enable-background:new 0 0 50 50;\""
            let v903 : string = "xml:space=\"preserve\""
            let v904 : string = "class=move || \" \".to_owned() + &v895(())"
            let v905 : string = " " + v896 + v6 + ""
            let v906 : string = " " + v897 + v905 + ""
            let v907 : string = " " + v898 + v906 + ""
            let v908 : string = " " + v899 + v907 + ""
            let v909 : string = " " + v900 + v908 + ""
            let v910 : string = " " + v901 + v909 + ""
            let v911 : string = " " + v902 + v910 + ""
            let v912 : string = " " + v903 + v911 + ""
            let v913 : string = " " + v904 + v912 + ""
            let v914 : string = "x=\"0\""
            let v915 : string = "y=\"10\""
            let v916 : string = "width=\"4\""
            let v917 : string = "height=\"10\""
            let v918 : string = "fill=\"#333\""
            let v919 : string = "opacity=\"0.2\""
            let v920 : string = " " + v914 + v6 + ""
            let v921 : string = " " + v915 + v920 + ""
            let v922 : string = " " + v916 + v921 + ""
            let v923 : string = " " + v917 + v922 + ""
            let v924 : string = " " + v918 + v923 + ""
            let v925 : string = " " + v919 + v924 + ""
            let v926 : string = "attributeName=\"opacity\""
            let v927 : string = "attributeType=\"XML\""
            let v928 : string = "values=\"0.2; 1; .2\""
            let v929 : string = "begin=\"0s\""
            let v930 : string = "dur=\"0.6s\""
            let v931 : string = "repeatCount=\"indefinite\""
            let v932 : string = " " + v926 + v6 + ""
            let v933 : string = " " + v927 + v932 + ""
            let v934 : string = " " + v928 + v933 + ""
            let v935 : string = " " + v929 + v934 + ""
            let v936 : string = " " + v930 + v935 + ""
            let v937 : string = " " + v931 + v936 + ""
            let v938 : string = "vec![" + v6 + "]"
            let v939 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v938 
            let v940 : string = "leptos::prelude::Fragment::new($0)"
            let v941 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v939 v940 
            let v942 : string = "leptos::prelude::AnyView::from($0)"
            let v943 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v941 v942 
            let v944 : string = "animate"
            let v945 : string = "<" + v944 + " " + v937 + ">move || { v943 }</" + v944 + ">"
            let v946 : string = "leptos::prelude::view! { " + v945 + " }"
            let v947 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v946 
            let v948 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v947 |> unbox
            let v949 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v950 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v948 v949 
            let v951 : string = "attributeName=\"height\""
            let v952 : string = "attributeType=\"XML\""
            let v953 : string = "values=\"10; 20; 10\""
            let v954 : string = "begin=\"0s\""
            let v955 : string = "dur=\"0.6s\""
            let v956 : string = "repeatCount=\"indefinite\""
            let v957 : string = " " + v951 + v6 + ""
            let v958 : string = " " + v952 + v957 + ""
            let v959 : string = " " + v953 + v958 + ""
            let v960 : string = " " + v954 + v959 + ""
            let v961 : string = " " + v955 + v960 + ""
            let v962 : string = " " + v956 + v961 + ""
            let v963 : string = "vec![" + v6 + "]"
            let v964 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v963 
            let v965 : string = "leptos::prelude::Fragment::new($0)"
            let v966 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v964 v965 
            let v967 : string = "leptos::prelude::AnyView::from($0)"
            let v968 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v966 v967 
            let v969 : string = "<" + v944 + " " + v962 + ">move || { v968 }</" + v944 + ">"
            let v970 : string = "leptos::prelude::view! { " + v969 + " }"
            let v971 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v970 
            let v972 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v971 |> unbox
            let v973 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v974 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v972 v973 
            let v975 : string = "attributeName=\"y\""
            let v976 : string = "attributeType=\"XML\""
            let v977 : string = "values=\"10; 5; 10\""
            let v978 : string = "begin=\"0s\""
            let v979 : string = "dur=\"0.6s\""
            let v980 : string = "repeatCount=\"indefinite\""
            let v981 : string = " " + v975 + v6 + ""
            let v982 : string = " " + v976 + v981 + ""
            let v983 : string = " " + v977 + v982 + ""
            let v984 : string = " " + v978 + v983 + ""
            let v985 : string = " " + v979 + v984 + ""
            let v986 : string = " " + v980 + v985 + ""
            let v987 : string = "vec![" + v6 + "]"
            let v988 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v987 
            let v989 : string = "leptos::prelude::Fragment::new($0)"
            let v990 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v988 v989 
            let v991 : string = "leptos::prelude::AnyView::from($0)"
            let v992 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v990 v991 
            let v993 : string = "<" + v944 + " " + v986 + ">move || { v992 }</" + v944 + ">"
            let v994 : string = "leptos::prelude::view! { " + v993 + " }"
            let v995 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v994 
            let v996 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v995 |> unbox
            let v997 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v998 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v996 v997 
            let v999 : string = "v998"
            let v1000 : string = v999 + v6 
            let v1001 : string = v1000 + v6 
            let v1002 : string = "v974"
            let v1003 : string = v1002 + v321 
            let v1004 : string = v1003 + v1001 
            let v1005 : string = "v950"
            let v1006 : string = v1005 + v321 
            let v1007 : string = v1006 + v1004 
            let v1008 : string = "vec![" + v1007 + "]"
            let v1009 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1008 
            let v1010 : string = "leptos::prelude::Fragment::new($0)"
            let v1011 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1009 v1010 
            let v1012 : string = "leptos::prelude::AnyView::from($0)"
            let v1013 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1011 v1012 
            let v1014 : string = "rect"
            let v1015 : string = "<" + v1014 + " " + v925 + ">move || { v1013 }</" + v1014 + ">"
            let v1016 : string = "leptos::prelude::view! { " + v1015 + " }"
            let v1017 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1016 
            let v1018 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v1017 |> unbox
            let v1019 : string = "x=\"8\""
            let v1020 : string = "y=\"10\""
            let v1021 : string = "width=\"4\""
            let v1022 : string = "height=\"10\""
            let v1023 : string = "fill=\"#333\""
            let v1024 : string = "opacity=\"0.2\""
            let v1025 : string = " " + v1019 + v6 + ""
            let v1026 : string = " " + v1020 + v1025 + ""
            let v1027 : string = " " + v1021 + v1026 + ""
            let v1028 : string = " " + v1022 + v1027 + ""
            let v1029 : string = " " + v1023 + v1028 + ""
            let v1030 : string = " " + v1024 + v1029 + ""
            let v1031 : string = "attributeName=\"opacity\""
            let v1032 : string = "attributeType=\"XML\""
            let v1033 : string = "values=\"0.2; 1; .2\""
            let v1034 : string = "begin=\"0.15s\""
            let v1035 : string = "dur=\"0.6s\""
            let v1036 : string = "repeatCount=\"indefinite\""
            let v1037 : string = " " + v1031 + v6 + ""
            let v1038 : string = " " + v1032 + v1037 + ""
            let v1039 : string = " " + v1033 + v1038 + ""
            let v1040 : string = " " + v1034 + v1039 + ""
            let v1041 : string = " " + v1035 + v1040 + ""
            let v1042 : string = " " + v1036 + v1041 + ""
            let v1043 : string = "vec![" + v6 + "]"
            let v1044 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1043 
            let v1045 : string = "leptos::prelude::Fragment::new($0)"
            let v1046 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1044 v1045 
            let v1047 : string = "leptos::prelude::AnyView::from($0)"
            let v1048 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1046 v1047 
            let v1049 : string = "<" + v944 + " " + v1042 + ">move || { v1048 }</" + v944 + ">"
            let v1050 : string = "leptos::prelude::view! { " + v1049 + " }"
            let v1051 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1050 
            let v1052 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1051 |> unbox
            let v1053 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1054 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1052 v1053 
            let v1055 : string = "attributeName=\"opacity\""
            let v1056 : string = "attributeType=\"XML\""
            let v1057 : string = "values=\"10; 20; 10\""
            let v1058 : string = "begin=\"0.15s\""
            let v1059 : string = "dur=\"0.6s\""
            let v1060 : string = "repeatCount=\"indefinite\""
            let v1061 : string = " " + v1055 + v6 + ""
            let v1062 : string = " " + v1056 + v1061 + ""
            let v1063 : string = " " + v1057 + v1062 + ""
            let v1064 : string = " " + v1058 + v1063 + ""
            let v1065 : string = " " + v1059 + v1064 + ""
            let v1066 : string = " " + v1060 + v1065 + ""
            let v1067 : string = "vec![" + v6 + "]"
            let v1068 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1067 
            let v1069 : string = "leptos::prelude::Fragment::new($0)"
            let v1070 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1068 v1069 
            let v1071 : string = "leptos::prelude::AnyView::from($0)"
            let v1072 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1070 v1071 
            let v1073 : string = "<" + v944 + " " + v1066 + ">move || { v1072 }</" + v944 + ">"
            let v1074 : string = "leptos::prelude::view! { " + v1073 + " }"
            let v1075 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1074 
            let v1076 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1075 |> unbox
            let v1077 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1078 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1076 v1077 
            let v1079 : string = "attributeName=\"y\""
            let v1080 : string = "attributeType=\"XML\""
            let v1081 : string = "values=\"10; 5; 10\""
            let v1082 : string = "begin=\"0.15s\""
            let v1083 : string = "dur=\"0.6s\""
            let v1084 : string = "repeatCount=\"indefinite\""
            let v1085 : string = " " + v1079 + v6 + ""
            let v1086 : string = " " + v1080 + v1085 + ""
            let v1087 : string = " " + v1081 + v1086 + ""
            let v1088 : string = " " + v1082 + v1087 + ""
            let v1089 : string = " " + v1083 + v1088 + ""
            let v1090 : string = " " + v1084 + v1089 + ""
            let v1091 : string = "vec![" + v6 + "]"
            let v1092 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1091 
            let v1093 : string = "leptos::prelude::Fragment::new($0)"
            let v1094 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1092 v1093 
            let v1095 : string = "leptos::prelude::AnyView::from($0)"
            let v1096 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1094 v1095 
            let v1097 : string = "<" + v944 + " " + v1090 + ">move || { v1096 }</" + v944 + ">"
            let v1098 : string = "leptos::prelude::view! { " + v1097 + " }"
            let v1099 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1098 
            let v1100 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1099 |> unbox
            let v1101 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1102 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1100 v1101 
            let v1103 : string = "v1102"
            let v1104 : string = v1103 + v6 
            let v1105 : string = v1104 + v6 
            let v1106 : string = "v1078"
            let v1107 : string = v1106 + v321 
            let v1108 : string = v1107 + v1105 
            let v1109 : string = "v1054"
            let v1110 : string = v1109 + v321 
            let v1111 : string = v1110 + v1108 
            let v1112 : string = "vec![" + v1111 + "]"
            let v1113 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1112 
            let v1114 : string = "leptos::prelude::Fragment::new($0)"
            let v1115 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1113 v1114 
            let v1116 : string = "leptos::prelude::AnyView::from($0)"
            let v1117 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1115 v1116 
            let v1118 : string = "<" + v1014 + " " + v1030 + ">move || { v1117 }</" + v1014 + ">"
            let v1119 : string = "leptos::prelude::view! { " + v1118 + " }"
            let v1120 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1119 
            let v1121 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v1120 |> unbox
            let v1122 : string = "x=\"16\""
            let v1123 : string = "y=\"10\""
            let v1124 : string = "width=\"4\""
            let v1125 : string = "height=\"10\""
            let v1126 : string = "fill=\"#333\""
            let v1127 : string = "opacity=\"0.2\""
            let v1128 : string = " " + v1122 + v6 + ""
            let v1129 : string = " " + v1123 + v1128 + ""
            let v1130 : string = " " + v1124 + v1129 + ""
            let v1131 : string = " " + v1125 + v1130 + ""
            let v1132 : string = " " + v1126 + v1131 + ""
            let v1133 : string = " " + v1127 + v1132 + ""
            let v1134 : string = "attributeName=\"opacity\""
            let v1135 : string = "attributeType=\"XML\""
            let v1136 : string = "values=\"0.2; 1; .2\""
            let v1137 : string = "begin=\"0.3s\""
            let v1138 : string = "dur=\"0.6s\""
            let v1139 : string = "repeatCount=\"indefinite\""
            let v1140 : string = " " + v1134 + v6 + ""
            let v1141 : string = " " + v1135 + v1140 + ""
            let v1142 : string = " " + v1136 + v1141 + ""
            let v1143 : string = " " + v1137 + v1142 + ""
            let v1144 : string = " " + v1138 + v1143 + ""
            let v1145 : string = " " + v1139 + v1144 + ""
            let v1146 : string = "vec![" + v6 + "]"
            let v1147 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1146 
            let v1148 : string = "leptos::prelude::Fragment::new($0)"
            let v1149 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1147 v1148 
            let v1150 : string = "leptos::prelude::AnyView::from($0)"
            let v1151 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1149 v1150 
            let v1152 : string = "<" + v944 + " " + v1145 + ">move || { v1151 }</" + v944 + ">"
            let v1153 : string = "leptos::prelude::view! { " + v1152 + " }"
            let v1154 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1153 
            let v1155 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1154 |> unbox
            let v1156 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1157 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1155 v1156 
            let v1158 : string = "attributeName=\"height\""
            let v1159 : string = "attributeType=\"XML\""
            let v1160 : string = "values=\"10; 20; 10\""
            let v1161 : string = "begin=\"0.3s\""
            let v1162 : string = "dur=\"0.6s\""
            let v1163 : string = "repeatCount=\"indefinite\""
            let v1164 : string = " " + v1158 + v6 + ""
            let v1165 : string = " " + v1159 + v1164 + ""
            let v1166 : string = " " + v1160 + v1165 + ""
            let v1167 : string = " " + v1161 + v1166 + ""
            let v1168 : string = " " + v1162 + v1167 + ""
            let v1169 : string = " " + v1163 + v1168 + ""
            let v1170 : string = "vec![" + v6 + "]"
            let v1171 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1170 
            let v1172 : string = "leptos::prelude::Fragment::new($0)"
            let v1173 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1171 v1172 
            let v1174 : string = "leptos::prelude::AnyView::from($0)"
            let v1175 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1173 v1174 
            let v1176 : string = "<" + v944 + " " + v1169 + ">move || { v1175 }</" + v944 + ">"
            let v1177 : string = "leptos::prelude::view! { " + v1176 + " }"
            let v1178 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1177 
            let v1179 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1178 |> unbox
            let v1180 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1181 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1179 v1180 
            let v1182 : string = "attributeName=\"y\""
            let v1183 : string = "attributeType=\"XML\""
            let v1184 : string = "values=\"10; 5; 10\""
            let v1185 : string = "begin=\"0.3s\""
            let v1186 : string = "dur=\"0.6s\""
            let v1187 : string = "repeatCount=\"indefinite\""
            let v1188 : string = " " + v1182 + v6 + ""
            let v1189 : string = " " + v1183 + v1188 + ""
            let v1190 : string = " " + v1184 + v1189 + ""
            let v1191 : string = " " + v1185 + v1190 + ""
            let v1192 : string = " " + v1186 + v1191 + ""
            let v1193 : string = " " + v1187 + v1192 + ""
            let v1194 : string = "vec![" + v6 + "]"
            let v1195 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1194 
            let v1196 : string = "leptos::prelude::Fragment::new($0)"
            let v1197 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1195 v1196 
            let v1198 : string = "leptos::prelude::AnyView::from($0)"
            let v1199 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1197 v1198 
            let v1200 : string = "<" + v944 + " " + v1193 + ">move || { v1199 }</" + v944 + ">"
            let v1201 : string = "leptos::prelude::view! { " + v1200 + " }"
            let v1202 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1201 
            let v1203 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1202 |> unbox
            let v1204 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1205 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1203 v1204 
            let v1206 : string = "v1205"
            let v1207 : string = v1206 + v6 
            let v1208 : string = v1207 + v6 
            let v1209 : string = "v1181"
            let v1210 : string = v1209 + v321 
            let v1211 : string = v1210 + v1208 
            let v1212 : string = "v1157"
            let v1213 : string = v1212 + v321 
            let v1214 : string = v1213 + v1211 
            let v1215 : string = "vec![" + v1214 + "]"
            let v1216 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1215 
            let v1217 : string = "leptos::prelude::Fragment::new($0)"
            let v1218 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1216 v1217 
            let v1219 : string = "leptos::prelude::AnyView::from($0)"
            let v1220 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1218 v1219 
            let v1221 : string = "<" + v1014 + " " + v1133 + ">move || { v1220 }</" + v1014 + ">"
            let v1222 : string = "leptos::prelude::view! { " + v1221 + " }"
            let v1223 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1222 
            let v1224 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v1223 |> unbox
            let v1225 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1226 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1224 v1225 
            let v1227 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1228 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1121 v1227 
            let v1229 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1230 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1018 v1229 
            let v1231 : string = "v1226"
            let v1232 : string = v1231 + v6 
            let v1233 : string = v1232 + v6 
            let v1234 : string = "v1228"
            let v1235 : string = v1234 + v321 
            let v1236 : string = v1235 + v1233 
            let v1237 : string = "v1230"
            let v1238 : string = v1237 + v321 
            let v1239 : string = v1238 + v1236 
            let v1240 : string = "vec![" + v1239 + "]"
            let v1241 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1240 
            let v1242 : string = "leptos::prelude::Fragment::new($0)"
            let v1243 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1241 v1242 
            let v1244 : string = "leptos::prelude::AnyView::from($0)"
            let v1245 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1243 v1244 
            let v1246 : string = "<" + v295 + " " + v913 + ">move || { v1245 }</" + v295 + ">"
            let v1247 : string = "leptos::prelude::view! { " + v1246 + " }"
            let v1248 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1247 
            let v1249 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v1248 |> unbox
            let v1250 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1251 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1249 v1250 
            v1251
        else
            let v1252 : string = "vec![" + v6 + "]"
            let v1253 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1252 
            let v1254 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1255 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1253 v1254 
            v1255
    let v1257 : string = "v1256"
    let v1258 : string = v1257 + v6 
    let v1259 : string = v1258 + v6 
    let v1260 : string = "v890"
    let v1261 : string = v1260 + v321 
    let v1262 : string = v1261 + v1259 
    let v1263 : string = "vec![" + v1262 + "]"
    let v1264 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1263 
    let v1265 : string = "leptos::prelude::Fragment::new($0)"
    let v1266 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1264 v1265 
    let v1267 : string = "leptos::prelude::AnyView::from($0)"
    let v1268 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1266 v1267 
    let v1269 : string = "button"
    let v1270 : string = "<" + v1269 + " " + v815 + ">move || { v1268 }</" + v1269 + ">"
    let v1271 : string = "leptos::prelude::view! { " + v1270 + " }"
    let v1272 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1271 
    let v1273 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Button>> = v1272 |> unbox
    let v1274 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v1275 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1273 v1274 
    let v1276 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v1277 : string option = Fable.Core.RustInterop.emitRustExpr v2 v1276 
    let v1280 : (string -> US31) = method106()
    let v1281 : US31 option = v1277 |> Option.map v1280 
    let v1301 : US31 = US31_1
    let v1302 : US31 = v1281 |> Option.defaultValue v1301 
    let v1487 : leptos_prelude_AnyView_ =
        match v1302 with
        | US31_0(v1306) -> (* Some *)
            let v1307 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
            let v1308 : string = " " + v1307 + v6 + ""
            let v1309 : string = "class=\"[height:17px]\""
            let v1310 : string = " " + v1309 + v6 + ""
            let v1311 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v1312 : string = "fill=\"none\""
            let v1313 : string = "height=\"100%\""
            let v1314 : string = "viewBox=\"0 0 24 24\""
            let v1315 : string = "stroke-width=\"1.5\""
            let v1316 : string = "stroke=\"currentColor\""
            let v1317 : string = "class=\"text-red-700\""
            let v1318 : string = " " + v1311 + v6 + ""
            let v1319 : string = " " + v1312 + v1318 + ""
            let v1320 : string = " " + v1313 + v1319 + ""
            let v1321 : string = " " + v1314 + v1320 + ""
            let v1322 : string = " " + v1315 + v1321 + ""
            let v1323 : string = " " + v1316 + v1322 + ""
            let v1324 : string = " " + v1317 + v1323 + ""
            let v1325 : string = "stroke-linecap=\"round\""
            let v1326 : string = "stroke-linejoin=\"round\""
            let v1327 : string = "d=\"M6 18L18 6M6 6l12 12\""
            let v1328 : string = " " + v1325 + v6 + ""
            let v1329 : string = " " + v1326 + v1328 + ""
            let v1330 : string = " " + v1327 + v1329 + ""
            let v1331 : string = "vec![" + v6 + "]"
            let v1332 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1331 
            let v1333 : string = "leptos::prelude::Fragment::new($0)"
            let v1334 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1332 v1333 
            let v1335 : string = "leptos::prelude::AnyView::from($0)"
            let v1336 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1334 v1335 
            let v1337 : string = "<" + v279 + " " + v1330 + ">move || { v1336 }</" + v279 + ">"
            let v1338 : string = "leptos::prelude::view! { " + v1337 + " }"
            let v1339 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1338 
            let v1340 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v1339 |> unbox
            let v1341 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1342 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1340 v1341 
            let v1343 : string = "v1342"
            let v1344 : string = v1343 + v6 
            let v1345 : string = v1344 + v6 
            let v1346 : string = "vec![" + v1345 + "]"
            let v1347 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1346 
            let v1348 : string = "leptos::prelude::Fragment::new($0)"
            let v1349 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1347 v1348 
            let v1350 : string = "leptos::prelude::AnyView::from($0)"
            let v1351 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1349 v1350 
            let v1352 : string = "<" + v295 + " " + v1324 + ">move || { v1351 }</" + v295 + ">"
            let v1353 : string = "leptos::prelude::view! { " + v1352 + " }"
            let v1354 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1353 
            let v1355 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v1354 |> unbox
            let v1356 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1357 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1355 v1356 
            let v1358 : string = "v1357"
            let v1359 : string = v1358 + v6 
            let v1360 : string = v1359 + v6 
            let v1361 : string = "vec![" + v1360 + "]"
            let v1362 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1361 
            let v1363 : string = "leptos::prelude::Fragment::new($0)"
            let v1364 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1362 v1363 
            let v1365 : string = "leptos::prelude::AnyView::from($0)"
            let v1366 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1364 v1365 
            let v1367 : string = "<" + v232 + " " + v1310 + ">move || { v1366 }</" + v232 + ">"
            let v1368 : string = "leptos::prelude::view! { " + v1367 + " }"
            let v1369 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1368 
            let v1370 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v1369 |> unbox
            let v1371 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1372 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1370 v1371 
            let v1373 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
            let v1374 : string = " " + v1373 + v6 + ""
            (* run_target_args'
            let v1379 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1380 : string = "&*$0"
            let v1381 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1306 v1380 
            let _run_target_args'_v1379 = v1381 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1382 : string = "&*$0"
            let v1383 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1306 v1382 
            let _run_target_args'_v1379 = v1383 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1384 : string = "&*$0"
            let v1385 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1306 v1384 
            let _run_target_args'_v1379 = v1385 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1387 : Ref<Str> = v1306 |> unbox<Ref<Str>>
            let _run_target_args'_v1379 = v1387 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1391 : Ref<Str> = v1306 |> unbox<Ref<Str>>
            let _run_target_args'_v1379 = v1391 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1395 : Ref<Str> = v1306 |> unbox<Ref<Str>>
            let _run_target_args'_v1379 = v1395 
            #endif
#else
            let v1399 : Ref<Str> = v1306 |> unbox<Ref<Str>>
            let _run_target_args'_v1379 = v1399 
            #endif
            let v1402 : Ref<Str> = _run_target_args'_v1379 
            (* run_target_args'
            let v1415 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1416 : string = "String::from($0)"
            let v1417 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1402 v1416 
            let _run_target_args'_v1415 = v1417 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1418 : string = "String::from($0)"
            let v1419 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1402 v1418 
            let _run_target_args'_v1415 = v1419 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1420 : string = "String::from($0)"
            let v1421 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1402 v1420 
            let _run_target_args'_v1415 = v1421 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1423 : std_string_String = v1402 |> unbox<std_string_String>
            let _run_target_args'_v1415 = v1423 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1427 : std_string_String = v1402 |> unbox<std_string_String>
            let _run_target_args'_v1415 = v1427 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1431 : std_string_String = v1402 |> unbox<std_string_String>
            let _run_target_args'_v1415 = v1431 
            #endif
#else
            let v1435 : std_string_String = v1402 |> unbox<std_string_String>
            let _run_target_args'_v1415 = v1435 
            #endif
            let v1438 : std_string_String = _run_target_args'_v1415 
            let v1447 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v1448 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1438 v1447 
            let v1449 : string = "v1448"
            let v1450 : string = v1449 + v6 
            let v1451 : string = v1450 + v6 
            let v1452 : string = "vec![" + v1451 + "]"
            let v1453 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1452 
            let v1454 : string = "leptos::prelude::Fragment::new($0)"
            let v1455 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1453 v1454 
            let v1456 : string = "leptos::prelude::AnyView::from($0)"
            let v1457 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1455 v1456 
            let v1458 : string = "pre"
            let v1459 : string = "<" + v1458 + " " + v1374 + ">move || { v1457 }</" + v1458 + ">"
            let v1460 : string = "leptos::prelude::view! { " + v1459 + " }"
            let v1461 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1460 
            let v1462 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v1461 |> unbox
            let v1463 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1464 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1462 v1463 
            let v1465 : string = "v1464"
            let v1466 : string = v1465 + v6 
            let v1467 : string = v1466 + v6 
            let v1468 : string = "v1372"
            let v1469 : string = v1468 + v321 
            let v1470 : string = v1469 + v1467 
            let v1471 : string = "vec![" + v1470 + "]"
            let v1472 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1471 
            let v1473 : string = "leptos::prelude::Fragment::new($0)"
            let v1474 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1472 v1473 
            let v1475 : string = "leptos::prelude::AnyView::from($0)"
            let v1476 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1474 v1475 
            let v1477 : string = "<" + v124 + " " + v1308 + ">move || { v1476 }</" + v124 + ">"
            let v1478 : string = "leptos::prelude::view! { " + v1477 + " }"
            let v1479 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1478 
            let v1480 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1479 |> unbox
            let v1481 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1482 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1480 v1481 
            v1482
        | _ ->
            let v1483 : string = "vec![" + v6 + "]"
            let v1484 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1483 
            let v1485 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1486 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1484 v1485 
            v1486
    let v1488 : string = "v1487"
    let v1489 : string = v1488 + v6 
    let v1490 : string = v1489 + v6 
    let v1491 : string = "v1275"
    let v1492 : string = v1491 + v321 
    let v1493 : string = v1492 + v1490 
    let v1494 : string = "vec![" + v1493 + "]"
    let v1495 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1494 
    let v1496 : string = "leptos::prelude::Fragment::new($0)"
    let v1497 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1495 v1496 
    let v1498 : string = "leptos::prelude::AnyView::from($0)"
    let v1499 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1497 v1498 
    let v1500 : string = "<" + v124 + " " + v596 + ">move || { v1499 }</" + v124 + ">"
    let v1501 : string = "leptos::prelude::view! { " + v1500 + " }"
    let v1502 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1501 
    let v1503 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1502 |> unbox
    let v1504 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v1505 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1503 v1504 
    let v1506 : string = "v1505"
    let v1507 : string = v1506 + v6 
    let v1508 : string = v1507 + v6 
    let v1509 : string = "v594"
    let v1510 : string = v1509 + v321 
    let v1511 : string = v1510 + v1508 
    let v1512 : string = "v407"
    let v1513 : string = v1512 + v321 
    let v1514 : string = v1513 + v1511 
    let v1515 : string = "vec![" + v1514 + "]"
    let v1516 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1515 
    let v1517 : string = "leptos::prelude::Fragment::new($0)"
    let v1518 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1516 v1517 
    let v1519 : string = "leptos::prelude::AnyView::from($0)"
    let v1520 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1518 v1519 
    let v1521 : string = "<" + v124 + " " + v7 + ">move || { v1520 }</" + v124 + ">"
    let v1522 : string = "leptos::prelude::view! { " + v1521 + " }"
    let v1523 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1522 
    let v1524 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1523 |> unbox
    let v1525 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v1526 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1524 v1525 
    let v1527 : string = "v1526"
    let v1528 : string = v1527 + v6 
    let v1529 : string = v1528 + v6 
    let v1530 : string = "vec![" + v1529 + "]"
    let v1531 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1530 
    let v1532 : string = "leptos::prelude::Fragment::new($0)"
    let v1533 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1531 v1532 
    v1533
and closure183 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure184 () () : Ref<Lifetime<StaticLifetime, Str>> =
    let v0 : string = ""
    let v1 : string = "r#\"" + v0 + "\"#"
    let v2 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v1 
    v2
and closure185 () () : string =
    let v0 : string = "History"
    v0
and method198 () : (unit -> string) =
    closure185()
and method200 (v0 : Func0<struct (std_string_String * std_string_String option), struct (string * US31)>) : Func0<struct (std_string_String * std_string_String option), struct (string * US31)> =
    v0
and closure188 (v0 : Func0<struct (std_string_String * std_string_String option), struct (string * US31)>) struct (v1 : std_string_String, v2 : std_string_String option) : struct (string * US31) =
    let v3 : Func0<struct (std_string_String * std_string_String option), struct (string * US31)> = method200(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let struct (v6 : string, v7 : US31) = Fable.Core.RustInterop.emitRustExpr v4 v5 
    struct (v6, v7)
and closure189 () struct (v0 : string, v1 : US31) : bool =
    let v2 : bool = "FUNCTION_CALL" = v0
    if v2 then
        match v1 with
        | US31_0(v3) -> (* Some *)
            let v4 : bool = "generate_random_number" = v3
            v4
        | _ ->
            false
    else
        false
and method201 () : (struct (string * US31) -> bool) =
    closure189()
and method202 (v0 : Vec<struct (string * US31)>) : Vec<struct (string * US31)> =
    v0
and closure187 () struct (v0 : string, v1 : unativeint, v2 : Heap5) : bool =
    let v3 : (struct (std_string_String * std_string_String option) []) = v2.l7
    let v4 : string = "$0.to_vec()"
    let v5 : Vec<struct (std_string_String * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : unit = ()
    let v7 : string = $"true; let _func1_from_v6 = Func1::from(move |value| {{ //"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr () v7 
    let v9 : string = $"value"
    let struct (v10 : std_string_String, v11 : std_string_String option) = Fable.Core.RustInterop.emitRustExpr () v9 
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v10 v12 
    let v16 : (std_string_String -> US14) = method39()
    let v17 : US14 option = v11 |> Option.map v16 
    let v37 : US14 = US14_1
    let v38 : US14 = v17 |> Option.defaultValue v37 
    let v48 : US31 =
        match v38 with
        | US14_1 -> (* None *)
            US31_1
        | US14_0(v42) -> (* Some *)
            let v43 : string = "fable_library_rust::String_::fromString($0)"
            let v44 : string = Fable.Core.RustInterop.emitRustExpr v42 v43 
            US31_0(v44)
    let func1_from_result = struct (v13, v48) //
    let v49 : _ = func1_from_result
    let v50 : string = $"true; $0 /*"
    let v51 : bool = Fable.Core.RustInterop.emitRustExpr v49 v50 
    let v52 : string = $"*/ }}); //"
    let v53 : bool = Fable.Core.RustInterop.emitRustExpr () v52 
    let v54 : string = $"_func1_from_v6"
    let v55 : Func0<struct (std_string_String * std_string_String option), struct (string * US31)> = Fable.Core.RustInterop.emitRustExpr () v54 
    let v56 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v57 : (struct (std_string_String * std_string_String option) -> struct (string * US31)) = closure188(v55)
    let v58 : Vec<struct (string * US31)> = Fable.Core.RustInterop.emitRustExpr struct (v5, v57) v56 
    let v59 : (struct (string * US31) -> bool) = method201()
    let v60 : Vec<struct (string * US31)> = method202(v58)
    let v61 : string = "v60.into_iter().filter(|x| v59(x.clone().clone())).collect::<Vec<_>>()"
    let v62 : Vec<struct (string * US31)> = Fable.Core.RustInterop.emitRustExpr () v61 
    let v63 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v64 : (struct (string * US31) []) = Fable.Core.RustInterop.emitRustExpr v62 v63 
    let v65 : int32 = v64.Length
    let v66 : bool = v65 > 0
    let v67 : std_string_String = v2.l2
    let v68 : string = "fable_library_rust::String_::fromString($0)"
    let v69 : string = Fable.Core.RustInterop.emitRustExpr v67 v68 
    let v70 : bool = v0 = v69
    let v71 : bool = v66 && v70
    v71
and method199 () : (struct (string * unativeint * Heap5) -> bool) =
    closure187()
and method203 (v0 : Vec<struct (string * unativeint * Heap5)>) : Vec<struct (string * unativeint * Heap5)> =
    v0
and method204 (v0 : int64) : int64 =
    v0
and closure190 () (v0 : chrono_DateTime<chrono_Utc>) : US68 =
    US68_0(v0)
and method205 () : (chrono_DateTime<chrono_Utc> -> US68) =
    closure190()
and method206 (v0 : int32, v1 : Mut2) : bool =
    let v2 : int32 = v1.l0
    let v3 : bool = v2 < v0
    v3
and closure191 () () : string =
    let v0 : string = "[width:24px] [height:30px]"
    v0
and closure186 (v0 : leptos_prelude_ArcMemo<Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>>, v1 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>, v2 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>>) () : leptos_dom_Fragment =
    let v3 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v4 : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v6 : (struct (string * Vec<struct (string * US23 * string * bool * bool)>) []) = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : uint64 = System.Convert.ToUInt64 v6.Length
    let v8 : bool = v7 = 0UL
    let v2540 : leptos_prelude_AnyView_ =
        if v8 then
            let v9 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
            let v10 : string = ""
            let v11 : string = " " + v9 + v10 + ""
            let v12 : string = "class=\"[height:17px]\""
            let v13 : string = " " + v12 + v10 + ""
            let v14 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v15 : string = "fill=\"none\""
            let v16 : string = "height=\"100%\""
            let v17 : string = "viewBox=\"0 0 24 24\""
            let v18 : string = "stroke-width=\"1.5\""
            let v19 : string = "stroke=\"currentColor\""
            let v20 : string = "class=\"text-red-700\""
            let v21 : string = " " + v14 + v10 + ""
            let v22 : string = " " + v15 + v21 + ""
            let v23 : string = " " + v16 + v22 + ""
            let v24 : string = " " + v17 + v23 + ""
            let v25 : string = " " + v18 + v24 + ""
            let v26 : string = " " + v19 + v25 + ""
            let v27 : string = " " + v20 + v26 + ""
            let v28 : string = "stroke-linecap=\"round\""
            let v29 : string = "stroke-linejoin=\"round\""
            let v30 : string = "d=\"M6 18L18 6M6 6l12 12\""
            let v31 : string = " " + v28 + v10 + ""
            let v32 : string = " " + v29 + v31 + ""
            let v33 : string = " " + v30 + v32 + ""
            let v34 : string = "vec![" + v10 + "]"
            let v35 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v34 
            let v36 : string = "leptos::prelude::Fragment::new($0)"
            let v37 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v35 v36 
            let v38 : string = "leptos::prelude::AnyView::from($0)"
            let v39 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v37 v38 
            let v40 : string = "path"
            let v41 : string = "<" + v40 + " " + v33 + ">move || { v39 }</" + v40 + ">"
            let v42 : string = "leptos::prelude::view! { " + v41 + " }"
            let v43 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v42 
            let v44 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v43 |> unbox
            let v45 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v46 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v44 v45 
            let v47 : string = "v46"
            let v48 : string = v47 + v10 
            let v49 : string = v48 + v10 
            let v50 : string = "vec![" + v49 + "]"
            let v51 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v50 
            let v52 : string = "leptos::prelude::Fragment::new($0)"
            let v53 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v51 v52 
            let v54 : string = "leptos::prelude::AnyView::from($0)"
            let v55 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v53 v54 
            let v56 : string = "svg"
            let v57 : string = "<" + v56 + " " + v27 + ">move || { v55 }</" + v56 + ">"
            let v58 : string = "leptos::prelude::view! { " + v57 + " }"
            let v59 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v58 
            let v60 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v59 |> unbox
            let v61 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v62 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v60 v61 
            let v63 : string = "v62"
            let v64 : string = v63 + v10 
            let v65 : string = v64 + v10 
            let v66 : string = "vec![" + v65 + "]"
            let v67 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v66 
            let v68 : string = "leptos::prelude::Fragment::new($0)"
            let v69 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v67 v68 
            let v70 : string = "leptos::prelude::AnyView::from($0)"
            let v71 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v69 v70 
            let v72 : string = "span"
            let v73 : string = "<" + v72 + " " + v13 + ">move || { v71 }</" + v72 + ">"
            let v74 : string = "leptos::prelude::view! { " + v73 + " }"
            let v75 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v74 
            let v76 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v75 |> unbox
            let v77 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v78 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v76 v77 
            let v79 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
            let v80 : string = " " + v79 + v10 + ""
            let v81 : string = "No account selected"
            (* run_target_args'
            let v86 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v87 : string = "&*$0"
            let v88 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v87 
            let _run_target_args'_v86 = v88 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v89 : string = "&*$0"
            let v90 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v89 
            let _run_target_args'_v86 = v90 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v91 : string = "&*$0"
            let v92 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v91 
            let _run_target_args'_v86 = v92 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v94 : Ref<Str> = v81 |> unbox<Ref<Str>>
            let _run_target_args'_v86 = v94 
            #endif
#if FABLE_COMPILER_PYTHON
            let v98 : Ref<Str> = v81 |> unbox<Ref<Str>>
            let _run_target_args'_v86 = v98 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v102 : Ref<Str> = v81 |> unbox<Ref<Str>>
            let _run_target_args'_v86 = v102 
            #endif
#else
            let v106 : Ref<Str> = v81 |> unbox<Ref<Str>>
            let _run_target_args'_v86 = v106 
            #endif
            let v109 : Ref<Str> = _run_target_args'_v86 
            (* run_target_args'
            let v122 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v123 : string = "String::from($0)"
            let v124 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v123 
            let _run_target_args'_v122 = v124 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v125 : string = "String::from($0)"
            let v126 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v125 
            let _run_target_args'_v122 = v126 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v127 : string = "String::from($0)"
            let v128 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v127 
            let _run_target_args'_v122 = v128 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v130 : std_string_String = v109 |> unbox<std_string_String>
            let _run_target_args'_v122 = v130 
            #endif
#if FABLE_COMPILER_PYTHON
            let v134 : std_string_String = v109 |> unbox<std_string_String>
            let _run_target_args'_v122 = v134 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v138 : std_string_String = v109 |> unbox<std_string_String>
            let _run_target_args'_v122 = v138 
            #endif
#else
            let v142 : std_string_String = v109 |> unbox<std_string_String>
            let _run_target_args'_v122 = v142 
            #endif
            let v145 : std_string_String = _run_target_args'_v122 
            let v154 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v155 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v145 v154 
            let v156 : string = "v155"
            let v157 : string = v156 + v10 
            let v158 : string = v157 + v10 
            let v159 : string = "vec![" + v158 + "]"
            let v160 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v159 
            let v161 : string = "leptos::prelude::Fragment::new($0)"
            let v162 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v160 v161 
            let v163 : string = "leptos::prelude::AnyView::from($0)"
            let v164 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v162 v163 
            let v165 : string = "pre"
            let v166 : string = "<" + v165 + " " + v80 + ">move || { v164 }</" + v165 + ">"
            let v167 : string = "leptos::prelude::view! { " + v166 + " }"
            let v168 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v167 
            let v169 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v168 |> unbox
            let v170 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v171 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v169 v170 
            let v172 : string = "v171"
            let v173 : string = v172 + v10 
            let v174 : string = v173 + v10 
            let v175 : string = "v78"
            let v176 : string = ", "
            let v177 : string = v175 + v176 
            let v178 : string = v177 + v174 
            let v179 : string = "vec![" + v178 + "]"
            let v180 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v179 
            let v181 : string = "leptos::prelude::Fragment::new($0)"
            let v182 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v180 v181 
            let v183 : string = "leptos::prelude::AnyView::from($0)"
            let v184 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v182 v183 
            let v185 : string = "div"
            let v186 : string = "<" + v185 + " " + v11 + ">move || { v184 }</" + v185 + ">"
            let v187 : string = "leptos::prelude::view! { " + v186 + " }"
            let v188 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v187 
            let v189 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v188 |> unbox
            let v190 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v191 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v189 v190 
            v191
        else
            let v192 : string = $"leptos::prelude::ArcMemo::get(&$0)"
            let v193 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v1 v192 
            let v194 : ((struct (string * unativeint * Heap5) []) option -> US53) = method138()
            let v195 : (std_string_String -> US53) = method139()
            let v197 : US53 = match v193 with Ok x -> v194 x | Error x -> v195 x
            let v233 : US46 =
                match v197 with
                | US53_1(v230) -> (* Error *)
                    US46_1(v230)
                | US53_0(v200) -> (* Ok *)
                    let v203 : ((struct (string * unativeint * Heap5) []) -> US47) = method140()
                    let v204 : US47 option = v200 |> Option.map v203 
                    let v224 : US47 = US47_1
                    let v225 : US47 = v204 |> Option.defaultValue v224 
                    US46_0(v225)
            match v233 with
            | US46_1(v2353) -> (* Error *)
                let v2354 : string = "fable_library_rust::String_::fromString($0)"
                let v2355 : string = Fable.Core.RustInterop.emitRustExpr v2353 v2354 
                let v2356 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
                let v2357 : string = ""
                let v2358 : string = " " + v2356 + v2357 + ""
                let v2359 : string = "class=\"[height:17px]\""
                let v2360 : string = " " + v2359 + v2357 + ""
                let v2361 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                let v2362 : string = "fill=\"none\""
                let v2363 : string = "height=\"100%\""
                let v2364 : string = "viewBox=\"0 0 24 24\""
                let v2365 : string = "stroke-width=\"1.5\""
                let v2366 : string = "stroke=\"currentColor\""
                let v2367 : string = "class=\"text-red-700\""
                let v2368 : string = " " + v2361 + v2357 + ""
                let v2369 : string = " " + v2362 + v2368 + ""
                let v2370 : string = " " + v2363 + v2369 + ""
                let v2371 : string = " " + v2364 + v2370 + ""
                let v2372 : string = " " + v2365 + v2371 + ""
                let v2373 : string = " " + v2366 + v2372 + ""
                let v2374 : string = " " + v2367 + v2373 + ""
                let v2375 : string = "stroke-linecap=\"round\""
                let v2376 : string = "stroke-linejoin=\"round\""
                let v2377 : string = "d=\"M6 18L18 6M6 6l12 12\""
                let v2378 : string = " " + v2375 + v2357 + ""
                let v2379 : string = " " + v2376 + v2378 + ""
                let v2380 : string = " " + v2377 + v2379 + ""
                let v2381 : string = "vec![" + v2357 + "]"
                let v2382 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2381 
                let v2383 : string = "leptos::prelude::Fragment::new($0)"
                let v2384 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2382 v2383 
                let v2385 : string = "leptos::prelude::AnyView::from($0)"
                let v2386 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2384 v2385 
                let v2387 : string = "path"
                let v2388 : string = "<" + v2387 + " " + v2380 + ">move || { v2386 }</" + v2387 + ">"
                let v2389 : string = "leptos::prelude::view! { " + v2388 + " }"
                let v2390 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2389 
                let v2391 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v2390 |> unbox
                let v2392 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v2393 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2391 v2392 
                let v2394 : string = "v2393"
                let v2395 : string = v2394 + v2357 
                let v2396 : string = v2395 + v2357 
                let v2397 : string = "vec![" + v2396 + "]"
                let v2398 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2397 
                let v2399 : string = "leptos::prelude::Fragment::new($0)"
                let v2400 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2398 v2399 
                let v2401 : string = "leptos::prelude::AnyView::from($0)"
                let v2402 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2400 v2401 
                let v2403 : string = "svg"
                let v2404 : string = "<" + v2403 + " " + v2374 + ">move || { v2402 }</" + v2403 + ">"
                let v2405 : string = "leptos::prelude::view! { " + v2404 + " }"
                let v2406 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2405 
                let v2407 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v2406 |> unbox
                let v2408 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v2409 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2407 v2408 
                let v2410 : string = "v2409"
                let v2411 : string = v2410 + v2357 
                let v2412 : string = v2411 + v2357 
                let v2413 : string = "vec![" + v2412 + "]"
                let v2414 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2413 
                let v2415 : string = "leptos::prelude::Fragment::new($0)"
                let v2416 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2414 v2415 
                let v2417 : string = "leptos::prelude::AnyView::from($0)"
                let v2418 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2416 v2417 
                let v2419 : string = "span"
                let v2420 : string = "<" + v2419 + " " + v2360 + ">move || { v2418 }</" + v2419 + ">"
                let v2421 : string = "leptos::prelude::view! { " + v2420 + " }"
                let v2422 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2421 
                let v2423 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v2422 |> unbox
                let v2424 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v2425 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2423 v2424 
                let v2426 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
                let v2427 : string = " " + v2426 + v2357 + ""
                (* run_target_args'
                let v2432 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v2433 : string = "&*$0"
                let v2434 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2355 v2433 
                let _run_target_args'_v2432 = v2434 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v2435 : string = "&*$0"
                let v2436 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2355 v2435 
                let _run_target_args'_v2432 = v2436 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v2437 : string = "&*$0"
                let v2438 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2355 v2437 
                let _run_target_args'_v2432 = v2438 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v2440 : Ref<Str> = v2355 |> unbox<Ref<Str>>
                let _run_target_args'_v2432 = v2440 
                #endif
#if FABLE_COMPILER_PYTHON
                let v2444 : Ref<Str> = v2355 |> unbox<Ref<Str>>
                let _run_target_args'_v2432 = v2444 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v2448 : Ref<Str> = v2355 |> unbox<Ref<Str>>
                let _run_target_args'_v2432 = v2448 
                #endif
#else
                let v2452 : Ref<Str> = v2355 |> unbox<Ref<Str>>
                let _run_target_args'_v2432 = v2452 
                #endif
                let v2455 : Ref<Str> = _run_target_args'_v2432 
                (* run_target_args'
                let v2468 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v2469 : string = "String::from($0)"
                let v2470 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2455 v2469 
                let _run_target_args'_v2468 = v2470 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v2471 : string = "String::from($0)"
                let v2472 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2455 v2471 
                let _run_target_args'_v2468 = v2472 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v2473 : string = "String::from($0)"
                let v2474 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2455 v2473 
                let _run_target_args'_v2468 = v2474 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v2476 : std_string_String = v2455 |> unbox<std_string_String>
                let _run_target_args'_v2468 = v2476 
                #endif
#if FABLE_COMPILER_PYTHON
                let v2480 : std_string_String = v2455 |> unbox<std_string_String>
                let _run_target_args'_v2468 = v2480 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v2484 : std_string_String = v2455 |> unbox<std_string_String>
                let _run_target_args'_v2468 = v2484 
                #endif
#else
                let v2488 : std_string_String = v2455 |> unbox<std_string_String>
                let _run_target_args'_v2468 = v2488 
                #endif
                let v2491 : std_string_String = _run_target_args'_v2468 
                let v2500 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                let v2501 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2491 v2500 
                let v2502 : string = "v2501"
                let v2503 : string = v2502 + v2357 
                let v2504 : string = v2503 + v2357 
                let v2505 : string = "vec![" + v2504 + "]"
                let v2506 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2505 
                let v2507 : string = "leptos::prelude::Fragment::new($0)"
                let v2508 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2506 v2507 
                let v2509 : string = "leptos::prelude::AnyView::from($0)"
                let v2510 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2508 v2509 
                let v2511 : string = "pre"
                let v2512 : string = "<" + v2511 + " " + v2427 + ">move || { v2510 }</" + v2511 + ">"
                let v2513 : string = "leptos::prelude::view! { " + v2512 + " }"
                let v2514 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2513 
                let v2515 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v2514 |> unbox
                let v2516 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v2517 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2515 v2516 
                let v2518 : string = "v2517"
                let v2519 : string = v2518 + v2357 
                let v2520 : string = v2519 + v2357 
                let v2521 : string = "v2425"
                let v2522 : string = ", "
                let v2523 : string = v2521 + v2522 
                let v2524 : string = v2523 + v2520 
                let v2525 : string = "vec![" + v2524 + "]"
                let v2526 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2525 
                let v2527 : string = "leptos::prelude::Fragment::new($0)"
                let v2528 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2526 v2527 
                let v2529 : string = "leptos::prelude::AnyView::from($0)"
                let v2530 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2528 v2529 
                let v2531 : string = "div"
                let v2532 : string = "<" + v2531 + " " + v2358 + ">move || { v2530 }</" + v2531 + ">"
                let v2533 : string = "leptos::prelude::view! { " + v2532 + " }"
                let v2534 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2533 
                let v2535 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v2534 |> unbox
                let v2536 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v2537 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2535 v2536 
                v2537
            | US46_0(v234) -> (* Ok *)
                match v234 with
                | US47_0(v235) -> (* Some *)
                    let v236 : string = "$0.to_vec()"
                    let v237 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr v235 v236 
                    let v238 : (struct (string * unativeint * Heap5) -> bool) = method199()
                    let v239 : Vec<struct (string * unativeint * Heap5)> = method203(v237)
                    let v240 : string = "v239.into_iter().filter(|x| v238(x.clone().clone())).collect::<Vec<_>>()"
                    let v241 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr () v240 
                    let v242 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v243 : string = ""
                    let v244 : string = " " + v242 + v243 + ""
                    let v245 : string = "Block Timestamp"
                    (* run_target_args'
                    let v250 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v251 : string = "&*$0"
                    let v252 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v245 v251 
                    let _run_target_args'_v250 = v252 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v253 : string = "&*$0"
                    let v254 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v245 v253 
                    let _run_target_args'_v250 = v254 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v255 : string = "&*$0"
                    let v256 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v245 v255 
                    let _run_target_args'_v250 = v256 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v258 : Ref<Str> = v245 |> unbox<Ref<Str>>
                    let _run_target_args'_v250 = v258 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v262 : Ref<Str> = v245 |> unbox<Ref<Str>>
                    let _run_target_args'_v250 = v262 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v266 : Ref<Str> = v245 |> unbox<Ref<Str>>
                    let _run_target_args'_v250 = v266 
                    #endif
#else
                    let v270 : Ref<Str> = v245 |> unbox<Ref<Str>>
                    let _run_target_args'_v250 = v270 
                    #endif
                    let v273 : Ref<Str> = _run_target_args'_v250 
                    (* run_target_args'
                    let v286 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v287 : string = "String::from($0)"
                    let v288 : std_string_String = Fable.Core.RustInterop.emitRustExpr v273 v287 
                    let _run_target_args'_v286 = v288 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v289 : string = "String::from($0)"
                    let v290 : std_string_String = Fable.Core.RustInterop.emitRustExpr v273 v289 
                    let _run_target_args'_v286 = v290 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v291 : string = "String::from($0)"
                    let v292 : std_string_String = Fable.Core.RustInterop.emitRustExpr v273 v291 
                    let _run_target_args'_v286 = v292 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v294 : std_string_String = v273 |> unbox<std_string_String>
                    let _run_target_args'_v286 = v294 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v298 : std_string_String = v273 |> unbox<std_string_String>
                    let _run_target_args'_v286 = v298 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v302 : std_string_String = v273 |> unbox<std_string_String>
                    let _run_target_args'_v286 = v302 
                    #endif
#else
                    let v306 : std_string_String = v273 |> unbox<std_string_String>
                    let _run_target_args'_v286 = v306 
                    #endif
                    let v309 : std_string_String = _run_target_args'_v286 
                    let v318 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v319 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v309 v318 
                    let v320 : string = "v319"
                    let v321 : string = v320 + v243 
                    let v322 : string = v321 + v243 
                    let v323 : string = "vec![" + v322 + "]"
                    let v324 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v323 
                    let v325 : string = "leptos::prelude::Fragment::new($0)"
                    let v326 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v324 v325 
                    let v327 : string = "leptos::prelude::AnyView::from($0)"
                    let v328 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v326 v327 
                    let v329 : string = "th"
                    let v330 : string = "<" + v329 + " " + v244 + ">move || { v328 }</" + v329 + ">"
                    let v331 : string = "leptos::prelude::view! { " + v330 + " }"
                    let v332 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v331 
                    let v333 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v332 |> unbox
                    let v334 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v335 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v333 v334 
                    let v336 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v337 : string = " " + v336 + v243 + ""
                    let v338 : string = "Predecessor"
                    (* run_target_args'
                    let v343 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v344 : string = "&*$0"
                    let v345 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v338 v344 
                    let _run_target_args'_v343 = v345 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v346 : string = "&*$0"
                    let v347 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v338 v346 
                    let _run_target_args'_v343 = v347 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v348 : string = "&*$0"
                    let v349 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v338 v348 
                    let _run_target_args'_v343 = v349 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v351 : Ref<Str> = v338 |> unbox<Ref<Str>>
                    let _run_target_args'_v343 = v351 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v355 : Ref<Str> = v338 |> unbox<Ref<Str>>
                    let _run_target_args'_v343 = v355 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v359 : Ref<Str> = v338 |> unbox<Ref<Str>>
                    let _run_target_args'_v343 = v359 
                    #endif
#else
                    let v363 : Ref<Str> = v338 |> unbox<Ref<Str>>
                    let _run_target_args'_v343 = v363 
                    #endif
                    let v366 : Ref<Str> = _run_target_args'_v343 
                    (* run_target_args'
                    let v379 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v380 : string = "String::from($0)"
                    let v381 : std_string_String = Fable.Core.RustInterop.emitRustExpr v366 v380 
                    let _run_target_args'_v379 = v381 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v382 : string = "String::from($0)"
                    let v383 : std_string_String = Fable.Core.RustInterop.emitRustExpr v366 v382 
                    let _run_target_args'_v379 = v383 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v384 : string = "String::from($0)"
                    let v385 : std_string_String = Fable.Core.RustInterop.emitRustExpr v366 v384 
                    let _run_target_args'_v379 = v385 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v387 : std_string_String = v366 |> unbox<std_string_String>
                    let _run_target_args'_v379 = v387 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v391 : std_string_String = v366 |> unbox<std_string_String>
                    let _run_target_args'_v379 = v391 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v395 : std_string_String = v366 |> unbox<std_string_String>
                    let _run_target_args'_v379 = v395 
                    #endif
#else
                    let v399 : std_string_String = v366 |> unbox<std_string_String>
                    let _run_target_args'_v379 = v399 
                    #endif
                    let v402 : std_string_String = _run_target_args'_v379 
                    let v411 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v412 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v402 v411 
                    let v413 : string = "v412"
                    let v414 : string = v413 + v243 
                    let v415 : string = v414 + v243 
                    let v416 : string = "vec![" + v415 + "]"
                    let v417 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v416 
                    let v418 : string = "leptos::prelude::Fragment::new($0)"
                    let v419 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v417 v418 
                    let v420 : string = "leptos::prelude::AnyView::from($0)"
                    let v421 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v419 v420 
                    let v422 : string = "<" + v329 + " " + v337 + ">move || { v421 }</" + v329 + ">"
                    let v423 : string = "leptos::prelude::view! { " + v422 + " }"
                    let v424 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v423 
                    let v425 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v424 |> unbox
                    let v426 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v427 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v425 v426 
                    let v428 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v429 : string = " " + v428 + v243 + ""
                    let v430 : string = "Receiver"
                    (* run_target_args'
                    let v435 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v436 : string = "&*$0"
                    let v437 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v430 v436 
                    let _run_target_args'_v435 = v437 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v438 : string = "&*$0"
                    let v439 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v430 v438 
                    let _run_target_args'_v435 = v439 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v440 : string = "&*$0"
                    let v441 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v430 v440 
                    let _run_target_args'_v435 = v441 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v443 : Ref<Str> = v430 |> unbox<Ref<Str>>
                    let _run_target_args'_v435 = v443 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v447 : Ref<Str> = v430 |> unbox<Ref<Str>>
                    let _run_target_args'_v435 = v447 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v451 : Ref<Str> = v430 |> unbox<Ref<Str>>
                    let _run_target_args'_v435 = v451 
                    #endif
#else
                    let v455 : Ref<Str> = v430 |> unbox<Ref<Str>>
                    let _run_target_args'_v435 = v455 
                    #endif
                    let v458 : Ref<Str> = _run_target_args'_v435 
                    (* run_target_args'
                    let v471 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v472 : string = "String::from($0)"
                    let v473 : std_string_String = Fable.Core.RustInterop.emitRustExpr v458 v472 
                    let _run_target_args'_v471 = v473 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v474 : string = "String::from($0)"
                    let v475 : std_string_String = Fable.Core.RustInterop.emitRustExpr v458 v474 
                    let _run_target_args'_v471 = v475 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v476 : string = "String::from($0)"
                    let v477 : std_string_String = Fable.Core.RustInterop.emitRustExpr v458 v476 
                    let _run_target_args'_v471 = v477 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v479 : std_string_String = v458 |> unbox<std_string_String>
                    let _run_target_args'_v471 = v479 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v483 : std_string_String = v458 |> unbox<std_string_String>
                    let _run_target_args'_v471 = v483 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v487 : std_string_String = v458 |> unbox<std_string_String>
                    let _run_target_args'_v471 = v487 
                    #endif
#else
                    let v491 : std_string_String = v458 |> unbox<std_string_String>
                    let _run_target_args'_v471 = v491 
                    #endif
                    let v494 : std_string_String = _run_target_args'_v471 
                    let v503 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v504 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v494 v503 
                    let v505 : string = "v504"
                    let v506 : string = v505 + v243 
                    let v507 : string = v506 + v243 
                    let v508 : string = "vec![" + v507 + "]"
                    let v509 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v508 
                    let v510 : string = "leptos::prelude::Fragment::new($0)"
                    let v511 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v509 v510 
                    let v512 : string = "leptos::prelude::AnyView::from($0)"
                    let v513 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v511 v512 
                    let v514 : string = "<" + v329 + " " + v429 + ">move || { v513 }</" + v329 + ">"
                    let v515 : string = "leptos::prelude::view! { " + v514 + " }"
                    let v516 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v515 
                    let v517 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v516 |> unbox
                    let v518 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v519 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v517 v518 
                    let v520 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v521 : string = " " + v520 + v243 + ""
                    let v522 : string = "Fee"
                    (* run_target_args'
                    let v527 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v528 : string = "&*$0"
                    let v529 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v522 v528 
                    let _run_target_args'_v527 = v529 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v530 : string = "&*$0"
                    let v531 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v522 v530 
                    let _run_target_args'_v527 = v531 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v532 : string = "&*$0"
                    let v533 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v522 v532 
                    let _run_target_args'_v527 = v533 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v535 : Ref<Str> = v522 |> unbox<Ref<Str>>
                    let _run_target_args'_v527 = v535 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v539 : Ref<Str> = v522 |> unbox<Ref<Str>>
                    let _run_target_args'_v527 = v539 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v543 : Ref<Str> = v522 |> unbox<Ref<Str>>
                    let _run_target_args'_v527 = v543 
                    #endif
#else
                    let v547 : Ref<Str> = v522 |> unbox<Ref<Str>>
                    let _run_target_args'_v527 = v547 
                    #endif
                    let v550 : Ref<Str> = _run_target_args'_v527 
                    (* run_target_args'
                    let v563 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v564 : string = "String::from($0)"
                    let v565 : std_string_String = Fable.Core.RustInterop.emitRustExpr v550 v564 
                    let _run_target_args'_v563 = v565 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v566 : string = "String::from($0)"
                    let v567 : std_string_String = Fable.Core.RustInterop.emitRustExpr v550 v566 
                    let _run_target_args'_v563 = v567 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v568 : string = "String::from($0)"
                    let v569 : std_string_String = Fable.Core.RustInterop.emitRustExpr v550 v568 
                    let _run_target_args'_v563 = v569 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v571 : std_string_String = v550 |> unbox<std_string_String>
                    let _run_target_args'_v563 = v571 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v575 : std_string_String = v550 |> unbox<std_string_String>
                    let _run_target_args'_v563 = v575 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v579 : std_string_String = v550 |> unbox<std_string_String>
                    let _run_target_args'_v563 = v579 
                    #endif
#else
                    let v583 : std_string_String = v550 |> unbox<std_string_String>
                    let _run_target_args'_v563 = v583 
                    #endif
                    let v586 : std_string_String = _run_target_args'_v563 
                    let v595 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v596 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v586 v595 
                    let v597 : string = "v596"
                    let v598 : string = v597 + v243 
                    let v599 : string = v598 + v243 
                    let v600 : string = "vec![" + v599 + "]"
                    let v601 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v600 
                    let v602 : string = "leptos::prelude::Fragment::new($0)"
                    let v603 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v601 v602 
                    let v604 : string = "leptos::prelude::AnyView::from($0)"
                    let v605 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v603 v604 
                    let v606 : string = "<" + v329 + " " + v521 + ">move || { v605 }</" + v329 + ">"
                    let v607 : string = "leptos::prelude::view! { " + v606 + " }"
                    let v608 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v607 
                    let v609 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v608 |> unbox
                    let v610 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v611 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v609 v610 
                    let v612 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v613 : string = " " + v612 + v243 + ""
                    let v614 : string = "Result"
                    (* run_target_args'
                    let v619 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v620 : string = "&*$0"
                    let v621 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v614 v620 
                    let _run_target_args'_v619 = v621 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v622 : string = "&*$0"
                    let v623 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v614 v622 
                    let _run_target_args'_v619 = v623 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v624 : string = "&*$0"
                    let v625 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v614 v624 
                    let _run_target_args'_v619 = v625 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v627 : Ref<Str> = v614 |> unbox<Ref<Str>>
                    let _run_target_args'_v619 = v627 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v631 : Ref<Str> = v614 |> unbox<Ref<Str>>
                    let _run_target_args'_v619 = v631 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v635 : Ref<Str> = v614 |> unbox<Ref<Str>>
                    let _run_target_args'_v619 = v635 
                    #endif
#else
                    let v639 : Ref<Str> = v614 |> unbox<Ref<Str>>
                    let _run_target_args'_v619 = v639 
                    #endif
                    let v642 : Ref<Str> = _run_target_args'_v619 
                    (* run_target_args'
                    let v655 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v656 : string = "String::from($0)"
                    let v657 : std_string_String = Fable.Core.RustInterop.emitRustExpr v642 v656 
                    let _run_target_args'_v655 = v657 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v658 : string = "String::from($0)"
                    let v659 : std_string_String = Fable.Core.RustInterop.emitRustExpr v642 v658 
                    let _run_target_args'_v655 = v659 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v660 : string = "String::from($0)"
                    let v661 : std_string_String = Fable.Core.RustInterop.emitRustExpr v642 v660 
                    let _run_target_args'_v655 = v661 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v663 : std_string_String = v642 |> unbox<std_string_String>
                    let _run_target_args'_v655 = v663 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v667 : std_string_String = v642 |> unbox<std_string_String>
                    let _run_target_args'_v655 = v667 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v671 : std_string_String = v642 |> unbox<std_string_String>
                    let _run_target_args'_v655 = v671 
                    #endif
#else
                    let v675 : std_string_String = v642 |> unbox<std_string_String>
                    let _run_target_args'_v655 = v675 
                    #endif
                    let v678 : std_string_String = _run_target_args'_v655 
                    let v687 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v688 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v678 v687 
                    let v689 : string = "v688"
                    let v690 : string = v689 + v243 
                    let v691 : string = v690 + v243 
                    let v692 : string = "vec![" + v691 + "]"
                    let v693 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v692 
                    let v694 : string = "leptos::prelude::Fragment::new($0)"
                    let v695 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v693 v694 
                    let v696 : string = "leptos::prelude::AnyView::from($0)"
                    let v697 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v695 v696 
                    let v698 : string = "<" + v329 + " " + v613 + ">move || { v697 }</" + v329 + ">"
                    let v699 : string = "leptos::prelude::view! { " + v698 + " }"
                    let v700 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v699 
                    let v701 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v700 |> unbox
                    let v702 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v703 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v701 v702 
                    let v704 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v705 : string = " " + v704 + v243 + ""
                    let v706 : string = "Status"
                    (* run_target_args'
                    let v711 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v712 : string = "&*$0"
                    let v713 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v706 v712 
                    let _run_target_args'_v711 = v713 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v714 : string = "&*$0"
                    let v715 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v706 v714 
                    let _run_target_args'_v711 = v715 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v716 : string = "&*$0"
                    let v717 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v706 v716 
                    let _run_target_args'_v711 = v717 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v719 : Ref<Str> = v706 |> unbox<Ref<Str>>
                    let _run_target_args'_v711 = v719 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v723 : Ref<Str> = v706 |> unbox<Ref<Str>>
                    let _run_target_args'_v711 = v723 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v727 : Ref<Str> = v706 |> unbox<Ref<Str>>
                    let _run_target_args'_v711 = v727 
                    #endif
#else
                    let v731 : Ref<Str> = v706 |> unbox<Ref<Str>>
                    let _run_target_args'_v711 = v731 
                    #endif
                    let v734 : Ref<Str> = _run_target_args'_v711 
                    (* run_target_args'
                    let v747 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v748 : string = "String::from($0)"
                    let v749 : std_string_String = Fable.Core.RustInterop.emitRustExpr v734 v748 
                    let _run_target_args'_v747 = v749 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v750 : string = "String::from($0)"
                    let v751 : std_string_String = Fable.Core.RustInterop.emitRustExpr v734 v750 
                    let _run_target_args'_v747 = v751 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v752 : string = "String::from($0)"
                    let v753 : std_string_String = Fable.Core.RustInterop.emitRustExpr v734 v752 
                    let _run_target_args'_v747 = v753 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v755 : std_string_String = v734 |> unbox<std_string_String>
                    let _run_target_args'_v747 = v755 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v759 : std_string_String = v734 |> unbox<std_string_String>
                    let _run_target_args'_v747 = v759 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v763 : std_string_String = v734 |> unbox<std_string_String>
                    let _run_target_args'_v747 = v763 
                    #endif
#else
                    let v767 : std_string_String = v734 |> unbox<std_string_String>
                    let _run_target_args'_v747 = v767 
                    #endif
                    let v770 : std_string_String = _run_target_args'_v747 
                    let v779 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v780 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v770 v779 
                    let v781 : string = "v780"
                    let v782 : string = v781 + v243 
                    let v783 : string = v782 + v243 
                    let v784 : string = "vec![" + v783 + "]"
                    let v785 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v784 
                    let v786 : string = "leptos::prelude::Fragment::new($0)"
                    let v787 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v785 v786 
                    let v788 : string = "leptos::prelude::AnyView::from($0)"
                    let v789 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v787 v788 
                    let v790 : string = "<" + v329 + " " + v705 + ">move || { v789 }</" + v329 + ">"
                    let v791 : string = "leptos::prelude::view! { " + v790 + " }"
                    let v792 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v791 
                    let v793 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v792 |> unbox
                    let v794 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v795 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v793 v794 
                    let v796 : string = "v795"
                    let v797 : string = v796 + v243 
                    let v798 : string = v797 + v243 
                    let v799 : string = "v703"
                    let v800 : string = ", "
                    let v801 : string = v799 + v800 
                    let v802 : string = v801 + v798 
                    let v803 : string = "v611"
                    let v804 : string = v803 + v800 
                    let v805 : string = v804 + v802 
                    let v806 : string = "v519"
                    let v807 : string = v806 + v800 
                    let v808 : string = v807 + v805 
                    let v809 : string = "v427"
                    let v810 : string = v809 + v800 
                    let v811 : string = v810 + v808 
                    let v812 : string = "v335"
                    let v813 : string = v812 + v800 
                    let v814 : string = v813 + v811 
                    let v815 : string = "vec![" + v814 + "]"
                    let v816 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v815 
                    let v817 : string = "leptos::prelude::Fragment::new($0)"
                    let v818 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v816 v817 
                    let v819 : string = "leptos::prelude::AnyView::from($0)"
                    let v820 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v818 v819 
                    let v821 : string = "tr"
                    let v822 : string = "<" + v821 + " " + v243 + ">move || { v820 }</" + v821 + ">"
                    let v823 : string = "leptos::prelude::view! { " + v822 + " }"
                    let v824 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v823 
                    let v825 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>> = v824 |> unbox
                    let v826 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v827 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v825 v826 
                    let v828 : string = "v827"
                    let v829 : string = v828 + v243 
                    let v830 : string = v829 + v243 
                    let v831 : string = "vec![" + v830 + "]"
                    let v832 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v831 
                    let v833 : string = "leptos::prelude::Fragment::new($0)"
                    let v834 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v832 v833 
                    let v835 : string = $"leptos::prelude::ArcMemo::get(&$0)"
                    let v836 : Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v0 v835 
                    let v837 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v838 : bool = Fable.Core.RustInterop.emitRustExpr v241 v837 
                    let v839 : string = "x"
                    let struct (v840 : string, v841 : unativeint, v842 : Heap5) = Fable.Core.RustInterop.emitRustExpr () v839 
                    let v843 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v844 : (Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v836 v843 
                    let v850 : int32 = v841 |> int32 
                    let v859 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = v844.[int v850]
                    let v862 : string = "class=\"odd:bg-gray-50 dark:odd:bg-gray-800/50\""
                    let v863 : string = " " + v862 + v243 + ""
                    let v864 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v865 : string = " " + v864 + v243 + ""
                    let v866 : std_string_String = v842.l5
                    let v867 : string = "fable_library_rust::String_::fromString($0)"
                    let v868 : string = Fable.Core.RustInterop.emitRustExpr v866 v867 
                    let v870 : (string -> int64) = int64
                    let v871 : int64 = v870 v868
                    let v874 : int64 = method204(v871)
                    let v875 : int64 = v874 / 1000L
                    let v876 : string = "chrono::DateTime::from_timestamp_micros($0)"
                    let v877 : chrono_DateTime<chrono_Utc> option = Fable.Core.RustInterop.emitRustExpr v875 v876 
                    let v880 : (chrono_DateTime<chrono_Utc> -> US68) = method205()
                    let v881 : US68 option = v877 |> Option.map v880 
                    let v901 : US68 = US68_1
                    let v902 : US68 = v881 |> Option.defaultValue v901 
                    let v921 : US31 =
                        match v902 with
                        | US68_1 -> (* None *)
                            US31_1
                        | US68_0(v906) -> (* Some *)
                            let v907 : string = "$0.naive_utc()"
                            let v908 : chrono_NaiveDateTime = Fable.Core.RustInterop.emitRustExpr v906 v907 
                            let v909 : string = "chrono::offset::TimeZone::from_utc_datetime(&chrono::Local, &$0)"
                            let v910 : chrono_DateTime<chrono_Local> = Fable.Core.RustInterop.emitRustExpr v908 v909 
                            let v911 : string = "%Y-%m-%d %H:%M:%S"
                            let v912 : string = "r#\"" + v911 + "\"#"
                            let v913 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v912 
                            let v914 : string = "$0.format($1).to_string()"
                            let v915 : std_string_String = Fable.Core.RustInterop.emitRustExpr struct (v910, v913) v914 
                            let v916 : string = "fable_library_rust::String_::fromString($0)"
                            let v917 : string = Fable.Core.RustInterop.emitRustExpr v915 v916 
                            US31_0(v917)
                    let v927 : US69 =
                        match v921 with
                        | US31_1 -> (* None *)
                            let v924 : string = "resultm.from_option / Option does not have a value."
                            US69_1(v924)
                        | US31_0(v922) -> (* Some *)
                            US69_0(v922)
                    let v932 : string =
                        match v927 with
                        | US69_1(v929) -> (* Error *)
                            let v930 : string = "sm'.to_string result / Error: " + v929 + ""
                            v930
                        | US69_0(v928) -> (* Ok *)
                            v928
                    (* run_target_args'
                    let v937 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v938 : string = "&*$0"
                    let v939 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v932 v938 
                    let _run_target_args'_v937 = v939 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v940 : string = "&*$0"
                    let v941 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v932 v940 
                    let _run_target_args'_v937 = v941 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v942 : string = "&*$0"
                    let v943 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v932 v942 
                    let _run_target_args'_v937 = v943 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v945 : Ref<Str> = v932 |> unbox<Ref<Str>>
                    let _run_target_args'_v937 = v945 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v949 : Ref<Str> = v932 |> unbox<Ref<Str>>
                    let _run_target_args'_v937 = v949 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v953 : Ref<Str> = v932 |> unbox<Ref<Str>>
                    let _run_target_args'_v937 = v953 
                    #endif
#else
                    let v957 : Ref<Str> = v932 |> unbox<Ref<Str>>
                    let _run_target_args'_v937 = v957 
                    #endif
                    let v960 : Ref<Str> = _run_target_args'_v937 
                    (* run_target_args'
                    let v973 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v974 : string = "String::from($0)"
                    let v975 : std_string_String = Fable.Core.RustInterop.emitRustExpr v960 v974 
                    let _run_target_args'_v973 = v975 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v976 : string = "String::from($0)"
                    let v977 : std_string_String = Fable.Core.RustInterop.emitRustExpr v960 v976 
                    let _run_target_args'_v973 = v977 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v978 : string = "String::from($0)"
                    let v979 : std_string_String = Fable.Core.RustInterop.emitRustExpr v960 v978 
                    let _run_target_args'_v973 = v979 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v981 : std_string_String = v960 |> unbox<std_string_String>
                    let _run_target_args'_v973 = v981 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v985 : std_string_String = v960 |> unbox<std_string_String>
                    let _run_target_args'_v973 = v985 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v989 : std_string_String = v960 |> unbox<std_string_String>
                    let _run_target_args'_v973 = v989 
                    #endif
#else
                    let v993 : std_string_String = v960 |> unbox<std_string_String>
                    let _run_target_args'_v973 = v993 
                    #endif
                    let v996 : std_string_String = _run_target_args'_v973 
                    let v1005 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v1006 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v996 v1005 
                    let v1007 : string = "v1006"
                    let v1008 : string = v1007 + v243 
                    let v1009 : string = v1008 + v243 
                    let v1010 : string = "vec![" + v1009 + "]"
                    let v1011 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1010 
                    let v1012 : string = "leptos::prelude::Fragment::new($0)"
                    let v1013 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1011 v1012 
                    let v1014 : string = "leptos::prelude::AnyView::from($0)"
                    let v1015 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1013 v1014 
                    let v1016 : string = "td"
                    let v1017 : string = "<" + v1016 + " " + v865 + ">move || { v1015 }</" + v1016 + ">"
                    let v1018 : string = "leptos::prelude::view! { " + v1017 + " }"
                    let v1019 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1018 
                    let v1020 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1019 |> unbox
                    let v1021 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1022 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1020 v1021 
                    let v1023 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v1024 : string = " " + v1023 + v243 + ""
                    let v1025 : std_string_String = v842.l1
                    let v1026 : string = "fable_library_rust::String_::fromString($0)"
                    let v1027 : string = Fable.Core.RustInterop.emitRustExpr v1025 v1026 
                    (* run_target_args'
                    let v1032 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1033 : string = "&*$0"
                    let v1034 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1027 v1033 
                    let _run_target_args'_v1032 = v1034 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1035 : string = "&*$0"
                    let v1036 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1027 v1035 
                    let _run_target_args'_v1032 = v1036 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1037 : string = "&*$0"
                    let v1038 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1027 v1037 
                    let _run_target_args'_v1032 = v1038 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1040 : Ref<Str> = v1027 |> unbox<Ref<Str>>
                    let _run_target_args'_v1032 = v1040 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1044 : Ref<Str> = v1027 |> unbox<Ref<Str>>
                    let _run_target_args'_v1032 = v1044 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1048 : Ref<Str> = v1027 |> unbox<Ref<Str>>
                    let _run_target_args'_v1032 = v1048 
                    #endif
#else
                    let v1052 : Ref<Str> = v1027 |> unbox<Ref<Str>>
                    let _run_target_args'_v1032 = v1052 
                    #endif
                    let v1055 : Ref<Str> = _run_target_args'_v1032 
                    (* run_target_args'
                    let v1068 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1069 : string = "String::from($0)"
                    let v1070 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1055 v1069 
                    let _run_target_args'_v1068 = v1070 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1071 : string = "String::from($0)"
                    let v1072 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1055 v1071 
                    let _run_target_args'_v1068 = v1072 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1073 : string = "String::from($0)"
                    let v1074 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1055 v1073 
                    let _run_target_args'_v1068 = v1074 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1076 : std_string_String = v1055 |> unbox<std_string_String>
                    let _run_target_args'_v1068 = v1076 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1080 : std_string_String = v1055 |> unbox<std_string_String>
                    let _run_target_args'_v1068 = v1080 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1084 : std_string_String = v1055 |> unbox<std_string_String>
                    let _run_target_args'_v1068 = v1084 
                    #endif
#else
                    let v1088 : std_string_String = v1055 |> unbox<std_string_String>
                    let _run_target_args'_v1068 = v1088 
                    #endif
                    let v1091 : std_string_String = _run_target_args'_v1068 
                    let v1100 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v1101 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1091 v1100 
                    let v1102 : string = "v1101"
                    let v1103 : string = v1102 + v243 
                    let v1104 : string = v1103 + v243 
                    let v1105 : string = "vec![" + v1104 + "]"
                    let v1106 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1105 
                    let v1107 : string = "leptos::prelude::Fragment::new($0)"
                    let v1108 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1106 v1107 
                    let v1109 : string = "leptos::prelude::AnyView::from($0)"
                    let v1110 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1108 v1109 
                    let v1111 : string = "<" + v1016 + " " + v1024 + ">move || { v1110 }</" + v1016 + ">"
                    let v1112 : string = "leptos::prelude::view! { " + v1111 + " }"
                    let v1113 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1112 
                    let v1114 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1113 |> unbox
                    let v1115 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1116 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1114 v1115 
                    let v1117 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v1118 : string = " " + v1117 + v243 + ""
                    let v1119 : std_string_String = v842.l2
                    let v1120 : string = "fable_library_rust::String_::fromString($0)"
                    let v1121 : string = Fable.Core.RustInterop.emitRustExpr v1119 v1120 
                    (* run_target_args'
                    let v1126 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1127 : string = "&*$0"
                    let v1128 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1121 v1127 
                    let _run_target_args'_v1126 = v1128 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1129 : string = "&*$0"
                    let v1130 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1121 v1129 
                    let _run_target_args'_v1126 = v1130 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1131 : string = "&*$0"
                    let v1132 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1121 v1131 
                    let _run_target_args'_v1126 = v1132 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1134 : Ref<Str> = v1121 |> unbox<Ref<Str>>
                    let _run_target_args'_v1126 = v1134 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1138 : Ref<Str> = v1121 |> unbox<Ref<Str>>
                    let _run_target_args'_v1126 = v1138 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1142 : Ref<Str> = v1121 |> unbox<Ref<Str>>
                    let _run_target_args'_v1126 = v1142 
                    #endif
#else
                    let v1146 : Ref<Str> = v1121 |> unbox<Ref<Str>>
                    let _run_target_args'_v1126 = v1146 
                    #endif
                    let v1149 : Ref<Str> = _run_target_args'_v1126 
                    (* run_target_args'
                    let v1162 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1163 : string = "String::from($0)"
                    let v1164 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1149 v1163 
                    let _run_target_args'_v1162 = v1164 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1165 : string = "String::from($0)"
                    let v1166 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1149 v1165 
                    let _run_target_args'_v1162 = v1166 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1167 : string = "String::from($0)"
                    let v1168 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1149 v1167 
                    let _run_target_args'_v1162 = v1168 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1170 : std_string_String = v1149 |> unbox<std_string_String>
                    let _run_target_args'_v1162 = v1170 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1174 : std_string_String = v1149 |> unbox<std_string_String>
                    let _run_target_args'_v1162 = v1174 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1178 : std_string_String = v1149 |> unbox<std_string_String>
                    let _run_target_args'_v1162 = v1178 
                    #endif
#else
                    let v1182 : std_string_String = v1149 |> unbox<std_string_String>
                    let _run_target_args'_v1162 = v1182 
                    #endif
                    let v1185 : std_string_String = _run_target_args'_v1162 
                    let v1194 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v1195 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1185 v1194 
                    let v1196 : string = "v1195"
                    let v1197 : string = v1196 + v243 
                    let v1198 : string = v1197 + v243 
                    let v1199 : string = "vec![" + v1198 + "]"
                    let v1200 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1199 
                    let v1201 : string = "leptos::prelude::Fragment::new($0)"
                    let v1202 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1200 v1201 
                    let v1203 : string = "leptos::prelude::AnyView::from($0)"
                    let v1204 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1202 v1203 
                    let v1205 : string = "<" + v1016 + " " + v1118 + ">move || { v1204 }</" + v1016 + ">"
                    let v1206 : string = "leptos::prelude::view! { " + v1205 + " }"
                    let v1207 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1206 
                    let v1208 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1207 |> unbox
                    let v1209 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1210 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1208 v1209 
                    let v1211 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v1212 : string = " " + v1211 + v243 + ""
                    let v1213 : float = v842.l10
                    let v1215 : (float -> string) = _.ToString()
                    let v1216 : string = v1215 v1213
                    (* run_target_args'
                    let v1223 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1224 : string = "&*$0"
                    let v1225 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1216 v1224 
                    let _run_target_args'_v1223 = v1225 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1226 : string = "&*$0"
                    let v1227 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1216 v1226 
                    let _run_target_args'_v1223 = v1227 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1228 : string = "&*$0"
                    let v1229 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1216 v1228 
                    let _run_target_args'_v1223 = v1229 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1231 : Ref<Str> = v1216 |> unbox<Ref<Str>>
                    let _run_target_args'_v1223 = v1231 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1235 : Ref<Str> = v1216 |> unbox<Ref<Str>>
                    let _run_target_args'_v1223 = v1235 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1239 : Ref<Str> = v1216 |> unbox<Ref<Str>>
                    let _run_target_args'_v1223 = v1239 
                    #endif
#else
                    let v1243 : Ref<Str> = v1216 |> unbox<Ref<Str>>
                    let _run_target_args'_v1223 = v1243 
                    #endif
                    let v1246 : Ref<Str> = _run_target_args'_v1223 
                    (* run_target_args'
                    let v1259 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1260 : string = "String::from($0)"
                    let v1261 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1246 v1260 
                    let _run_target_args'_v1259 = v1261 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1262 : string = "String::from($0)"
                    let v1263 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1246 v1262 
                    let _run_target_args'_v1259 = v1263 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1264 : string = "String::from($0)"
                    let v1265 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1246 v1264 
                    let _run_target_args'_v1259 = v1265 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1267 : std_string_String = v1246 |> unbox<std_string_String>
                    let _run_target_args'_v1259 = v1267 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1271 : std_string_String = v1246 |> unbox<std_string_String>
                    let _run_target_args'_v1259 = v1271 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1275 : std_string_String = v1246 |> unbox<std_string_String>
                    let _run_target_args'_v1259 = v1275 
                    #endif
#else
                    let v1279 : std_string_String = v1246 |> unbox<std_string_String>
                    let _run_target_args'_v1259 = v1279 
                    #endif
                    let v1282 : std_string_String = _run_target_args'_v1259 
                    let v1291 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v1292 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1282 v1291 
                    let v1293 : string = "v1292"
                    let v1294 : string = v1293 + v243 
                    let v1295 : string = v1294 + v243 
                    let v1296 : string = "vec![" + v1295 + "]"
                    let v1297 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1296 
                    let v1298 : string = "leptos::prelude::Fragment::new($0)"
                    let v1299 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1297 v1298 
                    let v1300 : string = "leptos::prelude::AnyView::from($0)"
                    let v1301 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1299 v1300 
                    let v1302 : string = "<" + v1016 + " " + v1212 + ">move || { v1301 }</" + v1016 + ">"
                    let v1303 : string = "leptos::prelude::view! { " + v1302 + " }"
                    let v1304 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1303 
                    let v1305 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1304 |> unbox
                    let v1306 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1307 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1305 v1306 
                    let v1308 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v1309 : string = " " + v1308 + v243 + ""
                    let v1310 : (std_string_String []) = v842.l11
                    let v1311 : uint64 = System.Convert.ToUInt64 v1310.Length
                    let v1312 : bool = v1311 = 0UL
                    let v1514 : leptos_dom_Fragment =
                        if v1312 then
                            (* run_target_args'
                            let v1317 : unit = ()
                            run_target_args' *)
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1318 : string = "&*$0"
                            let v1319 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v243 v1318 
                            let _run_target_args'_v1317 = v1319 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1320 : string = "&*$0"
                            let v1321 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v243 v1320 
                            let _run_target_args'_v1317 = v1321 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1322 : string = "&*$0"
                            let v1323 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v243 v1322 
                            let _run_target_args'_v1317 = v1323 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1325 : Ref<Str> = v243 |> unbox<Ref<Str>>
                            let _run_target_args'_v1317 = v1325 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1329 : Ref<Str> = v243 |> unbox<Ref<Str>>
                            let _run_target_args'_v1317 = v1329 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1333 : Ref<Str> = v243 |> unbox<Ref<Str>>
                            let _run_target_args'_v1317 = v1333 
                            #endif
#else
                            let v1337 : Ref<Str> = v243 |> unbox<Ref<Str>>
                            let _run_target_args'_v1317 = v1337 
                            #endif
                            let v1340 : Ref<Str> = _run_target_args'_v1317 
                            (* run_target_args'
                            let v1353 : unit = ()
                            run_target_args' *)
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1354 : string = "String::from($0)"
                            let v1355 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1340 v1354 
                            let _run_target_args'_v1353 = v1355 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1356 : string = "String::from($0)"
                            let v1357 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1340 v1356 
                            let _run_target_args'_v1353 = v1357 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1358 : string = "String::from($0)"
                            let v1359 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1340 v1358 
                            let _run_target_args'_v1353 = v1359 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1361 : std_string_String = v1340 |> unbox<std_string_String>
                            let _run_target_args'_v1353 = v1361 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1365 : std_string_String = v1340 |> unbox<std_string_String>
                            let _run_target_args'_v1353 = v1365 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1369 : std_string_String = v1340 |> unbox<std_string_String>
                            let _run_target_args'_v1353 = v1369 
                            #endif
#else
                            let v1373 : std_string_String = v1340 |> unbox<std_string_String>
                            let _run_target_args'_v1353 = v1373 
                            #endif
                            let v1376 : std_string_String = _run_target_args'_v1353 
                            let v1385 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                            let v1386 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1376 v1385 
                            let v1387 : string = "v1386"
                            let v1388 : string = v1387 + v243 
                            let v1389 : string = v1388 + v243 
                            let v1390 : string = "vec![" + v1389 + "]"
                            let v1391 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1390 
                            let v1392 : string = "leptos::prelude::Fragment::new($0)"
                            let v1393 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1391 v1392 
                            v1393
                        else
                            let v1394 : (std_string_String []) = v842.l11
                            let v1395 : int32 = v1394.Length
                            let v1396 : US31 = US31_1
                            let v1397 : Mut2 = {l0 = 0; l1 = v1396} : Mut2
                            while method206(v1395, v1397) do
                                let v1399 : int32 = v1397.l0
                                let v1400 : int32 =  -v1399
                                let v1401 : int32 = v1400 + v1395
                                let v1402 : int32 = v1401 - 1
                                let v1403 : US31 = v1397.l1
                                let v1404 : std_string_String = v1394.[int v1402]
                                let v1405 : string = "fable_library_rust::String_::fromString($0)"
                                let v1406 : string = Fable.Core.RustInterop.emitRustExpr v1404 v1405 
                                let v1416 : string = " / result: "
                                let v1417 : (string []) = v1406.Split v1416 
                                let v1426 : US31 =
                                    match v1403 with
                                    | US31_1 -> (* None *)
                                        let v1420 : uint64 = System.Convert.ToUInt64 v1417.Length
                                        let v1421 : bool = v1420 = 2UL
                                        if v1421 then
                                            let v1422 : string = v1417.[int 0]
                                            let v1423 : string = v1417.[int 1]
                                            US31_0(v1423)
                                        else
                                            v1403
                                    | _ ->
                                        v1403
                                let v1427 : int32 = v1399 + 1
                                v1397.l0 <- v1427
                                v1397.l1 <- v1426
                                ()
                            let v1428 : US31 = v1397.l1
                            let v1432 : string =
                                match v1428 with
                                | US31_1 -> (* None *)
                                    let v1430 : string = "?"
                                    v1430
                                | US31_0(v1429) -> (* Some *)
                                    v1429
                            (* run_target_args'
                            let v1437 : unit = ()
                            run_target_args' *)
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1438 : string = "&*$0"
                            let v1439 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1432 v1438 
                            let _run_target_args'_v1437 = v1439 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1440 : string = "&*$0"
                            let v1441 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1432 v1440 
                            let _run_target_args'_v1437 = v1441 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1442 : string = "&*$0"
                            let v1443 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1432 v1442 
                            let _run_target_args'_v1437 = v1443 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1445 : Ref<Str> = v1432 |> unbox<Ref<Str>>
                            let _run_target_args'_v1437 = v1445 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1449 : Ref<Str> = v1432 |> unbox<Ref<Str>>
                            let _run_target_args'_v1437 = v1449 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1453 : Ref<Str> = v1432 |> unbox<Ref<Str>>
                            let _run_target_args'_v1437 = v1453 
                            #endif
#else
                            let v1457 : Ref<Str> = v1432 |> unbox<Ref<Str>>
                            let _run_target_args'_v1437 = v1457 
                            #endif
                            let v1460 : Ref<Str> = _run_target_args'_v1437 
                            (* run_target_args'
                            let v1473 : unit = ()
                            run_target_args' *)
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1474 : string = "String::from($0)"
                            let v1475 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1460 v1474 
                            let _run_target_args'_v1473 = v1475 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1476 : string = "String::from($0)"
                            let v1477 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1460 v1476 
                            let _run_target_args'_v1473 = v1477 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1478 : string = "String::from($0)"
                            let v1479 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1460 v1478 
                            let _run_target_args'_v1473 = v1479 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1481 : std_string_String = v1460 |> unbox<std_string_String>
                            let _run_target_args'_v1473 = v1481 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1485 : std_string_String = v1460 |> unbox<std_string_String>
                            let _run_target_args'_v1473 = v1485 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1489 : std_string_String = v1460 |> unbox<std_string_String>
                            let _run_target_args'_v1473 = v1489 
                            #endif
#else
                            let v1493 : std_string_String = v1460 |> unbox<std_string_String>
                            let _run_target_args'_v1473 = v1493 
                            #endif
                            let v1496 : std_string_String = _run_target_args'_v1473 
                            let v1505 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                            let v1506 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1496 v1505 
                            let v1507 : string = "v1506"
                            let v1508 : string = v1507 + v243 
                            let v1509 : string = v1508 + v243 
                            let v1510 : string = "vec![" + v1509 + "]"
                            let v1511 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1510 
                            let v1512 : string = "leptos::prelude::Fragment::new($0)"
                            let v1513 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1511 v1512 
                            v1513
                    let v1515 : string = "leptos::prelude::AnyView::from($0)"
                    let v1516 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1514 v1515 
                    let v1517 : string = "<" + v1016 + " " + v1309 + ">move || { v1516 }</" + v1016 + ">"
                    let v1518 : string = "leptos::prelude::view! { " + v1517 + " }"
                    let v1519 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1518 
                    let v1520 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1519 |> unbox
                    let v1521 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1522 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1520 v1521 
                    let v1523 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v1524 : string = " " + v1523 + v243 + ""
                    let v1525 : bool = v842.l9
                    let v1528 : string =
                        if v1525 then
                            let v1526 : string = "Ok"
                            v1526
                        else
                            let v1527 : string = "Outcome Error"
                            v1527
                    let v1529 : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option -> US63) = method177()
                    let v1530 : (std_string_String -> US63) = method178()
                    let v1532 : US63 = match v859 with Ok x -> v1529 x | Error x -> v1530 x
                    let v1571 : US58 =
                        match v1532 with
                        | US63_1(v1568) -> (* Error *)
                            US58_1(v1568)
                        | US63_0(v1535) -> (* Ok *)
                            let v1538 : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) -> US59) = method179()
                            let v1539 : US59 option = v1535 |> Option.map v1538 
                            let v1562 : US59 = US59_1
                            let v1563 : US59 = v1539 |> Option.defaultValue v1562 
                            US58_0(v1563)
                    let v1692 : US69 =
                        match v1571 with
                        | US58_1(v1687) -> (* Error *)
                            let v1688 : string = "fable_library_rust::String_::fromString($0)"
                            let v1689 : string = Fable.Core.RustInterop.emitRustExpr v1687 v1688 
                            US69_1(v1689)
                        | US58_0(v1572) -> (* Ok *)
                            match v1572 with
                            | US59_0(v1573, v1574, v1575, v1576) -> (* Some *)
                                let v1579 : (struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) -> US64) = method180()
                                let v1580 : US64 option = v1575 |> Option.map v1579 
                                let v1605 : US64 = US64_1
                                let v1606 : US64 = v1580 |> Option.defaultValue v1605 
                                match v1606 with
                                | US64_1 -> (* None *)
                                    let v1670 : string = $"%A{struct (v1573, v1574, v1575, v1576)}"
                                    let v1673 : int64 = 400L
                                    let v1674 : string = method8(v1673, v1670)
                                    US69_0(v1674)
                                | US64_0(v1610, v1611, v1612, v1613, v1614, v1615) -> (* Some *)
                                    let v1618 : (struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) -> US64) = method180()
                                    let v1619 : US64 option = v1575 |> Option.map v1618 
                                    let v1644 : US64 = US64_1
                                    let v1645 : US64 = v1619 |> Option.defaultValue v1644 
                                    let v1658 : US31 =
                                        match v1645 with
                                        | US64_0(v1649, v1650, v1651, v1652, v1653, v1654) -> (* Some *)
                                            let v1655 : string = string v1649 + ": " + string v1653 + " - " + string v1654 + " (" + string v1650 + ")"
                                            US31_0(v1655)
                                        | _ ->
                                            US31_1
                                    let v1667 : string =
                                        match v1658 with
                                        | US31_1 -> (* None *)
                                            let v1661 : string = $"%A{()}"
                                            let v1664 : int64 = 400L
                                            method8(v1664, v1661)
                                        | US31_0(v1659) -> (* Some *)
                                            v1659
                                    US69_1(v1667)
                            | _ ->
                                let v1679 : string = $"%A{v1571}"
                                let v1682 : int64 = 400L
                                let v1683 : string = method8(v1682, v1679)
                                let v1684 : string = $"RPC Response: {v1683}"
                                US69_1(v1684)
                    let v1700 : string =
                        match v1692 with
                        | US69_1(v1697) -> (* Error *)
                            let v1698 : string = $"Error: {v1697}"
                            v1698
                        | US69_0(v1693) -> (* Ok *)
                            let v1694 : int64 = 400L
                            let v1695 : string = method8(v1694, v1693)
                            let v1696 : string = $"RPC Response: {v1695}"
                            v1696
                    let v1701 : string = $"{v1528} / {v1700}"
                    (* run_target_args'
                    let v1706 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1707 : string = "&*$0"
                    let v1708 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1701 v1707 
                    let _run_target_args'_v1706 = v1708 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1709 : string = "&*$0"
                    let v1710 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1701 v1709 
                    let _run_target_args'_v1706 = v1710 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1711 : string = "&*$0"
                    let v1712 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1701 v1711 
                    let _run_target_args'_v1706 = v1712 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1714 : Ref<Str> = v1701 |> unbox<Ref<Str>>
                    let _run_target_args'_v1706 = v1714 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1718 : Ref<Str> = v1701 |> unbox<Ref<Str>>
                    let _run_target_args'_v1706 = v1718 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1722 : Ref<Str> = v1701 |> unbox<Ref<Str>>
                    let _run_target_args'_v1706 = v1722 
                    #endif
#else
                    let v1726 : Ref<Str> = v1701 |> unbox<Ref<Str>>
                    let _run_target_args'_v1706 = v1726 
                    #endif
                    let v1729 : Ref<Str> = _run_target_args'_v1706 
                    (* run_target_args'
                    let v1742 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1743 : string = "String::from($0)"
                    let v1744 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1729 v1743 
                    let _run_target_args'_v1742 = v1744 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1745 : string = "String::from($0)"
                    let v1746 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1729 v1745 
                    let _run_target_args'_v1742 = v1746 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1747 : string = "String::from($0)"
                    let v1748 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1729 v1747 
                    let _run_target_args'_v1742 = v1748 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1750 : std_string_String = v1729 |> unbox<std_string_String>
                    let _run_target_args'_v1742 = v1750 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1754 : std_string_String = v1729 |> unbox<std_string_String>
                    let _run_target_args'_v1742 = v1754 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1758 : std_string_String = v1729 |> unbox<std_string_String>
                    let _run_target_args'_v1742 = v1758 
                    #endif
#else
                    let v1762 : std_string_String = v1729 |> unbox<std_string_String>
                    let _run_target_args'_v1742 = v1762 
                    #endif
                    let v1765 : std_string_String = _run_target_args'_v1742 
                    let v1774 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v1775 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1765 v1774 
                    let v1776 : string = "v1775"
                    let v1777 : string = v1776 + v243 
                    let v1778 : string = v1777 + v243 
                    let v1779 : string = "vec![" + v1778 + "]"
                    let v1780 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1779 
                    let v1781 : string = "leptos::prelude::Fragment::new($0)"
                    let v1782 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1780 v1781 
                    let v1783 : string = "leptos::prelude::AnyView::from($0)"
                    let v1784 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1782 v1783 
                    let v1785 : string = "<" + v1016 + " " + v1524 + ">move || { v1784 }</" + v1016 + ">"
                    let v1786 : string = "leptos::prelude::view! { " + v1785 + " }"
                    let v1787 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1786 
                    let v1788 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1787 |> unbox
                    let v1789 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1790 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1788 v1789 
                    let v1791 : string = "v1790"
                    let v1792 : string = v1791 + v243 
                    let v1793 : string = v1792 + v243 
                    let v1794 : string = "v1522"
                    let v1795 : string = v1794 + v800 
                    let v1796 : string = v1795 + v1793 
                    let v1797 : string = "v1307"
                    let v1798 : string = v1797 + v800 
                    let v1799 : string = v1798 + v1796 
                    let v1800 : string = "v1210"
                    let v1801 : string = v1800 + v800 
                    let v1802 : string = v1801 + v1799 
                    let v1803 : string = "v1116"
                    let v1804 : string = v1803 + v800 
                    let v1805 : string = v1804 + v1802 
                    let v1806 : string = "v1022"
                    let v1807 : string = v1806 + v800 
                    let v1808 : string = v1807 + v1805 
                    let v1809 : string = "vec![" + v1808 + "]"
                    let v1810 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1809 
                    let v1811 : string = "leptos::prelude::Fragment::new($0)"
                    let v1812 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1810 v1811 
                    let v1813 : string = "leptos::prelude::AnyView::from($0)"
                    let v1814 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1812 v1813 
                    let v1815 : string = "<" + v821 + " " + v863 + ">move || { v1814 }</" + v821 + ">"
                    let v1816 : string = "leptos::prelude::view! { " + v1815 + " }"
                    let v1817 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1816 
                    let v1818 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>> = v1817 |> unbox
                    let v1819 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1820 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1818 v1819 
                    let v1821 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v1822 : bool = Fable.Core.RustInterop.emitRustExpr v1820 v1821 
                    let v1823 : string = "_vec_map"
                    let v1824 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1823 
                    let v1825 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1826 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1824 v1825 
                    let v1827 : string = "v1826"
                    let v1828 : string = v1827 + v243 
                    let v1829 : string = v1828 + v243 
                    let v1830 : string = "vec![" + v1829 + "]"
                    let v1831 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1830 
                    let v1832 : string = "leptos::prelude::Fragment::new($0)"
                    let v1833 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1831 v1832 
                    let v1834 : string = "class=\"flex-1 min-w-full divide-y-2 divide-gray-200 text-sm dark:divide-gray-700\""
                    let v1835 : string = " " + v1834 + v243 + ""
                    let v1836 : string = "class=\"ltr:text-left rtl:text-right\""
                    let v1837 : string = " " + v1836 + v243 + ""
                    let v1838 : string = "leptos::prelude::AnyView::from($0)"
                    let v1839 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v834 v1838 
                    let v1840 : string = "thead"
                    let v1841 : string = "<" + v1840 + " " + v1837 + ">move || { v1839 }</" + v1840 + ">"
                    let v1842 : string = "leptos::prelude::view! { " + v1841 + " }"
                    let v1843 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1842 
                    let v1844 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Thead>> = v1843 |> unbox
                    let v1845 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1846 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1844 v1845 
                    let v1847 : string = "class=\"divide-y divide-gray-200 dark:divide-gray-700\""
                    let v1848 : string = " " + v1847 + v243 + ""
                    let v1849 : string = "leptos::prelude::AnyView::from($0)"
                    let v1850 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1833 v1849 
                    let v1851 : string = "tbody"
                    let v1852 : string = "<" + v1851 + " " + v1848 + ">move || { v1850 }</" + v1851 + ">"
                    let v1853 : string = "leptos::prelude::view! { " + v1852 + " }"
                    let v1854 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1853 
                    let v1855 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tbody>> = v1854 |> unbox
                    let v1856 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1857 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1855 v1856 
                    let v1858 : string = "v1857"
                    let v1859 : string = v1858 + v243 
                    let v1860 : string = v1859 + v243 
                    let v1861 : string = "v1846"
                    let v1862 : string = v1861 + v800 
                    let v1863 : string = v1862 + v1860 
                    let v1864 : string = "vec![" + v1863 + "]"
                    let v1865 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1864 
                    let v1866 : string = "leptos::prelude::Fragment::new($0)"
                    let v1867 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1865 v1866 
                    let v1868 : string = "leptos::prelude::AnyView::from($0)"
                    let v1869 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1867 v1868 
                    let v1870 : string = "table"
                    let v1871 : string = "<" + v1870 + " " + v1835 + ">move || { v1869 }</" + v1870 + ">"
                    let v1872 : string = "leptos::prelude::view! { " + v1871 + " }"
                    let v1873 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1872 
                    let v1874 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Table>> = v1873 |> unbox
                    let v1875 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1876 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1874 v1875 
                    v1876
                | _ ->
                    let v1877 : string = "class=\"grid place-content-center py-[10vh]\""
                    let v1878 : string = ""
                    let v1879 : string = " " + v1877 + v1878 + ""
                    let v1880 : string = "class=\"flex flex-1 [gap:4px] items-center\""
                    let v1881 : string = " " + v1880 + v1878 + ""
                    let v1882 : string = "$0"
                    let v1883 : (unit -> string) = closure191()
                    let v1884 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1883 v1882 
                    let v1885 : string = "version=\"1.1\""
                    let v1886 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                    let v1887 : string = "xmlns:xlink=\"http://www.w3.org/1999/xlink\""
                    let v1888 : string = "x=\"0px\""
                    let v1889 : string = "y=\"0px\""
                    let v1890 : string = "viewBox=\"0 0 24 30\""
                    let v1891 : string = "style=\"enable-background:new 0 0 50 50;\""
                    let v1892 : string = "xml:space=\"preserve\""
                    let v1893 : string = "class=move || \" \".to_owned() + &v1884(())"
                    let v1894 : string = " " + v1885 + v1878 + ""
                    let v1895 : string = " " + v1886 + v1894 + ""
                    let v1896 : string = " " + v1887 + v1895 + ""
                    let v1897 : string = " " + v1888 + v1896 + ""
                    let v1898 : string = " " + v1889 + v1897 + ""
                    let v1899 : string = " " + v1890 + v1898 + ""
                    let v1900 : string = " " + v1891 + v1899 + ""
                    let v1901 : string = " " + v1892 + v1900 + ""
                    let v1902 : string = " " + v1893 + v1901 + ""
                    let v1903 : string = "x=\"0\""
                    let v1904 : string = "y=\"10\""
                    let v1905 : string = "width=\"4\""
                    let v1906 : string = "height=\"10\""
                    let v1907 : string = "fill=\"#333\""
                    let v1908 : string = "opacity=\"0.2\""
                    let v1909 : string = " " + v1903 + v1878 + ""
                    let v1910 : string = " " + v1904 + v1909 + ""
                    let v1911 : string = " " + v1905 + v1910 + ""
                    let v1912 : string = " " + v1906 + v1911 + ""
                    let v1913 : string = " " + v1907 + v1912 + ""
                    let v1914 : string = " " + v1908 + v1913 + ""
                    let v1915 : string = "attributeName=\"opacity\""
                    let v1916 : string = "attributeType=\"XML\""
                    let v1917 : string = "values=\"0.2; 1; .2\""
                    let v1918 : string = "begin=\"0s\""
                    let v1919 : string = "dur=\"0.6s\""
                    let v1920 : string = "repeatCount=\"indefinite\""
                    let v1921 : string = " " + v1915 + v1878 + ""
                    let v1922 : string = " " + v1916 + v1921 + ""
                    let v1923 : string = " " + v1917 + v1922 + ""
                    let v1924 : string = " " + v1918 + v1923 + ""
                    let v1925 : string = " " + v1919 + v1924 + ""
                    let v1926 : string = " " + v1920 + v1925 + ""
                    let v1927 : string = "vec![" + v1878 + "]"
                    let v1928 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1927 
                    let v1929 : string = "leptos::prelude::Fragment::new($0)"
                    let v1930 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1928 v1929 
                    let v1931 : string = "leptos::prelude::AnyView::from($0)"
                    let v1932 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1930 v1931 
                    let v1933 : string = "animate"
                    let v1934 : string = "<" + v1933 + " " + v1926 + ">move || { v1932 }</" + v1933 + ">"
                    let v1935 : string = "leptos::prelude::view! { " + v1934 + " }"
                    let v1936 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1935 
                    let v1937 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1936 |> unbox
                    let v1938 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1939 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1937 v1938 
                    let v1940 : string = "attributeName=\"height\""
                    let v1941 : string = "attributeType=\"XML\""
                    let v1942 : string = "values=\"10; 20; 10\""
                    let v1943 : string = "begin=\"0s\""
                    let v1944 : string = "dur=\"0.6s\""
                    let v1945 : string = "repeatCount=\"indefinite\""
                    let v1946 : string = " " + v1940 + v1878 + ""
                    let v1947 : string = " " + v1941 + v1946 + ""
                    let v1948 : string = " " + v1942 + v1947 + ""
                    let v1949 : string = " " + v1943 + v1948 + ""
                    let v1950 : string = " " + v1944 + v1949 + ""
                    let v1951 : string = " " + v1945 + v1950 + ""
                    let v1952 : string = "vec![" + v1878 + "]"
                    let v1953 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1952 
                    let v1954 : string = "leptos::prelude::Fragment::new($0)"
                    let v1955 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1953 v1954 
                    let v1956 : string = "leptos::prelude::AnyView::from($0)"
                    let v1957 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1955 v1956 
                    let v1958 : string = "<" + v1933 + " " + v1951 + ">move || { v1957 }</" + v1933 + ">"
                    let v1959 : string = "leptos::prelude::view! { " + v1958 + " }"
                    let v1960 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1959 
                    let v1961 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1960 |> unbox
                    let v1962 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1963 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1961 v1962 
                    let v1964 : string = "attributeName=\"y\""
                    let v1965 : string = "attributeType=\"XML\""
                    let v1966 : string = "values=\"10; 5; 10\""
                    let v1967 : string = "begin=\"0s\""
                    let v1968 : string = "dur=\"0.6s\""
                    let v1969 : string = "repeatCount=\"indefinite\""
                    let v1970 : string = " " + v1964 + v1878 + ""
                    let v1971 : string = " " + v1965 + v1970 + ""
                    let v1972 : string = " " + v1966 + v1971 + ""
                    let v1973 : string = " " + v1967 + v1972 + ""
                    let v1974 : string = " " + v1968 + v1973 + ""
                    let v1975 : string = " " + v1969 + v1974 + ""
                    let v1976 : string = "vec![" + v1878 + "]"
                    let v1977 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1976 
                    let v1978 : string = "leptos::prelude::Fragment::new($0)"
                    let v1979 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1977 v1978 
                    let v1980 : string = "leptos::prelude::AnyView::from($0)"
                    let v1981 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1979 v1980 
                    let v1982 : string = "<" + v1933 + " " + v1975 + ">move || { v1981 }</" + v1933 + ">"
                    let v1983 : string = "leptos::prelude::view! { " + v1982 + " }"
                    let v1984 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1983 
                    let v1985 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1984 |> unbox
                    let v1986 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1987 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1985 v1986 
                    let v1988 : string = "v1987"
                    let v1989 : string = v1988 + v1878 
                    let v1990 : string = v1989 + v1878 
                    let v1991 : string = "v1963"
                    let v1992 : string = ", "
                    let v1993 : string = v1991 + v1992 
                    let v1994 : string = v1993 + v1990 
                    let v1995 : string = "v1939"
                    let v1996 : string = v1995 + v1992 
                    let v1997 : string = v1996 + v1994 
                    let v1998 : string = "vec![" + v1997 + "]"
                    let v1999 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1998 
                    let v2000 : string = "leptos::prelude::Fragment::new($0)"
                    let v2001 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1999 v2000 
                    let v2002 : string = "leptos::prelude::AnyView::from($0)"
                    let v2003 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2001 v2002 
                    let v2004 : string = "rect"
                    let v2005 : string = "<" + v2004 + " " + v1914 + ">move || { v2003 }</" + v2004 + ">"
                    let v2006 : string = "leptos::prelude::view! { " + v2005 + " }"
                    let v2007 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2006 
                    let v2008 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v2007 |> unbox
                    let v2009 : string = "x=\"8\""
                    let v2010 : string = "y=\"10\""
                    let v2011 : string = "width=\"4\""
                    let v2012 : string = "height=\"10\""
                    let v2013 : string = "fill=\"#333\""
                    let v2014 : string = "opacity=\"0.2\""
                    let v2015 : string = " " + v2009 + v1878 + ""
                    let v2016 : string = " " + v2010 + v2015 + ""
                    let v2017 : string = " " + v2011 + v2016 + ""
                    let v2018 : string = " " + v2012 + v2017 + ""
                    let v2019 : string = " " + v2013 + v2018 + ""
                    let v2020 : string = " " + v2014 + v2019 + ""
                    let v2021 : string = "attributeName=\"opacity\""
                    let v2022 : string = "attributeType=\"XML\""
                    let v2023 : string = "values=\"0.2; 1; .2\""
                    let v2024 : string = "begin=\"0.15s\""
                    let v2025 : string = "dur=\"0.6s\""
                    let v2026 : string = "repeatCount=\"indefinite\""
                    let v2027 : string = " " + v2021 + v1878 + ""
                    let v2028 : string = " " + v2022 + v2027 + ""
                    let v2029 : string = " " + v2023 + v2028 + ""
                    let v2030 : string = " " + v2024 + v2029 + ""
                    let v2031 : string = " " + v2025 + v2030 + ""
                    let v2032 : string = " " + v2026 + v2031 + ""
                    let v2033 : string = "vec![" + v1878 + "]"
                    let v2034 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2033 
                    let v2035 : string = "leptos::prelude::Fragment::new($0)"
                    let v2036 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2034 v2035 
                    let v2037 : string = "leptos::prelude::AnyView::from($0)"
                    let v2038 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2036 v2037 
                    let v2039 : string = "<" + v1933 + " " + v2032 + ">move || { v2038 }</" + v1933 + ">"
                    let v2040 : string = "leptos::prelude::view! { " + v2039 + " }"
                    let v2041 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2040 
                    let v2042 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v2041 |> unbox
                    let v2043 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2044 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2042 v2043 
                    let v2045 : string = "attributeName=\"opacity\""
                    let v2046 : string = "attributeType=\"XML\""
                    let v2047 : string = "values=\"10; 20; 10\""
                    let v2048 : string = "begin=\"0.15s\""
                    let v2049 : string = "dur=\"0.6s\""
                    let v2050 : string = "repeatCount=\"indefinite\""
                    let v2051 : string = " " + v2045 + v1878 + ""
                    let v2052 : string = " " + v2046 + v2051 + ""
                    let v2053 : string = " " + v2047 + v2052 + ""
                    let v2054 : string = " " + v2048 + v2053 + ""
                    let v2055 : string = " " + v2049 + v2054 + ""
                    let v2056 : string = " " + v2050 + v2055 + ""
                    let v2057 : string = "vec![" + v1878 + "]"
                    let v2058 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2057 
                    let v2059 : string = "leptos::prelude::Fragment::new($0)"
                    let v2060 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2058 v2059 
                    let v2061 : string = "leptos::prelude::AnyView::from($0)"
                    let v2062 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2060 v2061 
                    let v2063 : string = "<" + v1933 + " " + v2056 + ">move || { v2062 }</" + v1933 + ">"
                    let v2064 : string = "leptos::prelude::view! { " + v2063 + " }"
                    let v2065 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2064 
                    let v2066 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v2065 |> unbox
                    let v2067 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2068 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2066 v2067 
                    let v2069 : string = "attributeName=\"y\""
                    let v2070 : string = "attributeType=\"XML\""
                    let v2071 : string = "values=\"10; 5; 10\""
                    let v2072 : string = "begin=\"0.15s\""
                    let v2073 : string = "dur=\"0.6s\""
                    let v2074 : string = "repeatCount=\"indefinite\""
                    let v2075 : string = " " + v2069 + v1878 + ""
                    let v2076 : string = " " + v2070 + v2075 + ""
                    let v2077 : string = " " + v2071 + v2076 + ""
                    let v2078 : string = " " + v2072 + v2077 + ""
                    let v2079 : string = " " + v2073 + v2078 + ""
                    let v2080 : string = " " + v2074 + v2079 + ""
                    let v2081 : string = "vec![" + v1878 + "]"
                    let v2082 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2081 
                    let v2083 : string = "leptos::prelude::Fragment::new($0)"
                    let v2084 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2082 v2083 
                    let v2085 : string = "leptos::prelude::AnyView::from($0)"
                    let v2086 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2084 v2085 
                    let v2087 : string = "<" + v1933 + " " + v2080 + ">move || { v2086 }</" + v1933 + ">"
                    let v2088 : string = "leptos::prelude::view! { " + v2087 + " }"
                    let v2089 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2088 
                    let v2090 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v2089 |> unbox
                    let v2091 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2092 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2090 v2091 
                    let v2093 : string = "v2092"
                    let v2094 : string = v2093 + v1878 
                    let v2095 : string = v2094 + v1878 
                    let v2096 : string = "v2068"
                    let v2097 : string = v2096 + v1992 
                    let v2098 : string = v2097 + v2095 
                    let v2099 : string = "v2044"
                    let v2100 : string = v2099 + v1992 
                    let v2101 : string = v2100 + v2098 
                    let v2102 : string = "vec![" + v2101 + "]"
                    let v2103 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2102 
                    let v2104 : string = "leptos::prelude::Fragment::new($0)"
                    let v2105 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2103 v2104 
                    let v2106 : string = "leptos::prelude::AnyView::from($0)"
                    let v2107 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2105 v2106 
                    let v2108 : string = "<" + v2004 + " " + v2020 + ">move || { v2107 }</" + v2004 + ">"
                    let v2109 : string = "leptos::prelude::view! { " + v2108 + " }"
                    let v2110 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2109 
                    let v2111 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v2110 |> unbox
                    let v2112 : string = "x=\"16\""
                    let v2113 : string = "y=\"10\""
                    let v2114 : string = "width=\"4\""
                    let v2115 : string = "height=\"10\""
                    let v2116 : string = "fill=\"#333\""
                    let v2117 : string = "opacity=\"0.2\""
                    let v2118 : string = " " + v2112 + v1878 + ""
                    let v2119 : string = " " + v2113 + v2118 + ""
                    let v2120 : string = " " + v2114 + v2119 + ""
                    let v2121 : string = " " + v2115 + v2120 + ""
                    let v2122 : string = " " + v2116 + v2121 + ""
                    let v2123 : string = " " + v2117 + v2122 + ""
                    let v2124 : string = "attributeName=\"opacity\""
                    let v2125 : string = "attributeType=\"XML\""
                    let v2126 : string = "values=\"0.2; 1; .2\""
                    let v2127 : string = "begin=\"0.3s\""
                    let v2128 : string = "dur=\"0.6s\""
                    let v2129 : string = "repeatCount=\"indefinite\""
                    let v2130 : string = " " + v2124 + v1878 + ""
                    let v2131 : string = " " + v2125 + v2130 + ""
                    let v2132 : string = " " + v2126 + v2131 + ""
                    let v2133 : string = " " + v2127 + v2132 + ""
                    let v2134 : string = " " + v2128 + v2133 + ""
                    let v2135 : string = " " + v2129 + v2134 + ""
                    let v2136 : string = "vec![" + v1878 + "]"
                    let v2137 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2136 
                    let v2138 : string = "leptos::prelude::Fragment::new($0)"
                    let v2139 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2137 v2138 
                    let v2140 : string = "leptos::prelude::AnyView::from($0)"
                    let v2141 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2139 v2140 
                    let v2142 : string = "<" + v1933 + " " + v2135 + ">move || { v2141 }</" + v1933 + ">"
                    let v2143 : string = "leptos::prelude::view! { " + v2142 + " }"
                    let v2144 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2143 
                    let v2145 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v2144 |> unbox
                    let v2146 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2147 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2145 v2146 
                    let v2148 : string = "attributeName=\"height\""
                    let v2149 : string = "attributeType=\"XML\""
                    let v2150 : string = "values=\"10; 20; 10\""
                    let v2151 : string = "begin=\"0.3s\""
                    let v2152 : string = "dur=\"0.6s\""
                    let v2153 : string = "repeatCount=\"indefinite\""
                    let v2154 : string = " " + v2148 + v1878 + ""
                    let v2155 : string = " " + v2149 + v2154 + ""
                    let v2156 : string = " " + v2150 + v2155 + ""
                    let v2157 : string = " " + v2151 + v2156 + ""
                    let v2158 : string = " " + v2152 + v2157 + ""
                    let v2159 : string = " " + v2153 + v2158 + ""
                    let v2160 : string = "vec![" + v1878 + "]"
                    let v2161 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2160 
                    let v2162 : string = "leptos::prelude::Fragment::new($0)"
                    let v2163 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2161 v2162 
                    let v2164 : string = "leptos::prelude::AnyView::from($0)"
                    let v2165 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2163 v2164 
                    let v2166 : string = "<" + v1933 + " " + v2159 + ">move || { v2165 }</" + v1933 + ">"
                    let v2167 : string = "leptos::prelude::view! { " + v2166 + " }"
                    let v2168 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2167 
                    let v2169 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v2168 |> unbox
                    let v2170 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2171 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2169 v2170 
                    let v2172 : string = "attributeName=\"y\""
                    let v2173 : string = "attributeType=\"XML\""
                    let v2174 : string = "values=\"10; 5; 10\""
                    let v2175 : string = "begin=\"0.3s\""
                    let v2176 : string = "dur=\"0.6s\""
                    let v2177 : string = "repeatCount=\"indefinite\""
                    let v2178 : string = " " + v2172 + v1878 + ""
                    let v2179 : string = " " + v2173 + v2178 + ""
                    let v2180 : string = " " + v2174 + v2179 + ""
                    let v2181 : string = " " + v2175 + v2180 + ""
                    let v2182 : string = " " + v2176 + v2181 + ""
                    let v2183 : string = " " + v2177 + v2182 + ""
                    let v2184 : string = "vec![" + v1878 + "]"
                    let v2185 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2184 
                    let v2186 : string = "leptos::prelude::Fragment::new($0)"
                    let v2187 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2185 v2186 
                    let v2188 : string = "leptos::prelude::AnyView::from($0)"
                    let v2189 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2187 v2188 
                    let v2190 : string = "<" + v1933 + " " + v2183 + ">move || { v2189 }</" + v1933 + ">"
                    let v2191 : string = "leptos::prelude::view! { " + v2190 + " }"
                    let v2192 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2191 
                    let v2193 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v2192 |> unbox
                    let v2194 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2195 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2193 v2194 
                    let v2196 : string = "v2195"
                    let v2197 : string = v2196 + v1878 
                    let v2198 : string = v2197 + v1878 
                    let v2199 : string = "v2171"
                    let v2200 : string = v2199 + v1992 
                    let v2201 : string = v2200 + v2198 
                    let v2202 : string = "v2147"
                    let v2203 : string = v2202 + v1992 
                    let v2204 : string = v2203 + v2201 
                    let v2205 : string = "vec![" + v2204 + "]"
                    let v2206 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2205 
                    let v2207 : string = "leptos::prelude::Fragment::new($0)"
                    let v2208 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2206 v2207 
                    let v2209 : string = "leptos::prelude::AnyView::from($0)"
                    let v2210 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2208 v2209 
                    let v2211 : string = "<" + v2004 + " " + v2123 + ">move || { v2210 }</" + v2004 + ">"
                    let v2212 : string = "leptos::prelude::view! { " + v2211 + " }"
                    let v2213 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2212 
                    let v2214 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v2213 |> unbox
                    let v2215 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2216 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2214 v2215 
                    let v2217 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2218 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2111 v2217 
                    let v2219 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2220 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2008 v2219 
                    let v2221 : string = "v2216"
                    let v2222 : string = v2221 + v1878 
                    let v2223 : string = v2222 + v1878 
                    let v2224 : string = "v2218"
                    let v2225 : string = v2224 + v1992 
                    let v2226 : string = v2225 + v2223 
                    let v2227 : string = "v2220"
                    let v2228 : string = v2227 + v1992 
                    let v2229 : string = v2228 + v2226 
                    let v2230 : string = "vec![" + v2229 + "]"
                    let v2231 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2230 
                    let v2232 : string = "leptos::prelude::Fragment::new($0)"
                    let v2233 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2231 v2232 
                    let v2234 : string = "leptos::prelude::AnyView::from($0)"
                    let v2235 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2233 v2234 
                    let v2236 : string = "svg"
                    let v2237 : string = "<" + v2236 + " " + v1902 + ">move || { v2235 }</" + v2236 + ">"
                    let v2238 : string = "leptos::prelude::view! { " + v2237 + " }"
                    let v2239 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2238 
                    let v2240 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v2239 |> unbox
                    let v2241 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2242 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2240 v2241 
                    let v2243 : string = "Loading..."
                    (* run_target_args'
                    let v2248 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v2249 : string = "&*$0"
                    let v2250 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2243 v2249 
                    let _run_target_args'_v2248 = v2250 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v2251 : string = "&*$0"
                    let v2252 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2243 v2251 
                    let _run_target_args'_v2248 = v2252 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v2253 : string = "&*$0"
                    let v2254 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2243 v2253 
                    let _run_target_args'_v2248 = v2254 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v2256 : Ref<Str> = v2243 |> unbox<Ref<Str>>
                    let _run_target_args'_v2248 = v2256 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v2260 : Ref<Str> = v2243 |> unbox<Ref<Str>>
                    let _run_target_args'_v2248 = v2260 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v2264 : Ref<Str> = v2243 |> unbox<Ref<Str>>
                    let _run_target_args'_v2248 = v2264 
                    #endif
#else
                    let v2268 : Ref<Str> = v2243 |> unbox<Ref<Str>>
                    let _run_target_args'_v2248 = v2268 
                    #endif
                    let v2271 : Ref<Str> = _run_target_args'_v2248 
                    (* run_target_args'
                    let v2284 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v2285 : string = "String::from($0)"
                    let v2286 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2271 v2285 
                    let _run_target_args'_v2284 = v2286 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v2287 : string = "String::from($0)"
                    let v2288 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2271 v2287 
                    let _run_target_args'_v2284 = v2288 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v2289 : string = "String::from($0)"
                    let v2290 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2271 v2289 
                    let _run_target_args'_v2284 = v2290 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v2292 : std_string_String = v2271 |> unbox<std_string_String>
                    let _run_target_args'_v2284 = v2292 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v2296 : std_string_String = v2271 |> unbox<std_string_String>
                    let _run_target_args'_v2284 = v2296 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v2300 : std_string_String = v2271 |> unbox<std_string_String>
                    let _run_target_args'_v2284 = v2300 
                    #endif
#else
                    let v2304 : std_string_String = v2271 |> unbox<std_string_String>
                    let _run_target_args'_v2284 = v2304 
                    #endif
                    let v2307 : std_string_String = _run_target_args'_v2284 
                    let v2316 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v2317 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2307 v2316 
                    let v2318 : string = "v2317"
                    let v2319 : string = v2318 + v1878 
                    let v2320 : string = v2319 + v1878 
                    let v2321 : string = "v2242"
                    let v2322 : string = v2321 + v1992 
                    let v2323 : string = v2322 + v2320 
                    let v2324 : string = "vec![" + v2323 + "]"
                    let v2325 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2324 
                    let v2326 : string = "leptos::prelude::Fragment::new($0)"
                    let v2327 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2325 v2326 
                    let v2328 : string = "leptos::prelude::AnyView::from($0)"
                    let v2329 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2327 v2328 
                    let v2330 : string = "div"
                    let v2331 : string = "<" + v2330 + " " + v1881 + ">move || { v2329 }</" + v2330 + ">"
                    let v2332 : string = "leptos::prelude::view! { " + v2331 + " }"
                    let v2333 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2332 
                    let v2334 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v2333 |> unbox
                    let v2335 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2336 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2334 v2335 
                    let v2337 : string = "v2336"
                    let v2338 : string = v2337 + v1878 
                    let v2339 : string = v2338 + v1878 
                    let v2340 : string = "vec![" + v2339 + "]"
                    let v2341 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2340 
                    let v2342 : string = "leptos::prelude::Fragment::new($0)"
                    let v2343 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2341 v2342 
                    let v2344 : string = "leptos::prelude::AnyView::from($0)"
                    let v2345 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2343 v2344 
                    let v2346 : string = "<" + v2330 + " " + v1879 + ">move || { v2345 }</" + v2330 + ">"
                    let v2347 : string = "leptos::prelude::view! { " + v2346 + " }"
                    let v2348 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2347 
                    let v2349 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v2348 |> unbox
                    let v2350 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2351 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2349 v2350 
                    v2351
    let v2541 : string = "v2540"
    let v2542 : string = ""
    let v2543 : string = v2541 + v2542 
    let v2544 : string = v2543 + v2542 
    let v2545 : string = "vec![" + v2544 + "]"
    let v2546 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2545 
    let v2547 : string = "leptos::prelude::Fragment::new($0)"
    let v2548 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2546 v2547 
    v2548
and closure194 (v0 : int32) (v1 : (bool * std_string_String)) : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) =
    let v2 : string = $"leptos::prelude::signal($0)"
    let struct (v3 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v4 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v6 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = v0, struct (v3, v4) 
    v6
and closure193 () (v0 : int32) : ((bool * std_string_String) -> (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))) =
    closure194(v0)
and method207 () : (int32 -> ((bool * std_string_String) -> (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)))) =
    closure193()
and method208 (v0 : Vec<(bool * std_string_String)>) : Vec<(bool * std_string_String)> =
    v0
and closure192 (v0 : Heap2) () : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<Heap0> = v5.l3
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : Heap0 = Fable.Core.RustInterop.emitRustExpr v6 v7 
    let v9 : Vec<(bool * std_string_String)> = v8.l0
    let v10 : (int32 -> ((bool * std_string_String) -> (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)))) = method207()
    let v11 : Vec<(bool * std_string_String)> = method208(v9)
    let v12 : string = "v11.iter().enumerate().map(|(i, x)| v10(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v13 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr () v12 
    v13
and method209 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)>) : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)> =
    v0
and closure196 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)>) (v1 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))) : struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>) =
    let v2 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)> = method209(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : int32, v6 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v7 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7)
and method210 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>), struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>) : Func0<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>), struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> =
    v0
and closure197 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>), struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>) struct (v1 : int32, v2 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v3 : leptos_prelude_WriteSignal<(bool * std_string_String)>) : struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>) =
    let v4 : Func0<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>), struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> = method210(v0)
    let func1_move_x = struct (v1, v2, v3) //
    let v5 : _ = func1_move_x
    let v6 : string = "(move |x| v4(x))($0)"
    let struct (v7 : int32, v8 : int32, v9 : leptos_prelude_ReadSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr v5 v6 
    struct (v7, v8, v9)
and closure195 (v0 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>>, v1 : leptos_prelude_ReadSignal<int32>) () : Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> =
    let v2 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v3 : int32 = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v5 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr v0 v4 
    let v6 : unit = ()
    let v7 : string = $"true; let _func1_from_v6 = Func1::from(move |value| {{ //"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr () v7 
    let v9 : string = $"value"
    let v10 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = Fable.Core.RustInterop.emitRustExpr () v9 
    let (a, b) = v10 
    let v14 : int32 = a
    let struct (v15 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v16 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = b
    let func1_from_result = struct (v14, v15, v16) //
    let v23 : _ = func1_from_result
    let v24 : string = $"true; $0 /*"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr v23 v24 
    let v26 : string = $"*/ }}); //"
    let v27 : bool = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : string = $"_func1_from_v6"
    let v29 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)> = Fable.Core.RustInterop.emitRustExpr () v28 
    let v30 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v31 : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) -> struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = closure196(v29)
    let v32 : Vec<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)> = Fable.Core.RustInterop.emitRustExpr struct (v5, v31) v30 
    let v33 : unit = ()
    let v34 : string = $"true; let _func1_from_v33 = Func1::from(move |value| {{ //"
    let v35 : bool = Fable.Core.RustInterop.emitRustExpr () v34 
    let v36 : string = $"value"
    let struct (v37 : int32, v38 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v39 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr () v36 
    let func1_from_result = struct (v3, v37, v38) //
    let v40 : _ = func1_from_result
    let v41 : string = $"true; $0 /*"
    let v42 : bool = Fable.Core.RustInterop.emitRustExpr v40 v41 
    let v43 : string = $"*/ }}); //"
    let v44 : bool = Fable.Core.RustInterop.emitRustExpr () v43 
    let v45 : string = $"_func1_from_v33"
    let v46 : Func0<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>), struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> = Fable.Core.RustInterop.emitRustExpr () v45 
    let v47 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v48 : (struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>) -> struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)) = closure197(v46)
    let v49 : Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> = Fable.Core.RustInterop.emitRustExpr struct (v32, v48) v47 
    v49
and closure198 (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>>) () : int32 =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v4 : (struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>) []) = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : int32 = v4.Length
    v5
and method211 (v0 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))) : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) =
    v0
and method212 (v0 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>) : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> =
    v0
and method213 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)>) : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)> =
    v0
and closure200 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)>) (v1 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))) : (bool * std_string_String) =
    let v2 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)> = method213(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure199 (v0 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>>) (v1 : Heap0) : Heap0 =
    let v2 : Vec<(bool * std_string_String)> = v1.l0
    let v3 : std_string_String option = v1.l1
    let v4 : int32 = v1.l2
    let v5 : int32 = v1.l3
    let v6 : US1 = v1.l4
    let v7 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v8 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr v0 v7 
    let v9 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v10 : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) []) = Fable.Core.RustInterop.emitRustExpr v8 v9 
    let v11 : int32 = v10.Length
    let v12 : string = ""
    (* run_target_args'
    let v17 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v18 : string = "&*$0"
    let v19 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v12 v18 
    let _run_target_args'_v17 = v19 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v20 : string = "&*$0"
    let v21 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v12 v20 
    let _run_target_args'_v17 = v21 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v22 : string = "&*$0"
    let v23 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v12 v22 
    let _run_target_args'_v17 = v23 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v25 : Ref<Str> = v12 |> unbox<Ref<Str>>
    let _run_target_args'_v17 = v25 
    #endif
#if FABLE_COMPILER_PYTHON
    let v29 : Ref<Str> = v12 |> unbox<Ref<Str>>
    let _run_target_args'_v17 = v29 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v33 : Ref<Str> = v12 |> unbox<Ref<Str>>
    let _run_target_args'_v17 = v33 
    #endif
#else
    let v37 : Ref<Str> = v12 |> unbox<Ref<Str>>
    let _run_target_args'_v17 = v37 
    #endif
    let v40 : Ref<Str> = _run_target_args'_v17 
    (* run_target_args'
    let v53 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v54 : string = "String::from($0)"
    let v55 : std_string_String = Fable.Core.RustInterop.emitRustExpr v40 v54 
    let _run_target_args'_v53 = v55 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v56 : string = "String::from($0)"
    let v57 : std_string_String = Fable.Core.RustInterop.emitRustExpr v40 v56 
    let _run_target_args'_v53 = v57 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v58 : string = "String::from($0)"
    let v59 : std_string_String = Fable.Core.RustInterop.emitRustExpr v40 v58 
    let _run_target_args'_v53 = v59 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v61 : std_string_String = v40 |> unbox<std_string_String>
    let _run_target_args'_v53 = v61 
    #endif
#if FABLE_COMPILER_PYTHON
    let v65 : std_string_String = v40 |> unbox<std_string_String>
    let _run_target_args'_v53 = v65 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v69 : std_string_String = v40 |> unbox<std_string_String>
    let _run_target_args'_v53 = v69 
    #endif
#else
    let v73 : std_string_String = v40 |> unbox<std_string_String>
    let _run_target_args'_v53 = v73 
    #endif
    let v76 : std_string_String = _run_target_args'_v53 
    let v86 : (bool * std_string_String) = false, v76 
    let v89 : string = $"leptos::prelude::signal($0)"
    let struct (v90 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v91 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr v86 v89 
    let v93 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = v11, struct (v90, v91) 
    let v96 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = method211(v93)
    let v97 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = method212(v8)
    let v98 : string = "true; let mut v97 = v97"
    let v99 : bool = Fable.Core.RustInterop.emitRustExpr () v98 
    let v100 : string = "true; v97.push(v96)"
    let v101 : bool = Fable.Core.RustInterop.emitRustExpr () v100 
    let v102 : string = "v97"
    let v103 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr () v102 
    let v104 : unit = ()
    let v105 : string = $"true; let _func1_from_v104 = Func1::from(move |value| {{ //"
    let v106 : bool = Fable.Core.RustInterop.emitRustExpr () v105 
    let v107 : string = $"value"
    let v108 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = Fable.Core.RustInterop.emitRustExpr () v107 
    let (a, b) = v108 
    let v112 : int32 = a
    let struct (v113 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v114 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = b
    let v121 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v122 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr v113 v121 
    let func1_from_result = v122 //
    let v123 : _ = func1_from_result
    let v124 : string = $"true; $0 /*"
    let v125 : bool = Fable.Core.RustInterop.emitRustExpr v123 v124 
    let v126 : string = $"*/ }}); //"
    let v127 : bool = Fable.Core.RustInterop.emitRustExpr () v126 
    let v128 : string = $"_func1_from_v104"
    let v129 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v128 
    let v130 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v131 : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) -> (bool * std_string_String)) = closure200(v129)
    let v132 : Vec<(bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v103, v131) v130 
    {l0 = v132; l1 = v3; l2 = v4; l3 = v5; l4 = v6} : Heap0
and closure201 () (v0 : int32) : int32 =
    let v1 : int32 = 1 + v0
    v1
and closure202 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and closure203 () () : std_string_String =
    let v0 : string = " bg-gray-300 hover:bg-gray-200"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    v64
and closure204 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure205 (v0 : leptos_prelude_AnyView_) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = "[margin-right:40px]"
    let v2 : string = "r#\"" + v1 + "\"#"
    let v3 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v2 
    v3
and closure206 () () : string =
    let v0 : string = "Accounts"
    v0
and method214 (v0 : leptos_prelude_AnyView_) : (unit -> string) =
    closure206()
and method216 (v0 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)>) : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)> =
    v0
and closure208 (v0 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)>) struct (v1 : int32, v2 : int32, v3 : leptos_prelude_ReadSignal<(bool * std_string_String)>) : (int32 * int32) =
    let v4 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)> = method216(v0)
    let func1_move_x = struct (v1, v2, v3) //
    let v5 : _ = func1_move_x
    let v6 : string = "(move |x| v4(x))($0)"
    let v7 : (int32 * int32) = Fable.Core.RustInterop.emitRustExpr v5 v6 
    v7
and method215 (v0 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)>) : (struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>) -> (int32 * int32)) =
    closure208(v0)
and method217 (v0 : int32) : int32 =
    v0
and method219 (v0 : bool) : bool =
    let v1 : bool = v0 = false
    v1
and closure211 (v0 : int32, v1 : int32) (v2 : (bool * std_string_String)) : (bool * std_string_String) =
    let v3 : bool = v1 = v0
    let v4 : bool = method219(v3)
    if v4 then
        v2
    else
        let (a, b) = v2 
        let v7 : bool = a
        let v8 : std_string_String = b
        let v13 : bool = v7 = false
        let v15 : (bool * std_string_String) = v13, v8 
        v15
and closure210 (v0 : int32) (v1 : int32) : ((bool * std_string_String) -> (bool * std_string_String)) =
    closure211(v0, v1)
and method218 (v0 : int32) : (int32 -> ((bool * std_string_String) -> (bool * std_string_String))) =
    closure210(v0)
and closure209 (v0 : Heap2, v1 : int32) (v2 : leptos_ev_Event) : unit =
    let v3 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v4 : string = "Box::pin($0)"
    let v5 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v7 : Heap1 = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : leptos_prelude_ArcRwSignal<Heap0> = v7.l3
    let v9 : string = "Box::pin($0)"
    let v10 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v8 v9 
    let v11 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v12 : Heap0 = Fable.Core.RustInterop.emitRustExpr v10 v11 
    let v13 : Vec<(bool * std_string_String)> = v12.l0
    let v14 : std_string_String option = v12.l1
    let v15 : int32 = v12.l2
    let v16 : int32 = v12.l3
    let v17 : US1 = v12.l4
    let v18 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v19 : string = "Box::pin($0)"
    let v20 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v18 v19 
    let v21 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v22 : Heap1 = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : leptos_prelude_ArcRwSignal<Heap0> = v22.l3
    let v24 : (int32 -> ((bool * std_string_String) -> (bool * std_string_String))) = method218(v1)
    let v25 : Vec<(bool * std_string_String)> = method208(v13)
    let v26 : string = "v25.iter().enumerate().map(|(i, x)| v24(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v27 : Vec<(bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : Heap0 = {l0 = v27; l1 = v14; l2 = v15; l3 = v16; l4 = v17} : Heap0
    let v29 : string = $"true; leptos::prelude::ArcRwSignal::set(&$0, $1); //"
    let v30 : bool = Fable.Core.RustInterop.emitRustExpr struct (v23, v28) v29 
    ()
and closure212 (v0 : leptos_prelude_ReadSignal<(bool * std_string_String)>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let (a, b) = v2 
    let v5 : bool = a
    let v6 : std_string_String = b
    v5
and method220 (v0 : leptos_prelude_ReadSignal<(bool * std_string_String)>) : (unit -> bool) =
    closure212(v0)
and closure213 (v0 : int32) () : std_string_String =
    let v1 : string = "account-" + string v0 + ""
    (* run_target_args'
    let v6 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v7 : string = "&*$0"
    let v8 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v7 
    let _run_target_args'_v6 = v8 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v9 : string = "&*$0"
    let v10 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v9 
    let _run_target_args'_v6 = v10 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v11 : string = "&*$0"
    let v12 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v11 
    let _run_target_args'_v6 = v12 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v14 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v14 
    #endif
#if FABLE_COMPILER_PYTHON
    let v18 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v18 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v22 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v22 
    #endif
#else
    let v26 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v26 
    #endif
    let v29 : Ref<Str> = _run_target_args'_v6 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    v65
and method221 (v0 : int32) : (unit -> std_string_String) =
    closure213(v0)
and method223 (v0 : bool) : bool =
    let v1 : bool = v0 = false
    v1
and closure215 (v0 : int32, v1 : std_string_String, v2 : int32) (v3 : (bool * std_string_String)) : (bool * std_string_String) =
    let v4 : bool = v2 = v0
    let v5 : bool = method223(v4)
    if v5 then
        v3
    else
        let (a, b) = v3 
        let v8 : bool = a
        let v9 : std_string_String = b
        let v15 : (bool * std_string_String) = v8, v1 
        v15
and closure214 (v0 : int32, v1 : std_string_String) (v2 : int32) : ((bool * std_string_String) -> (bool * std_string_String)) =
    closure215(v0, v1, v2)
and method222 (v0 : int32, v1 : std_string_String) : (int32 -> ((bool * std_string_String) -> (bool * std_string_String))) =
    closure214(v0, v1)
and closure216 () () : string =
    let v0 : string = "flex-1"
    v0
and method224 (v0 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>) : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> =
    v0
and closure219 () (v0 : bool) : bool =
    let v1 : bool = v0 = false
    v1
and method226 () : (bool -> bool) =
    closure219()
and closure218 (v0 : int32) (v1 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))) : bool =
    let (a, b) = v1 
    let v5 : int32 = a
    let struct (v6 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v7 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = b
    let v14 : bool = v5 = v0
    let v15 : (bool -> bool) = method226()
    v15 v14
and method225 (v0 : int32) : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) -> bool) =
    closure218(v0)
and closure217 (v0 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>>, v1 : int32) (v2 : Heap0) : Heap0 =
    let v3 : Vec<(bool * std_string_String)> = v2.l0
    let v4 : std_string_String option = v2.l1
    let v5 : int32 = v2.l2
    let v6 : int32 = v2.l3
    let v7 : US1 = v2.l4
    let v8 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v9 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let v10 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = method224(v9)
    let v11 : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) -> bool) = method225(v1)
    let v12 : string = "true; let mut v10 = v10"
    let v13 : bool = Fable.Core.RustInterop.emitRustExpr () v12 
    let v14 : string = "true; v10.retain(|x| v11(x.clone()))"
    let v15 : bool = Fable.Core.RustInterop.emitRustExpr () v14 
    let v16 : string = "v10"
    let v17 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr () v16 
    let v18 : unit = ()
    let v19 : string = $"true; let _func1_from_v18 = Func1::from(move |value| {{ //"
    let v20 : bool = Fable.Core.RustInterop.emitRustExpr () v19 
    let v21 : string = $"value"
    let v22 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = Fable.Core.RustInterop.emitRustExpr () v21 
    let (a, b) = v22 
    let v26 : int32 = a
    let struct (v27 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v28 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = b
    let v35 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v36 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr v27 v35 
    let func1_from_result = v36 //
    let v37 : _ = func1_from_result
    let v38 : string = $"true; $0 /*"
    let v39 : bool = Fable.Core.RustInterop.emitRustExpr v37 v38 
    let v40 : string = $"*/ }}); //"
    let v41 : bool = Fable.Core.RustInterop.emitRustExpr () v40 
    let v42 : string = $"_func1_from_v18"
    let v43 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v42 
    let v44 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v45 : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) -> (bool * std_string_String)) = closure200(v43)
    let v46 : Vec<(bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v17, v45) v44 
    {l0 = v46; l1 = v4; l2 = v5; l3 = v6; l4 = v7} : Heap0
and closure220 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and closure221 () () : std_string_String =
    let v0 : string = " pr-[7px] pl-[5px]"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    v64
and method227 (v0 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), leptos_prelude_AnyView_>) : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), leptos_prelude_AnyView_> =
    v0
and closure222 (v0 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), leptos_prelude_AnyView_>) struct (v1 : int32, v2 : int32, v3 : leptos_prelude_ReadSignal<(bool * std_string_String)>) : leptos_prelude_AnyView_ =
    let v4 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), leptos_prelude_AnyView_> = method227(v0)
    let func1_move_x = struct (v1, v2, v3) //
    let v5 : _ = func1_move_x
    let v6 : string = "(move |x| v4(x))($0)"
    let v7 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5 v6 
    v7
and closure207 (v0 : Heap2, v1 : leptos_prelude_ArcMemo<Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>>, v2 : leptos_prelude_ArcMemo<int32>, v3 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>>, v4 : leptos_prelude_WriteSignal<int32>) () : leptos_dom_Fragment =
    let v5 : string = "class=\"flex flex-1 flex-col p-[8px] gap-[8px]\""
    let v6 : string = ""
    let v7 : string = " " + v5 + v6 + ""
    let v8 : string = "$0"
    let v9 : leptos_prelude_ArcMemo<Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>> = Fable.Core.RustInterop.emitRustExpr v1 v8 
    let v10 : unit = ()
    let v11 : string = $"true; let _func1_from_v10 = Func1::from(move |value| {{ //"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr () v11 
    let v13 : string = $"value"
    let struct (v14 : int32, v15 : int32, v16 : leptos_prelude_ReadSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr () v13 
    let v18 : (int32 * int32) = v14, v15 
    let func1_from_result = v18 //
    let v21 : _ = func1_from_result
    let v22 : string = $"true; $0 /*"
    let v23 : bool = Fable.Core.RustInterop.emitRustExpr v21 v22 
    let v24 : string = $"*/ }}); //"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr () v24 
    let v26 : string = $"_func1_from_v10"
    let v27 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)> = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : (struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>) -> (int32 * int32)) = method215(v27)
    let v29 : unit = ()
    let v30 : string = $"true; let _func1_from_v29 = Func1::from(move |value| {{ //"
    let v31 : bool = Fable.Core.RustInterop.emitRustExpr () v30 
    let v32 : string = $"value"
    let struct (v33 : int32, v34 : int32, v35 : leptos_prelude_ReadSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr () v32 
    let v36 : string = "class=\"flex gap-[8px] [align-items:center]\""
    let v37 : string = " " + v36 + v6 + ""
    let v38 : int32 = method217(v34)
    let v39 : unit = ()
    let v40 : string = $"true; let _func0_from_v39 = Func0::from(move || {{ //"
    let v41 : bool = Fable.Core.RustInterop.emitRustExpr () v40 
    let v42 : string = "account-" + string v38 + ""
    (* run_target_args'
    let v47 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v48 : string = "&*$0"
    let v49 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v42 v48 
    let _run_target_args'_v47 = v49 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v50 : string = "&*$0"
    let v51 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v42 v50 
    let _run_target_args'_v47 = v51 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v52 : string = "&*$0"
    let v53 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v42 v52 
    let _run_target_args'_v47 = v53 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v55 : Ref<Str> = v42 |> unbox<Ref<Str>>
    let _run_target_args'_v47 = v55 
    #endif
#if FABLE_COMPILER_PYTHON
    let v59 : Ref<Str> = v42 |> unbox<Ref<Str>>
    let _run_target_args'_v47 = v59 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v63 : Ref<Str> = v42 |> unbox<Ref<Str>>
    let _run_target_args'_v47 = v63 
    #endif
#else
    let v67 : Ref<Str> = v42 |> unbox<Ref<Str>>
    let _run_target_args'_v47 = v67 
    #endif
    let v70 : Ref<Str> = _run_target_args'_v47 
    (* run_target_args'
    let v83 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v84 : string = "String::from($0)"
    let v85 : std_string_String = Fable.Core.RustInterop.emitRustExpr v70 v84 
    let _run_target_args'_v83 = v85 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v86 : string = "String::from($0)"
    let v87 : std_string_String = Fable.Core.RustInterop.emitRustExpr v70 v86 
    let _run_target_args'_v83 = v87 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v88 : string = "String::from($0)"
    let v89 : std_string_String = Fable.Core.RustInterop.emitRustExpr v70 v88 
    let _run_target_args'_v83 = v89 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v91 : std_string_String = v70 |> unbox<std_string_String>
    let _run_target_args'_v83 = v91 
    #endif
#if FABLE_COMPILER_PYTHON
    let v95 : std_string_String = v70 |> unbox<std_string_String>
    let _run_target_args'_v83 = v95 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v99 : std_string_String = v70 |> unbox<std_string_String>
    let _run_target_args'_v83 = v99 
    #endif
#else
    let v103 : std_string_String = v70 |> unbox<std_string_String>
    let _run_target_args'_v83 = v103 
    #endif
    let v106 : std_string_String = _run_target_args'_v83 
    let v115 : string = $"true; $0 /*"
    let v116 : bool = Fable.Core.RustInterop.emitRustExpr v106 v115 
    let v117 : string = $"*/ }}); //"
    let v118 : bool = Fable.Core.RustInterop.emitRustExpr () v117 
    let v119 : string = $"_func0_from_v39"
    let v120 : Func0<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v119 
    let v121 : string = "block"
    let v122 : string = "relative"
    let v123 : string = "h-8"
    let v124 : string = "w-14"
    let v125 : string = "cursor-pointer"
    let v126 : string = "[-webkit-tap-highlight-color:_transparent]"
    let v127 : string list = []
    let v129 : string list = v126 :: v127 
    let v133 : string list = v125 :: v129 
    let v137 : string list = v124 :: v133 
    let v141 : string list = v123 :: v137 
    let v145 : string list = v122 :: v141 
    let v149 : string list = v121 :: v145 
    let v156 : unit = ()
    let _let'_v156 =
        seq {
            yield! v149 
            (* indent
            ()
        indent *)
        }
        (* indent
        ()
    indent *)
    let v159 : string seq = _let'_v156 
    let v167 : (string -> (string seq -> string)) = String.concat
    let v168 : string = " "
    let v169 : (string seq -> string) = v167 v168
    let v170 : string = v169 v159
    (* run_target_args'
    let v177 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v178 : string = "&*$0"
    let v179 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v170 v178 
    let _run_target_args'_v177 = v179 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v180 : string = "&*$0"
    let v181 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v170 v180 
    let _run_target_args'_v177 = v181 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v182 : string = "&*$0"
    let v183 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v170 v182 
    let _run_target_args'_v177 = v183 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v185 : Ref<Str> = v170 |> unbox<Ref<Str>>
    let _run_target_args'_v177 = v185 
    #endif
#if FABLE_COMPILER_PYTHON
    let v189 : Ref<Str> = v170 |> unbox<Ref<Str>>
    let _run_target_args'_v177 = v189 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v193 : Ref<Str> = v170 |> unbox<Ref<Str>>
    let _run_target_args'_v177 = v193 
    #endif
#else
    let v197 : Ref<Str> = v170 |> unbox<Ref<Str>>
    let _run_target_args'_v177 = v197 
    #endif
    let v200 : Ref<Str> = _run_target_args'_v177 
    (* run_target_args'
    let v213 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v214 : string = "String::from($0)"
    let v215 : std_string_String = Fable.Core.RustInterop.emitRustExpr v200 v214 
    let _run_target_args'_v213 = v215 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v216 : string = "String::from($0)"
    let v217 : std_string_String = Fable.Core.RustInterop.emitRustExpr v200 v216 
    let _run_target_args'_v213 = v217 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v218 : string = "String::from($0)"
    let v219 : std_string_String = Fable.Core.RustInterop.emitRustExpr v200 v218 
    let _run_target_args'_v213 = v219 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v221 : std_string_String = v200 |> unbox<std_string_String>
    let _run_target_args'_v213 = v221 
    #endif
#if FABLE_COMPILER_PYTHON
    let v225 : std_string_String = v200 |> unbox<std_string_String>
    let _run_target_args'_v213 = v225 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v229 : std_string_String = v200 |> unbox<std_string_String>
    let _run_target_args'_v213 = v229 
    #endif
#else
    let v233 : std_string_String = v200 |> unbox<std_string_String>
    let _run_target_args'_v213 = v233 
    #endif
    let v236 : std_string_String = _run_target_args'_v213 
    let v245 : string = "$0"
    let v246 : std_string_String = Fable.Core.RustInterop.emitRustExpr v236 v245 
    let v247 : string = "for=move || v120()"
    let v248 : string = "class=v246"
    let v249 : string = " " + v247 + v6 + ""
    let v250 : string = " " + v248 + v249 + ""
    let v251 : (leptos_ev_Event -> unit) = closure209(v0, v38)
    let v252 : string = "true; let v251 = $0; //"
    let v253 : bool = Fable.Core.RustInterop.emitRustExpr v251 v252 
    let v254 : (unit -> bool) = method220(v35)
    let v255 : (unit -> std_string_String) = method221(v38)
    let v256 : string = "class=\"peer sr-only [&:checked_+_span_svg[data-checked-icon]]:block [&:checked_+_span_svg[data-unchecked-icon]]:hidden\""
    let v257 : string = "type=\"checkbox\""
    let v258 : string = "id=move || v255()"
    let v259 : string = "on:change=move |event| v251(event)"
    let v260 : string = "prop:checked=move || v254()"
    let v261 : string = " " + v256 + v6 + ""
    let v262 : string = " " + v257 + v261 + ""
    let v263 : string = " " + v258 + v262 + ""
    let v264 : string = " " + v259 + v263 + ""
    let v265 : string = " " + v260 + v264 + ""
    let v266 : string = "input"
    let v267 : string = "<" + v266 + " " + v265 + " />"
    let v268 : string = "leptos::prelude::view! { " + v267 + " }"
    let v269 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v268 
    let v270 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v269 |> unbox
    let v271 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v272 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v270 v271 
    let v273 : string = "class=\"absolute inset-y-0 start-0 z-10 m-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-white dark:bg-gray-400 peer-checked:bg-white text-gray-200 transition-all peer-checked:start-6 peer-checked:text-gray-400\""
    let v274 : string = " " + v273 + v6 + ""
    let v275 : string = "data-unchecked-icon"
    let v276 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v277 : string = "class=\"h-4 w-4\""
    let v278 : string = "viewBox=\"0 0 20 20\""
    let v279 : string = "fill=\"currentColor\""
    let v280 : string = " " + v275 + v6 + ""
    let v281 : string = " " + v276 + v280 + ""
    let v282 : string = " " + v277 + v281 + ""
    let v283 : string = " " + v278 + v282 + ""
    let v284 : string = " " + v279 + v283 + ""
    let v285 : string = "fill-rule=\"evenodd\""
    let v286 : string = "d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\""
    let v287 : string = "clip-rule=\"evenodd\""
    let v288 : string = " " + v285 + v6 + ""
    let v289 : string = " " + v286 + v288 + ""
    let v290 : string = " " + v287 + v289 + ""
    let v291 : string = "vec![" + v6 + "]"
    let v292 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v291 
    let v293 : string = "leptos::prelude::Fragment::new($0)"
    let v294 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v292 v293 
    let v295 : string = "leptos::prelude::AnyView::from($0)"
    let v296 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v294 v295 
    let v297 : string = "path"
    let v298 : string = "<" + v297 + " " + v290 + ">move || { v296 }</" + v297 + ">"
    let v299 : string = "leptos::prelude::view! { " + v298 + " }"
    let v300 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v299 
    let v301 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v300 |> unbox
    let v302 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v303 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v301 v302 
    let v304 : string = "v303"
    let v305 : string = v304 + v6 
    let v306 : string = v305 + v6 
    let v307 : string = "vec![" + v306 + "]"
    let v308 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v307 
    let v309 : string = "leptos::prelude::Fragment::new($0)"
    let v310 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v308 v309 
    let v311 : string = "leptos::prelude::AnyView::from($0)"
    let v312 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v310 v311 
    let v313 : string = "svg"
    let v314 : string = "<" + v313 + " " + v284 + ">move || { v312 }</" + v313 + ">"
    let v315 : string = "leptos::prelude::view! { " + v314 + " }"
    let v316 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v315 
    let v317 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v316 |> unbox
    let v318 : string = "data-checked-icon"
    let v319 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v320 : string = "class=\"hidden h-4 w-4\""
    let v321 : string = "viewBox=\"0 0 20 20\""
    let v322 : string = "fill=\"currentColor\""
    let v323 : string = " " + v318 + v6 + ""
    let v324 : string = " " + v319 + v323 + ""
    let v325 : string = " " + v320 + v324 + ""
    let v326 : string = " " + v321 + v325 + ""
    let v327 : string = " " + v322 + v326 + ""
    let v328 : string = "fill-rule=\"evenodd\""
    let v329 : string = "d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\""
    let v330 : string = "clip-rule=\"evenodd\""
    let v331 : string = " " + v328 + v6 + ""
    let v332 : string = " " + v329 + v331 + ""
    let v333 : string = " " + v330 + v332 + ""
    let v334 : string = "vec![" + v6 + "]"
    let v335 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v334 
    let v336 : string = "leptos::prelude::Fragment::new($0)"
    let v337 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v335 v336 
    let v338 : string = "leptos::prelude::AnyView::from($0)"
    let v339 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v337 v338 
    let v340 : string = "<" + v297 + " " + v333 + ">move || { v339 }</" + v297 + ">"
    let v341 : string = "leptos::prelude::view! { " + v340 + " }"
    let v342 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v341 
    let v343 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v342 |> unbox
    let v344 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v345 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v343 v344 
    let v346 : string = "v345"
    let v347 : string = v346 + v6 
    let v348 : string = v347 + v6 
    let v349 : string = "vec![" + v348 + "]"
    let v350 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v349 
    let v351 : string = "leptos::prelude::Fragment::new($0)"
    let v352 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v350 v351 
    let v353 : string = "leptos::prelude::AnyView::from($0)"
    let v354 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v352 v353 
    let v355 : string = "<" + v313 + " " + v327 + ">move || { v354 }</" + v313 + ">"
    let v356 : string = "leptos::prelude::view! { " + v355 + " }"
    let v357 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v356 
    let v358 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v357 |> unbox
    let v359 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v360 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v358 v359 
    let v361 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v362 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v317 v361 
    let v363 : string = "v360"
    let v364 : string = v363 + v6 
    let v365 : string = v364 + v6 
    let v366 : string = "v362"
    let v367 : string = ", "
    let v368 : string = v366 + v367 
    let v369 : string = v368 + v365 
    let v370 : string = "vec![" + v369 + "]"
    let v371 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v370 
    let v372 : string = "leptos::prelude::Fragment::new($0)"
    let v373 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v371 v372 
    let v374 : string = "leptos::prelude::AnyView::from($0)"
    let v375 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v373 v374 
    let v376 : string = "span"
    let v377 : string = "<" + v376 + " " + v274 + ">move || { v375 }</" + v376 + ">"
    let v378 : string = "leptos::prelude::view! { " + v377 + " }"
    let v379 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v378 
    let v380 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v379 |> unbox
    let v381 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v382 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v380 v381 
    let v383 : string = "class=\"absolute inset-0 rounded-full bg-gray-200 dark:bg-gray-200 transition peer-checked:bg-gray-300\""
    let v384 : string = " " + v383 + v6 + ""
    let v385 : string = "vec![" + v6 + "]"
    let v386 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v385 
    let v387 : string = "leptos::prelude::Fragment::new($0)"
    let v388 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v386 v387 
    let v389 : string = "leptos::prelude::AnyView::from($0)"
    let v390 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v388 v389 
    let v391 : string = "<" + v376 + " " + v384 + ">move || { v390 }</" + v376 + ">"
    let v392 : string = "leptos::prelude::view! { " + v391 + " }"
    let v393 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v392 
    let v394 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v393 |> unbox
    let v395 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v396 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v394 v395 
    let v397 : string = "v396"
    let v398 : string = v397 + v6 
    let v399 : string = v398 + v6 
    let v400 : string = "v382"
    let v401 : string = v400 + v367 
    let v402 : string = v401 + v399 
    let v403 : string = "v272"
    let v404 : string = v403 + v367 
    let v405 : string = v404 + v402 
    let v406 : string = "vec![" + v405 + "]"
    let v407 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v406 
    let v408 : string = "leptos::prelude::Fragment::new($0)"
    let v409 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v407 v408 
    let v410 : string = "leptos::prelude::AnyView::from($0)"
    let v411 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v409 v410 
    let v412 : string = "label"
    let v413 : string = "<" + v412 + " " + v250 + ">move || { v411 }</" + v412 + ">"
    let v414 : string = "leptos::prelude::view! { " + v413 + " }"
    let v415 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v414 
    let v416 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Label>> = v415 |> unbox
    let v417 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v418 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v416 v417 
    let v419 : unit = ()
    let v420 : string = $"true; let _func0_from_v419 = Func0::from(move || {{ //"
    let v421 : bool = Fable.Core.RustInterop.emitRustExpr () v420 
    let v422 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v423 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr v35 v422 
    let (a, b) = v423 
    let v426 : bool = a
    let v427 : std_string_String = b
    let v432 : string = $"true; $0 /*"
    let v433 : bool = Fable.Core.RustInterop.emitRustExpr v427 v432 
    let v434 : string = $"*/ }}); //"
    let v435 : bool = Fable.Core.RustInterop.emitRustExpr () v434 
    let v436 : string = $"_func0_from_v419"
    let v437 : Func0<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v436 
    let v438 : unit = ()
    let v439 : string = $"true; let _func1_from_v438 = Func0::from(move || {{ //"
    let v440 : bool = Fable.Core.RustInterop.emitRustExpr () v439 
    let v441 : string = $"value"
    let v442 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v441 
    let v443 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v444 : string = "Box::pin($0)"
    let v445 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v443 v444 
    let v446 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v447 : Heap1 = Fable.Core.RustInterop.emitRustExpr v445 v446 
    let v448 : leptos_prelude_ArcRwSignal<Heap0> = v447.l3
    let v449 : string = "Box::pin($0)"
    let v450 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v448 v449 
    let v451 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v452 : Heap0 = Fable.Core.RustInterop.emitRustExpr v450 v451 
    let v453 : Vec<(bool * std_string_String)> = v452.l0
    let v454 : std_string_String option = v452.l1
    let v455 : int32 = v452.l2
    let v456 : int32 = v452.l3
    let v457 : US1 = v452.l4
    let v458 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v459 : string = "Box::pin($0)"
    let v460 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v458 v459 
    let v461 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v462 : Heap1 = Fable.Core.RustInterop.emitRustExpr v460 v461 
    let v463 : leptos_prelude_ArcRwSignal<Heap0> = v462.l3
    let v464 : (int32 -> ((bool * std_string_String) -> (bool * std_string_String))) = method222(v38, v442)
    let v465 : Vec<(bool * std_string_String)> = method208(v453)
    let v466 : string = "v465.iter().enumerate().map(|(i, x)| v464(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v467 : Vec<(bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v466 
    let v468 : Heap0 = {l0 = v467; l1 = v454; l2 = v455; l3 = v456; l4 = v457} : Heap0
    let v469 : string = $"true; leptos::prelude::ArcRwSignal::set(&$0, $1); //"
    let v470 : bool = Fable.Core.RustInterop.emitRustExpr struct (v463, v468) v469 
    let v471 : string = $"true; /*"
    let v472 : bool = Fable.Core.RustInterop.emitRustExpr () v471 
    let v473 : string = $"*/ }}); //"
    let v474 : bool = Fable.Core.RustInterop.emitRustExpr () v473 
    let v475 : string = $"_func1_from_v438"
    let v476 : Func0<std_string_String, unit> = Fable.Core.RustInterop.emitRustExpr () v475 
    let v477 : string = "$0"
    let v478 : (unit -> string) = closure216()
    let v479 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v478 v477 
    let v480 : string = "class=move || \"bg-gray-50 h-[31px] [font-size:.875rem] \".to_owned() + &v479(())"
    let v481 : string = "prop:value=move || v437()"
    let v482 : (std_string_String -> unit) = closure180(v476)
    let v483 : string = "on:keyup=move |event: web_sys::KeyboardEvent| v482(leptos::prelude::event_target_value(&event))"
    let v484 : string = " " + v480 + v6 + ""
    let v485 : string = " " + v481 + v484 + ""
    let v486 : string = " " + v483 + v485 + ""
    let v487 : string = "<" + v266 + " " + v486 + " />"
    let v488 : string = "leptos::prelude::view! { " + v487 + " }"
    let v489 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v488 
    let v490 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v489 |> unbox
    let v491 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v492 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v490 v491 
    let v493 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v494 : int32 = Fable.Core.RustInterop.emitRustExpr v2 v493 
    let v495 : bool = v494 = 1
    let v606 : leptos_prelude_AnyView_ =
        if v495 then
            let v496 : string = "vec![" + v6 + "]"
            let v497 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v496 
            let v498 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v499 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v497 v498 
            v499
        else
            let v500 : unit = ()
            let v501 : string = $"true; let _func0_from_v500 = Func0::from(move || {{ //"
            let v502 : bool = Fable.Core.RustInterop.emitRustExpr () v501 
            let v503 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
            let v504 : string = "Box::pin($0)"
            let v505 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v503 v504 
            let v506 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
            let v507 : Heap1 = Fable.Core.RustInterop.emitRustExpr v505 v506 
            let v508 : leptos_prelude_ArcRwSignal<Heap0> = v507.l3
            let v509 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
            let v510 : bool = Fable.Core.RustInterop.emitRustExpr v508 v509 
            let v512 : TypeEmit<Heap0> = null |> unbox<TypeEmit<Heap0>>
            let v515 : string = "*/ | { *x = $0(x.clone()) }); //"
            let v516 : (Heap0 -> Heap0) = closure217(v3, v38)
            let v517 : bool = Fable.Core.RustInterop.emitRustExpr v516 v515 
            let v518 : string = $"true; leptos::prelude::WriteSignal::update(&$0, |x: &mut /*"
            let v519 : bool = Fable.Core.RustInterop.emitRustExpr v4 v518 
            let v521 : TypeEmit<int32> = null |> unbox<TypeEmit<int32>>
            let v524 : string = "*/ | { *x = $0(x.clone()) }); //"
            let v525 : (int32 -> int32) = closure201()
            let v526 : bool = Fable.Core.RustInterop.emitRustExpr v525 v524 
            // rust.func0_from / is_unit
            let v527 : string = $"true; /*"
            let v528 : bool = Fable.Core.RustInterop.emitRustExpr () v527 
            let v529 : string = $"*/ }}); //"
            let v530 : bool = Fable.Core.RustInterop.emitRustExpr () v529 
            let v531 : string = $"_func0_from_v500"
            let v532 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v531 
            let v533 : string = "$0"
            let v534 : (unit -> string) = closure220()
            let v535 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v534 v533 
            let v536 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v537 : string = "fill=\"none\""
            let v538 : string = "viewBox=\"0 0 24 24\""
            let v539 : string = "stroke-width=\"1.5\""
            let v540 : string = "stroke=\"currentColor\""
            let v541 : string = "class=move || \" \".to_owned() + &v535(())"
            let v542 : string = " " + v536 + v6 + ""
            let v543 : string = " " + v537 + v542 + ""
            let v544 : string = " " + v538 + v543 + ""
            let v545 : string = " " + v539 + v544 + ""
            let v546 : string = " " + v540 + v545 + ""
            let v547 : string = " " + v541 + v546 + ""
            let v548 : string = "stroke-linecap=\"round\""
            let v549 : string = "stroke-linejoin=\"round\""
            let v550 : string = "d=\"M6 6l12 12m0-12L6 18\""
            let v551 : string = " " + v548 + v6 + ""
            let v552 : string = " " + v549 + v551 + ""
            let v553 : string = " " + v550 + v552 + ""
            let v554 : string = "vec![" + v6 + "]"
            let v555 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v554 
            let v556 : string = "leptos::prelude::Fragment::new($0)"
            let v557 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v555 v556 
            let v558 : string = "leptos::prelude::AnyView::from($0)"
            let v559 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v557 v558 
            let v560 : string = "<" + v297 + " " + v553 + ">move || { v559 }</" + v297 + ">"
            let v561 : string = "leptos::prelude::view! { " + v560 + " }"
            let v562 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v561 
            let v563 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v562 |> unbox
            let v564 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v565 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v563 v564 
            let v566 : string = "v565"
            let v567 : string = v566 + v6 
            let v568 : string = v567 + v6 
            let v569 : string = "vec![" + v568 + "]"
            let v570 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v569 
            let v571 : string = "leptos::prelude::Fragment::new($0)"
            let v572 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v570 v571 
            let v573 : string = "leptos::prelude::AnyView::from($0)"
            let v574 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v572 v573 
            let v575 : string = "<" + v313 + " " + v547 + ">move || { v574 }</" + v313 + ">"
            let v576 : string = "leptos::prelude::view! { " + v575 + " }"
            let v577 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v576 
            let v578 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v577 |> unbox
            let v579 : string = "on:click=move |_| v532()"
            let v580 : string = "aria-label=\"Delete\""
            let v581 : string = "$0"
            let v582 : (unit -> std_string_String) = closure221()
            let v583 : (unit -> std_string_String) = Fable.Core.RustInterop.emitRustExpr v582 v581 
            let v584 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] pb-[8px] pt-[8px] px-[12px] \".to_owned() + &v583(())"
            let v585 : string = " " + v584 + v6 + ""
            let v586 : string = " " + v579 + v585 + ""
            let v587 : string = " " + v580 + v586 + ""
            let v588 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v589 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v578 v588 
            let v590 : string = "v589"
            let v591 : string = v590 + v6 
            let v592 : string = v591 + v6 
            let v593 : string = "vec![" + v592 + "]"
            let v594 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v593 
            let v595 : string = "leptos::prelude::Fragment::new($0)"
            let v596 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v594 v595 
            let v597 : string = "leptos::prelude::AnyView::from($0)"
            let v598 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v596 v597 
            let v599 : string = "button"
            let v600 : string = "<" + v599 + " " + v587 + ">move || { v598 }</" + v599 + ">"
            let v601 : string = "leptos::prelude::view! { " + v600 + " }"
            let v602 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v601 
            let v603 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Button>> = v602 |> unbox
            let v604 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v605 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v603 v604 
            v605
    let v607 : string = "v606"
    let v608 : string = v607 + v6 
    let v609 : string = v608 + v6 
    let v610 : string = "v492"
    let v611 : string = v610 + v367 
    let v612 : string = v611 + v609 
    let v613 : string = "v418"
    let v614 : string = v613 + v367 
    let v615 : string = v614 + v612 
    let v616 : string = "vec![" + v615 + "]"
    let v617 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v616 
    let v618 : string = "leptos::prelude::Fragment::new($0)"
    let v619 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v617 v618 
    let v620 : string = "leptos::prelude::AnyView::from($0)"
    let v621 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v619 v620 
    let v622 : string = "div"
    let v623 : string = "<" + v622 + " " + v37 + ">move || { v621 }</" + v622 + ">"
    let v624 : string = "leptos::prelude::view! { " + v623 + " }"
    let v625 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v624 
    let v626 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v625 |> unbox
    let v627 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v628 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v626 v627 
    let v629 : string = "v628"
    let v630 : string = v629 + v6 
    let v631 : string = v630 + v6 
    let v632 : string = "vec![" + v631 + "]"
    let v633 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v632 
    let v634 : string = "leptos::prelude::Fragment::new($0)"
    let v635 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v633 v634 
    let v636 : string = "leptos::prelude::AnyView::from($0)"
    let v637 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v635 v636 
    let func1_from_result = v637 //
    let v638 : _ = func1_from_result
    let v639 : string = $"true; $0 /*"
    let v640 : bool = Fable.Core.RustInterop.emitRustExpr v638 v639 
    let v641 : string = $"*/ }}); //"
    let v642 : bool = Fable.Core.RustInterop.emitRustExpr () v641 
    let v643 : string = $"_func1_from_v29"
    let v644 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v643 
    let v645 : string = "each=v9"
    let v646 : string = "key=move |x| v28(x.to_owned())"
    let v647 : string = "let:x"
    let v648 : (struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>) -> leptos_prelude_AnyView_) = closure222(v644)
    let v649 : string = "children=move |x| v648(x)"
    let v650 : string = " " + v645 + v6 + ""
    let v651 : string = " " + v646 + v650 + ""
    let v652 : string = " " + v647 + v651 + ""
    let v653 : string = " " + v649 + v652 + ""
    let v654 : string = "leptos::prelude::For"
    let v655 : string = "<" + v654 + " " + v653 + " />"
    let v656 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::view! { " + v655 + " })"
    let v657 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr () v656 
    let v658 : string = "v657"
    let v659 : string = v658 + v6 
    let v660 : string = v659 + v6 
    let v661 : string = "vec![" + v660 + "]"
    let v662 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v661 
    let v663 : string = "leptos::prelude::Fragment::new($0)"
    let v664 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v662 v663 
    let v665 : string = "leptos::prelude::AnyView::from($0)"
    let v666 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v664 v665 
    let v667 : string = "<" + v622 + " " + v7 + ">move || { v666 }</" + v622 + ">"
    let v668 : string = "leptos::prelude::view! { " + v667 + " }"
    let v669 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v668 
    let v670 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v669 |> unbox
    let v671 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v672 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v670 v671 
    let v673 : string = "v672"
    let v674 : string = v673 + v6 
    let v675 : string = v674 + v6 
    let v676 : string = "vec![" + v675 + "]"
    let v677 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v676 
    let v678 : string = "leptos::prelude::Fragment::new($0)"
    let v679 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v677 v678 
    v679
and closure223 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure224 () () : Ref<Lifetime<StaticLifetime, Str>> =
    let v0 : string = ""
    let v1 : string = "r#\"" + v0 + "\"#"
    let v2 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v1 
    v2
and closure225 () () : string =
    let v0 : string = "View"
    v0
and method228 () : (unit -> string) =
    closure225()
and closure227 () () : leptos_dom_Fragment =
    let v0 : string = "Dark Mode"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and method229 () : (unit -> leptos_dom_Fragment) =
    closure227()
and closure230 () (v0 : bool) : bool =
    let v1 : bool = v0 = false
    v1
and closure229 (v0 : Heap2) (v1 : leptos_ev_Event) : unit =
    let v2 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v3 : string = "Box::pin($0)"
    let v4 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v6 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : leptos_prelude_ArcRwSignal<bool> = v6.l0
    let v8 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
    let v9 : bool = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v11 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
    let v14 : string = "*/ | { *x = $0(x.clone()) }); //"
    let v15 : (bool -> bool) = closure230()
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr v15 v14 
    ()
and closure231 (v0 : Heap2) () : bool =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<bool> = v5.l0
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr v6 v7 
    v8
and method231 (v0 : Heap2) : (unit -> bool) =
    closure231(v0)
and closure232 () () : std_string_String =
    let v0 : string = "dark-mode"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    v64
and method232 () : (unit -> std_string_String) =
    closure232()
and closure228 (v0 : Heap2) () : leptos_dom_Fragment =
    let v1 : unit = ()
    let v2 : string = $"true; let _func0_from_v1 = Func0::from(move || {{ //"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr () v2 
    let v4 : string = "dark-mode"
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v45 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v46 
    let _run_target_args'_v45 = v47 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v48 : string = "String::from($0)"
    let v49 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v48 
    let _run_target_args'_v45 = v49 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v50 : string = "String::from($0)"
    let v51 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v50 
    let _run_target_args'_v45 = v51 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v53 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v53 
    #endif
#if FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v57 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v61 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v61 
    #endif
#else
    let v65 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v65 
    #endif
    let v68 : std_string_String = _run_target_args'_v45 
    let v77 : string = $"true; $0 /*"
    let v78 : bool = Fable.Core.RustInterop.emitRustExpr v68 v77 
    let v79 : string = $"*/ }}); //"
    let v80 : bool = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = $"_func0_from_v1"
    let v82 : Func0<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v81 
    let v83 : string = "block"
    let v84 : string = "relative"
    let v85 : string = "h-8"
    let v86 : string = "w-14"
    let v87 : string = "cursor-pointer"
    let v88 : string = "[-webkit-tap-highlight-color:_transparent]"
    let v89 : string list = []
    let v91 : string list = v88 :: v89 
    let v95 : string list = v87 :: v91 
    let v99 : string list = v86 :: v95 
    let v103 : string list = v85 :: v99 
    let v107 : string list = v84 :: v103 
    let v111 : string list = v83 :: v107 
    let v118 : unit = ()
    let _let'_v118 =
        seq {
            yield! v111 
            (* indent
            ()
        indent *)
        }
        (* indent
        ()
    indent *)
    let v121 : string seq = _let'_v118 
    let v129 : (string -> (string seq -> string)) = String.concat
    let v130 : string = " "
    let v131 : (string seq -> string) = v129 v130
    let v132 : string = v131 v121
    (* run_target_args'
    let v139 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v140 : string = "&*$0"
    let v141 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v132 v140 
    let _run_target_args'_v139 = v141 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v142 : string = "&*$0"
    let v143 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v132 v142 
    let _run_target_args'_v139 = v143 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v144 : string = "&*$0"
    let v145 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v132 v144 
    let _run_target_args'_v139 = v145 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v147 : Ref<Str> = v132 |> unbox<Ref<Str>>
    let _run_target_args'_v139 = v147 
    #endif
#if FABLE_COMPILER_PYTHON
    let v151 : Ref<Str> = v132 |> unbox<Ref<Str>>
    let _run_target_args'_v139 = v151 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v155 : Ref<Str> = v132 |> unbox<Ref<Str>>
    let _run_target_args'_v139 = v155 
    #endif
#else
    let v159 : Ref<Str> = v132 |> unbox<Ref<Str>>
    let _run_target_args'_v139 = v159 
    #endif
    let v162 : Ref<Str> = _run_target_args'_v139 
    (* run_target_args'
    let v175 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v176 : string = "String::from($0)"
    let v177 : std_string_String = Fable.Core.RustInterop.emitRustExpr v162 v176 
    let _run_target_args'_v175 = v177 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v178 : string = "String::from($0)"
    let v179 : std_string_String = Fable.Core.RustInterop.emitRustExpr v162 v178 
    let _run_target_args'_v175 = v179 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v180 : string = "String::from($0)"
    let v181 : std_string_String = Fable.Core.RustInterop.emitRustExpr v162 v180 
    let _run_target_args'_v175 = v181 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v183 : std_string_String = v162 |> unbox<std_string_String>
    let _run_target_args'_v175 = v183 
    #endif
#if FABLE_COMPILER_PYTHON
    let v187 : std_string_String = v162 |> unbox<std_string_String>
    let _run_target_args'_v175 = v187 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v191 : std_string_String = v162 |> unbox<std_string_String>
    let _run_target_args'_v175 = v191 
    #endif
#else
    let v195 : std_string_String = v162 |> unbox<std_string_String>
    let _run_target_args'_v175 = v195 
    #endif
    let v198 : std_string_String = _run_target_args'_v175 
    let v207 : string = "$0"
    let v208 : std_string_String = Fable.Core.RustInterop.emitRustExpr v198 v207 
    let v209 : string = "for=move || v82()"
    let v210 : string = "class=v208"
    let v211 : string = ""
    let v212 : string = " " + v209 + v211 + ""
    let v213 : string = " " + v210 + v212 + ""
    let v214 : (leptos_ev_Event -> unit) = closure229(v0)
    let v215 : string = "true; let v214 = $0; //"
    let v216 : bool = Fable.Core.RustInterop.emitRustExpr v214 v215 
    let v217 : (unit -> bool) = method231(v0)
    let v218 : (unit -> std_string_String) = method232()
    let v219 : string = "class=\"peer sr-only [&:checked_+_span_svg[data-checked-icon]]:block [&:checked_+_span_svg[data-unchecked-icon]]:hidden\""
    let v220 : string = "type=\"checkbox\""
    let v221 : string = "id=move || v218()"
    let v222 : string = "on:change=move |event| v214(event)"
    let v223 : string = "prop:checked=move || v217()"
    let v224 : string = " " + v219 + v211 + ""
    let v225 : string = " " + v220 + v224 + ""
    let v226 : string = " " + v221 + v225 + ""
    let v227 : string = " " + v222 + v226 + ""
    let v228 : string = " " + v223 + v227 + ""
    let v229 : string = "input"
    let v230 : string = "<" + v229 + " " + v228 + " />"
    let v231 : string = "leptos::prelude::view! { " + v230 + " }"
    let v232 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v231 
    let v233 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v232 |> unbox
    let v234 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v235 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v233 v234 
    let v236 : string = "class=\"absolute inset-y-0 start-0 z-10 m-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-white dark:bg-gray-400 peer-checked:bg-white text-gray-200 transition-all peer-checked:start-6 peer-checked:text-gray-400\""
    let v237 : string = " " + v236 + v211 + ""
    let v238 : string = "data-unchecked-icon"
    let v239 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v240 : string = "class=\"h-4 w-4\""
    let v241 : string = "viewBox=\"0 0 20 20\""
    let v242 : string = "fill=\"currentColor\""
    let v243 : string = " " + v238 + v211 + ""
    let v244 : string = " " + v239 + v243 + ""
    let v245 : string = " " + v240 + v244 + ""
    let v246 : string = " " + v241 + v245 + ""
    let v247 : string = " " + v242 + v246 + ""
    let v248 : string = "fill-rule=\"evenodd\""
    let v249 : string = "d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\""
    let v250 : string = "clip-rule=\"evenodd\""
    let v251 : string = " " + v248 + v211 + ""
    let v252 : string = " " + v249 + v251 + ""
    let v253 : string = " " + v250 + v252 + ""
    let v254 : string = "vec![" + v211 + "]"
    let v255 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v254 
    let v256 : string = "leptos::prelude::Fragment::new($0)"
    let v257 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v255 v256 
    let v258 : string = "leptos::prelude::AnyView::from($0)"
    let v259 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v257 v258 
    let v260 : string = "path"
    let v261 : string = "<" + v260 + " " + v253 + ">move || { v259 }</" + v260 + ">"
    let v262 : string = "leptos::prelude::view! { " + v261 + " }"
    let v263 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v262 
    let v264 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v263 |> unbox
    let v265 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v266 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v264 v265 
    let v267 : string = "v266"
    let v268 : string = v267 + v211 
    let v269 : string = v268 + v211 
    let v270 : string = "vec![" + v269 + "]"
    let v271 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v270 
    let v272 : string = "leptos::prelude::Fragment::new($0)"
    let v273 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v271 v272 
    let v274 : string = "leptos::prelude::AnyView::from($0)"
    let v275 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v273 v274 
    let v276 : string = "svg"
    let v277 : string = "<" + v276 + " " + v247 + ">move || { v275 }</" + v276 + ">"
    let v278 : string = "leptos::prelude::view! { " + v277 + " }"
    let v279 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v278 
    let v280 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v279 |> unbox
    let v281 : string = "data-checked-icon"
    let v282 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v283 : string = "class=\"hidden h-4 w-4\""
    let v284 : string = "viewBox=\"0 0 20 20\""
    let v285 : string = "fill=\"currentColor\""
    let v286 : string = " " + v281 + v211 + ""
    let v287 : string = " " + v282 + v286 + ""
    let v288 : string = " " + v283 + v287 + ""
    let v289 : string = " " + v284 + v288 + ""
    let v290 : string = " " + v285 + v289 + ""
    let v291 : string = "fill-rule=\"evenodd\""
    let v292 : string = "d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\""
    let v293 : string = "clip-rule=\"evenodd\""
    let v294 : string = " " + v291 + v211 + ""
    let v295 : string = " " + v292 + v294 + ""
    let v296 : string = " " + v293 + v295 + ""
    let v297 : string = "vec![" + v211 + "]"
    let v298 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v297 
    let v299 : string = "leptos::prelude::Fragment::new($0)"
    let v300 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v298 v299 
    let v301 : string = "leptos::prelude::AnyView::from($0)"
    let v302 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v300 v301 
    let v303 : string = "<" + v260 + " " + v296 + ">move || { v302 }</" + v260 + ">"
    let v304 : string = "leptos::prelude::view! { " + v303 + " }"
    let v305 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v304 
    let v306 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v305 |> unbox
    let v307 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v308 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v306 v307 
    let v309 : string = "v308"
    let v310 : string = v309 + v211 
    let v311 : string = v310 + v211 
    let v312 : string = "vec![" + v311 + "]"
    let v313 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v312 
    let v314 : string = "leptos::prelude::Fragment::new($0)"
    let v315 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v313 v314 
    let v316 : string = "leptos::prelude::AnyView::from($0)"
    let v317 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v315 v316 
    let v318 : string = "<" + v276 + " " + v290 + ">move || { v317 }</" + v276 + ">"
    let v319 : string = "leptos::prelude::view! { " + v318 + " }"
    let v320 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v319 
    let v321 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v320 |> unbox
    let v322 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v323 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v321 v322 
    let v324 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v325 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v280 v324 
    let v326 : string = "v323"
    let v327 : string = v326 + v211 
    let v328 : string = v327 + v211 
    let v329 : string = "v325"
    let v330 : string = ", "
    let v331 : string = v329 + v330 
    let v332 : string = v331 + v328 
    let v333 : string = "vec![" + v332 + "]"
    let v334 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v333 
    let v335 : string = "leptos::prelude::Fragment::new($0)"
    let v336 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v334 v335 
    let v337 : string = "leptos::prelude::AnyView::from($0)"
    let v338 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v336 v337 
    let v339 : string = "span"
    let v340 : string = "<" + v339 + " " + v237 + ">move || { v338 }</" + v339 + ">"
    let v341 : string = "leptos::prelude::view! { " + v340 + " }"
    let v342 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v341 
    let v343 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v342 |> unbox
    let v344 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v345 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v343 v344 
    let v346 : string = "class=\"absolute inset-0 rounded-full bg-gray-200 dark:bg-gray-200 transition peer-checked:bg-gray-300\""
    let v347 : string = " " + v346 + v211 + ""
    let v348 : string = "vec![" + v211 + "]"
    let v349 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v348 
    let v350 : string = "leptos::prelude::Fragment::new($0)"
    let v351 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v349 v350 
    let v352 : string = "leptos::prelude::AnyView::from($0)"
    let v353 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v351 v352 
    let v354 : string = "<" + v339 + " " + v347 + ">move || { v353 }</" + v339 + ">"
    let v355 : string = "leptos::prelude::view! { " + v354 + " }"
    let v356 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v355 
    let v357 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v356 |> unbox
    let v358 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v359 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v357 v358 
    let v360 : string = "v359"
    let v361 : string = v360 + v211 
    let v362 : string = v361 + v211 
    let v363 : string = "v345"
    let v364 : string = v363 + v330 
    let v365 : string = v364 + v362 
    let v366 : string = "v235"
    let v367 : string = v366 + v330 
    let v368 : string = v367 + v365 
    let v369 : string = "vec![" + v368 + "]"
    let v370 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v369 
    let v371 : string = "leptos::prelude::Fragment::new($0)"
    let v372 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v370 v371 
    let v373 : string = "leptos::prelude::AnyView::from($0)"
    let v374 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v372 v373 
    let v375 : string = "label"
    let v376 : string = "<" + v375 + " " + v213 + ">move || { v374 }</" + v375 + ">"
    let v377 : string = "leptos::prelude::view! { " + v376 + " }"
    let v378 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v377 
    let v379 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Label>> = v378 |> unbox
    let v380 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v381 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v379 v380 
    let v382 : string = "v381"
    let v383 : string = v382 + v211 
    let v384 : string = v383 + v211 
    let v385 : string = "vec![" + v384 + "]"
    let v386 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v385 
    let v387 : string = "leptos::prelude::Fragment::new($0)"
    let v388 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v386 v387 
    v388
and method230 (v0 : Heap2) : (unit -> leptos_dom_Fragment) =
    closure228(v0)
and closure233 () () : string =
    let v0 : string = "items-center p-0"
    v0
and closure234 () () : string =
    let v0 : string = "pt-[9px] pr-[10px] pb-[11px] pl-[10px]"
    v0
and closure235 () () : string =
    let v0 : string = "sm:grid-cols-[150px_repeat(2,minmax(0,1fr))]"
    v0
and closure236 () () : string =
    let v0 : string = "[overflow:auto]"
    v0
and closure237 () () : leptos_dom_Fragment =
    let v0 : string = "Debug"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and method233 () : (unit -> leptos_dom_Fragment) =
    closure237()
and closure239 (v0 : Heap2) (v1 : leptos_ev_Event) : unit =
    let v2 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v3 : string = "Box::pin($0)"
    let v4 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v6 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : leptos_prelude_ArcRwSignal<bool> = v6.l1
    let v8 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
    let v9 : bool = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v11 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
    let v14 : string = "*/ | { *x = $0(x.clone()) }); //"
    let v15 : (bool -> bool) = closure230()
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr v15 v14 
    ()
and closure240 (v0 : Heap2) () : bool =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<bool> = v5.l1
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr v6 v7 
    v8
and method235 (v0 : Heap2) : (unit -> bool) =
    closure240(v0)
and closure241 () () : std_string_String =
    let v0 : string = "debug"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    v64
and method236 () : (unit -> std_string_String) =
    closure241()
and closure238 (v0 : Heap2) () : leptos_dom_Fragment =
    let v1 : unit = ()
    let v2 : string = $"true; let _func0_from_v1 = Func0::from(move || {{ //"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr () v2 
    let v4 : string = "debug"
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v45 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v46 
    let _run_target_args'_v45 = v47 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v48 : string = "String::from($0)"
    let v49 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v48 
    let _run_target_args'_v45 = v49 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v50 : string = "String::from($0)"
    let v51 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v50 
    let _run_target_args'_v45 = v51 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v53 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v53 
    #endif
#if FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v57 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v61 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v61 
    #endif
#else
    let v65 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v65 
    #endif
    let v68 : std_string_String = _run_target_args'_v45 
    let v77 : string = $"true; $0 /*"
    let v78 : bool = Fable.Core.RustInterop.emitRustExpr v68 v77 
    let v79 : string = $"*/ }}); //"
    let v80 : bool = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = $"_func0_from_v1"
    let v82 : Func0<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v81 
    let v83 : string = "block"
    let v84 : string = "relative"
    let v85 : string = "h-8"
    let v86 : string = "w-14"
    let v87 : string = "cursor-pointer"
    let v88 : string = "[-webkit-tap-highlight-color:_transparent]"
    let v89 : string list = []
    let v91 : string list = v88 :: v89 
    let v95 : string list = v87 :: v91 
    let v99 : string list = v86 :: v95 
    let v103 : string list = v85 :: v99 
    let v107 : string list = v84 :: v103 
    let v111 : string list = v83 :: v107 
    let v118 : unit = ()
    let _let'_v118 =
        seq {
            yield! v111 
            (* indent
            ()
        indent *)
        }
        (* indent
        ()
    indent *)
    let v121 : string seq = _let'_v118 
    let v129 : (string -> (string seq -> string)) = String.concat
    let v130 : string = " "
    let v131 : (string seq -> string) = v129 v130
    let v132 : string = v131 v121
    (* run_target_args'
    let v139 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v140 : string = "&*$0"
    let v141 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v132 v140 
    let _run_target_args'_v139 = v141 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v142 : string = "&*$0"
    let v143 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v132 v142 
    let _run_target_args'_v139 = v143 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v144 : string = "&*$0"
    let v145 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v132 v144 
    let _run_target_args'_v139 = v145 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v147 : Ref<Str> = v132 |> unbox<Ref<Str>>
    let _run_target_args'_v139 = v147 
    #endif
#if FABLE_COMPILER_PYTHON
    let v151 : Ref<Str> = v132 |> unbox<Ref<Str>>
    let _run_target_args'_v139 = v151 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v155 : Ref<Str> = v132 |> unbox<Ref<Str>>
    let _run_target_args'_v139 = v155 
    #endif
#else
    let v159 : Ref<Str> = v132 |> unbox<Ref<Str>>
    let _run_target_args'_v139 = v159 
    #endif
    let v162 : Ref<Str> = _run_target_args'_v139 
    (* run_target_args'
    let v175 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v176 : string = "String::from($0)"
    let v177 : std_string_String = Fable.Core.RustInterop.emitRustExpr v162 v176 
    let _run_target_args'_v175 = v177 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v178 : string = "String::from($0)"
    let v179 : std_string_String = Fable.Core.RustInterop.emitRustExpr v162 v178 
    let _run_target_args'_v175 = v179 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v180 : string = "String::from($0)"
    let v181 : std_string_String = Fable.Core.RustInterop.emitRustExpr v162 v180 
    let _run_target_args'_v175 = v181 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v183 : std_string_String = v162 |> unbox<std_string_String>
    let _run_target_args'_v175 = v183 
    #endif
#if FABLE_COMPILER_PYTHON
    let v187 : std_string_String = v162 |> unbox<std_string_String>
    let _run_target_args'_v175 = v187 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v191 : std_string_String = v162 |> unbox<std_string_String>
    let _run_target_args'_v175 = v191 
    #endif
#else
    let v195 : std_string_String = v162 |> unbox<std_string_String>
    let _run_target_args'_v175 = v195 
    #endif
    let v198 : std_string_String = _run_target_args'_v175 
    let v207 : string = "$0"
    let v208 : std_string_String = Fable.Core.RustInterop.emitRustExpr v198 v207 
    let v209 : string = "for=move || v82()"
    let v210 : string = "class=v208"
    let v211 : string = ""
    let v212 : string = " " + v209 + v211 + ""
    let v213 : string = " " + v210 + v212 + ""
    let v214 : (leptos_ev_Event -> unit) = closure239(v0)
    let v215 : string = "true; let v214 = $0; //"
    let v216 : bool = Fable.Core.RustInterop.emitRustExpr v214 v215 
    let v217 : (unit -> bool) = method235(v0)
    let v218 : (unit -> std_string_String) = method236()
    let v219 : string = "class=\"peer sr-only [&:checked_+_span_svg[data-checked-icon]]:block [&:checked_+_span_svg[data-unchecked-icon]]:hidden\""
    let v220 : string = "type=\"checkbox\""
    let v221 : string = "id=move || v218()"
    let v222 : string = "on:change=move |event| v214(event)"
    let v223 : string = "prop:checked=move || v217()"
    let v224 : string = " " + v219 + v211 + ""
    let v225 : string = " " + v220 + v224 + ""
    let v226 : string = " " + v221 + v225 + ""
    let v227 : string = " " + v222 + v226 + ""
    let v228 : string = " " + v223 + v227 + ""
    let v229 : string = "input"
    let v230 : string = "<" + v229 + " " + v228 + " />"
    let v231 : string = "leptos::prelude::view! { " + v230 + " }"
    let v232 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v231 
    let v233 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v232 |> unbox
    let v234 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v235 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v233 v234 
    let v236 : string = "class=\"absolute inset-y-0 start-0 z-10 m-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-white dark:bg-gray-400 peer-checked:bg-white text-gray-200 transition-all peer-checked:start-6 peer-checked:text-gray-400\""
    let v237 : string = " " + v236 + v211 + ""
    let v238 : string = "data-unchecked-icon"
    let v239 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v240 : string = "class=\"h-4 w-4\""
    let v241 : string = "viewBox=\"0 0 20 20\""
    let v242 : string = "fill=\"currentColor\""
    let v243 : string = " " + v238 + v211 + ""
    let v244 : string = " " + v239 + v243 + ""
    let v245 : string = " " + v240 + v244 + ""
    let v246 : string = " " + v241 + v245 + ""
    let v247 : string = " " + v242 + v246 + ""
    let v248 : string = "fill-rule=\"evenodd\""
    let v249 : string = "d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\""
    let v250 : string = "clip-rule=\"evenodd\""
    let v251 : string = " " + v248 + v211 + ""
    let v252 : string = " " + v249 + v251 + ""
    let v253 : string = " " + v250 + v252 + ""
    let v254 : string = "vec![" + v211 + "]"
    let v255 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v254 
    let v256 : string = "leptos::prelude::Fragment::new($0)"
    let v257 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v255 v256 
    let v258 : string = "leptos::prelude::AnyView::from($0)"
    let v259 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v257 v258 
    let v260 : string = "path"
    let v261 : string = "<" + v260 + " " + v253 + ">move || { v259 }</" + v260 + ">"
    let v262 : string = "leptos::prelude::view! { " + v261 + " }"
    let v263 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v262 
    let v264 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v263 |> unbox
    let v265 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v266 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v264 v265 
    let v267 : string = "v266"
    let v268 : string = v267 + v211 
    let v269 : string = v268 + v211 
    let v270 : string = "vec![" + v269 + "]"
    let v271 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v270 
    let v272 : string = "leptos::prelude::Fragment::new($0)"
    let v273 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v271 v272 
    let v274 : string = "leptos::prelude::AnyView::from($0)"
    let v275 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v273 v274 
    let v276 : string = "svg"
    let v277 : string = "<" + v276 + " " + v247 + ">move || { v275 }</" + v276 + ">"
    let v278 : string = "leptos::prelude::view! { " + v277 + " }"
    let v279 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v278 
    let v280 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v279 |> unbox
    let v281 : string = "data-checked-icon"
    let v282 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v283 : string = "class=\"hidden h-4 w-4\""
    let v284 : string = "viewBox=\"0 0 20 20\""
    let v285 : string = "fill=\"currentColor\""
    let v286 : string = " " + v281 + v211 + ""
    let v287 : string = " " + v282 + v286 + ""
    let v288 : string = " " + v283 + v287 + ""
    let v289 : string = " " + v284 + v288 + ""
    let v290 : string = " " + v285 + v289 + ""
    let v291 : string = "fill-rule=\"evenodd\""
    let v292 : string = "d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\""
    let v293 : string = "clip-rule=\"evenodd\""
    let v294 : string = " " + v291 + v211 + ""
    let v295 : string = " " + v292 + v294 + ""
    let v296 : string = " " + v293 + v295 + ""
    let v297 : string = "vec![" + v211 + "]"
    let v298 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v297 
    let v299 : string = "leptos::prelude::Fragment::new($0)"
    let v300 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v298 v299 
    let v301 : string = "leptos::prelude::AnyView::from($0)"
    let v302 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v300 v301 
    let v303 : string = "<" + v260 + " " + v296 + ">move || { v302 }</" + v260 + ">"
    let v304 : string = "leptos::prelude::view! { " + v303 + " }"
    let v305 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v304 
    let v306 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v305 |> unbox
    let v307 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v308 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v306 v307 
    let v309 : string = "v308"
    let v310 : string = v309 + v211 
    let v311 : string = v310 + v211 
    let v312 : string = "vec![" + v311 + "]"
    let v313 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v312 
    let v314 : string = "leptos::prelude::Fragment::new($0)"
    let v315 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v313 v314 
    let v316 : string = "leptos::prelude::AnyView::from($0)"
    let v317 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v315 v316 
    let v318 : string = "<" + v276 + " " + v290 + ">move || { v317 }</" + v276 + ">"
    let v319 : string = "leptos::prelude::view! { " + v318 + " }"
    let v320 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v319 
    let v321 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v320 |> unbox
    let v322 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v323 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v321 v322 
    let v324 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v325 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v280 v324 
    let v326 : string = "v323"
    let v327 : string = v326 + v211 
    let v328 : string = v327 + v211 
    let v329 : string = "v325"
    let v330 : string = ", "
    let v331 : string = v329 + v330 
    let v332 : string = v331 + v328 
    let v333 : string = "vec![" + v332 + "]"
    let v334 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v333 
    let v335 : string = "leptos::prelude::Fragment::new($0)"
    let v336 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v334 v335 
    let v337 : string = "leptos::prelude::AnyView::from($0)"
    let v338 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v336 v337 
    let v339 : string = "span"
    let v340 : string = "<" + v339 + " " + v237 + ">move || { v338 }</" + v339 + ">"
    let v341 : string = "leptos::prelude::view! { " + v340 + " }"
    let v342 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v341 
    let v343 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v342 |> unbox
    let v344 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v345 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v343 v344 
    let v346 : string = "class=\"absolute inset-0 rounded-full bg-gray-200 dark:bg-gray-200 transition peer-checked:bg-gray-300\""
    let v347 : string = " " + v346 + v211 + ""
    let v348 : string = "vec![" + v211 + "]"
    let v349 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v348 
    let v350 : string = "leptos::prelude::Fragment::new($0)"
    let v351 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v349 v350 
    let v352 : string = "leptos::prelude::AnyView::from($0)"
    let v353 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v351 v352 
    let v354 : string = "<" + v339 + " " + v347 + ">move || { v353 }</" + v339 + ">"
    let v355 : string = "leptos::prelude::view! { " + v354 + " }"
    let v356 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v355 
    let v357 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v356 |> unbox
    let v358 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v359 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v357 v358 
    let v360 : string = "v359"
    let v361 : string = v360 + v211 
    let v362 : string = v361 + v211 
    let v363 : string = "v345"
    let v364 : string = v363 + v330 
    let v365 : string = v364 + v362 
    let v366 : string = "v235"
    let v367 : string = v366 + v330 
    let v368 : string = v367 + v365 
    let v369 : string = "vec![" + v368 + "]"
    let v370 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v369 
    let v371 : string = "leptos::prelude::Fragment::new($0)"
    let v372 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v370 v371 
    let v373 : string = "leptos::prelude::AnyView::from($0)"
    let v374 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v372 v373 
    let v375 : string = "label"
    let v376 : string = "<" + v375 + " " + v213 + ">move || { v374 }</" + v375 + ">"
    let v377 : string = "leptos::prelude::view! { " + v376 + " }"
    let v378 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v377 
    let v379 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Label>> = v378 |> unbox
    let v380 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v381 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v379 v380 
    let v382 : string = "v381"
    let v383 : string = v382 + v211 
    let v384 : string = v383 + v211 
    let v385 : string = "vec![" + v384 + "]"
    let v386 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v385 
    let v387 : string = "leptos::prelude::Fragment::new($0)"
    let v388 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v386 v387 
    v388
and method234 (v0 : Heap2) : (unit -> leptos_dom_Fragment) =
    closure238(v0)
and closure242 () () : string =
    let v0 : string = "items-center p-0"
    v0
and closure226 (v0 : Heap2) () : leptos_dom_Fragment =
    let v1 : string = "class=\"flex flex-1 flex-col p-[11px] gap-[11px]\""
    let v2 : string = ""
    let v3 : string = " " + v1 + v2 + ""
    let v4 : (unit -> leptos_dom_Fragment) = method229()
    let v5 : (unit -> leptos_dom_Fragment) = method230(v0)
    let v6 : string = "$0"
    let v7 : (unit -> string) = closure233()
    let v8 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v7 v6 
    let v9 : string = "$0"
    let v10 : (unit -> string) = closure234()
    let v11 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v10 v9 
    let v12 : string = "$0"
    let v13 : (unit -> string) = closure235()
    let v14 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v13 v12 
    let v15 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v14(()) + \" \" + &v11(()) + \" \" + &v8(())"
    let v16 : string = " " + v15 + v2 + ""
    let v17 : string = "$0"
    let v18 : (unit -> string) = closure236()
    let v19 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v18 v17 
    let v20 : string = "class=\"[font-size:12px] text-gray-400\""
    let v21 : string = " " + v20 + v2 + ""
    let v22 : leptos_dom_Fragment = v4 ()
    let v23 : string = "leptos::prelude::AnyView::from($0)"
    let v24 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v22 v23 
    let v25 : string = "dt"
    let v26 : string = "<" + v25 + " " + v21 + ">move || { v24 }</" + v25 + ">"
    let v27 : string = "leptos::prelude::view! { " + v26 + " }"
    let v28 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v28 |> unbox
    let v30 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v31 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v29 v30 
    let v32 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v19(())"
    let v33 : string = " " + v32 + v2 + ""
    let v34 : leptos_dom_Fragment = v5 ()
    let v35 : string = "leptos::prelude::AnyView::from($0)"
    let v36 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v34 v35 
    let v37 : string = "dd"
    let v38 : string = "<" + v37 + " " + v33 + ">move || { v36 }</" + v37 + ">"
    let v39 : string = "leptos::prelude::view! { " + v38 + " }"
    let v40 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v39 
    let v41 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v40 |> unbox
    let v42 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v43 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v41 v42 
    let v44 : string = "v43"
    let v45 : string = v44 + v2 
    let v46 : string = v45 + v2 
    let v47 : string = "v31"
    let v48 : string = ", "
    let v49 : string = v47 + v48 
    let v50 : string = v49 + v46 
    let v51 : string = "vec![" + v50 + "]"
    let v52 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v51 
    let v53 : string = "leptos::prelude::Fragment::new($0)"
    let v54 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v52 v53 
    let v55 : string = "leptos::prelude::AnyView::from($0)"
    let v56 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v54 v55 
    let v57 : string = "dl"
    let v58 : string = "<" + v57 + " " + v16 + ">move || { v56 }</" + v57 + ">"
    let v59 : string = "leptos::prelude::view! { " + v58 + " }"
    let v60 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v59 
    let v61 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v60 |> unbox
    let v62 : (unit -> leptos_dom_Fragment) = method233()
    let v63 : (unit -> leptos_dom_Fragment) = method234(v0)
    let v64 : string = "$0"
    let v65 : (unit -> string) = closure242()
    let v66 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v65 v64 
    let v67 : string = "$0"
    let v68 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v10 v67 
    let v69 : string = "$0"
    let v70 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v13 v69 
    let v71 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v70(()) + \" \" + &v68(()) + \" \" + &v66(())"
    let v72 : string = " " + v71 + v2 + ""
    let v73 : string = "$0"
    let v74 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v18 v73 
    let v75 : string = "class=\"[font-size:12px] text-gray-400\""
    let v76 : string = " " + v75 + v2 + ""
    let v77 : leptos_dom_Fragment = v62 ()
    let v78 : string = "leptos::prelude::AnyView::from($0)"
    let v79 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v78 
    let v80 : string = "<" + v25 + " " + v76 + ">move || { v79 }</" + v25 + ">"
    let v81 : string = "leptos::prelude::view! { " + v80 + " }"
    let v82 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v81 
    let v83 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v82 |> unbox
    let v84 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v85 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v83 v84 
    let v86 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v74(())"
    let v87 : string = " " + v86 + v2 + ""
    let v88 : leptos_dom_Fragment = v63 ()
    let v89 : string = "leptos::prelude::AnyView::from($0)"
    let v90 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v88 v89 
    let v91 : string = "<" + v37 + " " + v87 + ">move || { v90 }</" + v37 + ">"
    let v92 : string = "leptos::prelude::view! { " + v91 + " }"
    let v93 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v92 
    let v94 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v93 |> unbox
    let v95 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v96 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v94 v95 
    let v97 : string = "v96"
    let v98 : string = v97 + v2 
    let v99 : string = v98 + v2 
    let v100 : string = "v85"
    let v101 : string = v100 + v48 
    let v102 : string = v101 + v99 
    let v103 : string = "vec![" + v102 + "]"
    let v104 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v103 
    let v105 : string = "leptos::prelude::Fragment::new($0)"
    let v106 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v104 v105 
    let v107 : string = "leptos::prelude::AnyView::from($0)"
    let v108 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v106 v107 
    let v109 : string = "<" + v57 + " " + v72 + ">move || { v108 }</" + v57 + ">"
    let v110 : string = "leptos::prelude::view! { " + v109 + " }"
    let v111 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v110 
    let v112 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v111 |> unbox
    let v113 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v114 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v112 v113 
    let v115 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v116 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v115 
    let v117 : string = "v114"
    let v118 : string = v117 + v2 
    let v119 : string = v118 + v2 
    let v120 : string = "v116"
    let v121 : string = v120 + v48 
    let v122 : string = v121 + v119 
    let v123 : string = "vec![" + v122 + "]"
    let v124 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v123 
    let v125 : string = "leptos::prelude::Fragment::new($0)"
    let v126 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v124 v125 
    let v127 : string = "leptos::prelude::AnyView::from($0)"
    let v128 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v126 v127 
    let v129 : string = "div"
    let v130 : string = "<" + v129 + " " + v3 + ">move || { v128 }</" + v129 + ">"
    let v131 : string = "leptos::prelude::view! { " + v130 + " }"
    let v132 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v131 
    let v133 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v132 |> unbox
    let v134 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v135 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v133 v134 
    let v136 : string = "v135"
    let v137 : string = v136 + v2 
    let v138 : string = v137 + v2 
    let v139 : string = "vec![" + v138 + "]"
    let v140 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v139 
    let v141 : string = "leptos::prelude::Fragment::new($0)"
    let v142 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v140 v141 
    v142
and closure243 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure244 () () : Ref<Lifetime<StaticLifetime, Str>> =
    let v0 : string = ""
    let v1 : string = "r#\"" + v0 + "\"#"
    let v2 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v1 
    v2
and closure245 () () : string =
    let v0 : string = "Debug"
    v0
and method237 () : (unit -> string) =
    closure245()
and closure247 () () : leptos_dom_Fragment =
    let v0 : string = "Global State"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and method238 () : (unit -> leptos_dom_Fragment) =
    closure247()
and closure250 () (v0 : std_string_String) : US70 =
    US70_0(v0)
and method240 () : (std_string_String -> US70) =
    closure250()
and closure251 () (v0 : std_string_String) : US70 =
    US70_1(v0)
and method241 () : (std_string_String -> US70) =
    closure251()
and closure249 (v0 : Heap2) () : string =
    let v1 : string = "settings_view.global_state_log_render () / global_state_json memo"
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "$0.clone()"
    let v5 : Heap2 = Fable.Core.RustInterop.emitRustExpr v0 v4 
    let v6 : string = "serde_json::to_string_pretty(&v5).map_err(|x| x.to_string())"
    let v7 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : (std_string_String -> US70) = method240()
    let v9 : (std_string_String -> US70) = method241()
    let v11 : US70 = match v7 with Ok x -> v8 x | Error x -> v9 x
    match v11 with
    | US70_1(v17) -> (* Error *)
        let v18 : string = "Error: " + string v17 + ""
        v18
    | US70_0(v14) -> (* Ok *)
        let v15 : string = "fable_library_rust::String_::fromString($0)"
        let v16 : string = Fable.Core.RustInterop.emitRustExpr v14 v15 
        v16
and closure252 () () : string =
    let v0 : string = ""
    v0
and closure248 () () : leptos_dom_Fragment =
    let v0 : string = "settings_view.global_state_log_render ()"
    let v1 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v2 : bool = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
    let v4 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v3 
    let v5 : string = "$0.unwrap()"
    let v6 : Heap2 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v8 : (unit -> string) = closure249(v6)
    let v9 : leptos_prelude_ArcMemo<string> = Fable.Core.RustInterop.emitRustExpr v8 v7 
    let v10 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v11 : string = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "$0"
    let v13 : (unit -> string) = closure252()
    let v14 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v13 v12 
    let v15 : string = "class=move || \"[padding:1px] [font-size:12px] [line-height:12px] [text-wrap:pretty] \".to_owned() + &v14(())"
    let v16 : string = ""
    let v17 : string = " " + v15 + v16 + ""
    (* run_target_args'
    let v22 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v23 
    let _run_target_args'_v22 = v24 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v25 : string = "&*$0"
    let v26 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v25 
    let _run_target_args'_v22 = v26 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v27 : string = "&*$0"
    let v28 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v27 
    let _run_target_args'_v22 = v28 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v30 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v22 = v30 
    #endif
#if FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v22 = v34 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v38 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v22 = v38 
    #endif
#else
    let v42 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v22 = v42 
    #endif
    let v45 : Ref<Str> = _run_target_args'_v22 
    (* run_target_args'
    let v58 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v59 : string = "String::from($0)"
    let v60 : std_string_String = Fable.Core.RustInterop.emitRustExpr v45 v59 
    let _run_target_args'_v58 = v60 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v61 : string = "String::from($0)"
    let v62 : std_string_String = Fable.Core.RustInterop.emitRustExpr v45 v61 
    let _run_target_args'_v58 = v62 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v63 : string = "String::from($0)"
    let v64 : std_string_String = Fable.Core.RustInterop.emitRustExpr v45 v63 
    let _run_target_args'_v58 = v64 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v66 : std_string_String = v45 |> unbox<std_string_String>
    let _run_target_args'_v58 = v66 
    #endif
#if FABLE_COMPILER_PYTHON
    let v70 : std_string_String = v45 |> unbox<std_string_String>
    let _run_target_args'_v58 = v70 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v74 : std_string_String = v45 |> unbox<std_string_String>
    let _run_target_args'_v58 = v74 
    #endif
#else
    let v78 : std_string_String = v45 |> unbox<std_string_String>
    let _run_target_args'_v58 = v78 
    #endif
    let v81 : std_string_String = _run_target_args'_v58 
    let v90 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v91 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v81 v90 
    let v92 : string = "v91"
    let v93 : string = v92 + v16 
    let v94 : string = v93 + v16 
    let v95 : string = "vec![" + v94 + "]"
    let v96 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v95 
    let v97 : string = "leptos::prelude::Fragment::new($0)"
    let v98 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v96 v97 
    let v99 : string = "leptos::prelude::AnyView::from($0)"
    let v100 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v98 v99 
    let v101 : string = "pre"
    let v102 : string = "<" + v101 + " " + v17 + ">move || { v100 }</" + v101 + ">"
    let v103 : string = "leptos::prelude::view! { " + v102 + " }"
    let v104 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v103 
    let v105 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v104 |> unbox
    let v106 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v107 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v105 v106 
    let v108 : string = "v107"
    let v109 : string = v108 + v16 
    let v110 : string = v109 + v16 
    let v111 : string = "vec![" + v110 + "]"
    let v112 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v111 
    let v113 : string = "leptos::prelude::Fragment::new($0)"
    let v114 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v112 v113 
    v114
and method239 () : (unit -> leptos_dom_Fragment) =
    closure248()
and closure253 () () : string =
    let v0 : string = ""
    v0
and closure246 () () : leptos_dom_Fragment =
    let v0 : (unit -> leptos_dom_Fragment) = method238()
    let v1 : (unit -> leptos_dom_Fragment) = method239()
    let v2 : string = "$0"
    let v3 : (unit -> string) = closure253()
    let v4 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3 v2 
    let v5 : string = "$0"
    let v6 : (unit -> string) = closure234()
    let v7 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v6 v5 
    let v8 : string = "$0"
    let v9 : (unit -> string) = closure235()
    let v10 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v9 v8 
    let v11 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v10(()) + \" \" + &v7(()) + \" \" + &v4(())"
    let v12 : string = ""
    let v13 : string = " " + v11 + v12 + ""
    let v14 : string = "$0"
    let v15 : (unit -> string) = closure236()
    let v16 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v15 v14 
    let v17 : string = "class=\"[font-size:12px] text-gray-400\""
    let v18 : string = " " + v17 + v12 + ""
    let v19 : leptos_dom_Fragment = v0 ()
    let v20 : string = "leptos::prelude::AnyView::from($0)"
    let v21 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v19 v20 
    let v22 : string = "dt"
    let v23 : string = "<" + v22 + " " + v18 + ">move || { v21 }</" + v22 + ">"
    let v24 : string = "leptos::prelude::view! { " + v23 + " }"
    let v25 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v24 
    let v26 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v25 |> unbox
    let v27 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v28 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v26 v27 
    let v29 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v16(())"
    let v30 : string = " " + v29 + v12 + ""
    let v31 : leptos_dom_Fragment = v1 ()
    let v32 : string = "leptos::prelude::AnyView::from($0)"
    let v33 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v31 v32 
    let v34 : string = "dd"
    let v35 : string = "<" + v34 + " " + v30 + ">move || { v33 }</" + v34 + ">"
    let v36 : string = "leptos::prelude::view! { " + v35 + " }"
    let v37 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v36 
    let v38 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v37 |> unbox
    let v39 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v40 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v38 v39 
    let v41 : string = "v40"
    let v42 : string = v41 + v12 
    let v43 : string = v42 + v12 
    let v44 : string = "v28"
    let v45 : string = ", "
    let v46 : string = v44 + v45 
    let v47 : string = v46 + v43 
    let v48 : string = "vec![" + v47 + "]"
    let v49 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v48 
    let v50 : string = "leptos::prelude::Fragment::new($0)"
    let v51 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v49 v50 
    let v52 : string = "leptos::prelude::AnyView::from($0)"
    let v53 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v51 v52 
    let v54 : string = "dl"
    let v55 : string = "<" + v54 + " " + v13 + ">move || { v53 }</" + v54 + ">"
    let v56 : string = "leptos::prelude::view! { " + v55 + " }"
    let v57 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v56 
    let v58 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v57 |> unbox
    let v59 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v60 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v58 v59 
    let v61 : string = "v60"
    let v62 : string = v61 + v12 
    let v63 : string = v62 + v12 
    let v64 : string = "vec![" + v63 + "]"
    let v65 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v64 
    let v66 : string = "leptos::prelude::Fragment::new($0)"
    let v67 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v65 v66 
    v67
and closure254 (v0 : leptos_prelude_WriteSignal<bool>) () : unit =
    let v1 : string = $"true; leptos::prelude::WriteSignal::update(&$0, |x: &mut /*"
    let v2 : bool = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v4 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
    let v7 : string = "*/ | { *x = $0(x.clone()) }); //"
    let v8 : (bool -> bool) = closure230()
    let v9 : bool = Fable.Core.RustInterop.emitRustExpr v8 v7 
    ()
and closure255 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and method242 (v0 : Ref<Lifetime<StaticLifetime, Str>>) : Ref<Lifetime<StaticLifetime, Str>> =
    v0
and closure256 (v0 : leptos_prelude_ReadSignal<bool>) () : std_string_String =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : bool = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v9 : Ref<Lifetime<StaticLifetime, Str>> =
        if v2 then
            let v3 : string = ""
            let v4 : string = "r#\"" + v3 + "\"#"
            let v5 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v4 
            v5
        else
            let v6 : string = "bg-gray-300 hover:bg-gray-200"
            let v7 : string = "r#\"" + v6 + "\"#"
            let v8 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v7 
            v8
    let v10 : Ref<Lifetime<StaticLifetime, Str>> = method242(v9)
    let v11 : string = "v10.to_owned() + \" hover:bg-gray-200\""
    let v12 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v11 
    v12
and closure257 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure258 (v0 : leptos_prelude_AnyView_) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = "[margin-right:40px]"
    let v2 : string = "r#\"" + v1 + "\"#"
    let v3 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v2 
    v3
and closure259 () () : string =
    let v0 : string = "Transactions"
    v0
and method243 (v0 : leptos_prelude_AnyView_) : (unit -> string) =
    closure259()
and closure261 () () : leptos_dom_Fragment =
    let v0 : string = "Settings"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and closure262 () () : leptos_dom_Fragment =
    let v0 : string = "Table View"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and method244 () : (unit -> leptos_dom_Fragment) =
    closure262()
and closure265 () (v0 : Heap0) : Heap0 =
    let v1 : Vec<(bool * std_string_String)> = v0.l0
    let v2 : std_string_String option = v0.l1
    let v3 : int32 = v0.l2
    let v4 : int32 = v0.l3
    let v5 : US1 = v0.l4
    let v6 : bool =
        match v5 with
        | US1_1 -> (* Table *)
            true
        | _ ->
            false
    let v9 : US1 =
        if v6 then
            US1_0
        else
            US1_1
    {l0 = v1; l1 = v2; l2 = v3; l3 = v4; l4 = v9} : Heap0
and closure264 (v0 : Heap2) (v1 : leptos_ev_Event) : unit =
    let v2 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v3 : string = "Box::pin($0)"
    let v4 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v6 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : leptos_prelude_ArcRwSignal<Heap0> = v6.l3
    let v8 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
    let v9 : bool = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v11 : TypeEmit<Heap0> = null |> unbox<TypeEmit<Heap0>>
    let v14 : string = "*/ | { *x = $0(x.clone()) }); //"
    let v15 : (Heap0 -> Heap0) = closure265()
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr v15 v14 
    ()
and closure266 (v0 : Heap2) () : bool =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<Heap0> = v5.l3
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : Heap0 = Fable.Core.RustInterop.emitRustExpr v6 v7 
    let v9 : US1 = v8.l4
    match v9 with
    | US1_1 -> (* Table *)
        true
    | _ ->
        false
and method246 (v0 : Heap2) : (unit -> bool) =
    closure266(v0)
and closure267 () () : std_string_String =
    let v0 : string = "table-view"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    v64
and method247 () : (unit -> std_string_String) =
    closure267()
and closure263 (v0 : Heap2) () : leptos_dom_Fragment =
    let v1 : unit = ()
    let v2 : string = $"true; let _func0_from_v1 = Func0::from(move || {{ //"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr () v2 
    let v4 : string = "table-view"
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v45 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v46 
    let _run_target_args'_v45 = v47 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v48 : string = "String::from($0)"
    let v49 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v48 
    let _run_target_args'_v45 = v49 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v50 : string = "String::from($0)"
    let v51 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v50 
    let _run_target_args'_v45 = v51 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v53 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v53 
    #endif
#if FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v57 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v61 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v61 
    #endif
#else
    let v65 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v65 
    #endif
    let v68 : std_string_String = _run_target_args'_v45 
    let v77 : string = $"true; $0 /*"
    let v78 : bool = Fable.Core.RustInterop.emitRustExpr v68 v77 
    let v79 : string = $"*/ }}); //"
    let v80 : bool = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = $"_func0_from_v1"
    let v82 : Func0<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v81 
    let v83 : string = "block"
    let v84 : string = "relative"
    let v85 : string = "h-8"
    let v86 : string = "w-14"
    let v87 : string = "cursor-pointer"
    let v88 : string = "[-webkit-tap-highlight-color:_transparent]"
    let v89 : string list = []
    let v91 : string list = v88 :: v89 
    let v95 : string list = v87 :: v91 
    let v99 : string list = v86 :: v95 
    let v103 : string list = v85 :: v99 
    let v107 : string list = v84 :: v103 
    let v111 : string list = v83 :: v107 
    let v118 : unit = ()
    let _let'_v118 =
        seq {
            yield! v111 
            (* indent
            ()
        indent *)
        }
        (* indent
        ()
    indent *)
    let v121 : string seq = _let'_v118 
    let v129 : (string -> (string seq -> string)) = String.concat
    let v130 : string = " "
    let v131 : (string seq -> string) = v129 v130
    let v132 : string = v131 v121
    (* run_target_args'
    let v139 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v140 : string = "&*$0"
    let v141 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v132 v140 
    let _run_target_args'_v139 = v141 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v142 : string = "&*$0"
    let v143 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v132 v142 
    let _run_target_args'_v139 = v143 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v144 : string = "&*$0"
    let v145 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v132 v144 
    let _run_target_args'_v139 = v145 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v147 : Ref<Str> = v132 |> unbox<Ref<Str>>
    let _run_target_args'_v139 = v147 
    #endif
#if FABLE_COMPILER_PYTHON
    let v151 : Ref<Str> = v132 |> unbox<Ref<Str>>
    let _run_target_args'_v139 = v151 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v155 : Ref<Str> = v132 |> unbox<Ref<Str>>
    let _run_target_args'_v139 = v155 
    #endif
#else
    let v159 : Ref<Str> = v132 |> unbox<Ref<Str>>
    let _run_target_args'_v139 = v159 
    #endif
    let v162 : Ref<Str> = _run_target_args'_v139 
    (* run_target_args'
    let v175 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v176 : string = "String::from($0)"
    let v177 : std_string_String = Fable.Core.RustInterop.emitRustExpr v162 v176 
    let _run_target_args'_v175 = v177 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v178 : string = "String::from($0)"
    let v179 : std_string_String = Fable.Core.RustInterop.emitRustExpr v162 v178 
    let _run_target_args'_v175 = v179 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v180 : string = "String::from($0)"
    let v181 : std_string_String = Fable.Core.RustInterop.emitRustExpr v162 v180 
    let _run_target_args'_v175 = v181 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v183 : std_string_String = v162 |> unbox<std_string_String>
    let _run_target_args'_v175 = v183 
    #endif
#if FABLE_COMPILER_PYTHON
    let v187 : std_string_String = v162 |> unbox<std_string_String>
    let _run_target_args'_v175 = v187 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v191 : std_string_String = v162 |> unbox<std_string_String>
    let _run_target_args'_v175 = v191 
    #endif
#else
    let v195 : std_string_String = v162 |> unbox<std_string_String>
    let _run_target_args'_v175 = v195 
    #endif
    let v198 : std_string_String = _run_target_args'_v175 
    let v207 : string = "$0"
    let v208 : std_string_String = Fable.Core.RustInterop.emitRustExpr v198 v207 
    let v209 : string = "for=move || v82()"
    let v210 : string = "class=v208"
    let v211 : string = ""
    let v212 : string = " " + v209 + v211 + ""
    let v213 : string = " " + v210 + v212 + ""
    let v214 : (leptos_ev_Event -> unit) = closure264(v0)
    let v215 : string = "true; let v214 = $0; //"
    let v216 : bool = Fable.Core.RustInterop.emitRustExpr v214 v215 
    let v217 : (unit -> bool) = method246(v0)
    let v218 : (unit -> std_string_String) = method247()
    let v219 : string = "class=\"peer sr-only [&:checked_+_span_svg[data-checked-icon]]:block [&:checked_+_span_svg[data-unchecked-icon]]:hidden\""
    let v220 : string = "type=\"checkbox\""
    let v221 : string = "id=move || v218()"
    let v222 : string = "on:change=move |event| v214(event)"
    let v223 : string = "prop:checked=move || v217()"
    let v224 : string = " " + v219 + v211 + ""
    let v225 : string = " " + v220 + v224 + ""
    let v226 : string = " " + v221 + v225 + ""
    let v227 : string = " " + v222 + v226 + ""
    let v228 : string = " " + v223 + v227 + ""
    let v229 : string = "input"
    let v230 : string = "<" + v229 + " " + v228 + " />"
    let v231 : string = "leptos::prelude::view! { " + v230 + " }"
    let v232 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v231 
    let v233 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v232 |> unbox
    let v234 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v235 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v233 v234 
    let v236 : string = "class=\"absolute inset-y-0 start-0 z-10 m-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-white dark:bg-gray-400 peer-checked:bg-white text-gray-200 transition-all peer-checked:start-6 peer-checked:text-gray-400\""
    let v237 : string = " " + v236 + v211 + ""
    let v238 : string = "data-unchecked-icon"
    let v239 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v240 : string = "class=\"h-4 w-4\""
    let v241 : string = "viewBox=\"0 0 20 20\""
    let v242 : string = "fill=\"currentColor\""
    let v243 : string = " " + v238 + v211 + ""
    let v244 : string = " " + v239 + v243 + ""
    let v245 : string = " " + v240 + v244 + ""
    let v246 : string = " " + v241 + v245 + ""
    let v247 : string = " " + v242 + v246 + ""
    let v248 : string = "fill-rule=\"evenodd\""
    let v249 : string = "d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\""
    let v250 : string = "clip-rule=\"evenodd\""
    let v251 : string = " " + v248 + v211 + ""
    let v252 : string = " " + v249 + v251 + ""
    let v253 : string = " " + v250 + v252 + ""
    let v254 : string = "vec![" + v211 + "]"
    let v255 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v254 
    let v256 : string = "leptos::prelude::Fragment::new($0)"
    let v257 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v255 v256 
    let v258 : string = "leptos::prelude::AnyView::from($0)"
    let v259 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v257 v258 
    let v260 : string = "path"
    let v261 : string = "<" + v260 + " " + v253 + ">move || { v259 }</" + v260 + ">"
    let v262 : string = "leptos::prelude::view! { " + v261 + " }"
    let v263 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v262 
    let v264 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v263 |> unbox
    let v265 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v266 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v264 v265 
    let v267 : string = "v266"
    let v268 : string = v267 + v211 
    let v269 : string = v268 + v211 
    let v270 : string = "vec![" + v269 + "]"
    let v271 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v270 
    let v272 : string = "leptos::prelude::Fragment::new($0)"
    let v273 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v271 v272 
    let v274 : string = "leptos::prelude::AnyView::from($0)"
    let v275 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v273 v274 
    let v276 : string = "svg"
    let v277 : string = "<" + v276 + " " + v247 + ">move || { v275 }</" + v276 + ">"
    let v278 : string = "leptos::prelude::view! { " + v277 + " }"
    let v279 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v278 
    let v280 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v279 |> unbox
    let v281 : string = "data-checked-icon"
    let v282 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v283 : string = "class=\"hidden h-4 w-4\""
    let v284 : string = "viewBox=\"0 0 20 20\""
    let v285 : string = "fill=\"currentColor\""
    let v286 : string = " " + v281 + v211 + ""
    let v287 : string = " " + v282 + v286 + ""
    let v288 : string = " " + v283 + v287 + ""
    let v289 : string = " " + v284 + v288 + ""
    let v290 : string = " " + v285 + v289 + ""
    let v291 : string = "fill-rule=\"evenodd\""
    let v292 : string = "d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\""
    let v293 : string = "clip-rule=\"evenodd\""
    let v294 : string = " " + v291 + v211 + ""
    let v295 : string = " " + v292 + v294 + ""
    let v296 : string = " " + v293 + v295 + ""
    let v297 : string = "vec![" + v211 + "]"
    let v298 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v297 
    let v299 : string = "leptos::prelude::Fragment::new($0)"
    let v300 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v298 v299 
    let v301 : string = "leptos::prelude::AnyView::from($0)"
    let v302 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v300 v301 
    let v303 : string = "<" + v260 + " " + v296 + ">move || { v302 }</" + v260 + ">"
    let v304 : string = "leptos::prelude::view! { " + v303 + " }"
    let v305 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v304 
    let v306 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v305 |> unbox
    let v307 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v308 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v306 v307 
    let v309 : string = "v308"
    let v310 : string = v309 + v211 
    let v311 : string = v310 + v211 
    let v312 : string = "vec![" + v311 + "]"
    let v313 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v312 
    let v314 : string = "leptos::prelude::Fragment::new($0)"
    let v315 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v313 v314 
    let v316 : string = "leptos::prelude::AnyView::from($0)"
    let v317 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v315 v316 
    let v318 : string = "<" + v276 + " " + v290 + ">move || { v317 }</" + v276 + ">"
    let v319 : string = "leptos::prelude::view! { " + v318 + " }"
    let v320 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v319 
    let v321 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v320 |> unbox
    let v322 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v323 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v321 v322 
    let v324 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v325 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v280 v324 
    let v326 : string = "v323"
    let v327 : string = v326 + v211 
    let v328 : string = v327 + v211 
    let v329 : string = "v325"
    let v330 : string = ", "
    let v331 : string = v329 + v330 
    let v332 : string = v331 + v328 
    let v333 : string = "vec![" + v332 + "]"
    let v334 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v333 
    let v335 : string = "leptos::prelude::Fragment::new($0)"
    let v336 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v334 v335 
    let v337 : string = "leptos::prelude::AnyView::from($0)"
    let v338 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v336 v337 
    let v339 : string = "span"
    let v340 : string = "<" + v339 + " " + v237 + ">move || { v338 }</" + v339 + ">"
    let v341 : string = "leptos::prelude::view! { " + v340 + " }"
    let v342 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v341 
    let v343 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v342 |> unbox
    let v344 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v345 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v343 v344 
    let v346 : string = "class=\"absolute inset-0 rounded-full bg-gray-200 dark:bg-gray-200 transition peer-checked:bg-gray-300\""
    let v347 : string = " " + v346 + v211 + ""
    let v348 : string = "vec![" + v211 + "]"
    let v349 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v348 
    let v350 : string = "leptos::prelude::Fragment::new($0)"
    let v351 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v349 v350 
    let v352 : string = "leptos::prelude::AnyView::from($0)"
    let v353 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v351 v352 
    let v354 : string = "<" + v339 + " " + v347 + ">move || { v353 }</" + v339 + ">"
    let v355 : string = "leptos::prelude::view! { " + v354 + " }"
    let v356 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v355 
    let v357 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v356 |> unbox
    let v358 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v359 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v357 v358 
    let v360 : string = "v359"
    let v361 : string = v360 + v211 
    let v362 : string = v361 + v211 
    let v363 : string = "v345"
    let v364 : string = v363 + v330 
    let v365 : string = v364 + v362 
    let v366 : string = "v235"
    let v367 : string = v366 + v330 
    let v368 : string = v367 + v365 
    let v369 : string = "vec![" + v368 + "]"
    let v370 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v369 
    let v371 : string = "leptos::prelude::Fragment::new($0)"
    let v372 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v370 v371 
    let v373 : string = "leptos::prelude::AnyView::from($0)"
    let v374 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v372 v373 
    let v375 : string = "label"
    let v376 : string = "<" + v375 + " " + v213 + ">move || { v374 }</" + v375 + ">"
    let v377 : string = "leptos::prelude::view! { " + v376 + " }"
    let v378 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v377 
    let v379 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Label>> = v378 |> unbox
    let v380 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v381 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v379 v380 
    let v382 : string = "v381"
    let v383 : string = v382 + v211 
    let v384 : string = v383 + v211 
    let v385 : string = "vec![" + v384 + "]"
    let v386 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v385 
    let v387 : string = "leptos::prelude::Fragment::new($0)"
    let v388 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v386 v387 
    v388
and method245 (v0 : Heap2) : (unit -> leptos_dom_Fragment) =
    closure263(v0)
and closure268 () () : string =
    let v0 : string = "items-center"
    v0
and closure269 (v0 : int64) () : leptos_dom_Fragment =
    let v1 : string = "Transaction " + string (v0 + 1L) + ""
    (* run_target_args'
    let v6 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v7 : string = "&*$0"
    let v8 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v7 
    let _run_target_args'_v6 = v8 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v9 : string = "&*$0"
    let v10 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v9 
    let _run_target_args'_v6 = v10 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v11 : string = "&*$0"
    let v12 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v11 
    let _run_target_args'_v6 = v12 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v14 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v14 
    #endif
#if FABLE_COMPILER_PYTHON
    let v18 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v18 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v22 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v22 
    #endif
#else
    let v26 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v26 
    #endif
    let v29 : Ref<Str> = _run_target_args'_v6 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    let v74 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v75 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v65 v74 
    let v76 : string = "v75"
    let v77 : string = ""
    let v78 : string = v76 + v77 
    let v79 : string = v78 + v77 
    let v80 : string = "vec![" + v79 + "]"
    let v81 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v80 
    let v82 : string = "leptos::prelude::Fragment::new($0)"
    let v83 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v81 v82 
    v83
and closure270 () () : leptos_dom_Fragment =
    let v0 : string = "Account"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and method248 () : (unit -> leptos_dom_Fragment) =
    closure270()
and closure271 (v0 : string) () : leptos_dom_Fragment =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and method249 (v0 : string) : (unit -> leptos_dom_Fragment) =
    closure271(v0)
and closure272 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure273 () () : string =
    let v0 : string = ""
    v0
and closure274 () () : leptos_dom_Fragment =
    let v0 : string = "Block Timestamp"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and method250 () : (unit -> leptos_dom_Fragment) =
    closure274()
and closure275 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v5 v12 
    let v15 : (string -> int64) = int64
    let v16 : int64 = v15 v13
    let v19 : int64 = method204(v16)
    let v20 : int64 = v19 / 1000L
    let v21 : string = "chrono::DateTime::from_timestamp_micros($0)"
    let v22 : chrono_DateTime<chrono_Utc> option = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v25 : (chrono_DateTime<chrono_Utc> -> US68) = method205()
    let v26 : US68 option = v22 |> Option.map v25 
    let v46 : US68 = US68_1
    let v47 : US68 = v26 |> Option.defaultValue v46 
    let v66 : US31 =
        match v47 with
        | US68_1 -> (* None *)
            US31_1
        | US68_0(v51) -> (* Some *)
            let v52 : string = "$0.naive_utc()"
            let v53 : chrono_NaiveDateTime = Fable.Core.RustInterop.emitRustExpr v51 v52 
            let v54 : string = "chrono::offset::TimeZone::from_utc_datetime(&chrono::Local, &$0)"
            let v55 : chrono_DateTime<chrono_Local> = Fable.Core.RustInterop.emitRustExpr v53 v54 
            let v56 : string = "%Y-%m-%d %H:%M:%S"
            let v57 : string = "r#\"" + v56 + "\"#"
            let v58 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v57 
            let v59 : string = "$0.format($1).to_string()"
            let v60 : std_string_String = Fable.Core.RustInterop.emitRustExpr struct (v55, v58) v59 
            let v61 : string = "fable_library_rust::String_::fromString($0)"
            let v62 : string = Fable.Core.RustInterop.emitRustExpr v60 v61 
            US31_0(v62)
    let v72 : US69 =
        match v66 with
        | US31_1 -> (* None *)
            let v69 : string = "resultm.from_option / Option does not have a value."
            US69_1(v69)
        | US31_0(v67) -> (* Some *)
            US69_0(v67)
    let v77 : string =
        match v72 with
        | US69_1(v74) -> (* Error *)
            let v75 : string = "sm'.to_string result / Error: " + v74 + ""
            v75
        | US69_0(v73) -> (* Ok *)
            v73
    (* run_target_args'
    let v82 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v83 : string = "&*$0"
    let v84 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v77 v83 
    let _run_target_args'_v82 = v84 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v85 : string = "&*$0"
    let v86 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v77 v85 
    let _run_target_args'_v82 = v86 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v87 : string = "&*$0"
    let v88 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v77 v87 
    let _run_target_args'_v82 = v88 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v90 : Ref<Str> = v77 |> unbox<Ref<Str>>
    let _run_target_args'_v82 = v90 
    #endif
#if FABLE_COMPILER_PYTHON
    let v94 : Ref<Str> = v77 |> unbox<Ref<Str>>
    let _run_target_args'_v82 = v94 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v98 : Ref<Str> = v77 |> unbox<Ref<Str>>
    let _run_target_args'_v82 = v98 
    #endif
#else
    let v102 : Ref<Str> = v77 |> unbox<Ref<Str>>
    let _run_target_args'_v82 = v102 
    #endif
    let v105 : Ref<Str> = _run_target_args'_v82 
    (* run_target_args'
    let v118 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v119 : string = "String::from($0)"
    let v120 : std_string_String = Fable.Core.RustInterop.emitRustExpr v105 v119 
    let _run_target_args'_v118 = v120 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v121 : string = "String::from($0)"
    let v122 : std_string_String = Fable.Core.RustInterop.emitRustExpr v105 v121 
    let _run_target_args'_v118 = v122 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v123 : string = "String::from($0)"
    let v124 : std_string_String = Fable.Core.RustInterop.emitRustExpr v105 v123 
    let _run_target_args'_v118 = v124 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v126 : std_string_String = v105 |> unbox<std_string_String>
    let _run_target_args'_v118 = v126 
    #endif
#if FABLE_COMPILER_PYTHON
    let v130 : std_string_String = v105 |> unbox<std_string_String>
    let _run_target_args'_v118 = v130 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v134 : std_string_String = v105 |> unbox<std_string_String>
    let _run_target_args'_v118 = v134 
    #endif
#else
    let v138 : std_string_String = v105 |> unbox<std_string_String>
    let _run_target_args'_v118 = v138 
    #endif
    let v141 : std_string_String = _run_target_args'_v118 
    let v150 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v151 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v141 v150 
    let v152 : string = "v151"
    let v153 : string = ""
    let v154 : string = v152 + v153 
    let v155 : string = v154 + v153 
    let v156 : string = "vec![" + v155 + "]"
    let v157 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v156 
    let v158 : string = "leptos::prelude::Fragment::new($0)"
    let v159 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v157 v158 
    v159
and method251 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure275(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure276 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure277 () () : string =
    let v0 : string = ""
    v0
and closure278 () () : leptos_dom_Fragment =
    let v0 : string = "Predecessor"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and method252 () : (unit -> leptos_dom_Fragment) =
    closure278()
and closure279 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v1 v12 
    (* run_target_args'
    let v18 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v19 
    let _run_target_args'_v18 = v20 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v21 
    let _run_target_args'_v18 = v22 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v23 
    let _run_target_args'_v18 = v24 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v26 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v26 
    #endif
#if FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v30 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v34 
    #endif
#else
    let v38 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v38 
    #endif
    let v41 : Ref<Str> = _run_target_args'_v18 
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v55 
    let _run_target_args'_v54 = v56 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = "String::from($0)"
    let v58 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v57 
    let _run_target_args'_v54 = v58 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = "String::from($0)"
    let v60 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v59 
    let _run_target_args'_v54 = v60 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v62 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v54 = v62 
    #endif
#if FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v54 = v66 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v70 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v54 = v70 
    #endif
#else
    let v74 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v54 = v74 
    #endif
    let v77 : std_string_String = _run_target_args'_v54 
    let v86 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v87 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v86 
    let v88 : string = "v87"
    let v89 : string = ""
    let v90 : string = v88 + v89 
    let v91 : string = v90 + v89 
    let v92 : string = "vec![" + v91 + "]"
    let v93 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v92 
    let v94 : string = "leptos::prelude::Fragment::new($0)"
    let v95 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v93 v94 
    v95
and method253 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure279(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure280 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure281 () () : string =
    let v0 : string = ""
    v0
and closure282 () () : leptos_dom_Fragment =
    let v0 : string = "Receiver"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and method254 () : (unit -> leptos_dom_Fragment) =
    closure282()
and closure283 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v2 v12 
    (* run_target_args'
    let v18 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v19 
    let _run_target_args'_v18 = v20 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v21 
    let _run_target_args'_v18 = v22 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v23 
    let _run_target_args'_v18 = v24 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v26 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v26 
    #endif
#if FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v30 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v34 
    #endif
#else
    let v38 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v38 
    #endif
    let v41 : Ref<Str> = _run_target_args'_v18 
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v55 
    let _run_target_args'_v54 = v56 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = "String::from($0)"
    let v58 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v57 
    let _run_target_args'_v54 = v58 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = "String::from($0)"
    let v60 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v59 
    let _run_target_args'_v54 = v60 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v62 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v54 = v62 
    #endif
#if FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v54 = v66 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v70 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v54 = v70 
    #endif
#else
    let v74 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v54 = v74 
    #endif
    let v77 : std_string_String = _run_target_args'_v54 
    let v86 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v87 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v86 
    let v88 : string = "v87"
    let v89 : string = ""
    let v90 : string = v88 + v89 
    let v91 : string = v90 + v89 
    let v92 : string = "vec![" + v91 + "]"
    let v93 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v92 
    let v94 : string = "leptos::prelude::Fragment::new($0)"
    let v95 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v93 v94 
    v95
and method255 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure283(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure284 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure285 () () : string =
    let v0 : string = ""
    v0
and closure286 () () : leptos_dom_Fragment =
    let v0 : string = "Actions"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and method256 () : (unit -> leptos_dom_Fragment) =
    closure286()
and closure288 (v0 : std_string_String) () : leptos_dom_Fragment =
    let v1 : string = "fable_library_rust::String_::fromString($0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : bool = "FUNCTION_CALL" = v2
    let v11 : string =
        if v3 then
            let v4 : string = "Function Call:"
            v4
        else
            let v5 : bool = "DEPLOY_CONTRACT" = v2
            if v5 then
                let v6 : string = "Contract Deploy:"
                v6
            else
                let v7 : bool = "TRANSFER" = v2
                if v7 then
                    let v8 : string = "Transfer:"
                    v8
                else
                    v2
    (* run_target_args'
    let v16 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v17 : string = "&*$0"
    let v18 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v17 
    let _run_target_args'_v16 = v18 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v19 
    let _run_target_args'_v16 = v20 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v21 
    let _run_target_args'_v16 = v22 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v24 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v16 = v24 
    #endif
#if FABLE_COMPILER_PYTHON
    let v28 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v16 = v28 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v32 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v16 = v32 
    #endif
#else
    let v36 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v16 = v36 
    #endif
    let v39 : Ref<Str> = _run_target_args'_v16 
    (* run_target_args'
    let v52 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v53 : string = "String::from($0)"
    let v54 : std_string_String = Fable.Core.RustInterop.emitRustExpr v39 v53 
    let _run_target_args'_v52 = v54 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v39 v55 
    let _run_target_args'_v52 = v56 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v57 : string = "String::from($0)"
    let v58 : std_string_String = Fable.Core.RustInterop.emitRustExpr v39 v57 
    let _run_target_args'_v52 = v58 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v60 : std_string_String = v39 |> unbox<std_string_String>
    let _run_target_args'_v52 = v60 
    #endif
#if FABLE_COMPILER_PYTHON
    let v64 : std_string_String = v39 |> unbox<std_string_String>
    let _run_target_args'_v52 = v64 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v68 : std_string_String = v39 |> unbox<std_string_String>
    let _run_target_args'_v52 = v68 
    #endif
#else
    let v72 : std_string_String = v39 |> unbox<std_string_String>
    let _run_target_args'_v52 = v72 
    #endif
    let v75 : std_string_String = _run_target_args'_v52 
    let v84 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v85 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v75 v84 
    let v86 : string = "v85"
    let v87 : string = ""
    let v88 : string = v86 + v87 
    let v89 : string = v88 + v87 
    let v90 : string = "vec![" + v89 + "]"
    let v91 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v90 
    let v92 : string = "leptos::prelude::Fragment::new($0)"
    let v93 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v91 v92 
    v93
and method258 (v0 : std_string_String) : (unit -> leptos_dom_Fragment) =
    closure288(v0)
and closure290 () () : leptos_dom_Fragment =
    let v0 : string = "Method"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and method260 () : (unit -> leptos_dom_Fragment) =
    closure290()
and closure291 (v0 : std_string_String option) () : leptos_dom_Fragment =
    let v3 : (std_string_String -> US14) = method39()
    let v4 : US14 option = v0 |> Option.map v3 
    let v24 : US14 = US14_1
    let v25 : US14 = v4 |> Option.defaultValue v24 
    match v25 with
    | US14_1 -> (* None *)
        let v114 : string = "None"
        (* run_target_args'
        let v119 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v120 : string = "&*$0"
        let v121 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v114 v120 
        let _run_target_args'_v119 = v121 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v122 : string = "&*$0"
        let v123 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v114 v122 
        let _run_target_args'_v119 = v123 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v124 : string = "&*$0"
        let v125 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v114 v124 
        let _run_target_args'_v119 = v125 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v127 : Ref<Str> = v114 |> unbox<Ref<Str>>
        let _run_target_args'_v119 = v127 
        #endif
#if FABLE_COMPILER_PYTHON
        let v131 : Ref<Str> = v114 |> unbox<Ref<Str>>
        let _run_target_args'_v119 = v131 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v135 : Ref<Str> = v114 |> unbox<Ref<Str>>
        let _run_target_args'_v119 = v135 
        #endif
#else
        let v139 : Ref<Str> = v114 |> unbox<Ref<Str>>
        let _run_target_args'_v119 = v139 
        #endif
        let v142 : Ref<Str> = _run_target_args'_v119 
        (* run_target_args'
        let v155 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v156 : string = "String::from($0)"
        let v157 : std_string_String = Fable.Core.RustInterop.emitRustExpr v142 v156 
        let _run_target_args'_v155 = v157 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v158 : string = "String::from($0)"
        let v159 : std_string_String = Fable.Core.RustInterop.emitRustExpr v142 v158 
        let _run_target_args'_v155 = v159 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v160 : string = "String::from($0)"
        let v161 : std_string_String = Fable.Core.RustInterop.emitRustExpr v142 v160 
        let _run_target_args'_v155 = v161 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v163 : std_string_String = v142 |> unbox<std_string_String>
        let _run_target_args'_v155 = v163 
        #endif
#if FABLE_COMPILER_PYTHON
        let v167 : std_string_String = v142 |> unbox<std_string_String>
        let _run_target_args'_v155 = v167 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v171 : std_string_String = v142 |> unbox<std_string_String>
        let _run_target_args'_v155 = v171 
        #endif
#else
        let v175 : std_string_String = v142 |> unbox<std_string_String>
        let _run_target_args'_v155 = v175 
        #endif
        let v178 : std_string_String = _run_target_args'_v155 
        let v187 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
        let v188 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v178 v187 
        let v189 : string = "v188"
        let v190 : string = ""
        let v191 : string = v189 + v190 
        let v192 : string = v191 + v190 
        let v193 : string = "vec![" + v192 + "]"
        let v194 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v193 
        let v195 : string = "leptos::prelude::Fragment::new($0)"
        let v196 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v194 v195 
        v196
    | US14_0(v29) -> (* Some *)
        let v30 : string = "fable_library_rust::String_::fromString($0)"
        let v31 : string = Fable.Core.RustInterop.emitRustExpr v29 v30 
        (* run_target_args'
        let v36 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v37 : string = "&*$0"
        let v38 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v31 v37 
        let _run_target_args'_v36 = v38 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v39 : string = "&*$0"
        let v40 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v31 v39 
        let _run_target_args'_v36 = v40 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v41 : string = "&*$0"
        let v42 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v31 v41 
        let _run_target_args'_v36 = v42 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v44 : Ref<Str> = v31 |> unbox<Ref<Str>>
        let _run_target_args'_v36 = v44 
        #endif
#if FABLE_COMPILER_PYTHON
        let v48 : Ref<Str> = v31 |> unbox<Ref<Str>>
        let _run_target_args'_v36 = v48 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v52 : Ref<Str> = v31 |> unbox<Ref<Str>>
        let _run_target_args'_v36 = v52 
        #endif
#else
        let v56 : Ref<Str> = v31 |> unbox<Ref<Str>>
        let _run_target_args'_v36 = v56 
        #endif
        let v59 : Ref<Str> = _run_target_args'_v36 
        (* run_target_args'
        let v72 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v73 : string = "String::from($0)"
        let v74 : std_string_String = Fable.Core.RustInterop.emitRustExpr v59 v73 
        let _run_target_args'_v72 = v74 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v75 : string = "String::from($0)"
        let v76 : std_string_String = Fable.Core.RustInterop.emitRustExpr v59 v75 
        let _run_target_args'_v72 = v76 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v77 : string = "String::from($0)"
        let v78 : std_string_String = Fable.Core.RustInterop.emitRustExpr v59 v77 
        let _run_target_args'_v72 = v78 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v80 : std_string_String = v59 |> unbox<std_string_String>
        let _run_target_args'_v72 = v80 
        #endif
#if FABLE_COMPILER_PYTHON
        let v84 : std_string_String = v59 |> unbox<std_string_String>
        let _run_target_args'_v72 = v84 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v88 : std_string_String = v59 |> unbox<std_string_String>
        let _run_target_args'_v72 = v88 
        #endif
#else
        let v92 : std_string_String = v59 |> unbox<std_string_String>
        let _run_target_args'_v72 = v92 
        #endif
        let v95 : std_string_String = _run_target_args'_v72 
        let v104 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
        let v105 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v95 v104 
        let v106 : string = "v105"
        let v107 : string = ""
        let v108 : string = v106 + v107 
        let v109 : string = v108 + v107 
        let v110 : string = "vec![" + v109 + "]"
        let v111 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v110 
        let v112 : string = "leptos::prelude::Fragment::new($0)"
        let v113 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v111 v112 
        v113
and method261 (v0 : std_string_String option) : (unit -> leptos_dom_Fragment) =
    closure291(v0)
and closure292 () () : string =
    let v0 : string = ""
    v0
and closure293 () () : string =
    let v0 : string = ""
    v0
and closure294 () () : string =
    let v0 : string = ""
    v0
and closure289 (v0 : std_string_String option) () : leptos_dom_Fragment =
    let v1 : string = "class=\"flex flex-1 flex-col\""
    let v2 : string = ""
    let v3 : string = " " + v1 + v2 + ""
    let v4 : (unit -> leptos_dom_Fragment) = method260()
    let v5 : (unit -> leptos_dom_Fragment) = method261(v0)
    let v6 : string = "$0"
    let v7 : (unit -> string) = closure292()
    let v8 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v7 v6 
    let v9 : string = "$0"
    let v10 : (unit -> string) = closure293()
    let v11 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v10 v9 
    let v12 : string = "$0"
    let v13 : (unit -> string) = closure235()
    let v14 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v13 v12 
    let v15 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v14(()) + \" \" + &v11(()) + \" \" + &v8(())"
    let v16 : string = " " + v15 + v2 + ""
    let v17 : string = "$0"
    let v18 : (unit -> string) = closure294()
    let v19 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v18 v17 
    let v20 : string = "class=\"[font-size:12px] text-gray-400\""
    let v21 : string = " " + v20 + v2 + ""
    let v22 : leptos_dom_Fragment = v4 ()
    let v23 : string = "leptos::prelude::AnyView::from($0)"
    let v24 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v22 v23 
    let v25 : string = "dt"
    let v26 : string = "<" + v25 + " " + v21 + ">move || { v24 }</" + v25 + ">"
    let v27 : string = "leptos::prelude::view! { " + v26 + " }"
    let v28 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v28 |> unbox
    let v30 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v31 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v29 v30 
    let v32 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v19(())"
    let v33 : string = " " + v32 + v2 + ""
    let v34 : leptos_dom_Fragment = v5 ()
    let v35 : string = "leptos::prelude::AnyView::from($0)"
    let v36 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v34 v35 
    let v37 : string = "dd"
    let v38 : string = "<" + v37 + " " + v33 + ">move || { v36 }</" + v37 + ">"
    let v39 : string = "leptos::prelude::view! { " + v38 + " }"
    let v40 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v39 
    let v41 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v40 |> unbox
    let v42 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v43 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v41 v42 
    let v44 : string = "v43"
    let v45 : string = v44 + v2 
    let v46 : string = v45 + v2 
    let v47 : string = "v31"
    let v48 : string = ", "
    let v49 : string = v47 + v48 
    let v50 : string = v49 + v46 
    let v51 : string = "vec![" + v50 + "]"
    let v52 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v51 
    let v53 : string = "leptos::prelude::Fragment::new($0)"
    let v54 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v52 v53 
    let v55 : string = "leptos::prelude::AnyView::from($0)"
    let v56 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v54 v55 
    let v57 : string = "dl"
    let v58 : string = "<" + v57 + " " + v16 + ">move || { v56 }</" + v57 + ">"
    let v59 : string = "leptos::prelude::view! { " + v58 + " }"
    let v60 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v59 
    let v61 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v60 |> unbox
    let v62 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v63 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v62 
    let v64 : string = "v63"
    let v65 : string = v64 + v2 
    let v66 : string = v65 + v2 
    let v67 : string = "vec![" + v66 + "]"
    let v68 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v67 
    let v69 : string = "leptos::prelude::Fragment::new($0)"
    let v70 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v68 v69 
    let v71 : string = "leptos::prelude::AnyView::from($0)"
    let v72 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v70 v71 
    let v73 : string = "div"
    let v74 : string = "<" + v73 + " " + v3 + ">move || { v72 }</" + v73 + ">"
    let v75 : string = "leptos::prelude::view! { " + v74 + " }"
    let v76 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v75 
    let v77 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v76 |> unbox
    let v78 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v79 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v78 
    let v80 : string = "v79"
    let v81 : string = v80 + v2 
    let v82 : string = v81 + v2 
    let v83 : string = "vec![" + v82 + "]"
    let v84 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v83 
    let v85 : string = "leptos::prelude::Fragment::new($0)"
    let v86 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v84 v85 
    v86
and method259 (v0 : std_string_String option) : (unit -> leptos_dom_Fragment) =
    closure289(v0)
and closure295 () () : string =
    let v0 : string = ""
    v0
and closure296 () () : string =
    let v0 : string = "items-center"
    v0
and closure297 () () : string =
    let v0 : string = ""
    v0
and closure298 () () : string =
    let v0 : string = ""
    v0
and closure287 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "$0.to_vec()"
    let v13 : Vec<struct (std_string_String * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr v7 v12 
    let v14 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
    let v15 : bool = Fable.Core.RustInterop.emitRustExpr v13 v14 
    let v16 : string = "x"
    let struct (v17 : std_string_String, v18 : std_string_String option) = Fable.Core.RustInterop.emitRustExpr () v16 
    let v19 : (unit -> leptos_dom_Fragment) = method258(v17)
    let v20 : (unit -> leptos_dom_Fragment) = method259(v18)
    let v21 : string = "$0"
    let v22 : (unit -> string) = closure295()
    let v23 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v22 v21 
    let v24 : string = "$0"
    let v25 : (unit -> string) = closure296()
    let v26 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v25 v24 
    let v27 : string = "$0"
    let v28 : (unit -> string) = closure297()
    let v29 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v28 v27 
    let v30 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v29(()) + \" \" + &v26(()) + \" \" + &v23(())"
    let v31 : string = ""
    let v32 : string = " " + v30 + v31 + ""
    let v33 : string = "$0"
    let v34 : (unit -> string) = closure298()
    let v35 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v34 v33 
    let v36 : string = "class=\"[font-size:12px] text-gray-400\""
    let v37 : string = " " + v36 + v31 + ""
    let v38 : leptos_dom_Fragment = v19 ()
    let v39 : string = "leptos::prelude::AnyView::from($0)"
    let v40 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v38 v39 
    let v41 : string = "dt"
    let v42 : string = "<" + v41 + " " + v37 + ">move || { v40 }</" + v41 + ">"
    let v43 : string = "leptos::prelude::view! { " + v42 + " }"
    let v44 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v43 
    let v45 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v44 |> unbox
    let v46 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v47 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v45 v46 
    let v48 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v35(())"
    let v49 : string = " " + v48 + v31 + ""
    let v50 : leptos_dom_Fragment = v20 ()
    let v51 : string = "leptos::prelude::AnyView::from($0)"
    let v52 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v50 v51 
    let v53 : string = "dd"
    let v54 : string = "<" + v53 + " " + v49 + ">move || { v52 }</" + v53 + ">"
    let v55 : string = "leptos::prelude::view! { " + v54 + " }"
    let v56 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v55 
    let v57 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v56 |> unbox
    let v58 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v59 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v57 v58 
    let v60 : string = "v59"
    let v61 : string = v60 + v31 
    let v62 : string = v61 + v31 
    let v63 : string = "v47"
    let v64 : string = ", "
    let v65 : string = v63 + v64 
    let v66 : string = v65 + v62 
    let v67 : string = "vec![" + v66 + "]"
    let v68 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v67 
    let v69 : string = "leptos::prelude::Fragment::new($0)"
    let v70 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v68 v69 
    let v71 : string = "leptos::prelude::AnyView::from($0)"
    let v72 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v70 v71 
    let v73 : string = "dl"
    let v74 : string = "<" + v73 + " " + v32 + ">move || { v72 }</" + v73 + ">"
    let v75 : string = "leptos::prelude::view! { " + v74 + " }"
    let v76 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v75 
    let v77 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v76 |> unbox
    let v78 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v79 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v78 
    let v80 : string = "true; $0 }).collect::<Vec<_>>()"
    let v81 : bool = Fable.Core.RustInterop.emitRustExpr v79 v80 
    let v82 : string = "_vec_map"
    let v83 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v82 
    let v84 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v85 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v83 v84 
    let v86 : string = "v85"
    let v87 : string = v86 + v31 
    let v88 : string = v87 + v31 
    let v89 : string = "vec![" + v88 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::Fragment::new($0)"
    let v92 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v90 v91 
    v92
and method257 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure287(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure299 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure300 () () : string =
    let v0 : string = "sm:pr-[10px]"
    v0
and closure301 () () : string =
    let v0 : string = "[flex-direction:column]"
    v0
and closure302 () () : leptos_dom_Fragment =
    let v0 : string = "Deposit"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and method262 () : (unit -> leptos_dom_Fragment) =
    closure302()
and closure303 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v13 : (float -> string) = _.ToString()
    let v14 : string = v13 v8
    (* run_target_args'
    let v21 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v22 : string = "&*$0"
    let v23 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v22 
    let _run_target_args'_v21 = v23 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v24 : string = "&*$0"
    let v25 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v24 
    let _run_target_args'_v21 = v25 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v26 : string = "&*$0"
    let v27 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v26 
    let _run_target_args'_v21 = v27 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v29 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v29 
    #endif
#if FABLE_COMPILER_PYTHON
    let v33 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v33 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v37 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v37 
    #endif
#else
    let v41 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v41 
    #endif
    let v44 : Ref<Str> = _run_target_args'_v21 
    (* run_target_args'
    let v57 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v58 : string = "String::from($0)"
    let v59 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v58 
    let _run_target_args'_v57 = v59 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v60 : string = "String::from($0)"
    let v61 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v60 
    let _run_target_args'_v57 = v61 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v62 : string = "String::from($0)"
    let v63 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v62 
    let _run_target_args'_v57 = v63 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v65 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v57 = v65 
    #endif
#if FABLE_COMPILER_PYTHON
    let v69 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v57 = v69 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v73 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v57 = v73 
    #endif
#else
    let v77 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v57 = v77 
    #endif
    let v80 : std_string_String = _run_target_args'_v57 
    let v89 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v90 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v80 v89 
    let v91 : string = "v90"
    let v92 : string = ""
    let v93 : string = v91 + v92 
    let v94 : string = v93 + v92 
    let v95 : string = "vec![" + v94 + "]"
    let v96 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v95 
    let v97 : string = "leptos::prelude::Fragment::new($0)"
    let v98 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v96 v97 
    v98
and method263 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure303(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure304 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure305 () () : string =
    let v0 : string = ""
    v0
and closure306 () () : leptos_dom_Fragment =
    let v0 : string = "Outcome Status"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and method264 () : (unit -> leptos_dom_Fragment) =
    closure306()
and closure307 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v13 : (bool -> string) = _.ToString()
    let v14 : string = v13 v9
    (* run_target_args'
    let v21 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v22 : string = "&*$0"
    let v23 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v22 
    let _run_target_args'_v21 = v23 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v24 : string = "&*$0"
    let v25 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v24 
    let _run_target_args'_v21 = v25 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v26 : string = "&*$0"
    let v27 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v26 
    let _run_target_args'_v21 = v27 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v29 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v29 
    #endif
#if FABLE_COMPILER_PYTHON
    let v33 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v33 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v37 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v37 
    #endif
#else
    let v41 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v41 
    #endif
    let v44 : Ref<Str> = _run_target_args'_v21 
    (* run_target_args'
    let v57 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v58 : string = "String::from($0)"
    let v59 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v58 
    let _run_target_args'_v57 = v59 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v60 : string = "String::from($0)"
    let v61 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v60 
    let _run_target_args'_v57 = v61 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v62 : string = "String::from($0)"
    let v63 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v62 
    let _run_target_args'_v57 = v63 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v65 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v57 = v65 
    #endif
#if FABLE_COMPILER_PYTHON
    let v69 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v57 = v69 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v73 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v57 = v73 
    #endif
#else
    let v77 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v57 = v77 
    #endif
    let v80 : std_string_String = _run_target_args'_v57 
    let v89 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v90 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v80 v89 
    let v91 : string = "v90"
    let v92 : string = ""
    let v93 : string = v91 + v92 
    let v94 : string = v93 + v92 
    let v95 : string = "vec![" + v94 + "]"
    let v96 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v95 
    let v97 : string = "leptos::prelude::Fragment::new($0)"
    let v98 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v96 v97 
    v98
and method265 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure307(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure308 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure309 () () : string =
    let v0 : string = ""
    v0
and closure310 () () : leptos_dom_Fragment =
    let v0 : string = "Fee"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and method266 () : (unit -> leptos_dom_Fragment) =
    closure310()
and closure311 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v13 : (float -> string) = _.ToString()
    let v14 : string = v13 v10
    (* run_target_args'
    let v21 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v22 : string = "&*$0"
    let v23 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v22 
    let _run_target_args'_v21 = v23 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v24 : string = "&*$0"
    let v25 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v24 
    let _run_target_args'_v21 = v25 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v26 : string = "&*$0"
    let v27 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v26 
    let _run_target_args'_v21 = v27 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v29 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v29 
    #endif
#if FABLE_COMPILER_PYTHON
    let v33 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v33 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v37 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v37 
    #endif
#else
    let v41 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v41 
    #endif
    let v44 : Ref<Str> = _run_target_args'_v21 
    (* run_target_args'
    let v57 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v58 : string = "String::from($0)"
    let v59 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v58 
    let _run_target_args'_v57 = v59 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v60 : string = "String::from($0)"
    let v61 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v60 
    let _run_target_args'_v57 = v61 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v62 : string = "String::from($0)"
    let v63 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v62 
    let _run_target_args'_v57 = v63 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v65 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v57 = v65 
    #endif
#if FABLE_COMPILER_PYTHON
    let v69 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v57 = v69 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v73 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v57 = v73 
    #endif
#else
    let v77 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v57 = v77 
    #endif
    let v80 : std_string_String = _run_target_args'_v57 
    let v89 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v90 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v80 v89 
    let v91 : string = "v90"
    let v92 : string = ""
    let v93 : string = v91 + v92 
    let v94 : string = v93 + v92 
    let v95 : string = "vec![" + v94 + "]"
    let v96 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v95 
    let v97 : string = "leptos::prelude::Fragment::new($0)"
    let v98 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v96 v97 
    v98
and method267 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure311(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure312 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure313 () () : string =
    let v0 : string = ""
    v0
and closure314 () () : leptos_dom_Fragment =
    let v0 : string = "Block Height"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and method268 () : (unit -> leptos_dom_Fragment) =
    closure314()
and closure315 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v13 : (uint32 -> string) = _.ToString()
    let v14 : string = v13 v6
    (* run_target_args'
    let v21 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v22 : string = "&*$0"
    let v23 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v22 
    let _run_target_args'_v21 = v23 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v24 : string = "&*$0"
    let v25 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v24 
    let _run_target_args'_v21 = v25 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v26 : string = "&*$0"
    let v27 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v26 
    let _run_target_args'_v21 = v27 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v29 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v29 
    #endif
#if FABLE_COMPILER_PYTHON
    let v33 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v33 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v37 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v37 
    #endif
#else
    let v41 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v41 
    #endif
    let v44 : Ref<Str> = _run_target_args'_v21 
    (* run_target_args'
    let v57 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v58 : string = "String::from($0)"
    let v59 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v58 
    let _run_target_args'_v57 = v59 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v60 : string = "String::from($0)"
    let v61 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v60 
    let _run_target_args'_v57 = v61 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v62 : string = "String::from($0)"
    let v63 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v62 
    let _run_target_args'_v57 = v63 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v65 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v57 = v65 
    #endif
#if FABLE_COMPILER_PYTHON
    let v69 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v57 = v69 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v73 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v57 = v73 
    #endif
#else
    let v77 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v57 = v77 
    #endif
    let v80 : std_string_String = _run_target_args'_v57 
    let v89 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v90 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v80 v89 
    let v91 : string = "v90"
    let v92 : string = ""
    let v93 : string = v91 + v92 
    let v94 : string = v93 + v92 
    let v95 : string = "vec![" + v94 + "]"
    let v96 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v95 
    let v97 : string = "leptos::prelude::Fragment::new($0)"
    let v98 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v96 v97 
    v98
and method269 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure315(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure316 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure317 () () : string =
    let v0 : string = ""
    v0
and closure318 () () : leptos_dom_Fragment =
    let v0 : string = "Hash"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and method270 () : (unit -> leptos_dom_Fragment) =
    closure318()
and closure319 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v3 v12 
    (* run_target_args'
    let v18 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v19 
    let _run_target_args'_v18 = v20 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v21 
    let _run_target_args'_v18 = v22 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v23 
    let _run_target_args'_v18 = v24 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v26 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v26 
    #endif
#if FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v30 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v34 
    #endif
#else
    let v38 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v38 
    #endif
    let v41 : Ref<Str> = _run_target_args'_v18 
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v55 
    let _run_target_args'_v54 = v56 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = "String::from($0)"
    let v58 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v57 
    let _run_target_args'_v54 = v58 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = "String::from($0)"
    let v60 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v59 
    let _run_target_args'_v54 = v60 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v62 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v54 = v62 
    #endif
#if FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v54 = v66 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v70 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v54 = v70 
    #endif
#else
    let v74 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v54 = v74 
    #endif
    let v77 : std_string_String = _run_target_args'_v54 
    let v86 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v87 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v86 
    let v88 : string = "v87"
    let v89 : string = ""
    let v90 : string = v88 + v89 
    let v91 : string = v90 + v89 
    let v92 : string = "vec![" + v91 + "]"
    let v93 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v92 
    let v94 : string = "leptos::prelude::Fragment::new($0)"
    let v95 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v93 v94 
    v95
and method271 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure319(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure320 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure321 () () : string =
    let v0 : string = ""
    v0
and closure322 () () : leptos_dom_Fragment =
    let v0 : string = "Block Hash"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and method272 () : (unit -> leptos_dom_Fragment) =
    closure322()
and closure323 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v4 v12 
    (* run_target_args'
    let v18 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v19 
    let _run_target_args'_v18 = v20 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v21 
    let _run_target_args'_v18 = v22 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v23 
    let _run_target_args'_v18 = v24 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v26 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v26 
    #endif
#if FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v30 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v34 
    #endif
#else
    let v38 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v38 
    #endif
    let v41 : Ref<Str> = _run_target_args'_v18 
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v55 
    let _run_target_args'_v54 = v56 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = "String::from($0)"
    let v58 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v57 
    let _run_target_args'_v54 = v58 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = "String::from($0)"
    let v60 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v59 
    let _run_target_args'_v54 = v60 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v62 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v54 = v62 
    #endif
#if FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v54 = v66 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v70 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v54 = v70 
    #endif
#else
    let v74 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v54 = v74 
    #endif
    let v77 : std_string_String = _run_target_args'_v54 
    let v86 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v87 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v86 
    let v88 : string = "v87"
    let v89 : string = ""
    let v90 : string = v88 + v89 
    let v91 : string = v90 + v89 
    let v92 : string = "vec![" + v91 + "]"
    let v93 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v92 
    let v94 : string = "leptos::prelude::Fragment::new($0)"
    let v95 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v93 v94 
    v95
and method273 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure323(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure324 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure325 () () : string =
    let v0 : string = ""
    v0
and closure326 () () : leptos_dom_Fragment =
    let v0 : string = "Receipt ID"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and method274 () : (unit -> leptos_dom_Fragment) =
    closure326()
and closure327 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v0 v12 
    (* run_target_args'
    let v18 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v19 
    let _run_target_args'_v18 = v20 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v21 
    let _run_target_args'_v18 = v22 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v23 
    let _run_target_args'_v18 = v24 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v26 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v26 
    #endif
#if FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v30 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v34 
    #endif
#else
    let v38 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v38 
    #endif
    let v41 : Ref<Str> = _run_target_args'_v18 
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v55 
    let _run_target_args'_v54 = v56 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = "String::from($0)"
    let v58 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v57 
    let _run_target_args'_v54 = v58 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = "String::from($0)"
    let v60 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v59 
    let _run_target_args'_v54 = v60 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v62 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v54 = v62 
    #endif
#if FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v54 = v66 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v70 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v54 = v70 
    #endif
#else
    let v74 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v54 = v74 
    #endif
    let v77 : std_string_String = _run_target_args'_v54 
    let v86 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v87 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v86 
    let v88 : string = "v87"
    let v89 : string = ""
    let v90 : string = v88 + v89 
    let v91 : string = v90 + v89 
    let v92 : string = "vec![" + v91 + "]"
    let v93 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v92 
    let v94 : string = "leptos::prelude::Fragment::new($0)"
    let v95 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v93 v94 
    v95
and method275 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure327(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure328 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure329 () () : string =
    let v0 : string = ""
    v0
and closure330 () () : leptos_dom_Fragment =
    let v0 : string = "Logs"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and method276 () : (unit -> leptos_dom_Fragment) =
    closure330()
and method278 (v0 : Func0<std_string_String, string>) : Func0<std_string_String, string> =
    v0
and closure332 (v0 : Func0<std_string_String, string>) (v1 : std_string_String) : string =
    let v2 : Func0<std_string_String, string> = method278(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : string = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method279 () : string =
    let v0 : string = "\n"
    v0
and closure333 () () : string =
    let v0 : string = "[max-height:20vh]"
    v0
and closure331 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "$0.to_vec()"
    let v13 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v11 v12 
    let v14 : unit = ()
    let v15 : string = $"true; let _func1_from_v14 = Func1::from(move |value| {{ //"
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = $"value"
    let v18 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v17 
    let v19 : string = "fable_library_rust::String_::fromString($0)"
    let v20 : string = Fable.Core.RustInterop.emitRustExpr v18 v19 
    let func1_from_result = v20 //
    let v21 : _ = func1_from_result
    let v22 : string = $"true; $0 /*"
    let v23 : bool = Fable.Core.RustInterop.emitRustExpr v21 v22 
    let v24 : string = $"*/ }}); //"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr () v24 
    let v26 : string = $"_func1_from_v14"
    let v27 : Func0<std_string_String, string> = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v29 : (std_string_String -> string) = closure332(v27)
    let v30 : Vec<string> = Fable.Core.RustInterop.emitRustExpr struct (v13, v29) v28 
    let v31 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v32 : (string []) = Fable.Core.RustInterop.emitRustExpr v30 v31 
    let v34 : string seq = v32 |> Seq.ofArray
    let v39 : string = method279()
    let v40 : (string -> (string seq -> string)) = String.concat
    let v41 : (string seq -> string) = v40 v39
    let v42 : string = v41 v34
    let v46 : string = "\\n"
    let v47 : string = "\n"
    let v48 : string = v42.Replace (v46, v47)
    let v49 : string = "$0"
    let v50 : (unit -> string) = closure333()
    let v51 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v50 v49 
    let v52 : string = "class=move || \"[padding:1px] [font-size:12px] [line-height:12px] [text-wrap:pretty] \".to_owned() + &v51(())"
    let v53 : string = ""
    let v54 : string = " " + v52 + v53 + ""
    (* run_target_args'
    let v59 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v60 : string = "&*$0"
    let v61 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v48 v60 
    let _run_target_args'_v59 = v61 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v62 : string = "&*$0"
    let v63 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v48 v62 
    let _run_target_args'_v59 = v63 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v64 : string = "&*$0"
    let v65 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v48 v64 
    let _run_target_args'_v59 = v65 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v67 : Ref<Str> = v48 |> unbox<Ref<Str>>
    let _run_target_args'_v59 = v67 
    #endif
#if FABLE_COMPILER_PYTHON
    let v71 : Ref<Str> = v48 |> unbox<Ref<Str>>
    let _run_target_args'_v59 = v71 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v75 : Ref<Str> = v48 |> unbox<Ref<Str>>
    let _run_target_args'_v59 = v75 
    #endif
#else
    let v79 : Ref<Str> = v48 |> unbox<Ref<Str>>
    let _run_target_args'_v59 = v79 
    #endif
    let v82 : Ref<Str> = _run_target_args'_v59 
    (* run_target_args'
    let v95 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v96 : string = "String::from($0)"
    let v97 : std_string_String = Fable.Core.RustInterop.emitRustExpr v82 v96 
    let _run_target_args'_v95 = v97 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v98 : string = "String::from($0)"
    let v99 : std_string_String = Fable.Core.RustInterop.emitRustExpr v82 v98 
    let _run_target_args'_v95 = v99 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v100 : string = "String::from($0)"
    let v101 : std_string_String = Fable.Core.RustInterop.emitRustExpr v82 v100 
    let _run_target_args'_v95 = v101 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v103 : std_string_String = v82 |> unbox<std_string_String>
    let _run_target_args'_v95 = v103 
    #endif
#if FABLE_COMPILER_PYTHON
    let v107 : std_string_String = v82 |> unbox<std_string_String>
    let _run_target_args'_v95 = v107 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v111 : std_string_String = v82 |> unbox<std_string_String>
    let _run_target_args'_v95 = v111 
    #endif
#else
    let v115 : std_string_String = v82 |> unbox<std_string_String>
    let _run_target_args'_v95 = v115 
    #endif
    let v118 : std_string_String = _run_target_args'_v95 
    let v127 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v128 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v118 v127 
    let v129 : string = "v128"
    let v130 : string = v129 + v53 
    let v131 : string = v130 + v53 
    let v132 : string = "vec![" + v131 + "]"
    let v133 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v132 
    let v134 : string = "leptos::prelude::Fragment::new($0)"
    let v135 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v133 v134 
    let v136 : string = "leptos::prelude::AnyView::from($0)"
    let v137 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v135 v136 
    let v138 : string = "pre"
    let v139 : string = "<" + v138 + " " + v54 + ">move || { v137 }</" + v138 + ">"
    let v140 : string = "leptos::prelude::view! { " + v139 + " }"
    let v141 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v140 
    let v142 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v141 |> unbox
    let v143 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v144 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v142 v143 
    let v145 : string = "v144"
    let v146 : string = v145 + v53 
    let v147 : string = v146 + v53 
    let v148 : string = "vec![" + v147 + "]"
    let v149 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v148 
    let v150 : string = "leptos::prelude::Fragment::new($0)"
    let v151 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v149 v150 
    v151
and method277 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure331(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure334 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure335 () () : string =
    let v0 : string = ""
    v0
and closure336 () () : string =
    let v0 : string = "[max-height:20vh] [width:100vw] [max-width:100vw]"
    v0
and method281 (v0 : (std_string_String []), v1 : int32) : bool =
    let v2 : int32 = v0.Length
    let v3 : bool = v1 < v2
    if v3 then
        let v4 : std_string_String = v0.[int v1]
        let v5 : string = "fable_library_rust::String_::fromString($0)"
        let v6 : string = Fable.Core.RustInterop.emitRustExpr v4 v5 
        let v7 : int32 = v6.Length
        let v8 : bool = v7 > 0
        if v8 then
            true
        else
            let v9 : int32 = v1 + 1
            method281(v0, v9)
    else
        false
and method280 (v0 : (struct (string * unativeint * Heap5) []), v1 : int32) : bool =
    let v2 : int32 = v0.Length
    let v3 : bool = v1 < v2
    if v3 then
        let struct (v4 : string, v5 : unativeint, v6 : Heap5) = v0.[int v1]
        let v7 : (std_string_String []) = v6.l11
        let v8 : int32 = 0
        let v9 : bool = method281(v7, v8)
        if v9 then
            true
        else
            let v10 : int32 = v1 + 1
            method280(v0, v10)
    else
        false
and closure260 (v0 : Heap2, v1 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>, v2 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>>, v3 : leptos_prelude_ReadSignal<bool>) () : leptos_dom_Fragment =
    let v4 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v144 : leptos_prelude_AnyView_ =
        if v5 then
            let v6 : string = "class=\"px-[12px] py-[10px]\""
            let v7 : string = ""
            let v8 : string = " " + v6 + v7 + ""
            let v9 : string = "class=\"flex items-center pb-[6px]\""
            let v10 : string = " " + v9 + v7 + ""
            let v11 : string = "class=\"pr-[15px] [font-size:13px]\""
            let v12 : string = " " + v11 + v7 + ""
            let v13 : string = "Func0::new(move || $0())"
            let v14 : (unit -> leptos_dom_Fragment) = closure261()
            let v15 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v14 v13 
            let v16 : Func0<leptos_dom_Fragment> = method195(v15)
            let v17 : string = "(move || v16())()"
            let v18 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v17 
            let v19 : string = "leptos::prelude::AnyView::from($0)"
            let v20 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v18 v19 
            let v21 : string = "span"
            let v22 : string = "<" + v21 + " " + v12 + ">move || { v20 }</" + v21 + ">"
            let v23 : string = "leptos::prelude::view! { " + v22 + " }"
            let v24 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v23 
            let v25 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v24 |> unbox
            let v26 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v27 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v25 v26 
            let v28 : string = "class=\"h-px flex-1 bg-gray-300\""
            let v29 : string = " " + v28 + v7 + ""
            let v30 : string = "vec![" + v7 + "]"
            let v31 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v30 
            let v32 : string = "leptos::prelude::Fragment::new($0)"
            let v33 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v31 v32 
            let v34 : string = "leptos::prelude::AnyView::from($0)"
            let v35 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v33 v34 
            let v36 : string = "<" + v21 + " " + v29 + ">move || { v35 }</" + v21 + ">"
            let v37 : string = "leptos::prelude::view! { " + v36 + " }"
            let v38 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v37 
            let v39 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v38 |> unbox
            let v40 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v41 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v39 v40 
            let v42 : string = "v41"
            let v43 : string = v42 + v7 
            let v44 : string = v43 + v7 
            let v45 : string = "v27"
            let v46 : string = ", "
            let v47 : string = v45 + v46 
            let v48 : string = v47 + v44 
            let v49 : string = "vec![" + v48 + "]"
            let v50 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v49 
            let v51 : string = "leptos::prelude::Fragment::new($0)"
            let v52 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v50 v51 
            let v53 : string = "leptos::prelude::AnyView::from($0)"
            let v54 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v52 v53 
            let v55 : string = "<" + v21 + " " + v10 + ">move || { v54 }</" + v21 + ">"
            let v56 : string = "leptos::prelude::view! { " + v55 + " }"
            let v57 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v56 
            let v58 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v57 |> unbox
            let v59 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v60 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v58 v59 
            let v61 : (unit -> leptos_dom_Fragment) = method244()
            let v62 : (unit -> leptos_dom_Fragment) = method245(v0)
            let v63 : string = "$0"
            let v64 : (unit -> string) = closure268()
            let v65 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v64 v63 
            let v66 : string = "$0"
            let v67 : (unit -> string) = closure234()
            let v68 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v67 v66 
            let v69 : string = "$0"
            let v70 : (unit -> string) = closure235()
            let v71 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v70 v69 
            let v72 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v71(()) + \" \" + &v68(()) + \" \" + &v65(())"
            let v73 : string = " " + v72 + v7 + ""
            let v74 : string = "$0"
            let v75 : (unit -> string) = closure236()
            let v76 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v75 v74 
            let v77 : string = "class=\"[font-size:12px] text-gray-400\""
            let v78 : string = " " + v77 + v7 + ""
            let v79 : leptos_dom_Fragment = v61 ()
            let v80 : string = "leptos::prelude::AnyView::from($0)"
            let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v79 v80 
            let v82 : string = "dt"
            let v83 : string = "<" + v82 + " " + v78 + ">move || { v81 }</" + v82 + ">"
            let v84 : string = "leptos::prelude::view! { " + v83 + " }"
            let v85 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v84 
            let v86 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v85 |> unbox
            let v87 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v88 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v86 v87 
            let v89 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v76(())"
            let v90 : string = " " + v89 + v7 + ""
            let v91 : leptos_dom_Fragment = v62 ()
            let v92 : string = "leptos::prelude::AnyView::from($0)"
            let v93 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v91 v92 
            let v94 : string = "dd"
            let v95 : string = "<" + v94 + " " + v90 + ">move || { v93 }</" + v94 + ">"
            let v96 : string = "leptos::prelude::view! { " + v95 + " }"
            let v97 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v96 
            let v98 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v97 |> unbox
            let v99 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v100 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v98 v99 
            let v101 : string = "v100"
            let v102 : string = v101 + v7 
            let v103 : string = v102 + v7 
            let v104 : string = "v88"
            let v105 : string = v104 + v46 
            let v106 : string = v105 + v103 
            let v107 : string = "vec![" + v106 + "]"
            let v108 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v107 
            let v109 : string = "leptos::prelude::Fragment::new($0)"
            let v110 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v108 v109 
            let v111 : string = "leptos::prelude::AnyView::from($0)"
            let v112 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v110 v111 
            let v113 : string = "dl"
            let v114 : string = "<" + v113 + " " + v73 + ">move || { v112 }</" + v113 + ">"
            let v115 : string = "leptos::prelude::view! { " + v114 + " }"
            let v116 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v115 
            let v117 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v116 |> unbox
            let v118 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v119 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v117 v118 
            let v120 : string = "v119"
            let v121 : string = v120 + v7 
            let v122 : string = v121 + v7 
            let v123 : string = "v60"
            let v124 : string = v123 + v46 
            let v125 : string = v124 + v122 
            let v126 : string = "vec![" + v125 + "]"
            let v127 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v126 
            let v128 : string = "leptos::prelude::Fragment::new($0)"
            let v129 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v127 v128 
            let v130 : string = "leptos::prelude::AnyView::from($0)"
            let v131 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v129 v130 
            let v132 : string = "div"
            let v133 : string = "<" + v132 + " " + v8 + ">move || { v131 }</" + v132 + ">"
            let v134 : string = "leptos::prelude::view! { " + v133 + " }"
            let v135 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v134 
            let v136 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v135 |> unbox
            let v137 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v138 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v136 v137 
            v138
        else
            let v139 : string = ""
            let v140 : string = "vec![" + v139 + "]"
            let v141 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v140 
            let v142 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v143 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v141 v142 
            v143
    let v145 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v146 : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr v2 v145 
    let v147 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v148 : (struct (string * Vec<struct (string * US23 * string * bool * bool)>) []) = Fable.Core.RustInterop.emitRustExpr v146 v147 
    let v149 : uint64 = System.Convert.ToUInt64 v148.Length
    let v150 : bool = v149 = 0UL
    let v4775 : leptos_prelude_AnyView_ =
        if v150 then
            let v151 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
            let v152 : string = ""
            let v153 : string = " " + v151 + v152 + ""
            let v154 : string = "class=\"[height:17px]\""
            let v155 : string = " " + v154 + v152 + ""
            let v156 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v157 : string = "fill=\"none\""
            let v158 : string = "height=\"100%\""
            let v159 : string = "viewBox=\"0 0 24 24\""
            let v160 : string = "stroke-width=\"1.5\""
            let v161 : string = "stroke=\"currentColor\""
            let v162 : string = "class=\"text-red-700\""
            let v163 : string = " " + v156 + v152 + ""
            let v164 : string = " " + v157 + v163 + ""
            let v165 : string = " " + v158 + v164 + ""
            let v166 : string = " " + v159 + v165 + ""
            let v167 : string = " " + v160 + v166 + ""
            let v168 : string = " " + v161 + v167 + ""
            let v169 : string = " " + v162 + v168 + ""
            let v170 : string = "stroke-linecap=\"round\""
            let v171 : string = "stroke-linejoin=\"round\""
            let v172 : string = "d=\"M6 18L18 6M6 6l12 12\""
            let v173 : string = " " + v170 + v152 + ""
            let v174 : string = " " + v171 + v173 + ""
            let v175 : string = " " + v172 + v174 + ""
            let v176 : string = "vec![" + v152 + "]"
            let v177 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v176 
            let v178 : string = "leptos::prelude::Fragment::new($0)"
            let v179 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v177 v178 
            let v180 : string = "leptos::prelude::AnyView::from($0)"
            let v181 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v179 v180 
            let v182 : string = "path"
            let v183 : string = "<" + v182 + " " + v175 + ">move || { v181 }</" + v182 + ">"
            let v184 : string = "leptos::prelude::view! { " + v183 + " }"
            let v185 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v184 
            let v186 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v185 |> unbox
            let v187 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v188 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v186 v187 
            let v189 : string = "v188"
            let v190 : string = v189 + v152 
            let v191 : string = v190 + v152 
            let v192 : string = "vec![" + v191 + "]"
            let v193 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v192 
            let v194 : string = "leptos::prelude::Fragment::new($0)"
            let v195 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v193 v194 
            let v196 : string = "leptos::prelude::AnyView::from($0)"
            let v197 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v195 v196 
            let v198 : string = "svg"
            let v199 : string = "<" + v198 + " " + v169 + ">move || { v197 }</" + v198 + ">"
            let v200 : string = "leptos::prelude::view! { " + v199 + " }"
            let v201 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v200 
            let v202 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v201 |> unbox
            let v203 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v204 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v202 v203 
            let v205 : string = "v204"
            let v206 : string = v205 + v152 
            let v207 : string = v206 + v152 
            let v208 : string = "vec![" + v207 + "]"
            let v209 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v208 
            let v210 : string = "leptos::prelude::Fragment::new($0)"
            let v211 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v209 v210 
            let v212 : string = "leptos::prelude::AnyView::from($0)"
            let v213 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v211 v212 
            let v214 : string = "span"
            let v215 : string = "<" + v214 + " " + v155 + ">move || { v213 }</" + v214 + ">"
            let v216 : string = "leptos::prelude::view! { " + v215 + " }"
            let v217 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v216 
            let v218 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v217 |> unbox
            let v219 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v220 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v218 v219 
            let v221 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
            let v222 : string = " " + v221 + v152 + ""
            let v223 : string = "No account selected"
            (* run_target_args'
            let v228 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v229 : string = "&*$0"
            let v230 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v223 v229 
            let _run_target_args'_v228 = v230 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v231 : string = "&*$0"
            let v232 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v223 v231 
            let _run_target_args'_v228 = v232 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v233 : string = "&*$0"
            let v234 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v223 v233 
            let _run_target_args'_v228 = v234 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v236 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v236 
            #endif
#if FABLE_COMPILER_PYTHON
            let v240 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v240 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v244 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v244 
            #endif
#else
            let v248 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v248 
            #endif
            let v251 : Ref<Str> = _run_target_args'_v228 
            (* run_target_args'
            let v264 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v265 : string = "String::from($0)"
            let v266 : std_string_String = Fable.Core.RustInterop.emitRustExpr v251 v265 
            let _run_target_args'_v264 = v266 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v267 : string = "String::from($0)"
            let v268 : std_string_String = Fable.Core.RustInterop.emitRustExpr v251 v267 
            let _run_target_args'_v264 = v268 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v269 : string = "String::from($0)"
            let v270 : std_string_String = Fable.Core.RustInterop.emitRustExpr v251 v269 
            let _run_target_args'_v264 = v270 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v272 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v264 = v272 
            #endif
#if FABLE_COMPILER_PYTHON
            let v276 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v264 = v276 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v280 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v264 = v280 
            #endif
#else
            let v284 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v264 = v284 
            #endif
            let v287 : std_string_String = _run_target_args'_v264 
            let v296 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v297 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v287 v296 
            let v298 : string = "v297"
            let v299 : string = v298 + v152 
            let v300 : string = v299 + v152 
            let v301 : string = "vec![" + v300 + "]"
            let v302 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v301 
            let v303 : string = "leptos::prelude::Fragment::new($0)"
            let v304 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v302 v303 
            let v305 : string = "leptos::prelude::AnyView::from($0)"
            let v306 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v304 v305 
            let v307 : string = "pre"
            let v308 : string = "<" + v307 + " " + v222 + ">move || { v306 }</" + v307 + ">"
            let v309 : string = "leptos::prelude::view! { " + v308 + " }"
            let v310 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v309 
            let v311 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v310 |> unbox
            let v312 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v313 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v311 v312 
            let v314 : string = "v313"
            let v315 : string = v314 + v152 
            let v316 : string = v315 + v152 
            let v317 : string = "v220"
            let v318 : string = ", "
            let v319 : string = v317 + v318 
            let v320 : string = v319 + v316 
            let v321 : string = "vec![" + v320 + "]"
            let v322 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v321 
            let v323 : string = "leptos::prelude::Fragment::new($0)"
            let v324 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v322 v323 
            let v325 : string = "leptos::prelude::AnyView::from($0)"
            let v326 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v324 v325 
            let v327 : string = "div"
            let v328 : string = "<" + v327 + " " + v153 + ">move || { v326 }</" + v327 + ">"
            let v329 : string = "leptos::prelude::view! { " + v328 + " }"
            let v330 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v329 
            let v331 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v330 |> unbox
            let v332 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v333 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v331 v332 
            v333
        else
            let v334 : string = $"leptos::prelude::ArcMemo::get(&$0)"
            let v335 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v1 v334 
            let v336 : ((struct (string * unativeint * Heap5) []) option -> US53) = method138()
            let v337 : (std_string_String -> US53) = method139()
            let v339 : US53 = match v335 with Ok x -> v336 x | Error x -> v337 x
            let v375 : US46 =
                match v339 with
                | US53_1(v372) -> (* Error *)
                    US46_1(v372)
                | US53_0(v342) -> (* Ok *)
                    let v345 : ((struct (string * unativeint * Heap5) []) -> US47) = method140()
                    let v346 : US47 option = v342 |> Option.map v345 
                    let v366 : US47 = US47_1
                    let v367 : US47 = v346 |> Option.defaultValue v366 
                    US46_0(v367)
            match v375 with
            | US46_1(v4588) -> (* Error *)
                let v4589 : string = "fable_library_rust::String_::fromString($0)"
                let v4590 : string = Fable.Core.RustInterop.emitRustExpr v4588 v4589 
                let v4591 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
                let v4592 : string = ""
                let v4593 : string = " " + v4591 + v4592 + ""
                let v4594 : string = "class=\"[height:17px]\""
                let v4595 : string = " " + v4594 + v4592 + ""
                let v4596 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                let v4597 : string = "fill=\"none\""
                let v4598 : string = "height=\"100%\""
                let v4599 : string = "viewBox=\"0 0 24 24\""
                let v4600 : string = "stroke-width=\"1.5\""
                let v4601 : string = "stroke=\"currentColor\""
                let v4602 : string = "class=\"text-red-700\""
                let v4603 : string = " " + v4596 + v4592 + ""
                let v4604 : string = " " + v4597 + v4603 + ""
                let v4605 : string = " " + v4598 + v4604 + ""
                let v4606 : string = " " + v4599 + v4605 + ""
                let v4607 : string = " " + v4600 + v4606 + ""
                let v4608 : string = " " + v4601 + v4607 + ""
                let v4609 : string = " " + v4602 + v4608 + ""
                let v4610 : string = "stroke-linecap=\"round\""
                let v4611 : string = "stroke-linejoin=\"round\""
                let v4612 : string = "d=\"M6 18L18 6M6 6l12 12\""
                let v4613 : string = " " + v4610 + v4592 + ""
                let v4614 : string = " " + v4611 + v4613 + ""
                let v4615 : string = " " + v4612 + v4614 + ""
                let v4616 : string = "vec![" + v4592 + "]"
                let v4617 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4616 
                let v4618 : string = "leptos::prelude::Fragment::new($0)"
                let v4619 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4617 v4618 
                let v4620 : string = "leptos::prelude::AnyView::from($0)"
                let v4621 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4619 v4620 
                let v4622 : string = "path"
                let v4623 : string = "<" + v4622 + " " + v4615 + ">move || { v4621 }</" + v4622 + ">"
                let v4624 : string = "leptos::prelude::view! { " + v4623 + " }"
                let v4625 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4624 
                let v4626 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4625 |> unbox
                let v4627 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v4628 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4626 v4627 
                let v4629 : string = "v4628"
                let v4630 : string = v4629 + v4592 
                let v4631 : string = v4630 + v4592 
                let v4632 : string = "vec![" + v4631 + "]"
                let v4633 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4632 
                let v4634 : string = "leptos::prelude::Fragment::new($0)"
                let v4635 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4633 v4634 
                let v4636 : string = "leptos::prelude::AnyView::from($0)"
                let v4637 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4635 v4636 
                let v4638 : string = "svg"
                let v4639 : string = "<" + v4638 + " " + v4609 + ">move || { v4637 }</" + v4638 + ">"
                let v4640 : string = "leptos::prelude::view! { " + v4639 + " }"
                let v4641 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4640 
                let v4642 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4641 |> unbox
                let v4643 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v4644 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4642 v4643 
                let v4645 : string = "v4644"
                let v4646 : string = v4645 + v4592 
                let v4647 : string = v4646 + v4592 
                let v4648 : string = "vec![" + v4647 + "]"
                let v4649 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4648 
                let v4650 : string = "leptos::prelude::Fragment::new($0)"
                let v4651 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4649 v4650 
                let v4652 : string = "leptos::prelude::AnyView::from($0)"
                let v4653 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4651 v4652 
                let v4654 : string = "span"
                let v4655 : string = "<" + v4654 + " " + v4595 + ">move || { v4653 }</" + v4654 + ">"
                let v4656 : string = "leptos::prelude::view! { " + v4655 + " }"
                let v4657 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4656 
                let v4658 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4657 |> unbox
                let v4659 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v4660 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4658 v4659 
                let v4661 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
                let v4662 : string = " " + v4661 + v4592 + ""
                (* run_target_args'
                let v4667 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v4668 : string = "&*$0"
                let v4669 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4590 v4668 
                let _run_target_args'_v4667 = v4669 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v4670 : string = "&*$0"
                let v4671 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4590 v4670 
                let _run_target_args'_v4667 = v4671 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v4672 : string = "&*$0"
                let v4673 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4590 v4672 
                let _run_target_args'_v4667 = v4673 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v4675 : Ref<Str> = v4590 |> unbox<Ref<Str>>
                let _run_target_args'_v4667 = v4675 
                #endif
#if FABLE_COMPILER_PYTHON
                let v4679 : Ref<Str> = v4590 |> unbox<Ref<Str>>
                let _run_target_args'_v4667 = v4679 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v4683 : Ref<Str> = v4590 |> unbox<Ref<Str>>
                let _run_target_args'_v4667 = v4683 
                #endif
#else
                let v4687 : Ref<Str> = v4590 |> unbox<Ref<Str>>
                let _run_target_args'_v4667 = v4687 
                #endif
                let v4690 : Ref<Str> = _run_target_args'_v4667 
                (* run_target_args'
                let v4703 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v4704 : string = "String::from($0)"
                let v4705 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4690 v4704 
                let _run_target_args'_v4703 = v4705 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v4706 : string = "String::from($0)"
                let v4707 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4690 v4706 
                let _run_target_args'_v4703 = v4707 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v4708 : string = "String::from($0)"
                let v4709 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4690 v4708 
                let _run_target_args'_v4703 = v4709 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v4711 : std_string_String = v4690 |> unbox<std_string_String>
                let _run_target_args'_v4703 = v4711 
                #endif
#if FABLE_COMPILER_PYTHON
                let v4715 : std_string_String = v4690 |> unbox<std_string_String>
                let _run_target_args'_v4703 = v4715 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v4719 : std_string_String = v4690 |> unbox<std_string_String>
                let _run_target_args'_v4703 = v4719 
                #endif
#else
                let v4723 : std_string_String = v4690 |> unbox<std_string_String>
                let _run_target_args'_v4703 = v4723 
                #endif
                let v4726 : std_string_String = _run_target_args'_v4703 
                let v4735 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                let v4736 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4726 v4735 
                let v4737 : string = "v4736"
                let v4738 : string = v4737 + v4592 
                let v4739 : string = v4738 + v4592 
                let v4740 : string = "vec![" + v4739 + "]"
                let v4741 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4740 
                let v4742 : string = "leptos::prelude::Fragment::new($0)"
                let v4743 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4741 v4742 
                let v4744 : string = "leptos::prelude::AnyView::from($0)"
                let v4745 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4743 v4744 
                let v4746 : string = "pre"
                let v4747 : string = "<" + v4746 + " " + v4662 + ">move || { v4745 }</" + v4746 + ">"
                let v4748 : string = "leptos::prelude::view! { " + v4747 + " }"
                let v4749 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4748 
                let v4750 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v4749 |> unbox
                let v4751 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v4752 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4750 v4751 
                let v4753 : string = "v4752"
                let v4754 : string = v4753 + v4592 
                let v4755 : string = v4754 + v4592 
                let v4756 : string = "v4660"
                let v4757 : string = ", "
                let v4758 : string = v4756 + v4757 
                let v4759 : string = v4758 + v4755 
                let v4760 : string = "vec![" + v4759 + "]"
                let v4761 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4760 
                let v4762 : string = "leptos::prelude::Fragment::new($0)"
                let v4763 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4761 v4762 
                let v4764 : string = "leptos::prelude::AnyView::from($0)"
                let v4765 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4763 v4764 
                let v4766 : string = "div"
                let v4767 : string = "<" + v4766 + " " + v4593 + ">move || { v4765 }</" + v4766 + ">"
                let v4768 : string = "leptos::prelude::view! { " + v4767 + " }"
                let v4769 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4768 
                let v4770 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4769 |> unbox
                let v4771 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v4772 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4770 v4771 
                v4772
            | US46_0(v376) -> (* Ok *)
                match v376 with
                | US47_0(v377) -> (* Some *)
                    let v378 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
                    let v379 : string = "Box::pin($0)"
                    let v380 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v378 v379 
                    let v381 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                    let v382 : Heap1 = Fable.Core.RustInterop.emitRustExpr v380 v381 
                    let v383 : leptos_prelude_ArcRwSignal<Heap0> = v382.l3
                    let v384 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
                    let v385 : Heap0 = Fable.Core.RustInterop.emitRustExpr v383 v384 
                    let v386 : US1 = v385.l4
                    let v387 : bool =
                        match v386 with
                        | US1_0 -> (* Details *)
                            true
                        | _ ->
                            false
                    if v387 then
                        let v388 : string = "class=\"grid flex-1 py-[10px] px-[12px] [gap:15px] sm:[grid-template-columns:repeat(auto-fill,minmax(500px,1fr))]\""
                        let v389 : string = ""
                        let v390 : string = " " + v388 + v389 + ""
                        let v391 : string = "$0.to_vec()"
                        let v392 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr v377 v391 
                        let v393 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                        let v394 : bool = Fable.Core.RustInterop.emitRustExpr v392 v393 
                        let v395 : string = "x"
                        let struct (v396 : string, v397 : unativeint, v398 : Heap5) = Fable.Core.RustInterop.emitRustExpr () v395 
                        let v399 : std_string_String = v398.l0
                        let v400 : std_string_String = v398.l1
                        let v401 : std_string_String = v398.l2
                        let v402 : std_string_String = v398.l3
                        let v403 : std_string_String = v398.l4
                        let v404 : std_string_String = v398.l5
                        let v405 : uint32 = v398.l6
                        let v406 : (struct (std_string_String * std_string_String option) []) = v398.l7
                        let v407 : float = v398.l8
                        let v408 : bool = v398.l9
                        let v409 : float = v398.l10
                        let v410 : (std_string_String []) = v398.l11
                        let v412 : (unativeint -> int64) = int64
                        let v413 : int64 = v412 v397
                        let v416 : string = "transaction.render (1)"
                        let v417 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v418 : bool = Fable.Core.RustInterop.emitRustExpr v416 v417 
                        let v419 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
                        let v420 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v419 
                        let v421 : string = "$0.unwrap()"
                        let v422 : Heap2 = Fable.Core.RustInterop.emitRustExpr v420 v421 
                        let v423 : string = "class=\"flex flex-1 flex-col overflow-x-auto\""
                        let v424 : string = " " + v423 + v389 + ""
                        let v425 : string = "class=\"flex items-center pb-[6px]\""
                        let v426 : string = " " + v425 + v389 + ""
                        let v427 : string = "class=\"pr-[15px] [font-size:13px]\""
                        let v428 : string = " " + v427 + v389 + ""
                        let v429 : string = "Func0::new(move || $0())"
                        let v430 : (unit -> leptos_dom_Fragment) = closure269(v413)
                        let v431 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v430 v429 
                        let v432 : Func0<leptos_dom_Fragment> = method195(v431)
                        let v433 : string = "(move || v432())()"
                        let v434 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v433 
                        let v435 : string = "leptos::prelude::AnyView::from($0)"
                        let v436 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v434 v435 
                        let v437 : string = "span"
                        let v438 : string = "<" + v437 + " " + v428 + ">move || { v436 }</" + v437 + ">"
                        let v439 : string = "leptos::prelude::view! { " + v438 + " }"
                        let v440 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v439 
                        let v441 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v440 |> unbox
                        let v442 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v443 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v441 v442 
                        let v444 : string = "class=\"h-px flex-1 bg-gray-300\""
                        let v445 : string = " " + v444 + v389 + ""
                        let v446 : string = "vec![" + v389 + "]"
                        let v447 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v446 
                        let v448 : string = "leptos::prelude::Fragment::new($0)"
                        let v449 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v447 v448 
                        let v450 : string = "leptos::prelude::AnyView::from($0)"
                        let v451 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v449 v450 
                        let v452 : string = "<" + v437 + " " + v445 + ">move || { v451 }</" + v437 + ">"
                        let v453 : string = "leptos::prelude::view! { " + v452 + " }"
                        let v454 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v453 
                        let v455 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v454 |> unbox
                        let v456 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v457 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v455 v456 
                        let v458 : string = "v457"
                        let v459 : string = v458 + v389 
                        let v460 : string = v459 + v389 
                        let v461 : string = "v443"
                        let v462 : string = ", "
                        let v463 : string = v461 + v462 
                        let v464 : string = v463 + v460 
                        let v465 : string = "vec![" + v464 + "]"
                        let v466 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v465 
                        let v467 : string = "leptos::prelude::Fragment::new($0)"
                        let v468 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v466 v467 
                        let v469 : string = "leptos::prelude::AnyView::from($0)"
                        let v470 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v468 v469 
                        let v471 : string = "<" + v437 + " " + v426 + ">move || { v470 }</" + v437 + ">"
                        let v472 : string = "leptos::prelude::view! { " + v471 + " }"
                        let v473 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v472 
                        let v474 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v473 |> unbox
                        let v475 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v476 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v474 v475 
                        let v477 : string = "class=\"grid flex-1 divide-y-[1px] divide-gray-500/[.10]\""
                        let v478 : string = " " + v477 + v389 + ""
                        let v479 : (unit -> leptos_dom_Fragment) = method248()
                        let v480 : (unit -> leptos_dom_Fragment) = method249(v396)
                        let v481 : string = "$0"
                        let v482 : (unit -> string) = closure272()
                        let v483 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v482 v481 
                        let v484 : string = "$0"
                        let v485 : (unit -> string) = closure273()
                        let v486 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v485 v484 
                        let v487 : string = "$0"
                        let v488 : (unit -> string) = closure235()
                        let v489 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v488 v487 
                        let v490 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v489(()) + \" \" + &v486(()) + \" \" + &v483(())"
                        let v491 : string = " " + v490 + v389 + ""
                        let v492 : string = "$0"
                        let v493 : (unit -> string) = closure236()
                        let v494 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v493 v492 
                        let v495 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v496 : string = " " + v495 + v389 + ""
                        let v497 : leptos_dom_Fragment = v479 ()
                        let v498 : string = "leptos::prelude::AnyView::from($0)"
                        let v499 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v497 v498 
                        let v500 : string = "dt"
                        let v501 : string = "<" + v500 + " " + v496 + ">move || { v499 }</" + v500 + ">"
                        let v502 : string = "leptos::prelude::view! { " + v501 + " }"
                        let v503 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v502 
                        let v504 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v503 |> unbox
                        let v505 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v506 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v504 v505 
                        let v507 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v494(())"
                        let v508 : string = " " + v507 + v389 + ""
                        let v509 : leptos_dom_Fragment = v480 ()
                        let v510 : string = "leptos::prelude::AnyView::from($0)"
                        let v511 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v509 v510 
                        let v512 : string = "dd"
                        let v513 : string = "<" + v512 + " " + v508 + ">move || { v511 }</" + v512 + ">"
                        let v514 : string = "leptos::prelude::view! { " + v513 + " }"
                        let v515 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v514 
                        let v516 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v515 |> unbox
                        let v517 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v518 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v516 v517 
                        let v519 : string = "v518"
                        let v520 : string = v519 + v389 
                        let v521 : string = v520 + v389 
                        let v522 : string = "v506"
                        let v523 : string = v522 + v462 
                        let v524 : string = v523 + v521 
                        let v525 : string = "vec![" + v524 + "]"
                        let v526 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v525 
                        let v527 : string = "leptos::prelude::Fragment::new($0)"
                        let v528 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v526 v527 
                        let v529 : string = "leptos::prelude::AnyView::from($0)"
                        let v530 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v528 v529 
                        let v531 : string = "dl"
                        let v532 : string = "<" + v531 + " " + v491 + ">move || { v530 }</" + v531 + ">"
                        let v533 : string = "leptos::prelude::view! { " + v532 + " }"
                        let v534 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v533 
                        let v535 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v534 |> unbox
                        let v536 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v537 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v535 v536 
                        let v538 : (unit -> leptos_dom_Fragment) = method250()
                        let v539 : (unit -> leptos_dom_Fragment) = method251(v399, v400, v401, v402, v403, v404, v405, v406, v407, v408, v409, v410)
                        let v540 : string = "$0"
                        let v541 : (unit -> string) = closure276()
                        let v542 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v541 v540 
                        let v543 : string = "$0"
                        let v544 : (unit -> string) = closure277()
                        let v545 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v544 v543 
                        let v546 : string = "$0"
                        let v547 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v488 v546 
                        let v548 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v547(()) + \" \" + &v545(()) + \" \" + &v542(())"
                        let v549 : string = " " + v548 + v389 + ""
                        let v550 : string = "$0"
                        let v551 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v493 v550 
                        let v552 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v553 : string = " " + v552 + v389 + ""
                        let v554 : leptos_dom_Fragment = v538 ()
                        let v555 : string = "leptos::prelude::AnyView::from($0)"
                        let v556 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v554 v555 
                        let v557 : string = "<" + v500 + " " + v553 + ">move || { v556 }</" + v500 + ">"
                        let v558 : string = "leptos::prelude::view! { " + v557 + " }"
                        let v559 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v558 
                        let v560 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v559 |> unbox
                        let v561 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v562 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v560 v561 
                        let v563 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v551(())"
                        let v564 : string = " " + v563 + v389 + ""
                        let v565 : leptos_dom_Fragment = v539 ()
                        let v566 : string = "leptos::prelude::AnyView::from($0)"
                        let v567 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v565 v566 
                        let v568 : string = "<" + v512 + " " + v564 + ">move || { v567 }</" + v512 + ">"
                        let v569 : string = "leptos::prelude::view! { " + v568 + " }"
                        let v570 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v569 
                        let v571 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v570 |> unbox
                        let v572 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v573 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v571 v572 
                        let v574 : string = "v573"
                        let v575 : string = v574 + v389 
                        let v576 : string = v575 + v389 
                        let v577 : string = "v562"
                        let v578 : string = v577 + v462 
                        let v579 : string = v578 + v576 
                        let v580 : string = "vec![" + v579 + "]"
                        let v581 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v580 
                        let v582 : string = "leptos::prelude::Fragment::new($0)"
                        let v583 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v581 v582 
                        let v584 : string = "leptos::prelude::AnyView::from($0)"
                        let v585 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v583 v584 
                        let v586 : string = "<" + v531 + " " + v549 + ">move || { v585 }</" + v531 + ">"
                        let v587 : string = "leptos::prelude::view! { " + v586 + " }"
                        let v588 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v587 
                        let v589 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v588 |> unbox
                        let v590 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v591 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v589 v590 
                        let v592 : (unit -> leptos_dom_Fragment) = method252()
                        let v593 : (unit -> leptos_dom_Fragment) = method253(v399, v400, v401, v402, v403, v404, v405, v406, v407, v408, v409, v410)
                        let v594 : string = "$0"
                        let v595 : (unit -> string) = closure280()
                        let v596 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v595 v594 
                        let v597 : string = "$0"
                        let v598 : (unit -> string) = closure281()
                        let v599 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v598 v597 
                        let v600 : string = "$0"
                        let v601 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v488 v600 
                        let v602 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v601(()) + \" \" + &v599(()) + \" \" + &v596(())"
                        let v603 : string = " " + v602 + v389 + ""
                        let v604 : string = "$0"
                        let v605 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v493 v604 
                        let v606 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v607 : string = " " + v606 + v389 + ""
                        let v608 : leptos_dom_Fragment = v592 ()
                        let v609 : string = "leptos::prelude::AnyView::from($0)"
                        let v610 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v608 v609 
                        let v611 : string = "<" + v500 + " " + v607 + ">move || { v610 }</" + v500 + ">"
                        let v612 : string = "leptos::prelude::view! { " + v611 + " }"
                        let v613 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v612 
                        let v614 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v613 |> unbox
                        let v615 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v616 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v614 v615 
                        let v617 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v605(())"
                        let v618 : string = " " + v617 + v389 + ""
                        let v619 : leptos_dom_Fragment = v593 ()
                        let v620 : string = "leptos::prelude::AnyView::from($0)"
                        let v621 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v619 v620 
                        let v622 : string = "<" + v512 + " " + v618 + ">move || { v621 }</" + v512 + ">"
                        let v623 : string = "leptos::prelude::view! { " + v622 + " }"
                        let v624 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v623 
                        let v625 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v624 |> unbox
                        let v626 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v627 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v625 v626 
                        let v628 : string = "v627"
                        let v629 : string = v628 + v389 
                        let v630 : string = v629 + v389 
                        let v631 : string = "v616"
                        let v632 : string = v631 + v462 
                        let v633 : string = v632 + v630 
                        let v634 : string = "vec![" + v633 + "]"
                        let v635 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v634 
                        let v636 : string = "leptos::prelude::Fragment::new($0)"
                        let v637 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v635 v636 
                        let v638 : string = "leptos::prelude::AnyView::from($0)"
                        let v639 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v637 v638 
                        let v640 : string = "<" + v531 + " " + v603 + ">move || { v639 }</" + v531 + ">"
                        let v641 : string = "leptos::prelude::view! { " + v640 + " }"
                        let v642 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v641 
                        let v643 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v642 |> unbox
                        let v644 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v645 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v643 v644 
                        let v646 : (unit -> leptos_dom_Fragment) = method254()
                        let v647 : (unit -> leptos_dom_Fragment) = method255(v399, v400, v401, v402, v403, v404, v405, v406, v407, v408, v409, v410)
                        let v648 : string = "$0"
                        let v649 : (unit -> string) = closure284()
                        let v650 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v649 v648 
                        let v651 : string = "$0"
                        let v652 : (unit -> string) = closure285()
                        let v653 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v652 v651 
                        let v654 : string = "$0"
                        let v655 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v488 v654 
                        let v656 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v655(()) + \" \" + &v653(()) + \" \" + &v650(())"
                        let v657 : string = " " + v656 + v389 + ""
                        let v658 : string = "$0"
                        let v659 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v493 v658 
                        let v660 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v661 : string = " " + v660 + v389 + ""
                        let v662 : leptos_dom_Fragment = v646 ()
                        let v663 : string = "leptos::prelude::AnyView::from($0)"
                        let v664 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v662 v663 
                        let v665 : string = "<" + v500 + " " + v661 + ">move || { v664 }</" + v500 + ">"
                        let v666 : string = "leptos::prelude::view! { " + v665 + " }"
                        let v667 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v666 
                        let v668 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v667 |> unbox
                        let v669 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v670 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v668 v669 
                        let v671 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v659(())"
                        let v672 : string = " " + v671 + v389 + ""
                        let v673 : leptos_dom_Fragment = v647 ()
                        let v674 : string = "leptos::prelude::AnyView::from($0)"
                        let v675 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v673 v674 
                        let v676 : string = "<" + v512 + " " + v672 + ">move || { v675 }</" + v512 + ">"
                        let v677 : string = "leptos::prelude::view! { " + v676 + " }"
                        let v678 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v677 
                        let v679 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v678 |> unbox
                        let v680 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v681 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v679 v680 
                        let v682 : string = "v681"
                        let v683 : string = v682 + v389 
                        let v684 : string = v683 + v389 
                        let v685 : string = "v670"
                        let v686 : string = v685 + v462 
                        let v687 : string = v686 + v684 
                        let v688 : string = "vec![" + v687 + "]"
                        let v689 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v688 
                        let v690 : string = "leptos::prelude::Fragment::new($0)"
                        let v691 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v689 v690 
                        let v692 : string = "leptos::prelude::AnyView::from($0)"
                        let v693 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v691 v692 
                        let v694 : string = "<" + v531 + " " + v657 + ">move || { v693 }</" + v531 + ">"
                        let v695 : string = "leptos::prelude::view! { " + v694 + " }"
                        let v696 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v695 
                        let v697 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v696 |> unbox
                        let v698 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v699 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v697 v698 
                        let v700 : (unit -> leptos_dom_Fragment) = method256()
                        let v701 : (unit -> leptos_dom_Fragment) = method257(v399, v400, v401, v402, v403, v404, v405, v406, v407, v408, v409, v410)
                        let v702 : string = "$0"
                        let v703 : (unit -> string) = closure299()
                        let v704 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v703 v702 
                        let v705 : string = "$0"
                        let v706 : (unit -> string) = closure300()
                        let v707 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v706 v705 
                        let v708 : string = "$0"
                        let v709 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v488 v708 
                        let v710 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v709(()) + \" \" + &v707(()) + \" \" + &v704(())"
                        let v711 : string = " " + v710 + v389 + ""
                        let v712 : string = "$0"
                        let v713 : (unit -> string) = closure301()
                        let v714 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v713 v712 
                        let v715 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v716 : string = " " + v715 + v389 + ""
                        let v717 : leptos_dom_Fragment = v700 ()
                        let v718 : string = "leptos::prelude::AnyView::from($0)"
                        let v719 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v717 v718 
                        let v720 : string = "<" + v500 + " " + v716 + ">move || { v719 }</" + v500 + ">"
                        let v721 : string = "leptos::prelude::view! { " + v720 + " }"
                        let v722 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v721 
                        let v723 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v722 |> unbox
                        let v724 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v725 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v723 v724 
                        let v726 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v714(())"
                        let v727 : string = " " + v726 + v389 + ""
                        let v728 : leptos_dom_Fragment = v701 ()
                        let v729 : string = "leptos::prelude::AnyView::from($0)"
                        let v730 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v728 v729 
                        let v731 : string = "<" + v512 + " " + v727 + ">move || { v730 }</" + v512 + ">"
                        let v732 : string = "leptos::prelude::view! { " + v731 + " }"
                        let v733 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v732 
                        let v734 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v733 |> unbox
                        let v735 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v736 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v734 v735 
                        let v737 : string = "v736"
                        let v738 : string = v737 + v389 
                        let v739 : string = v738 + v389 
                        let v740 : string = "v725"
                        let v741 : string = v740 + v462 
                        let v742 : string = v741 + v739 
                        let v743 : string = "vec![" + v742 + "]"
                        let v744 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v743 
                        let v745 : string = "leptos::prelude::Fragment::new($0)"
                        let v746 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v744 v745 
                        let v747 : string = "leptos::prelude::AnyView::from($0)"
                        let v748 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v746 v747 
                        let v749 : string = "<" + v531 + " " + v711 + ">move || { v748 }</" + v531 + ">"
                        let v750 : string = "leptos::prelude::view! { " + v749 + " }"
                        let v751 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v750 
                        let v752 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v751 |> unbox
                        let v753 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v754 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v752 v753 
                        let v755 : (unit -> leptos_dom_Fragment) = method262()
                        let v756 : (unit -> leptos_dom_Fragment) = method263(v399, v400, v401, v402, v403, v404, v405, v406, v407, v408, v409, v410)
                        let v757 : string = "$0"
                        let v758 : (unit -> string) = closure304()
                        let v759 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v758 v757 
                        let v760 : string = "$0"
                        let v761 : (unit -> string) = closure305()
                        let v762 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v761 v760 
                        let v763 : string = "$0"
                        let v764 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v488 v763 
                        let v765 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v764(()) + \" \" + &v762(()) + \" \" + &v759(())"
                        let v766 : string = " " + v765 + v389 + ""
                        let v767 : string = "$0"
                        let v768 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v493 v767 
                        let v769 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v770 : string = " " + v769 + v389 + ""
                        let v771 : leptos_dom_Fragment = v755 ()
                        let v772 : string = "leptos::prelude::AnyView::from($0)"
                        let v773 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v771 v772 
                        let v774 : string = "<" + v500 + " " + v770 + ">move || { v773 }</" + v500 + ">"
                        let v775 : string = "leptos::prelude::view! { " + v774 + " }"
                        let v776 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v775 
                        let v777 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v776 |> unbox
                        let v778 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v779 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v777 v778 
                        let v780 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v768(())"
                        let v781 : string = " " + v780 + v389 + ""
                        let v782 : leptos_dom_Fragment = v756 ()
                        let v783 : string = "leptos::prelude::AnyView::from($0)"
                        let v784 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v782 v783 
                        let v785 : string = "<" + v512 + " " + v781 + ">move || { v784 }</" + v512 + ">"
                        let v786 : string = "leptos::prelude::view! { " + v785 + " }"
                        let v787 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v786 
                        let v788 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v787 |> unbox
                        let v789 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v790 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v788 v789 
                        let v791 : string = "v790"
                        let v792 : string = v791 + v389 
                        let v793 : string = v792 + v389 
                        let v794 : string = "v779"
                        let v795 : string = v794 + v462 
                        let v796 : string = v795 + v793 
                        let v797 : string = "vec![" + v796 + "]"
                        let v798 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v797 
                        let v799 : string = "leptos::prelude::Fragment::new($0)"
                        let v800 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v798 v799 
                        let v801 : string = "leptos::prelude::AnyView::from($0)"
                        let v802 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v800 v801 
                        let v803 : string = "<" + v531 + " " + v766 + ">move || { v802 }</" + v531 + ">"
                        let v804 : string = "leptos::prelude::view! { " + v803 + " }"
                        let v805 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v804 
                        let v806 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v805 |> unbox
                        let v807 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v808 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v806 v807 
                        let v809 : (unit -> leptos_dom_Fragment) = method264()
                        let v810 : (unit -> leptos_dom_Fragment) = method265(v399, v400, v401, v402, v403, v404, v405, v406, v407, v408, v409, v410)
                        let v811 : string = "$0"
                        let v812 : (unit -> string) = closure308()
                        let v813 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v812 v811 
                        let v814 : string = "$0"
                        let v815 : (unit -> string) = closure309()
                        let v816 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v815 v814 
                        let v817 : string = "$0"
                        let v818 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v488 v817 
                        let v819 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v818(()) + \" \" + &v816(()) + \" \" + &v813(())"
                        let v820 : string = " " + v819 + v389 + ""
                        let v821 : string = "$0"
                        let v822 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v493 v821 
                        let v823 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v824 : string = " " + v823 + v389 + ""
                        let v825 : leptos_dom_Fragment = v809 ()
                        let v826 : string = "leptos::prelude::AnyView::from($0)"
                        let v827 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v825 v826 
                        let v828 : string = "<" + v500 + " " + v824 + ">move || { v827 }</" + v500 + ">"
                        let v829 : string = "leptos::prelude::view! { " + v828 + " }"
                        let v830 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v829 
                        let v831 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v830 |> unbox
                        let v832 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v833 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v831 v832 
                        let v834 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v822(())"
                        let v835 : string = " " + v834 + v389 + ""
                        let v836 : leptos_dom_Fragment = v810 ()
                        let v837 : string = "leptos::prelude::AnyView::from($0)"
                        let v838 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v836 v837 
                        let v839 : string = "<" + v512 + " " + v835 + ">move || { v838 }</" + v512 + ">"
                        let v840 : string = "leptos::prelude::view! { " + v839 + " }"
                        let v841 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v840 
                        let v842 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v841 |> unbox
                        let v843 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v844 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v842 v843 
                        let v845 : string = "v844"
                        let v846 : string = v845 + v389 
                        let v847 : string = v846 + v389 
                        let v848 : string = "v833"
                        let v849 : string = v848 + v462 
                        let v850 : string = v849 + v847 
                        let v851 : string = "vec![" + v850 + "]"
                        let v852 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v851 
                        let v853 : string = "leptos::prelude::Fragment::new($0)"
                        let v854 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v852 v853 
                        let v855 : string = "leptos::prelude::AnyView::from($0)"
                        let v856 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v854 v855 
                        let v857 : string = "<" + v531 + " " + v820 + ">move || { v856 }</" + v531 + ">"
                        let v858 : string = "leptos::prelude::view! { " + v857 + " }"
                        let v859 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v858 
                        let v860 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v859 |> unbox
                        let v861 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v862 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v860 v861 
                        let v863 : (unit -> leptos_dom_Fragment) = method266()
                        let v864 : (unit -> leptos_dom_Fragment) = method267(v399, v400, v401, v402, v403, v404, v405, v406, v407, v408, v409, v410)
                        let v865 : string = "$0"
                        let v866 : (unit -> string) = closure312()
                        let v867 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v866 v865 
                        let v868 : string = "$0"
                        let v869 : (unit -> string) = closure313()
                        let v870 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v869 v868 
                        let v871 : string = "$0"
                        let v872 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v488 v871 
                        let v873 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v872(()) + \" \" + &v870(()) + \" \" + &v867(())"
                        let v874 : string = " " + v873 + v389 + ""
                        let v875 : string = "$0"
                        let v876 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v493 v875 
                        let v877 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v878 : string = " " + v877 + v389 + ""
                        let v879 : leptos_dom_Fragment = v863 ()
                        let v880 : string = "leptos::prelude::AnyView::from($0)"
                        let v881 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v879 v880 
                        let v882 : string = "<" + v500 + " " + v878 + ">move || { v881 }</" + v500 + ">"
                        let v883 : string = "leptos::prelude::view! { " + v882 + " }"
                        let v884 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v883 
                        let v885 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v884 |> unbox
                        let v886 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v887 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v885 v886 
                        let v888 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v876(())"
                        let v889 : string = " " + v888 + v389 + ""
                        let v890 : leptos_dom_Fragment = v864 ()
                        let v891 : string = "leptos::prelude::AnyView::from($0)"
                        let v892 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v890 v891 
                        let v893 : string = "<" + v512 + " " + v889 + ">move || { v892 }</" + v512 + ">"
                        let v894 : string = "leptos::prelude::view! { " + v893 + " }"
                        let v895 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v894 
                        let v896 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v895 |> unbox
                        let v897 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v898 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v896 v897 
                        let v899 : string = "v898"
                        let v900 : string = v899 + v389 
                        let v901 : string = v900 + v389 
                        let v902 : string = "v887"
                        let v903 : string = v902 + v462 
                        let v904 : string = v903 + v901 
                        let v905 : string = "vec![" + v904 + "]"
                        let v906 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v905 
                        let v907 : string = "leptos::prelude::Fragment::new($0)"
                        let v908 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v906 v907 
                        let v909 : string = "leptos::prelude::AnyView::from($0)"
                        let v910 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v908 v909 
                        let v911 : string = "<" + v531 + " " + v874 + ">move || { v910 }</" + v531 + ">"
                        let v912 : string = "leptos::prelude::view! { " + v911 + " }"
                        let v913 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v912 
                        let v914 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v913 |> unbox
                        let v915 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v916 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v914 v915 
                        let v917 : (unit -> leptos_dom_Fragment) = method268()
                        let v918 : (unit -> leptos_dom_Fragment) = method269(v399, v400, v401, v402, v403, v404, v405, v406, v407, v408, v409, v410)
                        let v919 : string = "$0"
                        let v920 : (unit -> string) = closure316()
                        let v921 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v920 v919 
                        let v922 : string = "$0"
                        let v923 : (unit -> string) = closure317()
                        let v924 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v923 v922 
                        let v925 : string = "$0"
                        let v926 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v488 v925 
                        let v927 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v926(()) + \" \" + &v924(()) + \" \" + &v921(())"
                        let v928 : string = " " + v927 + v389 + ""
                        let v929 : string = "$0"
                        let v930 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v493 v929 
                        let v931 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v932 : string = " " + v931 + v389 + ""
                        let v933 : leptos_dom_Fragment = v917 ()
                        let v934 : string = "leptos::prelude::AnyView::from($0)"
                        let v935 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v933 v934 
                        let v936 : string = "<" + v500 + " " + v932 + ">move || { v935 }</" + v500 + ">"
                        let v937 : string = "leptos::prelude::view! { " + v936 + " }"
                        let v938 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v937 
                        let v939 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v938 |> unbox
                        let v940 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v941 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v939 v940 
                        let v942 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v930(())"
                        let v943 : string = " " + v942 + v389 + ""
                        let v944 : leptos_dom_Fragment = v918 ()
                        let v945 : string = "leptos::prelude::AnyView::from($0)"
                        let v946 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v944 v945 
                        let v947 : string = "<" + v512 + " " + v943 + ">move || { v946 }</" + v512 + ">"
                        let v948 : string = "leptos::prelude::view! { " + v947 + " }"
                        let v949 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v948 
                        let v950 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v949 |> unbox
                        let v951 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v952 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v950 v951 
                        let v953 : string = "v952"
                        let v954 : string = v953 + v389 
                        let v955 : string = v954 + v389 
                        let v956 : string = "v941"
                        let v957 : string = v956 + v462 
                        let v958 : string = v957 + v955 
                        let v959 : string = "vec![" + v958 + "]"
                        let v960 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v959 
                        let v961 : string = "leptos::prelude::Fragment::new($0)"
                        let v962 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v960 v961 
                        let v963 : string = "leptos::prelude::AnyView::from($0)"
                        let v964 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v962 v963 
                        let v965 : string = "<" + v531 + " " + v928 + ">move || { v964 }</" + v531 + ">"
                        let v966 : string = "leptos::prelude::view! { " + v965 + " }"
                        let v967 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v966 
                        let v968 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v967 |> unbox
                        let v969 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v970 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v968 v969 
                        let v971 : (unit -> leptos_dom_Fragment) = method270()
                        let v972 : (unit -> leptos_dom_Fragment) = method271(v399, v400, v401, v402, v403, v404, v405, v406, v407, v408, v409, v410)
                        let v973 : string = "$0"
                        let v974 : (unit -> string) = closure320()
                        let v975 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v974 v973 
                        let v976 : string = "$0"
                        let v977 : (unit -> string) = closure321()
                        let v978 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v977 v976 
                        let v979 : string = "$0"
                        let v980 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v488 v979 
                        let v981 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v980(()) + \" \" + &v978(()) + \" \" + &v975(())"
                        let v982 : string = " " + v981 + v389 + ""
                        let v983 : string = "$0"
                        let v984 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v493 v983 
                        let v985 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v986 : string = " " + v985 + v389 + ""
                        let v987 : leptos_dom_Fragment = v971 ()
                        let v988 : string = "leptos::prelude::AnyView::from($0)"
                        let v989 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v987 v988 
                        let v990 : string = "<" + v500 + " " + v986 + ">move || { v989 }</" + v500 + ">"
                        let v991 : string = "leptos::prelude::view! { " + v990 + " }"
                        let v992 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v991 
                        let v993 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v992 |> unbox
                        let v994 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v995 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v993 v994 
                        let v996 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v984(())"
                        let v997 : string = " " + v996 + v389 + ""
                        let v998 : leptos_dom_Fragment = v972 ()
                        let v999 : string = "leptos::prelude::AnyView::from($0)"
                        let v1000 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v998 v999 
                        let v1001 : string = "<" + v512 + " " + v997 + ">move || { v1000 }</" + v512 + ">"
                        let v1002 : string = "leptos::prelude::view! { " + v1001 + " }"
                        let v1003 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1002 
                        let v1004 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v1003 |> unbox
                        let v1005 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1006 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1004 v1005 
                        let v1007 : string = "v1006"
                        let v1008 : string = v1007 + v389 
                        let v1009 : string = v1008 + v389 
                        let v1010 : string = "v995"
                        let v1011 : string = v1010 + v462 
                        let v1012 : string = v1011 + v1009 
                        let v1013 : string = "vec![" + v1012 + "]"
                        let v1014 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1013 
                        let v1015 : string = "leptos::prelude::Fragment::new($0)"
                        let v1016 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1014 v1015 
                        let v1017 : string = "leptos::prelude::AnyView::from($0)"
                        let v1018 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1016 v1017 
                        let v1019 : string = "<" + v531 + " " + v982 + ">move || { v1018 }</" + v531 + ">"
                        let v1020 : string = "leptos::prelude::view! { " + v1019 + " }"
                        let v1021 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1020 
                        let v1022 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v1021 |> unbox
                        let v1023 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1024 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1022 v1023 
                        let v1025 : (unit -> leptos_dom_Fragment) = method272()
                        let v1026 : (unit -> leptos_dom_Fragment) = method273(v399, v400, v401, v402, v403, v404, v405, v406, v407, v408, v409, v410)
                        let v1027 : string = "$0"
                        let v1028 : (unit -> string) = closure324()
                        let v1029 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1028 v1027 
                        let v1030 : string = "$0"
                        let v1031 : (unit -> string) = closure325()
                        let v1032 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1031 v1030 
                        let v1033 : string = "$0"
                        let v1034 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v488 v1033 
                        let v1035 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v1034(()) + \" \" + &v1032(()) + \" \" + &v1029(())"
                        let v1036 : string = " " + v1035 + v389 + ""
                        let v1037 : string = "$0"
                        let v1038 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v493 v1037 
                        let v1039 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v1040 : string = " " + v1039 + v389 + ""
                        let v1041 : leptos_dom_Fragment = v1025 ()
                        let v1042 : string = "leptos::prelude::AnyView::from($0)"
                        let v1043 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1041 v1042 
                        let v1044 : string = "<" + v500 + " " + v1040 + ">move || { v1043 }</" + v500 + ">"
                        let v1045 : string = "leptos::prelude::view! { " + v1044 + " }"
                        let v1046 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1045 
                        let v1047 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v1046 |> unbox
                        let v1048 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1049 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1047 v1048 
                        let v1050 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v1038(())"
                        let v1051 : string = " " + v1050 + v389 + ""
                        let v1052 : leptos_dom_Fragment = v1026 ()
                        let v1053 : string = "leptos::prelude::AnyView::from($0)"
                        let v1054 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1052 v1053 
                        let v1055 : string = "<" + v512 + " " + v1051 + ">move || { v1054 }</" + v512 + ">"
                        let v1056 : string = "leptos::prelude::view! { " + v1055 + " }"
                        let v1057 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1056 
                        let v1058 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v1057 |> unbox
                        let v1059 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1060 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1058 v1059 
                        let v1061 : string = "v1060"
                        let v1062 : string = v1061 + v389 
                        let v1063 : string = v1062 + v389 
                        let v1064 : string = "v1049"
                        let v1065 : string = v1064 + v462 
                        let v1066 : string = v1065 + v1063 
                        let v1067 : string = "vec![" + v1066 + "]"
                        let v1068 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1067 
                        let v1069 : string = "leptos::prelude::Fragment::new($0)"
                        let v1070 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1068 v1069 
                        let v1071 : string = "leptos::prelude::AnyView::from($0)"
                        let v1072 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1070 v1071 
                        let v1073 : string = "<" + v531 + " " + v1036 + ">move || { v1072 }</" + v531 + ">"
                        let v1074 : string = "leptos::prelude::view! { " + v1073 + " }"
                        let v1075 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1074 
                        let v1076 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v1075 |> unbox
                        let v1077 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1078 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1076 v1077 
                        let v1079 : (unit -> leptos_dom_Fragment) = method274()
                        let v1080 : (unit -> leptos_dom_Fragment) = method275(v399, v400, v401, v402, v403, v404, v405, v406, v407, v408, v409, v410)
                        let v1081 : string = "$0"
                        let v1082 : (unit -> string) = closure328()
                        let v1083 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1082 v1081 
                        let v1084 : string = "$0"
                        let v1085 : (unit -> string) = closure329()
                        let v1086 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1085 v1084 
                        let v1087 : string = "$0"
                        let v1088 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v488 v1087 
                        let v1089 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v1088(()) + \" \" + &v1086(()) + \" \" + &v1083(())"
                        let v1090 : string = " " + v1089 + v389 + ""
                        let v1091 : string = "$0"
                        let v1092 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v493 v1091 
                        let v1093 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v1094 : string = " " + v1093 + v389 + ""
                        let v1095 : leptos_dom_Fragment = v1079 ()
                        let v1096 : string = "leptos::prelude::AnyView::from($0)"
                        let v1097 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1095 v1096 
                        let v1098 : string = "<" + v500 + " " + v1094 + ">move || { v1097 }</" + v500 + ">"
                        let v1099 : string = "leptos::prelude::view! { " + v1098 + " }"
                        let v1100 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1099 
                        let v1101 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v1100 |> unbox
                        let v1102 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1103 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1101 v1102 
                        let v1104 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v1092(())"
                        let v1105 : string = " " + v1104 + v389 + ""
                        let v1106 : leptos_dom_Fragment = v1080 ()
                        let v1107 : string = "leptos::prelude::AnyView::from($0)"
                        let v1108 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1106 v1107 
                        let v1109 : string = "<" + v512 + " " + v1105 + ">move || { v1108 }</" + v512 + ">"
                        let v1110 : string = "leptos::prelude::view! { " + v1109 + " }"
                        let v1111 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1110 
                        let v1112 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v1111 |> unbox
                        let v1113 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1114 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1112 v1113 
                        let v1115 : string = "v1114"
                        let v1116 : string = v1115 + v389 
                        let v1117 : string = v1116 + v389 
                        let v1118 : string = "v1103"
                        let v1119 : string = v1118 + v462 
                        let v1120 : string = v1119 + v1117 
                        let v1121 : string = "vec![" + v1120 + "]"
                        let v1122 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1121 
                        let v1123 : string = "leptos::prelude::Fragment::new($0)"
                        let v1124 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1122 v1123 
                        let v1125 : string = "leptos::prelude::AnyView::from($0)"
                        let v1126 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1124 v1125 
                        let v1127 : string = "<" + v531 + " " + v1090 + ">move || { v1126 }</" + v531 + ">"
                        let v1128 : string = "leptos::prelude::view! { " + v1127 + " }"
                        let v1129 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1128 
                        let v1130 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v1129 |> unbox
                        let v1131 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1132 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1130 v1131 
                        let v1133 : uint64 = System.Convert.ToUInt64 v410.Length
                        let v1134 : bool = v1133 = 0UL
                        let v1193 : leptos_prelude_AnyView_ =
                            if v1134 then
                                let v1135 : string = "vec![" + v389 + "]"
                                let v1136 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1135 
                                let v1137 : string = "leptos::prelude::IntoAny::into_any($0)"
                                let v1138 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1136 v1137 
                                v1138
                            else
                                let v1139 : (unit -> leptos_dom_Fragment) = method276()
                                let v1140 : (unit -> leptos_dom_Fragment) = method277(v399, v400, v401, v402, v403, v404, v405, v406, v407, v408, v409, v410)
                                let v1141 : string = "$0"
                                let v1142 : (unit -> string) = closure334()
                                let v1143 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1142 v1141 
                                let v1144 : string = "$0"
                                let v1145 : (unit -> string) = closure335()
                                let v1146 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1145 v1144 
                                let v1147 : string = "$0"
                                let v1148 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v488 v1147 
                                let v1149 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v1148(()) + \" \" + &v1146(()) + \" \" + &v1143(())"
                                let v1150 : string = " " + v1149 + v389 + ""
                                let v1151 : string = "$0"
                                let v1152 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v493 v1151 
                                let v1153 : string = "class=\"[font-size:12px] text-gray-400\""
                                let v1154 : string = " " + v1153 + v389 + ""
                                let v1155 : leptos_dom_Fragment = v1139 ()
                                let v1156 : string = "leptos::prelude::AnyView::from($0)"
                                let v1157 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1155 v1156 
                                let v1158 : string = "<" + v500 + " " + v1154 + ">move || { v1157 }</" + v500 + ">"
                                let v1159 : string = "leptos::prelude::view! { " + v1158 + " }"
                                let v1160 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1159 
                                let v1161 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v1160 |> unbox
                                let v1162 : string = "leptos::prelude::IntoAny::into_any($0)"
                                let v1163 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1161 v1162 
                                let v1164 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v1152(())"
                                let v1165 : string = " " + v1164 + v389 + ""
                                let v1166 : leptos_dom_Fragment = v1140 ()
                                let v1167 : string = "leptos::prelude::AnyView::from($0)"
                                let v1168 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1166 v1167 
                                let v1169 : string = "<" + v512 + " " + v1165 + ">move || { v1168 }</" + v512 + ">"
                                let v1170 : string = "leptos::prelude::view! { " + v1169 + " }"
                                let v1171 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1170 
                                let v1172 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v1171 |> unbox
                                let v1173 : string = "leptos::prelude::IntoAny::into_any($0)"
                                let v1174 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1172 v1173 
                                let v1175 : string = "v1174"
                                let v1176 : string = v1175 + v389 
                                let v1177 : string = v1176 + v389 
                                let v1178 : string = "v1163"
                                let v1179 : string = v1178 + v462 
                                let v1180 : string = v1179 + v1177 
                                let v1181 : string = "vec![" + v1180 + "]"
                                let v1182 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1181 
                                let v1183 : string = "leptos::prelude::Fragment::new($0)"
                                let v1184 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1182 v1183 
                                let v1185 : string = "leptos::prelude::AnyView::from($0)"
                                let v1186 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1184 v1185 
                                let v1187 : string = "<" + v531 + " " + v1150 + ">move || { v1186 }</" + v531 + ">"
                                let v1188 : string = "leptos::prelude::view! { " + v1187 + " }"
                                let v1189 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1188 
                                let v1190 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v1189 |> unbox
                                let v1191 : string = "leptos::prelude::IntoAny::into_any($0)"
                                let v1192 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1190 v1191 
                                v1192
                        let v1194 : string = "v1193"
                        let v1195 : string = v1194 + v389 
                        let v1196 : string = v1195 + v389 
                        let v1197 : string = "v1132"
                        let v1198 : string = v1197 + v462 
                        let v1199 : string = v1198 + v1196 
                        let v1200 : string = "v1078"
                        let v1201 : string = v1200 + v462 
                        let v1202 : string = v1201 + v1199 
                        let v1203 : string = "v1024"
                        let v1204 : string = v1203 + v462 
                        let v1205 : string = v1204 + v1202 
                        let v1206 : string = "v970"
                        let v1207 : string = v1206 + v462 
                        let v1208 : string = v1207 + v1205 
                        let v1209 : string = "v916"
                        let v1210 : string = v1209 + v462 
                        let v1211 : string = v1210 + v1208 
                        let v1212 : string = "v862"
                        let v1213 : string = v1212 + v462 
                        let v1214 : string = v1213 + v1211 
                        let v1215 : string = "v808"
                        let v1216 : string = v1215 + v462 
                        let v1217 : string = v1216 + v1214 
                        let v1218 : string = "v754"
                        let v1219 : string = v1218 + v462 
                        let v1220 : string = v1219 + v1217 
                        let v1221 : string = "v699"
                        let v1222 : string = v1221 + v462 
                        let v1223 : string = v1222 + v1220 
                        let v1224 : string = "v645"
                        let v1225 : string = v1224 + v462 
                        let v1226 : string = v1225 + v1223 
                        let v1227 : string = "v591"
                        let v1228 : string = v1227 + v462 
                        let v1229 : string = v1228 + v1226 
                        let v1230 : string = "v537"
                        let v1231 : string = v1230 + v462 
                        let v1232 : string = v1231 + v1229 
                        let v1233 : string = "vec![" + v1232 + "]"
                        let v1234 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1233 
                        let v1235 : string = "leptos::prelude::Fragment::new($0)"
                        let v1236 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1234 v1235 
                        let v1237 : string = "leptos::prelude::AnyView::from($0)"
                        let v1238 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1236 v1237 
                        let v1239 : string = "div"
                        let v1240 : string = "<" + v1239 + " " + v478 + ">move || { v1238 }</" + v1239 + ">"
                        let v1241 : string = "leptos::prelude::view! { " + v1240 + " }"
                        let v1242 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1241 
                        let v1243 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1242 |> unbox
                        let v1244 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1245 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1243 v1244 
                        let v1246 : string = "v1245"
                        let v1247 : string = v1246 + v389 
                        let v1248 : string = v1247 + v389 
                        let v1249 : string = "v476"
                        let v1250 : string = v1249 + v462 
                        let v1251 : string = v1250 + v1248 
                        let v1252 : string = "vec![" + v1251 + "]"
                        let v1253 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1252 
                        let v1254 : string = "leptos::prelude::Fragment::new($0)"
                        let v1255 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1253 v1254 
                        let v1256 : string = "leptos::prelude::AnyView::from($0)"
                        let v1257 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1255 v1256 
                        let v1258 : string = "<" + v1239 + " " + v424 + ">move || { v1257 }</" + v1239 + ">"
                        let v1259 : string = "leptos::prelude::view! { " + v1258 + " }"
                        let v1260 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1259 
                        let v1261 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1260 |> unbox
                        let v1262 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1263 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1261 v1262 
                        let v1264 : string = "true; $0 }).collect::<Vec<_>>()"
                        let v1265 : bool = Fable.Core.RustInterop.emitRustExpr v1263 v1264 
                        let v1266 : string = "_vec_map"
                        let v1267 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1266 
                        let v1268 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1269 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1267 v1268 
                        let v1270 : string = "v1269"
                        let v1271 : string = v1270 + v389 
                        let v1272 : string = v1271 + v389 
                        let v1273 : string = "vec![" + v1272 + "]"
                        let v1274 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1273 
                        let v1275 : string = "leptos::prelude::Fragment::new($0)"
                        let v1276 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1274 v1275 
                        let v1277 : string = "leptos::prelude::AnyView::from($0)"
                        let v1278 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1276 v1277 
                        let v1279 : string = "<" + v1239 + " " + v390 + ">move || { v1278 }</" + v1239 + ">"
                        let v1280 : string = "leptos::prelude::view! { " + v1279 + " }"
                        let v1281 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1280 
                        let v1282 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1281 |> unbox
                        let v1283 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1284 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1282 v1283 
                        v1284
                    else
                        let v1285 : string = "$0.to_vec()"
                        let v1286 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr v377 v1285 
                        let v1287 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                        let v1288 : bool = Fable.Core.RustInterop.emitRustExpr v1286 v1287 
                        let v1289 : string = "x"
                        let struct (v1290 : string, v1291 : unativeint, v1292 : Heap5) = Fable.Core.RustInterop.emitRustExpr () v1289 
                        let v1293 : string = "transaction.tr_render (1)"
                        let v1294 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v1295 : bool = Fable.Core.RustInterop.emitRustExpr v1293 v1294 
                        let v1296 : string = "class=\"odd:bg-gray-50 dark:odd:bg-gray-800/50\""
                        let v1297 : string = ""
                        let v1298 : string = " " + v1296 + v1297 + ""
                        let v1299 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1300 : string = " " + v1299 + v1297 + ""
                        (* run_target_args'
                        let v1305 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1306 : string = "&*$0"
                        let v1307 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1290 v1306 
                        let _run_target_args'_v1305 = v1307 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1308 : string = "&*$0"
                        let v1309 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1290 v1308 
                        let _run_target_args'_v1305 = v1309 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1310 : string = "&*$0"
                        let v1311 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1290 v1310 
                        let _run_target_args'_v1305 = v1311 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1313 : Ref<Str> = v1290 |> unbox<Ref<Str>>
                        let _run_target_args'_v1305 = v1313 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1317 : Ref<Str> = v1290 |> unbox<Ref<Str>>
                        let _run_target_args'_v1305 = v1317 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1321 : Ref<Str> = v1290 |> unbox<Ref<Str>>
                        let _run_target_args'_v1305 = v1321 
                        #endif
#else
                        let v1325 : Ref<Str> = v1290 |> unbox<Ref<Str>>
                        let _run_target_args'_v1305 = v1325 
                        #endif
                        let v1328 : Ref<Str> = _run_target_args'_v1305 
                        (* run_target_args'
                        let v1341 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1342 : string = "String::from($0)"
                        let v1343 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1328 v1342 
                        let _run_target_args'_v1341 = v1343 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1344 : string = "String::from($0)"
                        let v1345 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1328 v1344 
                        let _run_target_args'_v1341 = v1345 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1346 : string = "String::from($0)"
                        let v1347 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1328 v1346 
                        let _run_target_args'_v1341 = v1347 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1349 : std_string_String = v1328 |> unbox<std_string_String>
                        let _run_target_args'_v1341 = v1349 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1353 : std_string_String = v1328 |> unbox<std_string_String>
                        let _run_target_args'_v1341 = v1353 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1357 : std_string_String = v1328 |> unbox<std_string_String>
                        let _run_target_args'_v1341 = v1357 
                        #endif
#else
                        let v1361 : std_string_String = v1328 |> unbox<std_string_String>
                        let _run_target_args'_v1341 = v1361 
                        #endif
                        let v1364 : std_string_String = _run_target_args'_v1341 
                        let v1373 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1374 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1364 v1373 
                        let v1375 : string = "v1374"
                        let v1376 : string = v1375 + v1297 
                        let v1377 : string = v1376 + v1297 
                        let v1378 : string = "vec![" + v1377 + "]"
                        let v1379 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1378 
                        let v1380 : string = "leptos::prelude::Fragment::new($0)"
                        let v1381 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1379 v1380 
                        let v1382 : string = "leptos::prelude::AnyView::from($0)"
                        let v1383 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1381 v1382 
                        let v1384 : string = "td"
                        let v1385 : string = "<" + v1384 + " " + v1300 + ">move || { v1383 }</" + v1384 + ">"
                        let v1386 : string = "leptos::prelude::view! { " + v1385 + " }"
                        let v1387 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1386 
                        let v1388 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1387 |> unbox
                        let v1389 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1390 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1388 v1389 
                        let v1391 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1392 : string = " " + v1391 + v1297 + ""
                        let v1393 : std_string_String = v1292.l5
                        let v1394 : string = "fable_library_rust::String_::fromString($0)"
                        let v1395 : string = Fable.Core.RustInterop.emitRustExpr v1393 v1394 
                        let v1397 : (string -> int64) = int64
                        let v1398 : int64 = v1397 v1395
                        let v1401 : int64 = method204(v1398)
                        let v1402 : int64 = v1401 / 1000L
                        let v1403 : string = "chrono::DateTime::from_timestamp_micros($0)"
                        let v1404 : chrono_DateTime<chrono_Utc> option = Fable.Core.RustInterop.emitRustExpr v1402 v1403 
                        let v1407 : (chrono_DateTime<chrono_Utc> -> US68) = method205()
                        let v1408 : US68 option = v1404 |> Option.map v1407 
                        let v1428 : US68 = US68_1
                        let v1429 : US68 = v1408 |> Option.defaultValue v1428 
                        let v1448 : US31 =
                            match v1429 with
                            | US68_1 -> (* None *)
                                US31_1
                            | US68_0(v1433) -> (* Some *)
                                let v1434 : string = "$0.naive_utc()"
                                let v1435 : chrono_NaiveDateTime = Fable.Core.RustInterop.emitRustExpr v1433 v1434 
                                let v1436 : string = "chrono::offset::TimeZone::from_utc_datetime(&chrono::Local, &$0)"
                                let v1437 : chrono_DateTime<chrono_Local> = Fable.Core.RustInterop.emitRustExpr v1435 v1436 
                                let v1438 : string = "%Y-%m-%d %H:%M:%S"
                                let v1439 : string = "r#\"" + v1438 + "\"#"
                                let v1440 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v1439 
                                let v1441 : string = "$0.format($1).to_string()"
                                let v1442 : std_string_String = Fable.Core.RustInterop.emitRustExpr struct (v1437, v1440) v1441 
                                let v1443 : string = "fable_library_rust::String_::fromString($0)"
                                let v1444 : string = Fable.Core.RustInterop.emitRustExpr v1442 v1443 
                                US31_0(v1444)
                        let v1454 : US69 =
                            match v1448 with
                            | US31_1 -> (* None *)
                                let v1451 : string = "resultm.from_option / Option does not have a value."
                                US69_1(v1451)
                            | US31_0(v1449) -> (* Some *)
                                US69_0(v1449)
                        let v1459 : string =
                            match v1454 with
                            | US69_1(v1456) -> (* Error *)
                                let v1457 : string = "sm'.to_string result / Error: " + v1456 + ""
                                v1457
                            | US69_0(v1455) -> (* Ok *)
                                v1455
                        (* run_target_args'
                        let v1464 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1465 : string = "&*$0"
                        let v1466 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1459 v1465 
                        let _run_target_args'_v1464 = v1466 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1467 : string = "&*$0"
                        let v1468 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1459 v1467 
                        let _run_target_args'_v1464 = v1468 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1469 : string = "&*$0"
                        let v1470 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1459 v1469 
                        let _run_target_args'_v1464 = v1470 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1472 : Ref<Str> = v1459 |> unbox<Ref<Str>>
                        let _run_target_args'_v1464 = v1472 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1476 : Ref<Str> = v1459 |> unbox<Ref<Str>>
                        let _run_target_args'_v1464 = v1476 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1480 : Ref<Str> = v1459 |> unbox<Ref<Str>>
                        let _run_target_args'_v1464 = v1480 
                        #endif
#else
                        let v1484 : Ref<Str> = v1459 |> unbox<Ref<Str>>
                        let _run_target_args'_v1464 = v1484 
                        #endif
                        let v1487 : Ref<Str> = _run_target_args'_v1464 
                        (* run_target_args'
                        let v1500 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1501 : string = "String::from($0)"
                        let v1502 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1487 v1501 
                        let _run_target_args'_v1500 = v1502 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1503 : string = "String::from($0)"
                        let v1504 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1487 v1503 
                        let _run_target_args'_v1500 = v1504 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1505 : string = "String::from($0)"
                        let v1506 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1487 v1505 
                        let _run_target_args'_v1500 = v1506 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1508 : std_string_String = v1487 |> unbox<std_string_String>
                        let _run_target_args'_v1500 = v1508 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1512 : std_string_String = v1487 |> unbox<std_string_String>
                        let _run_target_args'_v1500 = v1512 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1516 : std_string_String = v1487 |> unbox<std_string_String>
                        let _run_target_args'_v1500 = v1516 
                        #endif
#else
                        let v1520 : std_string_String = v1487 |> unbox<std_string_String>
                        let _run_target_args'_v1500 = v1520 
                        #endif
                        let v1523 : std_string_String = _run_target_args'_v1500 
                        let v1532 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1533 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1523 v1532 
                        let v1534 : string = "v1533"
                        let v1535 : string = v1534 + v1297 
                        let v1536 : string = v1535 + v1297 
                        let v1537 : string = "vec![" + v1536 + "]"
                        let v1538 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1537 
                        let v1539 : string = "leptos::prelude::Fragment::new($0)"
                        let v1540 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1538 v1539 
                        let v1541 : string = "leptos::prelude::AnyView::from($0)"
                        let v1542 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1540 v1541 
                        let v1543 : string = "<" + v1384 + " " + v1392 + ">move || { v1542 }</" + v1384 + ">"
                        let v1544 : string = "leptos::prelude::view! { " + v1543 + " }"
                        let v1545 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1544 
                        let v1546 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1545 |> unbox
                        let v1547 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1548 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1546 v1547 
                        let v1549 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1550 : string = " " + v1549 + v1297 + ""
                        let v1551 : std_string_String = v1292.l1
                        let v1552 : string = "fable_library_rust::String_::fromString($0)"
                        let v1553 : string = Fable.Core.RustInterop.emitRustExpr v1551 v1552 
                        (* run_target_args'
                        let v1558 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1559 : string = "&*$0"
                        let v1560 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1553 v1559 
                        let _run_target_args'_v1558 = v1560 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1561 : string = "&*$0"
                        let v1562 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1553 v1561 
                        let _run_target_args'_v1558 = v1562 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1563 : string = "&*$0"
                        let v1564 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1553 v1563 
                        let _run_target_args'_v1558 = v1564 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1566 : Ref<Str> = v1553 |> unbox<Ref<Str>>
                        let _run_target_args'_v1558 = v1566 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1570 : Ref<Str> = v1553 |> unbox<Ref<Str>>
                        let _run_target_args'_v1558 = v1570 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1574 : Ref<Str> = v1553 |> unbox<Ref<Str>>
                        let _run_target_args'_v1558 = v1574 
                        #endif
#else
                        let v1578 : Ref<Str> = v1553 |> unbox<Ref<Str>>
                        let _run_target_args'_v1558 = v1578 
                        #endif
                        let v1581 : Ref<Str> = _run_target_args'_v1558 
                        (* run_target_args'
                        let v1594 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1595 : string = "String::from($0)"
                        let v1596 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1581 v1595 
                        let _run_target_args'_v1594 = v1596 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1597 : string = "String::from($0)"
                        let v1598 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1581 v1597 
                        let _run_target_args'_v1594 = v1598 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1599 : string = "String::from($0)"
                        let v1600 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1581 v1599 
                        let _run_target_args'_v1594 = v1600 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1602 : std_string_String = v1581 |> unbox<std_string_String>
                        let _run_target_args'_v1594 = v1602 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1606 : std_string_String = v1581 |> unbox<std_string_String>
                        let _run_target_args'_v1594 = v1606 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1610 : std_string_String = v1581 |> unbox<std_string_String>
                        let _run_target_args'_v1594 = v1610 
                        #endif
#else
                        let v1614 : std_string_String = v1581 |> unbox<std_string_String>
                        let _run_target_args'_v1594 = v1614 
                        #endif
                        let v1617 : std_string_String = _run_target_args'_v1594 
                        let v1626 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1627 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1617 v1626 
                        let v1628 : string = "v1627"
                        let v1629 : string = v1628 + v1297 
                        let v1630 : string = v1629 + v1297 
                        let v1631 : string = "vec![" + v1630 + "]"
                        let v1632 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1631 
                        let v1633 : string = "leptos::prelude::Fragment::new($0)"
                        let v1634 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1632 v1633 
                        let v1635 : string = "leptos::prelude::AnyView::from($0)"
                        let v1636 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1634 v1635 
                        let v1637 : string = "<" + v1384 + " " + v1550 + ">move || { v1636 }</" + v1384 + ">"
                        let v1638 : string = "leptos::prelude::view! { " + v1637 + " }"
                        let v1639 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1638 
                        let v1640 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1639 |> unbox
                        let v1641 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1642 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1640 v1641 
                        let v1643 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1644 : string = " " + v1643 + v1297 + ""
                        let v1645 : std_string_String = v1292.l2
                        let v1646 : string = "fable_library_rust::String_::fromString($0)"
                        let v1647 : string = Fable.Core.RustInterop.emitRustExpr v1645 v1646 
                        (* run_target_args'
                        let v1652 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1653 : string = "&*$0"
                        let v1654 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1647 v1653 
                        let _run_target_args'_v1652 = v1654 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1655 : string = "&*$0"
                        let v1656 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1647 v1655 
                        let _run_target_args'_v1652 = v1656 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1657 : string = "&*$0"
                        let v1658 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1647 v1657 
                        let _run_target_args'_v1652 = v1658 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1660 : Ref<Str> = v1647 |> unbox<Ref<Str>>
                        let _run_target_args'_v1652 = v1660 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1664 : Ref<Str> = v1647 |> unbox<Ref<Str>>
                        let _run_target_args'_v1652 = v1664 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1668 : Ref<Str> = v1647 |> unbox<Ref<Str>>
                        let _run_target_args'_v1652 = v1668 
                        #endif
#else
                        let v1672 : Ref<Str> = v1647 |> unbox<Ref<Str>>
                        let _run_target_args'_v1652 = v1672 
                        #endif
                        let v1675 : Ref<Str> = _run_target_args'_v1652 
                        (* run_target_args'
                        let v1688 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1689 : string = "String::from($0)"
                        let v1690 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1675 v1689 
                        let _run_target_args'_v1688 = v1690 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1691 : string = "String::from($0)"
                        let v1692 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1675 v1691 
                        let _run_target_args'_v1688 = v1692 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1693 : string = "String::from($0)"
                        let v1694 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1675 v1693 
                        let _run_target_args'_v1688 = v1694 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1696 : std_string_String = v1675 |> unbox<std_string_String>
                        let _run_target_args'_v1688 = v1696 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1700 : std_string_String = v1675 |> unbox<std_string_String>
                        let _run_target_args'_v1688 = v1700 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1704 : std_string_String = v1675 |> unbox<std_string_String>
                        let _run_target_args'_v1688 = v1704 
                        #endif
#else
                        let v1708 : std_string_String = v1675 |> unbox<std_string_String>
                        let _run_target_args'_v1688 = v1708 
                        #endif
                        let v1711 : std_string_String = _run_target_args'_v1688 
                        let v1720 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1721 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1711 v1720 
                        let v1722 : string = "v1721"
                        let v1723 : string = v1722 + v1297 
                        let v1724 : string = v1723 + v1297 
                        let v1725 : string = "vec![" + v1724 + "]"
                        let v1726 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1725 
                        let v1727 : string = "leptos::prelude::Fragment::new($0)"
                        let v1728 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1726 v1727 
                        let v1729 : string = "leptos::prelude::AnyView::from($0)"
                        let v1730 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1728 v1729 
                        let v1731 : string = "<" + v1384 + " " + v1644 + ">move || { v1730 }</" + v1384 + ">"
                        let v1732 : string = "leptos::prelude::view! { " + v1731 + " }"
                        let v1733 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1732 
                        let v1734 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1733 |> unbox
                        let v1735 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1736 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1734 v1735 
                        let v1737 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1738 : string = " " + v1737 + v1297 + ""
                        let v1739 : (struct (std_string_String * std_string_String option) []) = v1292.l7
                        let v1740 : string = "$0.to_vec()"
                        let v1741 : Vec<struct (std_string_String * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr v1739 v1740 
                        let v1742 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                        let v1743 : bool = Fable.Core.RustInterop.emitRustExpr v1741 v1742 
                        let v1744 : string = "x"
                        let struct (v1745 : std_string_String, v1746 : std_string_String option) = Fable.Core.RustInterop.emitRustExpr () v1744 
                        let v1747 : (unit -> leptos_dom_Fragment) = method258(v1745)
                        let v1748 : (unit -> leptos_dom_Fragment) = method259(v1746)
                        let v1749 : string = "$0"
                        let v1750 : (unit -> string) = closure295()
                        let v1751 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1750 v1749 
                        let v1752 : string = "$0"
                        let v1753 : (unit -> string) = closure296()
                        let v1754 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1753 v1752 
                        let v1755 : string = "$0"
                        let v1756 : (unit -> string) = closure297()
                        let v1757 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1756 v1755 
                        let v1758 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v1757(()) + \" \" + &v1754(()) + \" \" + &v1751(())"
                        let v1759 : string = " " + v1758 + v1297 + ""
                        let v1760 : string = "$0"
                        let v1761 : (unit -> string) = closure298()
                        let v1762 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1761 v1760 
                        let v1763 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v1764 : string = " " + v1763 + v1297 + ""
                        let v1765 : leptos_dom_Fragment = v1747 ()
                        let v1766 : string = "leptos::prelude::AnyView::from($0)"
                        let v1767 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1765 v1766 
                        let v1768 : string = "dt"
                        let v1769 : string = "<" + v1768 + " " + v1764 + ">move || { v1767 }</" + v1768 + ">"
                        let v1770 : string = "leptos::prelude::view! { " + v1769 + " }"
                        let v1771 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1770 
                        let v1772 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v1771 |> unbox
                        let v1773 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1774 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1772 v1773 
                        let v1775 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v1762(())"
                        let v1776 : string = " " + v1775 + v1297 + ""
                        let v1777 : leptos_dom_Fragment = v1748 ()
                        let v1778 : string = "leptos::prelude::AnyView::from($0)"
                        let v1779 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1777 v1778 
                        let v1780 : string = "dd"
                        let v1781 : string = "<" + v1780 + " " + v1776 + ">move || { v1779 }</" + v1780 + ">"
                        let v1782 : string = "leptos::prelude::view! { " + v1781 + " }"
                        let v1783 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1782 
                        let v1784 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v1783 |> unbox
                        let v1785 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1786 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1784 v1785 
                        let v1787 : string = "v1786"
                        let v1788 : string = v1787 + v1297 
                        let v1789 : string = v1788 + v1297 
                        let v1790 : string = "v1774"
                        let v1791 : string = ", "
                        let v1792 : string = v1790 + v1791 
                        let v1793 : string = v1792 + v1789 
                        let v1794 : string = "vec![" + v1793 + "]"
                        let v1795 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1794 
                        let v1796 : string = "leptos::prelude::Fragment::new($0)"
                        let v1797 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1795 v1796 
                        let v1798 : string = "leptos::prelude::AnyView::from($0)"
                        let v1799 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1797 v1798 
                        let v1800 : string = "dl"
                        let v1801 : string = "<" + v1800 + " " + v1759 + ">move || { v1799 }</" + v1800 + ">"
                        let v1802 : string = "leptos::prelude::view! { " + v1801 + " }"
                        let v1803 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1802 
                        let v1804 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v1803 |> unbox
                        let v1805 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1806 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1804 v1805 
                        let v1807 : string = "true; $0 }).collect::<Vec<_>>()"
                        let v1808 : bool = Fable.Core.RustInterop.emitRustExpr v1806 v1807 
                        let v1809 : string = "_vec_map"
                        let v1810 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1809 
                        let v1811 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1812 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1810 v1811 
                        let v1813 : string = "v1812"
                        let v1814 : string = v1813 + v1297 
                        let v1815 : string = v1814 + v1297 
                        let v1816 : string = "vec![" + v1815 + "]"
                        let v1817 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1816 
                        let v1818 : string = "leptos::prelude::Fragment::new($0)"
                        let v1819 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1817 v1818 
                        let v1820 : string = "leptos::prelude::AnyView::from($0)"
                        let v1821 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1819 v1820 
                        let v1822 : string = "<" + v1384 + " " + v1738 + ">move || { v1821 }</" + v1384 + ">"
                        let v1823 : string = "leptos::prelude::view! { " + v1822 + " }"
                        let v1824 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1823 
                        let v1825 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1824 |> unbox
                        let v1826 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1827 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1825 v1826 
                        let v1828 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1829 : string = " " + v1828 + v1297 + ""
                        let v1830 : float = v1292.l8
                        let v1832 : (float -> string) = _.ToString()
                        let v1833 : string = v1832 v1830
                        (* run_target_args'
                        let v1840 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1841 : string = "&*$0"
                        let v1842 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1833 v1841 
                        let _run_target_args'_v1840 = v1842 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1843 : string = "&*$0"
                        let v1844 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1833 v1843 
                        let _run_target_args'_v1840 = v1844 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1845 : string = "&*$0"
                        let v1846 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1833 v1845 
                        let _run_target_args'_v1840 = v1846 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1848 : Ref<Str> = v1833 |> unbox<Ref<Str>>
                        let _run_target_args'_v1840 = v1848 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1852 : Ref<Str> = v1833 |> unbox<Ref<Str>>
                        let _run_target_args'_v1840 = v1852 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1856 : Ref<Str> = v1833 |> unbox<Ref<Str>>
                        let _run_target_args'_v1840 = v1856 
                        #endif
#else
                        let v1860 : Ref<Str> = v1833 |> unbox<Ref<Str>>
                        let _run_target_args'_v1840 = v1860 
                        #endif
                        let v1863 : Ref<Str> = _run_target_args'_v1840 
                        (* run_target_args'
                        let v1876 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1877 : string = "String::from($0)"
                        let v1878 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1863 v1877 
                        let _run_target_args'_v1876 = v1878 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1879 : string = "String::from($0)"
                        let v1880 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1863 v1879 
                        let _run_target_args'_v1876 = v1880 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1881 : string = "String::from($0)"
                        let v1882 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1863 v1881 
                        let _run_target_args'_v1876 = v1882 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1884 : std_string_String = v1863 |> unbox<std_string_String>
                        let _run_target_args'_v1876 = v1884 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1888 : std_string_String = v1863 |> unbox<std_string_String>
                        let _run_target_args'_v1876 = v1888 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1892 : std_string_String = v1863 |> unbox<std_string_String>
                        let _run_target_args'_v1876 = v1892 
                        #endif
#else
                        let v1896 : std_string_String = v1863 |> unbox<std_string_String>
                        let _run_target_args'_v1876 = v1896 
                        #endif
                        let v1899 : std_string_String = _run_target_args'_v1876 
                        let v1908 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1909 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1899 v1908 
                        let v1910 : string = "v1909"
                        let v1911 : string = v1910 + v1297 
                        let v1912 : string = v1911 + v1297 
                        let v1913 : string = "vec![" + v1912 + "]"
                        let v1914 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1913 
                        let v1915 : string = "leptos::prelude::Fragment::new($0)"
                        let v1916 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1914 v1915 
                        let v1917 : string = "leptos::prelude::AnyView::from($0)"
                        let v1918 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1916 v1917 
                        let v1919 : string = "<" + v1384 + " " + v1829 + ">move || { v1918 }</" + v1384 + ">"
                        let v1920 : string = "leptos::prelude::view! { " + v1919 + " }"
                        let v1921 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1920 
                        let v1922 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1921 |> unbox
                        let v1923 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1924 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1922 v1923 
                        let v1925 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1926 : string = " " + v1925 + v1297 + ""
                        let v1927 : float = v1292.l10
                        let v1929 : (float -> string) = _.ToString()
                        let v1930 : string = v1929 v1927
                        (* run_target_args'
                        let v1937 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1938 : string = "&*$0"
                        let v1939 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1930 v1938 
                        let _run_target_args'_v1937 = v1939 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1940 : string = "&*$0"
                        let v1941 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1930 v1940 
                        let _run_target_args'_v1937 = v1941 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1942 : string = "&*$0"
                        let v1943 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1930 v1942 
                        let _run_target_args'_v1937 = v1943 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1945 : Ref<Str> = v1930 |> unbox<Ref<Str>>
                        let _run_target_args'_v1937 = v1945 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1949 : Ref<Str> = v1930 |> unbox<Ref<Str>>
                        let _run_target_args'_v1937 = v1949 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1953 : Ref<Str> = v1930 |> unbox<Ref<Str>>
                        let _run_target_args'_v1937 = v1953 
                        #endif
#else
                        let v1957 : Ref<Str> = v1930 |> unbox<Ref<Str>>
                        let _run_target_args'_v1937 = v1957 
                        #endif
                        let v1960 : Ref<Str> = _run_target_args'_v1937 
                        (* run_target_args'
                        let v1973 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1974 : string = "String::from($0)"
                        let v1975 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1960 v1974 
                        let _run_target_args'_v1973 = v1975 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1976 : string = "String::from($0)"
                        let v1977 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1960 v1976 
                        let _run_target_args'_v1973 = v1977 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1978 : string = "String::from($0)"
                        let v1979 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1960 v1978 
                        let _run_target_args'_v1973 = v1979 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1981 : std_string_String = v1960 |> unbox<std_string_String>
                        let _run_target_args'_v1973 = v1981 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1985 : std_string_String = v1960 |> unbox<std_string_String>
                        let _run_target_args'_v1973 = v1985 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1989 : std_string_String = v1960 |> unbox<std_string_String>
                        let _run_target_args'_v1973 = v1989 
                        #endif
#else
                        let v1993 : std_string_String = v1960 |> unbox<std_string_String>
                        let _run_target_args'_v1973 = v1993 
                        #endif
                        let v1996 : std_string_String = _run_target_args'_v1973 
                        let v2005 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2006 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1996 v2005 
                        let v2007 : string = "v2006"
                        let v2008 : string = v2007 + v1297 
                        let v2009 : string = v2008 + v1297 
                        let v2010 : string = "vec![" + v2009 + "]"
                        let v2011 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2010 
                        let v2012 : string = "leptos::prelude::Fragment::new($0)"
                        let v2013 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2011 v2012 
                        let v2014 : string = "leptos::prelude::AnyView::from($0)"
                        let v2015 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2013 v2014 
                        let v2016 : string = "<" + v1384 + " " + v1926 + ">move || { v2015 }</" + v1384 + ">"
                        let v2017 : string = "leptos::prelude::view! { " + v2016 + " }"
                        let v2018 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2017 
                        let v2019 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2018 |> unbox
                        let v2020 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2021 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2019 v2020 
                        let v2022 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v2023 : string = " " + v2022 + v1297 + ""
                        let v2024 : uint32 = v1292.l6
                        let v2026 : (uint32 -> string) = _.ToString()
                        let v2027 : string = v2026 v2024
                        (* run_target_args'
                        let v2034 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2035 : string = "&*$0"
                        let v2036 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2027 v2035 
                        let _run_target_args'_v2034 = v2036 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2037 : string = "&*$0"
                        let v2038 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2027 v2037 
                        let _run_target_args'_v2034 = v2038 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2039 : string = "&*$0"
                        let v2040 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2027 v2039 
                        let _run_target_args'_v2034 = v2040 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2042 : Ref<Str> = v2027 |> unbox<Ref<Str>>
                        let _run_target_args'_v2034 = v2042 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2046 : Ref<Str> = v2027 |> unbox<Ref<Str>>
                        let _run_target_args'_v2034 = v2046 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2050 : Ref<Str> = v2027 |> unbox<Ref<Str>>
                        let _run_target_args'_v2034 = v2050 
                        #endif
#else
                        let v2054 : Ref<Str> = v2027 |> unbox<Ref<Str>>
                        let _run_target_args'_v2034 = v2054 
                        #endif
                        let v2057 : Ref<Str> = _run_target_args'_v2034 
                        (* run_target_args'
                        let v2070 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2071 : string = "String::from($0)"
                        let v2072 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2057 v2071 
                        let _run_target_args'_v2070 = v2072 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2073 : string = "String::from($0)"
                        let v2074 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2057 v2073 
                        let _run_target_args'_v2070 = v2074 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2075 : string = "String::from($0)"
                        let v2076 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2057 v2075 
                        let _run_target_args'_v2070 = v2076 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2078 : std_string_String = v2057 |> unbox<std_string_String>
                        let _run_target_args'_v2070 = v2078 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2082 : std_string_String = v2057 |> unbox<std_string_String>
                        let _run_target_args'_v2070 = v2082 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2086 : std_string_String = v2057 |> unbox<std_string_String>
                        let _run_target_args'_v2070 = v2086 
                        #endif
#else
                        let v2090 : std_string_String = v2057 |> unbox<std_string_String>
                        let _run_target_args'_v2070 = v2090 
                        #endif
                        let v2093 : std_string_String = _run_target_args'_v2070 
                        let v2102 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2103 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2093 v2102 
                        let v2104 : string = "v2103"
                        let v2105 : string = v2104 + v1297 
                        let v2106 : string = v2105 + v1297 
                        let v2107 : string = "vec![" + v2106 + "]"
                        let v2108 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2107 
                        let v2109 : string = "leptos::prelude::Fragment::new($0)"
                        let v2110 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2108 v2109 
                        let v2111 : string = "leptos::prelude::AnyView::from($0)"
                        let v2112 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2110 v2111 
                        let v2113 : string = "<" + v1384 + " " + v2023 + ">move || { v2112 }</" + v1384 + ">"
                        let v2114 : string = "leptos::prelude::view! { " + v2113 + " }"
                        let v2115 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2114 
                        let v2116 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2115 |> unbox
                        let v2117 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2118 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2116 v2117 
                        let v2119 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500 [overflow:auto]\""
                        let v2120 : string = " " + v2119 + v1297 + ""
                        let v2121 : (std_string_String []) = v1292.l11
                        let v2122 : uint64 = System.Convert.ToUInt64 v2121.Length
                        let v2123 : bool = v2122 = 0UL
                        let v2345 : leptos_dom_Fragment =
                            if v2123 then
                                (* run_target_args'
                                let v2128 : unit = ()
                                run_target_args' *)
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v2129 : string = "&*$0"
                                let v2130 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1297 v2129 
                                let _run_target_args'_v2128 = v2130 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v2131 : string = "&*$0"
                                let v2132 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1297 v2131 
                                let _run_target_args'_v2128 = v2132 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v2133 : string = "&*$0"
                                let v2134 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1297 v2133 
                                let _run_target_args'_v2128 = v2134 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v2136 : Ref<Str> = v1297 |> unbox<Ref<Str>>
                                let _run_target_args'_v2128 = v2136 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v2140 : Ref<Str> = v1297 |> unbox<Ref<Str>>
                                let _run_target_args'_v2128 = v2140 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v2144 : Ref<Str> = v1297 |> unbox<Ref<Str>>
                                let _run_target_args'_v2128 = v2144 
                                #endif
#else
                                let v2148 : Ref<Str> = v1297 |> unbox<Ref<Str>>
                                let _run_target_args'_v2128 = v2148 
                                #endif
                                let v2151 : Ref<Str> = _run_target_args'_v2128 
                                (* run_target_args'
                                let v2164 : unit = ()
                                run_target_args' *)
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v2165 : string = "String::from($0)"
                                let v2166 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2151 v2165 
                                let _run_target_args'_v2164 = v2166 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v2167 : string = "String::from($0)"
                                let v2168 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2151 v2167 
                                let _run_target_args'_v2164 = v2168 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v2169 : string = "String::from($0)"
                                let v2170 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2151 v2169 
                                let _run_target_args'_v2164 = v2170 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v2172 : std_string_String = v2151 |> unbox<std_string_String>
                                let _run_target_args'_v2164 = v2172 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v2176 : std_string_String = v2151 |> unbox<std_string_String>
                                let _run_target_args'_v2164 = v2176 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v2180 : std_string_String = v2151 |> unbox<std_string_String>
                                let _run_target_args'_v2164 = v2180 
                                #endif
#else
                                let v2184 : std_string_String = v2151 |> unbox<std_string_String>
                                let _run_target_args'_v2164 = v2184 
                                #endif
                                let v2187 : std_string_String = _run_target_args'_v2164 
                                let v2196 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                                let v2197 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2187 v2196 
                                let v2198 : string = "v2197"
                                let v2199 : string = v2198 + v1297 
                                let v2200 : string = v2199 + v1297 
                                let v2201 : string = "vec![" + v2200 + "]"
                                let v2202 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2201 
                                let v2203 : string = "leptos::prelude::Fragment::new($0)"
                                let v2204 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2202 v2203 
                                v2204
                            else
                                let v2205 : (std_string_String []) = v1292.l11
                                let v2206 : string = "$0.to_vec()"
                                let v2207 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v2205 v2206 
                                let v2208 : unit = ()
                                let v2209 : string = $"true; let _func1_from_v2208 = Func1::from(move |value| {{ //"
                                let v2210 : bool = Fable.Core.RustInterop.emitRustExpr () v2209 
                                let v2211 : string = $"value"
                                let v2212 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v2211 
                                let v2213 : string = "fable_library_rust::String_::fromString($0)"
                                let v2214 : string = Fable.Core.RustInterop.emitRustExpr v2212 v2213 
                                let func1_from_result = v2214 //
                                let v2215 : _ = func1_from_result
                                let v2216 : string = $"true; $0 /*"
                                let v2217 : bool = Fable.Core.RustInterop.emitRustExpr v2215 v2216 
                                let v2218 : string = $"*/ }}); //"
                                let v2219 : bool = Fable.Core.RustInterop.emitRustExpr () v2218 
                                let v2220 : string = $"_func1_from_v2208"
                                let v2221 : Func0<std_string_String, string> = Fable.Core.RustInterop.emitRustExpr () v2220 
                                let v2222 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
                                let v2223 : (std_string_String -> string) = closure332(v2221)
                                let v2224 : Vec<string> = Fable.Core.RustInterop.emitRustExpr struct (v2207, v2223) v2222 
                                let v2225 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                                let v2226 : (string []) = Fable.Core.RustInterop.emitRustExpr v2224 v2225 
                                let v2228 : string seq = v2226 |> Seq.ofArray
                                let v2233 : string = method279()
                                let v2234 : (string -> (string seq -> string)) = String.concat
                                let v2235 : (string seq -> string) = v2234 v2233
                                let v2236 : string = v2235 v2228
                                let v2240 : string = "\\n"
                                let v2241 : string = "\n"
                                let v2242 : string = v2236.Replace (v2240, v2241)
                                let v2243 : string = "$0"
                                let v2244 : (unit -> string) = closure336()
                                let v2245 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v2244 v2243 
                                let v2246 : string = "class=move || \"[padding:1px] [font-size:12px] [line-height:12px] [text-wrap:pretty] \".to_owned() + &v2245(())"
                                let v2247 : string = " " + v2246 + v1297 + ""
                                (* run_target_args'
                                let v2252 : unit = ()
                                run_target_args' *)
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v2253 : string = "&*$0"
                                let v2254 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2242 v2253 
                                let _run_target_args'_v2252 = v2254 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v2255 : string = "&*$0"
                                let v2256 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2242 v2255 
                                let _run_target_args'_v2252 = v2256 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v2257 : string = "&*$0"
                                let v2258 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2242 v2257 
                                let _run_target_args'_v2252 = v2258 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v2260 : Ref<Str> = v2242 |> unbox<Ref<Str>>
                                let _run_target_args'_v2252 = v2260 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v2264 : Ref<Str> = v2242 |> unbox<Ref<Str>>
                                let _run_target_args'_v2252 = v2264 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v2268 : Ref<Str> = v2242 |> unbox<Ref<Str>>
                                let _run_target_args'_v2252 = v2268 
                                #endif
#else
                                let v2272 : Ref<Str> = v2242 |> unbox<Ref<Str>>
                                let _run_target_args'_v2252 = v2272 
                                #endif
                                let v2275 : Ref<Str> = _run_target_args'_v2252 
                                (* run_target_args'
                                let v2288 : unit = ()
                                run_target_args' *)
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v2289 : string = "String::from($0)"
                                let v2290 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2275 v2289 
                                let _run_target_args'_v2288 = v2290 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v2291 : string = "String::from($0)"
                                let v2292 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2275 v2291 
                                let _run_target_args'_v2288 = v2292 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v2293 : string = "String::from($0)"
                                let v2294 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2275 v2293 
                                let _run_target_args'_v2288 = v2294 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v2296 : std_string_String = v2275 |> unbox<std_string_String>
                                let _run_target_args'_v2288 = v2296 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v2300 : std_string_String = v2275 |> unbox<std_string_String>
                                let _run_target_args'_v2288 = v2300 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v2304 : std_string_String = v2275 |> unbox<std_string_String>
                                let _run_target_args'_v2288 = v2304 
                                #endif
#else
                                let v2308 : std_string_String = v2275 |> unbox<std_string_String>
                                let _run_target_args'_v2288 = v2308 
                                #endif
                                let v2311 : std_string_String = _run_target_args'_v2288 
                                let v2320 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                                let v2321 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2311 v2320 
                                let v2322 : string = "v2321"
                                let v2323 : string = v2322 + v1297 
                                let v2324 : string = v2323 + v1297 
                                let v2325 : string = "vec![" + v2324 + "]"
                                let v2326 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2325 
                                let v2327 : string = "leptos::prelude::Fragment::new($0)"
                                let v2328 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2326 v2327 
                                let v2329 : string = "leptos::prelude::AnyView::from($0)"
                                let v2330 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2328 v2329 
                                let v2331 : string = "pre"
                                let v2332 : string = "<" + v2331 + " " + v2247 + ">move || { v2330 }</" + v2331 + ">"
                                let v2333 : string = "leptos::prelude::view! { " + v2332 + " }"
                                let v2334 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2333 
                                let v2335 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v2334 |> unbox
                                let v2336 : string = "leptos::prelude::IntoAny::into_any($0)"
                                let v2337 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2335 v2336 
                                let v2338 : string = "v2337"
                                let v2339 : string = v2338 + v1297 
                                let v2340 : string = v2339 + v1297 
                                let v2341 : string = "vec![" + v2340 + "]"
                                let v2342 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2341 
                                let v2343 : string = "leptos::prelude::Fragment::new($0)"
                                let v2344 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2342 v2343 
                                v2344
                        let v2346 : string = "leptos::prelude::AnyView::from($0)"
                        let v2347 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2345 v2346 
                        let v2348 : string = "<" + v1384 + " " + v2120 + ">move || { v2347 }</" + v1384 + ">"
                        let v2349 : string = "leptos::prelude::view! { " + v2348 + " }"
                        let v2350 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2349 
                        let v2351 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2350 |> unbox
                        let v2352 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2353 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2351 v2352 
                        let v2354 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v2355 : string = " " + v2354 + v1297 + ""
                        let v2356 : bool = v1292.l9
                        let v2358 : (bool -> string) = _.ToString()
                        let v2359 : string = v2358 v2356
                        (* run_target_args'
                        let v2366 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2367 : string = "&*$0"
                        let v2368 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2359 v2367 
                        let _run_target_args'_v2366 = v2368 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2369 : string = "&*$0"
                        let v2370 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2359 v2369 
                        let _run_target_args'_v2366 = v2370 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2371 : string = "&*$0"
                        let v2372 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2359 v2371 
                        let _run_target_args'_v2366 = v2372 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2374 : Ref<Str> = v2359 |> unbox<Ref<Str>>
                        let _run_target_args'_v2366 = v2374 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2378 : Ref<Str> = v2359 |> unbox<Ref<Str>>
                        let _run_target_args'_v2366 = v2378 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2382 : Ref<Str> = v2359 |> unbox<Ref<Str>>
                        let _run_target_args'_v2366 = v2382 
                        #endif
#else
                        let v2386 : Ref<Str> = v2359 |> unbox<Ref<Str>>
                        let _run_target_args'_v2366 = v2386 
                        #endif
                        let v2389 : Ref<Str> = _run_target_args'_v2366 
                        (* run_target_args'
                        let v2402 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2403 : string = "String::from($0)"
                        let v2404 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2389 v2403 
                        let _run_target_args'_v2402 = v2404 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2405 : string = "String::from($0)"
                        let v2406 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2389 v2405 
                        let _run_target_args'_v2402 = v2406 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2407 : string = "String::from($0)"
                        let v2408 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2389 v2407 
                        let _run_target_args'_v2402 = v2408 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2410 : std_string_String = v2389 |> unbox<std_string_String>
                        let _run_target_args'_v2402 = v2410 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2414 : std_string_String = v2389 |> unbox<std_string_String>
                        let _run_target_args'_v2402 = v2414 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2418 : std_string_String = v2389 |> unbox<std_string_String>
                        let _run_target_args'_v2402 = v2418 
                        #endif
#else
                        let v2422 : std_string_String = v2389 |> unbox<std_string_String>
                        let _run_target_args'_v2402 = v2422 
                        #endif
                        let v2425 : std_string_String = _run_target_args'_v2402 
                        let v2434 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2435 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2425 v2434 
                        let v2436 : string = "v2435"
                        let v2437 : string = v2436 + v1297 
                        let v2438 : string = v2437 + v1297 
                        let v2439 : string = "vec![" + v2438 + "]"
                        let v2440 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2439 
                        let v2441 : string = "leptos::prelude::Fragment::new($0)"
                        let v2442 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2440 v2441 
                        let v2443 : string = "leptos::prelude::AnyView::from($0)"
                        let v2444 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2442 v2443 
                        let v2445 : string = "<" + v1384 + " " + v2355 + ">move || { v2444 }</" + v1384 + ">"
                        let v2446 : string = "leptos::prelude::view! { " + v2445 + " }"
                        let v2447 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2446 
                        let v2448 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2447 |> unbox
                        let v2449 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2450 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2448 v2449 
                        let v2451 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v2452 : string = " " + v2451 + v1297 + ""
                        let v2453 : std_string_String = v1292.l3
                        let v2454 : string = "fable_library_rust::String_::fromString($0)"
                        let v2455 : string = Fable.Core.RustInterop.emitRustExpr v2453 v2454 
                        (* run_target_args'
                        let v2460 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2461 : string = "&*$0"
                        let v2462 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2455 v2461 
                        let _run_target_args'_v2460 = v2462 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2463 : string = "&*$0"
                        let v2464 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2455 v2463 
                        let _run_target_args'_v2460 = v2464 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2465 : string = "&*$0"
                        let v2466 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2455 v2465 
                        let _run_target_args'_v2460 = v2466 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2468 : Ref<Str> = v2455 |> unbox<Ref<Str>>
                        let _run_target_args'_v2460 = v2468 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2472 : Ref<Str> = v2455 |> unbox<Ref<Str>>
                        let _run_target_args'_v2460 = v2472 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2476 : Ref<Str> = v2455 |> unbox<Ref<Str>>
                        let _run_target_args'_v2460 = v2476 
                        #endif
#else
                        let v2480 : Ref<Str> = v2455 |> unbox<Ref<Str>>
                        let _run_target_args'_v2460 = v2480 
                        #endif
                        let v2483 : Ref<Str> = _run_target_args'_v2460 
                        (* run_target_args'
                        let v2496 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2497 : string = "String::from($0)"
                        let v2498 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2483 v2497 
                        let _run_target_args'_v2496 = v2498 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2499 : string = "String::from($0)"
                        let v2500 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2483 v2499 
                        let _run_target_args'_v2496 = v2500 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2501 : string = "String::from($0)"
                        let v2502 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2483 v2501 
                        let _run_target_args'_v2496 = v2502 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2504 : std_string_String = v2483 |> unbox<std_string_String>
                        let _run_target_args'_v2496 = v2504 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2508 : std_string_String = v2483 |> unbox<std_string_String>
                        let _run_target_args'_v2496 = v2508 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2512 : std_string_String = v2483 |> unbox<std_string_String>
                        let _run_target_args'_v2496 = v2512 
                        #endif
#else
                        let v2516 : std_string_String = v2483 |> unbox<std_string_String>
                        let _run_target_args'_v2496 = v2516 
                        #endif
                        let v2519 : std_string_String = _run_target_args'_v2496 
                        let v2528 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2529 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2519 v2528 
                        let v2530 : string = "v2529"
                        let v2531 : string = v2530 + v1297 
                        let v2532 : string = v2531 + v1297 
                        let v2533 : string = "vec![" + v2532 + "]"
                        let v2534 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2533 
                        let v2535 : string = "leptos::prelude::Fragment::new($0)"
                        let v2536 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2534 v2535 
                        let v2537 : string = "leptos::prelude::AnyView::from($0)"
                        let v2538 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2536 v2537 
                        let v2539 : string = "<" + v1384 + " " + v2452 + ">move || { v2538 }</" + v1384 + ">"
                        let v2540 : string = "leptos::prelude::view! { " + v2539 + " }"
                        let v2541 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2540 
                        let v2542 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2541 |> unbox
                        let v2543 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2544 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2542 v2543 
                        let v2545 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v2546 : string = " " + v2545 + v1297 + ""
                        let v2547 : std_string_String = v1292.l4
                        let v2548 : string = "fable_library_rust::String_::fromString($0)"
                        let v2549 : string = Fable.Core.RustInterop.emitRustExpr v2547 v2548 
                        (* run_target_args'
                        let v2554 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2555 : string = "&*$0"
                        let v2556 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2549 v2555 
                        let _run_target_args'_v2554 = v2556 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2557 : string = "&*$0"
                        let v2558 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2549 v2557 
                        let _run_target_args'_v2554 = v2558 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2559 : string = "&*$0"
                        let v2560 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2549 v2559 
                        let _run_target_args'_v2554 = v2560 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2562 : Ref<Str> = v2549 |> unbox<Ref<Str>>
                        let _run_target_args'_v2554 = v2562 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2566 : Ref<Str> = v2549 |> unbox<Ref<Str>>
                        let _run_target_args'_v2554 = v2566 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2570 : Ref<Str> = v2549 |> unbox<Ref<Str>>
                        let _run_target_args'_v2554 = v2570 
                        #endif
#else
                        let v2574 : Ref<Str> = v2549 |> unbox<Ref<Str>>
                        let _run_target_args'_v2554 = v2574 
                        #endif
                        let v2577 : Ref<Str> = _run_target_args'_v2554 
                        (* run_target_args'
                        let v2590 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2591 : string = "String::from($0)"
                        let v2592 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2577 v2591 
                        let _run_target_args'_v2590 = v2592 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2593 : string = "String::from($0)"
                        let v2594 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2577 v2593 
                        let _run_target_args'_v2590 = v2594 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2595 : string = "String::from($0)"
                        let v2596 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2577 v2595 
                        let _run_target_args'_v2590 = v2596 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2598 : std_string_String = v2577 |> unbox<std_string_String>
                        let _run_target_args'_v2590 = v2598 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2602 : std_string_String = v2577 |> unbox<std_string_String>
                        let _run_target_args'_v2590 = v2602 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2606 : std_string_String = v2577 |> unbox<std_string_String>
                        let _run_target_args'_v2590 = v2606 
                        #endif
#else
                        let v2610 : std_string_String = v2577 |> unbox<std_string_String>
                        let _run_target_args'_v2590 = v2610 
                        #endif
                        let v2613 : std_string_String = _run_target_args'_v2590 
                        let v2622 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2623 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2613 v2622 
                        let v2624 : string = "v2623"
                        let v2625 : string = v2624 + v1297 
                        let v2626 : string = v2625 + v1297 
                        let v2627 : string = "vec![" + v2626 + "]"
                        let v2628 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2627 
                        let v2629 : string = "leptos::prelude::Fragment::new($0)"
                        let v2630 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2628 v2629 
                        let v2631 : string = "leptos::prelude::AnyView::from($0)"
                        let v2632 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2630 v2631 
                        let v2633 : string = "<" + v1384 + " " + v2546 + ">move || { v2632 }</" + v1384 + ">"
                        let v2634 : string = "leptos::prelude::view! { " + v2633 + " }"
                        let v2635 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2634 
                        let v2636 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2635 |> unbox
                        let v2637 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2638 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2636 v2637 
                        let v2639 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v2640 : string = " " + v2639 + v1297 + ""
                        let v2641 : std_string_String = v1292.l0
                        let v2642 : string = "fable_library_rust::String_::fromString($0)"
                        let v2643 : string = Fable.Core.RustInterop.emitRustExpr v2641 v2642 
                        (* run_target_args'
                        let v2648 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2649 : string = "&*$0"
                        let v2650 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2643 v2649 
                        let _run_target_args'_v2648 = v2650 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2651 : string = "&*$0"
                        let v2652 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2643 v2651 
                        let _run_target_args'_v2648 = v2652 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2653 : string = "&*$0"
                        let v2654 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2643 v2653 
                        let _run_target_args'_v2648 = v2654 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2656 : Ref<Str> = v2643 |> unbox<Ref<Str>>
                        let _run_target_args'_v2648 = v2656 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2660 : Ref<Str> = v2643 |> unbox<Ref<Str>>
                        let _run_target_args'_v2648 = v2660 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2664 : Ref<Str> = v2643 |> unbox<Ref<Str>>
                        let _run_target_args'_v2648 = v2664 
                        #endif
#else
                        let v2668 : Ref<Str> = v2643 |> unbox<Ref<Str>>
                        let _run_target_args'_v2648 = v2668 
                        #endif
                        let v2671 : Ref<Str> = _run_target_args'_v2648 
                        (* run_target_args'
                        let v2684 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2685 : string = "String::from($0)"
                        let v2686 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2671 v2685 
                        let _run_target_args'_v2684 = v2686 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2687 : string = "String::from($0)"
                        let v2688 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2671 v2687 
                        let _run_target_args'_v2684 = v2688 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2689 : string = "String::from($0)"
                        let v2690 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2671 v2689 
                        let _run_target_args'_v2684 = v2690 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2692 : std_string_String = v2671 |> unbox<std_string_String>
                        let _run_target_args'_v2684 = v2692 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2696 : std_string_String = v2671 |> unbox<std_string_String>
                        let _run_target_args'_v2684 = v2696 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2700 : std_string_String = v2671 |> unbox<std_string_String>
                        let _run_target_args'_v2684 = v2700 
                        #endif
#else
                        let v2704 : std_string_String = v2671 |> unbox<std_string_String>
                        let _run_target_args'_v2684 = v2704 
                        #endif
                        let v2707 : std_string_String = _run_target_args'_v2684 
                        let v2716 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2717 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2707 v2716 
                        let v2718 : string = "v2717"
                        let v2719 : string = v2718 + v1297 
                        let v2720 : string = v2719 + v1297 
                        let v2721 : string = "vec![" + v2720 + "]"
                        let v2722 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2721 
                        let v2723 : string = "leptos::prelude::Fragment::new($0)"
                        let v2724 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2722 v2723 
                        let v2725 : string = "leptos::prelude::AnyView::from($0)"
                        let v2726 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2724 v2725 
                        let v2727 : string = "<" + v1384 + " " + v2640 + ">move || { v2726 }</" + v1384 + ">"
                        let v2728 : string = "leptos::prelude::view! { " + v2727 + " }"
                        let v2729 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2728 
                        let v2730 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2729 |> unbox
                        let v2731 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2732 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2730 v2731 
                        let v2733 : string = "v2732"
                        let v2734 : string = v2733 + v1297 
                        let v2735 : string = v2734 + v1297 
                        let v2736 : string = "v2638"
                        let v2737 : string = v2736 + v1791 
                        let v2738 : string = v2737 + v2735 
                        let v2739 : string = "v2544"
                        let v2740 : string = v2739 + v1791 
                        let v2741 : string = v2740 + v2738 
                        let v2742 : string = "v2450"
                        let v2743 : string = v2742 + v1791 
                        let v2744 : string = v2743 + v2741 
                        let v2745 : string = "v2353"
                        let v2746 : string = v2745 + v1791 
                        let v2747 : string = v2746 + v2744 
                        let v2748 : string = "v2118"
                        let v2749 : string = v2748 + v1791 
                        let v2750 : string = v2749 + v2747 
                        let v2751 : string = "v2021"
                        let v2752 : string = v2751 + v1791 
                        let v2753 : string = v2752 + v2750 
                        let v2754 : string = "v1924"
                        let v2755 : string = v2754 + v1791 
                        let v2756 : string = v2755 + v2753 
                        let v2757 : string = "v1827"
                        let v2758 : string = v2757 + v1791 
                        let v2759 : string = v2758 + v2756 
                        let v2760 : string = "v1736"
                        let v2761 : string = v2760 + v1791 
                        let v2762 : string = v2761 + v2759 
                        let v2763 : string = "v1642"
                        let v2764 : string = v2763 + v1791 
                        let v2765 : string = v2764 + v2762 
                        let v2766 : string = "v1548"
                        let v2767 : string = v2766 + v1791 
                        let v2768 : string = v2767 + v2765 
                        let v2769 : string = "v1390"
                        let v2770 : string = v2769 + v1791 
                        let v2771 : string = v2770 + v2768 
                        let v2772 : string = "vec![" + v2771 + "]"
                        let v2773 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2772 
                        let v2774 : string = "leptos::prelude::Fragment::new($0)"
                        let v2775 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2773 v2774 
                        let v2776 : string = "leptos::prelude::AnyView::from($0)"
                        let v2777 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2775 v2776 
                        let v2778 : string = "tr"
                        let v2779 : string = "<" + v2778 + " " + v1298 + ">move || { v2777 }</" + v2778 + ">"
                        let v2780 : string = "leptos::prelude::view! { " + v2779 + " }"
                        let v2781 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2780 
                        let v2782 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>> = v2781 |> unbox
                        let v2783 : string = "true; $0 }).collect::<Vec<_>>()"
                        let v2784 : bool = Fable.Core.RustInterop.emitRustExpr v2782 v2783 
                        let v2785 : string = "_vec_map"
                        let v2786 : Vec<leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>>> = Fable.Core.RustInterop.emitRustExpr () v2785 
                        let v2787 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                        let v2788 : bool = Fable.Core.RustInterop.emitRustExpr v2786 v2787 
                        let v2789 : string = "x"
                        let v2790 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>> = Fable.Core.RustInterop.emitRustExpr () v2789 
                        let v2791 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2792 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2790 v2791 
                        let v2793 : string = "true; $0 }).collect::<Vec<_>>()"
                        let v2794 : bool = Fable.Core.RustInterop.emitRustExpr v2792 v2793 
                        let v2795 : string = "_vec_map"
                        let v2796 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2795 
                        let v2797 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2798 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2796 v2797 
                        let v2799 : string = "v2798"
                        let v2800 : string = v2799 + v1297 
                        let v2801 : string = v2800 + v1297 
                        let v2802 : string = "vec![" + v2801 + "]"
                        let v2803 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2802 
                        let v2804 : string = "leptos::prelude::Fragment::new($0)"
                        let v2805 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2803 v2804 
                        let v2806 : string = "transaction.tr_head_render (1)"
                        let v2807 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v2808 : bool = Fable.Core.RustInterop.emitRustExpr v2806 v2807 
                        let v2809 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v2810 : string = " " + v2809 + v1297 + ""
                        let v2811 : string = "Account"
                        (* run_target_args'
                        let v2816 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2817 : string = "&*$0"
                        let v2818 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2811 v2817 
                        let _run_target_args'_v2816 = v2818 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2819 : string = "&*$0"
                        let v2820 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2811 v2819 
                        let _run_target_args'_v2816 = v2820 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2821 : string = "&*$0"
                        let v2822 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2811 v2821 
                        let _run_target_args'_v2816 = v2822 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2824 : Ref<Str> = v2811 |> unbox<Ref<Str>>
                        let _run_target_args'_v2816 = v2824 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2828 : Ref<Str> = v2811 |> unbox<Ref<Str>>
                        let _run_target_args'_v2816 = v2828 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2832 : Ref<Str> = v2811 |> unbox<Ref<Str>>
                        let _run_target_args'_v2816 = v2832 
                        #endif
#else
                        let v2836 : Ref<Str> = v2811 |> unbox<Ref<Str>>
                        let _run_target_args'_v2816 = v2836 
                        #endif
                        let v2839 : Ref<Str> = _run_target_args'_v2816 
                        (* run_target_args'
                        let v2852 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2853 : string = "String::from($0)"
                        let v2854 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2839 v2853 
                        let _run_target_args'_v2852 = v2854 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2855 : string = "String::from($0)"
                        let v2856 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2839 v2855 
                        let _run_target_args'_v2852 = v2856 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2857 : string = "String::from($0)"
                        let v2858 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2839 v2857 
                        let _run_target_args'_v2852 = v2858 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2860 : std_string_String = v2839 |> unbox<std_string_String>
                        let _run_target_args'_v2852 = v2860 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2864 : std_string_String = v2839 |> unbox<std_string_String>
                        let _run_target_args'_v2852 = v2864 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2868 : std_string_String = v2839 |> unbox<std_string_String>
                        let _run_target_args'_v2852 = v2868 
                        #endif
#else
                        let v2872 : std_string_String = v2839 |> unbox<std_string_String>
                        let _run_target_args'_v2852 = v2872 
                        #endif
                        let v2875 : std_string_String = _run_target_args'_v2852 
                        let v2884 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2885 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2875 v2884 
                        let v2886 : string = "v2885"
                        let v2887 : string = v2886 + v1297 
                        let v2888 : string = v2887 + v1297 
                        let v2889 : string = "vec![" + v2888 + "]"
                        let v2890 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2889 
                        let v2891 : string = "leptos::prelude::Fragment::new($0)"
                        let v2892 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2890 v2891 
                        let v2893 : string = "leptos::prelude::AnyView::from($0)"
                        let v2894 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2892 v2893 
                        let v2895 : string = "th"
                        let v2896 : string = "<" + v2895 + " " + v2810 + ">move || { v2894 }</" + v2895 + ">"
                        let v2897 : string = "leptos::prelude::view! { " + v2896 + " }"
                        let v2898 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2897 
                        let v2899 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v2898 |> unbox
                        let v2900 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2901 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2899 v2900 
                        let v2902 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v2903 : string = " " + v2902 + v1297 + ""
                        let v2904 : string = "Block Timestamp"
                        (* run_target_args'
                        let v2909 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2910 : string = "&*$0"
                        let v2911 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2904 v2910 
                        let _run_target_args'_v2909 = v2911 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2912 : string = "&*$0"
                        let v2913 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2904 v2912 
                        let _run_target_args'_v2909 = v2913 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2914 : string = "&*$0"
                        let v2915 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2904 v2914 
                        let _run_target_args'_v2909 = v2915 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2917 : Ref<Str> = v2904 |> unbox<Ref<Str>>
                        let _run_target_args'_v2909 = v2917 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2921 : Ref<Str> = v2904 |> unbox<Ref<Str>>
                        let _run_target_args'_v2909 = v2921 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2925 : Ref<Str> = v2904 |> unbox<Ref<Str>>
                        let _run_target_args'_v2909 = v2925 
                        #endif
#else
                        let v2929 : Ref<Str> = v2904 |> unbox<Ref<Str>>
                        let _run_target_args'_v2909 = v2929 
                        #endif
                        let v2932 : Ref<Str> = _run_target_args'_v2909 
                        (* run_target_args'
                        let v2945 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2946 : string = "String::from($0)"
                        let v2947 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2932 v2946 
                        let _run_target_args'_v2945 = v2947 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2948 : string = "String::from($0)"
                        let v2949 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2932 v2948 
                        let _run_target_args'_v2945 = v2949 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2950 : string = "String::from($0)"
                        let v2951 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2932 v2950 
                        let _run_target_args'_v2945 = v2951 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2953 : std_string_String = v2932 |> unbox<std_string_String>
                        let _run_target_args'_v2945 = v2953 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2957 : std_string_String = v2932 |> unbox<std_string_String>
                        let _run_target_args'_v2945 = v2957 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2961 : std_string_String = v2932 |> unbox<std_string_String>
                        let _run_target_args'_v2945 = v2961 
                        #endif
#else
                        let v2965 : std_string_String = v2932 |> unbox<std_string_String>
                        let _run_target_args'_v2945 = v2965 
                        #endif
                        let v2968 : std_string_String = _run_target_args'_v2945 
                        let v2977 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2978 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2968 v2977 
                        let v2979 : string = "v2978"
                        let v2980 : string = v2979 + v1297 
                        let v2981 : string = v2980 + v1297 
                        let v2982 : string = "vec![" + v2981 + "]"
                        let v2983 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2982 
                        let v2984 : string = "leptos::prelude::Fragment::new($0)"
                        let v2985 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2983 v2984 
                        let v2986 : string = "leptos::prelude::AnyView::from($0)"
                        let v2987 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2985 v2986 
                        let v2988 : string = "<" + v2895 + " " + v2903 + ">move || { v2987 }</" + v2895 + ">"
                        let v2989 : string = "leptos::prelude::view! { " + v2988 + " }"
                        let v2990 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2989 
                        let v2991 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v2990 |> unbox
                        let v2992 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2993 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2991 v2992 
                        let v2994 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v2995 : string = " " + v2994 + v1297 + ""
                        let v2996 : string = "Predecessor"
                        (* run_target_args'
                        let v3001 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3002 : string = "&*$0"
                        let v3003 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2996 v3002 
                        let _run_target_args'_v3001 = v3003 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3004 : string = "&*$0"
                        let v3005 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2996 v3004 
                        let _run_target_args'_v3001 = v3005 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3006 : string = "&*$0"
                        let v3007 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2996 v3006 
                        let _run_target_args'_v3001 = v3007 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3009 : Ref<Str> = v2996 |> unbox<Ref<Str>>
                        let _run_target_args'_v3001 = v3009 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3013 : Ref<Str> = v2996 |> unbox<Ref<Str>>
                        let _run_target_args'_v3001 = v3013 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3017 : Ref<Str> = v2996 |> unbox<Ref<Str>>
                        let _run_target_args'_v3001 = v3017 
                        #endif
#else
                        let v3021 : Ref<Str> = v2996 |> unbox<Ref<Str>>
                        let _run_target_args'_v3001 = v3021 
                        #endif
                        let v3024 : Ref<Str> = _run_target_args'_v3001 
                        (* run_target_args'
                        let v3037 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3038 : string = "String::from($0)"
                        let v3039 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3024 v3038 
                        let _run_target_args'_v3037 = v3039 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3040 : string = "String::from($0)"
                        let v3041 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3024 v3040 
                        let _run_target_args'_v3037 = v3041 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3042 : string = "String::from($0)"
                        let v3043 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3024 v3042 
                        let _run_target_args'_v3037 = v3043 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3045 : std_string_String = v3024 |> unbox<std_string_String>
                        let _run_target_args'_v3037 = v3045 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3049 : std_string_String = v3024 |> unbox<std_string_String>
                        let _run_target_args'_v3037 = v3049 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3053 : std_string_String = v3024 |> unbox<std_string_String>
                        let _run_target_args'_v3037 = v3053 
                        #endif
#else
                        let v3057 : std_string_String = v3024 |> unbox<std_string_String>
                        let _run_target_args'_v3037 = v3057 
                        #endif
                        let v3060 : std_string_String = _run_target_args'_v3037 
                        let v3069 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3070 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3060 v3069 
                        let v3071 : string = "v3070"
                        let v3072 : string = v3071 + v1297 
                        let v3073 : string = v3072 + v1297 
                        let v3074 : string = "vec![" + v3073 + "]"
                        let v3075 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3074 
                        let v3076 : string = "leptos::prelude::Fragment::new($0)"
                        let v3077 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3075 v3076 
                        let v3078 : string = "leptos::prelude::AnyView::from($0)"
                        let v3079 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3077 v3078 
                        let v3080 : string = "<" + v2895 + " " + v2995 + ">move || { v3079 }</" + v2895 + ">"
                        let v3081 : string = "leptos::prelude::view! { " + v3080 + " }"
                        let v3082 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3081 
                        let v3083 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3082 |> unbox
                        let v3084 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3085 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3083 v3084 
                        let v3086 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3087 : string = " " + v3086 + v1297 + ""
                        let v3088 : string = "Receiver"
                        (* run_target_args'
                        let v3093 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3094 : string = "&*$0"
                        let v3095 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3088 v3094 
                        let _run_target_args'_v3093 = v3095 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3096 : string = "&*$0"
                        let v3097 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3088 v3096 
                        let _run_target_args'_v3093 = v3097 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3098 : string = "&*$0"
                        let v3099 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3088 v3098 
                        let _run_target_args'_v3093 = v3099 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3101 : Ref<Str> = v3088 |> unbox<Ref<Str>>
                        let _run_target_args'_v3093 = v3101 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3105 : Ref<Str> = v3088 |> unbox<Ref<Str>>
                        let _run_target_args'_v3093 = v3105 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3109 : Ref<Str> = v3088 |> unbox<Ref<Str>>
                        let _run_target_args'_v3093 = v3109 
                        #endif
#else
                        let v3113 : Ref<Str> = v3088 |> unbox<Ref<Str>>
                        let _run_target_args'_v3093 = v3113 
                        #endif
                        let v3116 : Ref<Str> = _run_target_args'_v3093 
                        (* run_target_args'
                        let v3129 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3130 : string = "String::from($0)"
                        let v3131 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3116 v3130 
                        let _run_target_args'_v3129 = v3131 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3132 : string = "String::from($0)"
                        let v3133 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3116 v3132 
                        let _run_target_args'_v3129 = v3133 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3134 : string = "String::from($0)"
                        let v3135 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3116 v3134 
                        let _run_target_args'_v3129 = v3135 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3137 : std_string_String = v3116 |> unbox<std_string_String>
                        let _run_target_args'_v3129 = v3137 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3141 : std_string_String = v3116 |> unbox<std_string_String>
                        let _run_target_args'_v3129 = v3141 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3145 : std_string_String = v3116 |> unbox<std_string_String>
                        let _run_target_args'_v3129 = v3145 
                        #endif
#else
                        let v3149 : std_string_String = v3116 |> unbox<std_string_String>
                        let _run_target_args'_v3129 = v3149 
                        #endif
                        let v3152 : std_string_String = _run_target_args'_v3129 
                        let v3161 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3162 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3152 v3161 
                        let v3163 : string = "v3162"
                        let v3164 : string = v3163 + v1297 
                        let v3165 : string = v3164 + v1297 
                        let v3166 : string = "vec![" + v3165 + "]"
                        let v3167 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3166 
                        let v3168 : string = "leptos::prelude::Fragment::new($0)"
                        let v3169 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3167 v3168 
                        let v3170 : string = "leptos::prelude::AnyView::from($0)"
                        let v3171 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3169 v3170 
                        let v3172 : string = "<" + v2895 + " " + v3087 + ">move || { v3171 }</" + v2895 + ">"
                        let v3173 : string = "leptos::prelude::view! { " + v3172 + " }"
                        let v3174 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3173 
                        let v3175 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3174 |> unbox
                        let v3176 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3177 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3175 v3176 
                        let v3178 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3179 : string = " " + v3178 + v1297 + ""
                        let v3180 : string = "Action"
                        (* run_target_args'
                        let v3185 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3186 : string = "&*$0"
                        let v3187 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3180 v3186 
                        let _run_target_args'_v3185 = v3187 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3188 : string = "&*$0"
                        let v3189 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3180 v3188 
                        let _run_target_args'_v3185 = v3189 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3190 : string = "&*$0"
                        let v3191 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3180 v3190 
                        let _run_target_args'_v3185 = v3191 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3193 : Ref<Str> = v3180 |> unbox<Ref<Str>>
                        let _run_target_args'_v3185 = v3193 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3197 : Ref<Str> = v3180 |> unbox<Ref<Str>>
                        let _run_target_args'_v3185 = v3197 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3201 : Ref<Str> = v3180 |> unbox<Ref<Str>>
                        let _run_target_args'_v3185 = v3201 
                        #endif
#else
                        let v3205 : Ref<Str> = v3180 |> unbox<Ref<Str>>
                        let _run_target_args'_v3185 = v3205 
                        #endif
                        let v3208 : Ref<Str> = _run_target_args'_v3185 
                        (* run_target_args'
                        let v3221 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3222 : string = "String::from($0)"
                        let v3223 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3208 v3222 
                        let _run_target_args'_v3221 = v3223 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3224 : string = "String::from($0)"
                        let v3225 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3208 v3224 
                        let _run_target_args'_v3221 = v3225 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3226 : string = "String::from($0)"
                        let v3227 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3208 v3226 
                        let _run_target_args'_v3221 = v3227 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3229 : std_string_String = v3208 |> unbox<std_string_String>
                        let _run_target_args'_v3221 = v3229 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3233 : std_string_String = v3208 |> unbox<std_string_String>
                        let _run_target_args'_v3221 = v3233 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3237 : std_string_String = v3208 |> unbox<std_string_String>
                        let _run_target_args'_v3221 = v3237 
                        #endif
#else
                        let v3241 : std_string_String = v3208 |> unbox<std_string_String>
                        let _run_target_args'_v3221 = v3241 
                        #endif
                        let v3244 : std_string_String = _run_target_args'_v3221 
                        let v3253 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3254 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3244 v3253 
                        let v3255 : string = "v3254"
                        let v3256 : string = v3255 + v1297 
                        let v3257 : string = v3256 + v1297 
                        let v3258 : string = "vec![" + v3257 + "]"
                        let v3259 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3258 
                        let v3260 : string = "leptos::prelude::Fragment::new($0)"
                        let v3261 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3259 v3260 
                        let v3262 : string = "leptos::prelude::AnyView::from($0)"
                        let v3263 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3261 v3262 
                        let v3264 : string = "<" + v2895 + " " + v3179 + ">move || { v3263 }</" + v2895 + ">"
                        let v3265 : string = "leptos::prelude::view! { " + v3264 + " }"
                        let v3266 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3265 
                        let v3267 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3266 |> unbox
                        let v3268 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3269 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3267 v3268 
                        let v3270 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3271 : string = " " + v3270 + v1297 + ""
                        let v3272 : string = "Deposit"
                        (* run_target_args'
                        let v3277 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3278 : string = "&*$0"
                        let v3279 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3272 v3278 
                        let _run_target_args'_v3277 = v3279 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3280 : string = "&*$0"
                        let v3281 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3272 v3280 
                        let _run_target_args'_v3277 = v3281 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3282 : string = "&*$0"
                        let v3283 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3272 v3282 
                        let _run_target_args'_v3277 = v3283 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3285 : Ref<Str> = v3272 |> unbox<Ref<Str>>
                        let _run_target_args'_v3277 = v3285 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3289 : Ref<Str> = v3272 |> unbox<Ref<Str>>
                        let _run_target_args'_v3277 = v3289 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3293 : Ref<Str> = v3272 |> unbox<Ref<Str>>
                        let _run_target_args'_v3277 = v3293 
                        #endif
#else
                        let v3297 : Ref<Str> = v3272 |> unbox<Ref<Str>>
                        let _run_target_args'_v3277 = v3297 
                        #endif
                        let v3300 : Ref<Str> = _run_target_args'_v3277 
                        (* run_target_args'
                        let v3313 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3314 : string = "String::from($0)"
                        let v3315 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3300 v3314 
                        let _run_target_args'_v3313 = v3315 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3316 : string = "String::from($0)"
                        let v3317 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3300 v3316 
                        let _run_target_args'_v3313 = v3317 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3318 : string = "String::from($0)"
                        let v3319 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3300 v3318 
                        let _run_target_args'_v3313 = v3319 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3321 : std_string_String = v3300 |> unbox<std_string_String>
                        let _run_target_args'_v3313 = v3321 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3325 : std_string_String = v3300 |> unbox<std_string_String>
                        let _run_target_args'_v3313 = v3325 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3329 : std_string_String = v3300 |> unbox<std_string_String>
                        let _run_target_args'_v3313 = v3329 
                        #endif
#else
                        let v3333 : std_string_String = v3300 |> unbox<std_string_String>
                        let _run_target_args'_v3313 = v3333 
                        #endif
                        let v3336 : std_string_String = _run_target_args'_v3313 
                        let v3345 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3346 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3336 v3345 
                        let v3347 : string = "v3346"
                        let v3348 : string = v3347 + v1297 
                        let v3349 : string = v3348 + v1297 
                        let v3350 : string = "vec![" + v3349 + "]"
                        let v3351 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3350 
                        let v3352 : string = "leptos::prelude::Fragment::new($0)"
                        let v3353 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3351 v3352 
                        let v3354 : string = "leptos::prelude::AnyView::from($0)"
                        let v3355 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3353 v3354 
                        let v3356 : string = "<" + v2895 + " " + v3271 + ">move || { v3355 }</" + v2895 + ">"
                        let v3357 : string = "leptos::prelude::view! { " + v3356 + " }"
                        let v3358 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3357 
                        let v3359 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3358 |> unbox
                        let v3360 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3361 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3359 v3360 
                        let v3362 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3363 : string = " " + v3362 + v1297 + ""
                        let v3364 : string = "Fee"
                        (* run_target_args'
                        let v3369 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3370 : string = "&*$0"
                        let v3371 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3364 v3370 
                        let _run_target_args'_v3369 = v3371 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3372 : string = "&*$0"
                        let v3373 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3364 v3372 
                        let _run_target_args'_v3369 = v3373 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3374 : string = "&*$0"
                        let v3375 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3364 v3374 
                        let _run_target_args'_v3369 = v3375 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3377 : Ref<Str> = v3364 |> unbox<Ref<Str>>
                        let _run_target_args'_v3369 = v3377 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3381 : Ref<Str> = v3364 |> unbox<Ref<Str>>
                        let _run_target_args'_v3369 = v3381 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3385 : Ref<Str> = v3364 |> unbox<Ref<Str>>
                        let _run_target_args'_v3369 = v3385 
                        #endif
#else
                        let v3389 : Ref<Str> = v3364 |> unbox<Ref<Str>>
                        let _run_target_args'_v3369 = v3389 
                        #endif
                        let v3392 : Ref<Str> = _run_target_args'_v3369 
                        (* run_target_args'
                        let v3405 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3406 : string = "String::from($0)"
                        let v3407 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3392 v3406 
                        let _run_target_args'_v3405 = v3407 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3408 : string = "String::from($0)"
                        let v3409 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3392 v3408 
                        let _run_target_args'_v3405 = v3409 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3410 : string = "String::from($0)"
                        let v3411 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3392 v3410 
                        let _run_target_args'_v3405 = v3411 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3413 : std_string_String = v3392 |> unbox<std_string_String>
                        let _run_target_args'_v3405 = v3413 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3417 : std_string_String = v3392 |> unbox<std_string_String>
                        let _run_target_args'_v3405 = v3417 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3421 : std_string_String = v3392 |> unbox<std_string_String>
                        let _run_target_args'_v3405 = v3421 
                        #endif
#else
                        let v3425 : std_string_String = v3392 |> unbox<std_string_String>
                        let _run_target_args'_v3405 = v3425 
                        #endif
                        let v3428 : std_string_String = _run_target_args'_v3405 
                        let v3437 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3438 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3428 v3437 
                        let v3439 : string = "v3438"
                        let v3440 : string = v3439 + v1297 
                        let v3441 : string = v3440 + v1297 
                        let v3442 : string = "vec![" + v3441 + "]"
                        let v3443 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3442 
                        let v3444 : string = "leptos::prelude::Fragment::new($0)"
                        let v3445 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3443 v3444 
                        let v3446 : string = "leptos::prelude::AnyView::from($0)"
                        let v3447 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3445 v3446 
                        let v3448 : string = "<" + v2895 + " " + v3363 + ">move || { v3447 }</" + v2895 + ">"
                        let v3449 : string = "leptos::prelude::view! { " + v3448 + " }"
                        let v3450 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3449 
                        let v3451 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3450 |> unbox
                        let v3452 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3453 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3451 v3452 
                        let v3454 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3455 : string = " " + v3454 + v1297 + ""
                        let v3456 : string = "Block Height"
                        (* run_target_args'
                        let v3461 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3462 : string = "&*$0"
                        let v3463 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3456 v3462 
                        let _run_target_args'_v3461 = v3463 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3464 : string = "&*$0"
                        let v3465 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3456 v3464 
                        let _run_target_args'_v3461 = v3465 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3466 : string = "&*$0"
                        let v3467 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3456 v3466 
                        let _run_target_args'_v3461 = v3467 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3469 : Ref<Str> = v3456 |> unbox<Ref<Str>>
                        let _run_target_args'_v3461 = v3469 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3473 : Ref<Str> = v3456 |> unbox<Ref<Str>>
                        let _run_target_args'_v3461 = v3473 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3477 : Ref<Str> = v3456 |> unbox<Ref<Str>>
                        let _run_target_args'_v3461 = v3477 
                        #endif
#else
                        let v3481 : Ref<Str> = v3456 |> unbox<Ref<Str>>
                        let _run_target_args'_v3461 = v3481 
                        #endif
                        let v3484 : Ref<Str> = _run_target_args'_v3461 
                        (* run_target_args'
                        let v3497 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3498 : string = "String::from($0)"
                        let v3499 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3484 v3498 
                        let _run_target_args'_v3497 = v3499 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3500 : string = "String::from($0)"
                        let v3501 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3484 v3500 
                        let _run_target_args'_v3497 = v3501 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3502 : string = "String::from($0)"
                        let v3503 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3484 v3502 
                        let _run_target_args'_v3497 = v3503 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3505 : std_string_String = v3484 |> unbox<std_string_String>
                        let _run_target_args'_v3497 = v3505 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3509 : std_string_String = v3484 |> unbox<std_string_String>
                        let _run_target_args'_v3497 = v3509 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3513 : std_string_String = v3484 |> unbox<std_string_String>
                        let _run_target_args'_v3497 = v3513 
                        #endif
#else
                        let v3517 : std_string_String = v3484 |> unbox<std_string_String>
                        let _run_target_args'_v3497 = v3517 
                        #endif
                        let v3520 : std_string_String = _run_target_args'_v3497 
                        let v3529 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3530 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3520 v3529 
                        let v3531 : string = "v3530"
                        let v3532 : string = v3531 + v1297 
                        let v3533 : string = v3532 + v1297 
                        let v3534 : string = "vec![" + v3533 + "]"
                        let v3535 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3534 
                        let v3536 : string = "leptos::prelude::Fragment::new($0)"
                        let v3537 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3535 v3536 
                        let v3538 : string = "leptos::prelude::AnyView::from($0)"
                        let v3539 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3537 v3538 
                        let v3540 : string = "<" + v2895 + " " + v3455 + ">move || { v3539 }</" + v2895 + ">"
                        let v3541 : string = "leptos::prelude::view! { " + v3540 + " }"
                        let v3542 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3541 
                        let v3543 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3542 |> unbox
                        let v3544 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3545 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3543 v3544 
                        let v3546 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3547 : string = " " + v3546 + v1297 + ""
                        let v3548 : int32 = 0
                        let v3549 : bool = method280(v377, v3548)
                        let v3550 : bool = false = v3549
                        let v3552 : string =
                            if v3550 then
                                v1297
                            else
                                let v3551 : string = "Logs"
                                v3551
                        (* run_target_args'
                        let v3557 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3558 : string = "&*$0"
                        let v3559 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3552 v3558 
                        let _run_target_args'_v3557 = v3559 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3560 : string = "&*$0"
                        let v3561 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3552 v3560 
                        let _run_target_args'_v3557 = v3561 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3562 : string = "&*$0"
                        let v3563 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3552 v3562 
                        let _run_target_args'_v3557 = v3563 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3565 : Ref<Str> = v3552 |> unbox<Ref<Str>>
                        let _run_target_args'_v3557 = v3565 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3569 : Ref<Str> = v3552 |> unbox<Ref<Str>>
                        let _run_target_args'_v3557 = v3569 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3573 : Ref<Str> = v3552 |> unbox<Ref<Str>>
                        let _run_target_args'_v3557 = v3573 
                        #endif
#else
                        let v3577 : Ref<Str> = v3552 |> unbox<Ref<Str>>
                        let _run_target_args'_v3557 = v3577 
                        #endif
                        let v3580 : Ref<Str> = _run_target_args'_v3557 
                        (* run_target_args'
                        let v3593 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3594 : string = "String::from($0)"
                        let v3595 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3580 v3594 
                        let _run_target_args'_v3593 = v3595 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3596 : string = "String::from($0)"
                        let v3597 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3580 v3596 
                        let _run_target_args'_v3593 = v3597 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3598 : string = "String::from($0)"
                        let v3599 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3580 v3598 
                        let _run_target_args'_v3593 = v3599 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3601 : std_string_String = v3580 |> unbox<std_string_String>
                        let _run_target_args'_v3593 = v3601 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3605 : std_string_String = v3580 |> unbox<std_string_String>
                        let _run_target_args'_v3593 = v3605 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3609 : std_string_String = v3580 |> unbox<std_string_String>
                        let _run_target_args'_v3593 = v3609 
                        #endif
#else
                        let v3613 : std_string_String = v3580 |> unbox<std_string_String>
                        let _run_target_args'_v3593 = v3613 
                        #endif
                        let v3616 : std_string_String = _run_target_args'_v3593 
                        let v3625 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3626 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3616 v3625 
                        let v3627 : string = "v3626"
                        let v3628 : string = v3627 + v1297 
                        let v3629 : string = v3628 + v1297 
                        let v3630 : string = "vec![" + v3629 + "]"
                        let v3631 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3630 
                        let v3632 : string = "leptos::prelude::Fragment::new($0)"
                        let v3633 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3631 v3632 
                        let v3634 : string = "leptos::prelude::AnyView::from($0)"
                        let v3635 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3633 v3634 
                        let v3636 : string = "<" + v2895 + " " + v3547 + ">move || { v3635 }</" + v2895 + ">"
                        let v3637 : string = "leptos::prelude::view! { " + v3636 + " }"
                        let v3638 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3637 
                        let v3639 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3638 |> unbox
                        let v3640 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3641 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3639 v3640 
                        let v3642 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3643 : string = " " + v3642 + v1297 + ""
                        let v3644 : string = "Outcome Status"
                        (* run_target_args'
                        let v3649 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3650 : string = "&*$0"
                        let v3651 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3644 v3650 
                        let _run_target_args'_v3649 = v3651 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3652 : string = "&*$0"
                        let v3653 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3644 v3652 
                        let _run_target_args'_v3649 = v3653 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3654 : string = "&*$0"
                        let v3655 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3644 v3654 
                        let _run_target_args'_v3649 = v3655 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3657 : Ref<Str> = v3644 |> unbox<Ref<Str>>
                        let _run_target_args'_v3649 = v3657 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3661 : Ref<Str> = v3644 |> unbox<Ref<Str>>
                        let _run_target_args'_v3649 = v3661 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3665 : Ref<Str> = v3644 |> unbox<Ref<Str>>
                        let _run_target_args'_v3649 = v3665 
                        #endif
#else
                        let v3669 : Ref<Str> = v3644 |> unbox<Ref<Str>>
                        let _run_target_args'_v3649 = v3669 
                        #endif
                        let v3672 : Ref<Str> = _run_target_args'_v3649 
                        (* run_target_args'
                        let v3685 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3686 : string = "String::from($0)"
                        let v3687 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3672 v3686 
                        let _run_target_args'_v3685 = v3687 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3688 : string = "String::from($0)"
                        let v3689 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3672 v3688 
                        let _run_target_args'_v3685 = v3689 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3690 : string = "String::from($0)"
                        let v3691 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3672 v3690 
                        let _run_target_args'_v3685 = v3691 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3693 : std_string_String = v3672 |> unbox<std_string_String>
                        let _run_target_args'_v3685 = v3693 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3697 : std_string_String = v3672 |> unbox<std_string_String>
                        let _run_target_args'_v3685 = v3697 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3701 : std_string_String = v3672 |> unbox<std_string_String>
                        let _run_target_args'_v3685 = v3701 
                        #endif
#else
                        let v3705 : std_string_String = v3672 |> unbox<std_string_String>
                        let _run_target_args'_v3685 = v3705 
                        #endif
                        let v3708 : std_string_String = _run_target_args'_v3685 
                        let v3717 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3718 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3708 v3717 
                        let v3719 : string = "v3718"
                        let v3720 : string = v3719 + v1297 
                        let v3721 : string = v3720 + v1297 
                        let v3722 : string = "vec![" + v3721 + "]"
                        let v3723 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3722 
                        let v3724 : string = "leptos::prelude::Fragment::new($0)"
                        let v3725 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3723 v3724 
                        let v3726 : string = "leptos::prelude::AnyView::from($0)"
                        let v3727 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3725 v3726 
                        let v3728 : string = "<" + v2895 + " " + v3643 + ">move || { v3727 }</" + v2895 + ">"
                        let v3729 : string = "leptos::prelude::view! { " + v3728 + " }"
                        let v3730 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3729 
                        let v3731 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3730 |> unbox
                        let v3732 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3733 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3731 v3732 
                        let v3734 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3735 : string = " " + v3734 + v1297 + ""
                        let v3736 : string = "Hash"
                        (* run_target_args'
                        let v3741 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3742 : string = "&*$0"
                        let v3743 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3736 v3742 
                        let _run_target_args'_v3741 = v3743 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3744 : string = "&*$0"
                        let v3745 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3736 v3744 
                        let _run_target_args'_v3741 = v3745 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3746 : string = "&*$0"
                        let v3747 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3736 v3746 
                        let _run_target_args'_v3741 = v3747 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3749 : Ref<Str> = v3736 |> unbox<Ref<Str>>
                        let _run_target_args'_v3741 = v3749 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3753 : Ref<Str> = v3736 |> unbox<Ref<Str>>
                        let _run_target_args'_v3741 = v3753 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3757 : Ref<Str> = v3736 |> unbox<Ref<Str>>
                        let _run_target_args'_v3741 = v3757 
                        #endif
#else
                        let v3761 : Ref<Str> = v3736 |> unbox<Ref<Str>>
                        let _run_target_args'_v3741 = v3761 
                        #endif
                        let v3764 : Ref<Str> = _run_target_args'_v3741 
                        (* run_target_args'
                        let v3777 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3778 : string = "String::from($0)"
                        let v3779 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3764 v3778 
                        let _run_target_args'_v3777 = v3779 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3780 : string = "String::from($0)"
                        let v3781 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3764 v3780 
                        let _run_target_args'_v3777 = v3781 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3782 : string = "String::from($0)"
                        let v3783 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3764 v3782 
                        let _run_target_args'_v3777 = v3783 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3785 : std_string_String = v3764 |> unbox<std_string_String>
                        let _run_target_args'_v3777 = v3785 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3789 : std_string_String = v3764 |> unbox<std_string_String>
                        let _run_target_args'_v3777 = v3789 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3793 : std_string_String = v3764 |> unbox<std_string_String>
                        let _run_target_args'_v3777 = v3793 
                        #endif
#else
                        let v3797 : std_string_String = v3764 |> unbox<std_string_String>
                        let _run_target_args'_v3777 = v3797 
                        #endif
                        let v3800 : std_string_String = _run_target_args'_v3777 
                        let v3809 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3810 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3800 v3809 
                        let v3811 : string = "v3810"
                        let v3812 : string = v3811 + v1297 
                        let v3813 : string = v3812 + v1297 
                        let v3814 : string = "vec![" + v3813 + "]"
                        let v3815 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3814 
                        let v3816 : string = "leptos::prelude::Fragment::new($0)"
                        let v3817 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3815 v3816 
                        let v3818 : string = "leptos::prelude::AnyView::from($0)"
                        let v3819 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3817 v3818 
                        let v3820 : string = "<" + v2895 + " " + v3735 + ">move || { v3819 }</" + v2895 + ">"
                        let v3821 : string = "leptos::prelude::view! { " + v3820 + " }"
                        let v3822 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3821 
                        let v3823 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3822 |> unbox
                        let v3824 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3825 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3823 v3824 
                        let v3826 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3827 : string = " " + v3826 + v1297 + ""
                        let v3828 : string = "Block Hash"
                        (* run_target_args'
                        let v3833 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3834 : string = "&*$0"
                        let v3835 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3828 v3834 
                        let _run_target_args'_v3833 = v3835 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3836 : string = "&*$0"
                        let v3837 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3828 v3836 
                        let _run_target_args'_v3833 = v3837 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3838 : string = "&*$0"
                        let v3839 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3828 v3838 
                        let _run_target_args'_v3833 = v3839 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3841 : Ref<Str> = v3828 |> unbox<Ref<Str>>
                        let _run_target_args'_v3833 = v3841 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3845 : Ref<Str> = v3828 |> unbox<Ref<Str>>
                        let _run_target_args'_v3833 = v3845 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3849 : Ref<Str> = v3828 |> unbox<Ref<Str>>
                        let _run_target_args'_v3833 = v3849 
                        #endif
#else
                        let v3853 : Ref<Str> = v3828 |> unbox<Ref<Str>>
                        let _run_target_args'_v3833 = v3853 
                        #endif
                        let v3856 : Ref<Str> = _run_target_args'_v3833 
                        (* run_target_args'
                        let v3869 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3870 : string = "String::from($0)"
                        let v3871 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3856 v3870 
                        let _run_target_args'_v3869 = v3871 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3872 : string = "String::from($0)"
                        let v3873 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3856 v3872 
                        let _run_target_args'_v3869 = v3873 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3874 : string = "String::from($0)"
                        let v3875 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3856 v3874 
                        let _run_target_args'_v3869 = v3875 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3877 : std_string_String = v3856 |> unbox<std_string_String>
                        let _run_target_args'_v3869 = v3877 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3881 : std_string_String = v3856 |> unbox<std_string_String>
                        let _run_target_args'_v3869 = v3881 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3885 : std_string_String = v3856 |> unbox<std_string_String>
                        let _run_target_args'_v3869 = v3885 
                        #endif
#else
                        let v3889 : std_string_String = v3856 |> unbox<std_string_String>
                        let _run_target_args'_v3869 = v3889 
                        #endif
                        let v3892 : std_string_String = _run_target_args'_v3869 
                        let v3901 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3902 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3892 v3901 
                        let v3903 : string = "v3902"
                        let v3904 : string = v3903 + v1297 
                        let v3905 : string = v3904 + v1297 
                        let v3906 : string = "vec![" + v3905 + "]"
                        let v3907 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3906 
                        let v3908 : string = "leptos::prelude::Fragment::new($0)"
                        let v3909 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3907 v3908 
                        let v3910 : string = "leptos::prelude::AnyView::from($0)"
                        let v3911 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3909 v3910 
                        let v3912 : string = "<" + v2895 + " " + v3827 + ">move || { v3911 }</" + v2895 + ">"
                        let v3913 : string = "leptos::prelude::view! { " + v3912 + " }"
                        let v3914 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3913 
                        let v3915 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3914 |> unbox
                        let v3916 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3917 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3915 v3916 
                        let v3918 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3919 : string = " " + v3918 + v1297 + ""
                        let v3920 : string = "Receipt ID"
                        (* run_target_args'
                        let v3925 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3926 : string = "&*$0"
                        let v3927 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3920 v3926 
                        let _run_target_args'_v3925 = v3927 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3928 : string = "&*$0"
                        let v3929 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3920 v3928 
                        let _run_target_args'_v3925 = v3929 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3930 : string = "&*$0"
                        let v3931 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3920 v3930 
                        let _run_target_args'_v3925 = v3931 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3933 : Ref<Str> = v3920 |> unbox<Ref<Str>>
                        let _run_target_args'_v3925 = v3933 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3937 : Ref<Str> = v3920 |> unbox<Ref<Str>>
                        let _run_target_args'_v3925 = v3937 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3941 : Ref<Str> = v3920 |> unbox<Ref<Str>>
                        let _run_target_args'_v3925 = v3941 
                        #endif
#else
                        let v3945 : Ref<Str> = v3920 |> unbox<Ref<Str>>
                        let _run_target_args'_v3925 = v3945 
                        #endif
                        let v3948 : Ref<Str> = _run_target_args'_v3925 
                        (* run_target_args'
                        let v3961 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3962 : string = "String::from($0)"
                        let v3963 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3948 v3962 
                        let _run_target_args'_v3961 = v3963 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3964 : string = "String::from($0)"
                        let v3965 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3948 v3964 
                        let _run_target_args'_v3961 = v3965 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3966 : string = "String::from($0)"
                        let v3967 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3948 v3966 
                        let _run_target_args'_v3961 = v3967 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3969 : std_string_String = v3948 |> unbox<std_string_String>
                        let _run_target_args'_v3961 = v3969 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3973 : std_string_String = v3948 |> unbox<std_string_String>
                        let _run_target_args'_v3961 = v3973 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3977 : std_string_String = v3948 |> unbox<std_string_String>
                        let _run_target_args'_v3961 = v3977 
                        #endif
#else
                        let v3981 : std_string_String = v3948 |> unbox<std_string_String>
                        let _run_target_args'_v3961 = v3981 
                        #endif
                        let v3984 : std_string_String = _run_target_args'_v3961 
                        let v3993 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3994 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3984 v3993 
                        let v3995 : string = "v3994"
                        let v3996 : string = v3995 + v1297 
                        let v3997 : string = v3996 + v1297 
                        let v3998 : string = "vec![" + v3997 + "]"
                        let v3999 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3998 
                        let v4000 : string = "leptos::prelude::Fragment::new($0)"
                        let v4001 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3999 v4000 
                        let v4002 : string = "leptos::prelude::AnyView::from($0)"
                        let v4003 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4001 v4002 
                        let v4004 : string = "<" + v2895 + " " + v3919 + ">move || { v4003 }</" + v2895 + ">"
                        let v4005 : string = "leptos::prelude::view! { " + v4004 + " }"
                        let v4006 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4005 
                        let v4007 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v4006 |> unbox
                        let v4008 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v4009 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4007 v4008 
                        let v4010 : string = "v4009"
                        let v4011 : string = v4010 + v1297 
                        let v4012 : string = v4011 + v1297 
                        let v4013 : string = "v3917"
                        let v4014 : string = v4013 + v1791 
                        let v4015 : string = v4014 + v4012 
                        let v4016 : string = "v3825"
                        let v4017 : string = v4016 + v1791 
                        let v4018 : string = v4017 + v4015 
                        let v4019 : string = "v3733"
                        let v4020 : string = v4019 + v1791 
                        let v4021 : string = v4020 + v4018 
                        let v4022 : string = "v3641"
                        let v4023 : string = v4022 + v1791 
                        let v4024 : string = v4023 + v4021 
                        let v4025 : string = "v3545"
                        let v4026 : string = v4025 + v1791 
                        let v4027 : string = v4026 + v4024 
                        let v4028 : string = "v3453"
                        let v4029 : string = v4028 + v1791 
                        let v4030 : string = v4029 + v4027 
                        let v4031 : string = "v3361"
                        let v4032 : string = v4031 + v1791 
                        let v4033 : string = v4032 + v4030 
                        let v4034 : string = "v3269"
                        let v4035 : string = v4034 + v1791 
                        let v4036 : string = v4035 + v4033 
                        let v4037 : string = "v3177"
                        let v4038 : string = v4037 + v1791 
                        let v4039 : string = v4038 + v4036 
                        let v4040 : string = "v3085"
                        let v4041 : string = v4040 + v1791 
                        let v4042 : string = v4041 + v4039 
                        let v4043 : string = "v2993"
                        let v4044 : string = v4043 + v1791 
                        let v4045 : string = v4044 + v4042 
                        let v4046 : string = "v2901"
                        let v4047 : string = v4046 + v1791 
                        let v4048 : string = v4047 + v4045 
                        let v4049 : string = "vec![" + v4048 + "]"
                        let v4050 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4049 
                        let v4051 : string = "leptos::prelude::Fragment::new($0)"
                        let v4052 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4050 v4051 
                        let v4053 : string = "leptos::prelude::AnyView::from($0)"
                        let v4054 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4052 v4053 
                        let v4055 : string = "<" + v2778 + " " + v1297 + ">move || { v4054 }</" + v2778 + ">"
                        let v4056 : string = "leptos::prelude::view! { " + v4055 + " }"
                        let v4057 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4056 
                        let v4058 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>> = v4057 |> unbox
                        let v4059 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v4060 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4058 v4059 
                        let v4061 : string = "v4060"
                        let v4062 : string = v4061 + v1297 
                        let v4063 : string = v4062 + v1297 
                        let v4064 : string = "vec![" + v4063 + "]"
                        let v4065 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4064 
                        let v4066 : string = "leptos::prelude::Fragment::new($0)"
                        let v4067 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4065 v4066 
                        let v4068 : string = "class=\"flex-1 min-w-full divide-y-2 divide-gray-200 text-sm dark:divide-gray-700\""
                        let v4069 : string = " " + v4068 + v1297 + ""
                        let v4070 : string = "class=\"ltr:text-left rtl:text-right\""
                        let v4071 : string = " " + v4070 + v1297 + ""
                        let v4072 : string = "leptos::prelude::AnyView::from($0)"
                        let v4073 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4067 v4072 
                        let v4074 : string = "thead"
                        let v4075 : string = "<" + v4074 + " " + v4071 + ">move || { v4073 }</" + v4074 + ">"
                        let v4076 : string = "leptos::prelude::view! { " + v4075 + " }"
                        let v4077 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4076 
                        let v4078 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Thead>> = v4077 |> unbox
                        let v4079 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v4080 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4078 v4079 
                        let v4081 : string = "class=\"divide-y divide-gray-200 dark:divide-gray-700\""
                        let v4082 : string = " " + v4081 + v1297 + ""
                        let v4083 : string = "leptos::prelude::AnyView::from($0)"
                        let v4084 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2805 v4083 
                        let v4085 : string = "tbody"
                        let v4086 : string = "<" + v4085 + " " + v4082 + ">move || { v4084 }</" + v4085 + ">"
                        let v4087 : string = "leptos::prelude::view! { " + v4086 + " }"
                        let v4088 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4087 
                        let v4089 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tbody>> = v4088 |> unbox
                        let v4090 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v4091 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4089 v4090 
                        let v4092 : string = "v4091"
                        let v4093 : string = v4092 + v1297 
                        let v4094 : string = v4093 + v1297 
                        let v4095 : string = "v4080"
                        let v4096 : string = v4095 + v1791 
                        let v4097 : string = v4096 + v4094 
                        let v4098 : string = "vec![" + v4097 + "]"
                        let v4099 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4098 
                        let v4100 : string = "leptos::prelude::Fragment::new($0)"
                        let v4101 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4099 v4100 
                        let v4102 : string = "leptos::prelude::AnyView::from($0)"
                        let v4103 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4101 v4102 
                        let v4104 : string = "table"
                        let v4105 : string = "<" + v4104 + " " + v4069 + ">move || { v4103 }</" + v4104 + ">"
                        let v4106 : string = "leptos::prelude::view! { " + v4105 + " }"
                        let v4107 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4106 
                        let v4108 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Table>> = v4107 |> unbox
                        let v4109 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v4110 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4108 v4109 
                        v4110
                | _ ->
                    let v4112 : string = "class=\"grid place-content-center py-[10vh]\""
                    let v4113 : string = ""
                    let v4114 : string = " " + v4112 + v4113 + ""
                    let v4115 : string = "class=\"flex flex-1 [gap:4px] items-center\""
                    let v4116 : string = " " + v4115 + v4113 + ""
                    let v4117 : string = "$0"
                    let v4118 : (unit -> string) = closure191()
                    let v4119 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4118 v4117 
                    let v4120 : string = "version=\"1.1\""
                    let v4121 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                    let v4122 : string = "xmlns:xlink=\"http://www.w3.org/1999/xlink\""
                    let v4123 : string = "x=\"0px\""
                    let v4124 : string = "y=\"0px\""
                    let v4125 : string = "viewBox=\"0 0 24 30\""
                    let v4126 : string = "style=\"enable-background:new 0 0 50 50;\""
                    let v4127 : string = "xml:space=\"preserve\""
                    let v4128 : string = "class=move || \" \".to_owned() + &v4119(())"
                    let v4129 : string = " " + v4120 + v4113 + ""
                    let v4130 : string = " " + v4121 + v4129 + ""
                    let v4131 : string = " " + v4122 + v4130 + ""
                    let v4132 : string = " " + v4123 + v4131 + ""
                    let v4133 : string = " " + v4124 + v4132 + ""
                    let v4134 : string = " " + v4125 + v4133 + ""
                    let v4135 : string = " " + v4126 + v4134 + ""
                    let v4136 : string = " " + v4127 + v4135 + ""
                    let v4137 : string = " " + v4128 + v4136 + ""
                    let v4138 : string = "x=\"0\""
                    let v4139 : string = "y=\"10\""
                    let v4140 : string = "width=\"4\""
                    let v4141 : string = "height=\"10\""
                    let v4142 : string = "fill=\"#333\""
                    let v4143 : string = "opacity=\"0.2\""
                    let v4144 : string = " " + v4138 + v4113 + ""
                    let v4145 : string = " " + v4139 + v4144 + ""
                    let v4146 : string = " " + v4140 + v4145 + ""
                    let v4147 : string = " " + v4141 + v4146 + ""
                    let v4148 : string = " " + v4142 + v4147 + ""
                    let v4149 : string = " " + v4143 + v4148 + ""
                    let v4150 : string = "attributeName=\"opacity\""
                    let v4151 : string = "attributeType=\"XML\""
                    let v4152 : string = "values=\"0.2; 1; .2\""
                    let v4153 : string = "begin=\"0s\""
                    let v4154 : string = "dur=\"0.6s\""
                    let v4155 : string = "repeatCount=\"indefinite\""
                    let v4156 : string = " " + v4150 + v4113 + ""
                    let v4157 : string = " " + v4151 + v4156 + ""
                    let v4158 : string = " " + v4152 + v4157 + ""
                    let v4159 : string = " " + v4153 + v4158 + ""
                    let v4160 : string = " " + v4154 + v4159 + ""
                    let v4161 : string = " " + v4155 + v4160 + ""
                    let v4162 : string = "vec![" + v4113 + "]"
                    let v4163 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4162 
                    let v4164 : string = "leptos::prelude::Fragment::new($0)"
                    let v4165 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4163 v4164 
                    let v4166 : string = "leptos::prelude::AnyView::from($0)"
                    let v4167 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4165 v4166 
                    let v4168 : string = "animate"
                    let v4169 : string = "<" + v4168 + " " + v4161 + ">move || { v4167 }</" + v4168 + ">"
                    let v4170 : string = "leptos::prelude::view! { " + v4169 + " }"
                    let v4171 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4170 
                    let v4172 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4171 |> unbox
                    let v4173 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4174 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4172 v4173 
                    let v4175 : string = "attributeName=\"height\""
                    let v4176 : string = "attributeType=\"XML\""
                    let v4177 : string = "values=\"10; 20; 10\""
                    let v4178 : string = "begin=\"0s\""
                    let v4179 : string = "dur=\"0.6s\""
                    let v4180 : string = "repeatCount=\"indefinite\""
                    let v4181 : string = " " + v4175 + v4113 + ""
                    let v4182 : string = " " + v4176 + v4181 + ""
                    let v4183 : string = " " + v4177 + v4182 + ""
                    let v4184 : string = " " + v4178 + v4183 + ""
                    let v4185 : string = " " + v4179 + v4184 + ""
                    let v4186 : string = " " + v4180 + v4185 + ""
                    let v4187 : string = "vec![" + v4113 + "]"
                    let v4188 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4187 
                    let v4189 : string = "leptos::prelude::Fragment::new($0)"
                    let v4190 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4188 v4189 
                    let v4191 : string = "leptos::prelude::AnyView::from($0)"
                    let v4192 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4190 v4191 
                    let v4193 : string = "<" + v4168 + " " + v4186 + ">move || { v4192 }</" + v4168 + ">"
                    let v4194 : string = "leptos::prelude::view! { " + v4193 + " }"
                    let v4195 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4194 
                    let v4196 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4195 |> unbox
                    let v4197 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4198 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4196 v4197 
                    let v4199 : string = "attributeName=\"y\""
                    let v4200 : string = "attributeType=\"XML\""
                    let v4201 : string = "values=\"10; 5; 10\""
                    let v4202 : string = "begin=\"0s\""
                    let v4203 : string = "dur=\"0.6s\""
                    let v4204 : string = "repeatCount=\"indefinite\""
                    let v4205 : string = " " + v4199 + v4113 + ""
                    let v4206 : string = " " + v4200 + v4205 + ""
                    let v4207 : string = " " + v4201 + v4206 + ""
                    let v4208 : string = " " + v4202 + v4207 + ""
                    let v4209 : string = " " + v4203 + v4208 + ""
                    let v4210 : string = " " + v4204 + v4209 + ""
                    let v4211 : string = "vec![" + v4113 + "]"
                    let v4212 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4211 
                    let v4213 : string = "leptos::prelude::Fragment::new($0)"
                    let v4214 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4212 v4213 
                    let v4215 : string = "leptos::prelude::AnyView::from($0)"
                    let v4216 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4214 v4215 
                    let v4217 : string = "<" + v4168 + " " + v4210 + ">move || { v4216 }</" + v4168 + ">"
                    let v4218 : string = "leptos::prelude::view! { " + v4217 + " }"
                    let v4219 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4218 
                    let v4220 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4219 |> unbox
                    let v4221 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4222 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4220 v4221 
                    let v4223 : string = "v4222"
                    let v4224 : string = v4223 + v4113 
                    let v4225 : string = v4224 + v4113 
                    let v4226 : string = "v4198"
                    let v4227 : string = ", "
                    let v4228 : string = v4226 + v4227 
                    let v4229 : string = v4228 + v4225 
                    let v4230 : string = "v4174"
                    let v4231 : string = v4230 + v4227 
                    let v4232 : string = v4231 + v4229 
                    let v4233 : string = "vec![" + v4232 + "]"
                    let v4234 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4233 
                    let v4235 : string = "leptos::prelude::Fragment::new($0)"
                    let v4236 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4234 v4235 
                    let v4237 : string = "leptos::prelude::AnyView::from($0)"
                    let v4238 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4236 v4237 
                    let v4239 : string = "rect"
                    let v4240 : string = "<" + v4239 + " " + v4149 + ">move || { v4238 }</" + v4239 + ">"
                    let v4241 : string = "leptos::prelude::view! { " + v4240 + " }"
                    let v4242 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4241 
                    let v4243 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v4242 |> unbox
                    let v4244 : string = "x=\"8\""
                    let v4245 : string = "y=\"10\""
                    let v4246 : string = "width=\"4\""
                    let v4247 : string = "height=\"10\""
                    let v4248 : string = "fill=\"#333\""
                    let v4249 : string = "opacity=\"0.2\""
                    let v4250 : string = " " + v4244 + v4113 + ""
                    let v4251 : string = " " + v4245 + v4250 + ""
                    let v4252 : string = " " + v4246 + v4251 + ""
                    let v4253 : string = " " + v4247 + v4252 + ""
                    let v4254 : string = " " + v4248 + v4253 + ""
                    let v4255 : string = " " + v4249 + v4254 + ""
                    let v4256 : string = "attributeName=\"opacity\""
                    let v4257 : string = "attributeType=\"XML\""
                    let v4258 : string = "values=\"0.2; 1; .2\""
                    let v4259 : string = "begin=\"0.15s\""
                    let v4260 : string = "dur=\"0.6s\""
                    let v4261 : string = "repeatCount=\"indefinite\""
                    let v4262 : string = " " + v4256 + v4113 + ""
                    let v4263 : string = " " + v4257 + v4262 + ""
                    let v4264 : string = " " + v4258 + v4263 + ""
                    let v4265 : string = " " + v4259 + v4264 + ""
                    let v4266 : string = " " + v4260 + v4265 + ""
                    let v4267 : string = " " + v4261 + v4266 + ""
                    let v4268 : string = "vec![" + v4113 + "]"
                    let v4269 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4268 
                    let v4270 : string = "leptos::prelude::Fragment::new($0)"
                    let v4271 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4269 v4270 
                    let v4272 : string = "leptos::prelude::AnyView::from($0)"
                    let v4273 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4271 v4272 
                    let v4274 : string = "<" + v4168 + " " + v4267 + ">move || { v4273 }</" + v4168 + ">"
                    let v4275 : string = "leptos::prelude::view! { " + v4274 + " }"
                    let v4276 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4275 
                    let v4277 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4276 |> unbox
                    let v4278 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4279 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4277 v4278 
                    let v4280 : string = "attributeName=\"opacity\""
                    let v4281 : string = "attributeType=\"XML\""
                    let v4282 : string = "values=\"10; 20; 10\""
                    let v4283 : string = "begin=\"0.15s\""
                    let v4284 : string = "dur=\"0.6s\""
                    let v4285 : string = "repeatCount=\"indefinite\""
                    let v4286 : string = " " + v4280 + v4113 + ""
                    let v4287 : string = " " + v4281 + v4286 + ""
                    let v4288 : string = " " + v4282 + v4287 + ""
                    let v4289 : string = " " + v4283 + v4288 + ""
                    let v4290 : string = " " + v4284 + v4289 + ""
                    let v4291 : string = " " + v4285 + v4290 + ""
                    let v4292 : string = "vec![" + v4113 + "]"
                    let v4293 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4292 
                    let v4294 : string = "leptos::prelude::Fragment::new($0)"
                    let v4295 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4293 v4294 
                    let v4296 : string = "leptos::prelude::AnyView::from($0)"
                    let v4297 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4295 v4296 
                    let v4298 : string = "<" + v4168 + " " + v4291 + ">move || { v4297 }</" + v4168 + ">"
                    let v4299 : string = "leptos::prelude::view! { " + v4298 + " }"
                    let v4300 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4299 
                    let v4301 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4300 |> unbox
                    let v4302 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4303 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4301 v4302 
                    let v4304 : string = "attributeName=\"y\""
                    let v4305 : string = "attributeType=\"XML\""
                    let v4306 : string = "values=\"10; 5; 10\""
                    let v4307 : string = "begin=\"0.15s\""
                    let v4308 : string = "dur=\"0.6s\""
                    let v4309 : string = "repeatCount=\"indefinite\""
                    let v4310 : string = " " + v4304 + v4113 + ""
                    let v4311 : string = " " + v4305 + v4310 + ""
                    let v4312 : string = " " + v4306 + v4311 + ""
                    let v4313 : string = " " + v4307 + v4312 + ""
                    let v4314 : string = " " + v4308 + v4313 + ""
                    let v4315 : string = " " + v4309 + v4314 + ""
                    let v4316 : string = "vec![" + v4113 + "]"
                    let v4317 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4316 
                    let v4318 : string = "leptos::prelude::Fragment::new($0)"
                    let v4319 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4317 v4318 
                    let v4320 : string = "leptos::prelude::AnyView::from($0)"
                    let v4321 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4319 v4320 
                    let v4322 : string = "<" + v4168 + " " + v4315 + ">move || { v4321 }</" + v4168 + ">"
                    let v4323 : string = "leptos::prelude::view! { " + v4322 + " }"
                    let v4324 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4323 
                    let v4325 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4324 |> unbox
                    let v4326 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4327 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4325 v4326 
                    let v4328 : string = "v4327"
                    let v4329 : string = v4328 + v4113 
                    let v4330 : string = v4329 + v4113 
                    let v4331 : string = "v4303"
                    let v4332 : string = v4331 + v4227 
                    let v4333 : string = v4332 + v4330 
                    let v4334 : string = "v4279"
                    let v4335 : string = v4334 + v4227 
                    let v4336 : string = v4335 + v4333 
                    let v4337 : string = "vec![" + v4336 + "]"
                    let v4338 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4337 
                    let v4339 : string = "leptos::prelude::Fragment::new($0)"
                    let v4340 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4338 v4339 
                    let v4341 : string = "leptos::prelude::AnyView::from($0)"
                    let v4342 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4340 v4341 
                    let v4343 : string = "<" + v4239 + " " + v4255 + ">move || { v4342 }</" + v4239 + ">"
                    let v4344 : string = "leptos::prelude::view! { " + v4343 + " }"
                    let v4345 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4344 
                    let v4346 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v4345 |> unbox
                    let v4347 : string = "x=\"16\""
                    let v4348 : string = "y=\"10\""
                    let v4349 : string = "width=\"4\""
                    let v4350 : string = "height=\"10\""
                    let v4351 : string = "fill=\"#333\""
                    let v4352 : string = "opacity=\"0.2\""
                    let v4353 : string = " " + v4347 + v4113 + ""
                    let v4354 : string = " " + v4348 + v4353 + ""
                    let v4355 : string = " " + v4349 + v4354 + ""
                    let v4356 : string = " " + v4350 + v4355 + ""
                    let v4357 : string = " " + v4351 + v4356 + ""
                    let v4358 : string = " " + v4352 + v4357 + ""
                    let v4359 : string = "attributeName=\"opacity\""
                    let v4360 : string = "attributeType=\"XML\""
                    let v4361 : string = "values=\"0.2; 1; .2\""
                    let v4362 : string = "begin=\"0.3s\""
                    let v4363 : string = "dur=\"0.6s\""
                    let v4364 : string = "repeatCount=\"indefinite\""
                    let v4365 : string = " " + v4359 + v4113 + ""
                    let v4366 : string = " " + v4360 + v4365 + ""
                    let v4367 : string = " " + v4361 + v4366 + ""
                    let v4368 : string = " " + v4362 + v4367 + ""
                    let v4369 : string = " " + v4363 + v4368 + ""
                    let v4370 : string = " " + v4364 + v4369 + ""
                    let v4371 : string = "vec![" + v4113 + "]"
                    let v4372 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4371 
                    let v4373 : string = "leptos::prelude::Fragment::new($0)"
                    let v4374 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4372 v4373 
                    let v4375 : string = "leptos::prelude::AnyView::from($0)"
                    let v4376 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4374 v4375 
                    let v4377 : string = "<" + v4168 + " " + v4370 + ">move || { v4376 }</" + v4168 + ">"
                    let v4378 : string = "leptos::prelude::view! { " + v4377 + " }"
                    let v4379 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4378 
                    let v4380 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4379 |> unbox
                    let v4381 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4382 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4380 v4381 
                    let v4383 : string = "attributeName=\"height\""
                    let v4384 : string = "attributeType=\"XML\""
                    let v4385 : string = "values=\"10; 20; 10\""
                    let v4386 : string = "begin=\"0.3s\""
                    let v4387 : string = "dur=\"0.6s\""
                    let v4388 : string = "repeatCount=\"indefinite\""
                    let v4389 : string = " " + v4383 + v4113 + ""
                    let v4390 : string = " " + v4384 + v4389 + ""
                    let v4391 : string = " " + v4385 + v4390 + ""
                    let v4392 : string = " " + v4386 + v4391 + ""
                    let v4393 : string = " " + v4387 + v4392 + ""
                    let v4394 : string = " " + v4388 + v4393 + ""
                    let v4395 : string = "vec![" + v4113 + "]"
                    let v4396 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4395 
                    let v4397 : string = "leptos::prelude::Fragment::new($0)"
                    let v4398 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4396 v4397 
                    let v4399 : string = "leptos::prelude::AnyView::from($0)"
                    let v4400 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4398 v4399 
                    let v4401 : string = "<" + v4168 + " " + v4394 + ">move || { v4400 }</" + v4168 + ">"
                    let v4402 : string = "leptos::prelude::view! { " + v4401 + " }"
                    let v4403 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4402 
                    let v4404 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4403 |> unbox
                    let v4405 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4406 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4404 v4405 
                    let v4407 : string = "attributeName=\"y\""
                    let v4408 : string = "attributeType=\"XML\""
                    let v4409 : string = "values=\"10; 5; 10\""
                    let v4410 : string = "begin=\"0.3s\""
                    let v4411 : string = "dur=\"0.6s\""
                    let v4412 : string = "repeatCount=\"indefinite\""
                    let v4413 : string = " " + v4407 + v4113 + ""
                    let v4414 : string = " " + v4408 + v4413 + ""
                    let v4415 : string = " " + v4409 + v4414 + ""
                    let v4416 : string = " " + v4410 + v4415 + ""
                    let v4417 : string = " " + v4411 + v4416 + ""
                    let v4418 : string = " " + v4412 + v4417 + ""
                    let v4419 : string = "vec![" + v4113 + "]"
                    let v4420 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4419 
                    let v4421 : string = "leptos::prelude::Fragment::new($0)"
                    let v4422 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4420 v4421 
                    let v4423 : string = "leptos::prelude::AnyView::from($0)"
                    let v4424 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4422 v4423 
                    let v4425 : string = "<" + v4168 + " " + v4418 + ">move || { v4424 }</" + v4168 + ">"
                    let v4426 : string = "leptos::prelude::view! { " + v4425 + " }"
                    let v4427 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4426 
                    let v4428 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4427 |> unbox
                    let v4429 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4430 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4428 v4429 
                    let v4431 : string = "v4430"
                    let v4432 : string = v4431 + v4113 
                    let v4433 : string = v4432 + v4113 
                    let v4434 : string = "v4406"
                    let v4435 : string = v4434 + v4227 
                    let v4436 : string = v4435 + v4433 
                    let v4437 : string = "v4382"
                    let v4438 : string = v4437 + v4227 
                    let v4439 : string = v4438 + v4436 
                    let v4440 : string = "vec![" + v4439 + "]"
                    let v4441 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4440 
                    let v4442 : string = "leptos::prelude::Fragment::new($0)"
                    let v4443 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4441 v4442 
                    let v4444 : string = "leptos::prelude::AnyView::from($0)"
                    let v4445 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4443 v4444 
                    let v4446 : string = "<" + v4239 + " " + v4358 + ">move || { v4445 }</" + v4239 + ">"
                    let v4447 : string = "leptos::prelude::view! { " + v4446 + " }"
                    let v4448 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4447 
                    let v4449 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v4448 |> unbox
                    let v4450 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4451 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4449 v4450 
                    let v4452 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4453 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4346 v4452 
                    let v4454 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4455 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4243 v4454 
                    let v4456 : string = "v4451"
                    let v4457 : string = v4456 + v4113 
                    let v4458 : string = v4457 + v4113 
                    let v4459 : string = "v4453"
                    let v4460 : string = v4459 + v4227 
                    let v4461 : string = v4460 + v4458 
                    let v4462 : string = "v4455"
                    let v4463 : string = v4462 + v4227 
                    let v4464 : string = v4463 + v4461 
                    let v4465 : string = "vec![" + v4464 + "]"
                    let v4466 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4465 
                    let v4467 : string = "leptos::prelude::Fragment::new($0)"
                    let v4468 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4466 v4467 
                    let v4469 : string = "leptos::prelude::AnyView::from($0)"
                    let v4470 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4468 v4469 
                    let v4471 : string = "svg"
                    let v4472 : string = "<" + v4471 + " " + v4137 + ">move || { v4470 }</" + v4471 + ">"
                    let v4473 : string = "leptos::prelude::view! { " + v4472 + " }"
                    let v4474 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4473 
                    let v4475 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4474 |> unbox
                    let v4476 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4477 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4475 v4476 
                    let v4478 : string = "Loading..."
                    (* run_target_args'
                    let v4483 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v4484 : string = "&*$0"
                    let v4485 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4478 v4484 
                    let _run_target_args'_v4483 = v4485 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v4486 : string = "&*$0"
                    let v4487 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4478 v4486 
                    let _run_target_args'_v4483 = v4487 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v4488 : string = "&*$0"
                    let v4489 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4478 v4488 
                    let _run_target_args'_v4483 = v4489 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v4491 : Ref<Str> = v4478 |> unbox<Ref<Str>>
                    let _run_target_args'_v4483 = v4491 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v4495 : Ref<Str> = v4478 |> unbox<Ref<Str>>
                    let _run_target_args'_v4483 = v4495 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v4499 : Ref<Str> = v4478 |> unbox<Ref<Str>>
                    let _run_target_args'_v4483 = v4499 
                    #endif
#else
                    let v4503 : Ref<Str> = v4478 |> unbox<Ref<Str>>
                    let _run_target_args'_v4483 = v4503 
                    #endif
                    let v4506 : Ref<Str> = _run_target_args'_v4483 
                    (* run_target_args'
                    let v4519 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v4520 : string = "String::from($0)"
                    let v4521 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4506 v4520 
                    let _run_target_args'_v4519 = v4521 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v4522 : string = "String::from($0)"
                    let v4523 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4506 v4522 
                    let _run_target_args'_v4519 = v4523 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v4524 : string = "String::from($0)"
                    let v4525 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4506 v4524 
                    let _run_target_args'_v4519 = v4525 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v4527 : std_string_String = v4506 |> unbox<std_string_String>
                    let _run_target_args'_v4519 = v4527 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v4531 : std_string_String = v4506 |> unbox<std_string_String>
                    let _run_target_args'_v4519 = v4531 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v4535 : std_string_String = v4506 |> unbox<std_string_String>
                    let _run_target_args'_v4519 = v4535 
                    #endif
#else
                    let v4539 : std_string_String = v4506 |> unbox<std_string_String>
                    let _run_target_args'_v4519 = v4539 
                    #endif
                    let v4542 : std_string_String = _run_target_args'_v4519 
                    let v4551 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v4552 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4542 v4551 
                    let v4553 : string = "v4552"
                    let v4554 : string = v4553 + v4113 
                    let v4555 : string = v4554 + v4113 
                    let v4556 : string = "v4477"
                    let v4557 : string = v4556 + v4227 
                    let v4558 : string = v4557 + v4555 
                    let v4559 : string = "vec![" + v4558 + "]"
                    let v4560 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4559 
                    let v4561 : string = "leptos::prelude::Fragment::new($0)"
                    let v4562 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4560 v4561 
                    let v4563 : string = "leptos::prelude::AnyView::from($0)"
                    let v4564 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4562 v4563 
                    let v4565 : string = "div"
                    let v4566 : string = "<" + v4565 + " " + v4116 + ">move || { v4564 }</" + v4565 + ">"
                    let v4567 : string = "leptos::prelude::view! { " + v4566 + " }"
                    let v4568 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4567 
                    let v4569 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4568 |> unbox
                    let v4570 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4571 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4569 v4570 
                    let v4572 : string = "v4571"
                    let v4573 : string = v4572 + v4113 
                    let v4574 : string = v4573 + v4113 
                    let v4575 : string = "vec![" + v4574 + "]"
                    let v4576 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4575 
                    let v4577 : string = "leptos::prelude::Fragment::new($0)"
                    let v4578 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4576 v4577 
                    let v4579 : string = "leptos::prelude::AnyView::from($0)"
                    let v4580 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4578 v4579 
                    let v4581 : string = "<" + v4565 + " " + v4114 + ">move || { v4580 }</" + v4565 + ">"
                    let v4582 : string = "leptos::prelude::view! { " + v4581 + " }"
                    let v4583 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4582 
                    let v4584 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4583 |> unbox
                    let v4585 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4586 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4584 v4585 
                    v4586
    let v4776 : string = "v4775"
    let v4777 : string = ""
    let v4778 : string = v4776 + v4777 
    let v4779 : string = v4778 + v4777 
    let v4780 : string = "v144"
    let v4781 : string = ", "
    let v4782 : string = v4780 + v4781 
    let v4783 : string = v4782 + v4779 
    let v4784 : string = "vec![" + v4783 + "]"
    let v4785 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4784 
    let v4786 : string = "leptos::prelude::Fragment::new($0)"
    let v4787 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4785 v4786 
    v4787
and closure337 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure338 () () : Ref<Lifetime<StaticLifetime, Str>> =
    let v0 : string = ""
    let v1 : string = "r#\"" + v0 + "\"#"
    let v2 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v1 
    v2
and closure339 () () : string =
    let v0 : string = "Debug"
    v0
and method282 () : (unit -> string) =
    closure339()
and closure341 () () : leptos_dom_Fragment =
    let v0 : string = "Transactions"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v53 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v53 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v57 
    #endif
#else
    let v61 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v41 = v61 
    #endif
    let v64 : std_string_String = _run_target_args'_v41 
    let v73 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v74 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v64 v73 
    let v75 : string = "v74"
    let v76 : string = ""
    let v77 : string = v75 + v76 
    let v78 : string = v77 + v76 
    let v79 : string = "vec![" + v78 + "]"
    let v80 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "leptos::prelude::Fragment::new($0)"
    let v82 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v80 v81 
    v82
and method283 () : (unit -> leptos_dom_Fragment) =
    closure341()
and closure343 () () : string =
    let v0 : string = "[max-height:70vh]"
    v0
and closure342 (v0 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>) () : leptos_dom_Fragment =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    (* run_target_args'
    let v7 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v8 : string = "format!(\"{:#?}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2 v8 
    let v10 : string = "fable_library_rust::String_::fromString($0)"
    let v11 : string = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let _run_target_args'_v7 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "format!(\"{:#?}\", $0)"
    let v13 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2 v12 
    let v14 : string = "fable_library_rust::String_::fromString($0)"
    let v15 : string = Fable.Core.RustInterop.emitRustExpr v13 v14 
    let _run_target_args'_v7 = v15 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v16 : string = "format!(\"{:#?}\", $0)"
    let v17 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2 v16 
    let v18 : string = "fable_library_rust::String_::fromString($0)"
    let v19 : string = Fable.Core.RustInterop.emitRustExpr v17 v18 
    let _run_target_args'_v7 = v19 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v21 : string = $"%A{v2}"
    let _run_target_args'_v7 = v21 
    #endif
#if FABLE_COMPILER_PYTHON
    let v25 : string = $"%A{v2}"
    let _run_target_args'_v7 = v25 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v29 : string = $"%A{v2}"
    let _run_target_args'_v7 = v29 
    #endif
#else
    let v33 : string = $"%A{v2}"
    let _run_target_args'_v7 = v33 
    #endif
    let v36 : string = _run_target_args'_v7 
    let v45 : string = "$0"
    let v46 : (unit -> string) = closure343()
    let v47 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v46 v45 
    let v48 : string = "class=move || \"[padding:1px] [font-size:12px] [line-height:12px] [text-wrap:pretty] \".to_owned() + &v47(())"
    let v49 : string = ""
    let v50 : string = " " + v48 + v49 + ""
    (* run_target_args'
    let v55 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v56 : string = "&*$0"
    let v57 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v36 v56 
    let _run_target_args'_v55 = v57 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v58 : string = "&*$0"
    let v59 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v36 v58 
    let _run_target_args'_v55 = v59 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v60 : string = "&*$0"
    let v61 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v36 v60 
    let _run_target_args'_v55 = v61 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v63 : Ref<Str> = v36 |> unbox<Ref<Str>>
    let _run_target_args'_v55 = v63 
    #endif
#if FABLE_COMPILER_PYTHON
    let v67 : Ref<Str> = v36 |> unbox<Ref<Str>>
    let _run_target_args'_v55 = v67 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v71 : Ref<Str> = v36 |> unbox<Ref<Str>>
    let _run_target_args'_v55 = v71 
    #endif
#else
    let v75 : Ref<Str> = v36 |> unbox<Ref<Str>>
    let _run_target_args'_v55 = v75 
    #endif
    let v78 : Ref<Str> = _run_target_args'_v55 
    (* run_target_args'
    let v91 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v92 : string = "String::from($0)"
    let v93 : std_string_String = Fable.Core.RustInterop.emitRustExpr v78 v92 
    let _run_target_args'_v91 = v93 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v94 : string = "String::from($0)"
    let v95 : std_string_String = Fable.Core.RustInterop.emitRustExpr v78 v94 
    let _run_target_args'_v91 = v95 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v96 : string = "String::from($0)"
    let v97 : std_string_String = Fable.Core.RustInterop.emitRustExpr v78 v96 
    let _run_target_args'_v91 = v97 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v99 : std_string_String = v78 |> unbox<std_string_String>
    let _run_target_args'_v91 = v99 
    #endif
#if FABLE_COMPILER_PYTHON
    let v103 : std_string_String = v78 |> unbox<std_string_String>
    let _run_target_args'_v91 = v103 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v107 : std_string_String = v78 |> unbox<std_string_String>
    let _run_target_args'_v91 = v107 
    #endif
#else
    let v111 : std_string_String = v78 |> unbox<std_string_String>
    let _run_target_args'_v91 = v111 
    #endif
    let v114 : std_string_String = _run_target_args'_v91 
    let v123 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v124 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v114 v123 
    let v125 : string = "v124"
    let v126 : string = v125 + v49 
    let v127 : string = v126 + v49 
    let v128 : string = "vec![" + v127 + "]"
    let v129 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v128 
    let v130 : string = "leptos::prelude::Fragment::new($0)"
    let v131 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v129 v130 
    let v132 : string = "leptos::prelude::AnyView::from($0)"
    let v133 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v131 v132 
    let v134 : string = "pre"
    let v135 : string = "<" + v134 + " " + v50 + ">move || { v133 }</" + v134 + ">"
    let v136 : string = "leptos::prelude::view! { " + v135 + " }"
    let v137 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v136 
    let v138 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v137 |> unbox
    let v139 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v140 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v138 v139 
    let v141 : string = "v140"
    let v142 : string = v141 + v49 
    let v143 : string = v142 + v49 
    let v144 : string = "vec![" + v143 + "]"
    let v145 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v144 
    let v146 : string = "leptos::prelude::Fragment::new($0)"
    let v147 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v145 v146 
    v147
and method284 (v0 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>) : (unit -> leptos_dom_Fragment) =
    closure342(v0)
and closure340 (v0 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>) () : leptos_dom_Fragment =
    let v1 : (unit -> leptos_dom_Fragment) = method283()
    let v2 : (unit -> leptos_dom_Fragment) = method284(v0)
    let v3 : string = "$0"
    let v4 : (unit -> string) = closure253()
    let v5 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4 v3 
    let v6 : string = "$0"
    let v7 : (unit -> string) = closure234()
    let v8 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v7 v6 
    let v9 : string = "$0"
    let v10 : (unit -> string) = closure235()
    let v11 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v10 v9 
    let v12 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v11(()) + \" \" + &v8(()) + \" \" + &v5(())"
    let v13 : string = ""
    let v14 : string = " " + v12 + v13 + ""
    let v15 : string = "$0"
    let v16 : (unit -> string) = closure236()
    let v17 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v16 v15 
    let v18 : string = "class=\"[font-size:12px] text-gray-400\""
    let v19 : string = " " + v18 + v13 + ""
    let v20 : leptos_dom_Fragment = v1 ()
    let v21 : string = "leptos::prelude::AnyView::from($0)"
    let v22 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : string = "dt"
    let v24 : string = "<" + v23 + " " + v19 + ">move || { v22 }</" + v23 + ">"
    let v25 : string = "leptos::prelude::view! { " + v24 + " }"
    let v26 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v25 
    let v27 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v26 |> unbox
    let v28 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v29 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v27 v28 
    let v30 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v17(())"
    let v31 : string = " " + v30 + v13 + ""
    let v32 : leptos_dom_Fragment = v2 ()
    let v33 : string = "leptos::prelude::AnyView::from($0)"
    let v34 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v32 v33 
    let v35 : string = "dd"
    let v36 : string = "<" + v35 + " " + v31 + ">move || { v34 }</" + v35 + ">"
    let v37 : string = "leptos::prelude::view! { " + v36 + " }"
    let v38 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v37 
    let v39 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v38 |> unbox
    let v40 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v41 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v39 v40 
    let v42 : string = "v41"
    let v43 : string = v42 + v13 
    let v44 : string = v43 + v13 
    let v45 : string = "v29"
    let v46 : string = ", "
    let v47 : string = v45 + v46 
    let v48 : string = v47 + v44 
    let v49 : string = "vec![" + v48 + "]"
    let v50 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v49 
    let v51 : string = "leptos::prelude::Fragment::new($0)"
    let v52 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v50 v51 
    let v53 : string = "leptos::prelude::AnyView::from($0)"
    let v54 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v52 v53 
    let v55 : string = "dl"
    let v56 : string = "<" + v55 + " " + v14 + ">move || { v54 }</" + v55 + ">"
    let v57 : string = "leptos::prelude::view! { " + v56 + " }"
    let v58 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v57 
    let v59 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v58 |> unbox
    let v60 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v61 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v59 v60 
    let v62 : string = "v61"
    let v63 : string = v62 + v13 
    let v64 : string = v63 + v13 
    let v65 : string = "vec![" + v64 + "]"
    let v66 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v65 
    let v67 : string = "leptos::prelude::Fragment::new($0)"
    let v68 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v66 v67 
    v68
and closure344 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_4 -> (* Settings *)
        true
    | _ ->
        false
and method285 (v0 : leptos_prelude_ReadSignal<US18>) : (unit -> bool) =
    closure344(v0)
and closure345 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_3 -> (* Transactions *)
        true
    | _ ->
        false
and method286 (v0 : leptos_prelude_ReadSignal<US18>) : (unit -> bool) =
    closure345(v0)
and closure346 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_2 -> (* Lists *)
        true
    | _ ->
        false
and method287 (v0 : leptos_prelude_ReadSignal<US18>) : (unit -> bool) =
    closure346(v0)
and closure347 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_1(v3) -> (* Dice *)
        match v3 with
        | US19_0 -> (* Dice' *)
            true
        | _ ->
            false
    | _ ->
        false
and method288 (v0 : leptos_prelude_ReadSignal<US18>) : (unit -> bool) =
    closure347(v0)
and closure348 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and closure349 (v0 : leptos_prelude_ArcMemo<string>) () : std_string_String =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "settings"
    let v4 : string = v2 + "#/" + v3 + ""
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v45 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v46 
    let _run_target_args'_v45 = v47 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v48 : string = "String::from($0)"
    let v49 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v48 
    let _run_target_args'_v45 = v49 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v50 : string = "String::from($0)"
    let v51 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v50 
    let _run_target_args'_v45 = v51 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v53 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v53 
    #endif
#if FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v57 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v61 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v61 
    #endif
#else
    let v65 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v65 
    #endif
    let v68 : std_string_String = _run_target_args'_v45 
    v68
and closure350 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_4 -> (* Settings *)
        true
    | _ ->
        false
and closure351 (v0 : leptos_prelude_ReadSignal<US18>) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : bool =
        match v2 with
        | US18_4 -> (* Settings *)
            true
        | _ ->
            false
    if v3 then
        let v4 : string = "border-grey-200 text-grey-900"
        let v5 : string = "r#\"" + v4 + "\"#"
        let v6 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v5 
        v6
    else
        let v7 : string = "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700"
        let v8 : string = "r#\"" + v7 + "\"#"
        let v9 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v8 
        v9
and closure352 (v0 : leptos_prelude_ArcMemo<string>) () : std_string_String =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "transactions"
    let v4 : string = v2 + "#/" + v3 + ""
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v45 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v46 
    let _run_target_args'_v45 = v47 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v48 : string = "String::from($0)"
    let v49 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v48 
    let _run_target_args'_v45 = v49 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v50 : string = "String::from($0)"
    let v51 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v50 
    let _run_target_args'_v45 = v51 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v53 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v53 
    #endif
#if FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v57 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v61 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v61 
    #endif
#else
    let v65 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v65 
    #endif
    let v68 : std_string_String = _run_target_args'_v45 
    v68
and closure353 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_3 -> (* Transactions *)
        true
    | _ ->
        false
and closure354 (v0 : leptos_prelude_ReadSignal<US18>) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : bool =
        match v2 with
        | US18_3 -> (* Transactions *)
            true
        | _ ->
            false
    if v3 then
        let v4 : string = "border-grey-200 text-grey-900"
        let v5 : string = "r#\"" + v4 + "\"#"
        let v6 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v5 
        v6
    else
        let v7 : string = "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700"
        let v8 : string = "r#\"" + v7 + "\"#"
        let v9 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v8 
        v9
and closure355 (v0 : leptos_prelude_ArcMemo<string>) () : std_string_String =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "lists"
    let v4 : string = v2 + "#/" + v3 + ""
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v45 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v46 
    let _run_target_args'_v45 = v47 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v48 : string = "String::from($0)"
    let v49 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v48 
    let _run_target_args'_v45 = v49 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v50 : string = "String::from($0)"
    let v51 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v50 
    let _run_target_args'_v45 = v51 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v53 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v53 
    #endif
#if FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v57 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v61 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v61 
    #endif
#else
    let v65 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v65 
    #endif
    let v68 : std_string_String = _run_target_args'_v45 
    v68
and closure356 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_2 -> (* Lists *)
        true
    | _ ->
        false
and closure357 (v0 : leptos_prelude_ReadSignal<US18>) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : bool =
        match v2 with
        | US18_2 -> (* Lists *)
            true
        | _ ->
            false
    if v3 then
        let v4 : string = "border-grey-200 text-grey-900"
        let v5 : string = "r#\"" + v4 + "\"#"
        let v6 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v5 
        v6
    else
        let v7 : string = "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700"
        let v8 : string = "r#\"" + v7 + "\"#"
        let v9 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v8 
        v9
and closure358 (v0 : leptos_prelude_ArcMemo<string>) () : std_string_String =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "dice"
    let v4 : string = v2 + "#/" + v3 + ""
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v45 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v46 
    let _run_target_args'_v45 = v47 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v48 : string = "String::from($0)"
    let v49 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v48 
    let _run_target_args'_v45 = v49 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v50 : string = "String::from($0)"
    let v51 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v50 
    let _run_target_args'_v45 = v51 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v53 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v53 
    #endif
#if FABLE_COMPILER_PYTHON
    let v57 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v57 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v61 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v61 
    #endif
#else
    let v65 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v45 = v65 
    #endif
    let v68 : std_string_String = _run_target_args'_v45 
    v68
and closure359 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_1(v3) -> (* Dice *)
        match v3 with
        | US19_0 -> (* Dice' *)
            true
        | _ ->
            false
    | _ ->
        false
and closure360 (v0 : leptos_prelude_ReadSignal<US18>) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v5 : bool =
        match v2 with
        | US18_1(v3) -> (* Dice *)
            match v3 with
            | US19_0 -> (* Dice' *)
                true
            | _ ->
                false
        | _ ->
            false
    if v5 then
        let v6 : string = "border-grey-200 text-grey-900"
        let v7 : string = "r#\"" + v6 + "\"#"
        let v8 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v7 
        v8
    else
        let v9 : string = "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700"
        let v10 : string = "r#\"" + v9 + "\"#"
        let v11 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v10 
        v11
and closure5 () (v0 : int32) : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> =
    let v1 : string = "home.render () / router: " + string v0 + ""
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
    let v5 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = "$0.unwrap()"
    let v7 : Heap2 = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : string = "state_core.use_database (1)"
    let v9 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v10 : bool = Fable.Core.RustInterop.emitRustExpr v8 v9 
    let v11 : unit = ()
    let v12 : string = $"true; let _func0_from_v11 = Func0::from(move || {{ //"
    let v13 : bool = Fable.Core.RustInterop.emitRustExpr () v12 
    let v14 : string = "true; let __future_init = Box::pin(/*"
    let v15 : bool = Fable.Core.RustInterop.emitRustExpr () v14 
    let v16 : string = "*/ async move { /*"
    let v17 : bool = Fable.Core.RustInterop.emitRustExpr () v16 
    let v18 : string = "*/ ()"
    let v19 : bool = Fable.Core.RustInterop.emitRustExpr () v18 
    let v20 : string = "state_core.use_database (2) / database new_local_resource"
    let v21 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : string = "state_core.build_database ()"
    let v24 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr v23 v24 
    let v26 : string = "true; let __future_init = Box::pin(/*"
    let v27 : bool = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : string = "*/ async { /*"
    let v29 : bool = Fable.Core.RustInterop.emitRustExpr () v28 
    let v30 : string = "*/ ()"
    let v31 : bool = Fable.Core.RustInterop.emitRustExpr () v30 
    let v32 : string = "Box::pin(rexie::Rexie::builder(\"database\").version(1).add_object_store(rexie::ObjectStore::new(\"store\")).build())"
    let v33 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v32 
    let v34 : string = "v33.await"
    let v35 : Result<rexie_Rexie, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v34 
    let v36 : (rexie_Error -> std_string_String) = method6()
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "$0.map_err(|x| $1(x))"
    let v40 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v35, v36) v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "$0.map_err(|x| $1(x))"
    let v42 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v35, v36) v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "$0.map_err(|x| $1(x))"
    let v44 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v35, v36) v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v45 : Result<rexie_Rexie, std_string_String> = match v35 with Ok x -> Ok x | Error x -> Error (v36 x)
    let _run_target_args'_v38 = v45 
    #endif
#if FABLE_COMPILER_PYTHON
    let v46 : Result<rexie_Rexie, std_string_String> = match v35 with Ok x -> Ok x | Error x -> Error (v36 x)
    let _run_target_args'_v38 = v46 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v47 : Result<rexie_Rexie, std_string_String> = match v35 with Ok x -> Ok x | Error x -> Error (v36 x)
    let _run_target_args'_v38 = v47 
    #endif
#else
    let v48 : Result<rexie_Rexie, std_string_String> = match v35 with Ok x -> Ok x | Error x -> Error (v36 x)
    let _run_target_args'_v38 = v48 
    #endif
    let v49 : Result<rexie_Rexie, std_string_String> = _run_target_args'_v38 
    let v52 : string = ""
    let v53 : string = "}"
    let v54 : string = v52 + v53 
    let x = v49 //
    let v55 : _ = x
    let v56 : unit = ()
    (* run_target_args'
    let v57 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v58 : string = $"true; let _fix_closure_v56 = $0"
    let v59 : bool = Fable.Core.RustInterop.emitRustExpr v55 v58 
    let _run_target_args'_v57 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v60 : string = $"true; let _fix_closure_v56 = $0"
    let v61 : bool = Fable.Core.RustInterop.emitRustExpr v55 v60 
    let _run_target_args'_v57 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v62 : string = $"true; let _fix_closure_v56 = $0"
    let v63 : bool = Fable.Core.RustInterop.emitRustExpr v55 v62 
    let _run_target_args'_v57 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v57 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v57 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v57 = false 
    #endif
#else
    let _run_target_args'_v57 = false 
    #endif
    let v64 : bool = _run_target_args'_v57 
    let v65 : string = $"true; _fix_closure_v56 " + v54 + "); " + v52 + " // rust.fix_closure'"
    let v66 : bool = Fable.Core.RustInterop.emitRustExpr () v65 
    let v67 : string = "__future_init"
    let v68 : _ = Fable.Core.RustInterop.emitRustExpr () v67 
    let v69 : string = "v68"
    let v70 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v69 
    let v71 : string = "v70.await"
    let v72 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v71 
    (* run_target_args'
    let v74 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v75 : string = "$0.unwrap()"
    let v76 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v72 v75 
    let _run_target_args'_v74 = v76 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v77 : string = "$0.unwrap()"
    let v78 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v72 v77 
    let _run_target_args'_v74 = v78 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v79 : string = "$0.unwrap()"
    let v80 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v72 v79 
    let _run_target_args'_v74 = v80 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v81 : rexie_Rexie = match v72 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v74 = v81 
    #endif
#if FABLE_COMPILER_PYTHON
    let v82 : rexie_Rexie = match v72 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v74 = v82 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v83 : rexie_Rexie = match v72 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v74 = v83 
    #endif
#else
    let v84 : rexie_Rexie = match v72 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v74 = v84 
    #endif
    let v85 : rexie_Rexie = _run_target_args'_v74 
    let v88 : (rexie_Rexie -> rexie_Rexie) = method7()
    let v89 : rexie_Rexie = v88 v85
    let v90 : string = "std::sync::Arc::new(v89)"
    let v91 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v90 
    let v93 : string = $"%A{v91}"
    let v96 : string = "state_core.use_database (3) / database new_local_resource / result: " + string v93 + ""
    let v97 : int64 = 200L
    let v98 : string = method8(v97, v96)
    let v99 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v100 : bool = Fable.Core.RustInterop.emitRustExpr v98 v99 
    let v101 : string = v52 + v53 
    let x = v91 //
    let v102 : _ = x
    let v103 : unit = ()
    (* run_target_args'
    let v104 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v105 : string = $"true; let _fix_closure_v103 = $0"
    let v106 : bool = Fable.Core.RustInterop.emitRustExpr v102 v105 
    let _run_target_args'_v104 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v107 : string = $"true; let _fix_closure_v103 = $0"
    let v108 : bool = Fable.Core.RustInterop.emitRustExpr v102 v107 
    let _run_target_args'_v104 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v109 : string = $"true; let _fix_closure_v103 = $0"
    let v110 : bool = Fable.Core.RustInterop.emitRustExpr v102 v109 
    let _run_target_args'_v104 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v104 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v104 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v104 = false 
    #endif
#else
    let _run_target_args'_v104 = false 
    #endif
    let v111 : bool = _run_target_args'_v104 
    let v112 : string = $"true; _fix_closure_v103 " + v101 + "); " + v52 + " // rust.fix_closure'"
    let v113 : bool = Fable.Core.RustInterop.emitRustExpr () v112 
    let v114 : string = "__future_init"
    let v115 : _ = Fable.Core.RustInterop.emitRustExpr () v114 
    let v116 : string = "v115"
    let v117 : std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>> = Fable.Core.RustInterop.emitRustExpr () v116 
    let v118 : string = $"true; $0 /*"
    let v119 : bool = Fable.Core.RustInterop.emitRustExpr v117 v118 
    let v120 : string = $"*/ }}); //"
    let v121 : bool = Fable.Core.RustInterop.emitRustExpr () v120 
    let v122 : string = $"_func0_from_v11"
    let v123 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>>> = Fable.Core.RustInterop.emitRustExpr () v122 
    let v124 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v125 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v123 v124 
    let v126 : string = "state_core.use_core_database (1)"
    let v127 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v128 : bool = Fable.Core.RustInterop.emitRustExpr v126 v127 
    let v129 : unit = ()
    let v130 : string = $"true; let _func0_from_v129 = Func0::from(move || {{ //"
    let v131 : bool = Fable.Core.RustInterop.emitRustExpr () v130 
    let v132 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v133 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v125 v132 
    let v134 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v135 : bool = Fable.Core.RustInterop.emitRustExpr v133 v134 
    let v136 : string = "x"
    let v137 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v136 
    let v138 : (unit -> unit) = closure8()
    let _v138 = true
    let v139 : string = "PartialEqWrapper($0)"
    let v140 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v137 v139 
    let v141 : string = "true; $0 })"
    let v142 : bool = Fable.Core.RustInterop.emitRustExpr v140 v141 
    let v143 : string = "_optionm_map_"
    let v144 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr () v143 
    let v145 : string = "true; let __future_init = Box::pin(/*"
    let v146 : bool = Fable.Core.RustInterop.emitRustExpr () v145 
    let v147 : string = "*/ async move { /*"
    let v148 : bool = Fable.Core.RustInterop.emitRustExpr () v147 
    let v149 : string = "*/ ()"
    let v150 : bool = Fable.Core.RustInterop.emitRustExpr () v149 
    let v152 : string = $"%A{v144}"
    let v155 : string = "state_core.use_core_database (2) / core_state_heap new_local_resource / database: " + v152 + ""
    let v156 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v157 : bool = Fable.Core.RustInterop.emitRustExpr v155 v156 
    let v158 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v159 : bool = Fable.Core.RustInterop.emitRustExpr v144 v158 
    let v160 : string = "x"
    let v161 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr () v160 
    let v162 : string = "$0.0"
    let v163 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr v161 v162 
    let v164 : string = "true; $0 })"
    let v165 : bool = Fable.Core.RustInterop.emitRustExpr v163 v164 
    let v166 : string = "_optionm_map_"
    let v167 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr () v166 
    let v170 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v171 : US2 option = v167 |> Option.map v170 
    let v191 : US2 = US2_1
    let v192 : US2 = v171 |> Option.defaultValue v191 
    let v654 : US3 =
        match v192 with
        | US2_1 -> (* None *)
            US3_1
        | US2_0(v196) -> (* Some *)
            let v197 : string = "core-state-heap"
            let v198 : string = "state_core.get_data () / id: " + v197 + ""
            let v199 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v200 : bool = Fable.Core.RustInterop.emitRustExpr v198 v199 
            let v201 : string = "true; let __future_init = Box::pin(/*"
            let v202 : bool = Fable.Core.RustInterop.emitRustExpr () v201 
            let v203 : string = "*/ async { /*"
            let v204 : bool = Fable.Core.RustInterop.emitRustExpr () v203 
            let v205 : string = "*/ ()"
            let v206 : bool = Fable.Core.RustInterop.emitRustExpr () v205 
            let v207 : string = "store"
            let v208 : (string []) = [|v207|]
            let v209 : string = "$0.to_vec()"
            let v210 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v208 v209 
            let v211 : unit = ()
            let v212 : string = $"true; let _func1_from_v211 = Func1::from(move |value| {{ //"
            let v213 : bool = Fable.Core.RustInterop.emitRustExpr () v212 
            let v214 : string = $"value"
            let v215 : string = Fable.Core.RustInterop.emitRustExpr () v214 
            (* run_target_args'
            let v220 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v221 : string = "&*$0"
            let v222 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v215 v221 
            let _run_target_args'_v220 = v222 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v223 : string = "&*$0"
            let v224 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v215 v223 
            let _run_target_args'_v220 = v224 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v225 : string = "&*$0"
            let v226 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v215 v225 
            let _run_target_args'_v220 = v226 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v228 : Ref<Str> = v215 |> unbox<Ref<Str>>
            let _run_target_args'_v220 = v228 
            #endif
#if FABLE_COMPILER_PYTHON
            let v232 : Ref<Str> = v215 |> unbox<Ref<Str>>
            let _run_target_args'_v220 = v232 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v236 : Ref<Str> = v215 |> unbox<Ref<Str>>
            let _run_target_args'_v220 = v236 
            #endif
#else
            let v240 : Ref<Str> = v215 |> unbox<Ref<Str>>
            let _run_target_args'_v220 = v240 
            #endif
            let v243 : Ref<Str> = _run_target_args'_v220 
            (* run_target_args'
            let v256 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v257 : string = "String::from($0)"
            let v258 : std_string_String = Fable.Core.RustInterop.emitRustExpr v243 v257 
            let _run_target_args'_v256 = v258 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v259 : string = "String::from($0)"
            let v260 : std_string_String = Fable.Core.RustInterop.emitRustExpr v243 v259 
            let _run_target_args'_v256 = v260 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v261 : string = "String::from($0)"
            let v262 : std_string_String = Fable.Core.RustInterop.emitRustExpr v243 v261 
            let _run_target_args'_v256 = v262 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v264 : std_string_String = v243 |> unbox<std_string_String>
            let _run_target_args'_v256 = v264 
            #endif
#if FABLE_COMPILER_PYTHON
            let v268 : std_string_String = v243 |> unbox<std_string_String>
            let _run_target_args'_v256 = v268 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v272 : std_string_String = v243 |> unbox<std_string_String>
            let _run_target_args'_v256 = v272 
            #endif
#else
            let v276 : std_string_String = v243 |> unbox<std_string_String>
            let _run_target_args'_v256 = v276 
            #endif
            let v279 : std_string_String = _run_target_args'_v256 
            let func1_from_result = v279 //
            let v288 : _ = func1_from_result
            let v289 : string = $"true; $0 /*"
            let v290 : bool = Fable.Core.RustInterop.emitRustExpr v288 v289 
            let v291 : string = $"*/ }}); //"
            let v292 : bool = Fable.Core.RustInterop.emitRustExpr () v291 
            let v293 : string = $"_func1_from_v211"
            let v294 : Func0<string, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v293 
            let v295 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v296 : (string -> std_string_String) = closure10(v294)
            let v297 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v210, v296) v295 
            let v298 : std_sync_Arc<rexie_Rexie> = method11(v196)
            let v299 : string = "$0.transaction(&v297, rexie::TransactionMode::ReadOnly)"
            let v300 : Result<rexie_Transaction, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v298 v299 
            let v301 : (rexie_Error -> std_string_String) = method12()
            (* run_target_args'
            let v303 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v304 : string = "$0.map_err(|x| $1(x))"
            let v305 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v300, v301) v304 
            let _run_target_args'_v303 = v305 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v306 : string = "$0.map_err(|x| $1(x))"
            let v307 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v300, v301) v306 
            let _run_target_args'_v303 = v307 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v308 : string = "$0.map_err(|x| $1(x))"
            let v309 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v300, v301) v308 
            let _run_target_args'_v303 = v309 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v310 : Result<rexie_Transaction, std_string_String> = match v300 with Ok x -> Ok x | Error x -> Error (v301 x)
            let _run_target_args'_v303 = v310 
            #endif
#if FABLE_COMPILER_PYTHON
            let v311 : Result<rexie_Transaction, std_string_String> = match v300 with Ok x -> Ok x | Error x -> Error (v301 x)
            let _run_target_args'_v303 = v311 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v312 : Result<rexie_Transaction, std_string_String> = match v300 with Ok x -> Ok x | Error x -> Error (v301 x)
            let _run_target_args'_v303 = v312 
            #endif
#else
            let v313 : Result<rexie_Transaction, std_string_String> = match v300 with Ok x -> Ok x | Error x -> Error (v301 x)
            let _run_target_args'_v303 = v313 
            #endif
            let v314 : Result<rexie_Transaction, std_string_String> = _run_target_args'_v303 
            let v317 : string = "$0?"
            let v318 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v314 v317 
            let v319 : string = method13()
            (* run_target_args'
            let v324 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v325 : string = "&*$0"
            let v326 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v319 v325 
            let _run_target_args'_v324 = v326 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v327 : string = "&*$0"
            let v328 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v319 v327 
            let _run_target_args'_v324 = v328 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v329 : string = "&*$0"
            let v330 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v319 v329 
            let _run_target_args'_v324 = v330 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v332 : Ref<Str> = v319 |> unbox<Ref<Str>>
            let _run_target_args'_v324 = v332 
            #endif
#if FABLE_COMPILER_PYTHON
            let v336 : Ref<Str> = v319 |> unbox<Ref<Str>>
            let _run_target_args'_v324 = v336 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v340 : Ref<Str> = v319 |> unbox<Ref<Str>>
            let _run_target_args'_v324 = v340 
            #endif
#else
            let v344 : Ref<Str> = v319 |> unbox<Ref<Str>>
            let _run_target_args'_v324 = v344 
            #endif
            let v347 : Ref<Str> = _run_target_args'_v324 
            let v356 : string = "v318.store($0)"
            let v357 : Result<rexie_Store, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v347 v356 
            let v358 : (rexie_Error -> std_string_String) = method14()
            (* run_target_args'
            let v360 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v361 : string = "$0.map_err(|x| $1(x))"
            let v362 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v357, v358) v361 
            let _run_target_args'_v360 = v362 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v363 : string = "$0.map_err(|x| $1(x))"
            let v364 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v357, v358) v363 
            let _run_target_args'_v360 = v364 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v365 : string = "$0.map_err(|x| $1(x))"
            let v366 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v357, v358) v365 
            let _run_target_args'_v360 = v366 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v367 : Result<rexie_Store, std_string_String> = match v357 with Ok x -> Ok x | Error x -> Error (v358 x)
            let _run_target_args'_v360 = v367 
            #endif
#if FABLE_COMPILER_PYTHON
            let v368 : Result<rexie_Store, std_string_String> = match v357 with Ok x -> Ok x | Error x -> Error (v358 x)
            let _run_target_args'_v360 = v368 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v369 : Result<rexie_Store, std_string_String> = match v357 with Ok x -> Ok x | Error x -> Error (v358 x)
            let _run_target_args'_v360 = v369 
            #endif
#else
            let v370 : Result<rexie_Store, std_string_String> = match v357 with Ok x -> Ok x | Error x -> Error (v358 x)
            let _run_target_args'_v360 = v370 
            #endif
            let v371 : Result<rexie_Store, std_string_String> = _run_target_args'_v360 
            let v374 : string = "$0?"
            let v375 : rexie_Store = Fable.Core.RustInterop.emitRustExpr v371 v374 
            let v376 : string = method15()
            (* run_target_args'
            let v381 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v382 : string = "&*$0"
            let v383 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v376 v382 
            let _run_target_args'_v381 = v383 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v384 : string = "&*$0"
            let v385 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v376 v384 
            let _run_target_args'_v381 = v385 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v386 : string = "&*$0"
            let v387 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v376 v386 
            let _run_target_args'_v381 = v387 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v389 : Ref<Str> = v376 |> unbox<Ref<Str>>
            let _run_target_args'_v381 = v389 
            #endif
#if FABLE_COMPILER_PYTHON
            let v393 : Ref<Str> = v376 |> unbox<Ref<Str>>
            let _run_target_args'_v381 = v393 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v397 : Ref<Str> = v376 |> unbox<Ref<Str>>
            let _run_target_args'_v381 = v397 
            #endif
#else
            let v401 : Ref<Str> = v376 |> unbox<Ref<Str>>
            let _run_target_args'_v381 = v401 
            #endif
            let v404 : Ref<Str> = _run_target_args'_v381 
            let v413 : string = "wasm_bindgen::JsValue::from_str($0)"
            let v414 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr v404 v413 
            let v415 : string = $"Box::pin(rexie::Store::get(&v375, v414))"
            let v416 : std_pin_Pin<Box<Dyn<std_future_Future<Result<wasm_bindgen_JsValue option, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v415 
            let v417 : string = "v416.await"
            let v418 : Result<wasm_bindgen_JsValue option, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v417 
            let v419 : (rexie_Error -> std_string_String) = method16()
            (* run_target_args'
            let v421 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v422 : string = "$0.map_err(|x| $1(x))"
            let v423 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v418, v419) v422 
            let _run_target_args'_v421 = v423 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v424 : string = "$0.map_err(|x| $1(x))"
            let v425 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v418, v419) v424 
            let _run_target_args'_v421 = v425 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v426 : string = "$0.map_err(|x| $1(x))"
            let v427 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v418, v419) v426 
            let _run_target_args'_v421 = v427 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v428 : Result<wasm_bindgen_JsValue option, std_string_String> = match v418 with Ok x -> Ok x | Error x -> Error (v419 x)
            let _run_target_args'_v421 = v428 
            #endif
#if FABLE_COMPILER_PYTHON
            let v429 : Result<wasm_bindgen_JsValue option, std_string_String> = match v418 with Ok x -> Ok x | Error x -> Error (v419 x)
            let _run_target_args'_v421 = v429 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v430 : Result<wasm_bindgen_JsValue option, std_string_String> = match v418 with Ok x -> Ok x | Error x -> Error (v419 x)
            let _run_target_args'_v421 = v430 
            #endif
#else
            let v431 : Result<wasm_bindgen_JsValue option, std_string_String> = match v418 with Ok x -> Ok x | Error x -> Error (v419 x)
            let _run_target_args'_v421 = v431 
            #endif
            let v432 : Result<wasm_bindgen_JsValue option, std_string_String> = _run_target_args'_v421 
            let v435 : string = "$0?"
            let v436 : wasm_bindgen_JsValue option = Fable.Core.RustInterop.emitRustExpr v432 v435 
            let v439 : (wasm_bindgen_JsValue -> US4) = method17()
            let v440 : US4 option = v436 |> Option.map v439 
            let v460 : US4 = US4_1
            let v461 : US4 = v440 |> Option.defaultValue v460 
            let v575 : US3 =
                match v461 with
                | US4_1 -> (* None *)
                    US3_1
                | US4_0(v465) -> (* Some *)
                    let v466 : wasm_bindgen_JsValue = method18(v465)
                    let v467 : string = "serde_wasm_bindgen::from_value(v466)"
                    let v468 : Result<serde_json_Value option, serde_wasm_bindgen_Error> = Fable.Core.RustInterop.emitRustExpr () v467 
                    let v469 : (serde_wasm_bindgen_Error -> std_string_String) = method19()
                    (* run_target_args'
                    let v471 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v472 : string = "$0.map_err(|x| $1(x))"
                    let v473 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v468, v469) v472 
                    let _run_target_args'_v471 = v473 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v474 : string = "$0.map_err(|x| $1(x))"
                    let v475 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v468, v469) v474 
                    let _run_target_args'_v471 = v475 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v476 : string = "$0.map_err(|x| $1(x))"
                    let v477 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v468, v469) v476 
                    let _run_target_args'_v471 = v477 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v478 : Result<serde_json_Value option, std_string_String> = match v468 with Ok x -> Ok x | Error x -> Error (v469 x)
                    let _run_target_args'_v471 = v478 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v479 : Result<serde_json_Value option, std_string_String> = match v468 with Ok x -> Ok x | Error x -> Error (v469 x)
                    let _run_target_args'_v471 = v479 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v480 : Result<serde_json_Value option, std_string_String> = match v468 with Ok x -> Ok x | Error x -> Error (v469 x)
                    let _run_target_args'_v471 = v480 
                    #endif
#else
                    let v481 : Result<serde_json_Value option, std_string_String> = match v468 with Ok x -> Ok x | Error x -> Error (v469 x)
                    let _run_target_args'_v471 = v481 
                    #endif
                    let v482 : Result<serde_json_Value option, std_string_String> = _run_target_args'_v471 
                    let v485 : string = "$0?"
                    let v486 : serde_json_Value option = Fable.Core.RustInterop.emitRustExpr v482 v485 
                    let v489 : (serde_json_Value -> US5) = method20()
                    let v490 : US5 option = v486 |> Option.map v489 
                    let v510 : US5 = US5_1
                    let v511 : US5 = v490 |> Option.defaultValue v510 
                    match v511 with
                    | US5_1 -> (* None *)
                        US3_1
                    | US5_0(v515) -> (* Some *)
                        let v516 : serde_json_Value = method21(v515)
                        let v517 : string = "serde_json::from_value(v516)"
                        let v518 : Result<Vec<uint8>, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr () v517 
                        let v519 : (serde_json_Error -> std_string_String) = method22()
                        (* run_target_args'
                        let v521 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v522 : string = "$0.map_err(|x| $1(x))"
                        let v523 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v518, v519) v522 
                        let _run_target_args'_v521 = v523 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v524 : string = "$0.map_err(|x| $1(x))"
                        let v525 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v518, v519) v524 
                        let _run_target_args'_v521 = v525 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v526 : string = "$0.map_err(|x| $1(x))"
                        let v527 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v518, v519) v526 
                        let _run_target_args'_v521 = v527 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v528 : Result<Vec<uint8>, std_string_String> = match v518 with Ok x -> Ok x | Error x -> Error (v519 x)
                        let _run_target_args'_v521 = v528 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v529 : Result<Vec<uint8>, std_string_String> = match v518 with Ok x -> Ok x | Error x -> Error (v519 x)
                        let _run_target_args'_v521 = v529 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v530 : Result<Vec<uint8>, std_string_String> = match v518 with Ok x -> Ok x | Error x -> Error (v519 x)
                        let _run_target_args'_v521 = v530 
                        #endif
#else
                        let v531 : Result<Vec<uint8>, std_string_String> = match v518 with Ok x -> Ok x | Error x -> Error (v519 x)
                        let _run_target_args'_v521 = v531 
                        #endif
                        let v532 : Result<Vec<uint8>, std_string_String> = _run_target_args'_v521 
                        let v535 : string = "$0?"
                        let v536 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v532 v535 
                        let v537 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                        let v538 : (uint8 []) = Fable.Core.RustInterop.emitRustExpr v536 v537 
                        let v539 : int32 = v538.Length
                        let v540 : string = "state_core.get_data () / data_len: " + string v539 + ""
                        let v541 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v542 : bool = Fable.Core.RustInterop.emitRustExpr v540 v541 
                        let v543 : string = "$0.to_vec()"
                        let v544 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v538 v543 
                        let v545 : string = "v544.as_slice()"
                        let v546 : Ref<Slice<uint8>> = Fable.Core.RustInterop.emitRustExpr () v545 
                        let v547 : string = "true; let mut v546 = v546"
                        let v548 : bool = Fable.Core.RustInterop.emitRustExpr () v547 
                        let v549 : string = "borsh::BorshDeserialize::deserialize(&mut v546)"
                        let v550 : Result<Heap3 option, borsh_io_Error> = Fable.Core.RustInterop.emitRustExpr () v549 
                        let v551 : (borsh_io_Error -> std_string_String) = method23()
                        (* run_target_args'
                        let v553 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v554 : string = "$0.map_err(|x| $1(x))"
                        let v555 : Result<Heap3 option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v550, v551) v554 
                        let _run_target_args'_v553 = v555 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v556 : string = "$0.map_err(|x| $1(x))"
                        let v557 : Result<Heap3 option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v550, v551) v556 
                        let _run_target_args'_v553 = v557 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v558 : string = "$0.map_err(|x| $1(x))"
                        let v559 : Result<Heap3 option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v550, v551) v558 
                        let _run_target_args'_v553 = v559 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v560 : Result<Heap3 option, std_string_String> = match v550 with Ok x -> Ok x | Error x -> Error (v551 x)
                        let _run_target_args'_v553 = v560 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v561 : Result<Heap3 option, std_string_String> = match v550 with Ok x -> Ok x | Error x -> Error (v551 x)
                        let _run_target_args'_v553 = v561 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v562 : Result<Heap3 option, std_string_String> = match v550 with Ok x -> Ok x | Error x -> Error (v551 x)
                        let _run_target_args'_v553 = v562 
                        #endif
#else
                        let v563 : Result<Heap3 option, std_string_String> = match v550 with Ok x -> Ok x | Error x -> Error (v551 x)
                        let _run_target_args'_v553 = v563 
                        #endif
                        let v564 : Result<Heap3 option, std_string_String> = _run_target_args'_v553 
                        let v567 : string = "$0?"
                        let v568 : Heap3 option = Fable.Core.RustInterop.emitRustExpr v564 v567 
                        US3_0(v568)
            let v586 : Heap3 option option =
                match v575 with
                | US3_1 -> (* None *)
                    let v582 : Heap3 option option = None
                    v582
                | US3_0(v576) -> (* Some *)
                    let v578 : Heap3 option option = Some v576 
                    v578
            let v588 : Result<Heap3 option option, std_string_String> = Ok v586 
            let v591 : string = v52 + v53 
            let x = v588 //
            let v592 : _ = x
            let v593 : unit = ()
            (* run_target_args'
            let v594 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v595 : string = $"true; let _fix_closure_v593 = $0"
            let v596 : bool = Fable.Core.RustInterop.emitRustExpr v592 v595 
            let _run_target_args'_v594 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v597 : string = $"true; let _fix_closure_v593 = $0"
            let v598 : bool = Fable.Core.RustInterop.emitRustExpr v592 v597 
            let _run_target_args'_v594 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v599 : string = $"true; let _fix_closure_v593 = $0"
            let v600 : bool = Fable.Core.RustInterop.emitRustExpr v592 v599 
            let _run_target_args'_v594 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v594 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v594 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v594 = false 
            #endif
#else
            let _run_target_args'_v594 = false 
            #endif
            let v601 : bool = _run_target_args'_v594 
            let v602 : string = $"true; _fix_closure_v593 " + v591 + "); " + v52 + " // rust.fix_closure'"
            let v603 : bool = Fable.Core.RustInterop.emitRustExpr () v602 
            let v604 : string = "__future_init"
            let v605 : _ = Fable.Core.RustInterop.emitRustExpr () v604 
            let v606 : string = "v605"
            let v607 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap3 option option, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v606 
            let v608 : string = "v607.await"
            let v609 : Result<Heap3 option option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v608 
            let v610 : (Heap3 option option -> US6) = method24()
            let v611 : (std_string_String -> US6) = method25()
            let v613 : US6 = match v609 with Ok x -> v610 x | Error x -> v611 x
            match v613 with
            | US6_1(v645) -> (* Error *)
                let v646 : string = "state_core.use_core_database (3) / error: " + string v645 + ""
                let v647 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v648 : bool = Fable.Core.RustInterop.emitRustExpr v646 v647 
                US3_1
            | US6_0(v616) -> (* Ok *)
                let v619 : (Heap3 option -> US3) = method26()
                let v620 : US3 option = v616 |> Option.map v619 
                let v640 : US3 = US3_1
                let v641 : US3 = v620 |> Option.defaultValue v640 
                v641
    let v687 : US7 =
        match v654 with
        | US3_1 -> (* None *)
            US7_1
        | US3_0(v655) -> (* Some *)
            let v658 : (Heap3 -> US8) = method27()
            let v659 : US8 option = v655 |> Option.map v658 
            let v679 : US8 = US8_1
            let v680 : US8 = v659 |> Option.defaultValue v679 
            US7_0(v680)
    let v694 : US8 =
        match v687 with
        | US7_0(v688) -> (* Some *)
            match v688 with
            | US8_0(v689) -> (* Some *)
                US8_0(v689)
            | _ ->
                US8_1
        | _ ->
            US8_1
    let v695 : string = v52 + v53 
    let x = v694 //
    let v696 : _ = x
    let v697 : unit = ()
    (* run_target_args'
    let v698 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v699 : string = $"true; let _fix_closure_v697 = $0"
    let v700 : bool = Fable.Core.RustInterop.emitRustExpr v696 v699 
    let _run_target_args'_v698 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v701 : string = $"true; let _fix_closure_v697 = $0"
    let v702 : bool = Fable.Core.RustInterop.emitRustExpr v696 v701 
    let _run_target_args'_v698 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v703 : string = $"true; let _fix_closure_v697 = $0"
    let v704 : bool = Fable.Core.RustInterop.emitRustExpr v696 v703 
    let _run_target_args'_v698 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v698 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v698 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v698 = false 
    #endif
#else
    let _run_target_args'_v698 = false 
    #endif
    let v705 : bool = _run_target_args'_v698 
    let v706 : string = $"true; _fix_closure_v697 " + v695 + "); " + v52 + " // rust.fix_closure'"
    let v707 : bool = Fable.Core.RustInterop.emitRustExpr () v706 
    let v708 : string = "__future_init"
    let v709 : _ = Fable.Core.RustInterop.emitRustExpr () v708 
    let v710 : string = "v709"
    let v711 : std_pin_Pin<Box<Dyn<std_future_Future<US8>>>> = Fable.Core.RustInterop.emitRustExpr () v710 
    let v712 : string = $"true; $0 /*"
    let v713 : bool = Fable.Core.RustInterop.emitRustExpr v711 v712 
    let v714 : string = $"*/ }}); //"
    let v715 : bool = Fable.Core.RustInterop.emitRustExpr () v714 
    let v716 : string = $"_func0_from_v129"
    let v717 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<US8>>>>> = Fable.Core.RustInterop.emitRustExpr () v716 
    let v718 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v719 : leptos_prelude_ArcLocalResource<US8> = Fable.Core.RustInterop.emitRustExpr v717 v718 
    let v720 : unit = ()
    let v721 : string = $"true; let _func0_from_v720 = Func0::from(move || {{ //"
    let v722 : bool = Fable.Core.RustInterop.emitRustExpr () v721 
    let v723 : string = "state_core.use_core_database (4) / effect core_state_heap / #1"
    let v724 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v725 : bool = Fable.Core.RustInterop.emitRustExpr v723 v724 
    let v726 : web_sys_Window = method28()
    let v727 : Result<web_sys_Storage option, wasm_bindgen_JsValue> = method29(v726)
    let v728 : (web_sys_Storage option -> US9) = method30()
    let v729 : (wasm_bindgen_JsValue -> US9) = method31()
    let v731 : US9 = match v727 with Ok x -> v728 x | Error x -> v729 x
    let v767 : US10 =
        match v731 with
        | US9_1(v764) -> (* Error *)
            US10_1(v764)
        | US9_0(v734) -> (* Ok *)
            let v737 : (web_sys_Storage -> US11) = method32()
            let v738 : US11 option = v734 |> Option.map v737 
            let v758 : US11 = US11_1
            let v759 : US11 = v738 |> Option.defaultValue v758 
            US10_0(v759)
    let v1406 : bool =
        match v767 with
        | US10_0(v768) -> (* Ok *)
            match v768 with
            | US11_0(v769) -> (* Some *)
                let v770 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
                let v771 : US8 option = Fable.Core.RustInterop.emitRustExpr v719 v770 
                let v774 : (US8 -> US7) = method33()
                let v775 : US7 option = v771 |> Option.map v774 
                let v795 : US7 = US7_1
                let v796 : US7 = v775 |> Option.defaultValue v795 
                let v801 : string = $"%A{v796}"
                let v804 : string = "state_core.use_core_database (5) / effect core_state_heap / #2 / core_state_heap: " + v801 + ""
                let v805 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v806 : bool = Fable.Core.RustInterop.emitRustExpr v804 v805 
                let v1335 : US8 =
                    match v796 with
                    | US7_0(v807) -> (* Some *)
                        match v807 with
                        | US8_0(v808) -> (* Some *)
                            US8_0(v808)
                        | _ ->
                            let v810 : web_sys_Storage = method34(v769)
                            let v811 : string = method35()
                            (* run_target_args'
                            let v816 : unit = ()
                            run_target_args' *)
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v817 : string = "&*$0"
                            let v818 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v811 v817 
                            let _run_target_args'_v816 = v818 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v819 : string = "&*$0"
                            let v820 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v811 v819 
                            let _run_target_args'_v816 = v820 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v821 : string = "&*$0"
                            let v822 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v811 v821 
                            let _run_target_args'_v816 = v822 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v824 : Ref<Str> = v811 |> unbox<Ref<Str>>
                            let _run_target_args'_v816 = v824 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v828 : Ref<Str> = v811 |> unbox<Ref<Str>>
                            let _run_target_args'_v816 = v828 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v832 : Ref<Str> = v811 |> unbox<Ref<Str>>
                            let _run_target_args'_v816 = v832 
                            #endif
#else
                            let v836 : Ref<Str> = v811 |> unbox<Ref<Str>>
                            let _run_target_args'_v816 = v836 
                            #endif
                            let v839 : Ref<Str> = _run_target_args'_v816 
                            let v848 : string = $"web_sys::Storage::get_item(&v810, $0)"
                            let v849 : Result<std_string_String option, wasm_bindgen_JsValue> = Fable.Core.RustInterop.emitRustExpr v839 v848 
                            let v850 : (std_string_String option -> US12) = method36()
                            let v851 : (wasm_bindgen_JsValue -> US12) = method37()
                            let v853 : US12 = match v849 with Ok x -> v850 x | Error x -> v851 x
                            let v892 : US13 =
                                match v853 with
                                | US12_1(v889) -> (* Error *)
                                    US13_1(v889)
                                | US12_0(v856) -> (* Ok *)
                                    let v857 : std_string_String option = method38(v856)
                                    let v858 : string = "serde_json::from_value(v857.into()).unwrap()"
                                    let v859 : std_string_String option = Fable.Core.RustInterop.emitRustExpr () v858 
                                    let v862 : (std_string_String -> US14) = method39()
                                    let v863 : US14 option = v859 |> Option.map v862 
                                    let v883 : US14 = US14_1
                                    let v884 : US14 = v863 |> Option.defaultValue v883 
                                    US13_0(v884)
                            let v898 : US15 =
                                match v892 with
                                | US13_1(v895) -> (* Error *)
                                    US15_1
                                | US13_0(v893) -> (* Ok *)
                                    US15_0(v893)
                            let v905 : US14 =
                                match v898 with
                                | US15_0(v899) -> (* Some *)
                                    match v899 with
                                    | US14_0(v900) -> (* Some *)
                                        US14_0(v900)
                                    | _ ->
                                        US14_1
                                | _ ->
                                    US14_1
                            let v916 : std_string_String option =
                                match v905 with
                                | US14_1 -> (* None *)
                                    let v912 : std_string_String option = None
                                    v912
                                | US14_0(v906) -> (* Some *)
                                    let v908 : std_string_String option = Some v906 
                                    v908
                            let v919 : (std_string_String -> US8) = method40()
                            let v920 : US8 option = v916 |> Option.map v919 
                            let v1039 : (US8 -> US7) = method33()
                            let v1040 : US7 option = v920 |> Option.map v1039 
                            let v1060 : US7 = US7_1
                            let v1061 : US7 = v1040 |> Option.defaultValue v1060 
                            match v1061 with
                            | US7_0(v1065) -> (* Some *)
                                match v1065 with
                                | US8_0(v1066) -> (* Some *)
                                    US8_0(v1066)
                                | _ ->
                                    US8_1
                            | _ ->
                                US8_1
                    | _ ->
                        let v1073 : web_sys_Storage = method34(v769)
                        let v1074 : string = method35()
                        (* run_target_args'
                        let v1079 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1080 : string = "&*$0"
                        let v1081 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1074 v1080 
                        let _run_target_args'_v1079 = v1081 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1082 : string = "&*$0"
                        let v1083 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1074 v1082 
                        let _run_target_args'_v1079 = v1083 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1084 : string = "&*$0"
                        let v1085 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1074 v1084 
                        let _run_target_args'_v1079 = v1085 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1087 : Ref<Str> = v1074 |> unbox<Ref<Str>>
                        let _run_target_args'_v1079 = v1087 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1091 : Ref<Str> = v1074 |> unbox<Ref<Str>>
                        let _run_target_args'_v1079 = v1091 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1095 : Ref<Str> = v1074 |> unbox<Ref<Str>>
                        let _run_target_args'_v1079 = v1095 
                        #endif
#else
                        let v1099 : Ref<Str> = v1074 |> unbox<Ref<Str>>
                        let _run_target_args'_v1079 = v1099 
                        #endif
                        let v1102 : Ref<Str> = _run_target_args'_v1079 
                        let v1111 : string = $"web_sys::Storage::get_item(&v1073, $0)"
                        let v1112 : Result<std_string_String option, wasm_bindgen_JsValue> = Fable.Core.RustInterop.emitRustExpr v1102 v1111 
                        let v1113 : (std_string_String option -> US12) = method36()
                        let v1114 : (wasm_bindgen_JsValue -> US12) = method37()
                        let v1116 : US12 = match v1112 with Ok x -> v1113 x | Error x -> v1114 x
                        let v1155 : US13 =
                            match v1116 with
                            | US12_1(v1152) -> (* Error *)
                                US13_1(v1152)
                            | US12_0(v1119) -> (* Ok *)
                                let v1120 : std_string_String option = method38(v1119)
                                let v1121 : string = "serde_json::from_value(v1120.into()).unwrap()"
                                let v1122 : std_string_String option = Fable.Core.RustInterop.emitRustExpr () v1121 
                                let v1125 : (std_string_String -> US14) = method39()
                                let v1126 : US14 option = v1122 |> Option.map v1125 
                                let v1146 : US14 = US14_1
                                let v1147 : US14 = v1126 |> Option.defaultValue v1146 
                                US13_0(v1147)
                        let v1161 : US15 =
                            match v1155 with
                            | US13_1(v1158) -> (* Error *)
                                US15_1
                            | US13_0(v1156) -> (* Ok *)
                                US15_0(v1156)
                        let v1168 : US14 =
                            match v1161 with
                            | US15_0(v1162) -> (* Some *)
                                match v1162 with
                                | US14_0(v1163) -> (* Some *)
                                    US14_0(v1163)
                                | _ ->
                                    US14_1
                            | _ ->
                                US14_1
                        let v1179 : std_string_String option =
                            match v1168 with
                            | US14_1 -> (* None *)
                                let v1175 : std_string_String option = None
                                v1175
                            | US14_0(v1169) -> (* Some *)
                                let v1171 : std_string_String option = Some v1169 
                                v1171
                        let v1182 : (std_string_String -> US8) = method40()
                        let v1183 : US8 option = v1179 |> Option.map v1182 
                        let v1302 : (US8 -> US7) = method33()
                        let v1303 : US7 option = v1183 |> Option.map v1302 
                        let v1323 : US7 = US7_1
                        let v1324 : US7 = v1303 |> Option.defaultValue v1323 
                        match v1324 with
                        | US7_0(v1328) -> (* Some *)
                            match v1328 with
                            | US8_0(v1329) -> (* Some *)
                                US8_0(v1329)
                            | _ ->
                                US8_1
                        | _ ->
                            US8_1
                let v1337 : string = $"%A{v1335}"
                let v1340 : string = "state_core.use_core_database (6) / effect core_state_heap / #3 / core_state_heap: " + v1337 + ""
                let v1341 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v1342 : bool = Fable.Core.RustInterop.emitRustExpr v1340 v1341 
                match v1335 with
                | US8_0(v1343) -> (* Some *)
                    let v1344 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
                    let v1345 : string = "Box::pin($0)"
                    let v1346 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1344 v1345 
                    let v1347 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                    let v1348 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1346 v1347 
                    let v1349 : leptos_prelude_ArcRwSignal<bool> = v1348.l0
                    let v1350 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
                    let v1351 : bool = Fable.Core.RustInterop.emitRustExpr v1349 v1350 
                    let v1353 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
                    let v1356 : string = "*/ | { *x = $0(x.clone()) }); //"
                    let v1357 : (bool -> bool) = closure32(v1343)
                    let v1358 : bool = Fable.Core.RustInterop.emitRustExpr v1357 v1356 
                    let v1359 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
                    let v1360 : string = "Box::pin($0)"
                    let v1361 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1359 v1360 
                    let v1362 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                    let v1363 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1361 v1362 
                    let v1364 : leptos_prelude_ArcRwSignal<bool> = v1363.l1
                    let v1365 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
                    let v1366 : bool = Fable.Core.RustInterop.emitRustExpr v1364 v1365 
                    let v1368 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
                    let v1371 : string = "*/ | { *x = $0(x.clone()) }); //"
                    let v1372 : (bool -> bool) = closure33(v1343)
                    let v1373 : bool = Fable.Core.RustInterop.emitRustExpr v1372 v1371 
                    let v1374 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
                    let v1375 : string = "Box::pin($0)"
                    let v1376 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1374 v1375 
                    let v1377 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                    let v1378 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1376 v1377 
                    let v1379 : leptos_prelude_ArcRwSignal<std_string_String> = v1378.l2
                    let v1380 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
                    let v1381 : bool = Fable.Core.RustInterop.emitRustExpr v1379 v1380 
                    let v1383 : TypeEmit<std_string_String> = null |> unbox<TypeEmit<std_string_String>>
                    let v1386 : string = "*/ | { *x = $0(x.clone()) }); //"
                    let v1387 : (std_string_String -> std_string_String) = closure34(v1343)
                    let v1388 : bool = Fable.Core.RustInterop.emitRustExpr v1387 v1386 
                    let v1389 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
                    let v1390 : string = "Box::pin($0)"
                    let v1391 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1389 v1390 
                    let v1392 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                    let v1393 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1391 v1392 
                    let v1394 : leptos_prelude_ArcRwSignal<Heap0> = v1393.l3
                    let v1395 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
                    let v1396 : bool = Fable.Core.RustInterop.emitRustExpr v1394 v1395 
                    let v1398 : TypeEmit<Heap0> = null |> unbox<TypeEmit<Heap0>>
                    let v1401 : string = "*/ | { *x = $0(x.clone()) }); //"
                    let v1402 : (Heap0 -> Heap0) = closure35(v1343)
                    let v1403 : bool = Fable.Core.RustInterop.emitRustExpr v1402 v1401 
                    true
                | _ ->
                    false
            | _ ->
                false
        | _ ->
            false
    // rust.func0_from / is_unit
    let v1407 : string = $"true; /*"
    let v1408 : bool = Fable.Core.RustInterop.emitRustExpr () v1407 
    let v1409 : string = $"*/ }}); //"
    let v1410 : bool = Fable.Core.RustInterop.emitRustExpr () v1409 
    let v1411 : string = $"_func0_from_v720"
    let v1412 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v1411 
    let v1413 : string = "true; leptos::prelude::Effect::new(move |_| { v1412() })"
    let v1414 : bool = Fable.Core.RustInterop.emitRustExpr () v1413 
    let v1415 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1416 : (unit -> std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>) = closure36(v7)
    let v1417 : leptos_prelude_ArcMemo<std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>> = Fable.Core.RustInterop.emitRustExpr v1416 v1415 
    let v1418 : string = $"leptos::prelude::signal($0)"
    let struct (v1419 : leptos_prelude_ReadSignal<bool>, v1420 : leptos_prelude_WriteSignal<bool>) = Fable.Core.RustInterop.emitRustExpr false v1418 
    let v1421 : unit = ()
    let v1422 : string = $"true; let _func1_from_v1421 = Func1::from(move |value| {{ //"
    let v1423 : bool = Fable.Core.RustInterop.emitRustExpr () v1422 
    let v1424 : string = $"value"
    let v1425 : Heap3 = Fable.Core.RustInterop.emitRustExpr () v1424 
    let v1427 : string = $"%A{v1425}"
    let v1430 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v1431 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v125 v1430 
    let v1434 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v1435 : US2 option = v1431 |> Option.map v1434 
    let v1455 : US2 = US2_1
    let v1456 : US2 = v1435 |> Option.defaultValue v1455 
    let v1460 : string = "true; let __future_init = Box::pin(/*"
    let v1461 : bool = Fable.Core.RustInterop.emitRustExpr () v1460 
    let v1462 : string = "*/ async move { /*"
    let v1463 : bool = Fable.Core.RustInterop.emitRustExpr () v1462 
    let v1464 : string = "*/ ()"
    let v1465 : bool = Fable.Core.RustInterop.emitRustExpr () v1464 
    let v1568 : bool =
        match v1456 with
        | US2_1 -> (* None *)
            let v1564 : string = "state_core.use_core_database (13) / set_core_state_heap_action / database=None"
            let v1565 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1566 : bool = Fable.Core.RustInterop.emitRustExpr v1564 v1565 
            false
        | US2_0(v1466) -> (* Some *)
            let v1467 : string = "state_core.use_core_database (12) / set_core_state_heap_action / value: " + string v1427 + ""
            let v1468 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1469 : bool = Fable.Core.RustInterop.emitRustExpr v1467 v1468 
            let v1471 : string = $"%A{v1425}"
            let v1474 : int64 = System.Convert.ToInt64 v1471.Length
            let v1475 : string = "state_core.set_data () / data_len: " + string v1474 + ""
            let v1476 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1477 : bool = Fable.Core.RustInterop.emitRustExpr v1475 v1476 
            let v1478 : string = "true; let __future_init = Box::pin(/*"
            let v1479 : bool = Fable.Core.RustInterop.emitRustExpr () v1478 
            let v1480 : string = "*/ async move { /*"
            let v1481 : bool = Fable.Core.RustInterop.emitRustExpr () v1480 
            let v1482 : string = "*/ ()"
            let v1483 : bool = Fable.Core.RustInterop.emitRustExpr () v1482 
            let v1484 : string = "true; let mut data = Vec::new()"
            let v1485 : bool = Fable.Core.RustInterop.emitRustExpr () v1484 
            let v1486 : string = "true; borsh::BorshSerialize::serialize(&$0, &mut data).unwrap()"
            let v1487 : bool = Fable.Core.RustInterop.emitRustExpr v1425 v1486 
            let v1488 : string = "data"
            let v1489 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr () v1488 
            let v1490 : string = "serde_wasm_bindgen::to_value(&v1489).unwrap()"
            let v1491 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr () v1490 
            let v1492 : string = method43()
            (* run_target_args'
            let v1497 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1498 : string = "&*$0"
            let v1499 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1492 v1498 
            let _run_target_args'_v1497 = v1499 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1500 : string = "&*$0"
            let v1501 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1492 v1500 
            let _run_target_args'_v1497 = v1501 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1502 : string = "&*$0"
            let v1503 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1492 v1502 
            let _run_target_args'_v1497 = v1503 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1505 : Ref<Str> = v1492 |> unbox<Ref<Str>>
            let _run_target_args'_v1497 = v1505 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1509 : Ref<Str> = v1492 |> unbox<Ref<Str>>
            let _run_target_args'_v1497 = v1509 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1513 : Ref<Str> = v1492 |> unbox<Ref<Str>>
            let _run_target_args'_v1497 = v1513 
            #endif
#else
            let v1517 : Ref<Str> = v1492 |> unbox<Ref<Str>>
            let _run_target_args'_v1497 = v1517 
            #endif
            let v1520 : Ref<Str> = _run_target_args'_v1497 
            let v1529 : string = "$0.transaction(&[\"store\"], rexie::TransactionMode::ReadWrite)?"
            let v1530 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v1466 v1529 
            let v1531 : string = "v1530.store(\"store\")?"
            let v1532 : rexie_Store = Fable.Core.RustInterop.emitRustExpr () v1531 
            let v1533 : string = "true; v1532.put(&v1491, Some(&$0.into())).await?"
            let v1534 : bool = Fable.Core.RustInterop.emitRustExpr v1520 v1533 
            let v1535 : string = "true; v1530.done().await?"
            let v1536 : bool = Fable.Core.RustInterop.emitRustExpr () v1535 
            let v1538 : Result<unit, rexie_Error> = Ok () 
            let v1541 : string = v52 + v53 
            let x = v1538 //
            let v1542 : _ = x
            let v1543 : unit = ()
            (* run_target_args'
            let v1544 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1545 : string = $"true; let _fix_closure_v1543 = $0"
            let v1546 : bool = Fable.Core.RustInterop.emitRustExpr v1542 v1545 
            let _run_target_args'_v1544 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1547 : string = $"true; let _fix_closure_v1543 = $0"
            let v1548 : bool = Fable.Core.RustInterop.emitRustExpr v1542 v1547 
            let _run_target_args'_v1544 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1549 : string = $"true; let _fix_closure_v1543 = $0"
            let v1550 : bool = Fable.Core.RustInterop.emitRustExpr v1542 v1549 
            let _run_target_args'_v1544 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v1544 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v1544 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v1544 = false 
            #endif
#else
            let _run_target_args'_v1544 = false 
            #endif
            let v1551 : bool = _run_target_args'_v1544 
            let v1552 : string = $"true; _fix_closure_v1543 " + v1541 + "); " + v52 + " // rust.fix_closure'"
            let v1553 : bool = Fable.Core.RustInterop.emitRustExpr () v1552 
            let v1554 : string = "__future_init"
            let v1555 : _ = Fable.Core.RustInterop.emitRustExpr () v1554 
            let v1556 : string = "v1555"
            let v1557 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v1556 
            let v1558 : string = "v1557.await"
            let v1559 : Result<unit, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v1558 
            (* run_target_args'
            let v1560 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1561 : string = "$0.unwrap()"
            Fable.Core.RustInterop.emitRustExpr v1559 v1561 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1562 : string = "$0.unwrap()"
            Fable.Core.RustInterop.emitRustExpr v1559 v1562 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1563 : string = "$0.unwrap()"
            Fable.Core.RustInterop.emitRustExpr v1559 v1563 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            match v1559 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
            #endif
#if FABLE_COMPILER_PYTHON
            match v1559 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            match v1559 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
            #endif
#else
            match v1559 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
            #endif
            // run_target_args' is_unit
            true
    let v1569 : string = v52 + v53 
    let x = () //
    let v1570 : _ = x
    let v1571 : unit = ()
    (* run_target_args'
    let v1572 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let _run_target_args'_v1572 = false 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let _run_target_args'_v1572 = false 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let _run_target_args'_v1572 = false 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v1572 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v1572 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v1572 = false 
    #endif
#else
    let _run_target_args'_v1572 = false 
    #endif
    let v1573 : bool = _run_target_args'_v1572 
    let v1574 : string = $"true; _fix_closure_v1571 " + v1569 + "); " + v52 + " // rust.fix_closure'"
    let v1575 : bool = Fable.Core.RustInterop.emitRustExpr () v1574 
    let v1576 : string = "__future_init"
    let v1577 : _ = Fable.Core.RustInterop.emitRustExpr () v1576 
    let v1578 : string = "v1577"
    let v1579 : std_pin_Pin<Box<Dyn<std_future_Future<unit>>>> = Fable.Core.RustInterop.emitRustExpr () v1578 
    let func1_from_result = v1579 //
    let v1580 : _ = func1_from_result
    let v1581 : string = $"true; $0 /*"
    let v1582 : bool = Fable.Core.RustInterop.emitRustExpr v1580 v1581 
    let v1583 : string = $"*/ }}); //"
    let v1584 : bool = Fable.Core.RustInterop.emitRustExpr () v1583 
    let v1585 : string = $"_func1_from_v1421"
    let v1586 : Func0<Heap3, std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>> = Fable.Core.RustInterop.emitRustExpr () v1585 
    let v1587 : string = "leptos::prelude::ArcAction::new(move |value: &std::sync::Arc<Heap3>| $0(value.clone()))"
    let v1588 : (Heap3 -> std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>) = closure37(v1586)
    let v1589 : leptos_prelude_ArcAction<Heap3, unit> = Fable.Core.RustInterop.emitRustExpr v1588 v1587 
    let v1590 : unit = ()
    let v1591 : string = $"true; let _func0_from_v1590 = Func0::from(move || {{ //"
    let v1592 : bool = Fable.Core.RustInterop.emitRustExpr () v1591 
    let v1593 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v1594 : bool = Fable.Core.RustInterop.emitRustExpr v1419 v1593 
    let v1595 : string = "state_core.use_core_database (14) / effect new_core_state_heap / #1 / loaded: " + string v1594 + ""
    let v1596 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1597 : bool = Fable.Core.RustInterop.emitRustExpr v1595 v1596 
    let v1598 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
    let v1599 : string = "Box::pin($0)"
    let v1600 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1598 v1599 
    let v1601 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v1602 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1600 v1601 
    let v1603 : leptos_prelude_ArcRwSignal<bool> = v1602.l0
    let v1604 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v1605 : bool = Fable.Core.RustInterop.emitRustExpr v1603 v1604 
    let v1606 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
    let v1607 : string = "Box::pin($0)"
    let v1608 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1606 v1607 
    let v1609 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v1610 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1608 v1609 
    let v1611 : leptos_prelude_ArcRwSignal<bool> = v1610.l1
    let v1612 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v1613 : bool = Fable.Core.RustInterop.emitRustExpr v1611 v1612 
    let v1614 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
    let v1615 : string = "Box::pin($0)"
    let v1616 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1614 v1615 
    let v1617 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v1618 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1616 v1617 
    let v1619 : leptos_prelude_ArcRwSignal<std_string_String> = v1618.l2
    let v1620 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v1621 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1619 v1620 
    let v1622 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
    let v1623 : string = "Box::pin($0)"
    let v1624 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1622 v1623 
    let v1625 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v1626 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1624 v1625 
    let v1627 : leptos_prelude_ArcRwSignal<Heap0> = v1626.l3
    let v1628 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v1629 : Heap0 = Fable.Core.RustInterop.emitRustExpr v1627 v1628 
    let v1630 : Heap3 = {l0 = v1605; l1 = v1613; l2 = v1621; l3 = v1629} : Heap3
    let v1632 : string = $"%A{v1630}"
    let v1635 : string = "state_core.use_core_database (15) / effect new_core_state_heap / #2 / new_core_state_heap: " + string v1632 + ""
    let v1636 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1637 : bool = Fable.Core.RustInterop.emitRustExpr v1635 v1636 
    let v1638 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v1639 : std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>> = Fable.Core.RustInterop.emitRustExpr v1417 v1638 
    let v1640 : string = "dark_mode_key"
    (* run_target_args'
    let v1645 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v1646 : string = "&*$0"
    let v1647 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1640 v1646 
    let _run_target_args'_v1645 = v1647 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v1648 : string = "&*$0"
    let v1649 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1640 v1648 
    let _run_target_args'_v1645 = v1649 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v1650 : string = "&*$0"
    let v1651 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1640 v1650 
    let _run_target_args'_v1645 = v1651 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v1653 : Ref<Str> = v1640 |> unbox<Ref<Str>>
    let _run_target_args'_v1645 = v1653 
    #endif
#if FABLE_COMPILER_PYTHON
    let v1657 : Ref<Str> = v1640 |> unbox<Ref<Str>>
    let _run_target_args'_v1645 = v1657 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v1661 : Ref<Str> = v1640 |> unbox<Ref<Str>>
    let _run_target_args'_v1645 = v1661 
    #endif
#else
    let v1665 : Ref<Str> = v1640 |> unbox<Ref<Str>>
    let _run_target_args'_v1645 = v1665 
    #endif
    let v1668 : Ref<Str> = _run_target_args'_v1645 
    (* run_target_args'
    let v1681 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v1682 : string = "String::from($0)"
    let v1683 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1668 v1682 
    let _run_target_args'_v1681 = v1683 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v1684 : string = "String::from($0)"
    let v1685 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1668 v1684 
    let _run_target_args'_v1681 = v1685 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v1686 : string = "String::from($0)"
    let v1687 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1668 v1686 
    let _run_target_args'_v1681 = v1687 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v1689 : std_string_String = v1668 |> unbox<std_string_String>
    let _run_target_args'_v1681 = v1689 
    #endif
#if FABLE_COMPILER_PYTHON
    let v1693 : std_string_String = v1668 |> unbox<std_string_String>
    let _run_target_args'_v1681 = v1693 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v1697 : std_string_String = v1668 |> unbox<std_string_String>
    let _run_target_args'_v1681 = v1697 
    #endif
#else
    let v1701 : std_string_String = v1668 |> unbox<std_string_String>
    let _run_target_args'_v1681 = v1701 
    #endif
    let v1704 : std_string_String = _run_target_args'_v1681 
    let v1713 : std_string_String = method45(v1704)
    let v1714 : string = "std::collections::HashMap::get(&$0, &v1713).map(|x| x).cloned()"
    let v1715 : leptos_prelude_ArcRwSignal<bool> option = Fable.Core.RustInterop.emitRustExpr v1639 v1714 
    let v1718 : (leptos_prelude_ArcRwSignal<bool> -> US16) = method46()
    let v1719 : US16 option = v1715 |> Option.map v1718 
    let v1739 : US16 = US16_1
    let v1740 : US16 = v1719 |> Option.defaultValue v1739 
    let v1750 : US17 =
        match v1740 with
        | US16_1 -> (* None *)
            US17_1
        | US16_0(v1744) -> (* Some *)
            let v1745 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
            let v1746 : bool = Fable.Core.RustInterop.emitRustExpr v1744 v1745 
            US17_0(v1746)
    let v1753 : bool =
        match v1750 with
        | US17_1 -> (* None *)
            false
        | US17_0(v1751) -> (* Some *)
            v1751
    let v1754 : string = "state_core.use_core_database (16) / effect new_core_state_heap / #3 / dark_mode_loading: " + string v1753 + ""
    let v1755 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1756 : bool = Fable.Core.RustInterop.emitRustExpr v1754 v1755 
    let v1757 : bool = v1753 = false
    let v1865 : bool =
        if v1757 then
            let v1758 : bool = v1594 = false
            if v1758 then
                let v1759 : string = $"true; leptos::prelude::WriteSignal::update(&$0, |x: &mut /*"
                let v1760 : bool = Fable.Core.RustInterop.emitRustExpr v1420 v1759 
                let v1762 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
                let v1765 : string = "*/ | { *x = $0(x.clone()) }); //"
                let v1766 : (bool -> bool) = closure39()
                let v1767 : bool = Fable.Core.RustInterop.emitRustExpr v1766 v1765 
                true
            else
                let v1768 : string = "state_core.use_core_database (18) / effect new_core_state_heap / #4"
                let v1769 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v1770 : bool = Fable.Core.RustInterop.emitRustExpr v1768 v1769 
                let v1771 : web_sys_Window = method28()
                let v1772 : Result<web_sys_Storage option, wasm_bindgen_JsValue> = method29(v1771)
                let v1773 : (web_sys_Storage option -> US9) = method30()
                let v1774 : (wasm_bindgen_JsValue -> US9) = method31()
                let v1776 : US9 = match v1772 with Ok x -> v1773 x | Error x -> v1774 x
                let v1812 : US10 =
                    match v1776 with
                    | US9_1(v1809) -> (* Error *)
                        US10_1(v1809)
                    | US9_0(v1779) -> (* Ok *)
                        let v1782 : (web_sys_Storage -> US11) = method32()
                        let v1783 : US11 option = v1779 |> Option.map v1782 
                        let v1803 : US11 = US11_1
                        let v1804 : US11 = v1783 |> Option.defaultValue v1803 
                        US10_0(v1804)
                match v1812 with
                | US10_0(v1813) -> (* Ok *)
                    match v1813 with
                    | US11_0(v1814) -> (* Some *)
                        let v1815 : string = "true; leptos::prelude::ArcAction::dispatch(&$0, $1.clone())"
                        let v1816 : bool = Fable.Core.RustInterop.emitRustExpr struct (v1589, v1630) v1815 
                        let v1817 : web_sys_Storage = method47(v1814)
                        let v1818 : string = method48()
                        (* run_target_args'
                        let v1823 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1824 : string = "&*$0"
                        let v1825 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1818 v1824 
                        let _run_target_args'_v1823 = v1825 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1826 : string = "&*$0"
                        let v1827 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1818 v1826 
                        let _run_target_args'_v1823 = v1827 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1828 : string = "&*$0"
                        let v1829 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1818 v1828 
                        let _run_target_args'_v1823 = v1829 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1831 : Ref<Str> = v1818 |> unbox<Ref<Str>>
                        let _run_target_args'_v1823 = v1831 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1835 : Ref<Str> = v1818 |> unbox<Ref<Str>>
                        let _run_target_args'_v1823 = v1835 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1839 : Ref<Str> = v1818 |> unbox<Ref<Str>>
                        let _run_target_args'_v1823 = v1839 
                        #endif
#else
                        let v1843 : Ref<Str> = v1818 |> unbox<Ref<Str>>
                        let _run_target_args'_v1823 = v1843 
                        #endif
                        let v1846 : Ref<Str> = _run_target_args'_v1823 
                        let v1855 : Heap3 = method49(v1630)
                        let v1856 : string = "serde_json::json!(v1855).to_string()"
                        let v1857 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v1856 
                        let v1858 : string = "$0.as_str()"
                        let v1859 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1857 v1858 
                        let v1860 : string = $"true; web_sys::Storage::set(&v1817, $0, v1859).unwrap()"
                        let v1861 : bool = Fable.Core.RustInterop.emitRustExpr v1846 v1860 
                        true
                    | _ ->
                        false
                | _ ->
                    false
        else
            false
    // rust.func0_from / is_unit
    let v1866 : string = $"true; /*"
    let v1867 : bool = Fable.Core.RustInterop.emitRustExpr () v1866 
    let v1868 : string = $"*/ }}); //"
    let v1869 : bool = Fable.Core.RustInterop.emitRustExpr () v1868 
    let v1870 : string = $"_func0_from_v1590"
    let v1871 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v1870 
    let v1872 : string = "true; leptos::prelude::Effect::new(move |_| { v1871() })"
    let v1873 : bool = Fable.Core.RustInterop.emitRustExpr () v1872 
    let v1874 : string = "class=\"flex flex-1\""
    let v1875 : (unit -> bool) = method50(v7)
    let v1876 : string = "class:dark"
    let v1877 : string = "" + v1876 + "={move || v1875()}"
    let v1878 : string = " " + v1874 + v52 + ""
    let v1879 : string = " " + v1877 + v1878 + ""
    let v1880 : string = "content.render ()"
    let v1881 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1882 : bool = Fable.Core.RustInterop.emitRustExpr v1880 v1881 
    let v1883 : string = "leptos_router::hooks::use_location()"
    let v1884 : leptos_router_location_Location = Fable.Core.RustInterop.emitRustExpr () v1883 
    let v1885 : string = "std::sync::Arc::new(leptos_router::hooks::use_navigate())"
    let v1886 : std_sync_Arc<Dyn<ActionFn2<Ref<Str>, leptos_router_NavigateOptions>>> = Fable.Core.RustInterop.emitRustExpr () v1885 
    let v1887 : string = "leptos_router::hooks::use_location()"
    let v1888 : leptos_router_location_Location = Fable.Core.RustInterop.emitRustExpr () v1887 
    let v1889 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1890 : (unit -> string) = closure41(v1888)
    let v1891 : leptos_prelude_ArcMemo<string> = Fable.Core.RustInterop.emitRustExpr v1890 v1889 
    let v1892 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
    let v1893 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v1892 
    let v1894 : string = "$0.unwrap()"
    let v1895 : Heap2 = Fable.Core.RustInterop.emitRustExpr v1893 v1894 
    let v1896 : string = $"leptos::prelude::signal($0)"
    let v1897 : US18 = US18_0
    let struct (v1898 : leptos_prelude_ReadSignal<US18>, v1899 : leptos_prelude_WriteSignal<US18>) = Fable.Core.RustInterop.emitRustExpr v1897 v1896 
    let v1900 : string = $"leptos::prelude::signal($0)"
    let struct (v1901 : leptos_prelude_ReadSignal<bool>, v1902 : leptos_prelude_WriteSignal<bool>) = Fable.Core.RustInterop.emitRustExpr false v1900 
    let v1903 : unit = ()
    let v1904 : string = $"true; let _func0_from_v1903 = Func0::from(move || {{ //"
    let v1905 : bool = Fable.Core.RustInterop.emitRustExpr () v1904 
    let v1906 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v1907 : bool = Fable.Core.RustInterop.emitRustExpr v1901 v1906 
    let v1908 : string = "$0.hash"
    let v1909 : leptos_prelude_Memo<std_string_String> = Fable.Core.RustInterop.emitRustExpr v1884 v1908 
    let v1910 : string = $"leptos::prelude::Memo::get(&$0)"
    let v1911 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1909 v1910 
    let v1912 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v1913 : string = Fable.Core.RustInterop.emitRustExpr v1891 v1912 
    let v1914 : string = $"{v1913}{v1911}"
    let v1915 : string = "content.render () / effect 1 / new_url_hash: " + v1914 + " / loaded: " + string v1907 + ""
    let v1916 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1917 : bool = Fable.Core.RustInterop.emitRustExpr v1915 v1916 
    let v1918 : bool = v1907 = false
    let v2060 : bool =
        if v1918 then
            let v1919 : std_string_String = method51(v1911)
            let v1920 : string = "v1919 == \"\""
            let v1921 : bool = Fable.Core.RustInterop.emitRustExpr () v1920 
            if v1921 then
                let v1922 : leptos_prelude_ArcRwSignal<Heap1> = v1895.l0
                let v1923 : string = "Box::pin($0)"
                let v1924 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1922 v1923 
                let v1925 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                let v1926 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1924 v1925 
                let v1927 : leptos_prelude_ArcRwSignal<std_string_String> = v1926.l2
                let v1928 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
                let v1929 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1927 v1928 
                let v1930 : string = "fable_library_rust::String_::fromString($0)"
                let v1931 : string = Fable.Core.RustInterop.emitRustExpr v1929 v1930 
                let v1932 : string = "content.render () / effect 1 / url_hash: " + v1931 + ""
                let v1933 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v1934 : bool = Fable.Core.RustInterop.emitRustExpr v1932 v1933 
                let v1937 : string = "#"
                let v1938 : bool = v1931.Contains v1937 
                if v1938 then
                    (* run_target_args'
                    let v1945 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1946 : string = "&*$0"
                    let v1947 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1931 v1946 
                    let _run_target_args'_v1945 = v1947 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1948 : string = "&*$0"
                    let v1949 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1931 v1948 
                    let _run_target_args'_v1945 = v1949 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1950 : string = "&*$0"
                    let v1951 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1931 v1950 
                    let _run_target_args'_v1945 = v1951 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1953 : Ref<Str> = v1931 |> unbox<Ref<Str>>
                    let _run_target_args'_v1945 = v1953 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1957 : Ref<Str> = v1931 |> unbox<Ref<Str>>
                    let _run_target_args'_v1945 = v1957 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1961 : Ref<Str> = v1931 |> unbox<Ref<Str>>
                    let _run_target_args'_v1945 = v1961 
                    #endif
#else
                    let v1965 : Ref<Str> = v1931 |> unbox<Ref<Str>>
                    let _run_target_args'_v1945 = v1965 
                    #endif
                    let v1968 : Ref<Str> = _run_target_args'_v1945 
                    let v1977 : string = "$0($1, Default::default())"
                    Fable.Core.RustInterop.emitRustExpr struct (v1886, v1968) v1977 
                    ()
            let v1978 : string = $"true; leptos::prelude::WriteSignal::set(&$0, $1); //"
            let v1979 : bool = Fable.Core.RustInterop.emitRustExpr struct (v1902, true) v1978 
            true
        else
            let v1980 : leptos_prelude_ArcRwSignal<Heap1> = v1895.l0
            let v1981 : string = "Box::pin($0)"
            let v1982 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1980 v1981 
            let v1983 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
            let v1984 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1982 v1983 
            let v1985 : leptos_prelude_ArcRwSignal<std_string_String> = v1984.l2
            (* run_target_args'
            let v1990 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1991 : string = "&*$0"
            let v1992 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1914 v1991 
            let _run_target_args'_v1990 = v1992 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1993 : string = "&*$0"
            let v1994 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1914 v1993 
            let _run_target_args'_v1990 = v1994 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1995 : string = "&*$0"
            let v1996 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1914 v1995 
            let _run_target_args'_v1990 = v1996 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1998 : Ref<Str> = v1914 |> unbox<Ref<Str>>
            let _run_target_args'_v1990 = v1998 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2002 : Ref<Str> = v1914 |> unbox<Ref<Str>>
            let _run_target_args'_v1990 = v2002 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2006 : Ref<Str> = v1914 |> unbox<Ref<Str>>
            let _run_target_args'_v1990 = v2006 
            #endif
#else
            let v2010 : Ref<Str> = v1914 |> unbox<Ref<Str>>
            let _run_target_args'_v1990 = v2010 
            #endif
            let v2013 : Ref<Str> = _run_target_args'_v1990 
            (* run_target_args'
            let v2026 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2027 : string = "String::from($0)"
            let v2028 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2013 v2027 
            let _run_target_args'_v2026 = v2028 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2029 : string = "String::from($0)"
            let v2030 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2013 v2029 
            let _run_target_args'_v2026 = v2030 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2031 : string = "String::from($0)"
            let v2032 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2013 v2031 
            let _run_target_args'_v2026 = v2032 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2034 : std_string_String = v2013 |> unbox<std_string_String>
            let _run_target_args'_v2026 = v2034 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2038 : std_string_String = v2013 |> unbox<std_string_String>
            let _run_target_args'_v2026 = v2038 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2042 : std_string_String = v2013 |> unbox<std_string_String>
            let _run_target_args'_v2026 = v2042 
            #endif
#else
            let v2046 : std_string_String = v2013 |> unbox<std_string_String>
            let _run_target_args'_v2026 = v2046 
            #endif
            let v2049 : std_string_String = _run_target_args'_v2026 
            let v2058 : string = $"true; leptos::prelude::ArcRwSignal::set(&$0, $1); //"
            let v2059 : bool = Fable.Core.RustInterop.emitRustExpr struct (v1985, v2049) v2058 
            false
    // rust.func0_from / is_unit
    let v2061 : string = $"true; /*"
    let v2062 : bool = Fable.Core.RustInterop.emitRustExpr () v2061 
    let v2063 : string = $"*/ }}); //"
    let v2064 : bool = Fable.Core.RustInterop.emitRustExpr () v2063 
    let v2065 : string = $"_func0_from_v1903"
    let v2066 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v2065 
    let v2067 : string = "true; leptos::prelude::Effect::new(move |_| { v2066() })"
    let v2068 : bool = Fable.Core.RustInterop.emitRustExpr () v2067 
    let v2069 : unit = ()
    let v2070 : string = $"true; let _func0_from_v2069 = Func0::from(move || {{ //"
    let v2071 : bool = Fable.Core.RustInterop.emitRustExpr () v2070 
    let v2072 : string = "$0.hash"
    let v2073 : leptos_prelude_Memo<std_string_String> = Fable.Core.RustInterop.emitRustExpr v1884 v2072 
    let v2074 : string = $"leptos::prelude::Memo::get(&$0)"
    let v2075 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2073 v2074 
    let v2076 : std_string_String = method52(v2075)
    let v2077 : string = "v2076.strip_prefix('#')"
    let v2078 : Ref<Str> option = Fable.Core.RustInterop.emitRustExpr () v2077 
    let v2079 : string = "r#\"" + v52 + "\"#"
    let v2080 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v2079 
    let v2081 : string = "v2078.unwrap_or(v2080)"
    let v2082 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v2081 
    let v2083 : string = "leptos_router::location::Url::try_from($0)"
    let v2084 : Result<leptos_router_Url, std_string_String> = Fable.Core.RustInterop.emitRustExpr v2082 v2083 
    let v2085 : (leptos_router_Url -> US20) = method53()
    let v2086 : (std_string_String -> US20) = method54()
    let v2088 : US20 = match v2084 with Ok x -> v2085 x | Error x -> v2086 x
    (* run_target_args'
    let v2095 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v2096 : string = "format!(\"{:#?}\", $0)"
    let v2097 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2088 v2096 
    let v2098 : string = "fable_library_rust::String_::fromString($0)"
    let v2099 : string = Fable.Core.RustInterop.emitRustExpr v2097 v2098 
    let _run_target_args'_v2095 = v2099 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v2100 : string = "format!(\"{:#?}\", $0)"
    let v2101 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2088 v2100 
    let v2102 : string = "fable_library_rust::String_::fromString($0)"
    let v2103 : string = Fable.Core.RustInterop.emitRustExpr v2101 v2102 
    let _run_target_args'_v2095 = v2103 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v2104 : string = "format!(\"{:#?}\", $0)"
    let v2105 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2088 v2104 
    let v2106 : string = "fable_library_rust::String_::fromString($0)"
    let v2107 : string = Fable.Core.RustInterop.emitRustExpr v2105 v2106 
    let _run_target_args'_v2095 = v2107 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v2109 : string = $"%A{v2088}"
    let _run_target_args'_v2095 = v2109 
    #endif
#if FABLE_COMPILER_PYTHON
    let v2113 : string = $"%A{v2088}"
    let _run_target_args'_v2095 = v2113 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v2117 : string = $"%A{v2088}"
    let _run_target_args'_v2095 = v2117 
    #endif
#else
    let v2121 : string = $"%A{v2088}"
    let _run_target_args'_v2095 = v2121 
    #endif
    let v2124 : string = _run_target_args'_v2095 
    let v2133 : string = "content.render () / effect 2 / hash_url: " + v2124 + ""
    let v2134 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v2135 : bool = Fable.Core.RustInterop.emitRustExpr v2133 v2134 
    let v2263 : bool =
        match v2088 with
        | US20_1(v2258) -> (* Error *)
            let v2259 : string = "content.render () / effect 2 / hash_url error: " + string v2258 + ""
            let v2260 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2261 : bool = Fable.Core.RustInterop.emitRustExpr v2259 v2260 
            false
        | US20_0(v2136) -> (* Ok *)
            let v2137 : string = "$0.pathname"
            let v2138 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2136 v2137 
            let v2139 : string = "fable_library_rust::String_::fromString($0)"
            let v2140 : string = Fable.Core.RustInterop.emitRustExpr v2138 v2139 
            let v2141 : string = "dice"
            let v2142 : string = "/" + v2141 + ""
            let v2144 : bool = v2140.StartsWith (v2142, false, null)
            let v2151 : US21 =
                if v2144 then
                    let v2147 : US19 = US19_0
                    let v2148 : US18 = US18_1(v2147)
                    US21_0(v2148)
                else
                    US21_1
            let v2169 : US21 =
                match v2151 with
                | US21_1 -> (* None *)
                    let v2154 : string = "$0.pathname"
                    let v2155 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2136 v2154 
                    let v2156 : string = "fable_library_rust::String_::fromString($0)"
                    let v2157 : string = Fable.Core.RustInterop.emitRustExpr v2155 v2156 
                    let v2158 : string = "lists"
                    let v2159 : string = "/" + v2158 + ""
                    let v2161 : bool = v2157.StartsWith (v2159, false, null)
                    if v2161 then
                        let v2164 : US18 = US18_2
                        US21_0(v2164)
                    else
                        US21_1
                | US21_0(v2152) -> (* Some *)
                    US21_0(v2152)
            let v2187 : US21 =
                match v2169 with
                | US21_1 -> (* None *)
                    let v2172 : string = "$0.pathname"
                    let v2173 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2136 v2172 
                    let v2174 : string = "fable_library_rust::String_::fromString($0)"
                    let v2175 : string = Fable.Core.RustInterop.emitRustExpr v2173 v2174 
                    let v2176 : string = "transactions"
                    let v2177 : string = "/" + v2176 + ""
                    let v2179 : bool = v2175.StartsWith (v2177, false, null)
                    if v2179 then
                        let v2182 : US18 = US18_3
                        US21_0(v2182)
                    else
                        US21_1
                | US21_0(v2170) -> (* Some *)
                    US21_0(v2170)
            let v2205 : US21 =
                match v2187 with
                | US21_1 -> (* None *)
                    let v2190 : string = "$0.pathname"
                    let v2191 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2136 v2190 
                    let v2192 : string = "fable_library_rust::String_::fromString($0)"
                    let v2193 : string = Fable.Core.RustInterop.emitRustExpr v2191 v2192 
                    let v2194 : string = "settings"
                    let v2195 : string = "/" + v2194 + ""
                    let v2197 : bool = v2193.StartsWith (v2195, false, null)
                    if v2197 then
                        let v2200 : US18 = US18_4
                        US21_0(v2200)
                    else
                        US21_1
                | US21_0(v2188) -> (* Some *)
                    US21_0(v2188)
            let v2210 : US18 =
                match v2205 with
                | US21_1 -> (* None *)
                    let v2207 : US19 = US19_0
                    US18_1(v2207)
                | US21_0(v2206) -> (* Some *)
                    v2206
            (* run_target_args'
            let v2215 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2216 : string = "format!(\"{:#?}\", $0)"
            let v2217 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2210 v2216 
            let v2218 : string = "fable_library_rust::String_::fromString($0)"
            let v2219 : string = Fable.Core.RustInterop.emitRustExpr v2217 v2218 
            let _run_target_args'_v2215 = v2219 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2220 : string = "format!(\"{:#?}\", $0)"
            let v2221 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2210 v2220 
            let v2222 : string = "fable_library_rust::String_::fromString($0)"
            let v2223 : string = Fable.Core.RustInterop.emitRustExpr v2221 v2222 
            let _run_target_args'_v2215 = v2223 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2224 : string = "format!(\"{:#?}\", $0)"
            let v2225 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2210 v2224 
            let v2226 : string = "fable_library_rust::String_::fromString($0)"
            let v2227 : string = Fable.Core.RustInterop.emitRustExpr v2225 v2226 
            let _run_target_args'_v2215 = v2227 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2229 : string = $"%A{v2210}"
            let _run_target_args'_v2215 = v2229 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2233 : string = $"%A{v2210}"
            let _run_target_args'_v2215 = v2233 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2237 : string = $"%A{v2210}"
            let _run_target_args'_v2215 = v2237 
            #endif
#else
            let v2241 : string = $"%A{v2210}"
            let _run_target_args'_v2215 = v2241 
            #endif
            let v2244 : string = _run_target_args'_v2215 
            let v2253 : string = "content.render () / effect 2 / new_tab: " + v2244 + ""
            let v2254 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2255 : bool = Fable.Core.RustInterop.emitRustExpr v2253 v2254 
            let v2256 : string = $"true; leptos::prelude::WriteSignal::set(&$0, $1); //"
            let v2257 : bool = Fable.Core.RustInterop.emitRustExpr struct (v1899, v2210) v2256 
            true
    // rust.func0_from / is_unit
    let v2264 : string = $"true; /*"
    let v2265 : bool = Fable.Core.RustInterop.emitRustExpr () v2264 
    let v2266 : string = $"*/ }}); //"
    let v2267 : bool = Fable.Core.RustInterop.emitRustExpr () v2266 
    let v2268 : string = $"_func0_from_v2069"
    let v2269 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v2268 
    let v2270 : string = "true; leptos::prelude::Effect::new(move |_| { v2269() })"
    let v2271 : bool = Fable.Core.RustInterop.emitRustExpr () v2270 
    let v2272 : string = "class=\"flex flex-1 max-[100px]:[overflow-x:auto]\""
    let v2273 : string = " " + v2272 + v52 + ""
    let v2274 : string = "class=\"flex flex-1 flex-col [width:100vw] [max-width:100vw] max-[100px]:[min-width:800px] [height:100vh] [max-height:100dvh] [max-height:-webkit-fill-available] max-[60px]:[min-height:600px] bg-gray-50 text-gray-700 text-sm\""
    let v2275 : string = " " + v2274 + v52 + ""
    let v2276 : string = "class=\"flex flex-1 flex-col [overflow:hidden]\""
    let v2277 : string = " " + v2276 + v52 + ""
    let v2278 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2279 : US18 = Fable.Core.RustInterop.emitRustExpr v1898 v2278 
    let v5708 : US22 =
        match v2279 with
        | US18_1(v2280) -> (* Dice *)
            let v2281 : string = "dice_view.render (1)"
            let v2282 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2283 : bool = Fable.Core.RustInterop.emitRustExpr v2281 v2282 
            let v2284 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
            let v2285 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v2284 
            let v2286 : string = "$0.unwrap()"
            let v2287 : Heap2 = Fable.Core.RustInterop.emitRustExpr v2285 v2286 
            let v2288 : string = "use_transactions.render (1)"
            let v2289 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2290 : bool = Fable.Core.RustInterop.emitRustExpr v2288 v2289 
            let v2291 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2292 : (unit -> Vec<string>) = closure44(v2287)
            let v2293 : leptos_prelude_ArcMemo<Vec<string>> = Fable.Core.RustInterop.emitRustExpr v2292 v2291 
            let v2294 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2295 : (unit -> (struct (string * US23 * string * bool * bool) [])) = closure46(v2293)
            let v2296 : leptos_prelude_ArcMemo<(struct (string * US23 * string * bool * bool) [])> = Fable.Core.RustInterop.emitRustExpr v2295 v2294 
            let v2297 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2298 : (unit -> Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>) = closure48(v2287, v2293)
            let v2299 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>> = Fable.Core.RustInterop.emitRustExpr v2298 v2297 
            let v2300 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2301 : (unit -> Vec<struct (string * US23 * string * bool * bool)>) = closure51(v2299)
            let v2302 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr v2301 v2300 
            let v2303 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2304 : (unit -> (string [])) = closure55(v2299)
            let v2305 : leptos_prelude_ArcMemo<(string [])> = Fable.Core.RustInterop.emitRustExpr v2304 v2303 
            let v2306 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) = closure60()
            let v2307 : leptos_prelude_ArcMemo<Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>> = method78(v2302, v2306)
            let v2309 : string = $"%A{v2307}"
            let v2312 : string = "use_transactions.render (7) / root func0 / result: " + string v2309 + ""
            let v2313 : int64 = 200L
            let v2314 : string = method8(v2313, v2312)
            let v2315 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2316 : bool = Fable.Core.RustInterop.emitRustExpr v2314 v2315 
            let v2317 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2318 : (unit -> Result<(struct (string * unativeint * Heap5) []) option, std_string_String>) = closure90(v2305, v2307)
            let v2319 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v2318 v2317 
            let v2320 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2321 : (unit -> Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String>) = closure107(v2319)
            let v2322 : leptos_prelude_ArcMemo<Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v2321 v2320 
            let v2323 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2324 : (unit -> Vec<struct (string * US23 * string * bool * bool)>) = closure115(v2322)
            let v2325 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr v2324 v2323 
            let v2326 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option)) = closure119()
            let v2327 : leptos_prelude_ArcMemo<Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>> = method159(v2325, v2326)
            let v2329 : string = $"%A{v2327}"
            let v2332 : string = "use_transactions.render (12) / rpc_response func0 / result: " + string v2329 + ""
            let v2333 : int64 = 200L
            let v2334 : string = method8(v2333, v2332)
            let v2335 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2336 : bool = Fable.Core.RustInterop.emitRustExpr v2334 v2335 
            let v2337 : unit = ()
            let v2338 : string = $"true; let _func1_from_v2337 = Func1::from(move |value| {{ //"
            let v2339 : bool = Fable.Core.RustInterop.emitRustExpr () v2338 
            let v2340 : string = $"value"
            let v2341 : Heap6 = Fable.Core.RustInterop.emitRustExpr () v2340 
            let v2343 : string = $"%A{v2341}"
            let v2346 : string = "dice_view.render (2) / set_max_action / value: " + string v2343 + ""
            let v2347 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2348 : bool = Fable.Core.RustInterop.emitRustExpr v2346 v2347 
            let v2349 : string = "true; let __future_init = Box::pin(/*"
            let v2350 : bool = Fable.Core.RustInterop.emitRustExpr () v2349 
            let v2351 : string = "*/ async move { /*"
            let v2352 : bool = Fable.Core.RustInterop.emitRustExpr () v2351 
            let v2353 : string = "*/ ()"
            let v2354 : bool = Fable.Core.RustInterop.emitRustExpr () v2353 
            let v2355 : string = "2.0"
            (* run_target_args'
            let v2360 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2361 : string = "&*$0"
            let v2362 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2355 v2361 
            let _run_target_args'_v2360 = v2362 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2363 : string = "&*$0"
            let v2364 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2355 v2363 
            let _run_target_args'_v2360 = v2364 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2365 : string = "&*$0"
            let v2366 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2355 v2365 
            let _run_target_args'_v2360 = v2366 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2368 : Ref<Str> = v2355 |> unbox<Ref<Str>>
            let _run_target_args'_v2360 = v2368 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2372 : Ref<Str> = v2355 |> unbox<Ref<Str>>
            let _run_target_args'_v2360 = v2372 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2376 : Ref<Str> = v2355 |> unbox<Ref<Str>>
            let _run_target_args'_v2360 = v2376 
            #endif
#else
            let v2380 : Ref<Str> = v2355 |> unbox<Ref<Str>>
            let _run_target_args'_v2360 = v2380 
            #endif
            let v2383 : Ref<Str> = _run_target_args'_v2360 
            (* run_target_args'
            let v2396 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2397 : string = "String::from($0)"
            let v2398 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2383 v2397 
            let _run_target_args'_v2396 = v2398 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2399 : string = "String::from($0)"
            let v2400 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2383 v2399 
            let _run_target_args'_v2396 = v2400 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2401 : string = "String::from($0)"
            let v2402 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2383 v2401 
            let _run_target_args'_v2396 = v2402 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2404 : std_string_String = v2383 |> unbox<std_string_String>
            let _run_target_args'_v2396 = v2404 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2408 : std_string_String = v2383 |> unbox<std_string_String>
            let _run_target_args'_v2396 = v2408 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2412 : std_string_String = v2383 |> unbox<std_string_String>
            let _run_target_args'_v2396 = v2412 
            #endif
#else
            let v2416 : std_string_String = v2383 |> unbox<std_string_String>
            let _run_target_args'_v2396 = v2416 
            #endif
            let v2419 : std_string_String = _run_target_args'_v2396 
            let v2428 : string = "dontcare"
            (* run_target_args'
            let v2433 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2434 : string = "&*$0"
            let v2435 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2428 v2434 
            let _run_target_args'_v2433 = v2435 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2436 : string = "&*$0"
            let v2437 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2428 v2436 
            let _run_target_args'_v2433 = v2437 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2438 : string = "&*$0"
            let v2439 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2428 v2438 
            let _run_target_args'_v2433 = v2439 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2441 : Ref<Str> = v2428 |> unbox<Ref<Str>>
            let _run_target_args'_v2433 = v2441 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2445 : Ref<Str> = v2428 |> unbox<Ref<Str>>
            let _run_target_args'_v2433 = v2445 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2449 : Ref<Str> = v2428 |> unbox<Ref<Str>>
            let _run_target_args'_v2433 = v2449 
            #endif
#else
            let v2453 : Ref<Str> = v2428 |> unbox<Ref<Str>>
            let _run_target_args'_v2433 = v2453 
            #endif
            let v2456 : Ref<Str> = _run_target_args'_v2433 
            (* run_target_args'
            let v2469 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2470 : string = "String::from($0)"
            let v2471 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2456 v2470 
            let _run_target_args'_v2469 = v2471 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2472 : string = "String::from($0)"
            let v2473 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2456 v2472 
            let _run_target_args'_v2469 = v2473 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2474 : string = "String::from($0)"
            let v2475 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2456 v2474 
            let _run_target_args'_v2469 = v2475 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2477 : std_string_String = v2456 |> unbox<std_string_String>
            let _run_target_args'_v2469 = v2477 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2481 : std_string_String = v2456 |> unbox<std_string_String>
            let _run_target_args'_v2469 = v2481 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2485 : std_string_String = v2456 |> unbox<std_string_String>
            let _run_target_args'_v2469 = v2485 
            #endif
#else
            let v2489 : std_string_String = v2456 |> unbox<std_string_String>
            let _run_target_args'_v2469 = v2489 
            #endif
            let v2492 : std_string_String = _run_target_args'_v2469 
            let v2501 : string = "EXPERIMENTAL_tx_status"
            (* run_target_args'
            let v2506 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2507 : string = "&*$0"
            let v2508 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2501 v2507 
            let _run_target_args'_v2506 = v2508 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2509 : string = "&*$0"
            let v2510 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2501 v2509 
            let _run_target_args'_v2506 = v2510 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2511 : string = "&*$0"
            let v2512 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2501 v2511 
            let _run_target_args'_v2506 = v2512 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2514 : Ref<Str> = v2501 |> unbox<Ref<Str>>
            let _run_target_args'_v2506 = v2514 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2518 : Ref<Str> = v2501 |> unbox<Ref<Str>>
            let _run_target_args'_v2506 = v2518 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2522 : Ref<Str> = v2501 |> unbox<Ref<Str>>
            let _run_target_args'_v2506 = v2522 
            #endif
#else
            let v2526 : Ref<Str> = v2501 |> unbox<Ref<Str>>
            let _run_target_args'_v2506 = v2526 
            #endif
            let v2529 : Ref<Str> = _run_target_args'_v2506 
            (* run_target_args'
            let v2542 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2543 : string = "String::from($0)"
            let v2544 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2529 v2543 
            let _run_target_args'_v2542 = v2544 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2545 : string = "String::from($0)"
            let v2546 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2529 v2545 
            let _run_target_args'_v2542 = v2546 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2547 : string = "String::from($0)"
            let v2548 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2529 v2547 
            let _run_target_args'_v2542 = v2548 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2550 : std_string_String = v2529 |> unbox<std_string_String>
            let _run_target_args'_v2542 = v2550 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2554 : std_string_String = v2529 |> unbox<std_string_String>
            let _run_target_args'_v2542 = v2554 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2558 : std_string_String = v2529 |> unbox<std_string_String>
            let _run_target_args'_v2542 = v2558 
            #endif
#else
            let v2562 : std_string_String = v2529 |> unbox<std_string_String>
            let _run_target_args'_v2542 = v2562 
            #endif
            let v2565 : std_string_String = _run_target_args'_v2542 
            let v2574 : string = "9JgptZpFQGtUvusnoF9ysVqHXD8fXCri8mFxPTMnt3kS"
            (* run_target_args'
            let v2579 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2580 : string = "&*$0"
            let v2581 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2574 v2580 
            let _run_target_args'_v2579 = v2581 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2582 : string = "&*$0"
            let v2583 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2574 v2582 
            let _run_target_args'_v2579 = v2583 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2584 : string = "&*$0"
            let v2585 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2574 v2584 
            let _run_target_args'_v2579 = v2585 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2587 : Ref<Str> = v2574 |> unbox<Ref<Str>>
            let _run_target_args'_v2579 = v2587 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2591 : Ref<Str> = v2574 |> unbox<Ref<Str>>
            let _run_target_args'_v2579 = v2591 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2595 : Ref<Str> = v2574 |> unbox<Ref<Str>>
            let _run_target_args'_v2579 = v2595 
            #endif
#else
            let v2599 : Ref<Str> = v2574 |> unbox<Ref<Str>>
            let _run_target_args'_v2579 = v2599 
            #endif
            let v2602 : Ref<Str> = _run_target_args'_v2579 
            (* run_target_args'
            let v2615 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2616 : string = "String::from($0)"
            let v2617 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2602 v2616 
            let _run_target_args'_v2615 = v2617 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2618 : string = "String::from($0)"
            let v2619 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2602 v2618 
            let _run_target_args'_v2615 = v2619 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2620 : string = "String::from($0)"
            let v2621 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2602 v2620 
            let _run_target_args'_v2615 = v2621 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2623 : std_string_String = v2602 |> unbox<std_string_String>
            let _run_target_args'_v2615 = v2623 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2627 : std_string_String = v2602 |> unbox<std_string_String>
            let _run_target_args'_v2615 = v2627 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2631 : std_string_String = v2602 |> unbox<std_string_String>
            let _run_target_args'_v2615 = v2631 
            #endif
#else
            let v2635 : std_string_String = v2602 |> unbox<std_string_String>
            let _run_target_args'_v2615 = v2635 
            #endif
            let v2638 : std_string_String = _run_target_args'_v2615 
            let v2647 : string = "bowen"
            (* run_target_args'
            let v2652 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2653 : string = "&*$0"
            let v2654 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2647 v2653 
            let _run_target_args'_v2652 = v2654 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2655 : string = "&*$0"
            let v2656 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2647 v2655 
            let _run_target_args'_v2652 = v2656 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2657 : string = "&*$0"
            let v2658 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2647 v2657 
            let _run_target_args'_v2652 = v2658 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2660 : Ref<Str> = v2647 |> unbox<Ref<Str>>
            let _run_target_args'_v2652 = v2660 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2664 : Ref<Str> = v2647 |> unbox<Ref<Str>>
            let _run_target_args'_v2652 = v2664 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2668 : Ref<Str> = v2647 |> unbox<Ref<Str>>
            let _run_target_args'_v2652 = v2668 
            #endif
#else
            let v2672 : Ref<Str> = v2647 |> unbox<Ref<Str>>
            let _run_target_args'_v2652 = v2672 
            #endif
            let v2675 : Ref<Str> = _run_target_args'_v2652 
            (* run_target_args'
            let v2688 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2689 : string = "String::from($0)"
            let v2690 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2675 v2689 
            let _run_target_args'_v2688 = v2690 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2691 : string = "String::from($0)"
            let v2692 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2675 v2691 
            let _run_target_args'_v2688 = v2692 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2693 : string = "String::from($0)"
            let v2694 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2675 v2693 
            let _run_target_args'_v2688 = v2694 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2696 : std_string_String = v2675 |> unbox<std_string_String>
            let _run_target_args'_v2688 = v2696 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2700 : std_string_String = v2675 |> unbox<std_string_String>
            let _run_target_args'_v2688 = v2700 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2704 : std_string_String = v2675 |> unbox<std_string_String>
            let _run_target_args'_v2688 = v2704 
            #endif
#else
            let v2708 : std_string_String = v2675 |> unbox<std_string_String>
            let _run_target_args'_v2688 = v2708 
            #endif
            let v2711 : std_string_String = _run_target_args'_v2688 
            let v2720 : (std_string_String []) = [|v2638; v2711|]
            let v2721 : string = "$0.to_vec()"
            let v2722 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v2720 v2721 
            let v2723 : string = "crate::model::near::rpc::RpcInput { jsonrpc: $0, id: $1, method: $2, params: v2722 }"
            let v2724 : crate_model_near_rpc_RpcInput = Fable.Core.RustInterop.emitRustExpr struct (v2419, v2492, v2565) v2723 
            let v2725 : string = method167()
            (* run_target_args'
            let v2730 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2731 : string = "&*$0"
            let v2732 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2725 v2731 
            let _run_target_args'_v2730 = v2732 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2733 : string = "&*$0"
            let v2734 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2725 v2733 
            let _run_target_args'_v2730 = v2734 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2735 : string = "&*$0"
            let v2736 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2725 v2735 
            let _run_target_args'_v2730 = v2736 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2738 : Ref<Str> = v2725 |> unbox<Ref<Str>>
            let _run_target_args'_v2730 = v2738 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2742 : Ref<Str> = v2725 |> unbox<Ref<Str>>
            let _run_target_args'_v2730 = v2742 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2746 : Ref<Str> = v2725 |> unbox<Ref<Str>>
            let _run_target_args'_v2730 = v2746 
            #endif
#else
            let v2750 : Ref<Str> = v2725 |> unbox<Ref<Str>>
            let _run_target_args'_v2730 = v2750 
            #endif
            let v2753 : Ref<Str> = _run_target_args'_v2730 
            (* run_target_args'
            let v2766 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2767 : string = "String::from($0)"
            let v2768 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2753 v2767 
            let _run_target_args'_v2766 = v2768 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2769 : string = "String::from($0)"
            let v2770 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2753 v2769 
            let _run_target_args'_v2766 = v2770 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2771 : string = "String::from($0)"
            let v2772 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2753 v2771 
            let _run_target_args'_v2766 = v2772 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2774 : std_string_String = v2753 |> unbox<std_string_String>
            let _run_target_args'_v2766 = v2774 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2778 : std_string_String = v2753 |> unbox<std_string_String>
            let _run_target_args'_v2766 = v2778 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2782 : std_string_String = v2753 |> unbox<std_string_String>
            let _run_target_args'_v2766 = v2782 
            #endif
#else
            let v2786 : std_string_String = v2753 |> unbox<std_string_String>
            let _run_target_args'_v2766 = v2786 
            #endif
            let v2789 : std_string_String = _run_target_args'_v2766 
            let v2798 : std_string_String = method92(v2789)
            let v2799 : string = "reqwest_wasm::Client::builder().build().map_err(|err| err.to_string())?.post(v2798)"
            let v2800 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr () v2799 
            let v2801 : string = "reqwest_wasm::RequestBuilder::json(v2800, &v2724)"
            let v2802 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr () v2801 
            let v2803 : reqwest_RequestBuilder = method94(v2802)
            let v2804 : string = "Box::pin(reqwest_wasm::RequestBuilder::send(v2803))"
            let v2805 : std_pin_Pin<Box<Dyn<std_future_Future<Result<reqwest_Response, reqwest_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v2804 
            let v2806 : string = "v2805.await"
            let v2807 : Result<reqwest_Response, reqwest_Error> = Fable.Core.RustInterop.emitRustExpr () v2806 
            let v2808 : (reqwest_Error -> std_string_String) = method95()
            (* run_target_args'
            let v2810 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2811 : string = "$0.map_err(|x| $1(x))"
            let v2812 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2807, v2808) v2811 
            let _run_target_args'_v2810 = v2812 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2813 : string = "$0.map_err(|x| $1(x))"
            let v2814 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2807, v2808) v2813 
            let _run_target_args'_v2810 = v2814 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2815 : string = "$0.map_err(|x| $1(x))"
            let v2816 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2807, v2808) v2815 
            let _run_target_args'_v2810 = v2816 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2817 : Result<reqwest_Response, std_string_String> = match v2807 with Ok x -> Ok x | Error x -> Error (v2808 x)
            let _run_target_args'_v2810 = v2817 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2818 : Result<reqwest_Response, std_string_String> = match v2807 with Ok x -> Ok x | Error x -> Error (v2808 x)
            let _run_target_args'_v2810 = v2818 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2819 : Result<reqwest_Response, std_string_String> = match v2807 with Ok x -> Ok x | Error x -> Error (v2808 x)
            let _run_target_args'_v2810 = v2819 
            #endif
#else
            let v2820 : Result<reqwest_Response, std_string_String> = match v2807 with Ok x -> Ok x | Error x -> Error (v2808 x)
            let _run_target_args'_v2810 = v2820 
            #endif
            let v2821 : Result<reqwest_Response, std_string_String> = _run_target_args'_v2810 
            let v2824 : string = "$0?"
            let v2825 : reqwest_Response = Fable.Core.RustInterop.emitRustExpr v2821 v2824 
            let v2826 : string = "Box::pin(reqwest_wasm::Response::text(v2825))"
            let v2827 : std_pin_Pin<Box<Dyn<std_future_Future<Result<std_string_String, reqwest_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v2826 
            let v2828 : string = "v2827.await"
            let v2829 : Result<std_string_String, reqwest_Error> = Fable.Core.RustInterop.emitRustExpr () v2828 
            let v2830 : (reqwest_Error -> std_string_String) = method95()
            (* run_target_args'
            let v2832 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2833 : string = "$0.map_err(|x| $1(x))"
            let v2834 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2829, v2830) v2833 
            let _run_target_args'_v2832 = v2834 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2835 : string = "$0.map_err(|x| $1(x))"
            let v2836 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2829, v2830) v2835 
            let _run_target_args'_v2832 = v2836 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2837 : string = "$0.map_err(|x| $1(x))"
            let v2838 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2829, v2830) v2837 
            let _run_target_args'_v2832 = v2838 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2839 : Result<std_string_String, std_string_String> = match v2829 with Ok x -> Ok x | Error x -> Error (v2830 x)
            let _run_target_args'_v2832 = v2839 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2840 : Result<std_string_String, std_string_String> = match v2829 with Ok x -> Ok x | Error x -> Error (v2830 x)
            let _run_target_args'_v2832 = v2840 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2841 : Result<std_string_String, std_string_String> = match v2829 with Ok x -> Ok x | Error x -> Error (v2830 x)
            let _run_target_args'_v2832 = v2841 
            #endif
#else
            let v2842 : Result<std_string_String, std_string_String> = match v2829 with Ok x -> Ok x | Error x -> Error (v2830 x)
            let _run_target_args'_v2832 = v2842 
            #endif
            let v2843 : Result<std_string_String, std_string_String> = _run_target_args'_v2832 
            let v2846 : string = "$0?"
            let v2847 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2843 v2846 
            let v2850 : US14 = US14_0(v2847)
            let v2851 : Result<US14, std_string_String> = Ok v2850 
            let v2856 : string = $"%A{v2851}"
            let v2859 : string = "dice_view.render (x) / roll_action new_arc_action / result1 / result: " + string v2856 + ""
            let v2860 : int64 = 200L
            let v2861 : string = method8(v2860, v2859)
            let v2862 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2863 : bool = Fable.Core.RustInterop.emitRustExpr v2861 v2862 
            let v2864 : (US14 -> US57) = method168()
            let v2865 : (std_string_String -> US57) = method169()
            let v2867 : US57 = match v2851 with Ok x -> v2864 x | Error x -> v2865 x
            let v3225 : US58 =
                match v2867 with
                | US57_0(v2870) -> (* Ok *)
                    match v2870 with
                    | US14_0(v2871) -> (* Some *)
                        let v2872 : string = "fable_library_rust::String_::fromString($0)"
                        let v2873 : string = Fable.Core.RustInterop.emitRustExpr v2871 v2872 
                        let v2874 : string = method41(v2873)
                        (* run_target_args'
                        let v2879 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2880 : string = "&*$0"
                        let v2881 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2874 v2880 
                        let _run_target_args'_v2879 = v2881 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2882 : string = "&*$0"
                        let v2883 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2874 v2882 
                        let _run_target_args'_v2879 = v2883 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2884 : string = "&*$0"
                        let v2885 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2874 v2884 
                        let _run_target_args'_v2879 = v2885 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2887 : Ref<Str> = v2874 |> unbox<Ref<Str>>
                        let _run_target_args'_v2879 = v2887 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2891 : Ref<Str> = v2874 |> unbox<Ref<Str>>
                        let _run_target_args'_v2879 = v2891 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2895 : Ref<Str> = v2874 |> unbox<Ref<Str>>
                        let _run_target_args'_v2879 = v2895 
                        #endif
#else
                        let v2899 : Ref<Str> = v2874 |> unbox<Ref<Str>>
                        let _run_target_args'_v2879 = v2899 
                        #endif
                        let v2902 : Ref<Str> = _run_target_args'_v2879 
                        let v2911 : string = "serde_json::from_str(&$0)"
                        let v2912 : Result<crate_model_near_rpc_RpcResponse, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v2902 v2911 
                        let v2913 : (serde_json_Error -> std_string_String) = method42()
                        (* run_target_args'
                        let v2915 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2916 : string = "$0.map_err(|x| $1(x))"
                        let v2917 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2912, v2913) v2916 
                        let _run_target_args'_v2915 = v2917 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2918 : string = "$0.map_err(|x| $1(x))"
                        let v2919 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2912, v2913) v2918 
                        let _run_target_args'_v2915 = v2919 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2920 : string = "$0.map_err(|x| $1(x))"
                        let v2921 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2912, v2913) v2920 
                        let _run_target_args'_v2915 = v2921 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2922 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v2912 with Ok x -> Ok x | Error x -> Error (v2913 x)
                        let _run_target_args'_v2915 = v2922 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2923 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v2912 with Ok x -> Ok x | Error x -> Error (v2913 x)
                        let _run_target_args'_v2915 = v2923 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2924 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v2912 with Ok x -> Ok x | Error x -> Error (v2913 x)
                        let _run_target_args'_v2915 = v2924 
                        #endif
#else
                        let v2925 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v2912 with Ok x -> Ok x | Error x -> Error (v2913 x)
                        let _run_target_args'_v2915 = v2925 
                        #endif
                        let v2926 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = _run_target_args'_v2915 
                        let v2929 : (crate_model_near_rpc_RpcResponse -> US60) = method170()
                        let v2930 : (std_string_String -> US60) = method171()
                        let v2932 : US60 = match v2926 with Ok x -> v2929 x | Error x -> v2930 x
                        let v3209 : US61 =
                            match v2932 with
                            | US60_1(v3206) -> (* Error *)
                                US61_1(v3206)
                            | US60_0(v2935) -> (* Ok *)
                                let v2936 : string = "$0.jsonrpc"
                                let v2937 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2935 v2936 
                                let v2938 : string = "$0.result"
                                let v2939 : crate_model_near_rpc_TransactionStatus option = Fable.Core.RustInterop.emitRustExpr v2935 v2938 
                                let v2942 : (crate_model_near_rpc_TransactionStatus -> struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) []))) = method150()
                                let v2943 : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option = v2939 |> Option.map v2942 
                                let v3143 : string = "$0.error"
                                let v3144 : crate_model_near_rpc_RpcError option = Fable.Core.RustInterop.emitRustExpr v2935 v3143 
                                let v3147 : (crate_model_near_rpc_RpcError -> struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String)) = method157()
                                let v3148 : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option = v3144 |> Option.map v3147 
                                let v3203 : string = "$0.id"
                                let v3204 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v2935 v3203 
                                US61_0(v2937, v2943, v3148, v3204)
                        match v3209 with
                        | US61_1(v3216) -> (* Error *)
                            US58_1(v3216)
                        | US61_0(v3210, v3211, v3212, v3213) -> (* Ok *)
                            let v3214 : US59 = US59_0(v3210, v3211, v3212, v3213)
                            US58_0(v3214)
                    | _ ->
                        let v3220 : US59 = US59_1
                        US58_0(v3220)
                | _ ->
                    let v3223 : US59 = US59_1
                    US58_0(v3223)
            let v3237 : Result<US59, std_string_String> =
                match v3225 with
                | US58_1(v3231) -> (* Error *)
                    let v3233 : Result<US59, std_string_String> = Error v3231 
                    v3233
                | US58_0(v3226) -> (* Ok *)
                    let v3228 : Result<US59, std_string_String> = Ok v3226 
                    v3228
            let v3239 : string = $"%A{v3237}"
            let v3242 : string = "dice_view.render (x) / roll_action new_arc_action / result2 / result: " + string v3239 + ""
            let v3243 : int64 = 200L
            let v3244 : string = method8(v3243, v3242)
            let v3245 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3246 : bool = Fable.Core.RustInterop.emitRustExpr v3244 v3245 
            let v3247 : string = v52 + v53 
            let x = v3237 //
            let v3248 : _ = x
            let v3249 : unit = ()
            (* run_target_args'
            let v3250 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3251 : string = $"true; let _fix_closure_v3249 = $0"
            let v3252 : bool = Fable.Core.RustInterop.emitRustExpr v3248 v3251 
            let _run_target_args'_v3250 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3253 : string = $"true; let _fix_closure_v3249 = $0"
            let v3254 : bool = Fable.Core.RustInterop.emitRustExpr v3248 v3253 
            let _run_target_args'_v3250 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3255 : string = $"true; let _fix_closure_v3249 = $0"
            let v3256 : bool = Fable.Core.RustInterop.emitRustExpr v3248 v3255 
            let _run_target_args'_v3250 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v3250 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v3250 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v3250 = false 
            #endif
#else
            let _run_target_args'_v3250 = false 
            #endif
            let v3257 : bool = _run_target_args'_v3250 
            let v3258 : string = $"true; _fix_closure_v3249 " + v3247 + "); " + v52 + " // rust.fix_closure'"
            let v3259 : bool = Fable.Core.RustInterop.emitRustExpr () v3258 
            let v3260 : string = "__future_init"
            let v3261 : _ = Fable.Core.RustInterop.emitRustExpr () v3260 
            let v3262 : string = "v3261"
            let v3263 : std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v3262 
            let func1_from_result = v3263 //
            let v3264 : _ = func1_from_result
            let v3265 : string = $"true; $0 /*"
            let v3266 : bool = Fable.Core.RustInterop.emitRustExpr v3264 v3265 
            let v3267 : string = $"*/ }}); //"
            let v3268 : bool = Fable.Core.RustInterop.emitRustExpr () v3267 
            let v3269 : string = $"_func1_from_v2337"
            let v3270 : Func0<Heap6, std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v3269 
            let v3271 : string = "leptos::prelude::ArcAction::new(move |value: &std::sync::Arc<Heap6>| $0(value.clone()))"
            let v3272 : (Heap6 -> std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>) = closure141(v3270)
            let v3273 : leptos_prelude_ArcAction<Heap6, Result<US59, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v3272 v3271 
            let v3274 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3275 : (unit -> Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>) = closure142(v3273)
            let v3276 : leptos_prelude_ArcMemo<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v3275 v3274 
            let v3277 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3278 : (unit -> string option) = closure147(v3276)
            let v3279 : leptos_prelude_ArcMemo<string option> = Fable.Core.RustInterop.emitRustExpr v3278 v3277 
            let v3280 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3281 : (unit -> US31) = closure152(v2287)
            let v3282 : leptos_prelude_ArcMemo<US31> = Fable.Core.RustInterop.emitRustExpr v3281 v3280 
            let v3283 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3284 : (unit -> Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))>) = closure153(v2287)
            let v3285 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))>> = Fable.Core.RustInterop.emitRustExpr v3284 v3283 
            let v3286 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3287 : (unit -> Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>) = closure158(v3285)
            let v3288 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> = Fable.Core.RustInterop.emitRustExpr v3287 v3286 
            let v3289 : string = "vec![" + v52 + "]"
            let v3290 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3289 
            let v3291 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3292 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3290 v3291 
            let v3293 : string = "class=\"flex flex-col [position:relative]\""
            let v3294 : string = " " + v3293 + v52 + ""
            let v3295 : string = "$0"
            let v3296 : (unit -> string) = closure161()
            let v3297 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3296 v3295 
            let v3298 : string = "$0"
            let v3299 : (unit -> bool) = closure162()
            let v3300 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v3299 v3298 
            let v3301 : string = "class=\"[position:absolute] [right:0] [top:0]\""
            let v3302 : string = " " + v3301 + v52 + ""
            let v3303 : string = "v3292"
            let v3304 : string = v3303 + v52 
            let v3305 : string = v3304 + v52 
            let v3306 : string = "vec![" + v3305 + "]"
            let v3307 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3306 
            let v3308 : string = "leptos::prelude::Fragment::new($0)"
            let v3309 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3307 v3308 
            let v3310 : string = "leptos::prelude::AnyView::from($0)"
            let v3311 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3309 v3310 
            let v3312 : string = "div"
            let v3313 : string = "<" + v3312 + " " + v3302 + ">move || { v3311 }</" + v3312 + ">"
            let v3314 : string = "leptos::prelude::view! { " + v3313 + " }"
            let v3315 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3314 
            let v3316 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3315 |> unbox
            let v3317 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3318 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3316 v3317 
            let v3319 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v3297(())"
            let v3320 : string = "open=move || v3300(())"
            let v3321 : string = " " + v3319 + v52 + ""
            let v3322 : string = " " + v3320 + v3321 + ""
            let v3323 : string = "$0"
            let v3324 : (unit -> string) = closure163()
            let v3325 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3324 v3323 
            let v3326 : string = "$0"
            let v3327 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure164()
            let v3328 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v3327 v3326 
            let v3329 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v3328(()) + \" \" + &v3325(())"
            let v3330 : string = " " + v3329 + v52 + ""
            let v3331 : string = "class=\"flex items-center gap-2\""
            let v3332 : string = " " + v3331 + v52 + ""
            let v3333 : (unit -> string) = method187()
            let v3334 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
            let v3335 : string = " " + v3334 + v52 + ""
            let v3336 : string = v3333 ()
            (* run_target_args'
            let v3341 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3342 : string = "&*$0"
            let v3343 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3336 v3342 
            let _run_target_args'_v3341 = v3343 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3344 : string = "&*$0"
            let v3345 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3336 v3344 
            let _run_target_args'_v3341 = v3345 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3346 : string = "&*$0"
            let v3347 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3336 v3346 
            let _run_target_args'_v3341 = v3347 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3349 : Ref<Str> = v3336 |> unbox<Ref<Str>>
            let _run_target_args'_v3341 = v3349 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3353 : Ref<Str> = v3336 |> unbox<Ref<Str>>
            let _run_target_args'_v3341 = v3353 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3357 : Ref<Str> = v3336 |> unbox<Ref<Str>>
            let _run_target_args'_v3341 = v3357 
            #endif
#else
            let v3361 : Ref<Str> = v3336 |> unbox<Ref<Str>>
            let _run_target_args'_v3341 = v3361 
            #endif
            let v3364 : Ref<Str> = _run_target_args'_v3341 
            (* run_target_args'
            let v3377 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3378 : string = "String::from($0)"
            let v3379 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3364 v3378 
            let _run_target_args'_v3377 = v3379 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3380 : string = "String::from($0)"
            let v3381 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3364 v3380 
            let _run_target_args'_v3377 = v3381 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3382 : string = "String::from($0)"
            let v3383 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3364 v3382 
            let _run_target_args'_v3377 = v3383 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3385 : std_string_String = v3364 |> unbox<std_string_String>
            let _run_target_args'_v3377 = v3385 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3389 : std_string_String = v3364 |> unbox<std_string_String>
            let _run_target_args'_v3377 = v3389 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3393 : std_string_String = v3364 |> unbox<std_string_String>
            let _run_target_args'_v3377 = v3393 
            #endif
#else
            let v3397 : std_string_String = v3364 |> unbox<std_string_String>
            let _run_target_args'_v3377 = v3397 
            #endif
            let v3400 : std_string_String = _run_target_args'_v3377 
            let v3409 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v3410 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3400 v3409 
            let v3411 : string = "v3410"
            let v3412 : string = v3411 + v52 
            let v3413 : string = v3412 + v52 
            let v3414 : string = "vec![" + v3413 + "]"
            let v3415 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3414 
            let v3416 : string = "leptos::prelude::Fragment::new($0)"
            let v3417 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3415 v3416 
            let v3418 : string = "leptos::prelude::AnyView::from($0)"
            let v3419 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3417 v3418 
            let v3420 : string = "span"
            let v3421 : string = "<" + v3420 + " " + v3335 + ">move || { v3419 }</" + v3420 + ">"
            let v3422 : string = "leptos::prelude::view! { " + v3421 + " }"
            let v3423 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3422 
            let v3424 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v3423 |> unbox
            let v3425 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3426 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3424 v3425 
            let v3427 : string = "v3426"
            let v3428 : string = v3427 + v52 
            let v3429 : string = v3428 + v52 
            let v3430 : string = "vec![" + v3429 + "]"
            let v3431 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3430 
            let v3432 : string = "leptos::prelude::Fragment::new($0)"
            let v3433 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3431 v3432 
            let v3434 : string = "leptos::prelude::AnyView::from($0)"
            let v3435 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3433 v3434 
            let v3436 : string = "<" + v3312 + " " + v3332 + ">move || { v3435 }</" + v3312 + ">"
            let v3437 : string = "leptos::prelude::view! { " + v3436 + " }"
            let v3438 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3437 
            let v3439 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3438 |> unbox
            let v3440 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3441 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3439 v3440 
            let v3442 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
            let v3443 : string = " " + v3442 + v52 + ""
            let v3444 : string = "$0"
            let v3445 : (unit -> string) = closure166()
            let v3446 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3445 v3444 
            let v3447 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v3448 : string = "viewBox=\"0 0 20 20\""
            let v3449 : string = "fill=\"currentColor\""
            let v3450 : string = "class=move || \" \".to_owned() + &v3446(())"
            let v3451 : string = " " + v3447 + v52 + ""
            let v3452 : string = " " + v3448 + v3451 + ""
            let v3453 : string = " " + v3449 + v3452 + ""
            let v3454 : string = " " + v3450 + v3453 + ""
            let v3455 : string = "fill-rule=\"evenodd\""
            let v3456 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
            let v3457 : string = "clip-rule=\"evenodd\""
            let v3458 : string = " " + v3455 + v52 + ""
            let v3459 : string = " " + v3456 + v3458 + ""
            let v3460 : string = " " + v3457 + v3459 + ""
            let v3461 : string = "vec![" + v52 + "]"
            let v3462 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3461 
            let v3463 : string = "leptos::prelude::Fragment::new($0)"
            let v3464 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3462 v3463 
            let v3465 : string = "leptos::prelude::AnyView::from($0)"
            let v3466 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3464 v3465 
            let v3467 : string = "path"
            let v3468 : string = "<" + v3467 + " " + v3460 + ">move || { v3466 }</" + v3467 + ">"
            let v3469 : string = "leptos::prelude::view! { " + v3468 + " }"
            let v3470 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3469 
            let v3471 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v3470 |> unbox
            let v3472 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3473 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3471 v3472 
            let v3474 : string = "v3473"
            let v3475 : string = v3474 + v52 
            let v3476 : string = v3475 + v52 
            let v3477 : string = "vec![" + v3476 + "]"
            let v3478 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3477 
            let v3479 : string = "leptos::prelude::Fragment::new($0)"
            let v3480 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3478 v3479 
            let v3481 : string = "leptos::prelude::AnyView::from($0)"
            let v3482 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3480 v3481 
            let v3483 : string = "svg"
            let v3484 : string = "<" + v3483 + " " + v3454 + ">move || { v3482 }</" + v3483 + ">"
            let v3485 : string = "leptos::prelude::view! { " + v3484 + " }"
            let v3486 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3485 
            let v3487 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v3486 |> unbox
            let v3488 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3489 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3487 v3488 
            let v3490 : string = "v3489"
            let v3491 : string = v3490 + v52 
            let v3492 : string = v3491 + v52 
            let v3493 : string = "vec![" + v3492 + "]"
            let v3494 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3493 
            let v3495 : string = "leptos::prelude::Fragment::new($0)"
            let v3496 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3494 v3495 
            let v3497 : string = "leptos::prelude::AnyView::from($0)"
            let v3498 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3496 v3497 
            let v3499 : string = "<" + v3420 + " " + v3443 + ">move || { v3498 }</" + v3420 + ">"
            let v3500 : string = "leptos::prelude::view! { " + v3499 + " }"
            let v3501 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3500 
            let v3502 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v3501 |> unbox
            let v3503 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3504 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3502 v3503 
            let v3505 : string = "v3504"
            let v3506 : string = v3505 + v52 
            let v3507 : string = v3506 + v52 
            let v3508 : string = "v3441"
            let v3509 : string = ", "
            let v3510 : string = v3508 + v3509 
            let v3511 : string = v3510 + v3507 
            let v3512 : string = "vec![" + v3511 + "]"
            let v3513 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3512 
            let v3514 : string = "leptos::prelude::Fragment::new($0)"
            let v3515 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3513 v3514 
            let v3516 : string = "leptos::prelude::AnyView::from($0)"
            let v3517 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3515 v3516 
            let v3518 : string = "summary"
            let v3519 : string = "<" + v3518 + " " + v3330 + ">move || { v3517 }</" + v3518 + ">"
            let v3520 : string = "leptos::prelude::view! { " + v3519 + " }"
            let v3521 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3520 
            let v3522 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v3521 |> unbox
            let v3523 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3524 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3522 v3523 
            let v3525 : string = "class=\"flex flex-1 flex-col\""
            let v3526 : string = " " + v3525 + v52 + ""
            let v3527 : string = "Func0::new(move || $0())"
            let v3528 : (unit -> leptos_dom_Fragment) = closure167(v2287, v3273, v3279, v3282, v3288)
            let v3529 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v3528 v3527 
            let v3530 : Func0<leptos_dom_Fragment> = method195(v3529)
            let v3531 : string = "(move || v3530())()"
            let v3532 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v3531 
            let v3533 : string = "leptos::prelude::AnyView::from($0)"
            let v3534 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3532 v3533 
            let v3535 : string = "<" + v3312 + " " + v3526 + ">move || { v3534 }</" + v3312 + ">"
            let v3536 : string = "leptos::prelude::view! { " + v3535 + " }"
            let v3537 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3536 
            let v3538 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3537 |> unbox
            let v3539 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3540 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3538 v3539 
            let v3541 : string = "v3540"
            let v3542 : string = v3541 + v52 
            let v3543 : string = v3542 + v52 
            let v3544 : string = "v3524"
            let v3545 : string = v3544 + v3509 
            let v3546 : string = v3545 + v3543 
            let v3547 : string = "vec![" + v3546 + "]"
            let v3548 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3547 
            let v3549 : string = "leptos::prelude::Fragment::new($0)"
            let v3550 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3548 v3549 
            let v3551 : string = "leptos::prelude::AnyView::from($0)"
            let v3552 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3550 v3551 
            let v3553 : string = "details"
            let v3554 : string = "<" + v3553 + " " + v3322 + ">move || { v3552 }</" + v3553 + ">"
            let v3555 : string = "leptos::prelude::view! { " + v3554 + " }"
            let v3556 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3555 
            let v3557 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v3556 |> unbox
            let v3558 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3559 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3557 v3558 
            let v3560 : string = "v3559"
            let v3561 : string = v3560 + v52 
            let v3562 : string = v3561 + v52 
            let v3563 : string = "v3318"
            let v3564 : string = v3563 + v3509 
            let v3565 : string = v3564 + v3562 
            let v3566 : string = "vec![" + v3565 + "]"
            let v3567 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3566 
            let v3568 : string = "leptos::prelude::Fragment::new($0)"
            let v3569 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3567 v3568 
            let v3570 : string = "leptos::prelude::AnyView::from($0)"
            let v3571 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3569 v3570 
            let v3572 : string = "<" + v3312 + " " + v3294 + ">move || { v3571 }</" + v3312 + ">"
            let v3573 : string = "leptos::prelude::view! { " + v3572 + " }"
            let v3574 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3573 
            let v3575 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3574 |> unbox
            let v3576 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3577 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3575 v3576 
            let v3578 : string = "vec![" + v52 + "]"
            let v3579 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3578 
            let v3580 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3581 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3579 v3580 
            let v3582 : string = "class=\"flex flex-col [position:relative]\""
            let v3583 : string = " " + v3582 + v52 + ""
            let v3584 : string = "$0"
            let v3585 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3296 v3584 
            let v3586 : string = "$0"
            let v3587 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v3299 v3586 
            let v3588 : string = "class=\"[position:absolute] [right:0] [top:0]\""
            let v3589 : string = " " + v3588 + v52 + ""
            let v3590 : string = "v3581"
            let v3591 : string = v3590 + v52 
            let v3592 : string = v3591 + v52 
            let v3593 : string = "vec![" + v3592 + "]"
            let v3594 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3593 
            let v3595 : string = "leptos::prelude::Fragment::new($0)"
            let v3596 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3594 v3595 
            let v3597 : string = "leptos::prelude::AnyView::from($0)"
            let v3598 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3596 v3597 
            let v3599 : string = "<" + v3312 + " " + v3589 + ">move || { v3598 }</" + v3312 + ">"
            let v3600 : string = "leptos::prelude::view! { " + v3599 + " }"
            let v3601 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3600 
            let v3602 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3601 |> unbox
            let v3603 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3604 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3602 v3603 
            let v3605 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v3585(())"
            let v3606 : string = "open=move || v3587(())"
            let v3607 : string = " " + v3605 + v52 + ""
            let v3608 : string = " " + v3606 + v3607 + ""
            let v3609 : string = "$0"
            let v3610 : (unit -> string) = closure183()
            let v3611 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3610 v3609 
            let v3612 : string = "$0"
            let v3613 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure184()
            let v3614 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v3613 v3612 
            let v3615 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v3614(()) + \" \" + &v3611(())"
            let v3616 : string = " " + v3615 + v52 + ""
            let v3617 : string = "class=\"flex items-center gap-2\""
            let v3618 : string = " " + v3617 + v52 + ""
            let v3619 : (unit -> string) = method198()
            let v3620 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
            let v3621 : string = " " + v3620 + v52 + ""
            let v3622 : string = v3619 ()
            (* run_target_args'
            let v3627 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3628 : string = "&*$0"
            let v3629 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3622 v3628 
            let _run_target_args'_v3627 = v3629 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3630 : string = "&*$0"
            let v3631 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3622 v3630 
            let _run_target_args'_v3627 = v3631 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3632 : string = "&*$0"
            let v3633 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3622 v3632 
            let _run_target_args'_v3627 = v3633 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3635 : Ref<Str> = v3622 |> unbox<Ref<Str>>
            let _run_target_args'_v3627 = v3635 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3639 : Ref<Str> = v3622 |> unbox<Ref<Str>>
            let _run_target_args'_v3627 = v3639 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3643 : Ref<Str> = v3622 |> unbox<Ref<Str>>
            let _run_target_args'_v3627 = v3643 
            #endif
#else
            let v3647 : Ref<Str> = v3622 |> unbox<Ref<Str>>
            let _run_target_args'_v3627 = v3647 
            #endif
            let v3650 : Ref<Str> = _run_target_args'_v3627 
            (* run_target_args'
            let v3663 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3664 : string = "String::from($0)"
            let v3665 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3650 v3664 
            let _run_target_args'_v3663 = v3665 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3666 : string = "String::from($0)"
            let v3667 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3650 v3666 
            let _run_target_args'_v3663 = v3667 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3668 : string = "String::from($0)"
            let v3669 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3650 v3668 
            let _run_target_args'_v3663 = v3669 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3671 : std_string_String = v3650 |> unbox<std_string_String>
            let _run_target_args'_v3663 = v3671 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3675 : std_string_String = v3650 |> unbox<std_string_String>
            let _run_target_args'_v3663 = v3675 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3679 : std_string_String = v3650 |> unbox<std_string_String>
            let _run_target_args'_v3663 = v3679 
            #endif
#else
            let v3683 : std_string_String = v3650 |> unbox<std_string_String>
            let _run_target_args'_v3663 = v3683 
            #endif
            let v3686 : std_string_String = _run_target_args'_v3663 
            let v3695 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v3696 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3686 v3695 
            let v3697 : string = "v3696"
            let v3698 : string = v3697 + v52 
            let v3699 : string = v3698 + v52 
            let v3700 : string = "vec![" + v3699 + "]"
            let v3701 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3700 
            let v3702 : string = "leptos::prelude::Fragment::new($0)"
            let v3703 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3701 v3702 
            let v3704 : string = "leptos::prelude::AnyView::from($0)"
            let v3705 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3703 v3704 
            let v3706 : string = "<" + v3420 + " " + v3621 + ">move || { v3705 }</" + v3420 + ">"
            let v3707 : string = "leptos::prelude::view! { " + v3706 + " }"
            let v3708 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3707 
            let v3709 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v3708 |> unbox
            let v3710 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3711 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3709 v3710 
            let v3712 : string = "v3711"
            let v3713 : string = v3712 + v52 
            let v3714 : string = v3713 + v52 
            let v3715 : string = "vec![" + v3714 + "]"
            let v3716 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3715 
            let v3717 : string = "leptos::prelude::Fragment::new($0)"
            let v3718 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3716 v3717 
            let v3719 : string = "leptos::prelude::AnyView::from($0)"
            let v3720 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3718 v3719 
            let v3721 : string = "<" + v3312 + " " + v3618 + ">move || { v3720 }</" + v3312 + ">"
            let v3722 : string = "leptos::prelude::view! { " + v3721 + " }"
            let v3723 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3722 
            let v3724 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3723 |> unbox
            let v3725 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3726 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3724 v3725 
            let v3727 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
            let v3728 : string = " " + v3727 + v52 + ""
            let v3729 : string = "$0"
            let v3730 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3445 v3729 
            let v3731 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v3732 : string = "viewBox=\"0 0 20 20\""
            let v3733 : string = "fill=\"currentColor\""
            let v3734 : string = "class=move || \" \".to_owned() + &v3730(())"
            let v3735 : string = " " + v3731 + v52 + ""
            let v3736 : string = " " + v3732 + v3735 + ""
            let v3737 : string = " " + v3733 + v3736 + ""
            let v3738 : string = " " + v3734 + v3737 + ""
            let v3739 : string = "fill-rule=\"evenodd\""
            let v3740 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
            let v3741 : string = "clip-rule=\"evenodd\""
            let v3742 : string = " " + v3739 + v52 + ""
            let v3743 : string = " " + v3740 + v3742 + ""
            let v3744 : string = " " + v3741 + v3743 + ""
            let v3745 : string = "vec![" + v52 + "]"
            let v3746 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3745 
            let v3747 : string = "leptos::prelude::Fragment::new($0)"
            let v3748 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3746 v3747 
            let v3749 : string = "leptos::prelude::AnyView::from($0)"
            let v3750 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3748 v3749 
            let v3751 : string = "<" + v3467 + " " + v3744 + ">move || { v3750 }</" + v3467 + ">"
            let v3752 : string = "leptos::prelude::view! { " + v3751 + " }"
            let v3753 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3752 
            let v3754 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v3753 |> unbox
            let v3755 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3756 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3754 v3755 
            let v3757 : string = "v3756"
            let v3758 : string = v3757 + v52 
            let v3759 : string = v3758 + v52 
            let v3760 : string = "vec![" + v3759 + "]"
            let v3761 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3760 
            let v3762 : string = "leptos::prelude::Fragment::new($0)"
            let v3763 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3761 v3762 
            let v3764 : string = "leptos::prelude::AnyView::from($0)"
            let v3765 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3763 v3764 
            let v3766 : string = "<" + v3483 + " " + v3738 + ">move || { v3765 }</" + v3483 + ">"
            let v3767 : string = "leptos::prelude::view! { " + v3766 + " }"
            let v3768 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3767 
            let v3769 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v3768 |> unbox
            let v3770 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3771 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3769 v3770 
            let v3772 : string = "v3771"
            let v3773 : string = v3772 + v52 
            let v3774 : string = v3773 + v52 
            let v3775 : string = "vec![" + v3774 + "]"
            let v3776 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3775 
            let v3777 : string = "leptos::prelude::Fragment::new($0)"
            let v3778 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3776 v3777 
            let v3779 : string = "leptos::prelude::AnyView::from($0)"
            let v3780 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3778 v3779 
            let v3781 : string = "<" + v3420 + " " + v3728 + ">move || { v3780 }</" + v3420 + ">"
            let v3782 : string = "leptos::prelude::view! { " + v3781 + " }"
            let v3783 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3782 
            let v3784 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v3783 |> unbox
            let v3785 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3786 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3784 v3785 
            let v3787 : string = "v3786"
            let v3788 : string = v3787 + v52 
            let v3789 : string = v3788 + v52 
            let v3790 : string = "v3726"
            let v3791 : string = v3790 + v3509 
            let v3792 : string = v3791 + v3789 
            let v3793 : string = "vec![" + v3792 + "]"
            let v3794 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3793 
            let v3795 : string = "leptos::prelude::Fragment::new($0)"
            let v3796 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3794 v3795 
            let v3797 : string = "leptos::prelude::AnyView::from($0)"
            let v3798 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3796 v3797 
            let v3799 : string = "<" + v3518 + " " + v3616 + ">move || { v3798 }</" + v3518 + ">"
            let v3800 : string = "leptos::prelude::view! { " + v3799 + " }"
            let v3801 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3800 
            let v3802 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v3801 |> unbox
            let v3803 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3804 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3802 v3803 
            let v3805 : string = "class=\"flex flex-1 flex-col\""
            let v3806 : string = " " + v3805 + v52 + ""
            let v3807 : string = "Func0::new(move || $0())"
            let v3808 : (unit -> leptos_dom_Fragment) = closure186(v2327, v2319, v2299)
            let v3809 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v3808 v3807 
            let v3810 : Func0<leptos_dom_Fragment> = method195(v3809)
            let v3811 : string = "(move || v3810())()"
            let v3812 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v3811 
            let v3813 : string = "leptos::prelude::AnyView::from($0)"
            let v3814 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3812 v3813 
            let v3815 : string = "<" + v3312 + " " + v3806 + ">move || { v3814 }</" + v3312 + ">"
            let v3816 : string = "leptos::prelude::view! { " + v3815 + " }"
            let v3817 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3816 
            let v3818 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3817 |> unbox
            let v3819 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3820 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3818 v3819 
            let v3821 : string = "v3820"
            let v3822 : string = v3821 + v52 
            let v3823 : string = v3822 + v52 
            let v3824 : string = "v3804"
            let v3825 : string = v3824 + v3509 
            let v3826 : string = v3825 + v3823 
            let v3827 : string = "vec![" + v3826 + "]"
            let v3828 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3827 
            let v3829 : string = "leptos::prelude::Fragment::new($0)"
            let v3830 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3828 v3829 
            let v3831 : string = "leptos::prelude::AnyView::from($0)"
            let v3832 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3830 v3831 
            let v3833 : string = "<" + v3553 + " " + v3608 + ">move || { v3832 }</" + v3553 + ">"
            let v3834 : string = "leptos::prelude::view! { " + v3833 + " }"
            let v3835 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3834 
            let v3836 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v3835 |> unbox
            let v3837 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3838 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3836 v3837 
            let v3839 : string = "v3838"
            let v3840 : string = v3839 + v52 
            let v3841 : string = v3840 + v52 
            let v3842 : string = "v3604"
            let v3843 : string = v3842 + v3509 
            let v3844 : string = v3843 + v3841 
            let v3845 : string = "vec![" + v3844 + "]"
            let v3846 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3845 
            let v3847 : string = "leptos::prelude::Fragment::new($0)"
            let v3848 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3846 v3847 
            let v3849 : string = "leptos::prelude::AnyView::from($0)"
            let v3850 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3848 v3849 
            let v3851 : string = "<" + v3312 + " " + v3583 + ">move || { v3850 }</" + v3312 + ">"
            let v3852 : string = "leptos::prelude::view! { " + v3851 + " }"
            let v3853 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3852 
            let v3854 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3853 |> unbox
            let v3855 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3856 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3854 v3855 
            let v3857 : string = "v3856"
            let v3858 : string = v3857 + v52 
            let v3859 : string = v3858 + v52 
            let v3860 : string = "v3577"
            let v3861 : string = v3860 + v3509 
            let v3862 : string = v3861 + v3859 
            let v3863 : string = "vec![" + v3862 + "]"
            let v3864 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3863 
            let v3865 : string = "leptos::prelude::Fragment::new($0)"
            let v3866 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3864 v3865 
            US22_0(v3866)
        | US18_2 -> (* Lists *)
            let v3868 : string = "lists_view.render ()"
            let v3869 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3870 : bool = Fable.Core.RustInterop.emitRustExpr v3868 v3869 
            let v3871 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
            let v3872 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v3871 
            let v3873 : string = "$0.unwrap()"
            let v3874 : Heap2 = Fable.Core.RustInterop.emitRustExpr v3872 v3873 
            let v3875 : string = "???"
            (* run_target_args'
            let v3880 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3881 : string = "&*$0"
            let v3882 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3875 v3881 
            let _run_target_args'_v3880 = v3882 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3883 : string = "&*$0"
            let v3884 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3875 v3883 
            let _run_target_args'_v3880 = v3884 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3885 : string = "&*$0"
            let v3886 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3875 v3885 
            let _run_target_args'_v3880 = v3886 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3888 : Ref<Str> = v3875 |> unbox<Ref<Str>>
            let _run_target_args'_v3880 = v3888 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3892 : Ref<Str> = v3875 |> unbox<Ref<Str>>
            let _run_target_args'_v3880 = v3892 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3896 : Ref<Str> = v3875 |> unbox<Ref<Str>>
            let _run_target_args'_v3880 = v3896 
            #endif
#else
            let v3900 : Ref<Str> = v3875 |> unbox<Ref<Str>>
            let _run_target_args'_v3880 = v3900 
            #endif
            let v3903 : Ref<Str> = _run_target_args'_v3880 
            (* run_target_args'
            let v3916 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3917 : string = "String::from($0)"
            let v3918 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3903 v3917 
            let _run_target_args'_v3916 = v3918 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3919 : string = "String::from($0)"
            let v3920 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3903 v3919 
            let _run_target_args'_v3916 = v3920 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3921 : string = "String::from($0)"
            let v3922 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3903 v3921 
            let _run_target_args'_v3916 = v3922 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3924 : std_string_String = v3903 |> unbox<std_string_String>
            let _run_target_args'_v3916 = v3924 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3928 : std_string_String = v3903 |> unbox<std_string_String>
            let _run_target_args'_v3916 = v3928 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3932 : std_string_String = v3903 |> unbox<std_string_String>
            let _run_target_args'_v3916 = v3932 
            #endif
#else
            let v3936 : std_string_String = v3903 |> unbox<std_string_String>
            let _run_target_args'_v3916 = v3936 
            #endif
            let v3939 : std_string_String = _run_target_args'_v3916 
            let v3948 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v3949 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3939 v3948 
            let v3950 : string = "v3949"
            let v3951 : string = v3950 + v52 
            let v3952 : string = v3951 + v52 
            let v3953 : string = "vec![" + v3952 + "]"
            let v3954 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3953 
            let v3955 : string = "leptos::prelude::Fragment::new($0)"
            let v3956 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3954 v3955 
            US22_0(v3956)
        | US18_4 -> (* Settings *)
            let v4705 : string = "settings_view.render ()"
            let v4706 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v4707 : bool = Fable.Core.RustInterop.emitRustExpr v4705 v4706 
            let v4708 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
            let v4709 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v4708 
            let v4710 : string = "$0.unwrap()"
            let v4711 : Heap2 = Fable.Core.RustInterop.emitRustExpr v4709 v4710 
            let v4712 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v4713 : (unit -> Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>) = closure192(v4711)
            let v4714 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>> = Fable.Core.RustInterop.emitRustExpr v4713 v4712 
            let v4715 : string = $"leptos::prelude::signal($0)"
            let struct (v4716 : leptos_prelude_ReadSignal<int32>, v4717 : leptos_prelude_WriteSignal<int32>) = Fable.Core.RustInterop.emitRustExpr 0 v4715 
            let v4718 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v4719 : (unit -> Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>) = closure195(v4714, v4716)
            let v4720 : leptos_prelude_ArcMemo<Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>> = Fable.Core.RustInterop.emitRustExpr v4719 v4718 
            let v4721 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v4722 : (unit -> int32) = closure198(v4720)
            let v4723 : leptos_prelude_ArcMemo<int32> = Fable.Core.RustInterop.emitRustExpr v4722 v4721 
            let v4724 : unit = ()
            let v4725 : string = $"true; let _func0_from_v4724 = Func0::from(move || {{ //"
            let v4726 : bool = Fable.Core.RustInterop.emitRustExpr () v4725 
            let v4727 : leptos_prelude_ArcRwSignal<Heap1> = v4711.l0
            let v4728 : string = "Box::pin($0)"
            let v4729 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v4727 v4728 
            let v4730 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
            let v4731 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4729 v4730 
            let v4732 : leptos_prelude_ArcRwSignal<Heap0> = v4731.l3
            let v4733 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
            let v4734 : bool = Fable.Core.RustInterop.emitRustExpr v4732 v4733 
            let v4736 : TypeEmit<Heap0> = null |> unbox<TypeEmit<Heap0>>
            let v4739 : string = "*/ | { *x = $0(x.clone()) }); //"
            let v4740 : (Heap0 -> Heap0) = closure199(v4714)
            let v4741 : bool = Fable.Core.RustInterop.emitRustExpr v4740 v4739 
            let v4742 : string = $"true; leptos::prelude::WriteSignal::update(&$0, |x: &mut /*"
            let v4743 : bool = Fable.Core.RustInterop.emitRustExpr v4717 v4742 
            let v4745 : TypeEmit<int32> = null |> unbox<TypeEmit<int32>>
            let v4748 : string = "*/ | { *x = $0(x.clone()) }); //"
            let v4749 : (int32 -> int32) = closure201()
            let v4750 : bool = Fable.Core.RustInterop.emitRustExpr v4749 v4748 
            // rust.func0_from / is_unit
            let v4751 : string = $"true; /*"
            let v4752 : bool = Fable.Core.RustInterop.emitRustExpr () v4751 
            let v4753 : string = $"*/ }}); //"
            let v4754 : bool = Fable.Core.RustInterop.emitRustExpr () v4753 
            let v4755 : string = $"_func0_from_v4724"
            let v4756 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v4755 
            let v4757 : string = "$0"
            let v4758 : (unit -> string) = closure202()
            let v4759 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4758 v4757 
            let v4760 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v4761 : string = "fill=\"none\""
            let v4762 : string = "viewBox=\"0 0 24 24\""
            let v4763 : string = "stroke-width=\"1.5\""
            let v4764 : string = "stroke=\"currentColor\""
            let v4765 : string = "class=move || \" \".to_owned() + &v4759(())"
            let v4766 : string = " " + v4760 + v52 + ""
            let v4767 : string = " " + v4761 + v4766 + ""
            let v4768 : string = " " + v4762 + v4767 + ""
            let v4769 : string = " " + v4763 + v4768 + ""
            let v4770 : string = " " + v4764 + v4769 + ""
            let v4771 : string = " " + v4765 + v4770 + ""
            let v4772 : string = "stroke-linecap=\"round\""
            let v4773 : string = "stroke-linejoin=\"round\""
            let v4774 : string = "d=\"M12 6v12m6-6H6\""
            let v4775 : string = " " + v4772 + v52 + ""
            let v4776 : string = " " + v4773 + v4775 + ""
            let v4777 : string = " " + v4774 + v4776 + ""
            let v4778 : string = "vec![" + v52 + "]"
            let v4779 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4778 
            let v4780 : string = "leptos::prelude::Fragment::new($0)"
            let v4781 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4779 v4780 
            let v4782 : string = "leptos::prelude::AnyView::from($0)"
            let v4783 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4781 v4782 
            let v4784 : string = "path"
            let v4785 : string = "<" + v4784 + " " + v4777 + ">move || { v4783 }</" + v4784 + ">"
            let v4786 : string = "leptos::prelude::view! { " + v4785 + " }"
            let v4787 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4786 
            let v4788 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4787 |> unbox
            let v4789 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4790 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4788 v4789 
            let v4791 : string = "v4790"
            let v4792 : string = v4791 + v52 
            let v4793 : string = v4792 + v52 
            let v4794 : string = "vec![" + v4793 + "]"
            let v4795 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4794 
            let v4796 : string = "leptos::prelude::Fragment::new($0)"
            let v4797 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4795 v4796 
            let v4798 : string = "leptos::prelude::AnyView::from($0)"
            let v4799 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4797 v4798 
            let v4800 : string = "svg"
            let v4801 : string = "<" + v4800 + " " + v4771 + ">move || { v4799 }</" + v4800 + ">"
            let v4802 : string = "leptos::prelude::view! { " + v4801 + " }"
            let v4803 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4802 
            let v4804 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4803 |> unbox
            let v4805 : string = "on:click=move |_| v4756()"
            let v4806 : string = "aria-label=\"Add\""
            let v4807 : string = "$0"
            let v4808 : (unit -> std_string_String) = closure203()
            let v4809 : (unit -> std_string_String) = Fable.Core.RustInterop.emitRustExpr v4808 v4807 
            let v4810 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] pb-[8px] pt-[8px] px-[12px] \".to_owned() + &v4809(())"
            let v4811 : string = " " + v4810 + v52 + ""
            let v4812 : string = " " + v4805 + v4811 + ""
            let v4813 : string = " " + v4806 + v4812 + ""
            let v4814 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4815 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4804 v4814 
            let v4816 : string = "v4815"
            let v4817 : string = v4816 + v52 
            let v4818 : string = v4817 + v52 
            let v4819 : string = "vec![" + v4818 + "]"
            let v4820 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4819 
            let v4821 : string = "leptos::prelude::Fragment::new($0)"
            let v4822 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4820 v4821 
            let v4823 : string = "leptos::prelude::AnyView::from($0)"
            let v4824 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4822 v4823 
            let v4825 : string = "button"
            let v4826 : string = "<" + v4825 + " " + v4813 + ">move || { v4824 }</" + v4825 + ">"
            let v4827 : string = "leptos::prelude::view! { " + v4826 + " }"
            let v4828 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4827 
            let v4829 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Button>> = v4828 |> unbox
            let v4830 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4831 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4829 v4830 
            let v4832 : string = "vec![" + v52 + "]"
            let v4833 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4832 
            let v4834 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4835 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4833 v4834 
            let v4836 : string = "class=\"flex flex-col [position:relative]\""
            let v4837 : string = " " + v4836 + v52 + ""
            let v4838 : string = "$0"
            let v4839 : (unit -> string) = closure161()
            let v4840 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4839 v4838 
            let v4841 : string = "$0"
            let v4842 : (unit -> bool) = closure162()
            let v4843 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v4842 v4841 
            let v4844 : string = "class=\"[position:absolute] [right:0] [top:0]\""
            let v4845 : string = " " + v4844 + v52 + ""
            let v4846 : string = "v4831"
            let v4847 : string = v4846 + v52 
            let v4848 : string = v4847 + v52 
            let v4849 : string = "vec![" + v4848 + "]"
            let v4850 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4849 
            let v4851 : string = "leptos::prelude::Fragment::new($0)"
            let v4852 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4850 v4851 
            let v4853 : string = "leptos::prelude::AnyView::from($0)"
            let v4854 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4852 v4853 
            let v4855 : string = "div"
            let v4856 : string = "<" + v4855 + " " + v4845 + ">move || { v4854 }</" + v4855 + ">"
            let v4857 : string = "leptos::prelude::view! { " + v4856 + " }"
            let v4858 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4857 
            let v4859 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4858 |> unbox
            let v4860 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4861 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4859 v4860 
            let v4862 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v4840(())"
            let v4863 : string = "open=move || v4843(())"
            let v4864 : string = " " + v4862 + v52 + ""
            let v4865 : string = " " + v4863 + v4864 + ""
            let v4866 : string = "$0"
            let v4867 : (unit -> string) = closure204()
            let v4868 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4867 v4866 
            let v4869 : string = "$0"
            let v4870 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure205(v4831)
            let v4871 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v4870 v4869 
            let v4872 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v4871(()) + \" \" + &v4868(())"
            let v4873 : string = " " + v4872 + v52 + ""
            let v4874 : string = "class=\"flex items-center gap-2\""
            let v4875 : string = " " + v4874 + v52 + ""
            let v4876 : (unit -> string) = method214(v4831)
            let v4877 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
            let v4878 : string = " " + v4877 + v52 + ""
            let v4879 : string = v4876 ()
            (* run_target_args'
            let v4884 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v4885 : string = "&*$0"
            let v4886 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4879 v4885 
            let _run_target_args'_v4884 = v4886 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v4887 : string = "&*$0"
            let v4888 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4879 v4887 
            let _run_target_args'_v4884 = v4888 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v4889 : string = "&*$0"
            let v4890 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4879 v4889 
            let _run_target_args'_v4884 = v4890 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v4892 : Ref<Str> = v4879 |> unbox<Ref<Str>>
            let _run_target_args'_v4884 = v4892 
            #endif
#if FABLE_COMPILER_PYTHON
            let v4896 : Ref<Str> = v4879 |> unbox<Ref<Str>>
            let _run_target_args'_v4884 = v4896 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v4900 : Ref<Str> = v4879 |> unbox<Ref<Str>>
            let _run_target_args'_v4884 = v4900 
            #endif
#else
            let v4904 : Ref<Str> = v4879 |> unbox<Ref<Str>>
            let _run_target_args'_v4884 = v4904 
            #endif
            let v4907 : Ref<Str> = _run_target_args'_v4884 
            (* run_target_args'
            let v4920 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v4921 : string = "String::from($0)"
            let v4922 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4907 v4921 
            let _run_target_args'_v4920 = v4922 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v4923 : string = "String::from($0)"
            let v4924 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4907 v4923 
            let _run_target_args'_v4920 = v4924 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v4925 : string = "String::from($0)"
            let v4926 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4907 v4925 
            let _run_target_args'_v4920 = v4926 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v4928 : std_string_String = v4907 |> unbox<std_string_String>
            let _run_target_args'_v4920 = v4928 
            #endif
#if FABLE_COMPILER_PYTHON
            let v4932 : std_string_String = v4907 |> unbox<std_string_String>
            let _run_target_args'_v4920 = v4932 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v4936 : std_string_String = v4907 |> unbox<std_string_String>
            let _run_target_args'_v4920 = v4936 
            #endif
#else
            let v4940 : std_string_String = v4907 |> unbox<std_string_String>
            let _run_target_args'_v4920 = v4940 
            #endif
            let v4943 : std_string_String = _run_target_args'_v4920 
            let v4952 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v4953 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4943 v4952 
            let v4954 : string = "v4953"
            let v4955 : string = v4954 + v52 
            let v4956 : string = v4955 + v52 
            let v4957 : string = "vec![" + v4956 + "]"
            let v4958 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4957 
            let v4959 : string = "leptos::prelude::Fragment::new($0)"
            let v4960 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4958 v4959 
            let v4961 : string = "leptos::prelude::AnyView::from($0)"
            let v4962 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4960 v4961 
            let v4963 : string = "span"
            let v4964 : string = "<" + v4963 + " " + v4878 + ">move || { v4962 }</" + v4963 + ">"
            let v4965 : string = "leptos::prelude::view! { " + v4964 + " }"
            let v4966 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4965 
            let v4967 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4966 |> unbox
            let v4968 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4969 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4967 v4968 
            let v4970 : string = "v4969"
            let v4971 : string = v4970 + v52 
            let v4972 : string = v4971 + v52 
            let v4973 : string = "vec![" + v4972 + "]"
            let v4974 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4973 
            let v4975 : string = "leptos::prelude::Fragment::new($0)"
            let v4976 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4974 v4975 
            let v4977 : string = "leptos::prelude::AnyView::from($0)"
            let v4978 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4976 v4977 
            let v4979 : string = "<" + v4855 + " " + v4875 + ">move || { v4978 }</" + v4855 + ">"
            let v4980 : string = "leptos::prelude::view! { " + v4979 + " }"
            let v4981 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4980 
            let v4982 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4981 |> unbox
            let v4983 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4984 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4982 v4983 
            let v4985 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
            let v4986 : string = " " + v4985 + v52 + ""
            let v4987 : string = "$0"
            let v4988 : (unit -> string) = closure166()
            let v4989 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4988 v4987 
            let v4990 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v4991 : string = "viewBox=\"0 0 20 20\""
            let v4992 : string = "fill=\"currentColor\""
            let v4993 : string = "class=move || \" \".to_owned() + &v4989(())"
            let v4994 : string = " " + v4990 + v52 + ""
            let v4995 : string = " " + v4991 + v4994 + ""
            let v4996 : string = " " + v4992 + v4995 + ""
            let v4997 : string = " " + v4993 + v4996 + ""
            let v4998 : string = "fill-rule=\"evenodd\""
            let v4999 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
            let v5000 : string = "clip-rule=\"evenodd\""
            let v5001 : string = " " + v4998 + v52 + ""
            let v5002 : string = " " + v4999 + v5001 + ""
            let v5003 : string = " " + v5000 + v5002 + ""
            let v5004 : string = "vec![" + v52 + "]"
            let v5005 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5004 
            let v5006 : string = "leptos::prelude::Fragment::new($0)"
            let v5007 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5005 v5006 
            let v5008 : string = "leptos::prelude::AnyView::from($0)"
            let v5009 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5007 v5008 
            let v5010 : string = "<" + v4784 + " " + v5003 + ">move || { v5009 }</" + v4784 + ">"
            let v5011 : string = "leptos::prelude::view! { " + v5010 + " }"
            let v5012 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5011 
            let v5013 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v5012 |> unbox
            let v5014 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5015 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5013 v5014 
            let v5016 : string = "v5015"
            let v5017 : string = v5016 + v52 
            let v5018 : string = v5017 + v52 
            let v5019 : string = "vec![" + v5018 + "]"
            let v5020 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5019 
            let v5021 : string = "leptos::prelude::Fragment::new($0)"
            let v5022 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5020 v5021 
            let v5023 : string = "leptos::prelude::AnyView::from($0)"
            let v5024 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5022 v5023 
            let v5025 : string = "<" + v4800 + " " + v4997 + ">move || { v5024 }</" + v4800 + ">"
            let v5026 : string = "leptos::prelude::view! { " + v5025 + " }"
            let v5027 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5026 
            let v5028 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v5027 |> unbox
            let v5029 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5030 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5028 v5029 
            let v5031 : string = "v5030"
            let v5032 : string = v5031 + v52 
            let v5033 : string = v5032 + v52 
            let v5034 : string = "vec![" + v5033 + "]"
            let v5035 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5034 
            let v5036 : string = "leptos::prelude::Fragment::new($0)"
            let v5037 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5035 v5036 
            let v5038 : string = "leptos::prelude::AnyView::from($0)"
            let v5039 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5037 v5038 
            let v5040 : string = "<" + v4963 + " " + v4986 + ">move || { v5039 }</" + v4963 + ">"
            let v5041 : string = "leptos::prelude::view! { " + v5040 + " }"
            let v5042 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5041 
            let v5043 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v5042 |> unbox
            let v5044 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5045 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5043 v5044 
            let v5046 : string = "v5045"
            let v5047 : string = v5046 + v52 
            let v5048 : string = v5047 + v52 
            let v5049 : string = "v4984"
            let v5050 : string = ", "
            let v5051 : string = v5049 + v5050 
            let v5052 : string = v5051 + v5048 
            let v5053 : string = "vec![" + v5052 + "]"
            let v5054 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5053 
            let v5055 : string = "leptos::prelude::Fragment::new($0)"
            let v5056 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5054 v5055 
            let v5057 : string = "leptos::prelude::AnyView::from($0)"
            let v5058 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5056 v5057 
            let v5059 : string = "summary"
            let v5060 : string = "<" + v5059 + " " + v4873 + ">move || { v5058 }</" + v5059 + ">"
            let v5061 : string = "leptos::prelude::view! { " + v5060 + " }"
            let v5062 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5061 
            let v5063 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v5062 |> unbox
            let v5064 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5065 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5063 v5064 
            let v5066 : string = "class=\"flex flex-1 flex-col\""
            let v5067 : string = " " + v5066 + v52 + ""
            let v5068 : string = "Func0::new(move || $0())"
            let v5069 : (unit -> leptos_dom_Fragment) = closure207(v4711, v4720, v4723, v4714, v4717)
            let v5070 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v5069 v5068 
            let v5071 : Func0<leptos_dom_Fragment> = method195(v5070)
            let v5072 : string = "(move || v5071())()"
            let v5073 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v5072 
            let v5074 : string = "leptos::prelude::AnyView::from($0)"
            let v5075 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5073 v5074 
            let v5076 : string = "<" + v4855 + " " + v5067 + ">move || { v5075 }</" + v4855 + ">"
            let v5077 : string = "leptos::prelude::view! { " + v5076 + " }"
            let v5078 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5077 
            let v5079 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5078 |> unbox
            let v5080 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5081 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5079 v5080 
            let v5082 : string = "v5081"
            let v5083 : string = v5082 + v52 
            let v5084 : string = v5083 + v52 
            let v5085 : string = "v5065"
            let v5086 : string = v5085 + v5050 
            let v5087 : string = v5086 + v5084 
            let v5088 : string = "vec![" + v5087 + "]"
            let v5089 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5088 
            let v5090 : string = "leptos::prelude::Fragment::new($0)"
            let v5091 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5089 v5090 
            let v5092 : string = "leptos::prelude::AnyView::from($0)"
            let v5093 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5091 v5092 
            let v5094 : string = "details"
            let v5095 : string = "<" + v5094 + " " + v4865 + ">move || { v5093 }</" + v5094 + ">"
            let v5096 : string = "leptos::prelude::view! { " + v5095 + " }"
            let v5097 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5096 
            let v5098 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v5097 |> unbox
            let v5099 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5100 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5098 v5099 
            let v5101 : string = "v5100"
            let v5102 : string = v5101 + v52 
            let v5103 : string = v5102 + v52 
            let v5104 : string = "v4861"
            let v5105 : string = v5104 + v5050 
            let v5106 : string = v5105 + v5103 
            let v5107 : string = "vec![" + v5106 + "]"
            let v5108 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5107 
            let v5109 : string = "leptos::prelude::Fragment::new($0)"
            let v5110 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5108 v5109 
            let v5111 : string = "leptos::prelude::AnyView::from($0)"
            let v5112 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5110 v5111 
            let v5113 : string = "<" + v4855 + " " + v4837 + ">move || { v5112 }</" + v4855 + ">"
            let v5114 : string = "leptos::prelude::view! { " + v5113 + " }"
            let v5115 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5114 
            let v5116 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5115 |> unbox
            let v5117 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5118 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5116 v5117 
            let v5119 : string = "vec![" + v52 + "]"
            let v5120 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5119 
            let v5121 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5122 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5120 v5121 
            let v5123 : string = "class=\"flex flex-col [position:relative]\""
            let v5124 : string = " " + v5123 + v52 + ""
            let v5125 : string = "$0"
            let v5126 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4839 v5125 
            let v5127 : string = "$0"
            let v5128 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v4842 v5127 
            let v5129 : string = "class=\"[position:absolute] [right:0] [top:0]\""
            let v5130 : string = " " + v5129 + v52 + ""
            let v5131 : string = "v5122"
            let v5132 : string = v5131 + v52 
            let v5133 : string = v5132 + v52 
            let v5134 : string = "vec![" + v5133 + "]"
            let v5135 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5134 
            let v5136 : string = "leptos::prelude::Fragment::new($0)"
            let v5137 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5135 v5136 
            let v5138 : string = "leptos::prelude::AnyView::from($0)"
            let v5139 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5137 v5138 
            let v5140 : string = "<" + v4855 + " " + v5130 + ">move || { v5139 }</" + v4855 + ">"
            let v5141 : string = "leptos::prelude::view! { " + v5140 + " }"
            let v5142 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5141 
            let v5143 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5142 |> unbox
            let v5144 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5145 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5143 v5144 
            let v5146 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v5126(())"
            let v5147 : string = "open=move || v5128(())"
            let v5148 : string = " " + v5146 + v52 + ""
            let v5149 : string = " " + v5147 + v5148 + ""
            let v5150 : string = "$0"
            let v5151 : (unit -> string) = closure223()
            let v5152 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v5151 v5150 
            let v5153 : string = "$0"
            let v5154 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure224()
            let v5155 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v5154 v5153 
            let v5156 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v5155(()) + \" \" + &v5152(())"
            let v5157 : string = " " + v5156 + v52 + ""
            let v5158 : string = "class=\"flex items-center gap-2\""
            let v5159 : string = " " + v5158 + v52 + ""
            let v5160 : (unit -> string) = method228()
            let v5161 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
            let v5162 : string = " " + v5161 + v52 + ""
            let v5163 : string = v5160 ()
            (* run_target_args'
            let v5168 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v5169 : string = "&*$0"
            let v5170 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5163 v5169 
            let _run_target_args'_v5168 = v5170 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v5171 : string = "&*$0"
            let v5172 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5163 v5171 
            let _run_target_args'_v5168 = v5172 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v5173 : string = "&*$0"
            let v5174 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5163 v5173 
            let _run_target_args'_v5168 = v5174 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v5176 : Ref<Str> = v5163 |> unbox<Ref<Str>>
            let _run_target_args'_v5168 = v5176 
            #endif
#if FABLE_COMPILER_PYTHON
            let v5180 : Ref<Str> = v5163 |> unbox<Ref<Str>>
            let _run_target_args'_v5168 = v5180 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v5184 : Ref<Str> = v5163 |> unbox<Ref<Str>>
            let _run_target_args'_v5168 = v5184 
            #endif
#else
            let v5188 : Ref<Str> = v5163 |> unbox<Ref<Str>>
            let _run_target_args'_v5168 = v5188 
            #endif
            let v5191 : Ref<Str> = _run_target_args'_v5168 
            (* run_target_args'
            let v5204 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v5205 : string = "String::from($0)"
            let v5206 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5191 v5205 
            let _run_target_args'_v5204 = v5206 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v5207 : string = "String::from($0)"
            let v5208 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5191 v5207 
            let _run_target_args'_v5204 = v5208 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v5209 : string = "String::from($0)"
            let v5210 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5191 v5209 
            let _run_target_args'_v5204 = v5210 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v5212 : std_string_String = v5191 |> unbox<std_string_String>
            let _run_target_args'_v5204 = v5212 
            #endif
#if FABLE_COMPILER_PYTHON
            let v5216 : std_string_String = v5191 |> unbox<std_string_String>
            let _run_target_args'_v5204 = v5216 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v5220 : std_string_String = v5191 |> unbox<std_string_String>
            let _run_target_args'_v5204 = v5220 
            #endif
#else
            let v5224 : std_string_String = v5191 |> unbox<std_string_String>
            let _run_target_args'_v5204 = v5224 
            #endif
            let v5227 : std_string_String = _run_target_args'_v5204 
            let v5236 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v5237 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5227 v5236 
            let v5238 : string = "v5237"
            let v5239 : string = v5238 + v52 
            let v5240 : string = v5239 + v52 
            let v5241 : string = "vec![" + v5240 + "]"
            let v5242 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5241 
            let v5243 : string = "leptos::prelude::Fragment::new($0)"
            let v5244 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5242 v5243 
            let v5245 : string = "leptos::prelude::AnyView::from($0)"
            let v5246 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5244 v5245 
            let v5247 : string = "<" + v4963 + " " + v5162 + ">move || { v5246 }</" + v4963 + ">"
            let v5248 : string = "leptos::prelude::view! { " + v5247 + " }"
            let v5249 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5248 
            let v5250 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v5249 |> unbox
            let v5251 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5252 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5250 v5251 
            let v5253 : string = "v5252"
            let v5254 : string = v5253 + v52 
            let v5255 : string = v5254 + v52 
            let v5256 : string = "vec![" + v5255 + "]"
            let v5257 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5256 
            let v5258 : string = "leptos::prelude::Fragment::new($0)"
            let v5259 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5257 v5258 
            let v5260 : string = "leptos::prelude::AnyView::from($0)"
            let v5261 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5259 v5260 
            let v5262 : string = "<" + v4855 + " " + v5159 + ">move || { v5261 }</" + v4855 + ">"
            let v5263 : string = "leptos::prelude::view! { " + v5262 + " }"
            let v5264 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5263 
            let v5265 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5264 |> unbox
            let v5266 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5267 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5265 v5266 
            let v5268 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
            let v5269 : string = " " + v5268 + v52 + ""
            let v5270 : string = "$0"
            let v5271 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4988 v5270 
            let v5272 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v5273 : string = "viewBox=\"0 0 20 20\""
            let v5274 : string = "fill=\"currentColor\""
            let v5275 : string = "class=move || \" \".to_owned() + &v5271(())"
            let v5276 : string = " " + v5272 + v52 + ""
            let v5277 : string = " " + v5273 + v5276 + ""
            let v5278 : string = " " + v5274 + v5277 + ""
            let v5279 : string = " " + v5275 + v5278 + ""
            let v5280 : string = "fill-rule=\"evenodd\""
            let v5281 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
            let v5282 : string = "clip-rule=\"evenodd\""
            let v5283 : string = " " + v5280 + v52 + ""
            let v5284 : string = " " + v5281 + v5283 + ""
            let v5285 : string = " " + v5282 + v5284 + ""
            let v5286 : string = "vec![" + v52 + "]"
            let v5287 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5286 
            let v5288 : string = "leptos::prelude::Fragment::new($0)"
            let v5289 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5287 v5288 
            let v5290 : string = "leptos::prelude::AnyView::from($0)"
            let v5291 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5289 v5290 
            let v5292 : string = "<" + v4784 + " " + v5285 + ">move || { v5291 }</" + v4784 + ">"
            let v5293 : string = "leptos::prelude::view! { " + v5292 + " }"
            let v5294 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5293 
            let v5295 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v5294 |> unbox
            let v5296 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5297 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5295 v5296 
            let v5298 : string = "v5297"
            let v5299 : string = v5298 + v52 
            let v5300 : string = v5299 + v52 
            let v5301 : string = "vec![" + v5300 + "]"
            let v5302 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5301 
            let v5303 : string = "leptos::prelude::Fragment::new($0)"
            let v5304 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5302 v5303 
            let v5305 : string = "leptos::prelude::AnyView::from($0)"
            let v5306 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5304 v5305 
            let v5307 : string = "<" + v4800 + " " + v5279 + ">move || { v5306 }</" + v4800 + ">"
            let v5308 : string = "leptos::prelude::view! { " + v5307 + " }"
            let v5309 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5308 
            let v5310 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v5309 |> unbox
            let v5311 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5312 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5310 v5311 
            let v5313 : string = "v5312"
            let v5314 : string = v5313 + v52 
            let v5315 : string = v5314 + v52 
            let v5316 : string = "vec![" + v5315 + "]"
            let v5317 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5316 
            let v5318 : string = "leptos::prelude::Fragment::new($0)"
            let v5319 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5317 v5318 
            let v5320 : string = "leptos::prelude::AnyView::from($0)"
            let v5321 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5319 v5320 
            let v5322 : string = "<" + v4963 + " " + v5269 + ">move || { v5321 }</" + v4963 + ">"
            let v5323 : string = "leptos::prelude::view! { " + v5322 + " }"
            let v5324 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5323 
            let v5325 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v5324 |> unbox
            let v5326 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5327 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5325 v5326 
            let v5328 : string = "v5327"
            let v5329 : string = v5328 + v52 
            let v5330 : string = v5329 + v52 
            let v5331 : string = "v5267"
            let v5332 : string = v5331 + v5050 
            let v5333 : string = v5332 + v5330 
            let v5334 : string = "vec![" + v5333 + "]"
            let v5335 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5334 
            let v5336 : string = "leptos::prelude::Fragment::new($0)"
            let v5337 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5335 v5336 
            let v5338 : string = "leptos::prelude::AnyView::from($0)"
            let v5339 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5337 v5338 
            let v5340 : string = "<" + v5059 + " " + v5157 + ">move || { v5339 }</" + v5059 + ">"
            let v5341 : string = "leptos::prelude::view! { " + v5340 + " }"
            let v5342 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5341 
            let v5343 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v5342 |> unbox
            let v5344 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5345 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5343 v5344 
            let v5346 : string = "class=\"flex flex-1 flex-col\""
            let v5347 : string = " " + v5346 + v52 + ""
            let v5348 : string = "Func0::new(move || $0())"
            let v5349 : (unit -> leptos_dom_Fragment) = closure226(v4711)
            let v5350 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v5349 v5348 
            let v5351 : Func0<leptos_dom_Fragment> = method195(v5350)
            let v5352 : string = "(move || v5351())()"
            let v5353 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v5352 
            let v5354 : string = "leptos::prelude::AnyView::from($0)"
            let v5355 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5353 v5354 
            let v5356 : string = "<" + v4855 + " " + v5347 + ">move || { v5355 }</" + v4855 + ">"
            let v5357 : string = "leptos::prelude::view! { " + v5356 + " }"
            let v5358 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5357 
            let v5359 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5358 |> unbox
            let v5360 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5361 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5359 v5360 
            let v5362 : string = "v5361"
            let v5363 : string = v5362 + v52 
            let v5364 : string = v5363 + v52 
            let v5365 : string = "v5345"
            let v5366 : string = v5365 + v5050 
            let v5367 : string = v5366 + v5364 
            let v5368 : string = "vec![" + v5367 + "]"
            let v5369 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5368 
            let v5370 : string = "leptos::prelude::Fragment::new($0)"
            let v5371 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5369 v5370 
            let v5372 : string = "leptos::prelude::AnyView::from($0)"
            let v5373 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5371 v5372 
            let v5374 : string = "<" + v5094 + " " + v5149 + ">move || { v5373 }</" + v5094 + ">"
            let v5375 : string = "leptos::prelude::view! { " + v5374 + " }"
            let v5376 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5375 
            let v5377 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v5376 |> unbox
            let v5378 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5379 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5377 v5378 
            let v5380 : string = "v5379"
            let v5381 : string = v5380 + v52 
            let v5382 : string = v5381 + v52 
            let v5383 : string = "v5145"
            let v5384 : string = v5383 + v5050 
            let v5385 : string = v5384 + v5382 
            let v5386 : string = "vec![" + v5385 + "]"
            let v5387 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5386 
            let v5388 : string = "leptos::prelude::Fragment::new($0)"
            let v5389 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5387 v5388 
            let v5390 : string = "leptos::prelude::AnyView::from($0)"
            let v5391 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5389 v5390 
            let v5392 : string = "<" + v4855 + " " + v5124 + ">move || { v5391 }</" + v4855 + ">"
            let v5393 : string = "leptos::prelude::view! { " + v5392 + " }"
            let v5394 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5393 
            let v5395 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5394 |> unbox
            let v5396 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5397 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5395 v5396 
            let v5398 : leptos_prelude_ArcRwSignal<Heap1> = v4711.l0
            let v5399 : string = "Box::pin($0)"
            let v5400 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v5398 v5399 
            let v5401 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
            let v5402 : Heap1 = Fable.Core.RustInterop.emitRustExpr v5400 v5401 
            let v5403 : leptos_prelude_ArcRwSignal<bool> = v5402.l1
            let v5404 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
            let v5405 : bool = Fable.Core.RustInterop.emitRustExpr v5403 v5404 
            let v5689 : leptos_prelude_AnyView_ =
                if v5405 then
                    let v5406 : string = "vec![" + v52 + "]"
                    let v5407 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5406 
                    let v5408 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5409 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5407 v5408 
                    let v5410 : string = "class=\"flex flex-col [position:relative]\""
                    let v5411 : string = " " + v5410 + v52 + ""
                    let v5412 : string = "$0"
                    let v5413 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4839 v5412 
                    let v5414 : string = "$0"
                    let v5415 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v4842 v5414 
                    let v5416 : string = "class=\"[position:absolute] [right:0] [top:0]\""
                    let v5417 : string = " " + v5416 + v52 + ""
                    let v5418 : string = "v5409"
                    let v5419 : string = v5418 + v52 
                    let v5420 : string = v5419 + v52 
                    let v5421 : string = "vec![" + v5420 + "]"
                    let v5422 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5421 
                    let v5423 : string = "leptos::prelude::Fragment::new($0)"
                    let v5424 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5422 v5423 
                    let v5425 : string = "leptos::prelude::AnyView::from($0)"
                    let v5426 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5424 v5425 
                    let v5427 : string = "<" + v4855 + " " + v5417 + ">move || { v5426 }</" + v4855 + ">"
                    let v5428 : string = "leptos::prelude::view! { " + v5427 + " }"
                    let v5429 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5428 
                    let v5430 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5429 |> unbox
                    let v5431 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5432 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5430 v5431 
                    let v5433 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v5413(())"
                    let v5434 : string = "open=move || v5415(())"
                    let v5435 : string = " " + v5433 + v52 + ""
                    let v5436 : string = " " + v5434 + v5435 + ""
                    let v5437 : string = "$0"
                    let v5438 : (unit -> string) = closure243()
                    let v5439 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v5438 v5437 
                    let v5440 : string = "$0"
                    let v5441 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure244()
                    let v5442 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v5441 v5440 
                    let v5443 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v5442(()) + \" \" + &v5439(())"
                    let v5444 : string = " " + v5443 + v52 + ""
                    let v5445 : string = "class=\"flex items-center gap-2\""
                    let v5446 : string = " " + v5445 + v52 + ""
                    let v5447 : (unit -> string) = method237()
                    let v5448 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
                    let v5449 : string = " " + v5448 + v52 + ""
                    let v5450 : string = v5447 ()
                    (* run_target_args'
                    let v5455 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v5456 : string = "&*$0"
                    let v5457 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5450 v5456 
                    let _run_target_args'_v5455 = v5457 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v5458 : string = "&*$0"
                    let v5459 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5450 v5458 
                    let _run_target_args'_v5455 = v5459 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v5460 : string = "&*$0"
                    let v5461 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5450 v5460 
                    let _run_target_args'_v5455 = v5461 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v5463 : Ref<Str> = v5450 |> unbox<Ref<Str>>
                    let _run_target_args'_v5455 = v5463 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v5467 : Ref<Str> = v5450 |> unbox<Ref<Str>>
                    let _run_target_args'_v5455 = v5467 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v5471 : Ref<Str> = v5450 |> unbox<Ref<Str>>
                    let _run_target_args'_v5455 = v5471 
                    #endif
#else
                    let v5475 : Ref<Str> = v5450 |> unbox<Ref<Str>>
                    let _run_target_args'_v5455 = v5475 
                    #endif
                    let v5478 : Ref<Str> = _run_target_args'_v5455 
                    (* run_target_args'
                    let v5491 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v5492 : string = "String::from($0)"
                    let v5493 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5478 v5492 
                    let _run_target_args'_v5491 = v5493 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v5494 : string = "String::from($0)"
                    let v5495 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5478 v5494 
                    let _run_target_args'_v5491 = v5495 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v5496 : string = "String::from($0)"
                    let v5497 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5478 v5496 
                    let _run_target_args'_v5491 = v5497 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v5499 : std_string_String = v5478 |> unbox<std_string_String>
                    let _run_target_args'_v5491 = v5499 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v5503 : std_string_String = v5478 |> unbox<std_string_String>
                    let _run_target_args'_v5491 = v5503 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v5507 : std_string_String = v5478 |> unbox<std_string_String>
                    let _run_target_args'_v5491 = v5507 
                    #endif
#else
                    let v5511 : std_string_String = v5478 |> unbox<std_string_String>
                    let _run_target_args'_v5491 = v5511 
                    #endif
                    let v5514 : std_string_String = _run_target_args'_v5491 
                    let v5523 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v5524 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5514 v5523 
                    let v5525 : string = "v5524"
                    let v5526 : string = v5525 + v52 
                    let v5527 : string = v5526 + v52 
                    let v5528 : string = "vec![" + v5527 + "]"
                    let v5529 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5528 
                    let v5530 : string = "leptos::prelude::Fragment::new($0)"
                    let v5531 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5529 v5530 
                    let v5532 : string = "leptos::prelude::AnyView::from($0)"
                    let v5533 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5531 v5532 
                    let v5534 : string = "<" + v4963 + " " + v5449 + ">move || { v5533 }</" + v4963 + ">"
                    let v5535 : string = "leptos::prelude::view! { " + v5534 + " }"
                    let v5536 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5535 
                    let v5537 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v5536 |> unbox
                    let v5538 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5539 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5537 v5538 
                    let v5540 : string = "v5539"
                    let v5541 : string = v5540 + v52 
                    let v5542 : string = v5541 + v52 
                    let v5543 : string = "vec![" + v5542 + "]"
                    let v5544 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5543 
                    let v5545 : string = "leptos::prelude::Fragment::new($0)"
                    let v5546 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5544 v5545 
                    let v5547 : string = "leptos::prelude::AnyView::from($0)"
                    let v5548 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5546 v5547 
                    let v5549 : string = "<" + v4855 + " " + v5446 + ">move || { v5548 }</" + v4855 + ">"
                    let v5550 : string = "leptos::prelude::view! { " + v5549 + " }"
                    let v5551 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5550 
                    let v5552 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5551 |> unbox
                    let v5553 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5554 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5552 v5553 
                    let v5555 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
                    let v5556 : string = " " + v5555 + v52 + ""
                    let v5557 : string = "$0"
                    let v5558 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4988 v5557 
                    let v5559 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                    let v5560 : string = "viewBox=\"0 0 20 20\""
                    let v5561 : string = "fill=\"currentColor\""
                    let v5562 : string = "class=move || \" \".to_owned() + &v5558(())"
                    let v5563 : string = " " + v5559 + v52 + ""
                    let v5564 : string = " " + v5560 + v5563 + ""
                    let v5565 : string = " " + v5561 + v5564 + ""
                    let v5566 : string = " " + v5562 + v5565 + ""
                    let v5567 : string = "fill-rule=\"evenodd\""
                    let v5568 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
                    let v5569 : string = "clip-rule=\"evenodd\""
                    let v5570 : string = " " + v5567 + v52 + ""
                    let v5571 : string = " " + v5568 + v5570 + ""
                    let v5572 : string = " " + v5569 + v5571 + ""
                    let v5573 : string = "vec![" + v52 + "]"
                    let v5574 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5573 
                    let v5575 : string = "leptos::prelude::Fragment::new($0)"
                    let v5576 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5574 v5575 
                    let v5577 : string = "leptos::prelude::AnyView::from($0)"
                    let v5578 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5576 v5577 
                    let v5579 : string = "<" + v4784 + " " + v5572 + ">move || { v5578 }</" + v4784 + ">"
                    let v5580 : string = "leptos::prelude::view! { " + v5579 + " }"
                    let v5581 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5580 
                    let v5582 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v5581 |> unbox
                    let v5583 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5584 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5582 v5583 
                    let v5585 : string = "v5584"
                    let v5586 : string = v5585 + v52 
                    let v5587 : string = v5586 + v52 
                    let v5588 : string = "vec![" + v5587 + "]"
                    let v5589 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5588 
                    let v5590 : string = "leptos::prelude::Fragment::new($0)"
                    let v5591 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5589 v5590 
                    let v5592 : string = "leptos::prelude::AnyView::from($0)"
                    let v5593 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5591 v5592 
                    let v5594 : string = "<" + v4800 + " " + v5566 + ">move || { v5593 }</" + v4800 + ">"
                    let v5595 : string = "leptos::prelude::view! { " + v5594 + " }"
                    let v5596 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5595 
                    let v5597 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v5596 |> unbox
                    let v5598 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5599 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5597 v5598 
                    let v5600 : string = "v5599"
                    let v5601 : string = v5600 + v52 
                    let v5602 : string = v5601 + v52 
                    let v5603 : string = "vec![" + v5602 + "]"
                    let v5604 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5603 
                    let v5605 : string = "leptos::prelude::Fragment::new($0)"
                    let v5606 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5604 v5605 
                    let v5607 : string = "leptos::prelude::AnyView::from($0)"
                    let v5608 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5606 v5607 
                    let v5609 : string = "<" + v4963 + " " + v5556 + ">move || { v5608 }</" + v4963 + ">"
                    let v5610 : string = "leptos::prelude::view! { " + v5609 + " }"
                    let v5611 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5610 
                    let v5612 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v5611 |> unbox
                    let v5613 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5614 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5612 v5613 
                    let v5615 : string = "v5614"
                    let v5616 : string = v5615 + v52 
                    let v5617 : string = v5616 + v52 
                    let v5618 : string = "v5554"
                    let v5619 : string = v5618 + v5050 
                    let v5620 : string = v5619 + v5617 
                    let v5621 : string = "vec![" + v5620 + "]"
                    let v5622 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5621 
                    let v5623 : string = "leptos::prelude::Fragment::new($0)"
                    let v5624 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5622 v5623 
                    let v5625 : string = "leptos::prelude::AnyView::from($0)"
                    let v5626 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5624 v5625 
                    let v5627 : string = "<" + v5059 + " " + v5444 + ">move || { v5626 }</" + v5059 + ">"
                    let v5628 : string = "leptos::prelude::view! { " + v5627 + " }"
                    let v5629 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5628 
                    let v5630 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v5629 |> unbox
                    let v5631 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5632 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5630 v5631 
                    let v5633 : string = "class=\"flex flex-1 flex-col\""
                    let v5634 : string = " " + v5633 + v52 + ""
                    let v5635 : string = "Func0::new(move || $0())"
                    let v5636 : (unit -> leptos_dom_Fragment) = closure246()
                    let v5637 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v5636 v5635 
                    let v5638 : Func0<leptos_dom_Fragment> = method195(v5637)
                    let v5639 : string = "(move || v5638())()"
                    let v5640 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v5639 
                    let v5641 : string = "leptos::prelude::AnyView::from($0)"
                    let v5642 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5640 v5641 
                    let v5643 : string = "<" + v4855 + " " + v5634 + ">move || { v5642 }</" + v4855 + ">"
                    let v5644 : string = "leptos::prelude::view! { " + v5643 + " }"
                    let v5645 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5644 
                    let v5646 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5645 |> unbox
                    let v5647 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5648 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5646 v5647 
                    let v5649 : string = "v5648"
                    let v5650 : string = v5649 + v52 
                    let v5651 : string = v5650 + v52 
                    let v5652 : string = "v5632"
                    let v5653 : string = v5652 + v5050 
                    let v5654 : string = v5653 + v5651 
                    let v5655 : string = "vec![" + v5654 + "]"
                    let v5656 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5655 
                    let v5657 : string = "leptos::prelude::Fragment::new($0)"
                    let v5658 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5656 v5657 
                    let v5659 : string = "leptos::prelude::AnyView::from($0)"
                    let v5660 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5658 v5659 
                    let v5661 : string = "<" + v5094 + " " + v5436 + ">move || { v5660 }</" + v5094 + ">"
                    let v5662 : string = "leptos::prelude::view! { " + v5661 + " }"
                    let v5663 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5662 
                    let v5664 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v5663 |> unbox
                    let v5665 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5666 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5664 v5665 
                    let v5667 : string = "v5666"
                    let v5668 : string = v5667 + v52 
                    let v5669 : string = v5668 + v52 
                    let v5670 : string = "v5432"
                    let v5671 : string = v5670 + v5050 
                    let v5672 : string = v5671 + v5669 
                    let v5673 : string = "vec![" + v5672 + "]"
                    let v5674 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5673 
                    let v5675 : string = "leptos::prelude::Fragment::new($0)"
                    let v5676 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5674 v5675 
                    let v5677 : string = "leptos::prelude::AnyView::from($0)"
                    let v5678 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5676 v5677 
                    let v5679 : string = "<" + v4855 + " " + v5411 + ">move || { v5678 }</" + v4855 + ">"
                    let v5680 : string = "leptos::prelude::view! { " + v5679 + " }"
                    let v5681 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5680 
                    let v5682 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5681 |> unbox
                    let v5683 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5684 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5682 v5683 
                    v5684
                else
                    let v5685 : string = "vec![" + v52 + "]"
                    let v5686 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5685 
                    let v5687 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5688 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5686 v5687 
                    v5688
            let v5690 : string = "v5689"
            let v5691 : string = v5690 + v52 
            let v5692 : string = v5691 + v52 
            let v5693 : string = "v5397"
            let v5694 : string = v5693 + v5050 
            let v5695 : string = v5694 + v5692 
            let v5696 : string = "v5118"
            let v5697 : string = v5696 + v5050 
            let v5698 : string = v5697 + v5695 
            let v5699 : string = "vec![" + v5698 + "]"
            let v5700 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5699 
            let v5701 : string = "leptos::prelude::Fragment::new($0)"
            let v5702 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5700 v5701 
            US22_0(v5702)
        | US18_3 -> (* Transactions *)
            let v3958 : string = "transactions_view.render (1)"
            let v3959 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3960 : bool = Fable.Core.RustInterop.emitRustExpr v3958 v3959 
            let v3961 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
            let v3962 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v3961 
            let v3963 : string = "$0.unwrap()"
            let v3964 : Heap2 = Fable.Core.RustInterop.emitRustExpr v3962 v3963 
            let v3965 : string = "use_transactions.render (1)"
            let v3966 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3967 : bool = Fable.Core.RustInterop.emitRustExpr v3965 v3966 
            let v3968 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3969 : (unit -> Vec<string>) = closure44(v3964)
            let v3970 : leptos_prelude_ArcMemo<Vec<string>> = Fable.Core.RustInterop.emitRustExpr v3969 v3968 
            let v3971 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3972 : (unit -> (struct (string * US23 * string * bool * bool) [])) = closure46(v3970)
            let v3973 : leptos_prelude_ArcMemo<(struct (string * US23 * string * bool * bool) [])> = Fable.Core.RustInterop.emitRustExpr v3972 v3971 
            let v3974 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3975 : (unit -> Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>) = closure48(v3964, v3970)
            let v3976 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>> = Fable.Core.RustInterop.emitRustExpr v3975 v3974 
            let v3977 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3978 : (unit -> Vec<struct (string * US23 * string * bool * bool)>) = closure51(v3976)
            let v3979 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr v3978 v3977 
            let v3980 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3981 : (unit -> (string [])) = closure55(v3976)
            let v3982 : leptos_prelude_ArcMemo<(string [])> = Fable.Core.RustInterop.emitRustExpr v3981 v3980 
            let v3983 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) = closure60()
            let v3984 : leptos_prelude_ArcMemo<Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>> = method78(v3979, v3983)
            let v3986 : string = $"%A{v3984}"
            let v3989 : string = "use_transactions.render (7) / root func0 / result: " + string v3986 + ""
            let v3990 : int64 = 200L
            let v3991 : string = method8(v3990, v3989)
            let v3992 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3993 : bool = Fable.Core.RustInterop.emitRustExpr v3991 v3992 
            let v3994 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3995 : (unit -> Result<(struct (string * unativeint * Heap5) []) option, std_string_String>) = closure90(v3982, v3984)
            let v3996 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v3995 v3994 
            let v3997 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3998 : (unit -> Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String>) = closure107(v3996)
            let v3999 : leptos_prelude_ArcMemo<Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v3998 v3997 
            let v4000 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v4001 : (unit -> Vec<struct (string * US23 * string * bool * bool)>) = closure115(v3999)
            let v4002 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr v4001 v4000 
            let v4003 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option)) = closure119()
            let v4004 : leptos_prelude_ArcMemo<Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>> = method159(v4002, v4003)
            let v4006 : string = $"%A{v4004}"
            let v4009 : string = "use_transactions.render (12) / rpc_response func0 / result: " + string v4006 + ""
            let v4010 : int64 = 200L
            let v4011 : string = method8(v4010, v4009)
            let v4012 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v4013 : bool = Fable.Core.RustInterop.emitRustExpr v4011 v4012 
            let v4014 : string = $"leptos::prelude::signal($0)"
            let struct (v4015 : leptos_prelude_ReadSignal<bool>, v4016 : leptos_prelude_WriteSignal<bool>) = Fable.Core.RustInterop.emitRustExpr false v4014 
            let v4017 : (unit -> unit) = closure254(v4016)
            let v4018 : string = "let v4017 = $0"
            Fable.Core.RustInterop.emitRustExpr v4017 v4018 
            let v4019 : string = "$0"
            let v4020 : (unit -> string) = closure255()
            let v4021 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4020 v4019 
            let v4022 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v4023 : string = "fill=\"none\""
            let v4024 : string = "viewBox=\"0 0 24 24\""
            let v4025 : string = "stroke-width=\"1.5\""
            let v4026 : string = "stroke=\"currentColor\""
            let v4027 : string = "class=move || \" \".to_owned() + &v4021(())"
            let v4028 : string = " " + v4022 + v52 + ""
            let v4029 : string = " " + v4023 + v4028 + ""
            let v4030 : string = " " + v4024 + v4029 + ""
            let v4031 : string = " " + v4025 + v4030 + ""
            let v4032 : string = " " + v4026 + v4031 + ""
            let v4033 : string = " " + v4027 + v4032 + ""
            let v4034 : string = "stroke-linecap=\"round\""
            let v4035 : string = "stroke-linejoin=\"round\""
            let v4036 : string = "d=\"M10.343 3.94c.09-.542.56-.94 1.11-.94h1.093c.55 0 1.02.398 1.11.94l.149.894c.07.424.384.764.78.93.398.164.855.142 1.205-.108l.737-.527a1.125 1.125 0 011.45.12l.773.774c.39.389.44 1.002.12 1.45l-.527.737c-.25.35-.272.806-.107 1.204.165.397.505.71.93.78l.893.15c.543.09.94.56.94 1.109v1.094c0 .55-.397 1.02-.94 1.11l-.893.149c-.425.07-.765.383-.93.78-.165.398-.143.854.107 1.204l.527.738c.32.447.269 1.06-.12 1.45l-.774.773a1.125 1.125 0 01-1.449.12l-.738-.527c-.35-.25-.806-.272-1.203-.107-.397.165-.71.505-.781.929l-.149.894c-.09.542-.56.94-1.11.94h-1.094c-.55 0-1.019-.398-1.11-.94l-.148-.894c-.071-.424-.384-.764-.781-.93-.398-.164-.854-.142-1.204.108l-.738.527c-.447.32-1.06.269-1.45-.12l-.773-.774a1.125 1.125 0 01-.12-1.45l.527-.737c.25-.35.273-.806.108-1.204-.165-.397-.505-.71-.93-.78l-.894-.15c-.542-.09-.94-.56-.94-1.109v-1.094c0-.55.398-1.02.94-1.11l.894-.149c.424-.07.765-.383.93-.78.165-.398.143-.854-.107-1.204l-.527-.738a1.125 1.125 0 01.12-1.45l.773-.773a1.125 1.125 0 011.45-.12l.737.527c.35.25.807.272 1.204.107.397-.165.71-.505.78-.929l.15-.894z\""
            let v4037 : string = " " + v4034 + v52 + ""
            let v4038 : string = " " + v4035 + v4037 + ""
            let v4039 : string = " " + v4036 + v4038 + ""
            let v4040 : string = "vec![" + v52 + "]"
            let v4041 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4040 
            let v4042 : string = "leptos::prelude::Fragment::new($0)"
            let v4043 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4041 v4042 
            let v4044 : string = "leptos::prelude::AnyView::from($0)"
            let v4045 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4043 v4044 
            let v4046 : string = "path"
            let v4047 : string = "<" + v4046 + " " + v4039 + ">move || { v4045 }</" + v4046 + ">"
            let v4048 : string = "leptos::prelude::view! { " + v4047 + " }"
            let v4049 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4048 
            let v4050 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4049 |> unbox
            let v4051 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4052 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4050 v4051 
            let v4053 : string = "stroke-linecap=\"round\""
            let v4054 : string = "stroke-linejoin=\"round\""
            let v4055 : string = "d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\""
            let v4056 : string = " " + v4053 + v52 + ""
            let v4057 : string = " " + v4054 + v4056 + ""
            let v4058 : string = " " + v4055 + v4057 + ""
            let v4059 : string = "vec![" + v52 + "]"
            let v4060 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4059 
            let v4061 : string = "leptos::prelude::Fragment::new($0)"
            let v4062 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4060 v4061 
            let v4063 : string = "leptos::prelude::AnyView::from($0)"
            let v4064 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4062 v4063 
            let v4065 : string = "<" + v4046 + " " + v4058 + ">move || { v4064 }</" + v4046 + ">"
            let v4066 : string = "leptos::prelude::view! { " + v4065 + " }"
            let v4067 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4066 
            let v4068 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4067 |> unbox
            let v4069 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4070 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4068 v4069 
            let v4071 : string = "v4070"
            let v4072 : string = v4071 + v52 
            let v4073 : string = v4072 + v52 
            let v4074 : string = "v4052"
            let v4075 : string = ", "
            let v4076 : string = v4074 + v4075 
            let v4077 : string = v4076 + v4073 
            let v4078 : string = "vec![" + v4077 + "]"
            let v4079 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4078 
            let v4080 : string = "leptos::prelude::Fragment::new($0)"
            let v4081 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4079 v4080 
            let v4082 : string = "leptos::prelude::AnyView::from($0)"
            let v4083 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4081 v4082 
            let v4084 : string = "svg"
            let v4085 : string = "<" + v4084 + " " + v4033 + ">move || { v4083 }</" + v4084 + ">"
            let v4086 : string = "leptos::prelude::view! { " + v4085 + " }"
            let v4087 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4086 
            let v4088 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4087 |> unbox
            let v4089 : string = "on:click=move |_| v4017()"
            let v4090 : string = "aria-label=\"Settings\""
            let v4091 : string = "$0"
            let v4092 : (unit -> std_string_String) = closure256(v4015)
            let v4093 : (unit -> std_string_String) = Fable.Core.RustInterop.emitRustExpr v4092 v4091 
            let v4094 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] pb-[8px] pt-[8px] px-[12px] \".to_owned() + &v4093(())"
            let v4095 : string = " " + v4094 + v52 + ""
            let v4096 : string = " " + v4089 + v4095 + ""
            let v4097 : string = " " + v4090 + v4096 + ""
            let v4098 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4099 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4088 v4098 
            let v4100 : string = "v4099"
            let v4101 : string = v4100 + v52 
            let v4102 : string = v4101 + v52 
            let v4103 : string = "vec![" + v4102 + "]"
            let v4104 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4103 
            let v4105 : string = "leptos::prelude::Fragment::new($0)"
            let v4106 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4104 v4105 
            let v4107 : string = "leptos::prelude::AnyView::from($0)"
            let v4108 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4106 v4107 
            let v4109 : string = "button"
            let v4110 : string = "<" + v4109 + " " + v4097 + ">move || { v4108 }</" + v4109 + ">"
            let v4111 : string = "leptos::prelude::view! { " + v4110 + " }"
            let v4112 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4111 
            let v4113 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Button>> = v4112 |> unbox
            let v4114 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4115 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4113 v4114 
            let v4116 : string = "vec![" + v52 + "]"
            let v4117 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4116 
            let v4118 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4119 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4117 v4118 
            let v4120 : string = "class=\"flex flex-col [position:relative]\""
            let v4121 : string = " " + v4120 + v52 + ""
            let v4122 : string = "$0"
            let v4123 : (unit -> string) = closure161()
            let v4124 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4123 v4122 
            let v4125 : string = "$0"
            let v4126 : (unit -> bool) = closure162()
            let v4127 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v4126 v4125 
            let v4128 : string = "class=\"[position:absolute] [right:0] [top:0]\""
            let v4129 : string = " " + v4128 + v52 + ""
            let v4130 : string = "v4115"
            let v4131 : string = v4130 + v52 
            let v4132 : string = v4131 + v52 
            let v4133 : string = "vec![" + v4132 + "]"
            let v4134 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4133 
            let v4135 : string = "leptos::prelude::Fragment::new($0)"
            let v4136 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4134 v4135 
            let v4137 : string = "leptos::prelude::AnyView::from($0)"
            let v4138 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4136 v4137 
            let v4139 : string = "div"
            let v4140 : string = "<" + v4139 + " " + v4129 + ">move || { v4138 }</" + v4139 + ">"
            let v4141 : string = "leptos::prelude::view! { " + v4140 + " }"
            let v4142 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4141 
            let v4143 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4142 |> unbox
            let v4144 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4145 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4143 v4144 
            let v4146 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v4124(())"
            let v4147 : string = "open=move || v4127(())"
            let v4148 : string = " " + v4146 + v52 + ""
            let v4149 : string = " " + v4147 + v4148 + ""
            let v4150 : string = "$0"
            let v4151 : (unit -> string) = closure257()
            let v4152 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4151 v4150 
            let v4153 : string = "$0"
            let v4154 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure258(v4115)
            let v4155 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v4154 v4153 
            let v4156 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v4155(()) + \" \" + &v4152(())"
            let v4157 : string = " " + v4156 + v52 + ""
            let v4158 : string = "class=\"flex items-center gap-2\""
            let v4159 : string = " " + v4158 + v52 + ""
            let v4160 : (unit -> string) = method243(v4115)
            let v4161 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
            let v4162 : string = " " + v4161 + v52 + ""
            let v4163 : string = v4160 ()
            (* run_target_args'
            let v4168 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v4169 : string = "&*$0"
            let v4170 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4163 v4169 
            let _run_target_args'_v4168 = v4170 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v4171 : string = "&*$0"
            let v4172 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4163 v4171 
            let _run_target_args'_v4168 = v4172 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v4173 : string = "&*$0"
            let v4174 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4163 v4173 
            let _run_target_args'_v4168 = v4174 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v4176 : Ref<Str> = v4163 |> unbox<Ref<Str>>
            let _run_target_args'_v4168 = v4176 
            #endif
#if FABLE_COMPILER_PYTHON
            let v4180 : Ref<Str> = v4163 |> unbox<Ref<Str>>
            let _run_target_args'_v4168 = v4180 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v4184 : Ref<Str> = v4163 |> unbox<Ref<Str>>
            let _run_target_args'_v4168 = v4184 
            #endif
#else
            let v4188 : Ref<Str> = v4163 |> unbox<Ref<Str>>
            let _run_target_args'_v4168 = v4188 
            #endif
            let v4191 : Ref<Str> = _run_target_args'_v4168 
            (* run_target_args'
            let v4204 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v4205 : string = "String::from($0)"
            let v4206 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4191 v4205 
            let _run_target_args'_v4204 = v4206 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v4207 : string = "String::from($0)"
            let v4208 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4191 v4207 
            let _run_target_args'_v4204 = v4208 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v4209 : string = "String::from($0)"
            let v4210 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4191 v4209 
            let _run_target_args'_v4204 = v4210 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v4212 : std_string_String = v4191 |> unbox<std_string_String>
            let _run_target_args'_v4204 = v4212 
            #endif
#if FABLE_COMPILER_PYTHON
            let v4216 : std_string_String = v4191 |> unbox<std_string_String>
            let _run_target_args'_v4204 = v4216 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v4220 : std_string_String = v4191 |> unbox<std_string_String>
            let _run_target_args'_v4204 = v4220 
            #endif
#else
            let v4224 : std_string_String = v4191 |> unbox<std_string_String>
            let _run_target_args'_v4204 = v4224 
            #endif
            let v4227 : std_string_String = _run_target_args'_v4204 
            let v4236 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v4237 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4227 v4236 
            let v4238 : string = "v4237"
            let v4239 : string = v4238 + v52 
            let v4240 : string = v4239 + v52 
            let v4241 : string = "vec![" + v4240 + "]"
            let v4242 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4241 
            let v4243 : string = "leptos::prelude::Fragment::new($0)"
            let v4244 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4242 v4243 
            let v4245 : string = "leptos::prelude::AnyView::from($0)"
            let v4246 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4244 v4245 
            let v4247 : string = "span"
            let v4248 : string = "<" + v4247 + " " + v4162 + ">move || { v4246 }</" + v4247 + ">"
            let v4249 : string = "leptos::prelude::view! { " + v4248 + " }"
            let v4250 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4249 
            let v4251 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4250 |> unbox
            let v4252 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4253 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4251 v4252 
            let v4254 : string = "v4253"
            let v4255 : string = v4254 + v52 
            let v4256 : string = v4255 + v52 
            let v4257 : string = "vec![" + v4256 + "]"
            let v4258 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4257 
            let v4259 : string = "leptos::prelude::Fragment::new($0)"
            let v4260 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4258 v4259 
            let v4261 : string = "leptos::prelude::AnyView::from($0)"
            let v4262 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4260 v4261 
            let v4263 : string = "<" + v4139 + " " + v4159 + ">move || { v4262 }</" + v4139 + ">"
            let v4264 : string = "leptos::prelude::view! { " + v4263 + " }"
            let v4265 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4264 
            let v4266 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4265 |> unbox
            let v4267 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4268 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4266 v4267 
            let v4269 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
            let v4270 : string = " " + v4269 + v52 + ""
            let v4271 : string = "$0"
            let v4272 : (unit -> string) = closure166()
            let v4273 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4272 v4271 
            let v4274 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v4275 : string = "viewBox=\"0 0 20 20\""
            let v4276 : string = "fill=\"currentColor\""
            let v4277 : string = "class=move || \" \".to_owned() + &v4273(())"
            let v4278 : string = " " + v4274 + v52 + ""
            let v4279 : string = " " + v4275 + v4278 + ""
            let v4280 : string = " " + v4276 + v4279 + ""
            let v4281 : string = " " + v4277 + v4280 + ""
            let v4282 : string = "fill-rule=\"evenodd\""
            let v4283 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
            let v4284 : string = "clip-rule=\"evenodd\""
            let v4285 : string = " " + v4282 + v52 + ""
            let v4286 : string = " " + v4283 + v4285 + ""
            let v4287 : string = " " + v4284 + v4286 + ""
            let v4288 : string = "vec![" + v52 + "]"
            let v4289 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4288 
            let v4290 : string = "leptos::prelude::Fragment::new($0)"
            let v4291 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4289 v4290 
            let v4292 : string = "leptos::prelude::AnyView::from($0)"
            let v4293 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4291 v4292 
            let v4294 : string = "<" + v4046 + " " + v4287 + ">move || { v4293 }</" + v4046 + ">"
            let v4295 : string = "leptos::prelude::view! { " + v4294 + " }"
            let v4296 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4295 
            let v4297 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4296 |> unbox
            let v4298 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4299 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4297 v4298 
            let v4300 : string = "v4299"
            let v4301 : string = v4300 + v52 
            let v4302 : string = v4301 + v52 
            let v4303 : string = "vec![" + v4302 + "]"
            let v4304 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4303 
            let v4305 : string = "leptos::prelude::Fragment::new($0)"
            let v4306 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4304 v4305 
            let v4307 : string = "leptos::prelude::AnyView::from($0)"
            let v4308 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4306 v4307 
            let v4309 : string = "<" + v4084 + " " + v4281 + ">move || { v4308 }</" + v4084 + ">"
            let v4310 : string = "leptos::prelude::view! { " + v4309 + " }"
            let v4311 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4310 
            let v4312 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4311 |> unbox
            let v4313 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4314 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4312 v4313 
            let v4315 : string = "v4314"
            let v4316 : string = v4315 + v52 
            let v4317 : string = v4316 + v52 
            let v4318 : string = "vec![" + v4317 + "]"
            let v4319 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4318 
            let v4320 : string = "leptos::prelude::Fragment::new($0)"
            let v4321 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4319 v4320 
            let v4322 : string = "leptos::prelude::AnyView::from($0)"
            let v4323 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4321 v4322 
            let v4324 : string = "<" + v4247 + " " + v4270 + ">move || { v4323 }</" + v4247 + ">"
            let v4325 : string = "leptos::prelude::view! { " + v4324 + " }"
            let v4326 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4325 
            let v4327 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4326 |> unbox
            let v4328 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4329 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4327 v4328 
            let v4330 : string = "v4329"
            let v4331 : string = v4330 + v52 
            let v4332 : string = v4331 + v52 
            let v4333 : string = "v4268"
            let v4334 : string = v4333 + v4075 
            let v4335 : string = v4334 + v4332 
            let v4336 : string = "vec![" + v4335 + "]"
            let v4337 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4336 
            let v4338 : string = "leptos::prelude::Fragment::new($0)"
            let v4339 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4337 v4338 
            let v4340 : string = "leptos::prelude::AnyView::from($0)"
            let v4341 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4339 v4340 
            let v4342 : string = "summary"
            let v4343 : string = "<" + v4342 + " " + v4157 + ">move || { v4341 }</" + v4342 + ">"
            let v4344 : string = "leptos::prelude::view! { " + v4343 + " }"
            let v4345 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4344 
            let v4346 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v4345 |> unbox
            let v4347 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4348 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4346 v4347 
            let v4349 : string = "class=\"flex flex-1 flex-col\""
            let v4350 : string = " " + v4349 + v52 + ""
            let v4351 : string = "Func0::new(move || $0())"
            let v4352 : (unit -> leptos_dom_Fragment) = closure260(v3964, v3996, v3976, v4015)
            let v4353 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v4352 v4351 
            let v4354 : Func0<leptos_dom_Fragment> = method195(v4353)
            let v4355 : string = "(move || v4354())()"
            let v4356 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v4355 
            let v4357 : string = "leptos::prelude::AnyView::from($0)"
            let v4358 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4356 v4357 
            let v4359 : string = "<" + v4139 + " " + v4350 + ">move || { v4358 }</" + v4139 + ">"
            let v4360 : string = "leptos::prelude::view! { " + v4359 + " }"
            let v4361 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4360 
            let v4362 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4361 |> unbox
            let v4363 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4364 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4362 v4363 
            let v4365 : string = "v4364"
            let v4366 : string = v4365 + v52 
            let v4367 : string = v4366 + v52 
            let v4368 : string = "v4348"
            let v4369 : string = v4368 + v4075 
            let v4370 : string = v4369 + v4367 
            let v4371 : string = "vec![" + v4370 + "]"
            let v4372 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4371 
            let v4373 : string = "leptos::prelude::Fragment::new($0)"
            let v4374 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4372 v4373 
            let v4375 : string = "leptos::prelude::AnyView::from($0)"
            let v4376 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4374 v4375 
            let v4377 : string = "details"
            let v4378 : string = "<" + v4377 + " " + v4149 + ">move || { v4376 }</" + v4377 + ">"
            let v4379 : string = "leptos::prelude::view! { " + v4378 + " }"
            let v4380 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4379 
            let v4381 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v4380 |> unbox
            let v4382 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4383 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4381 v4382 
            let v4384 : string = "v4383"
            let v4385 : string = v4384 + v52 
            let v4386 : string = v4385 + v52 
            let v4387 : string = "v4145"
            let v4388 : string = v4387 + v4075 
            let v4389 : string = v4388 + v4386 
            let v4390 : string = "vec![" + v4389 + "]"
            let v4391 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4390 
            let v4392 : string = "leptos::prelude::Fragment::new($0)"
            let v4393 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4391 v4392 
            let v4394 : string = "leptos::prelude::AnyView::from($0)"
            let v4395 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4393 v4394 
            let v4396 : string = "<" + v4139 + " " + v4121 + ">move || { v4395 }</" + v4139 + ">"
            let v4397 : string = "leptos::prelude::view! { " + v4396 + " }"
            let v4398 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4397 
            let v4399 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4398 |> unbox
            let v4400 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4401 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4399 v4400 
            let v4402 : leptos_prelude_ArcRwSignal<Heap1> = v3964.l0
            let v4403 : string = "Box::pin($0)"
            let v4404 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v4402 v4403 
            let v4405 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
            let v4406 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4404 v4405 
            let v4407 : leptos_prelude_ArcRwSignal<bool> = v4406.l1
            let v4408 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
            let v4409 : bool = Fable.Core.RustInterop.emitRustExpr v4407 v4408 
            let v4693 : leptos_prelude_AnyView_ =
                if v4409 then
                    let v4410 : string = "vec![" + v52 + "]"
                    let v4411 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4410 
                    let v4412 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4413 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4411 v4412 
                    let v4414 : string = "class=\"flex flex-col [position:relative]\""
                    let v4415 : string = " " + v4414 + v52 + ""
                    let v4416 : string = "$0"
                    let v4417 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4123 v4416 
                    let v4418 : string = "$0"
                    let v4419 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v4126 v4418 
                    let v4420 : string = "class=\"[position:absolute] [right:0] [top:0]\""
                    let v4421 : string = " " + v4420 + v52 + ""
                    let v4422 : string = "v4413"
                    let v4423 : string = v4422 + v52 
                    let v4424 : string = v4423 + v52 
                    let v4425 : string = "vec![" + v4424 + "]"
                    let v4426 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4425 
                    let v4427 : string = "leptos::prelude::Fragment::new($0)"
                    let v4428 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4426 v4427 
                    let v4429 : string = "leptos::prelude::AnyView::from($0)"
                    let v4430 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4428 v4429 
                    let v4431 : string = "<" + v4139 + " " + v4421 + ">move || { v4430 }</" + v4139 + ">"
                    let v4432 : string = "leptos::prelude::view! { " + v4431 + " }"
                    let v4433 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4432 
                    let v4434 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4433 |> unbox
                    let v4435 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4436 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4434 v4435 
                    let v4437 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v4417(())"
                    let v4438 : string = "open=move || v4419(())"
                    let v4439 : string = " " + v4437 + v52 + ""
                    let v4440 : string = " " + v4438 + v4439 + ""
                    let v4441 : string = "$0"
                    let v4442 : (unit -> string) = closure337()
                    let v4443 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4442 v4441 
                    let v4444 : string = "$0"
                    let v4445 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure338()
                    let v4446 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v4445 v4444 
                    let v4447 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v4446(()) + \" \" + &v4443(())"
                    let v4448 : string = " " + v4447 + v52 + ""
                    let v4449 : string = "class=\"flex items-center gap-2\""
                    let v4450 : string = " " + v4449 + v52 + ""
                    let v4451 : (unit -> string) = method282()
                    let v4452 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
                    let v4453 : string = " " + v4452 + v52 + ""
                    let v4454 : string = v4451 ()
                    (* run_target_args'
                    let v4459 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v4460 : string = "&*$0"
                    let v4461 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4454 v4460 
                    let _run_target_args'_v4459 = v4461 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v4462 : string = "&*$0"
                    let v4463 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4454 v4462 
                    let _run_target_args'_v4459 = v4463 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v4464 : string = "&*$0"
                    let v4465 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4454 v4464 
                    let _run_target_args'_v4459 = v4465 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v4467 : Ref<Str> = v4454 |> unbox<Ref<Str>>
                    let _run_target_args'_v4459 = v4467 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v4471 : Ref<Str> = v4454 |> unbox<Ref<Str>>
                    let _run_target_args'_v4459 = v4471 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v4475 : Ref<Str> = v4454 |> unbox<Ref<Str>>
                    let _run_target_args'_v4459 = v4475 
                    #endif
#else
                    let v4479 : Ref<Str> = v4454 |> unbox<Ref<Str>>
                    let _run_target_args'_v4459 = v4479 
                    #endif
                    let v4482 : Ref<Str> = _run_target_args'_v4459 
                    (* run_target_args'
                    let v4495 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v4496 : string = "String::from($0)"
                    let v4497 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4482 v4496 
                    let _run_target_args'_v4495 = v4497 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v4498 : string = "String::from($0)"
                    let v4499 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4482 v4498 
                    let _run_target_args'_v4495 = v4499 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v4500 : string = "String::from($0)"
                    let v4501 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4482 v4500 
                    let _run_target_args'_v4495 = v4501 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v4503 : std_string_String = v4482 |> unbox<std_string_String>
                    let _run_target_args'_v4495 = v4503 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v4507 : std_string_String = v4482 |> unbox<std_string_String>
                    let _run_target_args'_v4495 = v4507 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v4511 : std_string_String = v4482 |> unbox<std_string_String>
                    let _run_target_args'_v4495 = v4511 
                    #endif
#else
                    let v4515 : std_string_String = v4482 |> unbox<std_string_String>
                    let _run_target_args'_v4495 = v4515 
                    #endif
                    let v4518 : std_string_String = _run_target_args'_v4495 
                    let v4527 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v4528 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4518 v4527 
                    let v4529 : string = "v4528"
                    let v4530 : string = v4529 + v52 
                    let v4531 : string = v4530 + v52 
                    let v4532 : string = "vec![" + v4531 + "]"
                    let v4533 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4532 
                    let v4534 : string = "leptos::prelude::Fragment::new($0)"
                    let v4535 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4533 v4534 
                    let v4536 : string = "leptos::prelude::AnyView::from($0)"
                    let v4537 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4535 v4536 
                    let v4538 : string = "<" + v4247 + " " + v4453 + ">move || { v4537 }</" + v4247 + ">"
                    let v4539 : string = "leptos::prelude::view! { " + v4538 + " }"
                    let v4540 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4539 
                    let v4541 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4540 |> unbox
                    let v4542 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4543 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4541 v4542 
                    let v4544 : string = "v4543"
                    let v4545 : string = v4544 + v52 
                    let v4546 : string = v4545 + v52 
                    let v4547 : string = "vec![" + v4546 + "]"
                    let v4548 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4547 
                    let v4549 : string = "leptos::prelude::Fragment::new($0)"
                    let v4550 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4548 v4549 
                    let v4551 : string = "leptos::prelude::AnyView::from($0)"
                    let v4552 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4550 v4551 
                    let v4553 : string = "<" + v4139 + " " + v4450 + ">move || { v4552 }</" + v4139 + ">"
                    let v4554 : string = "leptos::prelude::view! { " + v4553 + " }"
                    let v4555 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4554 
                    let v4556 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4555 |> unbox
                    let v4557 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4558 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4556 v4557 
                    let v4559 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
                    let v4560 : string = " " + v4559 + v52 + ""
                    let v4561 : string = "$0"
                    let v4562 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4272 v4561 
                    let v4563 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                    let v4564 : string = "viewBox=\"0 0 20 20\""
                    let v4565 : string = "fill=\"currentColor\""
                    let v4566 : string = "class=move || \" \".to_owned() + &v4562(())"
                    let v4567 : string = " " + v4563 + v52 + ""
                    let v4568 : string = " " + v4564 + v4567 + ""
                    let v4569 : string = " " + v4565 + v4568 + ""
                    let v4570 : string = " " + v4566 + v4569 + ""
                    let v4571 : string = "fill-rule=\"evenodd\""
                    let v4572 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
                    let v4573 : string = "clip-rule=\"evenodd\""
                    let v4574 : string = " " + v4571 + v52 + ""
                    let v4575 : string = " " + v4572 + v4574 + ""
                    let v4576 : string = " " + v4573 + v4575 + ""
                    let v4577 : string = "vec![" + v52 + "]"
                    let v4578 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4577 
                    let v4579 : string = "leptos::prelude::Fragment::new($0)"
                    let v4580 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4578 v4579 
                    let v4581 : string = "leptos::prelude::AnyView::from($0)"
                    let v4582 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4580 v4581 
                    let v4583 : string = "<" + v4046 + " " + v4576 + ">move || { v4582 }</" + v4046 + ">"
                    let v4584 : string = "leptos::prelude::view! { " + v4583 + " }"
                    let v4585 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4584 
                    let v4586 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4585 |> unbox
                    let v4587 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4588 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4586 v4587 
                    let v4589 : string = "v4588"
                    let v4590 : string = v4589 + v52 
                    let v4591 : string = v4590 + v52 
                    let v4592 : string = "vec![" + v4591 + "]"
                    let v4593 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4592 
                    let v4594 : string = "leptos::prelude::Fragment::new($0)"
                    let v4595 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4593 v4594 
                    let v4596 : string = "leptos::prelude::AnyView::from($0)"
                    let v4597 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4595 v4596 
                    let v4598 : string = "<" + v4084 + " " + v4570 + ">move || { v4597 }</" + v4084 + ">"
                    let v4599 : string = "leptos::prelude::view! { " + v4598 + " }"
                    let v4600 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4599 
                    let v4601 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4600 |> unbox
                    let v4602 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4603 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4601 v4602 
                    let v4604 : string = "v4603"
                    let v4605 : string = v4604 + v52 
                    let v4606 : string = v4605 + v52 
                    let v4607 : string = "vec![" + v4606 + "]"
                    let v4608 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4607 
                    let v4609 : string = "leptos::prelude::Fragment::new($0)"
                    let v4610 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4608 v4609 
                    let v4611 : string = "leptos::prelude::AnyView::from($0)"
                    let v4612 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4610 v4611 
                    let v4613 : string = "<" + v4247 + " " + v4560 + ">move || { v4612 }</" + v4247 + ">"
                    let v4614 : string = "leptos::prelude::view! { " + v4613 + " }"
                    let v4615 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4614 
                    let v4616 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4615 |> unbox
                    let v4617 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4618 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4616 v4617 
                    let v4619 : string = "v4618"
                    let v4620 : string = v4619 + v52 
                    let v4621 : string = v4620 + v52 
                    let v4622 : string = "v4558"
                    let v4623 : string = v4622 + v4075 
                    let v4624 : string = v4623 + v4621 
                    let v4625 : string = "vec![" + v4624 + "]"
                    let v4626 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4625 
                    let v4627 : string = "leptos::prelude::Fragment::new($0)"
                    let v4628 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4626 v4627 
                    let v4629 : string = "leptos::prelude::AnyView::from($0)"
                    let v4630 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4628 v4629 
                    let v4631 : string = "<" + v4342 + " " + v4448 + ">move || { v4630 }</" + v4342 + ">"
                    let v4632 : string = "leptos::prelude::view! { " + v4631 + " }"
                    let v4633 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4632 
                    let v4634 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v4633 |> unbox
                    let v4635 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4636 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4634 v4635 
                    let v4637 : string = "class=\"flex flex-1 flex-col\""
                    let v4638 : string = " " + v4637 + v52 + ""
                    let v4639 : string = "Func0::new(move || $0())"
                    let v4640 : (unit -> leptos_dom_Fragment) = closure340(v3996)
                    let v4641 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v4640 v4639 
                    let v4642 : Func0<leptos_dom_Fragment> = method195(v4641)
                    let v4643 : string = "(move || v4642())()"
                    let v4644 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v4643 
                    let v4645 : string = "leptos::prelude::AnyView::from($0)"
                    let v4646 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4644 v4645 
                    let v4647 : string = "<" + v4139 + " " + v4638 + ">move || { v4646 }</" + v4139 + ">"
                    let v4648 : string = "leptos::prelude::view! { " + v4647 + " }"
                    let v4649 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4648 
                    let v4650 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4649 |> unbox
                    let v4651 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4652 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4650 v4651 
                    let v4653 : string = "v4652"
                    let v4654 : string = v4653 + v52 
                    let v4655 : string = v4654 + v52 
                    let v4656 : string = "v4636"
                    let v4657 : string = v4656 + v4075 
                    let v4658 : string = v4657 + v4655 
                    let v4659 : string = "vec![" + v4658 + "]"
                    let v4660 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4659 
                    let v4661 : string = "leptos::prelude::Fragment::new($0)"
                    let v4662 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4660 v4661 
                    let v4663 : string = "leptos::prelude::AnyView::from($0)"
                    let v4664 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4662 v4663 
                    let v4665 : string = "<" + v4377 + " " + v4440 + ">move || { v4664 }</" + v4377 + ">"
                    let v4666 : string = "leptos::prelude::view! { " + v4665 + " }"
                    let v4667 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4666 
                    let v4668 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v4667 |> unbox
                    let v4669 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4670 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4668 v4669 
                    let v4671 : string = "v4670"
                    let v4672 : string = v4671 + v52 
                    let v4673 : string = v4672 + v52 
                    let v4674 : string = "v4436"
                    let v4675 : string = v4674 + v4075 
                    let v4676 : string = v4675 + v4673 
                    let v4677 : string = "vec![" + v4676 + "]"
                    let v4678 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4677 
                    let v4679 : string = "leptos::prelude::Fragment::new($0)"
                    let v4680 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4678 v4679 
                    let v4681 : string = "leptos::prelude::AnyView::from($0)"
                    let v4682 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4680 v4681 
                    let v4683 : string = "<" + v4139 + " " + v4415 + ">move || { v4682 }</" + v4139 + ">"
                    let v4684 : string = "leptos::prelude::view! { " + v4683 + " }"
                    let v4685 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4684 
                    let v4686 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4685 |> unbox
                    let v4687 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4688 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4686 v4687 
                    v4688
                else
                    let v4689 : string = "vec![" + v52 + "]"
                    let v4690 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4689 
                    let v4691 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4692 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4690 v4691 
                    v4692
            let v4694 : string = "v4693"
            let v4695 : string = v4694 + v52 
            let v4696 : string = v4695 + v52 
            let v4697 : string = "v4401"
            let v4698 : string = v4697 + v4075 
            let v4699 : string = v4698 + v4696 
            let v4700 : string = "vec![" + v4699 + "]"
            let v4701 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4700 
            let v4702 : string = "leptos::prelude::Fragment::new($0)"
            let v4703 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4701 v4702 
            US22_0(v4703)
        | _ ->
            US22_1
    let v5726 : leptos_prelude_AnyView_ =
        match v5708 with
        | US22_1 -> (* None *)
            let v5721 : string = "vec![" + v52 + "]"
            let v5722 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5721 
            let v5723 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5724 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5722 v5723 
            v5724
        | US22_0(v5709) -> (* Some *)
            let v5710 : string = "class=\"flex flex-1 flex-col [overflow-y:auto]\""
            let v5711 : string = " " + v5710 + v52 + ""
            let v5712 : string = "leptos::prelude::AnyView::from($0)"
            let v5713 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5709 v5712 
            let v5714 : string = "div"
            let v5715 : string = "<" + v5714 + " " + v5711 + ">move || { v5713 }</" + v5714 + ">"
            let v5716 : string = "leptos::prelude::view! { " + v5715 + " }"
            let v5717 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5716 
            let v5718 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5717 |> unbox
            let v5719 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5720 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5718 v5719 
            v5720
    let v5727 : string = "v5726"
    let v5728 : string = v5727 + v52 
    let v5729 : string = v5728 + v52 
    let v5730 : string = "vec![" + v5729 + "]"
    let v5731 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5730 
    let v5732 : string = "leptos::prelude::Fragment::new($0)"
    let v5733 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5731 v5732 
    let v5734 : string = "leptos::prelude::AnyView::from($0)"
    let v5735 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5733 v5734 
    let v5736 : string = "main"
    let v5737 : string = "<" + v5736 + " " + v2277 + ">move || { v5735 }</" + v5736 + ">"
    let v5738 : string = "leptos::prelude::view! { " + v5737 + " }"
    let v5739 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5738 
    let v5740 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Main>> = v5739 |> unbox
    let v5741 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5742 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5740 v5741 
    let v5743 : string = "class=\"flex\""
    let v5744 : string = " " + v5743 + v52 + ""
    let v5745 : string = "menu_tabs.render ()"
    let v5746 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v5747 : bool = Fable.Core.RustInterop.emitRustExpr v5745 v5746 
    let v5748 : string = "leptos_router::hooks::use_location()"
    let v5749 : leptos_router_location_Location = Fable.Core.RustInterop.emitRustExpr () v5748 
    let v5750 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v5751 : (unit -> string) = closure41(v5749)
    let v5752 : leptos_prelude_ArcMemo<string> = Fable.Core.RustInterop.emitRustExpr v5751 v5750 
    let v5753 : string = "class=\"hidden\""
    let v5754 : string = " " + v5753 + v52 + ""
    let v5755 : string = "for=\"Tab\""
    let v5756 : string = "class=\"sr-only\""
    let v5757 : string = " " + v5755 + v52 + ""
    let v5758 : string = " " + v5756 + v5757 + ""
    let v5759 : string = "Tab"
    (* run_target_args'
    let v5764 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5765 : string = "&*$0"
    let v5766 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5759 v5765 
    let _run_target_args'_v5764 = v5766 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5767 : string = "&*$0"
    let v5768 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5759 v5767 
    let _run_target_args'_v5764 = v5768 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5769 : string = "&*$0"
    let v5770 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5759 v5769 
    let _run_target_args'_v5764 = v5770 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5772 : Ref<Str> = v5759 |> unbox<Ref<Str>>
    let _run_target_args'_v5764 = v5772 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5776 : Ref<Str> = v5759 |> unbox<Ref<Str>>
    let _run_target_args'_v5764 = v5776 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5780 : Ref<Str> = v5759 |> unbox<Ref<Str>>
    let _run_target_args'_v5764 = v5780 
    #endif
#else
    let v5784 : Ref<Str> = v5759 |> unbox<Ref<Str>>
    let _run_target_args'_v5764 = v5784 
    #endif
    let v5787 : Ref<Str> = _run_target_args'_v5764 
    (* run_target_args'
    let v5800 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5801 : string = "String::from($0)"
    let v5802 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5787 v5801 
    let _run_target_args'_v5800 = v5802 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5803 : string = "String::from($0)"
    let v5804 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5787 v5803 
    let _run_target_args'_v5800 = v5804 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5805 : string = "String::from($0)"
    let v5806 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5787 v5805 
    let _run_target_args'_v5800 = v5806 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5808 : std_string_String = v5787 |> unbox<std_string_String>
    let _run_target_args'_v5800 = v5808 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5812 : std_string_String = v5787 |> unbox<std_string_String>
    let _run_target_args'_v5800 = v5812 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5816 : std_string_String = v5787 |> unbox<std_string_String>
    let _run_target_args'_v5800 = v5816 
    #endif
#else
    let v5820 : std_string_String = v5787 |> unbox<std_string_String>
    let _run_target_args'_v5800 = v5820 
    #endif
    let v5823 : std_string_String = _run_target_args'_v5800 
    let v5832 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v5833 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5823 v5832 
    let v5834 : string = "v5833"
    let v5835 : string = v5834 + v52 
    let v5836 : string = v5835 + v52 
    let v5837 : string = "vec![" + v5836 + "]"
    let v5838 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5837 
    let v5839 : string = "leptos::prelude::Fragment::new($0)"
    let v5840 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5838 v5839 
    let v5841 : string = "leptos::prelude::AnyView::from($0)"
    let v5842 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5840 v5841 
    let v5843 : string = "label"
    let v5844 : string = "<" + v5843 + " " + v5758 + ">move || { v5842 }</" + v5843 + ">"
    let v5845 : string = "leptos::prelude::view! { " + v5844 + " }"
    let v5846 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5845 
    let v5847 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Label>> = v5846 |> unbox
    let v5848 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5849 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5847 v5848 
    let v5850 : string = "id=\"Tab\""
    let v5851 : string = "class=\"w-full rounded-md border-gray-200\""
    let v5852 : string = " " + v5850 + v52 + ""
    let v5853 : string = " " + v5851 + v5852 + ""
    let v5854 : (unit -> bool) = method285(v1898)
    let v5855 : string = "selected=v5854()"
    let v5856 : string = " " + v5855 + v52 + ""
    let v5857 : string = "Settings"
    (* run_target_args'
    let v5862 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5863 : string = "&*$0"
    let v5864 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5857 v5863 
    let _run_target_args'_v5862 = v5864 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5865 : string = "&*$0"
    let v5866 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5857 v5865 
    let _run_target_args'_v5862 = v5866 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5867 : string = "&*$0"
    let v5868 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5857 v5867 
    let _run_target_args'_v5862 = v5868 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5870 : Ref<Str> = v5857 |> unbox<Ref<Str>>
    let _run_target_args'_v5862 = v5870 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5874 : Ref<Str> = v5857 |> unbox<Ref<Str>>
    let _run_target_args'_v5862 = v5874 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5878 : Ref<Str> = v5857 |> unbox<Ref<Str>>
    let _run_target_args'_v5862 = v5878 
    #endif
#else
    let v5882 : Ref<Str> = v5857 |> unbox<Ref<Str>>
    let _run_target_args'_v5862 = v5882 
    #endif
    let v5885 : Ref<Str> = _run_target_args'_v5862 
    (* run_target_args'
    let v5898 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5899 : string = "String::from($0)"
    let v5900 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5885 v5899 
    let _run_target_args'_v5898 = v5900 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5901 : string = "String::from($0)"
    let v5902 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5885 v5901 
    let _run_target_args'_v5898 = v5902 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5903 : string = "String::from($0)"
    let v5904 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5885 v5903 
    let _run_target_args'_v5898 = v5904 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5906 : std_string_String = v5885 |> unbox<std_string_String>
    let _run_target_args'_v5898 = v5906 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5910 : std_string_String = v5885 |> unbox<std_string_String>
    let _run_target_args'_v5898 = v5910 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5914 : std_string_String = v5885 |> unbox<std_string_String>
    let _run_target_args'_v5898 = v5914 
    #endif
#else
    let v5918 : std_string_String = v5885 |> unbox<std_string_String>
    let _run_target_args'_v5898 = v5918 
    #endif
    let v5921 : std_string_String = _run_target_args'_v5898 
    let v5930 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v5931 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5921 v5930 
    let v5932 : string = "v5931"
    let v5933 : string = v5932 + v52 
    let v5934 : string = v5933 + v52 
    let v5935 : string = "vec![" + v5934 + "]"
    let v5936 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5935 
    let v5937 : string = "leptos::prelude::Fragment::new($0)"
    let v5938 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5936 v5937 
    let v5939 : string = "leptos::prelude::AnyView::from($0)"
    let v5940 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5938 v5939 
    let v5941 : string = "option"
    let v5942 : string = "<" + v5941 + " " + v5856 + ">move || { v5940 }</" + v5941 + ">"
    let v5943 : string = "leptos::prelude::view! { " + v5942 + " }"
    let v5944 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5943 
    let v5945 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Option>> = v5944 |> unbox
    let v5946 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5947 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5945 v5946 
    let v5948 : (unit -> bool) = method286(v1898)
    let v5949 : string = "selected=v5948()"
    let v5950 : string = " " + v5949 + v52 + ""
    let v5951 : string = "Transactions"
    (* run_target_args'
    let v5956 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5957 : string = "&*$0"
    let v5958 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5951 v5957 
    let _run_target_args'_v5956 = v5958 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5959 : string = "&*$0"
    let v5960 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5951 v5959 
    let _run_target_args'_v5956 = v5960 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5961 : string = "&*$0"
    let v5962 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5951 v5961 
    let _run_target_args'_v5956 = v5962 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5964 : Ref<Str> = v5951 |> unbox<Ref<Str>>
    let _run_target_args'_v5956 = v5964 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5968 : Ref<Str> = v5951 |> unbox<Ref<Str>>
    let _run_target_args'_v5956 = v5968 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5972 : Ref<Str> = v5951 |> unbox<Ref<Str>>
    let _run_target_args'_v5956 = v5972 
    #endif
#else
    let v5976 : Ref<Str> = v5951 |> unbox<Ref<Str>>
    let _run_target_args'_v5956 = v5976 
    #endif
    let v5979 : Ref<Str> = _run_target_args'_v5956 
    (* run_target_args'
    let v5992 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5993 : string = "String::from($0)"
    let v5994 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5979 v5993 
    let _run_target_args'_v5992 = v5994 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5995 : string = "String::from($0)"
    let v5996 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5979 v5995 
    let _run_target_args'_v5992 = v5996 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5997 : string = "String::from($0)"
    let v5998 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5979 v5997 
    let _run_target_args'_v5992 = v5998 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6000 : std_string_String = v5979 |> unbox<std_string_String>
    let _run_target_args'_v5992 = v6000 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6004 : std_string_String = v5979 |> unbox<std_string_String>
    let _run_target_args'_v5992 = v6004 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6008 : std_string_String = v5979 |> unbox<std_string_String>
    let _run_target_args'_v5992 = v6008 
    #endif
#else
    let v6012 : std_string_String = v5979 |> unbox<std_string_String>
    let _run_target_args'_v5992 = v6012 
    #endif
    let v6015 : std_string_String = _run_target_args'_v5992 
    let v6024 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v6025 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6015 v6024 
    let v6026 : string = "v6025"
    let v6027 : string = v6026 + v52 
    let v6028 : string = v6027 + v52 
    let v6029 : string = "vec![" + v6028 + "]"
    let v6030 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6029 
    let v6031 : string = "leptos::prelude::Fragment::new($0)"
    let v6032 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6030 v6031 
    let v6033 : string = "leptos::prelude::AnyView::from($0)"
    let v6034 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6032 v6033 
    let v6035 : string = "<" + v5941 + " " + v5950 + ">move || { v6034 }</" + v5941 + ">"
    let v6036 : string = "leptos::prelude::view! { " + v6035 + " }"
    let v6037 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6036 
    let v6038 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Option>> = v6037 |> unbox
    let v6039 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6040 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6038 v6039 
    let v6041 : (unit -> bool) = method287(v1898)
    let v6042 : string = "selected=v6041()"
    let v6043 : string = " " + v6042 + v52 + ""
    let v6044 : string = "Lists"
    (* run_target_args'
    let v6049 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6050 : string = "&*$0"
    let v6051 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6044 v6050 
    let _run_target_args'_v6049 = v6051 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6052 : string = "&*$0"
    let v6053 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6044 v6052 
    let _run_target_args'_v6049 = v6053 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6054 : string = "&*$0"
    let v6055 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6044 v6054 
    let _run_target_args'_v6049 = v6055 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6057 : Ref<Str> = v6044 |> unbox<Ref<Str>>
    let _run_target_args'_v6049 = v6057 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6061 : Ref<Str> = v6044 |> unbox<Ref<Str>>
    let _run_target_args'_v6049 = v6061 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6065 : Ref<Str> = v6044 |> unbox<Ref<Str>>
    let _run_target_args'_v6049 = v6065 
    #endif
#else
    let v6069 : Ref<Str> = v6044 |> unbox<Ref<Str>>
    let _run_target_args'_v6049 = v6069 
    #endif
    let v6072 : Ref<Str> = _run_target_args'_v6049 
    (* run_target_args'
    let v6085 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6086 : string = "String::from($0)"
    let v6087 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6072 v6086 
    let _run_target_args'_v6085 = v6087 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6088 : string = "String::from($0)"
    let v6089 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6072 v6088 
    let _run_target_args'_v6085 = v6089 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6090 : string = "String::from($0)"
    let v6091 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6072 v6090 
    let _run_target_args'_v6085 = v6091 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6093 : std_string_String = v6072 |> unbox<std_string_String>
    let _run_target_args'_v6085 = v6093 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6097 : std_string_String = v6072 |> unbox<std_string_String>
    let _run_target_args'_v6085 = v6097 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6101 : std_string_String = v6072 |> unbox<std_string_String>
    let _run_target_args'_v6085 = v6101 
    #endif
#else
    let v6105 : std_string_String = v6072 |> unbox<std_string_String>
    let _run_target_args'_v6085 = v6105 
    #endif
    let v6108 : std_string_String = _run_target_args'_v6085 
    let v6117 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v6118 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6108 v6117 
    let v6119 : string = "v6118"
    let v6120 : string = v6119 + v52 
    let v6121 : string = v6120 + v52 
    let v6122 : string = "vec![" + v6121 + "]"
    let v6123 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6122 
    let v6124 : string = "leptos::prelude::Fragment::new($0)"
    let v6125 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6123 v6124 
    let v6126 : string = "leptos::prelude::AnyView::from($0)"
    let v6127 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6125 v6126 
    let v6128 : string = "<" + v5941 + " " + v6043 + ">move || { v6127 }</" + v5941 + ">"
    let v6129 : string = "leptos::prelude::view! { " + v6128 + " }"
    let v6130 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6129 
    let v6131 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Option>> = v6130 |> unbox
    let v6132 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6133 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6131 v6132 
    let v6134 : (unit -> bool) = method288(v1898)
    let v6135 : string = "selected=v6134()"
    let v6136 : string = " " + v6135 + v52 + ""
    let v6137 : string = "Dice"
    (* run_target_args'
    let v6142 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6143 : string = "&*$0"
    let v6144 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6137 v6143 
    let _run_target_args'_v6142 = v6144 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6145 : string = "&*$0"
    let v6146 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6137 v6145 
    let _run_target_args'_v6142 = v6146 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6147 : string = "&*$0"
    let v6148 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6137 v6147 
    let _run_target_args'_v6142 = v6148 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6150 : Ref<Str> = v6137 |> unbox<Ref<Str>>
    let _run_target_args'_v6142 = v6150 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6154 : Ref<Str> = v6137 |> unbox<Ref<Str>>
    let _run_target_args'_v6142 = v6154 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6158 : Ref<Str> = v6137 |> unbox<Ref<Str>>
    let _run_target_args'_v6142 = v6158 
    #endif
#else
    let v6162 : Ref<Str> = v6137 |> unbox<Ref<Str>>
    let _run_target_args'_v6142 = v6162 
    #endif
    let v6165 : Ref<Str> = _run_target_args'_v6142 
    (* run_target_args'
    let v6178 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6179 : string = "String::from($0)"
    let v6180 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6165 v6179 
    let _run_target_args'_v6178 = v6180 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6181 : string = "String::from($0)"
    let v6182 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6165 v6181 
    let _run_target_args'_v6178 = v6182 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6183 : string = "String::from($0)"
    let v6184 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6165 v6183 
    let _run_target_args'_v6178 = v6184 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6186 : std_string_String = v6165 |> unbox<std_string_String>
    let _run_target_args'_v6178 = v6186 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6190 : std_string_String = v6165 |> unbox<std_string_String>
    let _run_target_args'_v6178 = v6190 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6194 : std_string_String = v6165 |> unbox<std_string_String>
    let _run_target_args'_v6178 = v6194 
    #endif
#else
    let v6198 : std_string_String = v6165 |> unbox<std_string_String>
    let _run_target_args'_v6178 = v6198 
    #endif
    let v6201 : std_string_String = _run_target_args'_v6178 
    let v6210 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v6211 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6201 v6210 
    let v6212 : string = "v6211"
    let v6213 : string = v6212 + v52 
    let v6214 : string = v6213 + v52 
    let v6215 : string = "vec![" + v6214 + "]"
    let v6216 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6215 
    let v6217 : string = "leptos::prelude::Fragment::new($0)"
    let v6218 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6216 v6217 
    let v6219 : string = "leptos::prelude::AnyView::from($0)"
    let v6220 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6218 v6219 
    let v6221 : string = "<" + v5941 + " " + v6136 + ">move || { v6220 }</" + v5941 + ">"
    let v6222 : string = "leptos::prelude::view! { " + v6221 + " }"
    let v6223 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6222 
    let v6224 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Option>> = v6223 |> unbox
    let v6225 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6226 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6224 v6225 
    let v6227 : string = "v5947"
    let v6228 : string = v6227 + v52 
    let v6229 : string = v6228 + v52 
    let v6230 : string = "v6040"
    let v6231 : string = ", "
    let v6232 : string = v6230 + v6231 
    let v6233 : string = v6232 + v6229 
    let v6234 : string = "v6133"
    let v6235 : string = v6234 + v6231 
    let v6236 : string = v6235 + v6233 
    let v6237 : string = "v6226"
    let v6238 : string = v6237 + v6231 
    let v6239 : string = v6238 + v6236 
    let v6240 : string = "vec![" + v6239 + "]"
    let v6241 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6240 
    let v6242 : string = "leptos::prelude::Fragment::new($0)"
    let v6243 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6241 v6242 
    let v6244 : string = "leptos::prelude::AnyView::from($0)"
    let v6245 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6243 v6244 
    let v6246 : string = "select"
    let v6247 : string = "<" + v6246 + " " + v5853 + ">move || { v6245 }</" + v6246 + ">"
    let v6248 : string = "leptos::prelude::view! { " + v6247 + " }"
    let v6249 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6248 
    let v6250 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Select>> = v6249 |> unbox
    let v6251 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6252 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6250 v6251 
    let v6253 : string = "v6252"
    let v6254 : string = v6253 + v52 
    let v6255 : string = v6254 + v52 
    let v6256 : string = "v5849"
    let v6257 : string = v6256 + v6231 
    let v6258 : string = v6257 + v6255 
    let v6259 : string = "vec![" + v6258 + "]"
    let v6260 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6259 
    let v6261 : string = "leptos::prelude::Fragment::new($0)"
    let v6262 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6260 v6261 
    let v6263 : string = "leptos::prelude::AnyView::from($0)"
    let v6264 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6262 v6263 
    let v6265 : string = "div"
    let v6266 : string = "<" + v6265 + " " + v5754 + ">move || { v6264 }</" + v6265 + ">"
    let v6267 : string = "leptos::prelude::view! { " + v6266 + " }"
    let v6268 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6267 
    let v6269 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v6268 |> unbox
    let v6270 : string = "class=\"flex flex-1 [overflow-x:auto] [overflow-y:hidden]\""
    let v6271 : string = " " + v6270 + v52 + ""
    let v6272 : string = "class=\"flex flex-1 border-t border-gray-200\""
    let v6273 : string = " " + v6272 + v52 + ""
    let v6274 : string = "class=\"-mb-px flex [flex-flow:wrap] [flex-grow:1] [flex-shrink:0] gap-[3px] [overflow-wrap:anywhere]\""
    let v6275 : string = "aria-label=\"Tabs\""
    let v6276 : string = " " + v6274 + v52 + ""
    let v6277 : string = " " + v6275 + v6276 + ""
    let v6278 : string = "$0"
    let v6279 : (unit -> string) = closure348()
    let v6280 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v6279 v6278 
    let v6281 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v6282 : string = "fill=\"none\""
    let v6283 : string = "viewBox=\"0 0 24 24\""
    let v6284 : string = "stroke-width=\"1.5\""
    let v6285 : string = "stroke=\"currentColor\""
    let v6286 : string = "class=move || \" \".to_owned() + &v6280(())"
    let v6287 : string = " " + v6281 + v52 + ""
    let v6288 : string = " " + v6282 + v6287 + ""
    let v6289 : string = " " + v6283 + v6288 + ""
    let v6290 : string = " " + v6284 + v6289 + ""
    let v6291 : string = " " + v6285 + v6290 + ""
    let v6292 : string = " " + v6286 + v6291 + ""
    let v6293 : string = "stroke-linecap=\"round\""
    let v6294 : string = "stroke-linejoin=\"round\""
    let v6295 : string = "d=\"M10.343 3.94c.09-.542.56-.94 1.11-.94h1.093c.55 0 1.02.398 1.11.94l.149.894c.07.424.384.764.78.93.398.164.855.142 1.205-.108l.737-.527a1.125 1.125 0 011.45.12l.773.774c.39.389.44 1.002.12 1.45l-.527.737c-.25.35-.272.806-.107 1.204.165.397.505.71.93.78l.893.15c.543.09.94.56.94 1.109v1.094c0 .55-.397 1.02-.94 1.11l-.893.149c-.425.07-.765.383-.93.78-.165.398-.143.854.107 1.204l.527.738c.32.447.269 1.06-.12 1.45l-.774.773a1.125 1.125 0 01-1.449.12l-.738-.527c-.35-.25-.806-.272-1.203-.107-.397.165-.71.505-.781.929l-.149.894c-.09.542-.56.94-1.11.94h-1.094c-.55 0-1.019-.398-1.11-.94l-.148-.894c-.071-.424-.384-.764-.781-.93-.398-.164-.854-.142-1.204.108l-.738.527c-.447.32-1.06.269-1.45-.12l-.773-.774a1.125 1.125 0 01-.12-1.45l.527-.737c.25-.35.273-.806.108-1.204-.165-.397-.505-.71-.93-.78l-.894-.15c-.542-.09-.94-.56-.94-1.109v-1.094c0-.55.398-1.02.94-1.11l.894-.149c.424-.07.765-.383.93-.78.165-.398.143-.854-.107-1.204l-.527-.738a1.125 1.125 0 01.12-1.45l.773-.773a1.125 1.125 0 011.45-.12l.737.527c.35.25.807.272 1.204.107.397-.165.71-.505.78-.929l.15-.894z\""
    let v6296 : string = " " + v6293 + v52 + ""
    let v6297 : string = " " + v6294 + v6296 + ""
    let v6298 : string = " " + v6295 + v6297 + ""
    let v6299 : string = "vec![" + v52 + "]"
    let v6300 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6299 
    let v6301 : string = "leptos::prelude::Fragment::new($0)"
    let v6302 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6300 v6301 
    let v6303 : string = "leptos::prelude::AnyView::from($0)"
    let v6304 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6302 v6303 
    let v6305 : string = "path"
    let v6306 : string = "<" + v6305 + " " + v6298 + ">move || { v6304 }</" + v6305 + ">"
    let v6307 : string = "leptos::prelude::view! { " + v6306 + " }"
    let v6308 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6307 
    let v6309 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v6308 |> unbox
    let v6310 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6311 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6309 v6310 
    let v6312 : string = "stroke-linecap=\"round\""
    let v6313 : string = "stroke-linejoin=\"round\""
    let v6314 : string = "d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\""
    let v6315 : string = " " + v6312 + v52 + ""
    let v6316 : string = " " + v6313 + v6315 + ""
    let v6317 : string = " " + v6314 + v6316 + ""
    let v6318 : string = "vec![" + v52 + "]"
    let v6319 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6318 
    let v6320 : string = "leptos::prelude::Fragment::new($0)"
    let v6321 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6319 v6320 
    let v6322 : string = "leptos::prelude::AnyView::from($0)"
    let v6323 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6321 v6322 
    let v6324 : string = "<" + v6305 + " " + v6317 + ">move || { v6323 }</" + v6305 + ">"
    let v6325 : string = "leptos::prelude::view! { " + v6324 + " }"
    let v6326 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6325 
    let v6327 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v6326 |> unbox
    let v6328 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6329 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6327 v6328 
    let v6330 : string = "v6329"
    let v6331 : string = v6330 + v52 
    let v6332 : string = v6331 + v52 
    let v6333 : string = "v6311"
    let v6334 : string = v6333 + v6231 
    let v6335 : string = v6334 + v6332 
    let v6336 : string = "vec![" + v6335 + "]"
    let v6337 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6336 
    let v6338 : string = "leptos::prelude::Fragment::new($0)"
    let v6339 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6337 v6338 
    let v6340 : string = "leptos::prelude::AnyView::from($0)"
    let v6341 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6339 v6340 
    let v6342 : string = "svg"
    let v6343 : string = "<" + v6342 + " " + v6292 + ">move || { v6341 }</" + v6342 + ">"
    let v6344 : string = "leptos::prelude::view! { " + v6343 + " }"
    let v6345 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6344 
    let v6346 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v6345 |> unbox
    let v6347 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6348 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6346 v6347 
    let v6349 : string = "v6348"
    let v6350 : string = v6349 + v52 
    let v6351 : string = v6350 + v52 
    let v6352 : string = "vec![" + v6351 + "]"
    let v6353 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6352 
    let v6354 : string = "leptos::prelude::Fragment::new($0)"
    let v6355 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6353 v6354 
    let v6356 : (unit -> std_string_String) = closure349(v5752)
    let v6357 : string = "let v6356 = $0"
    Fable.Core.RustInterop.emitRustExpr v6356 v6357 
    let v6358 : string = "$0"
    let v6359 : (unit -> bool) = closure350(v1898)
    let v6360 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v6359 v6358 
    let v6361 : string = "$0"
    let v6362 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure351(v1898)
    let v6363 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v6362 v6361 
    let v6364 : string = "href=move || v6356()"
    let v6365 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] flex-1 gap-2 border-t-2 [white-space:nowrap] mb-[11px] pt-[8px] pr-[15px] pl-[15px] text-sm font-medium \".to_owned() + v6363(())"
    let v6366 : string = "aria-current=move || if v6360(()) { \"page\" } else { \"\" }"
    let v6367 : string = " " + v6364 + v52 + ""
    let v6368 : string = " " + v6365 + v6367 + ""
    let v6369 : string = " " + v6366 + v6368 + ""
    let v6370 : string = "leptos::prelude::AnyView::from($0)"
    let v6371 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6355 v6370 
    (* run_target_args'
    let v6376 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6377 : string = "&*$0"
    let v6378 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5857 v6377 
    let _run_target_args'_v6376 = v6378 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6379 : string = "&*$0"
    let v6380 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5857 v6379 
    let _run_target_args'_v6376 = v6380 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6381 : string = "&*$0"
    let v6382 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5857 v6381 
    let _run_target_args'_v6376 = v6382 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6384 : Ref<Str> = v5857 |> unbox<Ref<Str>>
    let _run_target_args'_v6376 = v6384 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6388 : Ref<Str> = v5857 |> unbox<Ref<Str>>
    let _run_target_args'_v6376 = v6388 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6392 : Ref<Str> = v5857 |> unbox<Ref<Str>>
    let _run_target_args'_v6376 = v6392 
    #endif
#else
    let v6396 : Ref<Str> = v5857 |> unbox<Ref<Str>>
    let _run_target_args'_v6376 = v6396 
    #endif
    let v6399 : Ref<Str> = _run_target_args'_v6376 
    (* run_target_args'
    let v6412 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6413 : string = "String::from($0)"
    let v6414 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6399 v6413 
    let _run_target_args'_v6412 = v6414 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6415 : string = "String::from($0)"
    let v6416 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6399 v6415 
    let _run_target_args'_v6412 = v6416 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6417 : string = "String::from($0)"
    let v6418 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6399 v6417 
    let _run_target_args'_v6412 = v6418 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6420 : std_string_String = v6399 |> unbox<std_string_String>
    let _run_target_args'_v6412 = v6420 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6424 : std_string_String = v6399 |> unbox<std_string_String>
    let _run_target_args'_v6412 = v6424 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6428 : std_string_String = v6399 |> unbox<std_string_String>
    let _run_target_args'_v6412 = v6428 
    #endif
#else
    let v6432 : std_string_String = v6399 |> unbox<std_string_String>
    let _run_target_args'_v6412 = v6432 
    #endif
    let v6435 : std_string_String = _run_target_args'_v6412 
    let v6444 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v6445 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6435 v6444 
    let v6446 : string = "v6445"
    let v6447 : string = v6446 + v52 
    let v6448 : string = v6447 + v52 
    let v6449 : string = "v6371"
    let v6450 : string = v6449 + v6231 
    let v6451 : string = v6450 + v6448 
    let v6452 : string = "vec![" + v6451 + "]"
    let v6453 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6452 
    let v6454 : string = "leptos::prelude::Fragment::new($0)"
    let v6455 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6453 v6454 
    let v6456 : string = "leptos::prelude::AnyView::from($0)"
    let v6457 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6455 v6456 
    let v6458 : string = "a"
    let v6459 : string = "<" + v6458 + " " + v6369 + ">move || { v6457 }</" + v6458 + ">"
    let v6460 : string = "leptos::prelude::view! { " + v6459 + " }"
    let v6461 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6460 
    let v6462 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_A>> = v6461 |> unbox
    let v6463 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6464 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6462 v6463 
    let v6465 : string = "$0"
    let v6466 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v6279 v6465 
    let v6467 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v6468 : string = "fill=\"none\""
    let v6469 : string = "height=\"100%\""
    let v6470 : string = "viewBox=\"0 0 24 24\""
    let v6471 : string = "stroke-width=\"1.5\""
    let v6472 : string = "stroke=\"currentColor\""
    let v6473 : string = "class=move || \"text-gray-700 \".to_owned() + &v6466(())"
    let v6474 : string = " " + v6467 + v52 + ""
    let v6475 : string = " " + v6468 + v6474 + ""
    let v6476 : string = " " + v6469 + v6475 + ""
    let v6477 : string = " " + v6470 + v6476 + ""
    let v6478 : string = " " + v6471 + v6477 + ""
    let v6479 : string = " " + v6472 + v6478 + ""
    let v6480 : string = " " + v6473 + v6479 + ""
    let v6481 : string = "stroke-linecap=\"round\""
    let v6482 : string = "stroke-linejoin=\"round\""
    let v6483 : string = "d=\"M4 12h16m-7-7l7 7-7 7m-2-14l-7 7 7 7\""
    let v6484 : string = " " + v6481 + v52 + ""
    let v6485 : string = " " + v6482 + v6484 + ""
    let v6486 : string = " " + v6483 + v6485 + ""
    let v6487 : string = "vec![" + v52 + "]"
    let v6488 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6487 
    let v6489 : string = "leptos::prelude::Fragment::new($0)"
    let v6490 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6488 v6489 
    let v6491 : string = "leptos::prelude::AnyView::from($0)"
    let v6492 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6490 v6491 
    let v6493 : string = "<" + v6305 + " " + v6486 + ">move || { v6492 }</" + v6305 + ">"
    let v6494 : string = "leptos::prelude::view! { " + v6493 + " }"
    let v6495 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6494 
    let v6496 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v6495 |> unbox
    let v6497 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6498 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6496 v6497 
    let v6499 : string = "v6498"
    let v6500 : string = v6499 + v52 
    let v6501 : string = v6500 + v52 
    let v6502 : string = "vec![" + v6501 + "]"
    let v6503 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6502 
    let v6504 : string = "leptos::prelude::Fragment::new($0)"
    let v6505 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6503 v6504 
    let v6506 : string = "leptos::prelude::AnyView::from($0)"
    let v6507 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6505 v6506 
    let v6508 : string = "<" + v6342 + " " + v6480 + ">move || { v6507 }</" + v6342 + ">"
    let v6509 : string = "leptos::prelude::view! { " + v6508 + " }"
    let v6510 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6509 
    let v6511 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v6510 |> unbox
    let v6512 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6513 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6511 v6512 
    let v6514 : string = "v6513"
    let v6515 : string = v6514 + v52 
    let v6516 : string = v6515 + v52 
    let v6517 : string = "vec![" + v6516 + "]"
    let v6518 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6517 
    let v6519 : string = "leptos::prelude::Fragment::new($0)"
    let v6520 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6518 v6519 
    let v6521 : (unit -> std_string_String) = closure352(v5752)
    let v6522 : string = "let v6521 = $0"
    Fable.Core.RustInterop.emitRustExpr v6521 v6522 
    let v6523 : string = "$0"
    let v6524 : (unit -> bool) = closure353(v1898)
    let v6525 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v6524 v6523 
    let v6526 : string = "$0"
    let v6527 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure354(v1898)
    let v6528 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v6527 v6526 
    let v6529 : string = "href=move || v6521()"
    let v6530 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] flex-1 gap-2 border-t-2 [white-space:nowrap] mb-[11px] pt-[8px] pr-[15px] pl-[15px] text-sm font-medium \".to_owned() + v6528(())"
    let v6531 : string = "aria-current=move || if v6525(()) { \"page\" } else { \"\" }"
    let v6532 : string = " " + v6529 + v52 + ""
    let v6533 : string = " " + v6530 + v6532 + ""
    let v6534 : string = " " + v6531 + v6533 + ""
    let v6535 : string = "leptos::prelude::AnyView::from($0)"
    let v6536 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6520 v6535 
    (* run_target_args'
    let v6541 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6542 : string = "&*$0"
    let v6543 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5951 v6542 
    let _run_target_args'_v6541 = v6543 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6544 : string = "&*$0"
    let v6545 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5951 v6544 
    let _run_target_args'_v6541 = v6545 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6546 : string = "&*$0"
    let v6547 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5951 v6546 
    let _run_target_args'_v6541 = v6547 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6549 : Ref<Str> = v5951 |> unbox<Ref<Str>>
    let _run_target_args'_v6541 = v6549 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6553 : Ref<Str> = v5951 |> unbox<Ref<Str>>
    let _run_target_args'_v6541 = v6553 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6557 : Ref<Str> = v5951 |> unbox<Ref<Str>>
    let _run_target_args'_v6541 = v6557 
    #endif
#else
    let v6561 : Ref<Str> = v5951 |> unbox<Ref<Str>>
    let _run_target_args'_v6541 = v6561 
    #endif
    let v6564 : Ref<Str> = _run_target_args'_v6541 
    (* run_target_args'
    let v6577 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6578 : string = "String::from($0)"
    let v6579 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6564 v6578 
    let _run_target_args'_v6577 = v6579 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6580 : string = "String::from($0)"
    let v6581 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6564 v6580 
    let _run_target_args'_v6577 = v6581 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6582 : string = "String::from($0)"
    let v6583 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6564 v6582 
    let _run_target_args'_v6577 = v6583 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6585 : std_string_String = v6564 |> unbox<std_string_String>
    let _run_target_args'_v6577 = v6585 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6589 : std_string_String = v6564 |> unbox<std_string_String>
    let _run_target_args'_v6577 = v6589 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6593 : std_string_String = v6564 |> unbox<std_string_String>
    let _run_target_args'_v6577 = v6593 
    #endif
#else
    let v6597 : std_string_String = v6564 |> unbox<std_string_String>
    let _run_target_args'_v6577 = v6597 
    #endif
    let v6600 : std_string_String = _run_target_args'_v6577 
    let v6609 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v6610 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6600 v6609 
    let v6611 : string = "v6610"
    let v6612 : string = v6611 + v52 
    let v6613 : string = v6612 + v52 
    let v6614 : string = "v6536"
    let v6615 : string = v6614 + v6231 
    let v6616 : string = v6615 + v6613 
    let v6617 : string = "vec![" + v6616 + "]"
    let v6618 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6617 
    let v6619 : string = "leptos::prelude::Fragment::new($0)"
    let v6620 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6618 v6619 
    let v6621 : string = "leptos::prelude::AnyView::from($0)"
    let v6622 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6620 v6621 
    let v6623 : string = "<" + v6458 + " " + v6534 + ">move || { v6622 }</" + v6458 + ">"
    let v6624 : string = "leptos::prelude::view! { " + v6623 + " }"
    let v6625 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6624 
    let v6626 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_A>> = v6625 |> unbox
    let v6627 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6628 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6626 v6627 
    let v6629 : string = "$0"
    let v6630 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v6279 v6629 
    let v6631 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v6632 : string = "fill=\"none\""
    let v6633 : string = "height=\"100%\""
    let v6634 : string = "viewBox=\"0 0 24 24\""
    let v6635 : string = "stroke-width=\"1.5\""
    let v6636 : string = "stroke=\"currentColor\""
    let v6637 : string = "class=move || \"text-gray-700 \".to_owned() + &v6630(())"
    let v6638 : string = " " + v6631 + v52 + ""
    let v6639 : string = " " + v6632 + v6638 + ""
    let v6640 : string = " " + v6633 + v6639 + ""
    let v6641 : string = " " + v6634 + v6640 + ""
    let v6642 : string = " " + v6635 + v6641 + ""
    let v6643 : string = " " + v6636 + v6642 + ""
    let v6644 : string = " " + v6637 + v6643 + ""
    let v6645 : string = "stroke-linecap=\"round\""
    let v6646 : string = "stroke-linejoin=\"round\""
    let v6647 : string = "d=\"M4.75 6.75h14.5M4.75 12h14.5M4.75 17.25h14.5\""
    let v6648 : string = " " + v6645 + v52 + ""
    let v6649 : string = " " + v6646 + v6648 + ""
    let v6650 : string = " " + v6647 + v6649 + ""
    let v6651 : string = "vec![" + v52 + "]"
    let v6652 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6651 
    let v6653 : string = "leptos::prelude::Fragment::new($0)"
    let v6654 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6652 v6653 
    let v6655 : string = "leptos::prelude::AnyView::from($0)"
    let v6656 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6654 v6655 
    let v6657 : string = "<" + v6305 + " " + v6650 + ">move || { v6656 }</" + v6305 + ">"
    let v6658 : string = "leptos::prelude::view! { " + v6657 + " }"
    let v6659 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6658 
    let v6660 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v6659 |> unbox
    let v6661 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6662 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6660 v6661 
    let v6663 : string = "cx=\"3\""
    let v6664 : string = "cy=\"6.75\""
    let v6665 : string = "r=\"1\""
    let v6666 : string = "fill=\"currentColor\""
    let v6667 : string = " " + v6663 + v52 + ""
    let v6668 : string = " " + v6664 + v6667 + ""
    let v6669 : string = " " + v6665 + v6668 + ""
    let v6670 : string = " " + v6666 + v6669 + ""
    let v6671 : string = "vec![" + v52 + "]"
    let v6672 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6671 
    let v6673 : string = "leptos::prelude::Fragment::new($0)"
    let v6674 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6672 v6673 
    let v6675 : string = "leptos::prelude::AnyView::from($0)"
    let v6676 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6674 v6675 
    let v6677 : string = "circle"
    let v6678 : string = "<" + v6677 + " " + v6670 + ">move || { v6676 }</" + v6677 + ">"
    let v6679 : string = "leptos::prelude::view! { " + v6678 + " }"
    let v6680 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6679 
    let v6681 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6680 |> unbox
    let v6682 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6683 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6681 v6682 
    let v6684 : string = "cx=\"3\""
    let v6685 : string = "cy=\"12\""
    let v6686 : string = "r=\"1\""
    let v6687 : string = "fill=\"currentColor\""
    let v6688 : string = " " + v6684 + v52 + ""
    let v6689 : string = " " + v6685 + v6688 + ""
    let v6690 : string = " " + v6686 + v6689 + ""
    let v6691 : string = " " + v6687 + v6690 + ""
    let v6692 : string = "vec![" + v52 + "]"
    let v6693 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6692 
    let v6694 : string = "leptos::prelude::Fragment::new($0)"
    let v6695 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6693 v6694 
    let v6696 : string = "leptos::prelude::AnyView::from($0)"
    let v6697 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6695 v6696 
    let v6698 : string = "<" + v6677 + " " + v6691 + ">move || { v6697 }</" + v6677 + ">"
    let v6699 : string = "leptos::prelude::view! { " + v6698 + " }"
    let v6700 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6699 
    let v6701 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6700 |> unbox
    let v6702 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6703 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6701 v6702 
    let v6704 : string = "cx=\"3\""
    let v6705 : string = "cy=\"17.25\""
    let v6706 : string = "r=\"1\""
    let v6707 : string = "fill=\"currentColor\""
    let v6708 : string = " " + v6704 + v52 + ""
    let v6709 : string = " " + v6705 + v6708 + ""
    let v6710 : string = " " + v6706 + v6709 + ""
    let v6711 : string = " " + v6707 + v6710 + ""
    let v6712 : string = "vec![" + v52 + "]"
    let v6713 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6712 
    let v6714 : string = "leptos::prelude::Fragment::new($0)"
    let v6715 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6713 v6714 
    let v6716 : string = "leptos::prelude::AnyView::from($0)"
    let v6717 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6715 v6716 
    let v6718 : string = "<" + v6677 + " " + v6711 + ">move || { v6717 }</" + v6677 + ">"
    let v6719 : string = "leptos::prelude::view! { " + v6718 + " }"
    let v6720 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6719 
    let v6721 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6720 |> unbox
    let v6722 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6723 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6721 v6722 
    let v6724 : string = "v6723"
    let v6725 : string = v6724 + v52 
    let v6726 : string = v6725 + v52 
    let v6727 : string = "v6703"
    let v6728 : string = v6727 + v6231 
    let v6729 : string = v6728 + v6726 
    let v6730 : string = "v6683"
    let v6731 : string = v6730 + v6231 
    let v6732 : string = v6731 + v6729 
    let v6733 : string = "v6662"
    let v6734 : string = v6733 + v6231 
    let v6735 : string = v6734 + v6732 
    let v6736 : string = "vec![" + v6735 + "]"
    let v6737 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6736 
    let v6738 : string = "leptos::prelude::Fragment::new($0)"
    let v6739 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6737 v6738 
    let v6740 : string = "leptos::prelude::AnyView::from($0)"
    let v6741 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6739 v6740 
    let v6742 : string = "<" + v6342 + " " + v6644 + ">move || { v6741 }</" + v6342 + ">"
    let v6743 : string = "leptos::prelude::view! { " + v6742 + " }"
    let v6744 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6743 
    let v6745 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v6744 |> unbox
    let v6746 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6747 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6745 v6746 
    let v6748 : string = "v6747"
    let v6749 : string = v6748 + v52 
    let v6750 : string = v6749 + v52 
    let v6751 : string = "vec![" + v6750 + "]"
    let v6752 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6751 
    let v6753 : string = "leptos::prelude::Fragment::new($0)"
    let v6754 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6752 v6753 
    let v6755 : (unit -> std_string_String) = closure355(v5752)
    let v6756 : string = "let v6755 = $0"
    Fable.Core.RustInterop.emitRustExpr v6755 v6756 
    let v6757 : string = "$0"
    let v6758 : (unit -> bool) = closure356(v1898)
    let v6759 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v6758 v6757 
    let v6760 : string = "$0"
    let v6761 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure357(v1898)
    let v6762 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v6761 v6760 
    let v6763 : string = "href=move || v6755()"
    let v6764 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] flex-1 gap-2 border-t-2 [white-space:nowrap] mb-[11px] pt-[8px] pr-[15px] pl-[15px] text-sm font-medium \".to_owned() + v6762(())"
    let v6765 : string = "aria-current=move || if v6759(()) { \"page\" } else { \"\" }"
    let v6766 : string = " " + v6763 + v52 + ""
    let v6767 : string = " " + v6764 + v6766 + ""
    let v6768 : string = " " + v6765 + v6767 + ""
    let v6769 : string = "leptos::prelude::AnyView::from($0)"
    let v6770 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6754 v6769 
    (* run_target_args'
    let v6775 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6776 : string = "&*$0"
    let v6777 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6044 v6776 
    let _run_target_args'_v6775 = v6777 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6778 : string = "&*$0"
    let v6779 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6044 v6778 
    let _run_target_args'_v6775 = v6779 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6780 : string = "&*$0"
    let v6781 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6044 v6780 
    let _run_target_args'_v6775 = v6781 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6783 : Ref<Str> = v6044 |> unbox<Ref<Str>>
    let _run_target_args'_v6775 = v6783 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6787 : Ref<Str> = v6044 |> unbox<Ref<Str>>
    let _run_target_args'_v6775 = v6787 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6791 : Ref<Str> = v6044 |> unbox<Ref<Str>>
    let _run_target_args'_v6775 = v6791 
    #endif
#else
    let v6795 : Ref<Str> = v6044 |> unbox<Ref<Str>>
    let _run_target_args'_v6775 = v6795 
    #endif
    let v6798 : Ref<Str> = _run_target_args'_v6775 
    (* run_target_args'
    let v6811 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6812 : string = "String::from($0)"
    let v6813 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6798 v6812 
    let _run_target_args'_v6811 = v6813 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6814 : string = "String::from($0)"
    let v6815 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6798 v6814 
    let _run_target_args'_v6811 = v6815 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6816 : string = "String::from($0)"
    let v6817 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6798 v6816 
    let _run_target_args'_v6811 = v6817 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6819 : std_string_String = v6798 |> unbox<std_string_String>
    let _run_target_args'_v6811 = v6819 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6823 : std_string_String = v6798 |> unbox<std_string_String>
    let _run_target_args'_v6811 = v6823 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6827 : std_string_String = v6798 |> unbox<std_string_String>
    let _run_target_args'_v6811 = v6827 
    #endif
#else
    let v6831 : std_string_String = v6798 |> unbox<std_string_String>
    let _run_target_args'_v6811 = v6831 
    #endif
    let v6834 : std_string_String = _run_target_args'_v6811 
    let v6843 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v6844 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6834 v6843 
    let v6845 : string = "v6844"
    let v6846 : string = v6845 + v52 
    let v6847 : string = v6846 + v52 
    let v6848 : string = "v6770"
    let v6849 : string = v6848 + v6231 
    let v6850 : string = v6849 + v6847 
    let v6851 : string = "vec![" + v6850 + "]"
    let v6852 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6851 
    let v6853 : string = "leptos::prelude::Fragment::new($0)"
    let v6854 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6852 v6853 
    let v6855 : string = "leptos::prelude::AnyView::from($0)"
    let v6856 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6854 v6855 
    let v6857 : string = "<" + v6458 + " " + v6768 + ">move || { v6856 }</" + v6458 + ">"
    let v6858 : string = "leptos::prelude::view! { " + v6857 + " }"
    let v6859 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6858 
    let v6860 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_A>> = v6859 |> unbox
    let v6861 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6862 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6860 v6861 
    let v6863 : string = "$0"
    let v6864 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v6279 v6863 
    let v6865 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v6866 : string = "fill=\"none\""
    let v6867 : string = "viewBox=\"0 0 24 24\""
    let v6868 : string = "stroke-width=\"1.5\""
    let v6869 : string = "stroke=\"currentColor\""
    let v6870 : string = "class=move || \" \".to_owned() + &v6864(())"
    let v6871 : string = " " + v6865 + v52 + ""
    let v6872 : string = " " + v6866 + v6871 + ""
    let v6873 : string = " " + v6867 + v6872 + ""
    let v6874 : string = " " + v6868 + v6873 + ""
    let v6875 : string = " " + v6869 + v6874 + ""
    let v6876 : string = " " + v6870 + v6875 + ""
    let v6877 : string = "x=\"3\""
    let v6878 : string = "y=\"3\""
    let v6879 : string = "width=\"18\""
    let v6880 : string = "height=\"18\""
    let v6881 : string = "rx=\"2\""
    let v6882 : string = "stroke-linecap=\"round\""
    let v6883 : string = "stroke-linejoin=\"round\""
    let v6884 : string = " " + v6877 + v52 + ""
    let v6885 : string = " " + v6878 + v6884 + ""
    let v6886 : string = " " + v6879 + v6885 + ""
    let v6887 : string = " " + v6880 + v6886 + ""
    let v6888 : string = " " + v6881 + v6887 + ""
    let v6889 : string = " " + v6882 + v6888 + ""
    let v6890 : string = " " + v6883 + v6889 + ""
    let v6891 : string = "vec![" + v52 + "]"
    let v6892 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6891 
    let v6893 : string = "leptos::prelude::Fragment::new($0)"
    let v6894 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6892 v6893 
    let v6895 : string = "leptos::prelude::AnyView::from($0)"
    let v6896 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6894 v6895 
    let v6897 : string = "rect"
    let v6898 : string = "<" + v6897 + " " + v6890 + ">move || { v6896 }</" + v6897 + ">"
    let v6899 : string = "leptos::prelude::view! { " + v6898 + " }"
    let v6900 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6899 
    let v6901 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v6900 |> unbox
    let v6902 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6903 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6901 v6902 
    let v6904 : string = "cx=\"7.5\""
    let v6905 : string = "cy=\"7.5\""
    let v6906 : string = "r=\"1.5\""
    let v6907 : string = "fill=\"currentColor\""
    let v6908 : string = " " + v6904 + v52 + ""
    let v6909 : string = " " + v6905 + v6908 + ""
    let v6910 : string = " " + v6906 + v6909 + ""
    let v6911 : string = " " + v6907 + v6910 + ""
    let v6912 : string = "vec![" + v52 + "]"
    let v6913 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6912 
    let v6914 : string = "leptos::prelude::Fragment::new($0)"
    let v6915 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6913 v6914 
    let v6916 : string = "leptos::prelude::AnyView::from($0)"
    let v6917 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6915 v6916 
    let v6918 : string = "<" + v6677 + " " + v6911 + ">move || { v6917 }</" + v6677 + ">"
    let v6919 : string = "leptos::prelude::view! { " + v6918 + " }"
    let v6920 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6919 
    let v6921 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6920 |> unbox
    let v6922 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6923 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6921 v6922 
    let v6924 : string = "cx=\"16.5\""
    let v6925 : string = "cy=\"7.5\""
    let v6926 : string = "r=\"1.5\""
    let v6927 : string = "fill=\"currentColor\""
    let v6928 : string = " " + v6924 + v52 + ""
    let v6929 : string = " " + v6925 + v6928 + ""
    let v6930 : string = " " + v6926 + v6929 + ""
    let v6931 : string = " " + v6927 + v6930 + ""
    let v6932 : string = "vec![" + v52 + "]"
    let v6933 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6932 
    let v6934 : string = "leptos::prelude::Fragment::new($0)"
    let v6935 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6933 v6934 
    let v6936 : string = "leptos::prelude::AnyView::from($0)"
    let v6937 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6935 v6936 
    let v6938 : string = "<" + v6677 + " " + v6931 + ">move || { v6937 }</" + v6677 + ">"
    let v6939 : string = "leptos::prelude::view! { " + v6938 + " }"
    let v6940 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6939 
    let v6941 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6940 |> unbox
    let v6942 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6943 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6941 v6942 
    let v6944 : string = "cx=\"12\""
    let v6945 : string = "cy=\"12\""
    let v6946 : string = "r=\"1.5\""
    let v6947 : string = "fill=\"currentColor\""
    let v6948 : string = " " + v6944 + v52 + ""
    let v6949 : string = " " + v6945 + v6948 + ""
    let v6950 : string = " " + v6946 + v6949 + ""
    let v6951 : string = " " + v6947 + v6950 + ""
    let v6952 : string = "vec![" + v52 + "]"
    let v6953 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6952 
    let v6954 : string = "leptos::prelude::Fragment::new($0)"
    let v6955 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6953 v6954 
    let v6956 : string = "leptos::prelude::AnyView::from($0)"
    let v6957 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6955 v6956 
    let v6958 : string = "<" + v6677 + " " + v6951 + ">move || { v6957 }</" + v6677 + ">"
    let v6959 : string = "leptos::prelude::view! { " + v6958 + " }"
    let v6960 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6959 
    let v6961 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6960 |> unbox
    let v6962 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6963 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6961 v6962 
    let v6964 : string = "cx=\"7.5\""
    let v6965 : string = "cy=\"16.5\""
    let v6966 : string = "r=\"1.5\""
    let v6967 : string = "fill=\"currentColor\""
    let v6968 : string = " " + v6964 + v52 + ""
    let v6969 : string = " " + v6965 + v6968 + ""
    let v6970 : string = " " + v6966 + v6969 + ""
    let v6971 : string = " " + v6967 + v6970 + ""
    let v6972 : string = "vec![" + v52 + "]"
    let v6973 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6972 
    let v6974 : string = "leptos::prelude::Fragment::new($0)"
    let v6975 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6973 v6974 
    let v6976 : string = "leptos::prelude::AnyView::from($0)"
    let v6977 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6975 v6976 
    let v6978 : string = "<" + v6677 + " " + v6971 + ">move || { v6977 }</" + v6677 + ">"
    let v6979 : string = "leptos::prelude::view! { " + v6978 + " }"
    let v6980 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6979 
    let v6981 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6980 |> unbox
    let v6982 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6983 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6981 v6982 
    let v6984 : string = "cx=\"16.5\""
    let v6985 : string = "cy=\"16.5\""
    let v6986 : string = "r=\"1.5\""
    let v6987 : string = "fill=\"currentColor\""
    let v6988 : string = " " + v6984 + v52 + ""
    let v6989 : string = " " + v6985 + v6988 + ""
    let v6990 : string = " " + v6986 + v6989 + ""
    let v6991 : string = " " + v6987 + v6990 + ""
    let v6992 : string = "vec![" + v52 + "]"
    let v6993 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6992 
    let v6994 : string = "leptos::prelude::Fragment::new($0)"
    let v6995 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6993 v6994 
    let v6996 : string = "leptos::prelude::AnyView::from($0)"
    let v6997 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6995 v6996 
    let v6998 : string = "<" + v6677 + " " + v6991 + ">move || { v6997 }</" + v6677 + ">"
    let v6999 : string = "leptos::prelude::view! { " + v6998 + " }"
    let v7000 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6999 
    let v7001 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v7000 |> unbox
    let v7002 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v7003 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7001 v7002 
    let v7004 : string = "v7003"
    let v7005 : string = v7004 + v52 
    let v7006 : string = v7005 + v52 
    let v7007 : string = "v6983"
    let v7008 : string = v7007 + v6231 
    let v7009 : string = v7008 + v7006 
    let v7010 : string = "v6963"
    let v7011 : string = v7010 + v6231 
    let v7012 : string = v7011 + v7009 
    let v7013 : string = "v6943"
    let v7014 : string = v7013 + v6231 
    let v7015 : string = v7014 + v7012 
    let v7016 : string = "v6923"
    let v7017 : string = v7016 + v6231 
    let v7018 : string = v7017 + v7015 
    let v7019 : string = "v6903"
    let v7020 : string = v7019 + v6231 
    let v7021 : string = v7020 + v7018 
    let v7022 : string = "vec![" + v7021 + "]"
    let v7023 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v7022 
    let v7024 : string = "leptos::prelude::Fragment::new($0)"
    let v7025 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v7023 v7024 
    let v7026 : string = "leptos::prelude::AnyView::from($0)"
    let v7027 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7025 v7026 
    let v7028 : string = "<" + v6342 + " " + v6876 + ">move || { v7027 }</" + v6342 + ">"
    let v7029 : string = "leptos::prelude::view! { " + v7028 + " }"
    let v7030 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v7029 
    let v7031 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v7030 |> unbox
    let v7032 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v7033 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7031 v7032 
    let v7034 : string = "v7033"
    let v7035 : string = v7034 + v52 
    let v7036 : string = v7035 + v52 
    let v7037 : string = "vec![" + v7036 + "]"
    let v7038 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v7037 
    let v7039 : string = "leptos::prelude::Fragment::new($0)"
    let v7040 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v7038 v7039 
    let v7041 : (unit -> std_string_String) = closure358(v5752)
    let v7042 : string = "let v7041 = $0"
    Fable.Core.RustInterop.emitRustExpr v7041 v7042 
    let v7043 : string = "$0"
    let v7044 : (unit -> bool) = closure359(v1898)
    let v7045 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v7044 v7043 
    let v7046 : string = "$0"
    let v7047 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure360(v1898)
    let v7048 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v7047 v7046 
    let v7049 : string = "href=move || v7041()"
    let v7050 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] flex-1 gap-2 border-t-2 [white-space:nowrap] mb-[11px] pt-[8px] pr-[15px] pl-[15px] text-sm font-medium \".to_owned() + v7048(())"
    let v7051 : string = "aria-current=move || if v7045(()) { \"page\" } else { \"\" }"
    let v7052 : string = " " + v7049 + v52 + ""
    let v7053 : string = " " + v7050 + v7052 + ""
    let v7054 : string = " " + v7051 + v7053 + ""
    let v7055 : string = "leptos::prelude::AnyView::from($0)"
    let v7056 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7040 v7055 
    (* run_target_args'
    let v7061 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v7062 : string = "&*$0"
    let v7063 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6137 v7062 
    let _run_target_args'_v7061 = v7063 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v7064 : string = "&*$0"
    let v7065 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6137 v7064 
    let _run_target_args'_v7061 = v7065 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v7066 : string = "&*$0"
    let v7067 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6137 v7066 
    let _run_target_args'_v7061 = v7067 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v7069 : Ref<Str> = v6137 |> unbox<Ref<Str>>
    let _run_target_args'_v7061 = v7069 
    #endif
#if FABLE_COMPILER_PYTHON
    let v7073 : Ref<Str> = v6137 |> unbox<Ref<Str>>
    let _run_target_args'_v7061 = v7073 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v7077 : Ref<Str> = v6137 |> unbox<Ref<Str>>
    let _run_target_args'_v7061 = v7077 
    #endif
#else
    let v7081 : Ref<Str> = v6137 |> unbox<Ref<Str>>
    let _run_target_args'_v7061 = v7081 
    #endif
    let v7084 : Ref<Str> = _run_target_args'_v7061 
    (* run_target_args'
    let v7097 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v7098 : string = "String::from($0)"
    let v7099 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7084 v7098 
    let _run_target_args'_v7097 = v7099 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v7100 : string = "String::from($0)"
    let v7101 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7084 v7100 
    let _run_target_args'_v7097 = v7101 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v7102 : string = "String::from($0)"
    let v7103 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7084 v7102 
    let _run_target_args'_v7097 = v7103 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v7105 : std_string_String = v7084 |> unbox<std_string_String>
    let _run_target_args'_v7097 = v7105 
    #endif
#if FABLE_COMPILER_PYTHON
    let v7109 : std_string_String = v7084 |> unbox<std_string_String>
    let _run_target_args'_v7097 = v7109 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v7113 : std_string_String = v7084 |> unbox<std_string_String>
    let _run_target_args'_v7097 = v7113 
    #endif
#else
    let v7117 : std_string_String = v7084 |> unbox<std_string_String>
    let _run_target_args'_v7097 = v7117 
    #endif
    let v7120 : std_string_String = _run_target_args'_v7097 
    let v7129 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v7130 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7120 v7129 
    let v7131 : string = "v7130"
    let v7132 : string = v7131 + v52 
    let v7133 : string = v7132 + v52 
    let v7134 : string = "v7056"
    let v7135 : string = v7134 + v6231 
    let v7136 : string = v7135 + v7133 
    let v7137 : string = "vec![" + v7136 + "]"
    let v7138 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v7137 
    let v7139 : string = "leptos::prelude::Fragment::new($0)"
    let v7140 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v7138 v7139 
    let v7141 : string = "leptos::prelude::AnyView::from($0)"
    let v7142 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7140 v7141 
    let v7143 : string = "<" + v6458 + " " + v7054 + ">move || { v7142 }</" + v6458 + ">"
    let v7144 : string = "leptos::prelude::view! { " + v7143 + " }"
    let v7145 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v7144 
    let v7146 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_A>> = v7145 |> unbox
    let v7147 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v7148 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7146 v7147 
    let v7149 : string = "v6464"
    let v7150 : string = v7149 + v52 
    let v7151 : string = v7150 + v52 
    let v7152 : string = "v6628"
    let v7153 : string = v7152 + v6231 
    let v7154 : string = v7153 + v7151 
    let v7155 : string = "v6862"
    let v7156 : string = v7155 + v6231 
    let v7157 : string = v7156 + v7154 
    let v7158 : string = "v7148"
    let v7159 : string = v7158 + v6231 
    let v7160 : string = v7159 + v7157 
    let v7161 : string = "vec![" + v7160 + "]"
    let v7162 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v7161 
    let v7163 : string = "leptos::prelude::Fragment::new($0)"
    let v7164 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v7162 v7163 
    let v7165 : string = "leptos::prelude::AnyView::from($0)"
    let v7166 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7164 v7165 
    let v7167 : string = "nav"
    let v7168 : string = "<" + v7167 + " " + v6277 + ">move || { v7166 }</" + v7167 + ">"
    let v7169 : string = "leptos::prelude::view! { " + v7168 + " }"
    let v7170 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v7169 
    let v7171 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Nav>> = v7170 |> unbox
    let v7172 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v7173 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7171 v7172 
    let v7174 : string = "v7173"
    let v7175 : string = v7174 + v52 
    let v7176 : string = v7175 + v52 
    let v7177 : string = "vec![" + v7176 + "]"
    let v7178 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v7177 
    let v7179 : string = "leptos::prelude::Fragment::new($0)"
    let v7180 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v7178 v7179 
    let v7181 : string = "leptos::prelude::AnyView::from($0)"
    let v7182 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7180 v7181 
    let v7183 : string = "<" + v6265 + " " + v6273 + ">move || { v7182 }</" + v6265 + ">"
    let v7184 : string = "leptos::prelude::view! { " + v7183 + " }"
    let v7185 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v7184 
    let v7186 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v7185 |> unbox
    let v7187 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v7188 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7186 v7187 
    let v7189 : string = "v7188"
    let v7190 : string = v7189 + v52 
    let v7191 : string = v7190 + v52 
    let v7192 : string = "vec![" + v7191 + "]"
    let v7193 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v7192 
    let v7194 : string = "leptos::prelude::Fragment::new($0)"
    let v7195 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v7193 v7194 
    let v7196 : string = "leptos::prelude::AnyView::from($0)"
    let v7197 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7195 v7196 
    let v7198 : string = "<" + v6265 + " " + v6271 + ">move || { v7197 }</" + v6265 + ">"
    let v7199 : string = "leptos::prelude::view! { " + v7198 + " }"
    let v7200 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v7199 
    let v7201 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v7200 |> unbox
    let v7202 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v7203 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7201 v7202 
    let v7204 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v7205 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6269 v7204 
    let v7206 : string = "v7203"
    let v7207 : string = v7206 + v52 
    let v7208 : string = v7207 + v52 
    let v7209 : string = "v7205"
    let v7210 : string = v7209 + v6231 
    let v7211 : string = v7210 + v7208 
    let v7212 : string = "vec![" + v7211 + "]"
    let v7213 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v7212 
    let v7214 : string = "leptos::prelude::Fragment::new($0)"
    let v7215 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v7213 v7214 
    let v7216 : string = "leptos::prelude::AnyView::from($0)"
    let v7217 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7215 v7216 
    let v7218 : string = "<" + v6265 + " " + v5744 + ">move || { v7217 }</" + v6265 + ">"
    let v7219 : string = "leptos::prelude::view! { " + v7218 + " }"
    let v7220 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v7219 
    let v7221 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v7220 |> unbox
    let v7222 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v7223 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7221 v7222 
    let v7224 : string = "v7223"
    let v7225 : string = v7224 + v52 
    let v7226 : string = v7225 + v52 
    let v7227 : string = "v5742"
    let v7228 : string = v7227 + v6231 
    let v7229 : string = v7228 + v7226 
    let v7230 : string = "vec![" + v7229 + "]"
    let v7231 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v7230 
    let v7232 : string = "leptos::prelude::Fragment::new($0)"
    let v7233 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v7231 v7232 
    let v7234 : string = "leptos::prelude::AnyView::from($0)"
    let v7235 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7233 v7234 
    let v7236 : string = "<" + v6265 + " " + v2275 + ">move || { v7235 }</" + v6265 + ">"
    let v7237 : string = "leptos::prelude::view! { " + v7236 + " }"
    let v7238 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v7237 
    let v7239 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v7238 |> unbox
    let v7240 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v7241 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7239 v7240 
    let v7242 : string = "v7241"
    let v7243 : string = v7242 + v52 
    let v7244 : string = v7243 + v52 
    let v7245 : string = "vec![" + v7244 + "]"
    let v7246 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v7245 
    let v7247 : string = "leptos::prelude::Fragment::new($0)"
    let v7248 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v7246 v7247 
    let v7249 : string = "leptos::prelude::AnyView::from($0)"
    let v7250 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7248 v7249 
    let v7251 : string = "<" + v6265 + " " + v2273 + ">move || { v7250 }</" + v6265 + ">"
    let v7252 : string = "leptos::prelude::view! { " + v7251 + " }"
    let v7253 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v7252 
    let v7254 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v7253 |> unbox
    let v7255 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v7256 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7254 v7255 
    let v7257 : string = "v7256"
    let v7258 : string = v7257 + v52 
    let v7259 : string = v7258 + v52 
    let v7260 : string = "vec![" + v7259 + "]"
    let v7261 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v7260 
    let v7262 : string = "leptos::prelude::Fragment::new($0)"
    let v7263 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v7261 v7262 
    let v7264 : string = "leptos::prelude::AnyView::from($0)"
    let v7265 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v7263 v7264 
    let v7266 : string = "<" + v6265 + " " + v1879 + ">move || { v7265 }</" + v6265 + ">"
    let v7267 : string = "leptos::prelude::view! { " + v7266 + " }"
    let v7268 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v7267 
    let v7269 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v7268 |> unbox
    v7269
and method5 () : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>) =
    closure5()
and method289 (v0 : std_string_String) : std_string_String =
    v0
and closure361 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) () : leptos_prelude_AnyView_ =
    let v1 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v0 1
    let v2 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v3 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "v3"
    let v5 : string = ""
    let v6 : string = v4 + v5 
    let v7 : string = v6 + v5 
    let v8 : string = "vec![" + v7 + "]"
    let v9 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : string = "leptos::prelude::Fragment::new($0)"
    let v11 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "leptos::prelude::AnyView::from($0)"
    let v13 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v11 v12 
    v13
and method290 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) : (unit -> leptos_prelude_AnyView_) =
    closure361(v0)
and closure362 () () : leptos_dom_Fragment =
    let v0 : string = ""
    let v1 : string = "vec![" + v0 + "]"
    let v2 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1 
    let v3 : string = "leptos::prelude::Fragment::new($0)"
    let v4 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2 v3 
    v4
and closure363 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) () : leptos_prelude_AnyView_ =
    let v1 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v0 2
    let v2 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v3 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "v3"
    let v5 : string = ""
    let v6 : string = v4 + v5 
    let v7 : string = v6 + v5 
    let v8 : string = "vec![" + v7 + "]"
    let v9 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : string = "leptos::prelude::Fragment::new($0)"
    let v11 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "leptos::prelude::AnyView::from($0)"
    let v13 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v11 v12 
    v13
and method291 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) : (unit -> leptos_prelude_AnyView_) =
    closure363(v0)
and closure364 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) () : leptos_prelude_AnyView_ =
    let v1 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v0 3
    let v2 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v3 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "v3"
    let v5 : string = ""
    let v6 : string = v4 + v5 
    let v7 : string = v6 + v5 
    let v8 : string = "vec![" + v7 + "]"
    let v9 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : string = "leptos::prelude::Fragment::new($0)"
    let v11 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "leptos::prelude::AnyView::from($0)"
    let v13 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v11 v12 
    v13
and method292 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) : (unit -> leptos_prelude_AnyView_) =
    closure364(v0)
and closure365 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) () : leptos_prelude_AnyView_ =
    let v1 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v0 4
    let v2 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v3 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "v3"
    let v5 : string = ""
    let v6 : string = v4 + v5 
    let v7 : string = v6 + v5 
    let v8 : string = "vec![" + v7 + "]"
    let v9 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : string = "leptos::prelude::Fragment::new($0)"
    let v11 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "leptos::prelude::AnyView::from($0)"
    let v13 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v11 v12 
    v13
and method293 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) : (unit -> leptos_prelude_AnyView_) =
    closure365(v0)
and closure4 () () : Vec<leptos_prelude_View<leptos_router_NestedRoute>> =
    let v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>) = method5()
    let v1 : string = ""
    (* run_target_args'
    let v6 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v7 : string = "&*$0"
    let v8 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v7 
    let _run_target_args'_v6 = v8 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v9 : string = "&*$0"
    let v10 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v9 
    let _run_target_args'_v6 = v10 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v11 : string = "&*$0"
    let v12 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v11 
    let _run_target_args'_v6 = v12 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v14 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v14 
    #endif
#if FABLE_COMPILER_PYTHON
    let v18 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v18 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v22 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v22 
    #endif
#else
    let v26 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v26 
    #endif
    let v29 : Ref<Str> = _run_target_args'_v6 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    let v74 : std_string_String = method289(v65)
    let v75 : (unit -> leptos_prelude_AnyView_) = method290(v0)
    let v76 : string = "path=leptos_router::path!(v74)"
    let v77 : string = "view= move || v75()"
    let v78 : (unit -> leptos_dom_Fragment) = closure362()
    let v79 : string = "children=Box::new(move || v78())"
    let v80 : string = " " + v76 + v1 + ""
    let v81 : string = " " + v77 + v80 + ""
    let v82 : string = " " + v79 + v81 + ""
    let v83 : string = "leptos_router::components::ParentRoute"
    let v84 : string = "<" + v83 + " " + v82 + " />"
    let v85 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v84 + " })"
    let v86 : leptos_prelude_View<leptos_router_NestedRoute> = Fable.Core.RustInterop.emitRustExpr () v85 
    let v87 : string = "/"
    (* run_target_args'
    let v92 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v93 : string = "&*$0"
    let v94 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v87 v93 
    let _run_target_args'_v92 = v94 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v95 : string = "&*$0"
    let v96 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v87 v95 
    let _run_target_args'_v92 = v96 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v97 : string = "&*$0"
    let v98 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v87 v97 
    let _run_target_args'_v92 = v98 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v100 : Ref<Str> = v87 |> unbox<Ref<Str>>
    let _run_target_args'_v92 = v100 
    #endif
#if FABLE_COMPILER_PYTHON
    let v104 : Ref<Str> = v87 |> unbox<Ref<Str>>
    let _run_target_args'_v92 = v104 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v108 : Ref<Str> = v87 |> unbox<Ref<Str>>
    let _run_target_args'_v92 = v108 
    #endif
#else
    let v112 : Ref<Str> = v87 |> unbox<Ref<Str>>
    let _run_target_args'_v92 = v112 
    #endif
    let v115 : Ref<Str> = _run_target_args'_v92 
    (* run_target_args'
    let v128 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v129 : string = "String::from($0)"
    let v130 : std_string_String = Fable.Core.RustInterop.emitRustExpr v115 v129 
    let _run_target_args'_v128 = v130 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v131 : string = "String::from($0)"
    let v132 : std_string_String = Fable.Core.RustInterop.emitRustExpr v115 v131 
    let _run_target_args'_v128 = v132 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v133 : string = "String::from($0)"
    let v134 : std_string_String = Fable.Core.RustInterop.emitRustExpr v115 v133 
    let _run_target_args'_v128 = v134 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v136 : std_string_String = v115 |> unbox<std_string_String>
    let _run_target_args'_v128 = v136 
    #endif
#if FABLE_COMPILER_PYTHON
    let v140 : std_string_String = v115 |> unbox<std_string_String>
    let _run_target_args'_v128 = v140 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v144 : std_string_String = v115 |> unbox<std_string_String>
    let _run_target_args'_v128 = v144 
    #endif
#else
    let v148 : std_string_String = v115 |> unbox<std_string_String>
    let _run_target_args'_v128 = v148 
    #endif
    let v151 : std_string_String = _run_target_args'_v128 
    let v160 : std_string_String = method289(v151)
    let v161 : (unit -> leptos_prelude_AnyView_) = method291(v0)
    let v162 : string = "path=leptos_router::path!(v160)"
    let v163 : string = "view= move || v161()"
    let v164 : string = "children=Box::new(move || v78())"
    let v165 : string = " " + v162 + v1 + ""
    let v166 : string = " " + v163 + v165 + ""
    let v167 : string = " " + v164 + v166 + ""
    let v168 : string = "<" + v83 + " " + v167 + " />"
    let v169 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v168 + " })"
    let v170 : leptos_prelude_View<leptos_router_NestedRoute> = Fable.Core.RustInterop.emitRustExpr () v169 
    let v171 : string = "/*"
    (* run_target_args'
    let v176 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v177 : string = "&*$0"
    let v178 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v171 v177 
    let _run_target_args'_v176 = v178 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v179 : string = "&*$0"
    let v180 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v171 v179 
    let _run_target_args'_v176 = v180 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v181 : string = "&*$0"
    let v182 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v171 v181 
    let _run_target_args'_v176 = v182 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v184 : Ref<Str> = v171 |> unbox<Ref<Str>>
    let _run_target_args'_v176 = v184 
    #endif
#if FABLE_COMPILER_PYTHON
    let v188 : Ref<Str> = v171 |> unbox<Ref<Str>>
    let _run_target_args'_v176 = v188 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v192 : Ref<Str> = v171 |> unbox<Ref<Str>>
    let _run_target_args'_v176 = v192 
    #endif
#else
    let v196 : Ref<Str> = v171 |> unbox<Ref<Str>>
    let _run_target_args'_v176 = v196 
    #endif
    let v199 : Ref<Str> = _run_target_args'_v176 
    (* run_target_args'
    let v212 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v213 : string = "String::from($0)"
    let v214 : std_string_String = Fable.Core.RustInterop.emitRustExpr v199 v213 
    let _run_target_args'_v212 = v214 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v215 : string = "String::from($0)"
    let v216 : std_string_String = Fable.Core.RustInterop.emitRustExpr v199 v215 
    let _run_target_args'_v212 = v216 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v217 : string = "String::from($0)"
    let v218 : std_string_String = Fable.Core.RustInterop.emitRustExpr v199 v217 
    let _run_target_args'_v212 = v218 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v220 : std_string_String = v199 |> unbox<std_string_String>
    let _run_target_args'_v212 = v220 
    #endif
#if FABLE_COMPILER_PYTHON
    let v224 : std_string_String = v199 |> unbox<std_string_String>
    let _run_target_args'_v212 = v224 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v228 : std_string_String = v199 |> unbox<std_string_String>
    let _run_target_args'_v212 = v228 
    #endif
#else
    let v232 : std_string_String = v199 |> unbox<std_string_String>
    let _run_target_args'_v212 = v232 
    #endif
    let v235 : std_string_String = _run_target_args'_v212 
    let v244 : std_string_String = method289(v235)
    let v245 : (unit -> leptos_prelude_AnyView_) = method292(v0)
    let v246 : string = "path=leptos_router::path!(v244)"
    let v247 : string = "view= move || v245()"
    let v248 : string = "children=Box::new(move || v78())"
    let v249 : string = " " + v246 + v1 + ""
    let v250 : string = " " + v247 + v249 + ""
    let v251 : string = " " + v248 + v250 + ""
    let v252 : string = "<" + v83 + " " + v251 + " />"
    let v253 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v252 + " })"
    let v254 : leptos_prelude_View<leptos_router_NestedRoute> = Fable.Core.RustInterop.emitRustExpr () v253 
    let v255 : string = "*"
    (* run_target_args'
    let v260 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v261 : string = "&*$0"
    let v262 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v255 v261 
    let _run_target_args'_v260 = v262 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v263 : string = "&*$0"
    let v264 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v255 v263 
    let _run_target_args'_v260 = v264 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v265 : string = "&*$0"
    let v266 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v255 v265 
    let _run_target_args'_v260 = v266 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v268 : Ref<Str> = v255 |> unbox<Ref<Str>>
    let _run_target_args'_v260 = v268 
    #endif
#if FABLE_COMPILER_PYTHON
    let v272 : Ref<Str> = v255 |> unbox<Ref<Str>>
    let _run_target_args'_v260 = v272 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v276 : Ref<Str> = v255 |> unbox<Ref<Str>>
    let _run_target_args'_v260 = v276 
    #endif
#else
    let v280 : Ref<Str> = v255 |> unbox<Ref<Str>>
    let _run_target_args'_v260 = v280 
    #endif
    let v283 : Ref<Str> = _run_target_args'_v260 
    (* run_target_args'
    let v296 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v297 : string = "String::from($0)"
    let v298 : std_string_String = Fable.Core.RustInterop.emitRustExpr v283 v297 
    let _run_target_args'_v296 = v298 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v299 : string = "String::from($0)"
    let v300 : std_string_String = Fable.Core.RustInterop.emitRustExpr v283 v299 
    let _run_target_args'_v296 = v300 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v301 : string = "String::from($0)"
    let v302 : std_string_String = Fable.Core.RustInterop.emitRustExpr v283 v301 
    let _run_target_args'_v296 = v302 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v304 : std_string_String = v283 |> unbox<std_string_String>
    let _run_target_args'_v296 = v304 
    #endif
#if FABLE_COMPILER_PYTHON
    let v308 : std_string_String = v283 |> unbox<std_string_String>
    let _run_target_args'_v296 = v308 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v312 : std_string_String = v283 |> unbox<std_string_String>
    let _run_target_args'_v296 = v312 
    #endif
#else
    let v316 : std_string_String = v283 |> unbox<std_string_String>
    let _run_target_args'_v296 = v316 
    #endif
    let v319 : std_string_String = _run_target_args'_v296 
    let v328 : std_string_String = method289(v319)
    let v329 : (unit -> leptos_prelude_AnyView_) = method293(v0)
    let v330 : string = "path=leptos_router::path!(v328)"
    let v331 : string = "view= move || v329()"
    let v332 : string = "children=Box::new(move || v78())"
    let v333 : string = " " + v330 + v1 + ""
    let v334 : string = " " + v331 + v333 + ""
    let v335 : string = " " + v332 + v334 + ""
    let v336 : string = "<" + v83 + " " + v335 + " />"
    let v337 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v336 + " })"
    let v338 : leptos_prelude_View<leptos_router_NestedRoute> = Fable.Core.RustInterop.emitRustExpr () v337 
    let v339 : string = "v338"
    let v340 : string = v339 + v1 
    let v341 : string = v340 + v1 
    let v342 : string = "v254"
    let v343 : string = ", "
    let v344 : string = v342 + v343 
    let v345 : string = v344 + v341 
    let v346 : string = "v170"
    let v347 : string = v346 + v343 
    let v348 : string = v347 + v345 
    let v349 : string = "v86"
    let v350 : string = v349 + v343 
    let v351 : string = v350 + v348 
    let v352 : string = "vec![" + v351 + "]"
    let v353 : Vec<leptos_prelude_View<leptos_router_NestedRoute>> = Fable.Core.RustInterop.emitRustExpr () v352 
    v353
and method4 () : (unit -> Vec<leptos_prelude_View<leptos_router_NestedRoute>>) =
    closure4()
and method294 (v0 : (unit -> Vec<leptos_prelude_View<leptos_router_NestedRoute>>)) : (unit -> Vec<leptos_prelude_View<leptos_router_NestedRoute>>) =
    v0
and closure3 () () : leptos_dom_Fragment =
    let v0 : (unit -> Vec<leptos_prelude_View<leptos_router_NestedRoute>>) = method4()
    let v1 : (unit -> Vec<leptos_prelude_View<leptos_router_NestedRoute>>) = method294(v0)
    let v2 : string = "leptos.routes / fallback"
    (* run_target_args'
    let v7 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2 v8 
    let _run_target_args'_v7 = v9 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2 v10 
    let _run_target_args'_v7 = v11 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2 v12 
    let _run_target_args'_v7 = v13 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v15 : Ref<Str> = v2 |> unbox<Ref<Str>>
    let _run_target_args'_v7 = v15 
    #endif
#if FABLE_COMPILER_PYTHON
    let v19 : Ref<Str> = v2 |> unbox<Ref<Str>>
    let _run_target_args'_v7 = v19 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v23 : Ref<Str> = v2 |> unbox<Ref<Str>>
    let _run_target_args'_v7 = v23 
    #endif
#else
    let v27 : Ref<Str> = v2 |> unbox<Ref<Str>>
    let _run_target_args'_v7 = v27 
    #endif
    let v30 : Ref<Str> = _run_target_args'_v7 
    (* run_target_args'
    let v43 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v30 v44 
    let _run_target_args'_v43 = v45 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v46 : string = "String::from($0)"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v30 v46 
    let _run_target_args'_v43 = v47 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v48 : string = "String::from($0)"
    let v49 : std_string_String = Fable.Core.RustInterop.emitRustExpr v30 v48 
    let _run_target_args'_v43 = v49 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v51 : std_string_String = v30 |> unbox<std_string_String>
    let _run_target_args'_v43 = v51 
    #endif
#if FABLE_COMPILER_PYTHON
    let v55 : std_string_String = v30 |> unbox<std_string_String>
    let _run_target_args'_v43 = v55 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v59 : std_string_String = v30 |> unbox<std_string_String>
    let _run_target_args'_v43 = v59 
    #endif
#else
    let v63 : std_string_String = v30 |> unbox<std_string_String>
    let _run_target_args'_v43 = v63 
    #endif
    let v66 : std_string_String = _run_target_args'_v43 
    let v75 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v76 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v66 v75 
    let v77 : string = "fallback=move || v76"
    let v78 : string = "children=leptos::children::ToChildren::to_children(move || v1())"
    let v79 : string = ""
    let v80 : string = " " + v77 + v79 + ""
    let v81 : string = " " + v78 + v80 + ""
    let v82 : string = "leptos_router::components::Routes"
    let v83 : string = "<" + v82 + " " + v81 + " />"
    let v84 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v83 + " })"
    let v85 : leptos_prelude_View<_> = Fable.Core.RustInterop.emitRustExpr () v84 
    let v86 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v87 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v85 v86 
    let v88 : string = "v87"
    let v89 : string = v88 + v79 
    let v90 : string = v89 + v79 
    let v91 : string = "vec![" + v90 + "]"
    let v92 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v91 
    let v93 : string = "leptos::prelude::Fragment::new($0)"
    let v94 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v92 v93 
    v94
and closure2 () () : Impl<leptos_IntoView> =
    let v0 : string = "app.render ()"
    let v1 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v2 : bool = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "true; leptos_meta::provide_meta_context()"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr () v3 
    let v5 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v6 : leptos_prelude_ArcRwSignal<bool> = Fable.Core.RustInterop.emitRustExpr false v5 
    let v7 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v8 : leptos_prelude_ArcRwSignal<bool> = Fable.Core.RustInterop.emitRustExpr false v7 
    let v9 : string = ""
    (* run_target_args'
    let v14 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v15 : string = "&*$0"
    let v16 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v9 v15 
    let _run_target_args'_v14 = v16 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v17 : string = "&*$0"
    let v18 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v9 v17 
    let _run_target_args'_v14 = v18 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v9 v19 
    let _run_target_args'_v14 = v20 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v22 : Ref<Str> = v9 |> unbox<Ref<Str>>
    let _run_target_args'_v14 = v22 
    #endif
#if FABLE_COMPILER_PYTHON
    let v26 : Ref<Str> = v9 |> unbox<Ref<Str>>
    let _run_target_args'_v14 = v26 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v9 |> unbox<Ref<Str>>
    let _run_target_args'_v14 = v30 
    #endif
#else
    let v34 : Ref<Str> = v9 |> unbox<Ref<Str>>
    let _run_target_args'_v14 = v34 
    #endif
    let v37 : Ref<Str> = _run_target_args'_v14 
    (* run_target_args'
    let v50 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v51 : string = "String::from($0)"
    let v52 : std_string_String = Fable.Core.RustInterop.emitRustExpr v37 v51 
    let _run_target_args'_v50 = v52 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v53 : string = "String::from($0)"
    let v54 : std_string_String = Fable.Core.RustInterop.emitRustExpr v37 v53 
    let _run_target_args'_v50 = v54 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v37 v55 
    let _run_target_args'_v50 = v56 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v58 : std_string_String = v37 |> unbox<std_string_String>
    let _run_target_args'_v50 = v58 
    #endif
#if FABLE_COMPILER_PYTHON
    let v62 : std_string_String = v37 |> unbox<std_string_String>
    let _run_target_args'_v50 = v62 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v37 |> unbox<std_string_String>
    let _run_target_args'_v50 = v66 
    #endif
#else
    let v70 : std_string_String = v37 |> unbox<std_string_String>
    let _run_target_args'_v50 = v70 
    #endif
    let v73 : std_string_String = _run_target_args'_v50 
    let v82 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v83 : leptos_prelude_ArcRwSignal<std_string_String> = Fable.Core.RustInterop.emitRustExpr v73 v82 
    let v84 : string = "i574n.near"
    (* run_target_args'
    let v89 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v90 : string = "&*$0"
    let v91 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v84 v90 
    let _run_target_args'_v89 = v91 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v92 : string = "&*$0"
    let v93 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v84 v92 
    let _run_target_args'_v89 = v93 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v94 : string = "&*$0"
    let v95 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v84 v94 
    let _run_target_args'_v89 = v95 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v97 : Ref<Str> = v84 |> unbox<Ref<Str>>
    let _run_target_args'_v89 = v97 
    #endif
#if FABLE_COMPILER_PYTHON
    let v101 : Ref<Str> = v84 |> unbox<Ref<Str>>
    let _run_target_args'_v89 = v101 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v105 : Ref<Str> = v84 |> unbox<Ref<Str>>
    let _run_target_args'_v89 = v105 
    #endif
#else
    let v109 : Ref<Str> = v84 |> unbox<Ref<Str>>
    let _run_target_args'_v89 = v109 
    #endif
    let v112 : Ref<Str> = _run_target_args'_v89 
    (* run_target_args'
    let v125 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v126 : string = "String::from($0)"
    let v127 : std_string_String = Fable.Core.RustInterop.emitRustExpr v112 v126 
    let _run_target_args'_v125 = v127 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v128 : string = "String::from($0)"
    let v129 : std_string_String = Fable.Core.RustInterop.emitRustExpr v112 v128 
    let _run_target_args'_v125 = v129 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v130 : string = "String::from($0)"
    let v131 : std_string_String = Fable.Core.RustInterop.emitRustExpr v112 v130 
    let _run_target_args'_v125 = v131 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v133 : std_string_String = v112 |> unbox<std_string_String>
    let _run_target_args'_v125 = v133 
    #endif
#if FABLE_COMPILER_PYTHON
    let v137 : std_string_String = v112 |> unbox<std_string_String>
    let _run_target_args'_v125 = v137 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v141 : std_string_String = v112 |> unbox<std_string_String>
    let _run_target_args'_v125 = v141 
    #endif
#else
    let v145 : std_string_String = v112 |> unbox<std_string_String>
    let _run_target_args'_v125 = v145 
    #endif
    let v148 : std_string_String = _run_target_args'_v125 
    let v158 : (bool * std_string_String) = true, v148 
    let v161 : string = "luckier.near"
    (* run_target_args'
    let v166 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v167 : string = "&*$0"
    let v168 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v161 v167 
    let _run_target_args'_v166 = v168 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v169 : string = "&*$0"
    let v170 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v161 v169 
    let _run_target_args'_v166 = v170 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v171 : string = "&*$0"
    let v172 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v161 v171 
    let _run_target_args'_v166 = v172 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v174 : Ref<Str> = v161 |> unbox<Ref<Str>>
    let _run_target_args'_v166 = v174 
    #endif
#if FABLE_COMPILER_PYTHON
    let v178 : Ref<Str> = v161 |> unbox<Ref<Str>>
    let _run_target_args'_v166 = v178 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v182 : Ref<Str> = v161 |> unbox<Ref<Str>>
    let _run_target_args'_v166 = v182 
    #endif
#else
    let v186 : Ref<Str> = v161 |> unbox<Ref<Str>>
    let _run_target_args'_v166 = v186 
    #endif
    let v189 : Ref<Str> = _run_target_args'_v166 
    (* run_target_args'
    let v202 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v203 : string = "String::from($0)"
    let v204 : std_string_String = Fable.Core.RustInterop.emitRustExpr v189 v203 
    let _run_target_args'_v202 = v204 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v205 : string = "String::from($0)"
    let v206 : std_string_String = Fable.Core.RustInterop.emitRustExpr v189 v205 
    let _run_target_args'_v202 = v206 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v207 : string = "String::from($0)"
    let v208 : std_string_String = Fable.Core.RustInterop.emitRustExpr v189 v207 
    let _run_target_args'_v202 = v208 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v210 : std_string_String = v189 |> unbox<std_string_String>
    let _run_target_args'_v202 = v210 
    #endif
#if FABLE_COMPILER_PYTHON
    let v214 : std_string_String = v189 |> unbox<std_string_String>
    let _run_target_args'_v202 = v214 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v218 : std_string_String = v189 |> unbox<std_string_String>
    let _run_target_args'_v202 = v218 
    #endif
#else
    let v222 : std_string_String = v189 |> unbox<std_string_String>
    let _run_target_args'_v202 = v222 
    #endif
    let v225 : std_string_String = _run_target_args'_v202 
    let v235 : (bool * std_string_String) = true, v225 
    let v238 : ((bool * std_string_String) []) = [|v158; v235|]
    let v239 : string = "$0.to_vec()"
    let v240 : Vec<(bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr v238 v239 
    let v242 : std_string_String option = None
    let v245 : US1 = US1_0
    let v246 : Heap0 = {l0 = v240; l1 = v242; l2 = 1; l3 = 1; l4 = v245} : Heap0
    let v247 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v248 : leptos_prelude_ArcRwSignal<Heap0> = Fable.Core.RustInterop.emitRustExpr v246 v247 
    let v249 : Heap1 = {l0 = v6; l1 = v8; l2 = v83; l3 = v248} : Heap1
    let v250 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v251 : leptos_prelude_ArcRwSignal<Heap1> = Fable.Core.RustInterop.emitRustExpr v249 v250 
    let v252 : string = "std::collections::HashMap::new()"
    let v253 : std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>> = Fable.Core.RustInterop.emitRustExpr () v252 
    let v254 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v255 : leptos_prelude_ArcRwSignal<std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>> = Fable.Core.RustInterop.emitRustExpr v253 v254 
    let v256 : Heap2 = {l0 = v251; l1 = v255} : Heap2
    let v257 : string = $"true; leptos::context::provide_context::<std::sync::Arc<Heap2>>($0)"
    let v258 : bool = Fable.Core.RustInterop.emitRustExpr v256 v257 
    let v259 : (unit -> leptos_dom_Fragment) = closure3()
    let v260 : string = "children=Box::new(move || v259())"
    let v261 : string = " " + v260 + v9 + ""
    let v262 : string = "leptos_router::components::Router"
    let v263 : string = "<" + v262 + " " + v261 + " />"
    let v264 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v263 + " })"
    let v265 : leptos_prelude_View<_> = Fable.Core.RustInterop.emitRustExpr () v264 
    let v266 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v267 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v265 v266 
    let v268 : Impl<leptos_IntoView> = v267 |> unbox
    v268
and method3 () : unit =
    let v0 : string = "true; leptos::prelude::mount_to_body(|| $0()); //"
    let v1 : (unit -> Impl<leptos_IntoView>) = closure2()
    let v2 : bool = Fable.Core.RustInterop.emitRustExpr v1 v0 
    ()
and closure366 () () : unit =
    method3()
and method295 () : (unit -> unit) =
    closure366()
and method296 (v0 : Box<Dyn<FnUnit>>) : Box<Dyn<FnUnit>> =
    v0
and closure0 () (v0 : (string [])) : int32 =
    let v1 : string = "main / args: " + string v0 + ""
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "let _ = console_log::init_with_level(log::Level::Debug)"
    Fable.Core.RustInterop.emitRustExpr () v4 
    let v5 : string = "console_error_panic_hook::set_once()"
    Fable.Core.RustInterop.emitRustExpr () v5 
    let v6 : string = "leptos::prelude::document().body()"
    let v7 : web_sys_HtmlElement option = Fable.Core.RustInterop.emitRustExpr () v6 
    let v10 : (web_sys_HtmlElement -> US0) = method0()
    let v11 : US0 option = v7 |> Option.map v10 
    let v31 : US0 = US0_1
    let v32 : US0 = v11 |> Option.defaultValue v31 
    let v37 : string = $"%A{v32}"
    let v40 : string = "main / mount_to_body / body: " + string v37 + ""
    let v41 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v42 : bool = Fable.Core.RustInterop.emitRustExpr v40 v41 
    match v32 with
    | US0_0(v43) -> (* Some *)
        let v44 : string = method1()
        (* run_target_args'
        let v49 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v50 : string = "&*$0"
        let v51 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v44 v50 
        let _run_target_args'_v49 = v51 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v52 : string = "&*$0"
        let v53 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v44 v52 
        let _run_target_args'_v49 = v53 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v54 : string = "&*$0"
        let v55 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v44 v54 
        let _run_target_args'_v49 = v55 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v57 : Ref<Str> = v44 |> unbox<Ref<Str>>
        let _run_target_args'_v49 = v57 
        #endif
#if FABLE_COMPILER_PYTHON
        let v61 : Ref<Str> = v44 |> unbox<Ref<Str>>
        let _run_target_args'_v49 = v61 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v65 : Ref<Str> = v44 |> unbox<Ref<Str>>
        let _run_target_args'_v49 = v65 
        #endif
#else
        let v69 : Ref<Str> = v44 |> unbox<Ref<Str>>
        let _run_target_args'_v49 = v69 
        #endif
        let v72 : Ref<Str> = _run_target_args'_v49 
        let v81 : web_sys_HtmlElement = method2(v43)
        let v82 : string = "v81.set_inner_html($0)"
        Fable.Core.RustInterop.emitRustExpr v72 v82 
        method3()
    | _ ->
        let v83 : (unit -> unit) = method295()
        let v84 : string = "Box::new(move || v83())"
        let v85 : Box<Dyn<FnUnit>> = Fable.Core.RustInterop.emitRustExpr () v84 
        let v86 : Box<Dyn<FnUnit>> = method296(v85)
        let v87 : string = "wasm_bindgen::closure::Closure::wrap(v86)"
        let v88 : wasm_bindgen_closure_Closure<Dyn<FnUnit>> = Fable.Core.RustInterop.emitRustExpr () v87 
        let v89 : string = "wasm_bindgen::closure::Closure::as_ref(&v88)"
        let v90 : Ref<wasm_bindgen_JsValue> = Fable.Core.RustInterop.emitRustExpr () v89 
        let v91 : string = "wasm_bindgen::JsCast::unchecked_ref(v90)"
        let v92 : Ref<js_sys_Function> = Fable.Core.RustInterop.emitRustExpr () v91 
        let v93 : string = "leptos::prelude::document().add_event_listener_with_callback(\"DOMContentLoaded\", v92).unwrap()"
        Fable.Core.RustInterop.emitRustExpr () v93 
        let v94 : string = "v88.forget()"
        Fable.Core.RustInterop.emitRustExpr () v94 
        ()
    0
let v0 : ((string []) -> int32) = closure0()
let main args = v0 args
()
