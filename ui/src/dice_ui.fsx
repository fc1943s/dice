#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("web_sys::HtmlElement")>]
#endif
type web_sys_HtmlElement = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("&$0")>]
type Ref<'T> = class end
#else
type Ref<'T> = 'T
#endif

#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ArcRwSignal<$0>")>]
#endif
type leptos_prelude_ArcRwSignal<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::string::String")>]
type std_string_String = class end
#else
type std_string_String = string
#endif

#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Vec<$0>")>]
#endif
type Vec<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::collections::HashMap<$0, $1>")>]
#endif
type std_collections_HashMap<'K, 'V> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::pin::Pin<$0>")>]
#endif
type std_pin_Pin<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("rexie::Error")>]
#endif
type rexie_Error = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("rexie::Rexie")>]
#endif
type rexie_Rexie = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::sync::Arc<$0>")>]
#endif
type std_sync_Arc<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Func0<$0>")>]
#endif
type Func0<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ArcLocalResource<$0>")>]
#endif
type leptos_prelude_ArcLocalResource<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("*/ $0 /*")>]
#endif
type TypeEmit<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("PartialEqWrapper<$0>")>]
#endif
type PartialEqWrapper<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Func1<$0, $1>")>]
#endif
type Func0<'T, 'U> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("rexie::Transaction")>]
#endif
type rexie_Transaction = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("rexie::Store")>]
#endif
type rexie_Store = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("wasm_bindgen::JsValue")>]
#endif
type wasm_bindgen_JsValue = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("serde_wasm_bindgen::Error")>]
#endif
type serde_wasm_bindgen_Error = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("serde_json::Value")>]
#endif
type serde_json_Value = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("serde_json::Error")>]
#endif
type serde_json_Error = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("borsh::io::Error")>]
#endif
type borsh_io_Error = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("web_sys::Window")>]
#endif
type web_sys_Window = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("web_sys::Storage")>]
#endif
type web_sys_Storage = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ArcMemo<$0>")>]
#endif
type leptos_prelude_ArcMemo<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ReadSignal<$0>")>]
#endif
type leptos_prelude_ReadSignal<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::WriteSignal<$0>")>]
#endif
type leptos_prelude_WriteSignal<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ArcAction<$0, $1>")>]
#endif
type leptos_prelude_ArcAction<'T, 'U> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos_router::location::Location")>]
#endif
type leptos_router_location_Location = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::Memo<$0>")>]
#endif
type leptos_prelude_Memo<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos_router::location::Url")>]
#endif
type leptos_router_Url = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::Root")>]
#endif
type crate_model_near_nearblocks_Root = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::Txn")>]
#endif
type crate_model_near_nearblocks_Txn = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::Block")>]
#endif
type crate_model_near_nearblocks_Block = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::Action")>]
#endif
type crate_model_near_nearblocks_Action = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::ActionsAgg")>]
#endif
type crate_model_near_nearblocks_ActionsAgg = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::Outcomes")>]
#endif
type crate_model_near_nearblocks_Outcomes = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::nearblocks::OutcomesAgg")>]
#endif
type crate_model_near_nearblocks_OutcomesAgg = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("futures::future::TryJoinAll<$0>")>]
#endif
type futures_future_TryJoinAll<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("reqwest_wasm::RequestBuilder")>]
#endif
type reqwest_RequestBuilder = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("reqwest_wasm::Error")>]
#endif
type reqwest_Error = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("reqwest_wasm::Response")>]
#endif
type reqwest_Response = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::Action<$0, $1>")>]
#endif
type leptos_prelude_Action<'T, 'U> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::ArcSignal<$0>")>]
#endif
type leptos_prelude_ArcSignal<'T> = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::RpcInput")>] type crate_model_near_rpc_RpcInput = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::RpcResponse")>] type crate_model_near_rpc_RpcResponse = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::TransactionStatus")>] type crate_model_near_rpc_TransactionStatus = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::Receipt")>] type crate_model_near_rpc_Receipt = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::ReceiptDetail")>] type crate_model_near_rpc_ReceiptDetail = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::ActionDetail")>] type crate_model_near_rpc_ActionDetail = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::TransferDetail")>] type crate_model_near_rpc_TransferDetail = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::ReceiptsOutcome")>] type crate_model_near_rpc_ReceiptsOutcome = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::OutcomeDetail")>] type crate_model_near_rpc_OutcomeDetail = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::Metadata")>] type crate_model_near_rpc_Metadata = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::GasProfile")>] type crate_model_near_rpc_GasProfile = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::Proof")>] type crate_model_near_rpc_Proof = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::RpcError")>] type crate_model_near_rpc_RpcError = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::ErrorCause")>] type crate_model_near_rpc_ErrorCause = class end
[<Fable.Core.Erase; Fable.Core.Emit("crate::model::near::rpc::ErrorCauseInfo")>] type crate_model_near_rpc_ErrorCauseInfo = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::AnyView")>]
#endif
type leptos_prelude_AnyView_ = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::Fragment")>]
#endif
type leptos_dom_Fragment = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("impl $0")>]
#endif
type Impl<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::prelude::View<$0>")>]
#endif
type leptos_prelude_View<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("chrono::DateTime<$0>")>]
#endif
type chrono_DateTime<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("chrono::NaiveDateTime")>]
#endif
type chrono_NaiveDateTime = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::ev::Event")>]
#endif
type leptos_ev_Event = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Box<$0>")>]
#endif
type Box<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("wasm_bindgen::closure::Closure<$0>")>]
#endif
type wasm_bindgen_closure_Closure<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("str")>]
type Str = class end
#else
type Str = string
#endif

#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::IntoView")>]
#endif
type leptos_IntoView = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos_router::NestedRoute<_, _, _, _>")>]
#endif
type leptos_router_NestedRoute = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::HtmlElement<$0, _, _>")>]
#endif
type leptos_dom_html_HtmlElement<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Div")>]
#endif
type leptos_html_Div = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("dyn $0")>]
#endif
type Dyn<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::future::Future<Output = $0>")>]
#endif
type std_future_Future<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("[$0]")>]
#endif
type Slice<'T> = class end
#if FABLE_COMPILER
Fable.Core.RustInterop.emitRustExpr () ");
use leptos::prelude::*;
//"
#endif
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Fn($0, $1)")>]
#endif
type ActionFn2<'T, 'U> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos_router::NavigateOptions")>]
#endif
type leptos_router_NavigateOptions = class end
#if FABLE_COMPILER
Fable.Core.RustInterop.emitRustExpr () ");
use leptos::prelude::ElementChild;
//"
#endif
#if FABLE_COMPILER
Fable.Core.RustInterop.emitRustExpr () ");
use leptos::prelude::ClassAttribute;
//"
#endif
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("$0 $1")>]
#endif
type Lifetime<'T, 'U> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("'static")>]
#endif
type StaticLifetime = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Span")>]
#endif
type leptos_html_Span = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::svg::Path")>]
#endif
type leptos_svg_Path = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::svg::Svg")>]
#endif
type leptos_svg_Svg = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Summary")>]
#endif
type leptos_html_Summary = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Pre")>]
#endif
type leptos_html_Pre = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::svg::Circle")>]
#endif
type leptos_svg_Circle = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Button")>]
#endif
type leptos_html_Button = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Details")>]
#endif
type leptos_html_Details = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Input")>]
#endif
type leptos_html_Input = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::svg::Animate")>]
#endif
type leptos_svg_Animate = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::svg::Rect")>]
#endif
type leptos_svg_Rect = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Th")>]
#endif
type leptos_html_Th = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Tr")>]
#endif
type leptos_html_Tr = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("chrono::Utc")>]
#endif
type chrono_Utc = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("chrono::Local")>]
#endif
type chrono_Local = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Td")>]
#endif
type leptos_html_Td = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Thead")>]
#endif
type leptos_html_Thead = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Tbody")>]
#endif
type leptos_html_Tbody = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Table")>]
#endif
type leptos_html_Table = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Label")>]
#endif
type leptos_html_Label = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Dt")>]
#endif
type leptos_html_Dt = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Dd")>]
#endif
type leptos_html_Dd = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Dl")>]
#endif
type leptos_html_Dl = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Main")>]
#endif
type leptos_html_Main = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Option_")>]
#endif
type leptos_html_Option = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Select")>]
#endif
type leptos_html_Select = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::A")>]
#endif
type leptos_html_A = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("leptos::html::Nav")>]
#endif
type leptos_html_Nav = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Fn()")>]
#endif
type FnUnit = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("js_sys::Function")>]
#endif
type js_sys_Function = class end
type [<Struct>] US0 =
    | US0_0 of f0_0 : web_sys_HtmlElement
    | US0_1
and [<Struct>] US1 =
    | US1_0
    | US1_1
and Heap0 = {l0 : Vec<(bool * std_string_String)>; l1 : std_string_String option; l2 : int32; l3 : int32; l4 : US1}
and Heap1 = {l0 : leptos_prelude_ArcRwSignal<bool>; l1 : leptos_prelude_ArcRwSignal<bool>; l2 : leptos_prelude_ArcRwSignal<std_string_String>; l3 : leptos_prelude_ArcRwSignal<Heap0>}
and  Heap2 = {l0 : leptos_prelude_ArcRwSignal<Heap1>; l1 : leptos_prelude_ArcRwSignal<std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>>}
and [<Struct>] US2 =
    | US2_0 of f0_0 : std_sync_Arc<rexie_Rexie>
    | US2_1
and Heap3 = {l0 : bool; l1 : bool; l2 : std_string_String; l3 : Heap0}
and [<Struct>] US3 =
    | US3_0 of f0_0 : Heap3 option
    | US3_1
and [<Struct>] US4 =
    | US4_0 of f0_0 : wasm_bindgen_JsValue
    | US4_1
and [<Struct>] US5 =
    | US5_0 of f0_0 : serde_json_Value
    | US5_1
and [<Struct>] US6 =
    | US6_0 of f0_0 : Heap3 option option
    | US6_1 of f1_0 : std_string_String
and [<Struct>] US8 =
    | US8_0 of f0_0 : Heap3
    | US8_1
and [<Struct>] US7 =
    | US7_0 of f0_0 : US8
    | US7_1
and [<Struct>] US9 =
    | US9_0 of f0_0 : web_sys_Storage option
    | US9_1 of f1_0 : wasm_bindgen_JsValue
and [<Struct>] US11 =
    | US11_0 of f0_0 : web_sys_Storage
    | US11_1
and [<Struct>] US10 =
    | US10_0 of f0_0 : US11
    | US10_1 of f1_0 : wasm_bindgen_JsValue
and [<Struct>] US12 =
    | US12_0 of f0_0 : std_string_String option
    | US12_1 of f1_0 : wasm_bindgen_JsValue
and [<Struct>] US14 =
    | US14_0 of f0_0 : std_string_String
    | US14_1
and [<Struct>] US13 =
    | US13_0 of f0_0 : US14
    | US13_1 of f1_0 : wasm_bindgen_JsValue
and [<Struct>] US15 =
    | US15_0 of f0_0 : US14
    | US15_1
and [<Struct>] US16 =
    | US16_0 of f0_0 : leptos_prelude_ArcRwSignal<bool>
    | US16_1
and [<Struct>] US17 =
    | US17_0 of f0_0 : bool
    | US17_1
and [<Struct>] US19 =
    | US19_0
and [<Struct>] US18 =
    | US18_0
    | US18_1 of f1_0 : US19
    | US18_2
    | US18_3
    | US18_4
and [<Struct>] US20 =
    | US20_0 of f0_0 : leptos_router_Url
    | US20_1 of f1_0 : std_string_String
and [<Struct>] US21 =
    | US21_0 of f0_0 : US18
    | US21_1
and [<Struct>] US22 =
    | US22_0 of f0_0 : leptos_dom_Fragment
    | US22_1
and [<Struct>] US23 =
    | US23_0
    | US23_1
and Mut0 = {mutable l0 : int32}
and UH0 =
    | UH0_0
    | UH0_1 of Vec<struct (string * US23 * string * bool * bool)> * UH0
and UH1 =
    | UH1_0
    | UH1_1 of Vec<string> * UH1
and Heap4 = {l0 : std_string_String}
and [<Struct>] US24 =
    | US24_0 of f0_0 : Vec<Heap4 option>
    | US24_1 of f1_0 : std_string_String
and [<Struct>] US25 =
    | US25_0 of f0_0 : Heap4
    | US25_1
and [<Struct>] US26 =
    | US26_0 of f0_0 : Result<Vec<Heap4 option>, std_string_String>
    | US26_1
and [<Struct>] US28 =
    | US28_0 of f0_0 : Vec<US25>
    | US28_1 of f1_0 : std_string_String
and [<Struct>] US27 =
    | US27_0 of f0_0 : US28
    | US27_1
and [<Struct>] US31 =
    | US31_0 of f0_0 : string
    | US31_1
and [<Struct>] US30 =
    | US30_0 of f0_0 : US31
    | US30_1 of f1_0 : std_string_String
and [<Struct>] US29 =
    | US29_0 of f0_0 : US30
    | US29_1
and [<Struct>] US32 =
    | US32_0 of f0_0 : US25
    | US32_1
and [<Struct>] US33 =
    | US33_0 of f0_0 : string option
    | US33_1 of f1_0 : std_string_String
and [<Struct>] US34 =
    | US34_0 of f0_0 : Vec<unit>
    | US34_1 of f1_0 : std_string_String
and [<Struct>] US36 =
    | US36_0 of f0_0 : (US25 [])
    | US36_1 of f1_0 : std_string_String
and [<Struct>] US35 =
    | US35_0 of f0_0 : US36
    | US35_1
and [<Struct>] US37 =
    | US37_0 of f0_0 : Result<Vec<string option>, std_string_String>
    | US37_1
and [<Struct>] US39 =
    | US39_0 of f0_0 : Vec<string option>
    | US39_1 of f1_0 : std_string_String
and [<Struct>] US38 =
    | US38_0 of f0_0 : US39
    | US38_1
and [<Struct>] US41 =
    | US41_0 of f0_0 : Vec<US31>
    | US41_1 of f1_0 : std_string_String
and [<Struct>] US40 =
    | US40_0 of f0_0 : US41
    | US40_1
and [<Struct>] US42 =
    | US42_0 of f0_0 : US31
    | US42_1
and Heap5 = {l0 : std_string_String; l1 : std_string_String; l2 : std_string_String; l3 : std_string_String; l4 : std_string_String; l5 : std_string_String; l6 : uint32; l7 : (struct (std_string_String * std_string_String option) []); l8 : float; l9 : bool; l10 : float; l11 : (std_string_String [])}
and [<Struct>] US43 =
    | US43_0 of f0_0 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option
    | US43_1 of f1_0 : std_string_String
and [<Struct>] US45 =
    | US45_0 of f0_0 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])
    | US45_1
and [<Struct>] US44 =
    | US44_0 of f0_0 : US45
    | US44_1 of f1_0 : std_string_String
and [<Struct>] US47 =
    | US47_0 of f0_0 : (struct (string * unativeint * Heap5) [])
    | US47_1
and [<Struct>] US46 =
    | US46_0 of f0_0 : US47
    | US46_1 of f1_0 : std_string_String
and [<Struct>] US49 =
    | US49_0 of f0_0 : Vec<struct (string * unativeint * Heap5)>
    | US49_1
and [<Struct>] US48 =
    | US48_0 of f0_0 : US49
    | US48_1 of f1_0 : std_string_String
and [<Struct>] US50 =
    | US50_0 of f0_0 : Vec<struct (string * unativeint * Heap5)> option
    | US50_1 of f1_0 : std_string_String
and UH2 =
    | UH2_0
    | UH2_1 of Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> * UH2
and Mut1 = {mutable l0 : int32; mutable l1 : UH2}
and [<Struct>] US51 =
    | US51_0 of f0_0 : Vec<struct (string * unativeint * Heap5)>
    | US51_1 of f1_0 : std_string_String
and [<Struct>] US52 =
    | US52_0 of f0_0 : (struct (string * unativeint * Heap5) [])
    | US52_1 of f1_0 : std_string_String
and [<Struct>] US53 =
    | US53_0 of f0_0 : (struct (string * unativeint * Heap5) []) option
    | US53_1 of f1_0 : std_string_String
and [<Struct>] US55 =
    | US55_0 of f0_0 : (struct (string * US23 * string * bool * bool) [])
    | US55_1
and [<Struct>] US54 =
    | US54_0 of f0_0 : US55
    | US54_1 of f1_0 : std_string_String
and [<Struct>] US56 =
    | US56_0 of f0_0 : (struct (string * US23 * string * bool * bool) []) option
    | US56_1 of f1_0 : std_string_String
and Heap6 = {l0 : int32}
and [<Struct>] US57 =
    | US57_0 of f0_0 : US14
    | US57_1 of f1_0 : std_string_String
and [<Struct>] US59 =
    | US59_0 of f0_0 : std_string_String * f0_1 : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * f0_2 : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * f0_3 : std_string_String option
    | US59_1
and [<Struct>] US58 =
    | US58_0 of f0_0 : US59
    | US58_1 of f1_0 : std_string_String
and [<Struct>] US60 =
    | US60_0 of f0_0 : crate_model_near_rpc_RpcResponse
    | US60_1 of f1_0 : std_string_String
and [<Struct>] US61 =
    | US61_0 of f0_0 : std_string_String * f0_1 : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * f0_2 : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * f0_3 : std_string_String option
    | US61_1 of f1_0 : std_string_String
and [<Struct>] US62 =
    | US62_0 of f0_0 : US58
    | US62_1
and [<Struct>] US63 =
    | US63_0 of f0_0 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option
    | US63_1 of f1_0 : std_string_String
and [<Struct>] US64 =
    | US64_0 of f0_0 : std_string_String * f0_1 : std_string_String * f0_2 : struct (std_string_String option * std_string_String option) option * f0_3 : int32 * f0_4 : std_string_String * f0_5 : std_string_String
    | US64_1
and [<Struct>] US65 =
    | US65_0 of f0_0 : leptos_prelude_ArcMemo<US31>
    | US65_1
and [<Struct>] US66 =
    | US66_0 of f0_0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>>
    | US66_1
and [<Struct>] US67 =
    | US67_0 of f0_0 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>
    | US67_1
and [<Struct>] US68 =
    | US68_0 of f0_0 : chrono_DateTime<chrono_Utc>
    | US68_1
and [<Struct>] US69 =
    | US69_0 of f0_0 : string
    | US69_1 of f1_0 : string
and Mut2 = {mutable l0 : int32; mutable l1 : US31}
and [<Struct>] US70 =
    | US70_0 of f0_0 : std_string_String
    | US70_1 of f1_0 : std_string_String
let rec closure1 () (v0 : web_sys_HtmlElement) : US0 =
    US0_0(v0)
and method0 () : (web_sys_HtmlElement -> US0) =
    closure1()
and method1 () : string =
    let v0 : string = ""
    v0
and method2 (v0 : web_sys_HtmlElement) : web_sys_HtmlElement =
    v0
and closure6 () (v0 : rexie_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method6 () : (rexie_Error -> std_string_String) =
    closure6()
and closure7 () (v0 : rexie_Rexie) : rexie_Rexie =
    v0
and method7 () : (rexie_Rexie -> rexie_Rexie) =
    closure7()
and method8 (v0 : int64, v1 : string) : string =
    let v2 : int64 = System.Convert.ToInt64 v1.Length
    let v3 : bool = v2 <= v0
    if v3 then
        v1
    else
        let v5 : (int64 -> float) = float
        let v6 : float = v5 v0
        let v9 : float = v6 / 2.0
        let v10 : (float -> float) = ceil
        let v11 : float = v10 v9
        let v13 : (float -> int64) = int64
        let v14 : int64 = v13 v11
        let v17 : (float -> float) = floor
        let v18 : float = v17 v9
        let v20 : (float -> int64) = int64
        let v21 : int64 = v20 v18
        let v24 : int64 = v14 - 1L
        let v26 : string = v1.[int 0L..int v24]
        let v30 : int64 = v2 - v21
        let v31 : int64 = v2 - 1L
        let v33 : string = v1.[int v30..int v31]
        let v37 : string = "..."
        let v38 : (string []) = [|v26; v37; v33|]
        let v40 : string seq = v38 |> Seq.ofArray
        let v44 : (string -> (string seq -> string)) = String.concat
        let v45 : string = ""
        let v46 : (string seq -> string) = v44 v45
        v46 v40
and closure8 () () : unit =
    let v0 : string = "} //"
    Fable.Core.RustInterop.emitRustExpr () v0 
    let v1 : string = "#[derive( //"
    Fable.Core.RustInterop.emitRustExpr () v1 
    let v2 : string = "  Debug, //"
    Fable.Core.RustInterop.emitRustExpr () v2 
    let v3 : string = "  Clone, //"
    Fable.Core.RustInterop.emitRustExpr () v3 
    let v4 : string = ")] //"
    Fable.Core.RustInterop.emitRustExpr () v4 
    let v5 : string = "pub struct PartialEqWrapper<T>(T); /*"
    Fable.Core.RustInterop.emitRustExpr () v5 
    let v6 : string = "*/ impl PartialEq for PartialEqWrapper< /*"
    Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : TypeEmit<std_sync_Arc<rexie_Rexie>> = null |> unbox<TypeEmit<std_sync_Arc<rexie_Rexie>>>
    let v11 : string = "*/ > { //"
    Fable.Core.RustInterop.emitRustExpr () v11 
    let v12 : string = "fn eq(&self, other: &Self) -> bool { //"
    Fable.Core.RustInterop.emitRustExpr () v12 
    let v13 : string = $"self"
    let v14 : Ref<PartialEqWrapper<std_sync_Arc<rexie_Rexie>>> = Fable.Core.RustInterop.emitRustExpr () v13 
    let v15 : string = $"other"
    let v16 : Ref<PartialEqWrapper<std_sync_Arc<rexie_Rexie>>> = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = "&$0.0"
    let v18 : Ref<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v16 v17 
    let v19 : string = "&$0.0"
    let v20 : Ref<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v14 v19 
    let v21 : string = "std::sync::Arc::ptr_eq($0, $1)"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr struct (v20, v18) v21 
    let v23 : string = $"v22 //"
    Fable.Core.RustInterop.emitRustExpr () v23 
    let v24 : string = "} } } fn _main() { { { //"
    Fable.Core.RustInterop.emitRustExpr () v24 
    ()
and closure9 () (v0 : std_sync_Arc<rexie_Rexie>) : US2 =
    US2_0(v0)
and method9 () : (std_sync_Arc<rexie_Rexie> -> US2) =
    closure9()
and method10 (v0 : Func0<string, std_string_String>) : Func0<string, std_string_String> =
    v0
and closure10 (v0 : Func0<string, std_string_String>) (v1 : string) : std_string_String =
    let v2 : Func0<string, std_string_String> = method10(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method11 (v0 : std_sync_Arc<rexie_Rexie>) : std_sync_Arc<rexie_Rexie> =
    v0
and closure11 () (v0 : rexie_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method12 () : (rexie_Error -> std_string_String) =
    closure11()
and method13 () : string =
    let v0 : string = "store"
    v0
and closure12 () (v0 : rexie_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method14 () : (rexie_Error -> std_string_String) =
    closure12()
and method15 () : string =
    let v0 : string = "core-state-heap"
    v0
and closure13 () (v0 : rexie_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method16 () : (rexie_Error -> std_string_String) =
    closure13()
and closure14 () (v0 : wasm_bindgen_JsValue) : US4 =
    US4_0(v0)
and method17 () : (wasm_bindgen_JsValue -> US4) =
    closure14()
and method18 (v0 : wasm_bindgen_JsValue) : wasm_bindgen_JsValue =
    v0
and closure15 () (v0 : serde_wasm_bindgen_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method19 () : (serde_wasm_bindgen_Error -> std_string_String) =
    closure15()
and closure16 () (v0 : serde_json_Value) : US5 =
    US5_0(v0)
and method20 () : (serde_json_Value -> US5) =
    closure16()
and method21 (v0 : serde_json_Value) : serde_json_Value =
    v0
and closure17 () (v0 : serde_json_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method22 () : (serde_json_Error -> std_string_String) =
    closure17()
and closure18 () (v0 : borsh_io_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method23 () : (borsh_io_Error -> std_string_String) =
    closure18()
and closure19 () (v0 : Heap3 option option) : US6 =
    US6_0(v0)
and method24 () : (Heap3 option option -> US6) =
    closure19()
and closure20 () (v0 : std_string_String) : US6 =
    US6_1(v0)
and method25 () : (std_string_String -> US6) =
    closure20()
and closure21 () (v0 : Heap3 option) : US3 =
    US3_0(v0)
and method26 () : (Heap3 option -> US3) =
    closure21()
and closure22 () (v0 : Heap3) : US8 =
    US8_0(v0)
and method27 () : (Heap3 -> US8) =
    closure22()
and method28 () : web_sys_Window =
    let v0 : string = "leptos::prelude::window()"
    let v1 : web_sys_Window = Fable.Core.RustInterop.emitRustExpr () v0 
    v1
and method29 (v0 : web_sys_Window) : Result<web_sys_Storage option, wasm_bindgen_JsValue> =
    let v1 : string = "$0.local_storage()"
    let v2 : Result<web_sys_Storage option, wasm_bindgen_JsValue> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    v2
and closure23 () (v0 : web_sys_Storage option) : US9 =
    US9_0(v0)
and method30 () : (web_sys_Storage option -> US9) =
    closure23()
and closure24 () (v0 : wasm_bindgen_JsValue) : US9 =
    US9_1(v0)
and method31 () : (wasm_bindgen_JsValue -> US9) =
    closure24()
and closure25 () (v0 : web_sys_Storage) : US11 =
    US11_0(v0)
and method32 () : (web_sys_Storage -> US11) =
    closure25()
and closure26 () (v0 : US8) : US7 =
    US7_0(v0)
and method33 () : (US8 -> US7) =
    closure26()
and method34 (v0 : web_sys_Storage) : web_sys_Storage =
    v0
and method35 () : string =
    let v0 : string = "core-state-heap"
    v0
and closure27 () (v0 : std_string_String option) : US12 =
    US12_0(v0)
and method36 () : (std_string_String option -> US12) =
    closure27()
and closure28 () (v0 : wasm_bindgen_JsValue) : US12 =
    US12_1(v0)
and method37 () : (wasm_bindgen_JsValue -> US12) =
    closure28()
and method38 (v0 : std_string_String option) : std_string_String option =
    v0
and closure29 () (v0 : std_string_String) : US14 =
    US14_0(v0)
and method39 () : (std_string_String -> US14) =
    closure29()
and method41 (v0 : string) : string =
    v0
and closure31 () (v0 : serde_json_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method42 () : (serde_json_Error -> std_string_String) =
    closure31()
and closure30 () (v0 : std_string_String) : US8 =
    let v1 : string = "fable_library_rust::String_::fromString($0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = method41(v2)
    (* run_target_args'
    let v8 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v9 : string = "&*$0"
    let v10 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3 v9 
    let _run_target_args'_v8 = v10 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v11 : string = "&*$0"
    let v12 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3 v11 
    let _run_target_args'_v8 = v12 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v13 : string = "&*$0"
    let v14 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3 v13 
    let _run_target_args'_v8 = v14 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v16 : Ref<Str> = v3 |> unbox<Ref<Str>>
    let _run_target_args'_v8 = v16 
    #endif
#if FABLE_COMPILER_PYTHON
    let v20 : Ref<Str> = v3 |> unbox<Ref<Str>>
    let _run_target_args'_v8 = v20 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v24 : Ref<Str> = v3 |> unbox<Ref<Str>>
    let _run_target_args'_v8 = v24 
    #endif
#else
    let v28 : Ref<Str> = v3 |> unbox<Ref<Str>>
    let _run_target_args'_v8 = v28 
    #endif
    let v31 : Ref<Str> = _run_target_args'_v8 
    let v37 : string = "serde_json::from_str(&$0)"
    let v38 : Result<Heap3, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v31 v37 
    let v39 : (serde_json_Error -> std_string_String) = method42()
    (* run_target_args'
    let v41 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = "$0.map_err(|x| $1(x))"
    let v43 : Result<Heap3, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v38, v39) v42 
    let _run_target_args'_v41 = v43 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v44 : string = "$0.map_err(|x| $1(x))"
    let v45 : Result<Heap3, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v38, v39) v44 
    let _run_target_args'_v41 = v45 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v46 : string = "$0.map_err(|x| $1(x))"
    let v47 : Result<Heap3, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v38, v39) v46 
    let _run_target_args'_v41 = v47 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v48 : Result<Heap3, std_string_String> = match v38 with Ok x -> Ok x | Error x -> Error (v39 x)
    let _run_target_args'_v41 = v48 
    #endif
#if FABLE_COMPILER_PYTHON
    let v49 : Result<Heap3, std_string_String> = match v38 with Ok x -> Ok x | Error x -> Error (v39 x)
    let _run_target_args'_v41 = v49 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v50 : Result<Heap3, std_string_String> = match v38 with Ok x -> Ok x | Error x -> Error (v39 x)
    let _run_target_args'_v41 = v50 
    #endif
#else
    let v51 : Result<Heap3, std_string_String> = match v38 with Ok x -> Ok x | Error x -> Error (v39 x)
    let _run_target_args'_v41 = v51 
    #endif
    let v52 : Result<Heap3, std_string_String> = _run_target_args'_v41 
    (* run_target_args'
    let v56 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v57 : string = "$0.ok()"
    let v58 : Heap3 option = Fable.Core.RustInterop.emitRustExpr v52 v57 
    let _run_target_args'_v56 = v58 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v59 : string = "$0.ok()"
    let v60 : Heap3 option = Fable.Core.RustInterop.emitRustExpr v52 v59 
    let _run_target_args'_v56 = v60 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v61 : string = "$0.ok()"
    let v62 : Heap3 option = Fable.Core.RustInterop.emitRustExpr v52 v61 
    let _run_target_args'_v56 = v62 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v63 : Heap3 option = match v52 with Ok x -> Some x | Error _ -> None
    let _run_target_args'_v56 = v63 
    #endif
#if FABLE_COMPILER_PYTHON
    let v64 : Heap3 option = match v52 with Ok x -> Some x | Error _ -> None
    let _run_target_args'_v56 = v64 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v65 : Heap3 option = match v52 with Ok x -> Some x | Error _ -> None
    let _run_target_args'_v56 = v65 
    #endif
#else
    let v66 : Heap3 option = match v52 with Ok x -> Some x | Error _ -> None
    let _run_target_args'_v56 = v66 
    #endif
    let v67 : Heap3 option = _run_target_args'_v56 
    let v71 : (Heap3 -> US8) = method27()
    let v72 : US8 option = v67 |> Option.map v71 
    let v85 : US8 = US8_1
    let v86 : US8 = v72 |> Option.defaultValue v85 
    v86
and method40 () : (std_string_String -> US8) =
    closure30()
and closure32 (v0 : Heap3) (v1 : bool) : bool =
    let v2 : string = "state_core.use_core_database (7) / effect core_state_heap / dark_mode signal_update"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : bool = v0.l0
    v5
and closure33 (v0 : Heap3) (v1 : bool) : bool =
    let v2 : string = "state_core.use_core_database (8) / effect core_state_heap / debug signal_update"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : bool = v0.l1
    v5
and closure34 (v0 : Heap3) (v1 : std_string_String) : std_string_String =
    let v2 : string = "state_core.use_core_database (9) / effect core_state_heap / url_hash signal_update"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : std_string_String = v0.l2
    v5
and closure35 (v0 : Heap3) (v1 : Heap0) : Heap0 =
    let v2 : string = "state_core.use_core_database (10) / effect core_state_heap / data signal_update"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : Heap0 = v0.l3
    v5
and closure36 (v0 : Heap2) () : std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>> =
    let v1 : string = "state_core.use_core_database (11) / loading new_arc_memo"
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : leptos_prelude_ArcRwSignal<std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>> = v0.l1
    let v5 : string = "Box::pin($0)"
    let v6 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>>>> = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v8 : std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>> = Fable.Core.RustInterop.emitRustExpr v6 v7 
    v8
and method43 () : string =
    let v0 : string = "core-state-heap"
    v0
and method44 (v0 : Func0<Heap3, std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>>) : Func0<Heap3, std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>> =
    v0
and closure37 (v0 : Func0<Heap3, std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>>) (v1 : Heap3) : std_pin_Pin<Box<Dyn<std_future_Future<unit>>>> =
    let v2 : Func0<Heap3, std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>> = method44(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : std_pin_Pin<Box<Dyn<std_future_Future<unit>>>> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method45 (v0 : std_string_String) : std_string_String =
    v0
and closure38 () (v0 : leptos_prelude_ArcRwSignal<bool>) : US16 =
    US16_0(v0)
and method46 () : (leptos_prelude_ArcRwSignal<bool> -> US16) =
    closure38()
and closure39 () (v0 : bool) : bool =
    let v1 : string = "state_core.use_core_database (17) / effect new_core_state_heap / set_loaded |> signal_update true"
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    true
and method47 (v0 : web_sys_Storage) : web_sys_Storage =
    v0
and method48 () : string =
    let v0 : string = "core-state-heap"
    v0
and method49 (v0 : Heap3) : Heap3 =
    v0
and closure40 (v0 : Heap2) () : bool =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<bool> = v5.l0
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr v6 v7 
    v8
and method50 (v0 : Heap2) : (unit -> bool) =
    closure40(v0)
and closure41 (v0 : leptos_router_location_Location) () : string =
    let v1 : string = "$0.pathname"
    let v2 : leptos_prelude_Memo<std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = $"leptos::prelude::Memo::get(&$0)"
    let v4 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = "fable_library_rust::String_::fromString($0)"
    let v6 : string = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : string = "$0.search"
    let v8 : leptos_prelude_Memo<std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v7 
    let v9 : string = $"leptos::prelude::Memo::get(&$0)"
    let v10 : std_string_String = Fable.Core.RustInterop.emitRustExpr v8 v9 
    let v11 : string = "fable_library_rust::String_::fromString($0)"
    let v12 : string = Fable.Core.RustInterop.emitRustExpr v10 v11 
    let v13 : bool = v12 = ""
    let v16 : string =
        if v13 then
            let v14 : string = ""
            v14
        else
            let v15 : string = $"?{v12}"
            v15
    let v17 : string = v6 + v16 
    v17
and method51 (v0 : std_string_String) : std_string_String =
    v0
and method52 (v0 : std_string_String) : std_string_String =
    v0
and closure42 () (v0 : leptos_router_Url) : US20 =
    US20_0(v0)
and method53 () : (leptos_router_Url -> US20) =
    closure42()
and closure43 () (v0 : std_string_String) : US20 =
    US20_1(v0)
and method54 () : (std_string_String -> US20) =
    closure43()
and closure45 () struct (v0 : bool, v1 : std_string_String) : bool =
    v0
and method55 () : (struct (bool * std_string_String) -> bool) =
    closure45()
and method56 (v0 : Vec<struct (bool * std_string_String)>) : Vec<struct (bool * std_string_String)> =
    v0
and closure44 (v0 : Heap2) () : Vec<string> =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<Heap0> = v5.l3
    let v7 : string = "Box::pin($0)"
    let v8 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v6 v7 
    let v9 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v10 : Heap0 = Fable.Core.RustInterop.emitRustExpr v8 v9 
    let v11 : Vec<(bool * std_string_String)> = v10.l0
    let v12 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
    let v13 : bool = Fable.Core.RustInterop.emitRustExpr v11 v12 
    let v14 : string = "x"
    let v15 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr () v14 
    let (a, b) = v15 
    let v18 : bool = a
    let v19 : std_string_String = b
    let v24 : string = "true; $0 }).collect::<Vec<_>>()"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr struct (v18, v19) v24 
    let v26 : string = "_vec_map"
    let v27 : Vec<struct (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : (struct (bool * std_string_String) -> bool) = method55()
    let v29 : Vec<struct (bool * std_string_String)> = method56(v27)
    let v30 : string = "v29.into_iter().filter(|x| v28(x.clone().clone())).collect::<Vec<_>>()"
    let v31 : Vec<struct (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v30 
    let v32 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
    let v33 : bool = Fable.Core.RustInterop.emitRustExpr v31 v32 
    let v34 : string = "x"
    let struct (v35 : bool, v36 : std_string_String) = Fable.Core.RustInterop.emitRustExpr () v34 
    let v37 : string = "true; $0 }).collect::<Vec<_>>()"
    let v38 : bool = Fable.Core.RustInterop.emitRustExpr v36 v37 
    let v39 : string = "_vec_map"
    let v40 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v39 
    let v41 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
    let v42 : bool = Fable.Core.RustInterop.emitRustExpr v40 v41 
    let v43 : string = "x"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v43 
    let v45 : string = "fable_library_rust::String_::fromString($0)"
    let v46 : string = Fable.Core.RustInterop.emitRustExpr v44 v45 
    let v47 : string = "true; $0 }).collect::<Vec<_>>()"
    let v48 : bool = Fable.Core.RustInterop.emitRustExpr v46 v47 
    let v49 : string = "_vec_map"
    let v50 : Vec<string> = Fable.Core.RustInterop.emitRustExpr () v49 
    let v52 : string = $"%A{v50}"
    let v55 : string = "use_transactions.render (2) / accounts new_arc_memo / result: " + string v52 + ""
    let v56 : int64 = 200L
    let v57 : string = method8(v56, v55)
    let v58 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v59 : bool = Fable.Core.RustInterop.emitRustExpr v57 v58 
    v50
and method57 (v0 : Func0<string, struct (string * US23 * string * bool * bool)>) : Func0<string, struct (string * US23 * string * bool * bool)> =
    v0
and closure47 (v0 : Func0<string, struct (string * US23 * string * bool * bool)>) (v1 : string) : struct (string * US23 * string * bool * bool) =
    let v2 : Func0<string, struct (string * US23 * string * bool * bool)> = method57(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : string, v6 : US23, v7 : string, v8 : bool, v9 : bool) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9)
and closure46 (v0 : leptos_prelude_ArcMemo<Vec<string>>) () : (struct (string * US23 * string * bool * bool) []) =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let v7 : string = Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : string = "https://api3.nearblocks.io/v1/account/" + v7 + ""
    let v9 : US23 = US23_0
    let v10 : string = ""
    let func1_from_result = struct (v8, v9, v10, false, true) //
    let v11 : _ = func1_from_result
    let v12 : string = $"true; $0 /*"
    let v13 : bool = Fable.Core.RustInterop.emitRustExpr v11 v12 
    let v14 : string = $"*/ }}); //"
    let v15 : bool = Fable.Core.RustInterop.emitRustExpr () v14 
    let v16 : string = $"_func1_from_v3"
    let v17 : Func0<string, struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr () v16 
    let v18 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v19 : (string -> struct (string * US23 * string * bool * bool)) = closure47(v17)
    let v20 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr struct (v2, v19) v18 
    let v21 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v22 : (struct (string * US23 * string * bool * bool) []) = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v24 : string = $"%A{v22}"
    let v27 : string = "use_transactions.render (3) / accounts_metadata new_arc_memo / result: " + string v24 + ""
    let v28 : int64 = 200L
    let v29 : string = method8(v28, v27)
    let v30 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v31 : bool = Fable.Core.RustInterop.emitRustExpr v29 v30 
    v22
and method59 (v0 : int32, v1 : Mut0) : bool =
    let v2 : int32 = v1.l0
    let v3 : bool = v2 < v0
    v3
and method58 (v0 : Heap0) : Vec<int32> =
    let v1 : int32 = v0.l3
    let v2 : (int32 []) = Array.zeroCreate<int32> (v1)
    let v3 : Mut0 = {l0 = 0} : Mut0
    while method59(v1, v3) do
        let v5 : int32 = v3.l0
        v2.[int v5] <- v5
        let v6 : int32 = v5 + 1
        v3.l0 <- v6
        ()
    let v7 : string = "$0.to_vec()"
    let v8 : Vec<int32> = Fable.Core.RustInterop.emitRustExpr v2 v7 
    v8
and method60 (v0 : Func0<int32, struct (string * US23 * string * bool * bool)>) : Func0<int32, struct (string * US23 * string * bool * bool)> =
    v0
and closure49 (v0 : Func0<int32, struct (string * US23 * string * bool * bool)>) (v1 : int32) : struct (string * US23 * string * bool * bool) =
    let v2 : Func0<int32, struct (string * US23 * string * bool * bool)> = method60(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : string, v6 : US23, v7 : string, v8 : bool, v9 : bool) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9)
and method61 (v0 : Func0<string, struct (string * Vec<struct (string * US23 * string * bool * bool)>)>) : Func0<string, struct (string * Vec<struct (string * US23 * string * bool * bool)>)> =
    v0
and closure50 (v0 : Func0<string, struct (string * Vec<struct (string * US23 * string * bool * bool)>)>) (v1 : string) : struct (string * Vec<struct (string * US23 * string * bool * bool)>) =
    let v2 : Func0<string, struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = method61(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : string, v6 : Vec<struct (string * US23 * string * bool * bool)>) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6)
and closure48 (v0 : Heap2, v1 : leptos_prelude_ArcMemo<Vec<string>>) () : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> =
    let v2 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v3 : string = "Box::pin($0)"
    let v4 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v6 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : leptos_prelude_ArcRwSignal<Heap0> = v6.l3
    let v8 : string = "Box::pin($0)"
    let v9 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v10 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v11 : Heap0 = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v13 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v1 v12 
    let v14 : unit = ()
    let v15 : string = $"true; let _func1_from_v14 = Func1::from(move |value| {{ //"
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = $"value"
    let v18 : string = Fable.Core.RustInterop.emitRustExpr () v17 
    let v19 : Vec<int32> = method58(v11)
    let v20 : unit = ()
    let v21 : string = $"true; let _func1_from_v20 = Func1::from(move |value| {{ //"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr () v21 
    let v23 : string = $"value"
    let v24 : int32 = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : int32 = v24 + 1
    let v26 : string = "https://api3.nearblocks.io/v1/account/" + v18 + "/txns?&order=desc&page=" + string v25 + "&per_page=" + string 25 + ""
    let v27 : US23 = US23_0
    let v28 : string = ""
    let func1_from_result = struct (v26, v27, v28, false, true) //
    let v29 : _ = func1_from_result
    let v30 : string = $"true; $0 /*"
    let v31 : bool = Fable.Core.RustInterop.emitRustExpr v29 v30 
    let v32 : string = $"*/ }}); //"
    let v33 : bool = Fable.Core.RustInterop.emitRustExpr () v32 
    let v34 : string = $"_func1_from_v20"
    let v35 : Func0<int32, struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr () v34 
    let v36 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v37 : (int32 -> struct (string * US23 * string * bool * bool)) = closure49(v35)
    let v38 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr struct (v19, v37) v36 
    let func1_from_result = struct (v18, v38) //
    let v39 : _ = func1_from_result
    let v40 : string = $"true; $0 /*"
    let v41 : bool = Fable.Core.RustInterop.emitRustExpr v39 v40 
    let v42 : string = $"*/ }}); //"
    let v43 : bool = Fable.Core.RustInterop.emitRustExpr () v42 
    let v44 : string = $"_func1_from_v14"
    let v45 : Func0<string, struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr () v44 
    let v46 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v47 : (string -> struct (string * Vec<struct (string * US23 * string * bool * bool)>)) = closure50(v45)
    let v48 : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr struct (v13, v47) v46 
    let v50 : string = $"%A{v48}"
    let v53 : string = "use_transactions.render (4) / accounts_requests new_arc_memo / result: " + string v50 + ""
    let v54 : int64 = 200L
    let v55 : string = method8(v54, v53)
    let v56 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v57 : bool = Fable.Core.RustInterop.emitRustExpr v55 v56 
    v48
and method62 (v0 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<struct (string * US23 * string * bool * bool)>>) : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<struct (string * US23 * string * bool * bool)>> =
    v0
and closure52 (v0 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<struct (string * US23 * string * bool * bool)>>) struct (v1 : string, v2 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<struct (string * US23 * string * bool * bool)> =
    let v3 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<struct (string * US23 * string * bool * bool)>> = method62(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let v6 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v4 v5 
    v6
and closure54 (v0 : Vec<struct (string * US23 * string * bool * bool)>) (v1 : UH0) : UH0 =
    UH0_1(v0, v1)
and closure53 () (v0 : Vec<struct (string * US23 * string * bool * bool)>) : (UH0 -> UH0) =
    closure54(v0)
and method63 () : (Vec<struct (string * US23 * string * bool * bool)> -> (UH0 -> UH0)) =
    closure53()
and method65 (v0 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<struct (string * US23 * string * bool * bool)> =
    v0
and method66 (v0 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<struct (string * US23 * string * bool * bool)> =
    v0
and method64 (v0 : UH0, v1 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<struct (string * US23 * string * bool * bool)> =
    match v0 with
    | UH0_1(v2, v3) -> (* Cons *)
        let v4 : Vec<struct (string * US23 * string * bool * bool)> = method65(v2)
        let v5 : Vec<struct (string * US23 * string * bool * bool)> = method66(v1)
        let v6 : string = "true; let mut v5 = v5"
        let v7 : bool = Fable.Core.RustInterop.emitRustExpr () v6 
        let v8 : string = "true; v5.extend(v4)"
        let v9 : bool = Fable.Core.RustInterop.emitRustExpr () v8 
        let v10 : string = "v5"
        let v11 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr () v10 
        method64(v3, v11)
    | UH0_0 -> (* Nil *)
        v1
and closure51 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>>) () : Vec<struct (string * US23 * string * bool * bool)> =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let struct (v7 : string, v8 : Vec<struct (string * US23 * string * bool * bool)>) = Fable.Core.RustInterop.emitRustExpr () v6 
    let func1_from_result = v8 //
    let v9 : _ = func1_from_result
    let v10 : string = $"true; $0 /*"
    let v11 : bool = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = $"*/ }}); //"
    let v13 : bool = Fable.Core.RustInterop.emitRustExpr () v12 
    let v14 : string = $"_func1_from_v3"
    let v15 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr () v14 
    let v16 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v17 : (struct (string * Vec<struct (string * US23 * string * bool * bool)>) -> Vec<struct (string * US23 * string * bool * bool)>) = closure52(v15)
    let v18 : Vec<Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr struct (v2, v17) v16 
    let v19 : (struct (string * US23 * string * bool * bool) []) = [||]
    let v20 : string = "$0.to_vec()"
    let v21 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v19 v20 
    let v22 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v23 : (Vec<struct (string * US23 * string * bool * bool)> []) = Fable.Core.RustInterop.emitRustExpr v18 v22 
    let v25 : Vec<struct (string * US23 * string * bool * bool)> list = v23 |> Array.toList
    let v29 : ((Vec<struct (string * US23 * string * bool * bool)> -> (UH0 -> UH0)) -> (Vec<struct (string * US23 * string * bool * bool)> list -> (UH0 -> UH0))) = List.foldBack
    let v30 : (Vec<struct (string * US23 * string * bool * bool)> -> (UH0 -> UH0)) = method63()
    let v31 : (Vec<struct (string * US23 * string * bool * bool)> list -> (UH0 -> UH0)) = v29 v30
    let v32 : (UH0 -> UH0) = v31 v25
    let v33 : UH0 = UH0_0
    let v34 : UH0 = v32 v33
    let v59 : Vec<struct (string * US23 * string * bool * bool)> = method64(v34, v21)
    let v61 : string = $"%A{v59}"
    let v64 : string = "use_transactions.render (5) / txns_requests new_arc_memo / result: " + string v61 + ""
    let v65 : int64 = 200L
    let v66 : string = method8(v65, v64)
    let v67 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v68 : bool = Fable.Core.RustInterop.emitRustExpr v66 v67 
    v59
and method67 (v0 : Func0<struct (string * US23 * string * bool * bool), string>) : Func0<struct (string * US23 * string * bool * bool), string> =
    v0
and closure56 (v0 : Func0<struct (string * US23 * string * bool * bool), string>) struct (v1 : string, v2 : US23, v3 : string, v4 : bool, v5 : bool) : string =
    let v6 : Func0<struct (string * US23 * string * bool * bool), string> = method67(v0)
    let func1_move_x = struct (v1, v2, v3, v4, v5) //
    let v7 : _ = func1_move_x
    let v8 : string = "(move |x| v6(x))($0)"
    let v9 : string = Fable.Core.RustInterop.emitRustExpr v7 v8 
    v9
and method68 (v0 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<string>>) : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<string>> =
    v0
and closure57 (v0 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<string>>) struct (v1 : string, v2 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<string> =
    let v3 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<string>> = method68(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let v6 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v4 v5 
    v6
and closure59 (v0 : Vec<string>) (v1 : UH1) : UH1 =
    UH1_1(v0, v1)
and closure58 () (v0 : Vec<string>) : (UH1 -> UH1) =
    closure59(v0)
and method69 () : (Vec<string> -> (UH1 -> UH1)) =
    closure58()
and method71 (v0 : Vec<string>) : Vec<string> =
    v0
and method72 (v0 : Vec<string>) : Vec<string> =
    v0
and method70 (v0 : UH1, v1 : Vec<string>) : Vec<string> =
    match v0 with
    | UH1_1(v2, v3) -> (* Cons *)
        let v4 : Vec<string> = method71(v2)
        let v5 : Vec<string> = method72(v1)
        let v6 : string = "true; let mut v5 = v5"
        let v7 : bool = Fable.Core.RustInterop.emitRustExpr () v6 
        let v8 : string = "true; v5.extend(v4)"
        let v9 : bool = Fable.Core.RustInterop.emitRustExpr () v8 
        let v10 : string = "v5"
        let v11 : Vec<string> = Fable.Core.RustInterop.emitRustExpr () v10 
        method70(v3, v11)
    | UH1_0 -> (* Nil *)
        v1
and closure55 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>>) () : (string []) =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let struct (v7 : string, v8 : Vec<struct (string * US23 * string * bool * bool)>) = Fable.Core.RustInterop.emitRustExpr () v6 
    let v9 : unit = ()
    let v10 : string = $"true; let _func1_from_v9 = Func1::from(move |value| {{ //"
    let v11 : bool = Fable.Core.RustInterop.emitRustExpr () v10 
    let v12 : string = $"value"
    let struct (v13 : string, v14 : US23, v15 : string, v16 : bool, v17 : bool) = Fable.Core.RustInterop.emitRustExpr () v12 
    let func1_from_result = v7 //
    let v18 : _ = func1_from_result
    let v19 : string = $"true; $0 /*"
    let v20 : bool = Fable.Core.RustInterop.emitRustExpr v18 v19 
    let v21 : string = $"*/ }}); //"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr () v21 
    let v23 : string = $"_func1_from_v9"
    let v24 : Func0<struct (string * US23 * string * bool * bool), string> = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v26 : (struct (string * US23 * string * bool * bool) -> string) = closure56(v24)
    let v27 : Vec<string> = Fable.Core.RustInterop.emitRustExpr struct (v8, v26) v25 
    let func1_from_result = v27 //
    let v28 : _ = func1_from_result
    let v29 : string = $"true; $0 /*"
    let v30 : bool = Fable.Core.RustInterop.emitRustExpr v28 v29 
    let v31 : string = $"*/ }}); //"
    let v32 : bool = Fable.Core.RustInterop.emitRustExpr () v31 
    let v33 : string = $"_func1_from_v3"
    let v34 : Func0<struct (string * Vec<struct (string * US23 * string * bool * bool)>), Vec<string>> = Fable.Core.RustInterop.emitRustExpr () v33 
    let v35 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v36 : (struct (string * Vec<struct (string * US23 * string * bool * bool)>) -> Vec<string>) = closure57(v34)
    let v37 : Vec<Vec<string>> = Fable.Core.RustInterop.emitRustExpr struct (v2, v36) v35 
    let v38 : (string []) = [||]
    let v39 : string = "$0.to_vec()"
    let v40 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v38 v39 
    let v41 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v42 : (Vec<string> []) = Fable.Core.RustInterop.emitRustExpr v37 v41 
    let v44 : Vec<string> list = v42 |> Array.toList
    let v48 : ((Vec<string> -> (UH1 -> UH1)) -> (Vec<string> list -> (UH1 -> UH1))) = List.foldBack
    let v49 : (Vec<string> -> (UH1 -> UH1)) = method69()
    let v50 : (Vec<string> list -> (UH1 -> UH1)) = v48 v49
    let v51 : (UH1 -> UH1) = v50 v44
    let v52 : UH1 = UH1_0
    let v53 : UH1 = v51 v52
    let v78 : Vec<string> = method70(v53, v40)
    let v79 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v80 : (string []) = Fable.Core.RustInterop.emitRustExpr v78 v79 
    let v82 : string = $"%A{v80}"
    let v85 : string = "use_transactions.render (6) / urls_accounts new_arc_memo / result: " + string v82 + ""
    let v86 : int64 = 200L
    let v87 : string = method8(v86, v85)
    let v88 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v89 : bool = Fable.Core.RustInterop.emitRustExpr v87 v88 
    v80
and method73 (v0 : Func0<crate_model_near_nearblocks_Action, struct (std_string_String * std_string_String option)>) : Func0<crate_model_near_nearblocks_Action, struct (std_string_String * std_string_String option)> =
    v0
and closure61 (v0 : Func0<crate_model_near_nearblocks_Action, struct (std_string_String * std_string_String option)>) (v1 : crate_model_near_nearblocks_Action) : struct (std_string_String * std_string_String option) =
    let v2 : Func0<crate_model_near_nearblocks_Action, struct (std_string_String * std_string_String option)> = method73(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : std_string_String option) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6)
and method74 (v0 : (struct (std_string_String * std_string_String option) [])) : (struct (std_string_String * std_string_String option) []) =
    v0
and closure62 () (v0 : Vec<std_string_String>) : (std_string_String []) =
    let v1 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v2 : (std_string_String []) = Fable.Core.RustInterop.emitRustExpr v0 v1 
    v2
and method75 () : (Vec<std_string_String> -> (std_string_String [])) =
    closure62()
and method76 (v0 : Func0<crate_model_near_nearblocks_Txn, struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))>) : Func0<crate_model_near_nearblocks_Txn, struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> =
    v0
and closure63 (v0 : Func0<crate_model_near_nearblocks_Txn, struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))>) (v1 : crate_model_near_nearblocks_Txn) : struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) =
    let v2 : Func0<crate_model_near_nearblocks_Txn, struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = method76(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : std_string_String, v7 : std_string_String, v8 : std_string_String, v9 : std_string_String, v10 : std_string_String, v11 : uint32, v12 : (struct (std_string_String * std_string_String option) []), v13 : float, v14 : bool, v15 : float, v16 : (std_string_String [])) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16)
and method77 (v0 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) =
    v0
and closure60 () (v0 : crate_model_near_nearblocks_Root) : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) =
    let v1 : string = "$0.txns"
    let v2 : Vec<crate_model_near_nearblocks_Txn> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let v7 : crate_model_near_nearblocks_Txn = Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : string = "$0.receipt_id"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v10 : string = "$0.predecessor_account_id"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v10 
    let v12 : string = "$0.receiver_account_id"
    let v13 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v12 
    let v14 : string = "$0.transaction_hash"
    let v15 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v14 
    let v16 : string = "$0.included_in_block_hash"
    let v17 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v16 
    let v18 : string = "$0.block_timestamp"
    let v19 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v18 
    let v20 : string = "$0.block"
    let v21 : crate_model_near_nearblocks_Block = Fable.Core.RustInterop.emitRustExpr v7 v20 
    let v22 : string = "$0.block_height"
    let v23 : uint32 = Fable.Core.RustInterop.emitRustExpr v21 v22 
    let v24 : string = "$0.actions"
    let v25 : Vec<crate_model_near_nearblocks_Action> = Fable.Core.RustInterop.emitRustExpr v7 v24 
    let v26 : unit = ()
    let v27 : string = $"true; let _func1_from_v26 = Func1::from(move |value| {{ //"
    let v28 : bool = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : string = $"value"
    let v30 : crate_model_near_nearblocks_Action = Fable.Core.RustInterop.emitRustExpr () v29 
    let v31 : string = "$0.action"
    let v32 : std_string_String = Fable.Core.RustInterop.emitRustExpr v30 v31 
    let v33 : string = "$0.method"
    let v34 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v30 v33 
    let func1_from_result = struct (v32, v34) //
    let v35 : _ = func1_from_result
    let v36 : string = $"true; $0 /*"
    let v37 : bool = Fable.Core.RustInterop.emitRustExpr v35 v36 
    let v38 : string = $"*/ }}); //"
    let v39 : bool = Fable.Core.RustInterop.emitRustExpr () v38 
    let v40 : string = $"_func1_from_v26"
    let v41 : Func0<crate_model_near_nearblocks_Action, struct (std_string_String * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr () v40 
    let v42 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v43 : (crate_model_near_nearblocks_Action -> struct (std_string_String * std_string_String option)) = closure61(v41)
    let v44 : Vec<struct (std_string_String * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr struct (v25, v43) v42 
    let v45 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v46 : (struct (std_string_String * std_string_String option) []) = Fable.Core.RustInterop.emitRustExpr v44 v45 
    let v47 : (struct (std_string_String * std_string_String option) []) = method74(v46)
    let v48 : string = "$0.actions_agg"
    let v49 : crate_model_near_nearblocks_ActionsAgg = Fable.Core.RustInterop.emitRustExpr v7 v48 
    let v50 : string = "$0.deposit"
    let v51 : float = Fable.Core.RustInterop.emitRustExpr v49 v50 
    let v52 : string = "$0.outcomes"
    let v53 : crate_model_near_nearblocks_Outcomes = Fable.Core.RustInterop.emitRustExpr v7 v52 
    let v54 : string = "$0.status"
    let v55 : bool = Fable.Core.RustInterop.emitRustExpr v53 v54 
    let v56 : string = "$0.outcomes_agg"
    let v57 : crate_model_near_nearblocks_OutcomesAgg = Fable.Core.RustInterop.emitRustExpr v7 v56 
    let v58 : string = "$0.transaction_fee"
    let v59 : float = Fable.Core.RustInterop.emitRustExpr v57 v58 
    let v60 : string = "$0.logs"
    let v61 : Vec<std_string_String> option = Fable.Core.RustInterop.emitRustExpr v7 v60 
    let v63 : (Vec<std_string_String> -> (std_string_String [])) = method75()
    let v64 : (std_string_String []) option = v61 |> Option.map v63 
    let v77 : (std_string_String []) = [||]
    let v79 : (std_string_String []) = v64 |> Option.defaultValue v77 
    let func1_from_result = struct (v9, v11, v13, v15, v17, v19, v23, v47, v51, v55, v59, v79) //
    let v82 : _ = func1_from_result
    let v83 : string = $"true; $0 /*"
    let v84 : bool = Fable.Core.RustInterop.emitRustExpr v82 v83 
    let v85 : string = $"*/ }}); //"
    let v86 : bool = Fable.Core.RustInterop.emitRustExpr () v85 
    let v87 : string = $"_func1_from_v3"
    let v88 : Func0<crate_model_near_nearblocks_Txn, struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr () v87 
    let v89 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v90 : (crate_model_near_nearblocks_Txn -> struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))) = closure63(v88)
    let v91 : Vec<struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr struct (v2, v90) v89 
    let v92 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v93 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) = Fable.Core.RustInterop.emitRustExpr v91 v92 
    let v94 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) = method77(v93)
    v94
and closure64 (v0 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>>) () : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option =
    let v1 : string = "state_core.use_requests (2) / database_memo"
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v5 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v0 v4 
    let v6 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v7 : bool = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : string = "x"
    let v9 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : (unit -> unit) = closure8()
    let _v10 = true
    let v11 : string = "PartialEqWrapper($0)"
    let v12 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v9 v11 
    let v13 : string = "true; $0 })"
    let v14 : bool = Fable.Core.RustInterop.emitRustExpr v12 v13 
    let v15 : string = "_optionm_map_"
    let v16 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr () v15 
    v16
and method79 (v0 : string) : string =
    v0
and method80 (v0 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>>) : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> =
    v0
and closure65 (v0 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>>) struct (v1 : string, v2 : US23, v3 : string, v4 : bool, v5 : bool) : std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>> =
    let v6 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = method80(v0)
    let func1_move_x = struct (v1, v2, v3, v4, v5) //
    let v7 : _ = func1_move_x
    let v8 : string = "(move |x| v6(x))($0)"
    let v9 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr v7 v8 
    v9
and method81 (v0 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>>) : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> =
    v0
and closure66 (v0 : leptos_prelude_ArcLocalResource<Result<Vec<Heap4 option>, std_string_String>>) () : Result<Vec<Heap4 option>, std_string_String> option =
    let v1 : string = "state_core.use_requests (5) / state_data_func"
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : web_sys_Window = method28()
    let v5 : Result<web_sys_Storage option, wasm_bindgen_JsValue> = method29(v4)
    let v6 : (web_sys_Storage option -> US9) = method30()
    let v7 : (wasm_bindgen_JsValue -> US9) = method31()
    let v8 : US9 = match v5 with Ok x -> v6 x | Error x -> v7 x
    let v34 : US10 =
        match v8 with
        | US9_1(v31) -> (* Error *)
            US10_1(v31)
        | US9_0(v9) -> (* Ok *)
            let v11 : (web_sys_Storage -> US11) = method32()
            let v12 : US11 option = v9 |> Option.map v11 
            let v25 : US11 = US11_1
            let v26 : US11 = v12 |> Option.defaultValue v25 
            US10_0(v26)
    let v42 : Result<Vec<Heap4 option>, std_string_String> option =
        match v34 with
        | US10_0(v35) -> (* Ok *)
            match v35 with
            | US11_0(v36) -> (* Some *)
                let v37 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
                let v38 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v0 v37 
                v38
            | _ ->
                let v39 : Result<Vec<Heap4 option>, std_string_String> option = None
                v39
        | _ ->
            let v41 : Result<Vec<Heap4 option>, std_string_String> option = None
            v41
    let v44 : string = $"%A{v42}"
    let v47 : string = "state_core.use_requests (6) / state_data_func func0 / result: " + string v44 + ""
    let v48 : int64 = 200L
    let v49 : string = method8(v48, v47)
    let v50 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v51 : bool = Fable.Core.RustInterop.emitRustExpr v49 v50 
    v42
and closure67 () (v0 : Result<Vec<Heap4 option>, std_string_String>) : US26 =
    US26_0(v0)
and method82 () : (Result<Vec<Heap4 option>, std_string_String> -> US26) =
    closure67()
and closure68 () (v0 : Vec<Heap4 option>) : US24 =
    US24_0(v0)
and method83 () : (Vec<Heap4 option> -> US24) =
    closure68()
and closure69 () (v0 : std_string_String) : US24 =
    US24_1(v0)
and method84 () : (std_string_String -> US24) =
    closure69()
and closure70 () (v0 : Heap4) : US25 =
    US25_0(v0)
and method85 () : (Heap4 -> US25) =
    closure70()
and closure73 () (v0 : US25) : US32 =
    US32_0(v0)
and method87 () : (US25 -> US32) =
    closure73()
and method88 (v0 : US23) : US23 =
    v0
and method89 (v0 : string) : string =
    v0
and method90 (v0 : std_string_String) : std_string_String =
    v0
and method91 (v0 : string) : string =
    v0
and method92 (v0 : std_string_String) : std_string_String =
    v0
and method93 (v0 : reqwest_RequestBuilder) : reqwest_RequestBuilder =
    v0
and method94 (v0 : reqwest_RequestBuilder) : reqwest_RequestBuilder =
    v0
and closure74 () (v0 : reqwest_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method95 () : (reqwest_Error -> std_string_String) =
    closure74()
and closure72 (v0 : US27, v1 : int32) struct (v2 : string, v3 : US23, v4 : string, v5 : bool, v6 : bool) : std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>> =
    let v7 : string = "true; let __future_init = Box::pin(/*"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr () v7 
    let v9 : string = "*/ async move { /*"
    let v10 : bool = Fable.Core.RustInterop.emitRustExpr () v9 
    let v11 : string = "*/ ()"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr () v11 
    let v61 : US29 =
        match v0 with
        | US27_1 -> (* None *)
            US29_1
        | US27_0(v13) -> (* Some *)
            let v57 : US30 =
                match v13 with
                | US28_1(v54) -> (* Error *)
                    US30_1(v54)
                | US28_0(v14) -> (* Ok *)
                    let v15 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v16 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v14 v15 
                    let v17 : US25 option = v16 |> Array.tryItem v1 
                    let v19 : (US25 -> US32) = method87()
                    let v20 : US32 option = v17 |> Option.map v19 
                    let v33 : US32 = US32_1
                    let v34 : US32 = v20 |> Option.defaultValue v33 
                    let v44 : US25 =
                        match v34 with
                        | US32_0(v38) -> (* Some *)
                            match v38 with
                            | US25_0(v39) -> (* Some *)
                                US25_0(v39)
                            | _ ->
                                US25_1
                        | _ ->
                            US25_1
                    let v52 : US31 =
                        match v44 with
                        | US25_1 -> (* None *)
                            US31_1
                        | US25_0(v45) -> (* Some *)
                            let v46 : std_string_String = v45.l0
                            let v47 : string = "fable_library_rust::String_::fromString($0)"
                            let v48 : string = Fable.Core.RustInterop.emitRustExpr v46 v47 
                            US31_0(v48)
                    US30_0(v52)
            US29_0(v57)
    let v63 : string = $"%A{struct (v3, v5, v6)}"
    let v66 : int64 = 400L
    let v67 : string = method8(v66, v63)
    let v69 : string = $"%A{v0}"
    let v72 : int64 = 400L
    let v73 : string = method8(v72, v69)
    let v75 : string = $"%A{v61}"
    let v78 : int64 = 400L
    let v79 : string = method8(v78, v75)
    let v104 : bool =
        if v6 then
            true
        else
            match v0 with
            | US27_0(v80) -> (* Some *)
                match v80 with
                | US28_0(v81) -> (* Ok *)
                    let v82 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v83 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v81 v82 
                    let v84 : int32 = v83.Length
                    let v85 : bool = v84 = 0
                    if v85 then
                        false
                    else
                        match v61 with
                        | US29_0(v86) -> (* Some *)
                            match v86 with
                            | US30_0(v87) -> (* Ok *)
                                match v87 with
                                | US31_1 -> (* None *)
                                    true
                                | _ ->
                                    false
                            | _ ->
                                false
                        | _ ->
                            false
                | _ ->
                    match v61 with
                    | US29_0(v92) -> (* Some *)
                        match v92 with
                        | US30_0(v93) -> (* Ok *)
                            match v93 with
                            | US31_1 -> (* None *)
                                true
                            | _ ->
                                false
                        | _ ->
                            false
                    | _ ->
                        false
            | _ ->
                match v61 with
                | US29_0(v98) -> (* Some *)
                    match v98 with
                    | US30_0(v99) -> (* Ok *)
                        match v99 with
                        | US31_1 -> (* None *)
                            true
                        | _ ->
                            false
                    | _ ->
                        false
                | _ ->
                    false
    let v105 : string = "state_core.use_requests (9) / result memo / state_data: " + string v73 + " / state_data': " + string v79 + " / request: " + string v67 + " / should_fetch: " + string v104 + ""
    let v106 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v107 : bool = Fable.Core.RustInterop.emitRustExpr v105 v106 
    let v108 : bool = v104 = false
    let v518 : US33 =
        if v108 then
            let v109 : string option = None
            US33_0(v109)
        else
            let v111 : US23 = method88(v3)
            let v253 : reqwest_RequestBuilder =
                match v111 with
                | US23_0 -> (* Get *)
                    let v112 : string = method89(v2)
                    (* run_target_args'
                    let v117 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v118 : string = "&*$0"
                    let v119 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v112 v118 
                    let _run_target_args'_v117 = v119 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v120 : string = "&*$0"
                    let v121 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v112 v120 
                    let _run_target_args'_v117 = v121 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v122 : string = "&*$0"
                    let v123 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v112 v122 
                    let _run_target_args'_v117 = v123 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v125 : Ref<Str> = v112 |> unbox<Ref<Str>>
                    let _run_target_args'_v117 = v125 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v129 : Ref<Str> = v112 |> unbox<Ref<Str>>
                    let _run_target_args'_v117 = v129 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v133 : Ref<Str> = v112 |> unbox<Ref<Str>>
                    let _run_target_args'_v117 = v133 
                    #endif
#else
                    let v137 : Ref<Str> = v112 |> unbox<Ref<Str>>
                    let _run_target_args'_v117 = v137 
                    #endif
                    let v140 : Ref<Str> = _run_target_args'_v117 
                    (* run_target_args'
                    let v150 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v151 : string = "String::from($0)"
                    let v152 : std_string_String = Fable.Core.RustInterop.emitRustExpr v140 v151 
                    let _run_target_args'_v150 = v152 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v153 : string = "String::from($0)"
                    let v154 : std_string_String = Fable.Core.RustInterop.emitRustExpr v140 v153 
                    let _run_target_args'_v150 = v154 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v155 : string = "String::from($0)"
                    let v156 : std_string_String = Fable.Core.RustInterop.emitRustExpr v140 v155 
                    let _run_target_args'_v150 = v156 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v158 : std_string_String = v140 |> unbox<std_string_String>
                    let _run_target_args'_v150 = v158 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v162 : std_string_String = v140 |> unbox<std_string_String>
                    let _run_target_args'_v150 = v162 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v166 : std_string_String = v140 |> unbox<std_string_String>
                    let _run_target_args'_v150 = v166 
                    #endif
#else
                    let v170 : std_string_String = v140 |> unbox<std_string_String>
                    let _run_target_args'_v150 = v170 
                    #endif
                    let v173 : std_string_String = _run_target_args'_v150 
                    let v179 : std_string_String = method90(v173)
                    let v180 : string = "reqwest_wasm::Client::builder().build().map_err(|err| err.to_string())?.get(v179)"
                    let v181 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr () v180 
                    v181
                | US23_1 -> (* Post *)
                    let v182 : string = method91(v2)
                    (* run_target_args'
                    let v187 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v188 : string = "&*$0"
                    let v189 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v182 v188 
                    let _run_target_args'_v187 = v189 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v190 : string = "&*$0"
                    let v191 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v182 v190 
                    let _run_target_args'_v187 = v191 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v192 : string = "&*$0"
                    let v193 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v182 v192 
                    let _run_target_args'_v187 = v193 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v195 : Ref<Str> = v182 |> unbox<Ref<Str>>
                    let _run_target_args'_v187 = v195 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v199 : Ref<Str> = v182 |> unbox<Ref<Str>>
                    let _run_target_args'_v187 = v199 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v203 : Ref<Str> = v182 |> unbox<Ref<Str>>
                    let _run_target_args'_v187 = v203 
                    #endif
#else
                    let v207 : Ref<Str> = v182 |> unbox<Ref<Str>>
                    let _run_target_args'_v187 = v207 
                    #endif
                    let v210 : Ref<Str> = _run_target_args'_v187 
                    (* run_target_args'
                    let v220 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v221 : string = "String::from($0)"
                    let v222 : std_string_String = Fable.Core.RustInterop.emitRustExpr v210 v221 
                    let _run_target_args'_v220 = v222 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v223 : string = "String::from($0)"
                    let v224 : std_string_String = Fable.Core.RustInterop.emitRustExpr v210 v223 
                    let _run_target_args'_v220 = v224 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v225 : string = "String::from($0)"
                    let v226 : std_string_String = Fable.Core.RustInterop.emitRustExpr v210 v225 
                    let _run_target_args'_v220 = v226 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v228 : std_string_String = v210 |> unbox<std_string_String>
                    let _run_target_args'_v220 = v228 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v232 : std_string_String = v210 |> unbox<std_string_String>
                    let _run_target_args'_v220 = v232 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v236 : std_string_String = v210 |> unbox<std_string_String>
                    let _run_target_args'_v220 = v236 
                    #endif
#else
                    let v240 : std_string_String = v210 |> unbox<std_string_String>
                    let _run_target_args'_v220 = v240 
                    #endif
                    let v243 : std_string_String = _run_target_args'_v220 
                    let v249 : std_string_String = method92(v243)
                    let v250 : string = "reqwest_wasm::Client::builder().build().map_err(|err| err.to_string())?.post(v249)"
                    let v251 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr () v250 
                    v251
            (* run_target_args'
            let v258 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v259 : string = "&*$0"
            let v260 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v259 
            let _run_target_args'_v258 = v260 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v261 : string = "&*$0"
            let v262 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v261 
            let _run_target_args'_v258 = v262 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v263 : string = "&*$0"
            let v264 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v263 
            let _run_target_args'_v258 = v264 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v266 : Ref<Str> = v4 |> unbox<Ref<Str>>
            let _run_target_args'_v258 = v266 
            #endif
#if FABLE_COMPILER_PYTHON
            let v270 : Ref<Str> = v4 |> unbox<Ref<Str>>
            let _run_target_args'_v258 = v270 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v274 : Ref<Str> = v4 |> unbox<Ref<Str>>
            let _run_target_args'_v258 = v274 
            #endif
#else
            let v278 : Ref<Str> = v4 |> unbox<Ref<Str>>
            let _run_target_args'_v258 = v278 
            #endif
            let v281 : Ref<Str> = _run_target_args'_v258 
            (* run_target_args'
            let v291 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v292 : string = "String::from($0)"
            let v293 : std_string_String = Fable.Core.RustInterop.emitRustExpr v281 v292 
            let _run_target_args'_v291 = v293 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v294 : string = "String::from($0)"
            let v295 : std_string_String = Fable.Core.RustInterop.emitRustExpr v281 v294 
            let _run_target_args'_v291 = v295 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v296 : string = "String::from($0)"
            let v297 : std_string_String = Fable.Core.RustInterop.emitRustExpr v281 v296 
            let _run_target_args'_v291 = v297 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v299 : std_string_String = v281 |> unbox<std_string_String>
            let _run_target_args'_v291 = v299 
            #endif
#if FABLE_COMPILER_PYTHON
            let v303 : std_string_String = v281 |> unbox<std_string_String>
            let _run_target_args'_v291 = v303 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v307 : std_string_String = v281 |> unbox<std_string_String>
            let _run_target_args'_v291 = v307 
            #endif
#else
            let v311 : std_string_String = v281 |> unbox<std_string_String>
            let _run_target_args'_v291 = v311 
            #endif
            let v314 : std_string_String = _run_target_args'_v291 
            let v320 : string = "reqwest_wasm::RequestBuilder::body(v253, $0)"
            let v321 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr v314 v320 
            let v322 : bool = v5 = false
            let v465 : reqwest_RequestBuilder =
                if v322 then
                    let v323 : string = "v321"
                    let v324 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr () v323 
                    v324
                else
                    let v325 : string = "reqwest_wasm::header::CONTENT_TYPE.to_string()"
                    let v326 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v325 
                    let v327 : string = "fable_library_rust::String_::fromString($0)"
                    let v328 : string = Fable.Core.RustInterop.emitRustExpr v326 v327 
                    let v329 : reqwest_RequestBuilder = method93(v321)
                    (* run_target_args'
                    let v334 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v335 : string = "&*$0"
                    let v336 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v328 v335 
                    let _run_target_args'_v334 = v336 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v337 : string = "&*$0"
                    let v338 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v328 v337 
                    let _run_target_args'_v334 = v338 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v339 : string = "&*$0"
                    let v340 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v328 v339 
                    let _run_target_args'_v334 = v340 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v342 : Ref<Str> = v328 |> unbox<Ref<Str>>
                    let _run_target_args'_v334 = v342 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v346 : Ref<Str> = v328 |> unbox<Ref<Str>>
                    let _run_target_args'_v334 = v346 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v350 : Ref<Str> = v328 |> unbox<Ref<Str>>
                    let _run_target_args'_v334 = v350 
                    #endif
#else
                    let v354 : Ref<Str> = v328 |> unbox<Ref<Str>>
                    let _run_target_args'_v334 = v354 
                    #endif
                    let v357 : Ref<Str> = _run_target_args'_v334 
                    (* run_target_args'
                    let v367 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v368 : string = "String::from($0)"
                    let v369 : std_string_String = Fable.Core.RustInterop.emitRustExpr v357 v368 
                    let _run_target_args'_v367 = v369 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v370 : string = "String::from($0)"
                    let v371 : std_string_String = Fable.Core.RustInterop.emitRustExpr v357 v370 
                    let _run_target_args'_v367 = v371 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v372 : string = "String::from($0)"
                    let v373 : std_string_String = Fable.Core.RustInterop.emitRustExpr v357 v372 
                    let _run_target_args'_v367 = v373 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v375 : std_string_String = v357 |> unbox<std_string_String>
                    let _run_target_args'_v367 = v375 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v379 : std_string_String = v357 |> unbox<std_string_String>
                    let _run_target_args'_v367 = v379 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v383 : std_string_String = v357 |> unbox<std_string_String>
                    let _run_target_args'_v367 = v383 
                    #endif
#else
                    let v387 : std_string_String = v357 |> unbox<std_string_String>
                    let _run_target_args'_v367 = v387 
                    #endif
                    let v390 : std_string_String = _run_target_args'_v367 
                    let v396 : string = "application/json"
                    (* run_target_args'
                    let v401 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v402 : string = "&*$0"
                    let v403 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v396 v402 
                    let _run_target_args'_v401 = v403 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v404 : string = "&*$0"
                    let v405 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v396 v404 
                    let _run_target_args'_v401 = v405 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v406 : string = "&*$0"
                    let v407 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v396 v406 
                    let _run_target_args'_v401 = v407 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v409 : Ref<Str> = v396 |> unbox<Ref<Str>>
                    let _run_target_args'_v401 = v409 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v413 : Ref<Str> = v396 |> unbox<Ref<Str>>
                    let _run_target_args'_v401 = v413 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v417 : Ref<Str> = v396 |> unbox<Ref<Str>>
                    let _run_target_args'_v401 = v417 
                    #endif
#else
                    let v421 : Ref<Str> = v396 |> unbox<Ref<Str>>
                    let _run_target_args'_v401 = v421 
                    #endif
                    let v424 : Ref<Str> = _run_target_args'_v401 
                    (* run_target_args'
                    let v434 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v435 : string = "String::from($0)"
                    let v436 : std_string_String = Fable.Core.RustInterop.emitRustExpr v424 v435 
                    let _run_target_args'_v434 = v436 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v437 : string = "String::from($0)"
                    let v438 : std_string_String = Fable.Core.RustInterop.emitRustExpr v424 v437 
                    let _run_target_args'_v434 = v438 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v439 : string = "String::from($0)"
                    let v440 : std_string_String = Fable.Core.RustInterop.emitRustExpr v424 v439 
                    let _run_target_args'_v434 = v440 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v442 : std_string_String = v424 |> unbox<std_string_String>
                    let _run_target_args'_v434 = v442 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v446 : std_string_String = v424 |> unbox<std_string_String>
                    let _run_target_args'_v434 = v446 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v450 : std_string_String = v424 |> unbox<std_string_String>
                    let _run_target_args'_v434 = v450 
                    #endif
#else
                    let v454 : std_string_String = v424 |> unbox<std_string_String>
                    let _run_target_args'_v434 = v454 
                    #endif
                    let v457 : std_string_String = _run_target_args'_v434 
                    let v463 : string = "reqwest_wasm::RequestBuilder::header(v329, $0, $1)"
                    let v464 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr struct (v390, v457) v463 
                    v464
            let v466 : reqwest_RequestBuilder = method94(v465)
            let v467 : string = "Box::pin(reqwest_wasm::RequestBuilder::send(v466))"
            let v468 : std_pin_Pin<Box<Dyn<std_future_Future<Result<reqwest_Response, reqwest_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v467 
            let v469 : string = "v468.await"
            let v470 : Result<reqwest_Response, reqwest_Error> = Fable.Core.RustInterop.emitRustExpr () v469 
            let v471 : (reqwest_Error -> std_string_String) = method95()
            (* run_target_args'
            let v473 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v474 : string = "$0.map_err(|x| $1(x))"
            let v475 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v470, v471) v474 
            let _run_target_args'_v473 = v475 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v476 : string = "$0.map_err(|x| $1(x))"
            let v477 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v470, v471) v476 
            let _run_target_args'_v473 = v477 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v478 : string = "$0.map_err(|x| $1(x))"
            let v479 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v470, v471) v478 
            let _run_target_args'_v473 = v479 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v480 : Result<reqwest_Response, std_string_String> = match v470 with Ok x -> Ok x | Error x -> Error (v471 x)
            let _run_target_args'_v473 = v480 
            #endif
#if FABLE_COMPILER_PYTHON
            let v481 : Result<reqwest_Response, std_string_String> = match v470 with Ok x -> Ok x | Error x -> Error (v471 x)
            let _run_target_args'_v473 = v481 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v482 : Result<reqwest_Response, std_string_String> = match v470 with Ok x -> Ok x | Error x -> Error (v471 x)
            let _run_target_args'_v473 = v482 
            #endif
#else
            let v483 : Result<reqwest_Response, std_string_String> = match v470 with Ok x -> Ok x | Error x -> Error (v471 x)
            let _run_target_args'_v473 = v483 
            #endif
            let v484 : Result<reqwest_Response, std_string_String> = _run_target_args'_v473 
            let v487 : string = "$0?"
            let v488 : reqwest_Response = Fable.Core.RustInterop.emitRustExpr v484 v487 
            let v489 : string = "Box::pin(reqwest_wasm::Response::text(v488))"
            let v490 : std_pin_Pin<Box<Dyn<std_future_Future<Result<std_string_String, reqwest_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v489 
            let v491 : string = "v490.await"
            let v492 : Result<std_string_String, reqwest_Error> = Fable.Core.RustInterop.emitRustExpr () v491 
            let v493 : (reqwest_Error -> std_string_String) = method95()
            (* run_target_args'
            let v495 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v496 : string = "$0.map_err(|x| $1(x))"
            let v497 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v492, v493) v496 
            let _run_target_args'_v495 = v497 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v498 : string = "$0.map_err(|x| $1(x))"
            let v499 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v492, v493) v498 
            let _run_target_args'_v495 = v499 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v500 : string = "$0.map_err(|x| $1(x))"
            let v501 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v492, v493) v500 
            let _run_target_args'_v495 = v501 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v502 : Result<std_string_String, std_string_String> = match v492 with Ok x -> Ok x | Error x -> Error (v493 x)
            let _run_target_args'_v495 = v502 
            #endif
#if FABLE_COMPILER_PYTHON
            let v503 : Result<std_string_String, std_string_String> = match v492 with Ok x -> Ok x | Error x -> Error (v493 x)
            let _run_target_args'_v495 = v503 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v504 : Result<std_string_String, std_string_String> = match v492 with Ok x -> Ok x | Error x -> Error (v493 x)
            let _run_target_args'_v495 = v504 
            #endif
#else
            let v505 : Result<std_string_String, std_string_String> = match v492 with Ok x -> Ok x | Error x -> Error (v493 x)
            let _run_target_args'_v495 = v505 
            #endif
            let v506 : Result<std_string_String, std_string_String> = _run_target_args'_v495 
            let v509 : string = "$0?"
            let v510 : std_string_String = Fable.Core.RustInterop.emitRustExpr v506 v509 
            let v511 : string = "fable_library_rust::String_::fromString($0)"
            let v512 : string = Fable.Core.RustInterop.emitRustExpr v510 v511 
            let v514 : string option = Some v512 
            US33_0(v514)
    let v524 : Result<string option, std_string_String> =
        match v518 with
        | US33_1(v521) -> (* Error *)
            let v522 : Result<string option, std_string_String> = Error v521 
            v522
        | US33_0(v519) -> (* Ok *)
            let v520 : Result<string option, std_string_String> = Ok v519 
            v520
    let v525 : string = ""
    let v526 : string = "}"
    let v527 : string = v525 + v526 
    let x = v524 //
    let v528 : _ = x
    let v529 : unit = ()
    (* run_target_args'
    let v530 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v531 : string = $"true; let _fix_closure_v529 = $0"
    let v532 : bool = Fable.Core.RustInterop.emitRustExpr v528 v531 
    let _run_target_args'_v530 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v533 : string = $"true; let _fix_closure_v529 = $0"
    let v534 : bool = Fable.Core.RustInterop.emitRustExpr v528 v533 
    let _run_target_args'_v530 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v535 : string = $"true; let _fix_closure_v529 = $0"
    let v536 : bool = Fable.Core.RustInterop.emitRustExpr v528 v535 
    let _run_target_args'_v530 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v530 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v530 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v530 = false 
    #endif
#else
    let _run_target_args'_v530 = false 
    #endif
    let v537 : bool = _run_target_args'_v530 
    let v539 : string = $"true; _fix_closure_v529 " + v527 + "); " + v525 + " // rust.fix_closure'"
    let v540 : bool = Fable.Core.RustInterop.emitRustExpr () v539 
    let v541 : string = "__future_init"
    let v542 : _ = Fable.Core.RustInterop.emitRustExpr () v541 
    let v543 : string = "v542"
    let v544 : std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v543 
    v544
and closure71 (v0 : US27) (v1 : int32) : (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>) =
    closure72(v0, v1)
and method86 (v0 : US27) : (int32 -> (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>)) =
    closure71(v0)
and method96 (v0 : Vec<struct (string * US23 * string * bool * bool)>) : Vec<struct (string * US23 * string * bool * bool)> =
    v0
and method97 (v0 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>>) : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> =
    v0
and method98 (v0 : string) : string =
    v0
and closure75 () (v0 : rexie_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method99 () : (rexie_Error -> std_string_String) =
    closure75()
and method100 (v0 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>>) : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> =
    v0
and closure76 (v0 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>>) struct (v1 : string, v2 : US23, v3 : string, v4 : bool, v5 : bool) : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>> =
    let v6 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = method100(v0)
    let func1_move_x = struct (v1, v2, v3, v4, v5) //
    let v7 : _ = func1_move_x
    let v8 : string = "(move |x| v6(x))($0)"
    let v9 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr v7 v8 
    v9
and method101 (v0 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>>) : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> =
    v0
and method102 (v0 : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>>) : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>> =
    v0
and closure77 (v0 : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>>) (v1 : Heap4) : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>> =
    let v2 : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>> = method102(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure79 () (v0 : Result<Vec<string option>, std_string_String>) : US37 =
    US37_0(v0)
and method103 () : (Result<Vec<string option>, std_string_String> -> US37) =
    closure79()
and closure80 () (v0 : Vec<string option>) : US39 =
    US39_0(v0)
and method104 () : (Vec<string option> -> US39) =
    closure80()
and closure81 () (v0 : std_string_String) : US39 =
    US39_1(v0)
and method105 () : (std_string_String -> US39) =
    closure81()
and closure82 () (v0 : string) : US31 =
    US31_0(v0)
and method106 () : (string -> US31) =
    closure82()
and closure85 () (v0 : US31) : US42 =
    US42_0(v0)
and method108 () : (US31 -> US42) =
    closure85()
and closure86 () (v0 : crate_model_near_nearblocks_Root) : crate_model_near_nearblocks_Root option =
    let v2 : crate_model_near_nearblocks_Root option = Some v0 
    v2
and method109 () : (crate_model_near_nearblocks_Root -> crate_model_near_nearblocks_Root option) =
    closure86()
and method110 (v0 : Result<crate_model_near_nearblocks_Root, std_string_String>) : Result<crate_model_near_nearblocks_Root, std_string_String> =
    v0
and closure84 (v0 : US35, v1 : US41, v2 : int32) struct (v3 : string, v4 : US23, v5 : string, v6 : bool, v7 : bool) : Result<crate_model_near_nearblocks_Root option, std_string_String> =
    let v54 : US29 =
        match v0 with
        | US35_1 -> (* None *)
            US29_1
        | US35_0(v8) -> (* Some *)
            let v50 : US30 =
                match v8 with
                | US36_1(v47) -> (* Error *)
                    US30_1(v47)
                | US36_0(v9) -> (* Ok *)
                    let v10 : US25 option = v9 |> Array.tryItem v2 
                    let v12 : (US25 -> US32) = method87()
                    let v13 : US32 option = v10 |> Option.map v12 
                    let v26 : US32 = US32_1
                    let v27 : US32 = v13 |> Option.defaultValue v26 
                    let v37 : US25 =
                        match v27 with
                        | US32_0(v31) -> (* Some *)
                            match v31 with
                            | US25_0(v32) -> (* Some *)
                                US25_0(v32)
                            | _ ->
                                US25_1
                        | _ ->
                            US25_1
                    let v45 : US31 =
                        match v37 with
                        | US25_1 -> (* None *)
                            US31_1
                        | US25_0(v38) -> (* Some *)
                            let v39 : std_string_String = v38.l0
                            let v40 : string = "fable_library_rust::String_::fromString($0)"
                            let v41 : string = Fable.Core.RustInterop.emitRustExpr v39 v40 
                            US31_0(v41)
                    US30_0(v45)
            US29_0(v50)
    let v56 : string = $"%A{struct (v3, v4, v5, v6, v7)}"
    let v59 : int64 = 400L
    let v60 : string = method8(v59, v56)
    let v62 : string = $"%A{v54}"
    let v65 : int64 = 400L
    let v66 : string = method8(v65, v62)
    let v67 : string = "state_core.use_request (15) / result memo / request: " + string v60 + " / state_data: " + string v66 + ""
    let v68 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v69 : bool = Fable.Core.RustInterop.emitRustExpr v67 v68 
    let v71 : string = $"%A{v1}"
    let v74 : int64 = 400L
    let v75 : string = method8(v74, v71)
    let v76 : string = "state_core.use_request (16) / effect / json: " + string v75 + ""
    let v77 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v78 : bool = Fable.Core.RustInterop.emitRustExpr v76 v77 
    let v113 : US31 =
        match v1 with
        | US41_1(v110) -> (* Error *)
            US31_1
        | US41_0(v79) -> (* Ok *)
            let v80 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
            let v81 : (US31 []) = Fable.Core.RustInterop.emitRustExpr v79 v80 
            let v82 : US31 option = v81 |> Array.tryItem v2 
            let v84 : (US31 -> US42) = method108()
            let v85 : US42 option = v82 |> Option.map v84 
            let v98 : US42 = US42_1
            let v99 : US42 = v85 |> Option.defaultValue v98 
            match v99 with
            | US42_0(v103) -> (* Some *)
                match v103 with
                | US31_0(v104) -> (* Some *)
                    US31_0(v104)
                | _ ->
                    US31_1
            | _ ->
                US31_1
    match v113 with
    | US31_0(v114) -> (* Some *)
        let v115 : string = method41(v114)
        (* run_target_args'
        let v120 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v121 : string = "&*$0"
        let v122 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v115 v121 
        let _run_target_args'_v120 = v122 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v123 : string = "&*$0"
        let v124 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v115 v123 
        let _run_target_args'_v120 = v124 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v125 : string = "&*$0"
        let v126 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v115 v125 
        let _run_target_args'_v120 = v126 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v128 : Ref<Str> = v115 |> unbox<Ref<Str>>
        let _run_target_args'_v120 = v128 
        #endif
#if FABLE_COMPILER_PYTHON
        let v132 : Ref<Str> = v115 |> unbox<Ref<Str>>
        let _run_target_args'_v120 = v132 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v136 : Ref<Str> = v115 |> unbox<Ref<Str>>
        let _run_target_args'_v120 = v136 
        #endif
#else
        let v140 : Ref<Str> = v115 |> unbox<Ref<Str>>
        let _run_target_args'_v120 = v140 
        #endif
        let v143 : Ref<Str> = _run_target_args'_v120 
        let v149 : string = "serde_json::from_str(&$0)"
        let v150 : Result<crate_model_near_nearblocks_Root, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v143 v149 
        let v151 : (serde_json_Error -> std_string_String) = method42()
        (* run_target_args'
        let v153 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v154 : string = "$0.map_err(|x| $1(x))"
        let v155 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v150, v151) v154 
        let _run_target_args'_v153 = v155 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v156 : string = "$0.map_err(|x| $1(x))"
        let v157 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v150, v151) v156 
        let _run_target_args'_v153 = v157 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v158 : string = "$0.map_err(|x| $1(x))"
        let v159 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v150, v151) v158 
        let _run_target_args'_v153 = v159 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v160 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v150 with Ok x -> Ok x | Error x -> Error (v151 x)
        let _run_target_args'_v153 = v160 
        #endif
#if FABLE_COMPILER_PYTHON
        let v161 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v150 with Ok x -> Ok x | Error x -> Error (v151 x)
        let _run_target_args'_v153 = v161 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v162 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v150 with Ok x -> Ok x | Error x -> Error (v151 x)
        let _run_target_args'_v153 = v162 
        #endif
#else
        let v163 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v150 with Ok x -> Ok x | Error x -> Error (v151 x)
        let _run_target_args'_v153 = v163 
        #endif
        let v164 : Result<crate_model_near_nearblocks_Root, std_string_String> = _run_target_args'_v153 
        let v167 : (crate_model_near_nearblocks_Root -> crate_model_near_nearblocks_Root option) = method109()
        let v168 : Result<crate_model_near_nearblocks_Root, std_string_String> = method110(v164)
        let v169 : string = "v168.map(|x| v167(x))"
        let v170 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v169 
        v170
    | _ ->
        match v54 with
        | US29_0(v171) -> (* Some *)
            match v171 with
            | US30_0(v172) -> (* Ok *)
                match v172 with
                | US31_0(v173) -> (* Some *)
                    let v174 : string = method41(v173)
                    (* run_target_args'
                    let v179 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v180 : string = "&*$0"
                    let v181 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v174 v180 
                    let _run_target_args'_v179 = v181 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v182 : string = "&*$0"
                    let v183 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v174 v182 
                    let _run_target_args'_v179 = v183 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v184 : string = "&*$0"
                    let v185 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v174 v184 
                    let _run_target_args'_v179 = v185 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v187 : Ref<Str> = v174 |> unbox<Ref<Str>>
                    let _run_target_args'_v179 = v187 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v191 : Ref<Str> = v174 |> unbox<Ref<Str>>
                    let _run_target_args'_v179 = v191 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v195 : Ref<Str> = v174 |> unbox<Ref<Str>>
                    let _run_target_args'_v179 = v195 
                    #endif
#else
                    let v199 : Ref<Str> = v174 |> unbox<Ref<Str>>
                    let _run_target_args'_v179 = v199 
                    #endif
                    let v202 : Ref<Str> = _run_target_args'_v179 
                    let v208 : string = "serde_json::from_str(&$0)"
                    let v209 : Result<crate_model_near_nearblocks_Root, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v202 v208 
                    let v210 : (serde_json_Error -> std_string_String) = method42()
                    (* run_target_args'
                    let v212 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v213 : string = "$0.map_err(|x| $1(x))"
                    let v214 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v209, v210) v213 
                    let _run_target_args'_v212 = v214 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v215 : string = "$0.map_err(|x| $1(x))"
                    let v216 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v209, v210) v215 
                    let _run_target_args'_v212 = v216 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v217 : string = "$0.map_err(|x| $1(x))"
                    let v218 : Result<crate_model_near_nearblocks_Root, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v209, v210) v217 
                    let _run_target_args'_v212 = v218 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v219 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v209 with Ok x -> Ok x | Error x -> Error (v210 x)
                    let _run_target_args'_v212 = v219 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v220 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v209 with Ok x -> Ok x | Error x -> Error (v210 x)
                    let _run_target_args'_v212 = v220 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v221 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v209 with Ok x -> Ok x | Error x -> Error (v210 x)
                    let _run_target_args'_v212 = v221 
                    #endif
#else
                    let v222 : Result<crate_model_near_nearblocks_Root, std_string_String> = match v209 with Ok x -> Ok x | Error x -> Error (v210 x)
                    let _run_target_args'_v212 = v222 
                    #endif
                    let v223 : Result<crate_model_near_nearblocks_Root, std_string_String> = _run_target_args'_v212 
                    let v226 : (crate_model_near_nearblocks_Root -> crate_model_near_nearblocks_Root option) = method109()
                    let v227 : Result<crate_model_near_nearblocks_Root, std_string_String> = method110(v223)
                    let v228 : string = "v227.map(|x| v226(x))"
                    let v229 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v228 
                    v229
                | _ ->
                    let v231 : string = $"%A{struct (v113, v54)}"
                    let v234 : string = "state_core.use_request (17) / json Error / value: " + string v231 + ""
                    let v235 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                    let v236 : bool = Fable.Core.RustInterop.emitRustExpr v234 v235 
                    let v237 : crate_model_near_nearblocks_Root option = None
                    let v238 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Ok v237 
                    v238
            | _ ->
                let v241 : string = $"%A{struct (v113, v54)}"
                let v244 : string = "state_core.use_request (17) / json Error / value: " + string v241 + ""
                let v245 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v246 : bool = Fable.Core.RustInterop.emitRustExpr v244 v245 
                let v247 : crate_model_near_nearblocks_Root option = None
                let v248 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Ok v247 
                v248
        | _ ->
            let v251 : string = $"%A{struct (v113, v54)}"
            let v254 : string = "state_core.use_request (17) / json Error / value: " + string v251 + ""
            let v255 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v256 : bool = Fable.Core.RustInterop.emitRustExpr v254 v255 
            let v257 : crate_model_near_nearblocks_Root option = None
            let v258 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Ok v257 
            v258
and closure83 (v0 : US35, v1 : US41) (v2 : int32) : (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_nearblocks_Root option, std_string_String>) =
    closure84(v0, v1, v2)
and method107 (v0 : US35, v1 : US41) : (int32 -> (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_nearblocks_Root option, std_string_String>)) =
    closure83(v0, v1)
and closure78 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>, v1 : leptos_prelude_ArcMemo<Result<Vec<Heap4 option>, std_string_String> option>, v2 : leptos_prelude_ArcLocalResource<Result<Vec<string option>, std_string_String>>, v3 : leptos_prelude_Action<Heap4, Result<Vec<unit>, std_string_String>>) () : (Result<crate_model_near_nearblocks_Root option, std_string_String> []) =
    let v4 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v5 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v4 
    let v7 : string = $"%A{v5}"
    let v10 : string = "state_core.use_requests (13) / result memo / requests: " + string v7 + ""
    let v11 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr v10 v11 
    let v13 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v14 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v1 v13 
    let v16 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v17 : US26 option = v14 |> Option.map v16 
    let v30 : US26 = US26_1
    let v31 : US26 = v17 |> Option.defaultValue v30 
    let v78 : US35 =
        match v31 with
        | US26_1 -> (* None *)
            US35_1
        | US26_0(v35) -> (* Some *)
            let v36 : (Vec<Heap4 option> -> US24) = method83()
            let v37 : (std_string_String -> US24) = method84()
            let v38 : US24 = match v35 with Ok x -> v36 x | Error x -> v37 x
            let v74 : US36 =
                match v38 with
                | US24_1(v71) -> (* Error *)
                    US36_1(v71)
                | US24_0(v39) -> (* Ok *)
                    let v40 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v41 : bool = Fable.Core.RustInterop.emitRustExpr v39 v40 
                    let v42 : string = "x"
                    let v43 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v42 
                    let v45 : (Heap4 -> US25) = method85()
                    let v46 : US25 option = v43 |> Option.map v45 
                    let v59 : US25 = US25_1
                    let v60 : US25 = v46 |> Option.defaultValue v59 
                    let v64 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v65 : bool = Fable.Core.RustInterop.emitRustExpr v60 v64 
                    let v66 : string = "_vec_map"
                    let v67 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v66 
                    let v68 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v69 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v67 v68 
                    US36_0(v69)
            US35_0(v74)
    let v80 : string = $"%A{v78}"
    let v83 : int64 = 400L
    let v84 : string = method8(v83, v80)
    let v85 : string = "state_core.use_request (14) / result_memo / state_data: " + string v84 + ""
    let v86 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v87 : bool = Fable.Core.RustInterop.emitRustExpr v85 v86 
    let v88 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v89 : Result<Vec<string option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v2 v88 
    let v91 : (Result<Vec<string option>, std_string_String> -> US37) = method103()
    let v92 : US37 option = v89 |> Option.map v91 
    let v105 : US37 = US37_1
    let v106 : US37 = v92 |> Option.defaultValue v105 
    let v117 : US38 =
        match v106 with
        | US37_1 -> (* None *)
            US38_1
        | US37_0(v110) -> (* Some *)
            let v111 : (Vec<string option> -> US39) = method104()
            let v112 : (std_string_String -> US39) = method105()
            let v113 : US39 = match v110 with Ok x -> v111 x | Error x -> v112 x
            US38_0(v113)
    let v156 : US40 =
        match v117 with
        | US38_1 -> (* None *)
            US40_1
        | US38_0(v118) -> (* Some *)
            let v152 : US41 =
                match v118 with
                | US39_1(v149) -> (* Error *)
                    US41_1(v149)
                | US39_0(v119) -> (* Ok *)
                    let v120 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v121 : bool = Fable.Core.RustInterop.emitRustExpr v119 v120 
                    let v122 : string = "x"
                    let v123 : string option = Fable.Core.RustInterop.emitRustExpr () v122 
                    let v125 : (string -> US31) = method106()
                    let v126 : US31 option = v123 |> Option.map v125 
                    let v139 : US31 = US31_1
                    let v140 : US31 = v126 |> Option.defaultValue v139 
                    let v144 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v145 : bool = Fable.Core.RustInterop.emitRustExpr v140 v144 
                    let v146 : string = "_vec_map"
                    let v147 : Vec<US31> = Fable.Core.RustInterop.emitRustExpr () v146 
                    US41_0(v147)
            US40_0(v152)
    let v157 : (US31 []) = [||]
    let v158 : string = "$0.to_vec()"
    let v159 : Vec<US31> = Fable.Core.RustInterop.emitRustExpr v157 v158 
    let v163 : US41 =
        match v156 with
        | US40_1 -> (* None *)
            US41_0(v159)
        | US40_0(v160) -> (* Some *)
            v160
    let v246 : bool =
        match v163 with
        | US41_1(v244) -> (* Error *)
            false
        | US41_0(v164) -> (* Ok *)
            let v165 : string = "true; $0.into_iter().for_each(|x| { //"
            let v166 : bool = Fable.Core.RustInterop.emitRustExpr v164 v165 
            let v167 : string = "x"
            let v168 : US31 = Fable.Core.RustInterop.emitRustExpr () v167 
            let v239 : bool =
                match v168 with
                | US31_0(v169) -> (* Some *)
                    (* run_target_args'
                    let v174 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v175 : string = "&*$0"
                    let v176 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v169 v175 
                    let _run_target_args'_v174 = v176 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v177 : string = "&*$0"
                    let v178 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v169 v177 
                    let _run_target_args'_v174 = v178 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v179 : string = "&*$0"
                    let v180 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v169 v179 
                    let _run_target_args'_v174 = v180 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v182 : Ref<Str> = v169 |> unbox<Ref<Str>>
                    let _run_target_args'_v174 = v182 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v186 : Ref<Str> = v169 |> unbox<Ref<Str>>
                    let _run_target_args'_v174 = v186 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v190 : Ref<Str> = v169 |> unbox<Ref<Str>>
                    let _run_target_args'_v174 = v190 
                    #endif
#else
                    let v194 : Ref<Str> = v169 |> unbox<Ref<Str>>
                    let _run_target_args'_v174 = v194 
                    #endif
                    let v197 : Ref<Str> = _run_target_args'_v174 
                    (* run_target_args'
                    let v207 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v208 : string = "String::from($0)"
                    let v209 : std_string_String = Fable.Core.RustInterop.emitRustExpr v197 v208 
                    let _run_target_args'_v207 = v209 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v210 : string = "String::from($0)"
                    let v211 : std_string_String = Fable.Core.RustInterop.emitRustExpr v197 v210 
                    let _run_target_args'_v207 = v211 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v212 : string = "String::from($0)"
                    let v213 : std_string_String = Fable.Core.RustInterop.emitRustExpr v197 v212 
                    let _run_target_args'_v207 = v213 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v215 : std_string_String = v197 |> unbox<std_string_String>
                    let _run_target_args'_v207 = v215 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v219 : std_string_String = v197 |> unbox<std_string_String>
                    let _run_target_args'_v207 = v219 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v223 : std_string_String = v197 |> unbox<std_string_String>
                    let _run_target_args'_v207 = v223 
                    #endif
#else
                    let v227 : std_string_String = v197 |> unbox<std_string_String>
                    let _run_target_args'_v207 = v227 
                    #endif
                    let v230 : std_string_String = _run_target_args'_v207 
                    let v236 : Heap4 = {l0 = v230} : Heap4
                    let v237 : string = "true; leptos::prelude::Action::dispatch(&$0, $1.clone())"
                    let v238 : bool = Fable.Core.RustInterop.emitRustExpr struct (v3, v236) v237 
                    true
                | _ ->
                    false
            let v240 : string = $"true"
            let v241 : bool = Fable.Core.RustInterop.emitRustExpr () v240 
            let v242 : string = "true; }); //"
            let v243 : bool = Fable.Core.RustInterop.emitRustExpr () v242 
            false
    let v247 : (int32 -> (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_nearblocks_Root option, std_string_String>)) = method107(v78, v163)
    let v248 : Vec<struct (string * US23 * string * bool * bool)> = method96(v5)
    let v249 : string = "v248.iter().enumerate().map(|(i, x)| v247(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v250 : Vec<Result<crate_model_near_nearblocks_Root option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v249 
    let v251 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v252 : (Result<crate_model_near_nearblocks_Root option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v250 v251 
    let v254 : string = $"%A{v252}"
    let v257 : string = "state_core.use_requests (18) / result_func func0 / result: " + string v254 + ""
    let v258 : int64 = 200L
    let v259 : string = method8(v258, v257)
    let v260 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v261 : bool = Fable.Core.RustInterop.emitRustExpr v259 v260 
    v252
and method112 (v0 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []))) : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) =
    v0
and closure88 (v0 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []))) (v1 : crate_model_near_nearblocks_Root option) : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option =
    let v3 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) = method112(v0)
    let v4 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option = v1 |> Option.map v3 
    v4
and method111 (v0 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []))) : (crate_model_near_nearblocks_Root option -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option) =
    closure88(v0)
and method113 (v0 : Result<crate_model_near_nearblocks_Root option, std_string_String>) : Result<crate_model_near_nearblocks_Root option, std_string_String> =
    v0
and method114 (v0 : Func0<Result<crate_model_near_nearblocks_Root option, std_string_String>, Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>) : Func0<Result<crate_model_near_nearblocks_Root option, std_string_String>, Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> =
    v0
and closure89 (v0 : Func0<Result<crate_model_near_nearblocks_Root option, std_string_String>, Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>) (v1 : Result<crate_model_near_nearblocks_Root option, std_string_String>) : Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String> =
    let v2 : Func0<Result<crate_model_near_nearblocks_Root option, std_string_String>, Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> = method114(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure87 (v0 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])), v1 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>>, v2 : leptos_prelude_ArcLocalResource<Result<Vec<Heap4 option>, std_string_String>>, v3 : leptos_prelude_ArcMemo<(Result<crate_model_near_nearblocks_Root option, std_string_String> [])>) () : Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> =
    let v4 : string = $"leptos::prelude::Submission::pending(&$0.into()).into()"
    let v5 : leptos_prelude_ArcSignal<bool> = Fable.Core.RustInterop.emitRustExpr v1 v4 
    let v6 : string = $"leptos::prelude::ArcSignal::get(&$0)"
    let v7 : bool = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : string = $"leptos::prelude::Submission::pending(&$0.into()).into()"
    let v9 : leptos_prelude_ArcSignal<bool> = Fable.Core.RustInterop.emitRustExpr v2 v8 
    let v10 : string = $"leptos::prelude::ArcSignal::get(&$0)"
    let v11 : bool = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v13 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v1 v12 
    let v15 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v16 : US2 option = v13 |> Option.map v15 
    let v29 : US2 = US2_1
    let v30 : US2 = v16 |> Option.defaultValue v29 
    let v34 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v35 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v2 v34 
    let v37 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v38 : US26 option = v35 |> Option.map v37 
    let v51 : US26 = US26_1
    let v52 : US26 = v38 |> Option.defaultValue v51 
    let v99 : US35 =
        match v52 with
        | US26_1 -> (* None *)
            US35_1
        | US26_0(v56) -> (* Some *)
            let v57 : (Vec<Heap4 option> -> US24) = method83()
            let v58 : (std_string_String -> US24) = method84()
            let v59 : US24 = match v56 with Ok x -> v57 x | Error x -> v58 x
            let v95 : US36 =
                match v59 with
                | US24_1(v92) -> (* Error *)
                    US36_1(v92)
                | US24_0(v60) -> (* Ok *)
                    let v61 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v62 : bool = Fable.Core.RustInterop.emitRustExpr v60 v61 
                    let v63 : string = "x"
                    let v64 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v63 
                    let v66 : (Heap4 -> US25) = method85()
                    let v67 : US25 option = v64 |> Option.map v66 
                    let v80 : US25 = US25_1
                    let v81 : US25 = v67 |> Option.defaultValue v80 
                    let v85 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v86 : bool = Fable.Core.RustInterop.emitRustExpr v81 v85 
                    let v87 : string = "_vec_map"
                    let v88 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v87 
                    let v89 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v90 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v88 v89 
                    US36_0(v90)
            US35_0(v95)
    let v101 : string = $"%A{v30}"
    let v104 : int64 = 400L
    let v105 : string = method8(v104, v101)
    let v107 : string = $"%A{v99}"
    let v110 : int64 = 400L
    let v111 : string = method8(v110, v107)
    let v112 : string = "state_core.use_request (19) / result move / database: " + string v105 + " / database_loading: " + string v7 + " / state_data: " + string v111 + " / state_data_loading: " + string v11 + ""
    let v113 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v114 : bool = Fable.Core.RustInterop.emitRustExpr v112 v113 
    let v115 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v116 : (Result<crate_model_near_nearblocks_Root option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v3 v115 
    let v117 : string = "$0.to_vec()"
    let v118 : Vec<Result<crate_model_near_nearblocks_Root option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v116 v117 
    let v119 : unit = ()
    let v120 : string = $"true; let _func1_from_v119 = Func1::from(move |value| {{ //"
    let v121 : bool = Fable.Core.RustInterop.emitRustExpr () v120 
    let v122 : string = $"value"
    let v123 : Result<crate_model_near_nearblocks_Root option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v122 
    let v124 : (crate_model_near_nearblocks_Root option -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option) = method111(v0)
    let v125 : Result<crate_model_near_nearblocks_Root option, std_string_String> = method113(v123)
    let v126 : string = "v125.map(|x| v124(x))"
    let v127 : Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v126 
    let func1_from_result = v127 //
    let v128 : _ = func1_from_result
    let v129 : string = $"true; $0 /*"
    let v130 : bool = Fable.Core.RustInterop.emitRustExpr v128 v129 
    let v131 : string = $"*/ }}); //"
    let v132 : bool = Fable.Core.RustInterop.emitRustExpr () v131 
    let v133 : string = $"_func1_from_v119"
    let v134 : Func0<Result<crate_model_near_nearblocks_Root option, std_string_String>, Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v133 
    let v135 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v136 : (Result<crate_model_near_nearblocks_Root option, std_string_String> -> Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>) = closure89(v134)
    let v137 : Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr struct (v118, v136) v135 
    let v139 : string = $"%A{v137}"
    let v142 : string = "state_core.use_requests (20) / result func0 / result: " + string v139 + ""
    let v143 : int64 = 200L
    let v144 : string = method8(v143, v142)
    let v145 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v146 : bool = Fable.Core.RustInterop.emitRustExpr v144 v145 
    v137
and method78 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>, v1 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []))) : leptos_prelude_ArcMemo<Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>> =
    let v2 : string = "state_core.use_requests (1)"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = "state_core.use_database (1)"
    let v6 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v7 : bool = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : unit = ()
    let v9 : string = $"true; let _func0_from_v8 = Func0::from(move || {{ //"
    let v10 : bool = Fable.Core.RustInterop.emitRustExpr () v9 
    let v11 : string = "true; let __future_init = Box::pin(/*"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr () v11 
    let v13 : string = "*/ async move { /*"
    let v14 : bool = Fable.Core.RustInterop.emitRustExpr () v13 
    let v15 : string = "*/ ()"
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = "state_core.use_database (2) / database new_local_resource"
    let v18 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v19 : bool = Fable.Core.RustInterop.emitRustExpr v17 v18 
    let v20 : string = "state_core.build_database ()"
    let v21 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : string = "true; let __future_init = Box::pin(/*"
    let v24 : bool = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : string = "*/ async { /*"
    let v26 : bool = Fable.Core.RustInterop.emitRustExpr () v25 
    let v27 : string = "*/ ()"
    let v28 : bool = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : string = "Box::pin(rexie::Rexie::builder(\"database\").version(1).add_object_store(rexie::ObjectStore::new(\"store\")).build())"
    let v30 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v29 
    let v31 : string = "v30.await"
    let v32 : Result<rexie_Rexie, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v31 
    let v33 : (rexie_Error -> std_string_String) = method6()
    (* run_target_args'
    let v35 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v36 : string = "$0.map_err(|x| $1(x))"
    let v37 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v36 
    let _run_target_args'_v35 = v37 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v38 : string = "$0.map_err(|x| $1(x))"
    let v39 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v38 
    let _run_target_args'_v35 = v39 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v40 : string = "$0.map_err(|x| $1(x))"
    let v41 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v40 
    let _run_target_args'_v35 = v41 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v42 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v42 
    #endif
#if FABLE_COMPILER_PYTHON
    let v43 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v43 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v44 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v44 
    #endif
#else
    let v45 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v45 
    #endif
    let v46 : Result<rexie_Rexie, std_string_String> = _run_target_args'_v35 
    let v49 : string = ""
    let v50 : string = "}"
    let v51 : string = v49 + v50 
    let x = v46 //
    let v52 : _ = x
    let v53 : unit = ()
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = $"true; let _fix_closure_v53 = $0"
    let v56 : bool = Fable.Core.RustInterop.emitRustExpr v52 v55 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = $"true; let _fix_closure_v53 = $0"
    let v58 : bool = Fable.Core.RustInterop.emitRustExpr v52 v57 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = $"true; let _fix_closure_v53 = $0"
    let v60 : bool = Fable.Core.RustInterop.emitRustExpr v52 v59 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v54 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v54 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v54 = false 
    #endif
#else
    let _run_target_args'_v54 = false 
    #endif
    let v61 : bool = _run_target_args'_v54 
    let v63 : string = $"true; _fix_closure_v53 " + v51 + "); " + v49 + " // rust.fix_closure'"
    let v64 : bool = Fable.Core.RustInterop.emitRustExpr () v63 
    let v65 : string = "__future_init"
    let v66 : _ = Fable.Core.RustInterop.emitRustExpr () v65 
    let v67 : string = "v66"
    let v68 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v67 
    let v69 : string = "v68.await"
    let v70 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v69 
    (* run_target_args'
    let v72 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v73 : string = "$0.unwrap()"
    let v74 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v70 v73 
    let _run_target_args'_v72 = v74 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v75 : string = "$0.unwrap()"
    let v76 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v70 v75 
    let _run_target_args'_v72 = v76 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v77 : string = "$0.unwrap()"
    let v78 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v70 v77 
    let _run_target_args'_v72 = v78 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v79 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v79 
    #endif
#if FABLE_COMPILER_PYTHON
    let v80 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v80 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v81 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v81 
    #endif
#else
    let v82 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v82 
    #endif
    let v83 : rexie_Rexie = _run_target_args'_v72 
    let v86 : (rexie_Rexie -> rexie_Rexie) = method7()
    let v87 : rexie_Rexie = v86 v83
    let v88 : string = "std::sync::Arc::new(v87)"
    let v89 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v88 
    let v91 : string = $"%A{v89}"
    let v94 : string = "state_core.use_database (3) / database new_local_resource / result: " + string v91 + ""
    let v95 : int64 = 200L
    let v96 : string = method8(v95, v94)
    let v97 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v98 : bool = Fable.Core.RustInterop.emitRustExpr v96 v97 
    let v99 : string = v49 + v50 
    let x = v89 //
    let v100 : _ = x
    let v101 : unit = ()
    (* run_target_args'
    let v102 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v103 : string = $"true; let _fix_closure_v101 = $0"
    let v104 : bool = Fable.Core.RustInterop.emitRustExpr v100 v103 
    let _run_target_args'_v102 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v105 : string = $"true; let _fix_closure_v101 = $0"
    let v106 : bool = Fable.Core.RustInterop.emitRustExpr v100 v105 
    let _run_target_args'_v102 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v107 : string = $"true; let _fix_closure_v101 = $0"
    let v108 : bool = Fable.Core.RustInterop.emitRustExpr v100 v107 
    let _run_target_args'_v102 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v102 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v102 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v102 = false 
    #endif
#else
    let _run_target_args'_v102 = false 
    #endif
    let v109 : bool = _run_target_args'_v102 
    let v111 : string = $"true; _fix_closure_v101 " + v99 + "); " + v49 + " // rust.fix_closure'"
    let v112 : bool = Fable.Core.RustInterop.emitRustExpr () v111 
    let v113 : string = "__future_init"
    let v114 : _ = Fable.Core.RustInterop.emitRustExpr () v113 
    let v115 : string = "v114"
    let v116 : std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>> = Fable.Core.RustInterop.emitRustExpr () v115 
    let v117 : string = $"true; $0 /*"
    let v118 : bool = Fable.Core.RustInterop.emitRustExpr v116 v117 
    let v119 : string = $"*/ }}); //"
    let v120 : bool = Fable.Core.RustInterop.emitRustExpr () v119 
    let v121 : string = $"_func0_from_v8"
    let v122 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>>> = Fable.Core.RustInterop.emitRustExpr () v121 
    let v123 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v124 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v122 v123 
    let v125 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v126 : (unit -> PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option) = closure64(v124)
    let v127 : leptos_prelude_ArcMemo<PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option> = Fable.Core.RustInterop.emitRustExpr v126 v125 
    let v128 : unit = ()
    let v129 : string = $"true; let _func0_from_v128 = Func0::from(move || {{ //"
    let v130 : bool = Fable.Core.RustInterop.emitRustExpr () v129 
    let v131 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v132 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v124 v131 
    let v133 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v134 : bool = Fable.Core.RustInterop.emitRustExpr v132 v133 
    let v135 : string = "x"
    let v136 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v135 
    let v137 : (unit -> unit) = closure8()
    let _v137 = true
    let v138 : string = "PartialEqWrapper($0)"
    let v139 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v136 v138 
    let v140 : string = "true; $0 })"
    let v141 : bool = Fable.Core.RustInterop.emitRustExpr v139 v140 
    let v142 : string = "_optionm_map_"
    let v143 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr () v142 
    let v144 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v145 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v144 
    let v146 : string = "true; let __future_init = Box::pin(/*"
    let v147 : bool = Fable.Core.RustInterop.emitRustExpr () v146 
    let v148 : string = "*/ async move { /*"
    let v149 : bool = Fable.Core.RustInterop.emitRustExpr () v148 
    let v150 : string = "*/ ()"
    let v151 : bool = Fable.Core.RustInterop.emitRustExpr () v150 
    let v153 : string = $"%A{v143}"
    let v157 : string = $"%A{v145}"
    let v160 : int64 = 400L
    let v161 : string = method8(v160, v157)
    let v162 : string = "state_core.use_requests (3) / state_data_resource new_local_resource / request : " + string v161 + " / database: " + string v153 + ""
    let v163 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v164 : bool = Fable.Core.RustInterop.emitRustExpr v162 v163 
    let v165 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v166 : bool = Fable.Core.RustInterop.emitRustExpr v143 v165 
    let v167 : string = "x"
    let v168 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr () v167 
    let v169 : string = "$0.0"
    let v170 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr v168 v169 
    let v171 : string = "true; $0 })"
    let v172 : bool = Fable.Core.RustInterop.emitRustExpr v170 v171 
    let v173 : string = "_optionm_map_"
    let v174 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr () v173 
    let v176 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v177 : US2 option = v174 |> Option.map v176 
    let v190 : US2 = US2_1
    let v191 : US2 = v177 |> Option.defaultValue v190 
    let v669 : US24 =
        match v191 with
        | US2_0(v195) -> (* Some *)
            let v196 : unit = ()
            let v197 : string = $"true; let _func1_from_v196 = Func1::from(move |value| {{ //"
            let v198 : bool = Fable.Core.RustInterop.emitRustExpr () v197 
            let v199 : string = $"value"
            let struct (v200 : string, v201 : US23, v202 : string, v203 : bool, v204 : bool) = Fable.Core.RustInterop.emitRustExpr () v199 
            let v205 : string = "url[" + v200 + "](" + $"%A{v202}" + ")"
            let v206 : string = "state_core.get_data () / id: " + v205 + ""
            let v207 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v208 : bool = Fable.Core.RustInterop.emitRustExpr v206 v207 
            let v209 : string = "true; let __future_init = Box::pin(/*"
            let v210 : bool = Fable.Core.RustInterop.emitRustExpr () v209 
            let v211 : string = "*/ async { /*"
            let v212 : bool = Fable.Core.RustInterop.emitRustExpr () v211 
            let v213 : string = "*/ ()"
            let v214 : bool = Fable.Core.RustInterop.emitRustExpr () v213 
            let v215 : string = "store"
            let v216 : (string []) = [|v215|]
            let v217 : string = "$0.to_vec()"
            let v218 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v216 v217 
            let v219 : unit = ()
            let v220 : string = $"true; let _func1_from_v219 = Func1::from(move |value| {{ //"
            let v221 : bool = Fable.Core.RustInterop.emitRustExpr () v220 
            let v222 : string = $"value"
            let v223 : string = Fable.Core.RustInterop.emitRustExpr () v222 
            (* run_target_args'
            let v228 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v229 : string = "&*$0"
            let v230 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v223 v229 
            let _run_target_args'_v228 = v230 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v231 : string = "&*$0"
            let v232 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v223 v231 
            let _run_target_args'_v228 = v232 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v233 : string = "&*$0"
            let v234 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v223 v233 
            let _run_target_args'_v228 = v234 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v236 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v236 
            #endif
#if FABLE_COMPILER_PYTHON
            let v240 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v240 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v244 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v244 
            #endif
#else
            let v248 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v248 
            #endif
            let v251 : Ref<Str> = _run_target_args'_v228 
            (* run_target_args'
            let v261 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v262 : string = "String::from($0)"
            let v263 : std_string_String = Fable.Core.RustInterop.emitRustExpr v251 v262 
            let _run_target_args'_v261 = v263 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v264 : string = "String::from($0)"
            let v265 : std_string_String = Fable.Core.RustInterop.emitRustExpr v251 v264 
            let _run_target_args'_v261 = v265 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v266 : string = "String::from($0)"
            let v267 : std_string_String = Fable.Core.RustInterop.emitRustExpr v251 v266 
            let _run_target_args'_v261 = v267 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v269 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v261 = v269 
            #endif
#if FABLE_COMPILER_PYTHON
            let v273 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v261 = v273 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v277 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v261 = v277 
            #endif
#else
            let v281 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v261 = v281 
            #endif
            let v284 : std_string_String = _run_target_args'_v261 
            let func1_from_result = v284 //
            let v290 : _ = func1_from_result
            let v291 : string = $"true; $0 /*"
            let v292 : bool = Fable.Core.RustInterop.emitRustExpr v290 v291 
            let v293 : string = $"*/ }}); //"
            let v294 : bool = Fable.Core.RustInterop.emitRustExpr () v293 
            let v295 : string = $"_func1_from_v219"
            let v296 : Func0<string, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v295 
            let v297 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v298 : (string -> std_string_String) = closure10(v296)
            let v299 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v218, v298) v297 
            let v300 : std_sync_Arc<rexie_Rexie> = method11(v195)
            let v301 : string = "$0.transaction(&v299, rexie::TransactionMode::ReadOnly)"
            let v302 : Result<rexie_Transaction, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v300 v301 
            let v303 : (rexie_Error -> std_string_String) = method12()
            (* run_target_args'
            let v305 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v306 : string = "$0.map_err(|x| $1(x))"
            let v307 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v302, v303) v306 
            let _run_target_args'_v305 = v307 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v308 : string = "$0.map_err(|x| $1(x))"
            let v309 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v302, v303) v308 
            let _run_target_args'_v305 = v309 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v310 : string = "$0.map_err(|x| $1(x))"
            let v311 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v302, v303) v310 
            let _run_target_args'_v305 = v311 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v312 : Result<rexie_Transaction, std_string_String> = match v302 with Ok x -> Ok x | Error x -> Error (v303 x)
            let _run_target_args'_v305 = v312 
            #endif
#if FABLE_COMPILER_PYTHON
            let v313 : Result<rexie_Transaction, std_string_String> = match v302 with Ok x -> Ok x | Error x -> Error (v303 x)
            let _run_target_args'_v305 = v313 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v314 : Result<rexie_Transaction, std_string_String> = match v302 with Ok x -> Ok x | Error x -> Error (v303 x)
            let _run_target_args'_v305 = v314 
            #endif
#else
            let v315 : Result<rexie_Transaction, std_string_String> = match v302 with Ok x -> Ok x | Error x -> Error (v303 x)
            let _run_target_args'_v305 = v315 
            #endif
            let v316 : Result<rexie_Transaction, std_string_String> = _run_target_args'_v305 
            let v319 : string = "$0?"
            let v320 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v316 v319 
            let v321 : string = method13()
            (* run_target_args'
            let v326 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v327 : string = "&*$0"
            let v328 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v321 v327 
            let _run_target_args'_v326 = v328 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v329 : string = "&*$0"
            let v330 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v321 v329 
            let _run_target_args'_v326 = v330 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v331 : string = "&*$0"
            let v332 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v321 v331 
            let _run_target_args'_v326 = v332 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v334 : Ref<Str> = v321 |> unbox<Ref<Str>>
            let _run_target_args'_v326 = v334 
            #endif
#if FABLE_COMPILER_PYTHON
            let v338 : Ref<Str> = v321 |> unbox<Ref<Str>>
            let _run_target_args'_v326 = v338 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v342 : Ref<Str> = v321 |> unbox<Ref<Str>>
            let _run_target_args'_v326 = v342 
            #endif
#else
            let v346 : Ref<Str> = v321 |> unbox<Ref<Str>>
            let _run_target_args'_v326 = v346 
            #endif
            let v349 : Ref<Str> = _run_target_args'_v326 
            let v355 : string = "v320.store($0)"
            let v356 : Result<rexie_Store, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v349 v355 
            let v357 : (rexie_Error -> std_string_String) = method14()
            (* run_target_args'
            let v359 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v360 : string = "$0.map_err(|x| $1(x))"
            let v361 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v356, v357) v360 
            let _run_target_args'_v359 = v361 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v362 : string = "$0.map_err(|x| $1(x))"
            let v363 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v356, v357) v362 
            let _run_target_args'_v359 = v363 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v364 : string = "$0.map_err(|x| $1(x))"
            let v365 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v356, v357) v364 
            let _run_target_args'_v359 = v365 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v366 : Result<rexie_Store, std_string_String> = match v356 with Ok x -> Ok x | Error x -> Error (v357 x)
            let _run_target_args'_v359 = v366 
            #endif
#if FABLE_COMPILER_PYTHON
            let v367 : Result<rexie_Store, std_string_String> = match v356 with Ok x -> Ok x | Error x -> Error (v357 x)
            let _run_target_args'_v359 = v367 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v368 : Result<rexie_Store, std_string_String> = match v356 with Ok x -> Ok x | Error x -> Error (v357 x)
            let _run_target_args'_v359 = v368 
            #endif
#else
            let v369 : Result<rexie_Store, std_string_String> = match v356 with Ok x -> Ok x | Error x -> Error (v357 x)
            let _run_target_args'_v359 = v369 
            #endif
            let v370 : Result<rexie_Store, std_string_String> = _run_target_args'_v359 
            let v373 : string = "$0?"
            let v374 : rexie_Store = Fable.Core.RustInterop.emitRustExpr v370 v373 
            let v375 : string = method79(v205)
            (* run_target_args'
            let v380 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v381 : string = "&*$0"
            let v382 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v375 v381 
            let _run_target_args'_v380 = v382 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v383 : string = "&*$0"
            let v384 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v375 v383 
            let _run_target_args'_v380 = v384 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v385 : string = "&*$0"
            let v386 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v375 v385 
            let _run_target_args'_v380 = v386 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v388 : Ref<Str> = v375 |> unbox<Ref<Str>>
            let _run_target_args'_v380 = v388 
            #endif
#if FABLE_COMPILER_PYTHON
            let v392 : Ref<Str> = v375 |> unbox<Ref<Str>>
            let _run_target_args'_v380 = v392 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v396 : Ref<Str> = v375 |> unbox<Ref<Str>>
            let _run_target_args'_v380 = v396 
            #endif
#else
            let v400 : Ref<Str> = v375 |> unbox<Ref<Str>>
            let _run_target_args'_v380 = v400 
            #endif
            let v403 : Ref<Str> = _run_target_args'_v380 
            let v409 : string = "wasm_bindgen::JsValue::from_str($0)"
            let v410 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr v403 v409 
            let v411 : string = $"Box::pin(rexie::Store::get(&v374, v410))"
            let v412 : std_pin_Pin<Box<Dyn<std_future_Future<Result<wasm_bindgen_JsValue option, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v411 
            let v413 : string = "v412.await"
            let v414 : Result<wasm_bindgen_JsValue option, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v413 
            let v415 : (rexie_Error -> std_string_String) = method16()
            (* run_target_args'
            let v417 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v418 : string = "$0.map_err(|x| $1(x))"
            let v419 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v414, v415) v418 
            let _run_target_args'_v417 = v419 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v420 : string = "$0.map_err(|x| $1(x))"
            let v421 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v414, v415) v420 
            let _run_target_args'_v417 = v421 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v422 : string = "$0.map_err(|x| $1(x))"
            let v423 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v414, v415) v422 
            let _run_target_args'_v417 = v423 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v424 : Result<wasm_bindgen_JsValue option, std_string_String> = match v414 with Ok x -> Ok x | Error x -> Error (v415 x)
            let _run_target_args'_v417 = v424 
            #endif
#if FABLE_COMPILER_PYTHON
            let v425 : Result<wasm_bindgen_JsValue option, std_string_String> = match v414 with Ok x -> Ok x | Error x -> Error (v415 x)
            let _run_target_args'_v417 = v425 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v426 : Result<wasm_bindgen_JsValue option, std_string_String> = match v414 with Ok x -> Ok x | Error x -> Error (v415 x)
            let _run_target_args'_v417 = v426 
            #endif
#else
            let v427 : Result<wasm_bindgen_JsValue option, std_string_String> = match v414 with Ok x -> Ok x | Error x -> Error (v415 x)
            let _run_target_args'_v417 = v427 
            #endif
            let v428 : Result<wasm_bindgen_JsValue option, std_string_String> = _run_target_args'_v417 
            let v431 : string = "$0?"
            let v432 : wasm_bindgen_JsValue option = Fable.Core.RustInterop.emitRustExpr v428 v431 
            let v434 : (wasm_bindgen_JsValue -> US4) = method17()
            let v435 : US4 option = v432 |> Option.map v434 
            let v448 : US4 = US4_1
            let v449 : US4 = v435 |> Option.defaultValue v448 
            let v555 : US25 =
                match v449 with
                | US4_1 -> (* None *)
                    US25_1
                | US4_0(v453) -> (* Some *)
                    let v454 : wasm_bindgen_JsValue = method18(v453)
                    let v455 : string = "serde_wasm_bindgen::from_value(v454)"
                    let v456 : Result<serde_json_Value option, serde_wasm_bindgen_Error> = Fable.Core.RustInterop.emitRustExpr () v455 
                    let v457 : (serde_wasm_bindgen_Error -> std_string_String) = method19()
                    (* run_target_args'
                    let v459 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v460 : string = "$0.map_err(|x| $1(x))"
                    let v461 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v456, v457) v460 
                    let _run_target_args'_v459 = v461 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v462 : string = "$0.map_err(|x| $1(x))"
                    let v463 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v456, v457) v462 
                    let _run_target_args'_v459 = v463 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v464 : string = "$0.map_err(|x| $1(x))"
                    let v465 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v456, v457) v464 
                    let _run_target_args'_v459 = v465 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v466 : Result<serde_json_Value option, std_string_String> = match v456 with Ok x -> Ok x | Error x -> Error (v457 x)
                    let _run_target_args'_v459 = v466 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v467 : Result<serde_json_Value option, std_string_String> = match v456 with Ok x -> Ok x | Error x -> Error (v457 x)
                    let _run_target_args'_v459 = v467 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v468 : Result<serde_json_Value option, std_string_String> = match v456 with Ok x -> Ok x | Error x -> Error (v457 x)
                    let _run_target_args'_v459 = v468 
                    #endif
#else
                    let v469 : Result<serde_json_Value option, std_string_String> = match v456 with Ok x -> Ok x | Error x -> Error (v457 x)
                    let _run_target_args'_v459 = v469 
                    #endif
                    let v470 : Result<serde_json_Value option, std_string_String> = _run_target_args'_v459 
                    let v473 : string = "$0?"
                    let v474 : serde_json_Value option = Fable.Core.RustInterop.emitRustExpr v470 v473 
                    let v476 : (serde_json_Value -> US5) = method20()
                    let v477 : US5 option = v474 |> Option.map v476 
                    let v490 : US5 = US5_1
                    let v491 : US5 = v477 |> Option.defaultValue v490 
                    match v491 with
                    | US5_1 -> (* None *)
                        US25_1
                    | US5_0(v495) -> (* Some *)
                        let v496 : serde_json_Value = method21(v495)
                        let v497 : string = "serde_json::from_value(v496)"
                        let v498 : Result<Vec<uint8>, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr () v497 
                        let v499 : (serde_json_Error -> std_string_String) = method22()
                        (* run_target_args'
                        let v501 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v502 : string = "$0.map_err(|x| $1(x))"
                        let v503 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v498, v499) v502 
                        let _run_target_args'_v501 = v503 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v504 : string = "$0.map_err(|x| $1(x))"
                        let v505 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v498, v499) v504 
                        let _run_target_args'_v501 = v505 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v506 : string = "$0.map_err(|x| $1(x))"
                        let v507 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v498, v499) v506 
                        let _run_target_args'_v501 = v507 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v508 : Result<Vec<uint8>, std_string_String> = match v498 with Ok x -> Ok x | Error x -> Error (v499 x)
                        let _run_target_args'_v501 = v508 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v509 : Result<Vec<uint8>, std_string_String> = match v498 with Ok x -> Ok x | Error x -> Error (v499 x)
                        let _run_target_args'_v501 = v509 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v510 : Result<Vec<uint8>, std_string_String> = match v498 with Ok x -> Ok x | Error x -> Error (v499 x)
                        let _run_target_args'_v501 = v510 
                        #endif
#else
                        let v511 : Result<Vec<uint8>, std_string_String> = match v498 with Ok x -> Ok x | Error x -> Error (v499 x)
                        let _run_target_args'_v501 = v511 
                        #endif
                        let v512 : Result<Vec<uint8>, std_string_String> = _run_target_args'_v501 
                        let v515 : string = "$0?"
                        let v516 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v512 v515 
                        let v517 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                        let v518 : (uint8 []) = Fable.Core.RustInterop.emitRustExpr v516 v517 
                        let v519 : int32 = v518.Length
                        let v520 : string = "state_core.get_data () / data_len: " + string v519 + ""
                        let v521 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v522 : bool = Fable.Core.RustInterop.emitRustExpr v520 v521 
                        let v523 : string = "$0.to_vec()"
                        let v524 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v518 v523 
                        let v525 : string = "v524.as_slice()"
                        let v526 : Ref<Slice<uint8>> = Fable.Core.RustInterop.emitRustExpr () v525 
                        let v527 : string = "true; let mut v526 = v526"
                        let v528 : bool = Fable.Core.RustInterop.emitRustExpr () v527 
                        let v529 : string = "borsh::BorshDeserialize::deserialize(&mut v526)"
                        let v530 : Result<Heap4, borsh_io_Error> = Fable.Core.RustInterop.emitRustExpr () v529 
                        let v531 : (borsh_io_Error -> std_string_String) = method23()
                        (* run_target_args'
                        let v533 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v534 : string = "$0.map_err(|x| $1(x))"
                        let v535 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v530, v531) v534 
                        let _run_target_args'_v533 = v535 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v536 : string = "$0.map_err(|x| $1(x))"
                        let v537 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v530, v531) v536 
                        let _run_target_args'_v533 = v537 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v538 : string = "$0.map_err(|x| $1(x))"
                        let v539 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v530, v531) v538 
                        let _run_target_args'_v533 = v539 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v540 : Result<Heap4, std_string_String> = match v530 with Ok x -> Ok x | Error x -> Error (v531 x)
                        let _run_target_args'_v533 = v540 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v541 : Result<Heap4, std_string_String> = match v530 with Ok x -> Ok x | Error x -> Error (v531 x)
                        let _run_target_args'_v533 = v541 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v542 : Result<Heap4, std_string_String> = match v530 with Ok x -> Ok x | Error x -> Error (v531 x)
                        let _run_target_args'_v533 = v542 
                        #endif
#else
                        let v543 : Result<Heap4, std_string_String> = match v530 with Ok x -> Ok x | Error x -> Error (v531 x)
                        let _run_target_args'_v533 = v543 
                        #endif
                        let v544 : Result<Heap4, std_string_String> = _run_target_args'_v533 
                        let v547 : string = "$0?"
                        let v548 : Heap4 = Fable.Core.RustInterop.emitRustExpr v544 v547 
                        US25_0(v548)
            let v563 : Heap4 option =
                match v555 with
                | US25_1 -> (* None *)
                    let v561 : Heap4 option = None
                    v561
                | US25_0(v556) -> (* Some *)
                    let v558 : Heap4 option = Some v556 
                    v558
            let v564 : Result<Heap4 option, std_string_String> = Ok v563 
            let v565 : string = v49 + v50 
            let x = v564 //
            let v566 : _ = x
            let v567 : unit = ()
            (* run_target_args'
            let v568 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v569 : string = $"true; let _fix_closure_v567 = $0"
            let v570 : bool = Fable.Core.RustInterop.emitRustExpr v566 v569 
            let _run_target_args'_v568 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v571 : string = $"true; let _fix_closure_v567 = $0"
            let v572 : bool = Fable.Core.RustInterop.emitRustExpr v566 v571 
            let _run_target_args'_v568 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v573 : string = $"true; let _fix_closure_v567 = $0"
            let v574 : bool = Fable.Core.RustInterop.emitRustExpr v566 v573 
            let _run_target_args'_v568 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v568 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v568 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v568 = false 
            #endif
#else
            let _run_target_args'_v568 = false 
            #endif
            let v575 : bool = _run_target_args'_v568 
            let v577 : string = $"true; _fix_closure_v567 " + v565 + "); " + v49 + " // rust.fix_closure'"
            let v578 : bool = Fable.Core.RustInterop.emitRustExpr () v577 
            let v579 : string = "__future_init"
            let v580 : _ = Fable.Core.RustInterop.emitRustExpr () v579 
            let v581 : string = "v580"
            let v582 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v581 
            let func1_from_result = v582 //
            let v583 : _ = func1_from_result
            let v584 : string = $"true; $0 /*"
            let v585 : bool = Fable.Core.RustInterop.emitRustExpr v583 v584 
            let v586 : string = $"*/ }}); //"
            let v587 : bool = Fable.Core.RustInterop.emitRustExpr () v586 
            let v588 : string = $"_func1_from_v196"
            let v589 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v588 
            let v590 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v591 : (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>) = closure65(v589)
            let v592 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr struct (v145, v591) v590 
            let v593 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = method81(v592)
            let v594 : string = "futures::future::try_join_all(v593)"
            let v595 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v594 
            let v596 : string = "v595.await"
            let v597 : Result<Vec<Heap4 option>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v596 
            let v598 : string = "$0?"
            let v599 : Vec<Heap4 option> = Fable.Core.RustInterop.emitRustExpr v597 v598 
            US24_0(v599)
        | _ ->
            let v601 : string = "database=None"
            (* run_target_args'
            let v606 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v607 : string = "&*$0"
            let v608 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v601 v607 
            let _run_target_args'_v606 = v608 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v609 : string = "&*$0"
            let v610 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v601 v609 
            let _run_target_args'_v606 = v610 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v611 : string = "&*$0"
            let v612 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v601 v611 
            let _run_target_args'_v606 = v612 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v614 : Ref<Str> = v601 |> unbox<Ref<Str>>
            let _run_target_args'_v606 = v614 
            #endif
#if FABLE_COMPILER_PYTHON
            let v618 : Ref<Str> = v601 |> unbox<Ref<Str>>
            let _run_target_args'_v606 = v618 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v622 : Ref<Str> = v601 |> unbox<Ref<Str>>
            let _run_target_args'_v606 = v622 
            #endif
#else
            let v626 : Ref<Str> = v601 |> unbox<Ref<Str>>
            let _run_target_args'_v606 = v626 
            #endif
            let v629 : Ref<Str> = _run_target_args'_v606 
            (* run_target_args'
            let v639 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v640 : string = "String::from($0)"
            let v641 : std_string_String = Fable.Core.RustInterop.emitRustExpr v629 v640 
            let _run_target_args'_v639 = v641 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v642 : string = "String::from($0)"
            let v643 : std_string_String = Fable.Core.RustInterop.emitRustExpr v629 v642 
            let _run_target_args'_v639 = v643 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v644 : string = "String::from($0)"
            let v645 : std_string_String = Fable.Core.RustInterop.emitRustExpr v629 v644 
            let _run_target_args'_v639 = v645 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v647 : std_string_String = v629 |> unbox<std_string_String>
            let _run_target_args'_v639 = v647 
            #endif
#if FABLE_COMPILER_PYTHON
            let v651 : std_string_String = v629 |> unbox<std_string_String>
            let _run_target_args'_v639 = v651 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v655 : std_string_String = v629 |> unbox<std_string_String>
            let _run_target_args'_v639 = v655 
            #endif
#else
            let v659 : std_string_String = v629 |> unbox<std_string_String>
            let _run_target_args'_v639 = v659 
            #endif
            let v662 : std_string_String = _run_target_args'_v639 
            US24_1(v662)
    let v675 : Result<Vec<Heap4 option>, std_string_String> =
        match v669 with
        | US24_1(v672) -> (* Error *)
            let v673 : Result<Vec<Heap4 option>, std_string_String> = Error v672 
            v673
        | US24_0(v670) -> (* Ok *)
            let v671 : Result<Vec<Heap4 option>, std_string_String> = Ok v670 
            v671
    let v677 : string = $"%A{v675}"
    let v680 : string = "state_core.use_requests (4) / state_data_resource new_local_resource / result: " + string v677 + ""
    let v681 : int64 = 200L
    let v682 : string = method8(v681, v680)
    let v683 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v684 : bool = Fable.Core.RustInterop.emitRustExpr v682 v683 
    let v685 : string = v49 + v50 
    let x = v675 //
    let v686 : _ = x
    let v687 : unit = ()
    (* run_target_args'
    let v688 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v689 : string = $"true; let _fix_closure_v687 = $0"
    let v690 : bool = Fable.Core.RustInterop.emitRustExpr v686 v689 
    let _run_target_args'_v688 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v691 : string = $"true; let _fix_closure_v687 = $0"
    let v692 : bool = Fable.Core.RustInterop.emitRustExpr v686 v691 
    let _run_target_args'_v688 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v693 : string = $"true; let _fix_closure_v687 = $0"
    let v694 : bool = Fable.Core.RustInterop.emitRustExpr v686 v693 
    let _run_target_args'_v688 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v688 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v688 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v688 = false 
    #endif
#else
    let _run_target_args'_v688 = false 
    #endif
    let v695 : bool = _run_target_args'_v688 
    let v697 : string = $"true; _fix_closure_v687 " + v685 + "); " + v49 + " // rust.fix_closure'"
    let v698 : bool = Fable.Core.RustInterop.emitRustExpr () v697 
    let v699 : string = "__future_init"
    let v700 : _ = Fable.Core.RustInterop.emitRustExpr () v699 
    let v701 : string = "v700"
    let v702 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<Heap4 option>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v701 
    let v703 : string = $"true; $0 /*"
    let v704 : bool = Fable.Core.RustInterop.emitRustExpr v702 v703 
    let v705 : string = $"*/ }}); //"
    let v706 : bool = Fable.Core.RustInterop.emitRustExpr () v705 
    let v707 : string = $"_func0_from_v128"
    let v708 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<Heap4 option>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v707 
    let v709 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v710 : leptos_prelude_ArcLocalResource<Result<Vec<Heap4 option>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v708 v709 
    let v711 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v712 : (unit -> Result<Vec<Heap4 option>, std_string_String> option) = closure66(v710)
    let v713 : leptos_prelude_ArcMemo<Result<Vec<Heap4 option>, std_string_String> option> = Fable.Core.RustInterop.emitRustExpr v712 v711 
    let v714 : unit = ()
    let v715 : string = $"true; let _func0_from_v714 = Func0::from(move || {{ //"
    let v716 : bool = Fable.Core.RustInterop.emitRustExpr () v715 
    let v717 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v718 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v717 
    let v719 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v720 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v713 v719 
    let v722 : string = $"%A{v718}"
    let v725 : int64 = 400L
    let v726 : string = method8(v725, v722)
    let v727 : string = "state_core.use_requests (7) / json new_local_resource / requests: " + string v726 + ""
    let v728 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v729 : bool = Fable.Core.RustInterop.emitRustExpr v727 v728 
    let v730 : string = "true; let __future_init = Box::pin(/*"
    let v731 : bool = Fable.Core.RustInterop.emitRustExpr () v730 
    let v732 : string = "*/ async move { /*"
    let v733 : bool = Fable.Core.RustInterop.emitRustExpr () v732 
    let v734 : string = "*/ ()"
    let v735 : bool = Fable.Core.RustInterop.emitRustExpr () v734 
    let v737 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v738 : US26 option = v720 |> Option.map v737 
    let v751 : US26 = US26_1
    let v752 : US26 = v738 |> Option.defaultValue v751 
    let v797 : US27 =
        match v752 with
        | US26_1 -> (* None *)
            US27_1
        | US26_0(v756) -> (* Some *)
            let v757 : (Vec<Heap4 option> -> US24) = method83()
            let v758 : (std_string_String -> US24) = method84()
            let v759 : US24 = match v756 with Ok x -> v757 x | Error x -> v758 x
            let v793 : US28 =
                match v759 with
                | US24_1(v790) -> (* Error *)
                    US28_1(v790)
                | US24_0(v760) -> (* Ok *)
                    let v761 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v762 : bool = Fable.Core.RustInterop.emitRustExpr v760 v761 
                    let v763 : string = "x"
                    let v764 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v763 
                    let v766 : (Heap4 -> US25) = method85()
                    let v767 : US25 option = v764 |> Option.map v766 
                    let v780 : US25 = US25_1
                    let v781 : US25 = v767 |> Option.defaultValue v780 
                    let v785 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v786 : bool = Fable.Core.RustInterop.emitRustExpr v781 v785 
                    let v787 : string = "_vec_map"
                    let v788 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v787 
                    US28_0(v788)
            US27_0(v793)
    let v799 : string = $"%A{v797}"
    let v802 : int64 = 400L
    let v803 : string = method8(v802, v799)
    let v804 : string = "state_core.use_requests (8) / result_memo / state_data: " + string v803 + ""
    let v805 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v806 : bool = Fable.Core.RustInterop.emitRustExpr v804 v805 
    let v807 : (int32 -> (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>)) = method86(v797)
    let v808 : Vec<struct (string * US23 * string * bool * bool)> = method96(v718)
    let v809 : string = "v808.iter().enumerate().map(|(i, x)| v807(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v810 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v809 
    let v811 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = method97(v810)
    let v812 : string = "futures::future::try_join_all(v811)"
    let v813 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v812 
    let v814 : string = "v813.await"
    let v815 : Result<Vec<string option>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v814 
    let v816 : string = "$0?"
    let v817 : Vec<string option> = Fable.Core.RustInterop.emitRustExpr v815 v816 
    let v818 : Result<Vec<string option>, std_string_String> = Ok v817 
    let v819 : string = v49 + v50 
    let x = v818 //
    let v820 : _ = x
    let v821 : unit = ()
    (* run_target_args'
    let v822 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v823 : string = $"true; let _fix_closure_v821 = $0"
    let v824 : bool = Fable.Core.RustInterop.emitRustExpr v820 v823 
    let _run_target_args'_v822 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v825 : string = $"true; let _fix_closure_v821 = $0"
    let v826 : bool = Fable.Core.RustInterop.emitRustExpr v820 v825 
    let _run_target_args'_v822 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v827 : string = $"true; let _fix_closure_v821 = $0"
    let v828 : bool = Fable.Core.RustInterop.emitRustExpr v820 v827 
    let _run_target_args'_v822 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v822 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v822 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v822 = false 
    #endif
#else
    let _run_target_args'_v822 = false 
    #endif
    let v829 : bool = _run_target_args'_v822 
    let v831 : string = $"true; _fix_closure_v821 " + v819 + "); " + v49 + " // rust.fix_closure'"
    let v832 : bool = Fable.Core.RustInterop.emitRustExpr () v831 
    let v833 : string = "__future_init"
    let v834 : _ = Fable.Core.RustInterop.emitRustExpr () v833 
    let v835 : string = "v834"
    let v836 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<string option>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v835 
    let v837 : string = $"true; $0 /*"
    let v838 : bool = Fable.Core.RustInterop.emitRustExpr v836 v837 
    let v839 : string = $"*/ }}); //"
    let v840 : bool = Fable.Core.RustInterop.emitRustExpr () v839 
    let v841 : string = $"_func0_from_v714"
    let v842 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<string option>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v841 
    let v843 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v844 : leptos_prelude_ArcLocalResource<Result<Vec<string option>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v842 v843 
    let v845 : unit = ()
    let v846 : string = $"true; let _func1_from_v845 = Func1::from(move |value| {{ //"
    let v847 : bool = Fable.Core.RustInterop.emitRustExpr () v846 
    let v848 : string = $"value"
    let v849 : Heap4 = Fable.Core.RustInterop.emitRustExpr () v848 
    let v851 : string = $"%A{v849}"
    let v854 : int64 = System.Convert.ToInt64 v851.Length
    let v855 : string = "state_core.use_requests (10) / set_state_data_action / value_len: " + string v854 + ""
    let v856 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v857 : bool = Fable.Core.RustInterop.emitRustExpr v855 v856 
    let v858 : string = "true; let __future_init = Box::pin(/*"
    let v859 : bool = Fable.Core.RustInterop.emitRustExpr () v858 
    let v860 : string = "*/ async move { /*"
    let v861 : bool = Fable.Core.RustInterop.emitRustExpr () v860 
    let v862 : string = "*/ ()"
    let v863 : bool = Fable.Core.RustInterop.emitRustExpr () v862 
    let v864 : string = "Box::pin($0)"
    let v865 : std_pin_Pin<Box<leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>>> = Fable.Core.RustInterop.emitRustExpr v0 v864 
    let v866 : string = $"leptos::prelude::ArcMemo::get_untracked(&$0)"
    let v867 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v865 v866 
    let v868 : string = "Box::pin($0)"
    let v869 : std_pin_Pin<Box<leptos_prelude_ArcMemo<PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option>>> = Fable.Core.RustInterop.emitRustExpr v127 v868 
    let v870 : string = $"leptos::prelude::ArcMemo::get_untracked(&$0)"
    let v871 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr v869 v870 
    let v872 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v873 : bool = Fable.Core.RustInterop.emitRustExpr v871 v872 
    let v874 : string = "x"
    let v875 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr () v874 
    let v876 : string = "$0.0"
    let v877 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr v875 v876 
    let v878 : string = "true; $0 })"
    let v879 : bool = Fable.Core.RustInterop.emitRustExpr v877 v878 
    let v880 : string = "_optionm_map_"
    let v881 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr () v880 
    let v883 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v884 : US2 option = v881 |> Option.map v883 
    let v897 : US2 = US2_1
    let v898 : US2 = v884 |> Option.defaultValue v897 
    let v1069 : US34 =
        match v898 with
        | US2_0(v902) -> (* Some *)
            let v903 : unit = ()
            let v904 : string = $"true; let _func1_from_v903 = Func1::from(move |value| {{ //"
            let v905 : bool = Fable.Core.RustInterop.emitRustExpr () v904 
            let v906 : string = $"value"
            let struct (v907 : string, v908 : US23, v909 : string, v910 : bool, v911 : bool) = Fable.Core.RustInterop.emitRustExpr () v906 
            let v912 : string = "true; let __future_init = Box::pin(/*"
            let v913 : bool = Fable.Core.RustInterop.emitRustExpr () v912 
            let v914 : string = "*/ async move { /*"
            let v915 : bool = Fable.Core.RustInterop.emitRustExpr () v914 
            let v916 : string = "*/ ()"
            let v917 : bool = Fable.Core.RustInterop.emitRustExpr () v916 
            let v918 : string = "state_core.use_requests (11) / set_state_data_action / database=Some(_) / url: " + v907 + ""
            let v919 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v920 : bool = Fable.Core.RustInterop.emitRustExpr v918 v919 
            let v921 : string = "url[" + v907 + "](" + $"%A{v909}" + ")"
            let v923 : string = $"%A{v849}"
            let v926 : int64 = System.Convert.ToInt64 v923.Length
            let v927 : string = "state_core.set_data () / data_len: " + string v926 + ""
            let v928 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v929 : bool = Fable.Core.RustInterop.emitRustExpr v927 v928 
            let v930 : string = "true; let __future_init = Box::pin(/*"
            let v931 : bool = Fable.Core.RustInterop.emitRustExpr () v930 
            let v932 : string = "*/ async move { /*"
            let v933 : bool = Fable.Core.RustInterop.emitRustExpr () v932 
            let v934 : string = "*/ ()"
            let v935 : bool = Fable.Core.RustInterop.emitRustExpr () v934 
            let v936 : string = "true; let mut data = Vec::new()"
            let v937 : bool = Fable.Core.RustInterop.emitRustExpr () v936 
            let v938 : string = "true; borsh::BorshSerialize::serialize(&$0, &mut data).unwrap()"
            let v939 : bool = Fable.Core.RustInterop.emitRustExpr v849 v938 
            let v940 : string = "data"
            let v941 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr () v940 
            let v942 : string = "serde_wasm_bindgen::to_value(&v941).unwrap()"
            let v943 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr () v942 
            let v944 : string = method98(v921)
            (* run_target_args'
            let v949 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v950 : string = "&*$0"
            let v951 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v944 v950 
            let _run_target_args'_v949 = v951 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v952 : string = "&*$0"
            let v953 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v944 v952 
            let _run_target_args'_v949 = v953 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v954 : string = "&*$0"
            let v955 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v944 v954 
            let _run_target_args'_v949 = v955 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v957 : Ref<Str> = v944 |> unbox<Ref<Str>>
            let _run_target_args'_v949 = v957 
            #endif
#if FABLE_COMPILER_PYTHON
            let v961 : Ref<Str> = v944 |> unbox<Ref<Str>>
            let _run_target_args'_v949 = v961 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v965 : Ref<Str> = v944 |> unbox<Ref<Str>>
            let _run_target_args'_v949 = v965 
            #endif
#else
            let v969 : Ref<Str> = v944 |> unbox<Ref<Str>>
            let _run_target_args'_v949 = v969 
            #endif
            let v972 : Ref<Str> = _run_target_args'_v949 
            let v978 : string = "$0.transaction(&[\"store\"], rexie::TransactionMode::ReadWrite)?"
            let v979 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v902 v978 
            let v980 : string = "v979.store(\"store\")?"
            let v981 : rexie_Store = Fable.Core.RustInterop.emitRustExpr () v980 
            let v982 : string = "true; v981.put(&v943, Some(&$0.into())).await?"
            let v983 : bool = Fable.Core.RustInterop.emitRustExpr v972 v982 
            let v984 : string = "true; v979.done().await?"
            let v985 : bool = Fable.Core.RustInterop.emitRustExpr () v984 
            let v986 : Result<unit, rexie_Error> = Ok () 
            let v987 : string = v49 + v50 
            let x = v986 //
            let v988 : _ = x
            let v989 : unit = ()
            (* run_target_args'
            let v990 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v991 : string = $"true; let _fix_closure_v989 = $0"
            let v992 : bool = Fable.Core.RustInterop.emitRustExpr v988 v991 
            let _run_target_args'_v990 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v993 : string = $"true; let _fix_closure_v989 = $0"
            let v994 : bool = Fable.Core.RustInterop.emitRustExpr v988 v993 
            let _run_target_args'_v990 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v995 : string = $"true; let _fix_closure_v989 = $0"
            let v996 : bool = Fable.Core.RustInterop.emitRustExpr v988 v995 
            let _run_target_args'_v990 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v990 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v990 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v990 = false 
            #endif
#else
            let _run_target_args'_v990 = false 
            #endif
            let v997 : bool = _run_target_args'_v990 
            let v999 : string = $"true; _fix_closure_v989 " + v987 + "); " + v49 + " // rust.fix_closure'"
            let v1000 : bool = Fable.Core.RustInterop.emitRustExpr () v999 
            let v1001 : string = "__future_init"
            let v1002 : _ = Fable.Core.RustInterop.emitRustExpr () v1001 
            let v1003 : string = "v1002"
            let v1004 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v1003 
            let v1005 : string = "v1004.await"
            let v1006 : Result<unit, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v1005 
            let v1007 : (rexie_Error -> std_string_String) = method99()
            (* run_target_args'
            let v1009 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1010 : string = "$0.map_err(|x| $1(x))"
            let v1011 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1006, v1007) v1010 
            let _run_target_args'_v1009 = v1011 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1012 : string = "$0.map_err(|x| $1(x))"
            let v1013 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1006, v1007) v1012 
            let _run_target_args'_v1009 = v1013 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1014 : string = "$0.map_err(|x| $1(x))"
            let v1015 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1006, v1007) v1014 
            let _run_target_args'_v1009 = v1015 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1016 : Result<unit, std_string_String> = match v1006 with Ok x -> Ok x | Error x -> Error (v1007 x)
            let _run_target_args'_v1009 = v1016 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1017 : Result<unit, std_string_String> = match v1006 with Ok x -> Ok x | Error x -> Error (v1007 x)
            let _run_target_args'_v1009 = v1017 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1018 : Result<unit, std_string_String> = match v1006 with Ok x -> Ok x | Error x -> Error (v1007 x)
            let _run_target_args'_v1009 = v1018 
            #endif
#else
            let v1019 : Result<unit, std_string_String> = match v1006 with Ok x -> Ok x | Error x -> Error (v1007 x)
            let _run_target_args'_v1009 = v1019 
            #endif
            let v1020 : Result<unit, std_string_String> = _run_target_args'_v1009 
            let v1023 : string = "true; $0?"
            let v1024 : bool = Fable.Core.RustInterop.emitRustExpr v1020 v1023 
            
            let v1025 : Result<unit, std_string_String> = Ok () 
            let v1026 : string = v49 + v50 
            let x = v1025 //
            let v1027 : _ = x
            let v1028 : unit = ()
            (* run_target_args'
            let v1029 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1030 : string = $"true; let _fix_closure_v1028 = $0"
            let v1031 : bool = Fable.Core.RustInterop.emitRustExpr v1027 v1030 
            let _run_target_args'_v1029 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1032 : string = $"true; let _fix_closure_v1028 = $0"
            let v1033 : bool = Fable.Core.RustInterop.emitRustExpr v1027 v1032 
            let _run_target_args'_v1029 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1034 : string = $"true; let _fix_closure_v1028 = $0"
            let v1035 : bool = Fable.Core.RustInterop.emitRustExpr v1027 v1034 
            let _run_target_args'_v1029 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v1029 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v1029 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v1029 = false 
            #endif
#else
            let _run_target_args'_v1029 = false 
            #endif
            let v1036 : bool = _run_target_args'_v1029 
            let v1038 : string = $"true; _fix_closure_v1028 " + v1026 + "); " + v49 + " // rust.fix_closure'"
            let v1039 : bool = Fable.Core.RustInterop.emitRustExpr () v1038 
            let v1040 : string = "__future_init"
            let v1041 : _ = Fable.Core.RustInterop.emitRustExpr () v1040 
            let v1042 : string = "v1041"
            let v1043 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v1042 
            let func1_from_result = v1043 //
            let v1044 : _ = func1_from_result
            let v1045 : string = $"true; $0 /*"
            let v1046 : bool = Fable.Core.RustInterop.emitRustExpr v1044 v1045 
            let v1047 : string = $"*/ }}); //"
            let v1048 : bool = Fable.Core.RustInterop.emitRustExpr () v1047 
            let v1049 : string = $"_func1_from_v903"
            let v1050 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1049 
            let v1051 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v1052 : (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>) = closure76(v1050)
            let v1053 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr struct (v867, v1052) v1051 
            let v1054 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = method101(v1053)
            let v1055 : string = "futures::future::try_join_all(v1054)"
            let v1056 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1055 
            let v1057 : string = "v1056.await"
            let v1058 : Result<Vec<unit>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v1057 
            let v1059 : string = "$0?"
            let v1060 : Vec<unit> = Fable.Core.RustInterop.emitRustExpr v1058 v1059 
            US34_0(v1060)
        | _ ->
            let v1062 : string = "state_core.use_requests (12) / set_state_data_action / database,request=None"
            let v1063 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1064 : bool = Fable.Core.RustInterop.emitRustExpr v1062 v1063 
            let v1065 : (unit []) = [||]
            let v1066 : string = "$0.to_vec()"
            let v1067 : Vec<unit> = Fable.Core.RustInterop.emitRustExpr v1065 v1066 
            US34_0(v1067)
    let v1075 : Result<Vec<unit>, std_string_String> =
        match v1069 with
        | US34_1(v1072) -> (* Error *)
            let v1073 : Result<Vec<unit>, std_string_String> = Error v1072 
            v1073
        | US34_0(v1070) -> (* Ok *)
            let v1071 : Result<Vec<unit>, std_string_String> = Ok v1070 
            v1071
    let v1076 : string = v49 + v50 
    let x = v1075 //
    let v1077 : _ = x
    let v1078 : unit = ()
    (* run_target_args'
    let v1079 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v1080 : string = $"true; let _fix_closure_v1078 = $0"
    let v1081 : bool = Fable.Core.RustInterop.emitRustExpr v1077 v1080 
    let _run_target_args'_v1079 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v1082 : string = $"true; let _fix_closure_v1078 = $0"
    let v1083 : bool = Fable.Core.RustInterop.emitRustExpr v1077 v1082 
    let _run_target_args'_v1079 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v1084 : string = $"true; let _fix_closure_v1078 = $0"
    let v1085 : bool = Fable.Core.RustInterop.emitRustExpr v1077 v1084 
    let _run_target_args'_v1079 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v1079 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v1079 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v1079 = false 
    #endif
#else
    let _run_target_args'_v1079 = false 
    #endif
    let v1086 : bool = _run_target_args'_v1079 
    let v1088 : string = $"true; _fix_closure_v1078 " + v1076 + "); " + v49 + " // rust.fix_closure'"
    let v1089 : bool = Fable.Core.RustInterop.emitRustExpr () v1088 
    let v1090 : string = "__future_init"
    let v1091 : _ = Fable.Core.RustInterop.emitRustExpr () v1090 
    let v1092 : string = "v1091"
    let v1093 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v1092 
    let func1_from_result = v1093 //
    let v1094 : _ = func1_from_result
    let v1095 : string = $"true; $0 /*"
    let v1096 : bool = Fable.Core.RustInterop.emitRustExpr v1094 v1095 
    let v1097 : string = $"*/ }}); //"
    let v1098 : bool = Fable.Core.RustInterop.emitRustExpr () v1097 
    let v1099 : string = $"_func1_from_v845"
    let v1100 : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1099 
    let v1101 : string = "leptos::prelude::Action::new(move |value: &std::sync::Arc<Heap4>| $0(value.clone()))"
    let v1102 : (Heap4 -> std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>) = closure77(v1100)
    let v1103 : leptos_prelude_Action<Heap4, Result<Vec<unit>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v1102 v1101 
    let v1104 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1105 : (unit -> (Result<crate_model_near_nearblocks_Root option, std_string_String> [])) = closure78(v0, v713, v844, v1103)
    let v1106 : leptos_prelude_ArcMemo<(Result<crate_model_near_nearblocks_Root option, std_string_String> [])> = Fable.Core.RustInterop.emitRustExpr v1105 v1104 
    let v1107 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1108 : (unit -> Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>) = closure87(v1, v124, v710, v1106)
    let v1109 : leptos_prelude_ArcMemo<Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>> = Fable.Core.RustInterop.emitRustExpr v1108 v1107 
    v1109
and closure91 () (v0 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option) : US43 =
    US43_0(v0)
and method115 () : ((struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option -> US43) =
    closure91()
and closure92 () (v0 : std_string_String) : US43 =
    US43_1(v0)
and method116 () : (std_string_String -> US43) =
    closure92()
and method117 (v0 : Func0<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>, US43>) : Func0<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>, US43> =
    v0
and closure93 (v0 : Func0<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>, US43>) (v1 : Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>) : US43 =
    let v2 : Func0<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>, US43> = method117(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : US43 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure94 () (v0 : (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) : US45 =
    US45_0(v0)
and method118 () : ((struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) -> US45) =
    closure94()
and method119 (v0 : Func0<US43, US44>) : Func0<US43, US44> =
    v0
and closure95 (v0 : Func0<US43, US44>) (v1 : US43) : US44 =
    let v2 : Func0<US43, US44> = method119(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : US44 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure96 () (v0 : US44) : bool =
    match v0 with
    | US44_0(v1) -> (* Ok *)
        match v1 with
        | US45_1 -> (* None *)
            true
        | _ ->
            false
    | _ ->
        false
and method120 () : (US44 -> bool) =
    closure96()
and method121 (v0 : Vec<US44>) : Vec<US44> =
    v0
and method123 (v0 : Func0<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))), struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))>) : Func0<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))), struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> =
    v0
and closure99 (v0 : Func0<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))), struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))>) (v1 : (unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])))) : struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) =
    let v2 : Func0<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))), struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = method123(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : unativeint, v6 : std_string_String, v7 : std_string_String, v8 : std_string_String, v9 : std_string_String, v10 : std_string_String, v11 : std_string_String, v12 : uint32, v13 : (struct (std_string_String * std_string_String option) []), v14 : float, v15 : bool, v16 : float, v17 : (std_string_String [])) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17)
and method124 (v0 : Func0<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])), struct (string * unativeint * Heap5)>) : Func0<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])), struct (string * unativeint * Heap5)> =
    v0
and closure100 (v0 : Func0<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])), struct (string * unativeint * Heap5)>) struct (v1 : unativeint, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : std_string_String, v7 : std_string_String, v8 : uint32, v9 : (struct (std_string_String * std_string_String option) []), v10 : float, v11 : bool, v12 : float, v13 : (std_string_String [])) : struct (string * unativeint * Heap5) =
    let v14 : Func0<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])), struct (string * unativeint * Heap5)> = method124(v0)
    let func1_move_x = struct (v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13) //
    let v15 : _ = func1_move_x
    let v16 : string = "(move |x| v14(x))($0)"
    let struct (v17 : string, v18 : unativeint, v19 : Heap5) = Fable.Core.RustInterop.emitRustExpr v15 v16 
    struct (v17, v18, v19)
and closure98 (v0 : (string []), v1 : int32) (v2 : US44) : US48 =
    let v3 : string = v0.[int v1]
    match v2 with
    | US44_1(v122) -> (* Error *)
        US48_1(v122)
    | US44_0(v4) -> (* Ok *)
        let v120 : US49 =
            match v4 with
            | US45_1 -> (* None *)
                US49_1
            | US45_0(v5) -> (* Some *)
                let v6 : string = "$0.to_vec()"
                let v7 : Vec<struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr v5 v6 
                let v8 : string = "v7.into_iter()"
                let v9 : _ = Fable.Core.RustInterop.emitRustExpr () v8 
                let v10 : string = "v9.enumerate().map(std::sync::Arc::new)"
                let v11 : _ = Fable.Core.RustInterop.emitRustExpr () v10 
                let v12 : string = "$0.collect::<Vec<_>>()"
                let v13 : Vec<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])))> = Fable.Core.RustInterop.emitRustExpr v11 v12 
                let v14 : unit = ()
                let v15 : string = $"true; let _func1_from_v14 = Func1::from(move |value| {{ //"
                let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
                let v17 : string = $"value"
                let v18 : (unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))) = Fable.Core.RustInterop.emitRustExpr () v17 
                let (a, b) = v18 
                let v32 : unativeint = a
                let struct (v33 : std_string_String, v34 : std_string_String, v35 : std_string_String, v36 : std_string_String, v37 : std_string_String, v38 : std_string_String, v39 : uint32, v40 : (struct (std_string_String * std_string_String option) []), v41 : float, v42 : bool, v43 : float, v44 : (std_string_String [])) = b
                let func1_from_result = struct (v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44) //
                let v71 : _ = func1_from_result
                let v72 : string = $"true; $0 /*"
                let v73 : bool = Fable.Core.RustInterop.emitRustExpr v71 v72 
                let v74 : string = $"*/ }}); //"
                let v75 : bool = Fable.Core.RustInterop.emitRustExpr () v74 
                let v76 : string = $"_func1_from_v14"
                let v77 : Func0<(unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))), struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr () v76 
                let v78 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
                let v79 : ((unativeint * struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))) -> struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))) = closure99(v77)
                let v80 : Vec<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr struct (v13, v79) v78 
                let v81 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                let v82 : (struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) = Fable.Core.RustInterop.emitRustExpr v80 v81 
                let v83 : string = "$0.to_vec()"
                let v84 : Vec<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String []))> = Fable.Core.RustInterop.emitRustExpr v82 v83 
                let v85 : unit = ()
                let v86 : string = $"true; let _func1_from_v85 = Func1::from(move |value| {{ //"
                let v87 : bool = Fable.Core.RustInterop.emitRustExpr () v86 
                let v88 : string = $"value"
                let struct (v89 : unativeint, v90 : std_string_String, v91 : std_string_String, v92 : std_string_String, v93 : std_string_String, v94 : std_string_String, v95 : std_string_String, v96 : uint32, v97 : (struct (std_string_String * std_string_String option) []), v98 : float, v99 : bool, v100 : float, v101 : (std_string_String [])) = Fable.Core.RustInterop.emitRustExpr () v88 
                let v103 : unativeint = v1 |> unativeint 
                let v106 : Heap5 = {l0 = v90; l1 = v91; l2 = v92; l3 = v93; l4 = v94; l5 = v95; l6 = v96; l7 = v97; l8 = v98; l9 = v99; l10 = v100; l11 = v101} : Heap5
                let func1_from_result = struct (v3, v103, v106) //
                let v107 : _ = func1_from_result
                let v108 : string = $"true; $0 /*"
                let v109 : bool = Fable.Core.RustInterop.emitRustExpr v107 v108 
                let v110 : string = $"*/ }}); //"
                let v111 : bool = Fable.Core.RustInterop.emitRustExpr () v110 
                let v112 : string = $"_func1_from_v85"
                let v113 : Func0<struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])), struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr () v112 
                let v114 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
                let v115 : (struct (unativeint * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) -> struct (string * unativeint * Heap5)) = closure100(v113)
                let v116 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr struct (v84, v115) v114 
                US49_0(v116)
        US48_0(v120)
and closure97 (v0 : (string [])) (v1 : int32) : (US44 -> US48) =
    closure98(v0, v1)
and method122 (v0 : (string [])) : (int32 -> (US44 -> US48)) =
    closure97(v0)
and method125 (v0 : Vec<US44>) : Vec<US44> =
    v0
and method126 (v0 : Func0<US48, US50>) : Func0<US48, US50> =
    v0
and closure101 (v0 : Func0<US48, US50>) (v1 : US48) : US50 =
    let v2 : Func0<US48, US50> = method126(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : US50 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method127 (v0 : Func0<US50, Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>>) : Func0<US50, Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>> =
    v0
and closure102 (v0 : Func0<US50, Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>>) (v1 : US50) : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> =
    let v2 : Func0<US50, Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>> = method127(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method128 (v0 : int32, v1 : Mut1) : bool =
    let v2 : int32 = v1.l0
    let v3 : bool = v2 < v0
    v3
and closure103 () (v0 : Vec<struct (string * unativeint * Heap5)> option) : US50 =
    US50_0(v0)
and method130 () : (Vec<struct (string * unativeint * Heap5)> option -> US50) =
    closure103()
and closure104 () (v0 : std_string_String) : US50 =
    US50_1(v0)
and method131 () : (std_string_String -> US50) =
    closure104()
and closure105 () (v0 : Vec<struct (string * unativeint * Heap5)>) : US49 =
    US49_0(v0)
and method132 () : (Vec<struct (string * unativeint * Heap5)> -> US49) =
    closure105()
and method133 (v0 : Vec<struct (string * unativeint * Heap5)>) : Vec<struct (string * unativeint * Heap5)> =
    v0
and method134 (v0 : Vec<struct (string * unativeint * Heap5)>) : Vec<struct (string * unativeint * Heap5)> =
    v0
and method129 (v0 : UH2, v1 : US51) : US51 =
    match v0 with
    | UH2_1(v2, v3) -> (* Cons *)
        let v4 : (Vec<struct (string * unativeint * Heap5)> option -> US50) = method130()
        let v5 : (std_string_String -> US50) = method131()
        let v6 : US50 = match v2 with Ok x -> v4 x | Error x -> v5 x
        let v32 : US48 =
            match v6 with
            | US50_1(v29) -> (* Error *)
                US48_1(v29)
            | US50_0(v7) -> (* Ok *)
                let v9 : (Vec<struct (string * unativeint * Heap5)> -> US49) = method132()
                let v10 : US49 option = v7 |> Option.map v9 
                let v23 : US49 = US49_1
                let v24 : US49 = v10 |> Option.defaultValue v23 
                US48_0(v24)
        let v53 : US51 =
            match v1 with
            | US51_0(v33) -> (* Ok *)
                match v32 with
                | US48_1(v46) -> (* Error *)
                    US51_1(v46)
                | US48_0(v34) -> (* Ok *)
                    match v34 with
                    | US49_0(v35) -> (* Some *)
                        let v36 : Vec<struct (string * unativeint * Heap5)> = method133(v35)
                        let v37 : Vec<struct (string * unativeint * Heap5)> = method134(v33)
                        let v38 : string = "true; let mut v37 = v37"
                        let v39 : bool = Fable.Core.RustInterop.emitRustExpr () v38 
                        let v40 : string = "true; v37.extend(v36)"
                        let v41 : bool = Fable.Core.RustInterop.emitRustExpr () v40 
                        let v42 : string = "v37"
                        let v43 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr () v42 
                        US51_0(v43)
                    | _ ->
                        v1
            | _ ->
                match v32 with
                | US48_1(v50) -> (* Error *)
                    US51_1(v50)
                | _ ->
                    v1
        method129(v3, v53)
    | UH2_0 -> (* Nil *)
        v1
and method135 (v0 : Vec<struct (string * unativeint * Heap5)>) : Vec<struct (string * unativeint * Heap5)> =
    v0
and closure106 () struct (v0 : string, v1 : unativeint, v2 : Heap5) : std_string_String =
    let v3 : std_string_String = v2.l5
    v3
and method136 () : (struct (string * unativeint * Heap5) -> std_string_String) =
    closure106()
and method137 (v0 : Vec<struct (string * unativeint * Heap5)>) : Vec<struct (string * unativeint * Heap5)> =
    v0
and closure90 (v0 : leptos_prelude_ArcMemo<(string [])>, v1 : leptos_prelude_ArcMemo<Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>>) () : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> =
    let v2 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v3 : Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : unit = ()
    let v5 : string = $"true; let _func1_from_v4 = Func1::from(move |value| {{ //"
    let v6 : bool = Fable.Core.RustInterop.emitRustExpr () v5 
    let v7 : string = $"value"
    let v8 : Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v7 
    let v9 : ((struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option -> US43) = method115()
    let v10 : (std_string_String -> US43) = method116()
    let v11 : US43 = match v8 with Ok x -> v9 x | Error x -> v10 x
    let func1_from_result = v11 //
    let v12 : _ = func1_from_result
    let v13 : string = $"true; $0 /*"
    let v14 : bool = Fable.Core.RustInterop.emitRustExpr v12 v13 
    let v15 : string = $"*/ }}); //"
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = $"_func1_from_v4"
    let v18 : Func0<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>, US43> = Fable.Core.RustInterop.emitRustExpr () v17 
    let v19 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v20 : (Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String> -> US43) = closure93(v18)
    let v21 : Vec<US43> = Fable.Core.RustInterop.emitRustExpr struct (v3, v20) v19 
    let v22 : unit = ()
    let v23 : string = $"true; let _func1_from_v22 = Func1::from(move |value| {{ //"
    let v24 : bool = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : string = $"value"
    let v26 : US43 = Fable.Core.RustInterop.emitRustExpr () v25 
    let v52 : US44 =
        match v26 with
        | US43_1(v49) -> (* Error *)
            US44_1(v49)
        | US43_0(v27) -> (* Ok *)
            let v29 : ((struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) -> US45) = method118()
            let v30 : US45 option = v27 |> Option.map v29 
            let v43 : US45 = US45_1
            let v44 : US45 = v30 |> Option.defaultValue v43 
            US44_0(v44)
    let func1_from_result = v52 //
    let v53 : _ = func1_from_result
    let v54 : string = $"true; $0 /*"
    let v55 : bool = Fable.Core.RustInterop.emitRustExpr v53 v54 
    let v56 : string = $"*/ }}); //"
    let v57 : bool = Fable.Core.RustInterop.emitRustExpr () v56 
    let v58 : string = $"_func1_from_v22"
    let v59 : Func0<US43, US44> = Fable.Core.RustInterop.emitRustExpr () v58 
    let v60 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v61 : (US43 -> US44) = closure95(v59)
    let v62 : Vec<US44> = Fable.Core.RustInterop.emitRustExpr struct (v21, v61) v60 
    let v64 : string = $"%A{v62}"
    let v67 : int64 = 400L
    let v68 : string = method8(v67, v64)
    let v69 : string = "transactions.render (8) / txns move / root: " + string v68 + ""
    let v70 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v71 : bool = Fable.Core.RustInterop.emitRustExpr v69 v70 
    let v72 : (US44 -> bool) = method120()
    let v73 : Vec<US44> = method121(v62)
    let v74 : string = "v73.into_iter().filter(|x| v72(x.clone().clone())).collect::<Vec<_>>()"
    let v75 : Vec<US44> = Fable.Core.RustInterop.emitRustExpr () v74 
    let v76 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v77 : (US44 []) = Fable.Core.RustInterop.emitRustExpr v75 v76 
    let v78 : int32 = v77.Length
    let v79 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v80 : (US44 []) = Fable.Core.RustInterop.emitRustExpr v62 v79 
    let v81 : int32 = v80.Length
    let v82 : bool = v78 = v81
    let v197 : US46 =
        if v82 then
            let v83 : US47 = US47_1
            US46_0(v83)
        else
            let v85 : string = $"leptos::prelude::ArcMemo::get(&$0)"
            let v86 : (string []) = Fable.Core.RustInterop.emitRustExpr v0 v85 
            let v87 : (int32 -> (US44 -> US48)) = method122(v86)
            let v88 : Vec<US44> = method125(v62)
            let v89 : string = "v88.iter().enumerate().map(|(i, x)| v87(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
            let v90 : Vec<US48> = Fable.Core.RustInterop.emitRustExpr () v89 
            let v91 : unit = ()
            let v92 : string = $"true; let _func1_from_v91 = Func1::from(move |value| {{ //"
            let v93 : bool = Fable.Core.RustInterop.emitRustExpr () v92 
            let v94 : string = $"value"
            let v95 : US48 = Fable.Core.RustInterop.emitRustExpr () v94 
            let v109 : US50 =
                match v95 with
                | US48_1(v106) -> (* Error *)
                    US50_1(v106)
                | US48_0(v96) -> (* Ok *)
                    let v104 : Vec<struct (string * unativeint * Heap5)> option =
                        match v96 with
                        | US49_1 -> (* None *)
                            let v102 : Vec<struct (string * unativeint * Heap5)> option = None
                            v102
                        | US49_0(v97) -> (* Some *)
                            let v99 : Vec<struct (string * unativeint * Heap5)> option = Some v97 
                            v99
                    US50_0(v104)
            let func1_from_result = v109 //
            let v110 : _ = func1_from_result
            let v111 : string = $"true; $0 /*"
            let v112 : bool = Fable.Core.RustInterop.emitRustExpr v110 v111 
            let v113 : string = $"*/ }}); //"
            let v114 : bool = Fable.Core.RustInterop.emitRustExpr () v113 
            let v115 : string = $"_func1_from_v91"
            let v116 : Func0<US48, US50> = Fable.Core.RustInterop.emitRustExpr () v115 
            let v117 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v118 : (US48 -> US50) = closure101(v116)
            let v119 : Vec<US50> = Fable.Core.RustInterop.emitRustExpr struct (v90, v118) v117 
            let v120 : unit = ()
            let v121 : string = $"true; let _func1_from_v120 = Func1::from(move |value| {{ //"
            let v122 : bool = Fable.Core.RustInterop.emitRustExpr () v121 
            let v123 : string = $"value"
            let v124 : US50 = Fable.Core.RustInterop.emitRustExpr () v123 
            let v130 : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> =
                match v124 with
                | US50_1(v127) -> (* Error *)
                    let v128 : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> = Error v127 
                    v128
                | US50_0(v125) -> (* Ok *)
                    let v126 : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> = Ok v125 
                    v126
            let func1_from_result = v130 //
            let v131 : _ = func1_from_result
            let v132 : string = $"true; $0 /*"
            let v133 : bool = Fable.Core.RustInterop.emitRustExpr v131 v132 
            let v134 : string = $"*/ }}); //"
            let v135 : bool = Fable.Core.RustInterop.emitRustExpr () v134 
            let v136 : string = $"_func1_from_v120"
            let v137 : Func0<US50, Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v136 
            let v138 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v139 : (US50 -> Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>) = closure102(v137)
            let v140 : Vec<Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr struct (v119, v139) v138 
            let v141 : (struct (string * unativeint * Heap5) []) = [||]
            let v142 : string = "$0.to_vec()"
            let v143 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr v141 v142 
            let v144 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
            let v145 : (Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v140 v144 
            let v146 : int32 = v145.Length
            let v147 : UH2 = UH2_0
            let v148 : Mut1 = {l0 = 0; l1 = v147} : Mut1
            while method128(v146, v148) do
                let v150 : int32 = v148.l0
                let v151 : int32 =  -v150
                let v152 : int32 = v151 + v146
                let v153 : int32 = v152 - 1
                let v154 : UH2 = v148.l1
                let v155 : Result<Vec<struct (string * unativeint * Heap5)> option, std_string_String> = v145.[int v153]
                let v156 : int32 = v150 + 1
                let v157 : UH2 = UH2_1(v155, v154)
                v148.l0 <- v156
                v148.l1 <- v157
                ()
            let v158 : UH2 = v148.l1
            let v159 : US51 = US51_0(v143)
            let v160 : US51 = method129(v158, v159)
            let v174 : US51 =
                match v160 with
                | US51_1(v171) -> (* Error *)
                    US51_1(v171)
                | US51_0(v161) -> (* Ok *)
                    let v162 : Vec<struct (string * unativeint * Heap5)> = method135(v161)
                    let v163 : (struct (string * unativeint * Heap5) -> std_string_String) = method136()
                    let v164 : string = "true; let mut v162 = v162"
                    let v165 : bool = Fable.Core.RustInterop.emitRustExpr () v164 
                    let v166 : string = "true; v162.sort_by_key(|x| v163(x.clone()))"
                    let v167 : bool = Fable.Core.RustInterop.emitRustExpr () v166 
                    let v168 : string = "v162"
                    let v169 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr () v168 
                    US51_0(v169)
            let v189 : US52 =
                match v174 with
                | US51_1(v186) -> (* Error *)
                    US52_1(v186)
                | US51_0(v175) -> (* Ok *)
                    let v176 : Vec<struct (string * unativeint * Heap5)> = method137(v175)
                    let v177 : string = "true; let mut v176 = v176"
                    let v178 : bool = Fable.Core.RustInterop.emitRustExpr () v177 
                    let v179 : string = "true; v176.reverse()"
                    let v180 : bool = Fable.Core.RustInterop.emitRustExpr () v179 
                    let v181 : string = "v176"
                    let v182 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr () v181 
                    let v183 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v184 : (struct (string * unativeint * Heap5) []) = Fable.Core.RustInterop.emitRustExpr v182 v183 
                    US52_0(v184)
            match v189 with
            | US52_1(v193) -> (* Error *)
                US46_1(v193)
            | US52_0(v190) -> (* Ok *)
                let v191 : US47 = US47_0(v190)
                US46_0(v191)
    let v211 : US53 =
        match v197 with
        | US46_1(v208) -> (* Error *)
            US53_1(v208)
        | US46_0(v198) -> (* Ok *)
            let v206 : (struct (string * unativeint * Heap5) []) option =
                match v198 with
                | US47_1 -> (* None *)
                    let v204 : (struct (string * unativeint * Heap5) []) option = None
                    v204
                | US47_0(v199) -> (* Some *)
                    let v201 : (struct (string * unativeint * Heap5) []) option = Some v199 
                    v201
            US53_0(v206)
    let v217 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> =
        match v211 with
        | US53_1(v214) -> (* Error *)
            let v215 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Error v214 
            v215
        | US53_0(v212) -> (* Ok *)
            let v213 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Ok v212 
            v213
    let v219 : string = $"%A{v217}"
    let v222 : string = "use_transactions.render (9) / txns new_arc_memo / result: " + string v219 + " / loading: " + string v82 + ""
    let v223 : int64 = 200L
    let v224 : string = method8(v223, v222)
    let v225 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v226 : bool = Fable.Core.RustInterop.emitRustExpr v224 v225 
    v217
and closure108 () (v0 : (struct (string * unativeint * Heap5) []) option) : US53 =
    US53_0(v0)
and method138 () : ((struct (string * unativeint * Heap5) []) option -> US53) =
    closure108()
and closure109 () (v0 : std_string_String) : US53 =
    US53_1(v0)
and method139 () : (std_string_String -> US53) =
    closure109()
and closure110 () (v0 : (struct (string * unativeint * Heap5) [])) : US47 =
    US47_0(v0)
and method140 () : ((struct (string * unativeint * Heap5) []) -> US47) =
    closure110()
and closure111 () (v0 : serde_json_Error) : std_string_String =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "format!(\"{}\", $0)"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "format!(\"{}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "format!(\"{}\", $0)"
    let v11 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : std_string_String = null |> unbox<std_string_String>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : std_string_String = _run_target_args'_v5 
    v28
and method141 () : (serde_json_Error -> std_string_String) =
    closure111()
and closure112 () (v0 : std_string_String) : string =
    let v1 : string = "fable_library_rust::String_::fromString($0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    v2
and method142 () : (std_string_String -> string) =
    closure112()
and method143 (v0 : Result<std_string_String, std_string_String>) : Result<std_string_String, std_string_String> =
    v0
and closure113 () (v0 : string) : struct (string * US23 * string * bool * bool) =
    let v1 : string = "https://rpc.mainnet.near.org"
    let v2 : US23 = US23_1
    struct (v1, v2, v0, true, false)
and method144 () : (string -> struct (string * US23 * string * bool * bool)) =
    closure113()
and method145 (v0 : Result<string, std_string_String>) : Result<string, std_string_String> =
    v0
and method146 (v0 : Func0<struct (string * unativeint * Heap5), Result<struct (string * US23 * string * bool * bool), std_string_String>>) : Func0<struct (string * unativeint * Heap5), Result<struct (string * US23 * string * bool * bool), std_string_String>> =
    v0
and closure114 (v0 : Func0<struct (string * unativeint * Heap5), Result<struct (string * US23 * string * bool * bool), std_string_String>>) struct (v1 : string, v2 : unativeint, v3 : Heap5) : Result<struct (string * US23 * string * bool * bool), std_string_String> =
    let v4 : Func0<struct (string * unativeint * Heap5), Result<struct (string * US23 * string * bool * bool), std_string_String>> = method146(v0)
    let func1_move_x = struct (v1, v2, v3) //
    let v5 : _ = func1_move_x
    let v6 : string = "(move |x| v4(x))($0)"
    let v7 : Result<struct (string * US23 * string * bool * bool), std_string_String> = Fable.Core.RustInterop.emitRustExpr v5 v6 
    v7
and closure107 (v0 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>) () : Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String> =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : ((struct (string * unativeint * Heap5) []) option -> US53) = method138()
    let v4 : (std_string_String -> US53) = method139()
    let v5 : US53 = match v2 with Ok x -> v3 x | Error x -> v4 x
    let v31 : US46 =
        match v5 with
        | US53_1(v28) -> (* Error *)
            US46_1(v28)
        | US53_0(v6) -> (* Ok *)
            let v8 : ((struct (string * unativeint * Heap5) []) -> US47) = method140()
            let v9 : US47 option = v6 |> Option.map v8 
            let v22 : US47 = US47_1
            let v23 : US47 = v9 |> Option.defaultValue v22 
            US46_0(v23)
    let v367 : US54 =
        match v31 with
        | US46_1(v364) -> (* Error *)
            US54_1(v364)
        | US46_0(v32) -> (* Ok *)
            match v32 with
            | US47_0(v33) -> (* Some *)
                let v34 : string = "$0.to_vec()"
                let v35 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr v33 v34 
                let v36 : unit = ()
                let v37 : string = $"true; let _func1_from_v36 = Func1::from(move |value| {{ //"
                let v38 : bool = Fable.Core.RustInterop.emitRustExpr () v37 
                let v39 : string = $"value"
                let struct (v40 : string, v41 : unativeint, v42 : Heap5) = Fable.Core.RustInterop.emitRustExpr () v39 
                let v43 : string = "2.0"
                (* run_target_args'
                let v48 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v49 : string = "&*$0"
                let v50 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v43 v49 
                let _run_target_args'_v48 = v50 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v51 : string = "&*$0"
                let v52 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v43 v51 
                let _run_target_args'_v48 = v52 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v53 : string = "&*$0"
                let v54 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v43 v53 
                let _run_target_args'_v48 = v54 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v56 : Ref<Str> = v43 |> unbox<Ref<Str>>
                let _run_target_args'_v48 = v56 
                #endif
#if FABLE_COMPILER_PYTHON
                let v60 : Ref<Str> = v43 |> unbox<Ref<Str>>
                let _run_target_args'_v48 = v60 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v64 : Ref<Str> = v43 |> unbox<Ref<Str>>
                let _run_target_args'_v48 = v64 
                #endif
#else
                let v68 : Ref<Str> = v43 |> unbox<Ref<Str>>
                let _run_target_args'_v48 = v68 
                #endif
                let v71 : Ref<Str> = _run_target_args'_v48 
                (* run_target_args'
                let v81 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v82 : string = "String::from($0)"
                let v83 : std_string_String = Fable.Core.RustInterop.emitRustExpr v71 v82 
                let _run_target_args'_v81 = v83 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v84 : string = "String::from($0)"
                let v85 : std_string_String = Fable.Core.RustInterop.emitRustExpr v71 v84 
                let _run_target_args'_v81 = v85 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v86 : string = "String::from($0)"
                let v87 : std_string_String = Fable.Core.RustInterop.emitRustExpr v71 v86 
                let _run_target_args'_v81 = v87 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v89 : std_string_String = v71 |> unbox<std_string_String>
                let _run_target_args'_v81 = v89 
                #endif
#if FABLE_COMPILER_PYTHON
                let v93 : std_string_String = v71 |> unbox<std_string_String>
                let _run_target_args'_v81 = v93 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v97 : std_string_String = v71 |> unbox<std_string_String>
                let _run_target_args'_v81 = v97 
                #endif
#else
                let v101 : std_string_String = v71 |> unbox<std_string_String>
                let _run_target_args'_v81 = v101 
                #endif
                let v104 : std_string_String = _run_target_args'_v81 
                let v110 : string = "dontcare"
                (* run_target_args'
                let v115 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v116 : string = "&*$0"
                let v117 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v110 v116 
                let _run_target_args'_v115 = v117 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v118 : string = "&*$0"
                let v119 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v110 v118 
                let _run_target_args'_v115 = v119 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v120 : string = "&*$0"
                let v121 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v110 v120 
                let _run_target_args'_v115 = v121 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v123 : Ref<Str> = v110 |> unbox<Ref<Str>>
                let _run_target_args'_v115 = v123 
                #endif
#if FABLE_COMPILER_PYTHON
                let v127 : Ref<Str> = v110 |> unbox<Ref<Str>>
                let _run_target_args'_v115 = v127 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v131 : Ref<Str> = v110 |> unbox<Ref<Str>>
                let _run_target_args'_v115 = v131 
                #endif
#else
                let v135 : Ref<Str> = v110 |> unbox<Ref<Str>>
                let _run_target_args'_v115 = v135 
                #endif
                let v138 : Ref<Str> = _run_target_args'_v115 
                (* run_target_args'
                let v148 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v149 : string = "String::from($0)"
                let v150 : std_string_String = Fable.Core.RustInterop.emitRustExpr v138 v149 
                let _run_target_args'_v148 = v150 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v151 : string = "String::from($0)"
                let v152 : std_string_String = Fable.Core.RustInterop.emitRustExpr v138 v151 
                let _run_target_args'_v148 = v152 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v153 : string = "String::from($0)"
                let v154 : std_string_String = Fable.Core.RustInterop.emitRustExpr v138 v153 
                let _run_target_args'_v148 = v154 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v156 : std_string_String = v138 |> unbox<std_string_String>
                let _run_target_args'_v148 = v156 
                #endif
#if FABLE_COMPILER_PYTHON
                let v160 : std_string_String = v138 |> unbox<std_string_String>
                let _run_target_args'_v148 = v160 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v164 : std_string_String = v138 |> unbox<std_string_String>
                let _run_target_args'_v148 = v164 
                #endif
#else
                let v168 : std_string_String = v138 |> unbox<std_string_String>
                let _run_target_args'_v148 = v168 
                #endif
                let v171 : std_string_String = _run_target_args'_v148 
                let v177 : string = "EXPERIMENTAL_tx_status"
                (* run_target_args'
                let v182 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v183 : string = "&*$0"
                let v184 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v177 v183 
                let _run_target_args'_v182 = v184 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v185 : string = "&*$0"
                let v186 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v177 v185 
                let _run_target_args'_v182 = v186 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v187 : string = "&*$0"
                let v188 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v177 v187 
                let _run_target_args'_v182 = v188 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v190 : Ref<Str> = v177 |> unbox<Ref<Str>>
                let _run_target_args'_v182 = v190 
                #endif
#if FABLE_COMPILER_PYTHON
                let v194 : Ref<Str> = v177 |> unbox<Ref<Str>>
                let _run_target_args'_v182 = v194 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v198 : Ref<Str> = v177 |> unbox<Ref<Str>>
                let _run_target_args'_v182 = v198 
                #endif
#else
                let v202 : Ref<Str> = v177 |> unbox<Ref<Str>>
                let _run_target_args'_v182 = v202 
                #endif
                let v205 : Ref<Str> = _run_target_args'_v182 
                (* run_target_args'
                let v215 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v216 : string = "String::from($0)"
                let v217 : std_string_String = Fable.Core.RustInterop.emitRustExpr v205 v216 
                let _run_target_args'_v215 = v217 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v218 : string = "String::from($0)"
                let v219 : std_string_String = Fable.Core.RustInterop.emitRustExpr v205 v218 
                let _run_target_args'_v215 = v219 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v220 : string = "String::from($0)"
                let v221 : std_string_String = Fable.Core.RustInterop.emitRustExpr v205 v220 
                let _run_target_args'_v215 = v221 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v223 : std_string_String = v205 |> unbox<std_string_String>
                let _run_target_args'_v215 = v223 
                #endif
#if FABLE_COMPILER_PYTHON
                let v227 : std_string_String = v205 |> unbox<std_string_String>
                let _run_target_args'_v215 = v227 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v231 : std_string_String = v205 |> unbox<std_string_String>
                let _run_target_args'_v215 = v231 
                #endif
#else
                let v235 : std_string_String = v205 |> unbox<std_string_String>
                let _run_target_args'_v215 = v235 
                #endif
                let v238 : std_string_String = _run_target_args'_v215 
                let v244 : std_string_String = v42.l3
                let v245 : string = "bowen"
                (* run_target_args'
                let v250 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v251 : string = "&*$0"
                let v252 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v245 v251 
                let _run_target_args'_v250 = v252 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v253 : string = "&*$0"
                let v254 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v245 v253 
                let _run_target_args'_v250 = v254 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v255 : string = "&*$0"
                let v256 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v245 v255 
                let _run_target_args'_v250 = v256 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v258 : Ref<Str> = v245 |> unbox<Ref<Str>>
                let _run_target_args'_v250 = v258 
                #endif
#if FABLE_COMPILER_PYTHON
                let v262 : Ref<Str> = v245 |> unbox<Ref<Str>>
                let _run_target_args'_v250 = v262 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v266 : Ref<Str> = v245 |> unbox<Ref<Str>>
                let _run_target_args'_v250 = v266 
                #endif
#else
                let v270 : Ref<Str> = v245 |> unbox<Ref<Str>>
                let _run_target_args'_v250 = v270 
                #endif
                let v273 : Ref<Str> = _run_target_args'_v250 
                (* run_target_args'
                let v283 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v284 : string = "String::from($0)"
                let v285 : std_string_String = Fable.Core.RustInterop.emitRustExpr v273 v284 
                let _run_target_args'_v283 = v285 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v286 : string = "String::from($0)"
                let v287 : std_string_String = Fable.Core.RustInterop.emitRustExpr v273 v286 
                let _run_target_args'_v283 = v287 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v288 : string = "String::from($0)"
                let v289 : std_string_String = Fable.Core.RustInterop.emitRustExpr v273 v288 
                let _run_target_args'_v283 = v289 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v291 : std_string_String = v273 |> unbox<std_string_String>
                let _run_target_args'_v283 = v291 
                #endif
#if FABLE_COMPILER_PYTHON
                let v295 : std_string_String = v273 |> unbox<std_string_String>
                let _run_target_args'_v283 = v295 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v299 : std_string_String = v273 |> unbox<std_string_String>
                let _run_target_args'_v283 = v299 
                #endif
#else
                let v303 : std_string_String = v273 |> unbox<std_string_String>
                let _run_target_args'_v283 = v303 
                #endif
                let v306 : std_string_String = _run_target_args'_v283 
                let v312 : (std_string_String []) = [|v244; v306|]
                let v313 : string = "$0.to_vec()"
                let v314 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v312 v313 
                let v315 : string = "crate::model::near::rpc::RpcInput { jsonrpc: $0, id: $1, method: $2, params: v314 }"
                let v316 : crate_model_near_rpc_RpcInput = Fable.Core.RustInterop.emitRustExpr struct (v104, v171, v238) v315 
                let v317 : string = "serde_json::to_string(&v316)"
                let v318 : Result<std_string_String, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr () v317 
                let v319 : (serde_json_Error -> std_string_String) = method141()
                (* run_target_args'
                let v321 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v322 : string = "$0.map_err(|x| $1(x))"
                let v323 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v318, v319) v322 
                let _run_target_args'_v321 = v323 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v324 : string = "$0.map_err(|x| $1(x))"
                let v325 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v318, v319) v324 
                let _run_target_args'_v321 = v325 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v326 : string = "$0.map_err(|x| $1(x))"
                let v327 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v318, v319) v326 
                let _run_target_args'_v321 = v327 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v328 : Result<std_string_String, std_string_String> = match v318 with Ok x -> Ok x | Error x -> Error (v319 x)
                let _run_target_args'_v321 = v328 
                #endif
#if FABLE_COMPILER_PYTHON
                let v329 : Result<std_string_String, std_string_String> = match v318 with Ok x -> Ok x | Error x -> Error (v319 x)
                let _run_target_args'_v321 = v329 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v330 : Result<std_string_String, std_string_String> = match v318 with Ok x -> Ok x | Error x -> Error (v319 x)
                let _run_target_args'_v321 = v330 
                #endif
#else
                let v331 : Result<std_string_String, std_string_String> = match v318 with Ok x -> Ok x | Error x -> Error (v319 x)
                let _run_target_args'_v321 = v331 
                #endif
                let v332 : Result<std_string_String, std_string_String> = _run_target_args'_v321 
                let v335 : (std_string_String -> string) = method142()
                let v336 : Result<std_string_String, std_string_String> = method143(v332)
                let v337 : string = "v336.map(|x| v335(x))"
                let v338 : Result<string, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v337 
                let v339 : (string -> struct (string * US23 * string * bool * bool)) = method144()
                let v340 : Result<string, std_string_String> = method145(v338)
                let v341 : string = "v340.map(|x| v339(x))"
                let v342 : Result<struct (string * US23 * string * bool * bool), std_string_String> = Fable.Core.RustInterop.emitRustExpr () v341 
                let func1_from_result = v342 //
                let v343 : _ = func1_from_result
                let v344 : string = $"true; $0 /*"
                let v345 : bool = Fable.Core.RustInterop.emitRustExpr v343 v344 
                let v346 : string = $"*/ }}); //"
                let v347 : bool = Fable.Core.RustInterop.emitRustExpr () v346 
                let v348 : string = $"_func1_from_v36"
                let v349 : Func0<struct (string * unativeint * Heap5), Result<struct (string * US23 * string * bool * bool), std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v348 
                let v350 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
                let v351 : (struct (string * unativeint * Heap5) -> Result<struct (string * US23 * string * bool * bool), std_string_String>) = closure114(v349)
                let v352 : Vec<Result<struct (string * US23 * string * bool * bool), std_string_String>> = Fable.Core.RustInterop.emitRustExpr struct (v35, v351) v350 
                let v353 : string = "v352.into_iter().collect()"
                let v354 : Result<Vec<struct (string * US23 * string * bool * bool)>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v353 
                let v355 : string = "$0?"
                let v356 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v354 v355 
                let v357 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                let v358 : (struct (string * US23 * string * bool * bool) []) = Fable.Core.RustInterop.emitRustExpr v356 v357 
                let v359 : US55 = US55_0(v358)
                US54_0(v359)
            | _ ->
                let v361 : US55 = US55_1
                US54_0(v361)
    let v381 : US56 =
        match v367 with
        | US54_1(v378) -> (* Error *)
            US56_1(v378)
        | US54_0(v368) -> (* Ok *)
            let v376 : (struct (string * US23 * string * bool * bool) []) option =
                match v368 with
                | US55_1 -> (* None *)
                    let v374 : (struct (string * US23 * string * bool * bool) []) option = None
                    v374
                | US55_0(v369) -> (* Some *)
                    let v371 : (struct (string * US23 * string * bool * bool) []) option = Some v369 
                    v371
            US56_0(v376)
    let v387 : Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String> =
        match v381 with
        | US56_1(v384) -> (* Error *)
            let v385 : Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String> = Error v384 
            v385
        | US56_0(v382) -> (* Ok *)
            let v383 : Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String> = Ok v382 
            v383
    let v389 : string = $"%A{v387}"
    let v392 : string = "use_transactions.render (10) / rpc_requests new_arc_memo / result: " + string v389 + ""
    let v393 : int64 = 200L
    let v394 : string = method8(v393, v392)
    let v395 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v396 : bool = Fable.Core.RustInterop.emitRustExpr v394 v395 
    v387
and closure116 () (v0 : (struct (string * US23 * string * bool * bool) []) option) : US56 =
    US56_0(v0)
and method147 () : ((struct (string * US23 * string * bool * bool) []) option -> US56) =
    closure116()
and closure117 () (v0 : std_string_String) : US56 =
    US56_1(v0)
and method148 () : (std_string_String -> US56) =
    closure117()
and closure118 () (v0 : (struct (string * US23 * string * bool * bool) [])) : US55 =
    US55_0(v0)
and method149 () : ((struct (string * US23 * string * bool * bool) []) -> US55) =
    closure118()
and closure115 (v0 : leptos_prelude_ArcMemo<Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String>>) () : Vec<struct (string * US23 * string * bool * bool)> =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : ((struct (string * US23 * string * bool * bool) []) option -> US56) = method147()
    let v4 : (std_string_String -> US56) = method148()
    let v5 : US56 = match v2 with Ok x -> v3 x | Error x -> v4 x
    let v31 : US54 =
        match v5 with
        | US56_1(v28) -> (* Error *)
            US54_1(v28)
        | US56_0(v6) -> (* Ok *)
            let v8 : ((struct (string * US23 * string * bool * bool) []) -> US55) = method149()
            let v9 : US55 option = v6 |> Option.map v8 
            let v22 : US55 = US55_1
            let v23 : US55 = v9 |> Option.defaultValue v22 
            US54_0(v23)
    let v37 : (struct (string * US23 * string * bool * bool) []) =
        match v31 with
        | US54_0(v32) -> (* Ok *)
            match v32 with
            | US55_0(v33) -> (* Some *)
                v33
            | _ ->
                [||]
        | _ ->
            [||]
    let v38 : string = "$0.to_vec()"
    let v39 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v37 v38 
    let v41 : string = $"%A{v39}"
    let v44 : string = "use_transactions.render (11) / rpc_requests' new_arc_memo / result: " + string v41 + ""
    let v45 : int64 = 200L
    let v46 : string = method8(v45, v44)
    let v47 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v48 : bool = Fable.Core.RustInterop.emitRustExpr v46 v47 
    v39
and closure121 () (v0 : crate_model_near_rpc_TransferDetail) : struct (std_string_String * std_string_String option * float option * std_string_String option) =
    let v1 : string = "$0.deposit"
    let v2 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "$0.args"
    let v4 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v0 v3 
    let v5 : string = "$0.gas"
    let v6 : float option = Fable.Core.RustInterop.emitRustExpr v0 v5 
    let v7 : string = "$0.method_name"
    let v8 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v0 v7 
    struct (v2, v4, v6, v8)
and method151 (v0 : Func0<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>, std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>>) : Func0<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>, std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>> =
    v0
and closure122 (v0 : Func0<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>, std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>>) (v1 : std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>) : std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> =
    let v2 : Func0<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>, std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>> = method151(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method152 (v0 : Func0<crate_model_near_rpc_Receipt, struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)>) : Func0<crate_model_near_rpc_Receipt, struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)> =
    v0
and closure123 (v0 : Func0<crate_model_near_rpc_Receipt, struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)>) (v1 : crate_model_near_rpc_Receipt) : struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) =
    let v2 : Func0<crate_model_near_rpc_Receipt, struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)> = method152(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []), v7 : std_string_String, v8 : (std_string_String []), v9 : (std_string_String []), v10 : std_string_String, v11 : std_string_String, v12 : std_string_String, v13 : std_string_String) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9, v10, v11, v12, v13)
and method153 (v0 : Func0<crate_model_near_rpc_GasProfile, struct (std_string_String * std_string_String * std_string_String)>) : Func0<crate_model_near_rpc_GasProfile, struct (std_string_String * std_string_String * std_string_String)> =
    v0
and closure124 (v0 : Func0<crate_model_near_rpc_GasProfile, struct (std_string_String * std_string_String * std_string_String)>) (v1 : crate_model_near_rpc_GasProfile) : struct (std_string_String * std_string_String * std_string_String) =
    let v2 : Func0<crate_model_near_rpc_GasProfile, struct (std_string_String * std_string_String * std_string_String)> = method153(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : std_string_String, v7 : std_string_String) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7)
and method155 (v0 : Func0<crate_model_near_rpc_Proof, struct (std_string_String * std_string_String)>) : Func0<crate_model_near_rpc_Proof, struct (std_string_String * std_string_String)> =
    v0
and closure126 (v0 : Func0<crate_model_near_rpc_Proof, struct (std_string_String * std_string_String)>) (v1 : crate_model_near_rpc_Proof) : struct (std_string_String * std_string_String) =
    let v2 : Func0<crate_model_near_rpc_Proof, struct (std_string_String * std_string_String)> = method155(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : std_string_String) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6)
and closure125 () (v0 : Vec<crate_model_near_rpc_Proof>) : (struct (std_string_String * std_string_String) []) =
    let v1 : unit = ()
    let v2 : string = $"true; let _func1_from_v1 = Func1::from(move |value| {{ //"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr () v2 
    let v4 : string = $"value"
    let v5 : crate_model_near_rpc_Proof = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = "$0.direction"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : string = "$0.hash"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5 v8 
    let func1_from_result = struct (v7, v9) //
    let v10 : _ = func1_from_result
    let v11 : string = $"true; $0 /*"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr v10 v11 
    let v13 : string = $"*/ }}); //"
    let v14 : bool = Fable.Core.RustInterop.emitRustExpr () v13 
    let v15 : string = $"_func1_from_v1"
    let v16 : Func0<crate_model_near_rpc_Proof, struct (std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v18 : (crate_model_near_rpc_Proof -> struct (std_string_String * std_string_String)) = closure126(v16)
    let v19 : Vec<struct (std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v0, v18) v17 
    let v20 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v21 : (struct (std_string_String * std_string_String) []) = Fable.Core.RustInterop.emitRustExpr v19 v20 
    v21
and method154 () : (Vec<crate_model_near_rpc_Proof> -> (struct (std_string_String * std_string_String) [])) =
    closure125()
and method156 (v0 : Func0<crate_model_near_rpc_ReceiptsOutcome, struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))>) : Func0<crate_model_near_rpc_ReceiptsOutcome, struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))> =
    v0
and closure127 (v0 : Func0<crate_model_near_rpc_ReceiptsOutcome, struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))>) (v1 : crate_model_near_rpc_ReceiptsOutcome) : struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) =
    let v2 : Func0<crate_model_near_rpc_ReceiptsOutcome, struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))> = method156(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : std_string_String, v6 : std_string_String, v7 : std_string_String, v8 : uint64, v9 : (std_string_String []), v10 : (struct (std_string_String * std_string_String * std_string_String) []), v11 : uint8, v12 : (std_string_String []), v13 : std_collections_HashMap<std_string_String, std_string_String>, v14 : std_string_String option, v15 : (struct (std_string_String * std_string_String) [])) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15)
and closure120 () (v0 : crate_model_near_rpc_TransactionStatus) : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) =
    let v1 : string = "$0.receipts"
    let v2 : Vec<crate_model_near_rpc_Receipt> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let v7 : crate_model_near_rpc_Receipt = Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : string = "$0.predecessor_id"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v10 : string = "$0.receipt"
    let v11 : crate_model_near_rpc_ReceiptDetail = Fable.Core.RustInterop.emitRustExpr v7 v10 
    let v12 : string = "$0.action"
    let v13 : crate_model_near_rpc_ActionDetail = Fable.Core.RustInterop.emitRustExpr v11 v12 
    let v14 : string = "$0.actions"
    let v15 : Vec<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>> = Fable.Core.RustInterop.emitRustExpr v13 v14 
    let v16 : unit = ()
    let v17 : string = $"true; let _func1_from_v16 = Func1::from(move |value| {{ //"
    let v18 : bool = Fable.Core.RustInterop.emitRustExpr () v17 
    let v19 : string = $"value"
    let v20 : std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail> = Fable.Core.RustInterop.emitRustExpr () v19 
    let v21 : string = "$0.into_iter().map(|(k, v)| (k, $1(v))).collect()"
    let v22 : (crate_model_near_rpc_TransferDetail -> struct (std_string_String * std_string_String option * float option * std_string_String option)) = closure121()
    let v23 : std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr struct (v20, v22) v21 
    let func1_from_result = v23 //
    let v24 : _ = func1_from_result
    let v25 : string = $"true; $0 /*"
    let v26 : bool = Fable.Core.RustInterop.emitRustExpr v24 v25 
    let v27 : string = $"*/ }}); //"
    let v28 : bool = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : string = $"_func1_from_v16"
    let v30 : Func0<std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail>, std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>> = Fable.Core.RustInterop.emitRustExpr () v29 
    let v31 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v32 : (std_collections_HashMap<std_string_String, crate_model_near_rpc_TransferDetail> -> std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>) = closure122(v30)
    let v33 : Vec<std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)>> = Fable.Core.RustInterop.emitRustExpr struct (v15, v32) v31 
    let v34 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v35 : (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) = Fable.Core.RustInterop.emitRustExpr v33 v34 
    let v36 : string = "$0.gas_price"
    let v37 : std_string_String = Fable.Core.RustInterop.emitRustExpr v13 v36 
    let v38 : string = "$0.input_data_ids"
    let v39 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v13 v38 
    let v40 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v41 : (std_string_String []) = Fable.Core.RustInterop.emitRustExpr v39 v40 
    let v42 : string = "$0.output_data_receivers"
    let v43 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v13 v42 
    let v44 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v45 : (std_string_String []) = Fable.Core.RustInterop.emitRustExpr v43 v44 
    let v46 : string = "$0.signer_id"
    let v47 : std_string_String = Fable.Core.RustInterop.emitRustExpr v13 v46 
    let v48 : string = "$0.signer_public_key"
    let v49 : std_string_String = Fable.Core.RustInterop.emitRustExpr v13 v48 
    let v50 : string = "$0.receipt_id"
    let v51 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v50 
    let v52 : string = "$0.receiver_id"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v7 v52 
    let func1_from_result = struct (v9, v35, v37, v41, v45, v47, v49, v51, v53) //
    let v54 : _ = func1_from_result
    let v55 : string = $"true; $0 /*"
    let v56 : bool = Fable.Core.RustInterop.emitRustExpr v54 v55 
    let v57 : string = $"*/ }}); //"
    let v58 : bool = Fable.Core.RustInterop.emitRustExpr () v57 
    let v59 : string = $"_func1_from_v3"
    let v60 : Func0<crate_model_near_rpc_Receipt, struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v59 
    let v61 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v62 : (crate_model_near_rpc_Receipt -> struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)) = closure123(v60)
    let v63 : Vec<struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v2, v62) v61 
    let v64 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v65 : (struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) = Fable.Core.RustInterop.emitRustExpr v63 v64 
    let v66 : string = "$0.receipts_outcome"
    let v67 : Vec<crate_model_near_rpc_ReceiptsOutcome> = Fable.Core.RustInterop.emitRustExpr v0 v66 
    let v68 : unit = ()
    let v69 : string = $"true; let _func1_from_v68 = Func1::from(move |value| {{ //"
    let v70 : bool = Fable.Core.RustInterop.emitRustExpr () v69 
    let v71 : string = $"value"
    let v72 : crate_model_near_rpc_ReceiptsOutcome = Fable.Core.RustInterop.emitRustExpr () v71 
    let v73 : string = "$0.block_hash"
    let v74 : std_string_String = Fable.Core.RustInterop.emitRustExpr v72 v73 
    let v75 : string = "$0.id"
    let v76 : std_string_String = Fable.Core.RustInterop.emitRustExpr v72 v75 
    let v77 : string = "$0.outcome"
    let v78 : crate_model_near_rpc_OutcomeDetail = Fable.Core.RustInterop.emitRustExpr v72 v77 
    let v79 : string = "$0.executor_id"
    let v80 : std_string_String = Fable.Core.RustInterop.emitRustExpr v78 v79 
    let v81 : string = "$0.gas_burnt"
    let v82 : uint64 = Fable.Core.RustInterop.emitRustExpr v78 v81 
    let v83 : string = "$0.logs"
    let v84 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v78 v83 
    let v85 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v86 : (std_string_String []) = Fable.Core.RustInterop.emitRustExpr v84 v85 
    let v87 : string = "$0.metadata"
    let v88 : crate_model_near_rpc_Metadata = Fable.Core.RustInterop.emitRustExpr v78 v87 
    let v89 : string = "$0.gas_profile"
    let v90 : Vec<crate_model_near_rpc_GasProfile> = Fable.Core.RustInterop.emitRustExpr v88 v89 
    let v91 : unit = ()
    let v92 : string = $"true; let _func1_from_v91 = Func1::from(move |value| {{ //"
    let v93 : bool = Fable.Core.RustInterop.emitRustExpr () v92 
    let v94 : string = $"value"
    let v95 : crate_model_near_rpc_GasProfile = Fable.Core.RustInterop.emitRustExpr () v94 
    let v96 : string = "$0.cost"
    let v97 : std_string_String = Fable.Core.RustInterop.emitRustExpr v95 v96 
    let v98 : string = "$0.cost_category"
    let v99 : std_string_String = Fable.Core.RustInterop.emitRustExpr v95 v98 
    let v100 : string = "$0.gas_used"
    let v101 : std_string_String = Fable.Core.RustInterop.emitRustExpr v95 v100 
    let func1_from_result = struct (v97, v99, v101) //
    let v102 : _ = func1_from_result
    let v103 : string = $"true; $0 /*"
    let v104 : bool = Fable.Core.RustInterop.emitRustExpr v102 v103 
    let v105 : string = $"*/ }}); //"
    let v106 : bool = Fable.Core.RustInterop.emitRustExpr () v105 
    let v107 : string = $"_func1_from_v91"
    let v108 : Func0<crate_model_near_rpc_GasProfile, struct (std_string_String * std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v107 
    let v109 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v110 : (crate_model_near_rpc_GasProfile -> struct (std_string_String * std_string_String * std_string_String)) = closure124(v108)
    let v111 : Vec<struct (std_string_String * std_string_String * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v90, v110) v109 
    let v112 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v113 : (struct (std_string_String * std_string_String * std_string_String) []) = Fable.Core.RustInterop.emitRustExpr v111 v112 
    let v114 : string = "$0.version"
    let v115 : uint8 = Fable.Core.RustInterop.emitRustExpr v88 v114 
    let v116 : string = "$0.receipt_ids"
    let v117 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v78 v116 
    let v118 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v119 : (std_string_String []) = Fable.Core.RustInterop.emitRustExpr v117 v118 
    let v120 : string = "$0.status"
    let v121 : std_collections_HashMap<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr v78 v120 
    let v122 : string = "$0.tokens_burnt"
    let v123 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v78 v122 
    let v124 : string = "$0.proof"
    let v125 : Vec<crate_model_near_rpc_Proof> option = Fable.Core.RustInterop.emitRustExpr v72 v124 
    let v127 : (Vec<crate_model_near_rpc_Proof> -> (struct (std_string_String * std_string_String) [])) = method154()
    let v128 : (struct (std_string_String * std_string_String) []) option = v125 |> Option.map v127 
    let v160 : (struct (std_string_String * std_string_String) []) = [||]
    let v162 : (struct (std_string_String * std_string_String) []) = v128 |> Option.defaultValue v160 
    let func1_from_result = struct (v74, v76, v80, v82, v86, v113, v115, v119, v121, v123, v162) //
    let v165 : _ = func1_from_result
    let v166 : string = $"true; $0 /*"
    let v167 : bool = Fable.Core.RustInterop.emitRustExpr v165 v166 
    let v168 : string = $"*/ }}); //"
    let v169 : bool = Fable.Core.RustInterop.emitRustExpr () v168 
    let v170 : string = $"_func1_from_v68"
    let v171 : Func0<crate_model_near_rpc_ReceiptsOutcome, struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))> = Fable.Core.RustInterop.emitRustExpr () v170 
    let v172 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v173 : (crate_model_near_rpc_ReceiptsOutcome -> struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))) = closure127(v171)
    let v174 : Vec<struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) []))> = Fable.Core.RustInterop.emitRustExpr struct (v67, v173) v172 
    let v175 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v176 : (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) []) = Fable.Core.RustInterop.emitRustExpr v174 v175 
    struct (v65, v176)
and method150 () : (crate_model_near_rpc_TransactionStatus -> struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) []))) =
    closure120()
and closure129 () (v0 : crate_model_near_rpc_ErrorCauseInfo) : struct (std_string_String option * std_string_String option) =
    let v1 : string = "$0.error_message"
    let v2 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "$0.requested_transaction_hash"
    let v4 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v0 v3 
    struct (v2, v4)
and method158 () : (crate_model_near_rpc_ErrorCauseInfo -> struct (std_string_String option * std_string_String option)) =
    closure129()
and closure128 () (v0 : crate_model_near_rpc_RpcError) : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) =
    let v1 : string = "$0.name"
    let v2 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "$0.cause"
    let v4 : crate_model_near_rpc_ErrorCause = Fable.Core.RustInterop.emitRustExpr v0 v3 
    let v5 : string = "$0.name"
    let v6 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : string = "$0.info"
    let v8 : crate_model_near_rpc_ErrorCauseInfo option = Fable.Core.RustInterop.emitRustExpr v4 v7 
    let v10 : (crate_model_near_rpc_ErrorCauseInfo -> struct (std_string_String option * std_string_String option)) = method158()
    let v11 : struct (std_string_String option * std_string_String option) option = v8 |> Option.map v10 
    let v26 : string = "$0.code"
    let v27 : int32 = Fable.Core.RustInterop.emitRustExpr v0 v26 
    let v28 : string = "$0.message"
    let v29 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v28 
    let v30 : string = "$0.data"
    let v31 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v30 
    struct (v2, v6, v11, v27, v29, v31)
and method157 () : (crate_model_near_rpc_RpcError -> struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String)) =
    closure128()
and closure119 () (v0 : crate_model_near_rpc_RpcResponse) : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) =
    let v1 : string = "$0.jsonrpc"
    let v2 : std_string_String = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "$0.result"
    let v4 : crate_model_near_rpc_TransactionStatus option = Fable.Core.RustInterop.emitRustExpr v0 v3 
    let v6 : (crate_model_near_rpc_TransactionStatus -> struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) []))) = method150()
    let v7 : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option = v4 |> Option.map v6 
    let v194 : string = "$0.error"
    let v195 : crate_model_near_rpc_RpcError option = Fable.Core.RustInterop.emitRustExpr v0 v194 
    let v197 : (crate_model_near_rpc_RpcError -> struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String)) = method157()
    let v198 : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option = v195 |> Option.map v197 
    let v240 : string = "$0.id"
    let v241 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v0 v240 
    struct (v2, v7, v198, v241)
and closure133 () (v0 : crate_model_near_rpc_RpcResponse) : crate_model_near_rpc_RpcResponse option =
    let v2 : crate_model_near_rpc_RpcResponse option = Some v0 
    v2
and method161 () : (crate_model_near_rpc_RpcResponse -> crate_model_near_rpc_RpcResponse option) =
    closure133()
and method162 (v0 : Result<crate_model_near_rpc_RpcResponse, std_string_String>) : Result<crate_model_near_rpc_RpcResponse, std_string_String> =
    v0
and closure132 (v0 : US35, v1 : US41, v2 : int32) struct (v3 : string, v4 : US23, v5 : string, v6 : bool, v7 : bool) : Result<crate_model_near_rpc_RpcResponse option, std_string_String> =
    let v54 : US29 =
        match v0 with
        | US35_1 -> (* None *)
            US29_1
        | US35_0(v8) -> (* Some *)
            let v50 : US30 =
                match v8 with
                | US36_1(v47) -> (* Error *)
                    US30_1(v47)
                | US36_0(v9) -> (* Ok *)
                    let v10 : US25 option = v9 |> Array.tryItem v2 
                    let v12 : (US25 -> US32) = method87()
                    let v13 : US32 option = v10 |> Option.map v12 
                    let v26 : US32 = US32_1
                    let v27 : US32 = v13 |> Option.defaultValue v26 
                    let v37 : US25 =
                        match v27 with
                        | US32_0(v31) -> (* Some *)
                            match v31 with
                            | US25_0(v32) -> (* Some *)
                                US25_0(v32)
                            | _ ->
                                US25_1
                        | _ ->
                            US25_1
                    let v45 : US31 =
                        match v37 with
                        | US25_1 -> (* None *)
                            US31_1
                        | US25_0(v38) -> (* Some *)
                            let v39 : std_string_String = v38.l0
                            let v40 : string = "fable_library_rust::String_::fromString($0)"
                            let v41 : string = Fable.Core.RustInterop.emitRustExpr v39 v40 
                            US31_0(v41)
                    US30_0(v45)
            US29_0(v50)
    let v56 : string = $"%A{struct (v3, v4, v5, v6, v7)}"
    let v59 : int64 = 400L
    let v60 : string = method8(v59, v56)
    let v62 : string = $"%A{v54}"
    let v65 : int64 = 400L
    let v66 : string = method8(v65, v62)
    let v67 : string = "state_core.use_request (15) / result memo / request: " + string v60 + " / state_data: " + string v66 + ""
    let v68 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v69 : bool = Fable.Core.RustInterop.emitRustExpr v67 v68 
    let v71 : string = $"%A{v1}"
    let v74 : int64 = 400L
    let v75 : string = method8(v74, v71)
    let v76 : string = "state_core.use_request (16) / effect / json: " + string v75 + ""
    let v77 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v78 : bool = Fable.Core.RustInterop.emitRustExpr v76 v77 
    let v113 : US31 =
        match v1 with
        | US41_1(v110) -> (* Error *)
            US31_1
        | US41_0(v79) -> (* Ok *)
            let v80 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
            let v81 : (US31 []) = Fable.Core.RustInterop.emitRustExpr v79 v80 
            let v82 : US31 option = v81 |> Array.tryItem v2 
            let v84 : (US31 -> US42) = method108()
            let v85 : US42 option = v82 |> Option.map v84 
            let v98 : US42 = US42_1
            let v99 : US42 = v85 |> Option.defaultValue v98 
            match v99 with
            | US42_0(v103) -> (* Some *)
                match v103 with
                | US31_0(v104) -> (* Some *)
                    US31_0(v104)
                | _ ->
                    US31_1
            | _ ->
                US31_1
    match v113 with
    | US31_0(v114) -> (* Some *)
        let v115 : string = method41(v114)
        (* run_target_args'
        let v120 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v121 : string = "&*$0"
        let v122 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v115 v121 
        let _run_target_args'_v120 = v122 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v123 : string = "&*$0"
        let v124 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v115 v123 
        let _run_target_args'_v120 = v124 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v125 : string = "&*$0"
        let v126 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v115 v125 
        let _run_target_args'_v120 = v126 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v128 : Ref<Str> = v115 |> unbox<Ref<Str>>
        let _run_target_args'_v120 = v128 
        #endif
#if FABLE_COMPILER_PYTHON
        let v132 : Ref<Str> = v115 |> unbox<Ref<Str>>
        let _run_target_args'_v120 = v132 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v136 : Ref<Str> = v115 |> unbox<Ref<Str>>
        let _run_target_args'_v120 = v136 
        #endif
#else
        let v140 : Ref<Str> = v115 |> unbox<Ref<Str>>
        let _run_target_args'_v120 = v140 
        #endif
        let v143 : Ref<Str> = _run_target_args'_v120 
        let v149 : string = "serde_json::from_str(&$0)"
        let v150 : Result<crate_model_near_rpc_RpcResponse, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v143 v149 
        let v151 : (serde_json_Error -> std_string_String) = method42()
        (* run_target_args'
        let v153 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v154 : string = "$0.map_err(|x| $1(x))"
        let v155 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v150, v151) v154 
        let _run_target_args'_v153 = v155 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v156 : string = "$0.map_err(|x| $1(x))"
        let v157 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v150, v151) v156 
        let _run_target_args'_v153 = v157 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v158 : string = "$0.map_err(|x| $1(x))"
        let v159 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v150, v151) v158 
        let _run_target_args'_v153 = v159 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v160 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v150 with Ok x -> Ok x | Error x -> Error (v151 x)
        let _run_target_args'_v153 = v160 
        #endif
#if FABLE_COMPILER_PYTHON
        let v161 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v150 with Ok x -> Ok x | Error x -> Error (v151 x)
        let _run_target_args'_v153 = v161 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v162 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v150 with Ok x -> Ok x | Error x -> Error (v151 x)
        let _run_target_args'_v153 = v162 
        #endif
#else
        let v163 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v150 with Ok x -> Ok x | Error x -> Error (v151 x)
        let _run_target_args'_v153 = v163 
        #endif
        let v164 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = _run_target_args'_v153 
        let v167 : (crate_model_near_rpc_RpcResponse -> crate_model_near_rpc_RpcResponse option) = method161()
        let v168 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = method162(v164)
        let v169 : string = "v168.map(|x| v167(x))"
        let v170 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v169 
        v170
    | _ ->
        match v54 with
        | US29_0(v171) -> (* Some *)
            match v171 with
            | US30_0(v172) -> (* Ok *)
                match v172 with
                | US31_0(v173) -> (* Some *)
                    let v174 : string = method41(v173)
                    (* run_target_args'
                    let v179 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v180 : string = "&*$0"
                    let v181 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v174 v180 
                    let _run_target_args'_v179 = v181 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v182 : string = "&*$0"
                    let v183 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v174 v182 
                    let _run_target_args'_v179 = v183 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v184 : string = "&*$0"
                    let v185 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v174 v184 
                    let _run_target_args'_v179 = v185 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v187 : Ref<Str> = v174 |> unbox<Ref<Str>>
                    let _run_target_args'_v179 = v187 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v191 : Ref<Str> = v174 |> unbox<Ref<Str>>
                    let _run_target_args'_v179 = v191 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v195 : Ref<Str> = v174 |> unbox<Ref<Str>>
                    let _run_target_args'_v179 = v195 
                    #endif
#else
                    let v199 : Ref<Str> = v174 |> unbox<Ref<Str>>
                    let _run_target_args'_v179 = v199 
                    #endif
                    let v202 : Ref<Str> = _run_target_args'_v179 
                    let v208 : string = "serde_json::from_str(&$0)"
                    let v209 : Result<crate_model_near_rpc_RpcResponse, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v202 v208 
                    let v210 : (serde_json_Error -> std_string_String) = method42()
                    (* run_target_args'
                    let v212 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v213 : string = "$0.map_err(|x| $1(x))"
                    let v214 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v209, v210) v213 
                    let _run_target_args'_v212 = v214 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v215 : string = "$0.map_err(|x| $1(x))"
                    let v216 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v209, v210) v215 
                    let _run_target_args'_v212 = v216 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v217 : string = "$0.map_err(|x| $1(x))"
                    let v218 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v209, v210) v217 
                    let _run_target_args'_v212 = v218 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v219 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v209 with Ok x -> Ok x | Error x -> Error (v210 x)
                    let _run_target_args'_v212 = v219 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v220 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v209 with Ok x -> Ok x | Error x -> Error (v210 x)
                    let _run_target_args'_v212 = v220 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v221 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v209 with Ok x -> Ok x | Error x -> Error (v210 x)
                    let _run_target_args'_v212 = v221 
                    #endif
#else
                    let v222 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v209 with Ok x -> Ok x | Error x -> Error (v210 x)
                    let _run_target_args'_v212 = v222 
                    #endif
                    let v223 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = _run_target_args'_v212 
                    let v226 : (crate_model_near_rpc_RpcResponse -> crate_model_near_rpc_RpcResponse option) = method161()
                    let v227 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = method162(v223)
                    let v228 : string = "v227.map(|x| v226(x))"
                    let v229 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v228 
                    v229
                | _ ->
                    let v231 : string = $"%A{struct (v113, v54)}"
                    let v234 : string = "state_core.use_request (17) / json Error / value: " + string v231 + ""
                    let v235 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                    let v236 : bool = Fable.Core.RustInterop.emitRustExpr v234 v235 
                    let v237 : crate_model_near_rpc_RpcResponse option = None
                    let v238 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Ok v237 
                    v238
            | _ ->
                let v241 : string = $"%A{struct (v113, v54)}"
                let v244 : string = "state_core.use_request (17) / json Error / value: " + string v241 + ""
                let v245 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v246 : bool = Fable.Core.RustInterop.emitRustExpr v244 v245 
                let v247 : crate_model_near_rpc_RpcResponse option = None
                let v248 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Ok v247 
                v248
        | _ ->
            let v251 : string = $"%A{struct (v113, v54)}"
            let v254 : string = "state_core.use_request (17) / json Error / value: " + string v251 + ""
            let v255 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v256 : bool = Fable.Core.RustInterop.emitRustExpr v254 v255 
            let v257 : crate_model_near_rpc_RpcResponse option = None
            let v258 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Ok v257 
            v258
and closure131 (v0 : US35, v1 : US41) (v2 : int32) : (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_rpc_RpcResponse option, std_string_String>) =
    closure132(v0, v1, v2)
and method160 (v0 : US35, v1 : US41) : (int32 -> (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_rpc_RpcResponse option, std_string_String>)) =
    closure131(v0, v1)
and closure130 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>, v1 : leptos_prelude_ArcMemo<Result<Vec<Heap4 option>, std_string_String> option>, v2 : leptos_prelude_ArcLocalResource<Result<Vec<string option>, std_string_String>>, v3 : leptos_prelude_Action<Heap4, Result<Vec<unit>, std_string_String>>) () : (Result<crate_model_near_rpc_RpcResponse option, std_string_String> []) =
    let v4 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v5 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v4 
    let v7 : string = $"%A{v5}"
    let v10 : string = "state_core.use_requests (13) / result memo / requests: " + string v7 + ""
    let v11 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr v10 v11 
    let v13 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v14 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v1 v13 
    let v16 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v17 : US26 option = v14 |> Option.map v16 
    let v30 : US26 = US26_1
    let v31 : US26 = v17 |> Option.defaultValue v30 
    let v78 : US35 =
        match v31 with
        | US26_1 -> (* None *)
            US35_1
        | US26_0(v35) -> (* Some *)
            let v36 : (Vec<Heap4 option> -> US24) = method83()
            let v37 : (std_string_String -> US24) = method84()
            let v38 : US24 = match v35 with Ok x -> v36 x | Error x -> v37 x
            let v74 : US36 =
                match v38 with
                | US24_1(v71) -> (* Error *)
                    US36_1(v71)
                | US24_0(v39) -> (* Ok *)
                    let v40 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v41 : bool = Fable.Core.RustInterop.emitRustExpr v39 v40 
                    let v42 : string = "x"
                    let v43 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v42 
                    let v45 : (Heap4 -> US25) = method85()
                    let v46 : US25 option = v43 |> Option.map v45 
                    let v59 : US25 = US25_1
                    let v60 : US25 = v46 |> Option.defaultValue v59 
                    let v64 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v65 : bool = Fable.Core.RustInterop.emitRustExpr v60 v64 
                    let v66 : string = "_vec_map"
                    let v67 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v66 
                    let v68 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v69 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v67 v68 
                    US36_0(v69)
            US35_0(v74)
    let v80 : string = $"%A{v78}"
    let v83 : int64 = 400L
    let v84 : string = method8(v83, v80)
    let v85 : string = "state_core.use_request (14) / result_memo / state_data: " + string v84 + ""
    let v86 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v87 : bool = Fable.Core.RustInterop.emitRustExpr v85 v86 
    let v88 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v89 : Result<Vec<string option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v2 v88 
    let v91 : (Result<Vec<string option>, std_string_String> -> US37) = method103()
    let v92 : US37 option = v89 |> Option.map v91 
    let v105 : US37 = US37_1
    let v106 : US37 = v92 |> Option.defaultValue v105 
    let v117 : US38 =
        match v106 with
        | US37_1 -> (* None *)
            US38_1
        | US37_0(v110) -> (* Some *)
            let v111 : (Vec<string option> -> US39) = method104()
            let v112 : (std_string_String -> US39) = method105()
            let v113 : US39 = match v110 with Ok x -> v111 x | Error x -> v112 x
            US38_0(v113)
    let v156 : US40 =
        match v117 with
        | US38_1 -> (* None *)
            US40_1
        | US38_0(v118) -> (* Some *)
            let v152 : US41 =
                match v118 with
                | US39_1(v149) -> (* Error *)
                    US41_1(v149)
                | US39_0(v119) -> (* Ok *)
                    let v120 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v121 : bool = Fable.Core.RustInterop.emitRustExpr v119 v120 
                    let v122 : string = "x"
                    let v123 : string option = Fable.Core.RustInterop.emitRustExpr () v122 
                    let v125 : (string -> US31) = method106()
                    let v126 : US31 option = v123 |> Option.map v125 
                    let v139 : US31 = US31_1
                    let v140 : US31 = v126 |> Option.defaultValue v139 
                    let v144 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v145 : bool = Fable.Core.RustInterop.emitRustExpr v140 v144 
                    let v146 : string = "_vec_map"
                    let v147 : Vec<US31> = Fable.Core.RustInterop.emitRustExpr () v146 
                    US41_0(v147)
            US40_0(v152)
    let v157 : (US31 []) = [||]
    let v158 : string = "$0.to_vec()"
    let v159 : Vec<US31> = Fable.Core.RustInterop.emitRustExpr v157 v158 
    let v163 : US41 =
        match v156 with
        | US40_1 -> (* None *)
            US41_0(v159)
        | US40_0(v160) -> (* Some *)
            v160
    let v246 : bool =
        match v163 with
        | US41_1(v244) -> (* Error *)
            false
        | US41_0(v164) -> (* Ok *)
            let v165 : string = "true; $0.into_iter().for_each(|x| { //"
            let v166 : bool = Fable.Core.RustInterop.emitRustExpr v164 v165 
            let v167 : string = "x"
            let v168 : US31 = Fable.Core.RustInterop.emitRustExpr () v167 
            let v239 : bool =
                match v168 with
                | US31_0(v169) -> (* Some *)
                    (* run_target_args'
                    let v174 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v175 : string = "&*$0"
                    let v176 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v169 v175 
                    let _run_target_args'_v174 = v176 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v177 : string = "&*$0"
                    let v178 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v169 v177 
                    let _run_target_args'_v174 = v178 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v179 : string = "&*$0"
                    let v180 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v169 v179 
                    let _run_target_args'_v174 = v180 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v182 : Ref<Str> = v169 |> unbox<Ref<Str>>
                    let _run_target_args'_v174 = v182 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v186 : Ref<Str> = v169 |> unbox<Ref<Str>>
                    let _run_target_args'_v174 = v186 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v190 : Ref<Str> = v169 |> unbox<Ref<Str>>
                    let _run_target_args'_v174 = v190 
                    #endif
#else
                    let v194 : Ref<Str> = v169 |> unbox<Ref<Str>>
                    let _run_target_args'_v174 = v194 
                    #endif
                    let v197 : Ref<Str> = _run_target_args'_v174 
                    (* run_target_args'
                    let v207 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v208 : string = "String::from($0)"
                    let v209 : std_string_String = Fable.Core.RustInterop.emitRustExpr v197 v208 
                    let _run_target_args'_v207 = v209 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v210 : string = "String::from($0)"
                    let v211 : std_string_String = Fable.Core.RustInterop.emitRustExpr v197 v210 
                    let _run_target_args'_v207 = v211 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v212 : string = "String::from($0)"
                    let v213 : std_string_String = Fable.Core.RustInterop.emitRustExpr v197 v212 
                    let _run_target_args'_v207 = v213 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v215 : std_string_String = v197 |> unbox<std_string_String>
                    let _run_target_args'_v207 = v215 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v219 : std_string_String = v197 |> unbox<std_string_String>
                    let _run_target_args'_v207 = v219 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v223 : std_string_String = v197 |> unbox<std_string_String>
                    let _run_target_args'_v207 = v223 
                    #endif
#else
                    let v227 : std_string_String = v197 |> unbox<std_string_String>
                    let _run_target_args'_v207 = v227 
                    #endif
                    let v230 : std_string_String = _run_target_args'_v207 
                    let v236 : Heap4 = {l0 = v230} : Heap4
                    let v237 : string = "true; leptos::prelude::Action::dispatch(&$0, $1.clone())"
                    let v238 : bool = Fable.Core.RustInterop.emitRustExpr struct (v3, v236) v237 
                    true
                | _ ->
                    false
            let v240 : string = $"true"
            let v241 : bool = Fable.Core.RustInterop.emitRustExpr () v240 
            let v242 : string = "true; }); //"
            let v243 : bool = Fable.Core.RustInterop.emitRustExpr () v242 
            false
    let v247 : (int32 -> (struct (string * US23 * string * bool * bool) -> Result<crate_model_near_rpc_RpcResponse option, std_string_String>)) = method160(v78, v163)
    let v248 : Vec<struct (string * US23 * string * bool * bool)> = method96(v5)
    let v249 : string = "v248.iter().enumerate().map(|(i, x)| v247(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v250 : Vec<Result<crate_model_near_rpc_RpcResponse option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v249 
    let v251 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v252 : (Result<crate_model_near_rpc_RpcResponse option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v250 v251 
    let v254 : string = $"%A{v252}"
    let v257 : string = "state_core.use_requests (18) / result_func func0 / result: " + string v254 + ""
    let v258 : int64 = 200L
    let v259 : string = method8(v258, v257)
    let v260 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v261 : bool = Fable.Core.RustInterop.emitRustExpr v259 v260 
    v252
and method164 (v0 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option))) : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option)) =
    v0
and closure135 (v0 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option))) (v1 : crate_model_near_rpc_RpcResponse option) : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option =
    let v3 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option)) = method164(v0)
    let v4 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option = v1 |> Option.map v3 
    v4
and method163 (v0 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option))) : (crate_model_near_rpc_RpcResponse option -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option) =
    closure135(v0)
and method165 (v0 : Result<crate_model_near_rpc_RpcResponse option, std_string_String>) : Result<crate_model_near_rpc_RpcResponse option, std_string_String> =
    v0
and method166 (v0 : Func0<Result<crate_model_near_rpc_RpcResponse option, std_string_String>, Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>) : Func0<Result<crate_model_near_rpc_RpcResponse option, std_string_String>, Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> =
    v0
and closure136 (v0 : Func0<Result<crate_model_near_rpc_RpcResponse option, std_string_String>, Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>) (v1 : Result<crate_model_near_rpc_RpcResponse option, std_string_String>) : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> =
    let v2 : Func0<Result<crate_model_near_rpc_RpcResponse option, std_string_String>, Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> = method166(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure134 (v0 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option)), v1 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>>, v2 : leptos_prelude_ArcLocalResource<Result<Vec<Heap4 option>, std_string_String>>, v3 : leptos_prelude_ArcMemo<(Result<crate_model_near_rpc_RpcResponse option, std_string_String> [])>) () : Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> =
    let v4 : string = $"leptos::prelude::Submission::pending(&$0.into()).into()"
    let v5 : leptos_prelude_ArcSignal<bool> = Fable.Core.RustInterop.emitRustExpr v1 v4 
    let v6 : string = $"leptos::prelude::ArcSignal::get(&$0)"
    let v7 : bool = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : string = $"leptos::prelude::Submission::pending(&$0.into()).into()"
    let v9 : leptos_prelude_ArcSignal<bool> = Fable.Core.RustInterop.emitRustExpr v2 v8 
    let v10 : string = $"leptos::prelude::ArcSignal::get(&$0)"
    let v11 : bool = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v13 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v1 v12 
    let v15 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v16 : US2 option = v13 |> Option.map v15 
    let v29 : US2 = US2_1
    let v30 : US2 = v16 |> Option.defaultValue v29 
    let v34 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v35 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v2 v34 
    let v37 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v38 : US26 option = v35 |> Option.map v37 
    let v51 : US26 = US26_1
    let v52 : US26 = v38 |> Option.defaultValue v51 
    let v99 : US35 =
        match v52 with
        | US26_1 -> (* None *)
            US35_1
        | US26_0(v56) -> (* Some *)
            let v57 : (Vec<Heap4 option> -> US24) = method83()
            let v58 : (std_string_String -> US24) = method84()
            let v59 : US24 = match v56 with Ok x -> v57 x | Error x -> v58 x
            let v95 : US36 =
                match v59 with
                | US24_1(v92) -> (* Error *)
                    US36_1(v92)
                | US24_0(v60) -> (* Ok *)
                    let v61 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v62 : bool = Fable.Core.RustInterop.emitRustExpr v60 v61 
                    let v63 : string = "x"
                    let v64 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v63 
                    let v66 : (Heap4 -> US25) = method85()
                    let v67 : US25 option = v64 |> Option.map v66 
                    let v80 : US25 = US25_1
                    let v81 : US25 = v67 |> Option.defaultValue v80 
                    let v85 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v86 : bool = Fable.Core.RustInterop.emitRustExpr v81 v85 
                    let v87 : string = "_vec_map"
                    let v88 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v87 
                    let v89 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v90 : (US25 []) = Fable.Core.RustInterop.emitRustExpr v88 v89 
                    US36_0(v90)
            US35_0(v95)
    let v101 : string = $"%A{v30}"
    let v104 : int64 = 400L
    let v105 : string = method8(v104, v101)
    let v107 : string = $"%A{v99}"
    let v110 : int64 = 400L
    let v111 : string = method8(v110, v107)
    let v112 : string = "state_core.use_request (19) / result move / database: " + string v105 + " / database_loading: " + string v7 + " / state_data: " + string v111 + " / state_data_loading: " + string v11 + ""
    let v113 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v114 : bool = Fable.Core.RustInterop.emitRustExpr v112 v113 
    let v115 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v116 : (Result<crate_model_near_rpc_RpcResponse option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v3 v115 
    let v117 : string = "$0.to_vec()"
    let v118 : Vec<Result<crate_model_near_rpc_RpcResponse option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v116 v117 
    let v119 : unit = ()
    let v120 : string = $"true; let _func1_from_v119 = Func1::from(move |value| {{ //"
    let v121 : bool = Fable.Core.RustInterop.emitRustExpr () v120 
    let v122 : string = $"value"
    let v123 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v122 
    let v124 : (crate_model_near_rpc_RpcResponse option -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option) = method163(v0)
    let v125 : Result<crate_model_near_rpc_RpcResponse option, std_string_String> = method165(v123)
    let v126 : string = "v125.map(|x| v124(x))"
    let v127 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v126 
    let func1_from_result = v127 //
    let v128 : _ = func1_from_result
    let v129 : string = $"true; $0 /*"
    let v130 : bool = Fable.Core.RustInterop.emitRustExpr v128 v129 
    let v131 : string = $"*/ }}); //"
    let v132 : bool = Fable.Core.RustInterop.emitRustExpr () v131 
    let v133 : string = $"_func1_from_v119"
    let v134 : Func0<Result<crate_model_near_rpc_RpcResponse option, std_string_String>, Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr () v133 
    let v135 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v136 : (Result<crate_model_near_rpc_RpcResponse option, std_string_String> -> Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>) = closure136(v134)
    let v137 : Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr struct (v118, v136) v135 
    let v139 : string = $"%A{v137}"
    let v142 : string = "state_core.use_requests (20) / result func0 / result: " + string v139 + ""
    let v143 : int64 = 200L
    let v144 : string = method8(v143, v142)
    let v145 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v146 : bool = Fable.Core.RustInterop.emitRustExpr v144 v145 
    v137
and method159 (v0 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>, v1 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option))) : leptos_prelude_ArcMemo<Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>> =
    let v2 : string = "state_core.use_requests (1)"
    let v3 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = "state_core.use_database (1)"
    let v6 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v7 : bool = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : unit = ()
    let v9 : string = $"true; let _func0_from_v8 = Func0::from(move || {{ //"
    let v10 : bool = Fable.Core.RustInterop.emitRustExpr () v9 
    let v11 : string = "true; let __future_init = Box::pin(/*"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr () v11 
    let v13 : string = "*/ async move { /*"
    let v14 : bool = Fable.Core.RustInterop.emitRustExpr () v13 
    let v15 : string = "*/ ()"
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = "state_core.use_database (2) / database new_local_resource"
    let v18 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v19 : bool = Fable.Core.RustInterop.emitRustExpr v17 v18 
    let v20 : string = "state_core.build_database ()"
    let v21 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : string = "true; let __future_init = Box::pin(/*"
    let v24 : bool = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : string = "*/ async { /*"
    let v26 : bool = Fable.Core.RustInterop.emitRustExpr () v25 
    let v27 : string = "*/ ()"
    let v28 : bool = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : string = "Box::pin(rexie::Rexie::builder(\"database\").version(1).add_object_store(rexie::ObjectStore::new(\"store\")).build())"
    let v30 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v29 
    let v31 : string = "v30.await"
    let v32 : Result<rexie_Rexie, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v31 
    let v33 : (rexie_Error -> std_string_String) = method6()
    (* run_target_args'
    let v35 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v36 : string = "$0.map_err(|x| $1(x))"
    let v37 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v36 
    let _run_target_args'_v35 = v37 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v38 : string = "$0.map_err(|x| $1(x))"
    let v39 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v38 
    let _run_target_args'_v35 = v39 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v40 : string = "$0.map_err(|x| $1(x))"
    let v41 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v32, v33) v40 
    let _run_target_args'_v35 = v41 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v42 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v42 
    #endif
#if FABLE_COMPILER_PYTHON
    let v43 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v43 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v44 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v44 
    #endif
#else
    let v45 : Result<rexie_Rexie, std_string_String> = match v32 with Ok x -> Ok x | Error x -> Error (v33 x)
    let _run_target_args'_v35 = v45 
    #endif
    let v46 : Result<rexie_Rexie, std_string_String> = _run_target_args'_v35 
    let v49 : string = ""
    let v50 : string = "}"
    let v51 : string = v49 + v50 
    let x = v46 //
    let v52 : _ = x
    let v53 : unit = ()
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = $"true; let _fix_closure_v53 = $0"
    let v56 : bool = Fable.Core.RustInterop.emitRustExpr v52 v55 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = $"true; let _fix_closure_v53 = $0"
    let v58 : bool = Fable.Core.RustInterop.emitRustExpr v52 v57 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = $"true; let _fix_closure_v53 = $0"
    let v60 : bool = Fable.Core.RustInterop.emitRustExpr v52 v59 
    let _run_target_args'_v54 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v54 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v54 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v54 = false 
    #endif
#else
    let _run_target_args'_v54 = false 
    #endif
    let v61 : bool = _run_target_args'_v54 
    let v63 : string = $"true; _fix_closure_v53 " + v51 + "); " + v49 + " // rust.fix_closure'"
    let v64 : bool = Fable.Core.RustInterop.emitRustExpr () v63 
    let v65 : string = "__future_init"
    let v66 : _ = Fable.Core.RustInterop.emitRustExpr () v65 
    let v67 : string = "v66"
    let v68 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v67 
    let v69 : string = "v68.await"
    let v70 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v69 
    (* run_target_args'
    let v72 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v73 : string = "$0.unwrap()"
    let v74 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v70 v73 
    let _run_target_args'_v72 = v74 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v75 : string = "$0.unwrap()"
    let v76 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v70 v75 
    let _run_target_args'_v72 = v76 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v77 : string = "$0.unwrap()"
    let v78 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v70 v77 
    let _run_target_args'_v72 = v78 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v79 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v79 
    #endif
#if FABLE_COMPILER_PYTHON
    let v80 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v80 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v81 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v81 
    #endif
#else
    let v82 : rexie_Rexie = match v70 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v72 = v82 
    #endif
    let v83 : rexie_Rexie = _run_target_args'_v72 
    let v86 : (rexie_Rexie -> rexie_Rexie) = method7()
    let v87 : rexie_Rexie = v86 v83
    let v88 : string = "std::sync::Arc::new(v87)"
    let v89 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v88 
    let v91 : string = $"%A{v89}"
    let v94 : string = "state_core.use_database (3) / database new_local_resource / result: " + string v91 + ""
    let v95 : int64 = 200L
    let v96 : string = method8(v95, v94)
    let v97 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v98 : bool = Fable.Core.RustInterop.emitRustExpr v96 v97 
    let v99 : string = v49 + v50 
    let x = v89 //
    let v100 : _ = x
    let v101 : unit = ()
    (* run_target_args'
    let v102 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v103 : string = $"true; let _fix_closure_v101 = $0"
    let v104 : bool = Fable.Core.RustInterop.emitRustExpr v100 v103 
    let _run_target_args'_v102 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v105 : string = $"true; let _fix_closure_v101 = $0"
    let v106 : bool = Fable.Core.RustInterop.emitRustExpr v100 v105 
    let _run_target_args'_v102 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v107 : string = $"true; let _fix_closure_v101 = $0"
    let v108 : bool = Fable.Core.RustInterop.emitRustExpr v100 v107 
    let _run_target_args'_v102 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v102 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v102 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v102 = false 
    #endif
#else
    let _run_target_args'_v102 = false 
    #endif
    let v109 : bool = _run_target_args'_v102 
    let v111 : string = $"true; _fix_closure_v101 " + v99 + "); " + v49 + " // rust.fix_closure'"
    let v112 : bool = Fable.Core.RustInterop.emitRustExpr () v111 
    let v113 : string = "__future_init"
    let v114 : _ = Fable.Core.RustInterop.emitRustExpr () v113 
    let v115 : string = "v114"
    let v116 : std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>> = Fable.Core.RustInterop.emitRustExpr () v115 
    let v117 : string = $"true; $0 /*"
    let v118 : bool = Fable.Core.RustInterop.emitRustExpr v116 v117 
    let v119 : string = $"*/ }}); //"
    let v120 : bool = Fable.Core.RustInterop.emitRustExpr () v119 
    let v121 : string = $"_func0_from_v8"
    let v122 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>>> = Fable.Core.RustInterop.emitRustExpr () v121 
    let v123 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v124 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v122 v123 
    let v125 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v126 : (unit -> PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option) = closure64(v124)
    let v127 : leptos_prelude_ArcMemo<PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option> = Fable.Core.RustInterop.emitRustExpr v126 v125 
    let v128 : unit = ()
    let v129 : string = $"true; let _func0_from_v128 = Func0::from(move || {{ //"
    let v130 : bool = Fable.Core.RustInterop.emitRustExpr () v129 
    let v131 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v132 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v124 v131 
    let v133 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v134 : bool = Fable.Core.RustInterop.emitRustExpr v132 v133 
    let v135 : string = "x"
    let v136 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v135 
    let v137 : (unit -> unit) = closure8()
    let _v137 = true
    let v138 : string = "PartialEqWrapper($0)"
    let v139 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v136 v138 
    let v140 : string = "true; $0 })"
    let v141 : bool = Fable.Core.RustInterop.emitRustExpr v139 v140 
    let v142 : string = "_optionm_map_"
    let v143 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr () v142 
    let v144 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v145 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v144 
    let v146 : string = "true; let __future_init = Box::pin(/*"
    let v147 : bool = Fable.Core.RustInterop.emitRustExpr () v146 
    let v148 : string = "*/ async move { /*"
    let v149 : bool = Fable.Core.RustInterop.emitRustExpr () v148 
    let v150 : string = "*/ ()"
    let v151 : bool = Fable.Core.RustInterop.emitRustExpr () v150 
    let v153 : string = $"%A{v143}"
    let v157 : string = $"%A{v145}"
    let v160 : int64 = 400L
    let v161 : string = method8(v160, v157)
    let v162 : string = "state_core.use_requests (3) / state_data_resource new_local_resource / request : " + string v161 + " / database: " + string v153 + ""
    let v163 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v164 : bool = Fable.Core.RustInterop.emitRustExpr v162 v163 
    let v165 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v166 : bool = Fable.Core.RustInterop.emitRustExpr v143 v165 
    let v167 : string = "x"
    let v168 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr () v167 
    let v169 : string = "$0.0"
    let v170 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr v168 v169 
    let v171 : string = "true; $0 })"
    let v172 : bool = Fable.Core.RustInterop.emitRustExpr v170 v171 
    let v173 : string = "_optionm_map_"
    let v174 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr () v173 
    let v176 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v177 : US2 option = v174 |> Option.map v176 
    let v190 : US2 = US2_1
    let v191 : US2 = v177 |> Option.defaultValue v190 
    let v669 : US24 =
        match v191 with
        | US2_0(v195) -> (* Some *)
            let v196 : unit = ()
            let v197 : string = $"true; let _func1_from_v196 = Func1::from(move |value| {{ //"
            let v198 : bool = Fable.Core.RustInterop.emitRustExpr () v197 
            let v199 : string = $"value"
            let struct (v200 : string, v201 : US23, v202 : string, v203 : bool, v204 : bool) = Fable.Core.RustInterop.emitRustExpr () v199 
            let v205 : string = "url[" + v200 + "](" + $"%A{v202}" + ")"
            let v206 : string = "state_core.get_data () / id: " + v205 + ""
            let v207 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v208 : bool = Fable.Core.RustInterop.emitRustExpr v206 v207 
            let v209 : string = "true; let __future_init = Box::pin(/*"
            let v210 : bool = Fable.Core.RustInterop.emitRustExpr () v209 
            let v211 : string = "*/ async { /*"
            let v212 : bool = Fable.Core.RustInterop.emitRustExpr () v211 
            let v213 : string = "*/ ()"
            let v214 : bool = Fable.Core.RustInterop.emitRustExpr () v213 
            let v215 : string = "store"
            let v216 : (string []) = [|v215|]
            let v217 : string = "$0.to_vec()"
            let v218 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v216 v217 
            let v219 : unit = ()
            let v220 : string = $"true; let _func1_from_v219 = Func1::from(move |value| {{ //"
            let v221 : bool = Fable.Core.RustInterop.emitRustExpr () v220 
            let v222 : string = $"value"
            let v223 : string = Fable.Core.RustInterop.emitRustExpr () v222 
            (* run_target_args'
            let v228 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v229 : string = "&*$0"
            let v230 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v223 v229 
            let _run_target_args'_v228 = v230 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v231 : string = "&*$0"
            let v232 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v223 v231 
            let _run_target_args'_v228 = v232 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v233 : string = "&*$0"
            let v234 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v223 v233 
            let _run_target_args'_v228 = v234 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v236 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v236 
            #endif
#if FABLE_COMPILER_PYTHON
            let v240 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v240 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v244 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v244 
            #endif
#else
            let v248 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v248 
            #endif
            let v251 : Ref<Str> = _run_target_args'_v228 
            (* run_target_args'
            let v261 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v262 : string = "String::from($0)"
            let v263 : std_string_String = Fable.Core.RustInterop.emitRustExpr v251 v262 
            let _run_target_args'_v261 = v263 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v264 : string = "String::from($0)"
            let v265 : std_string_String = Fable.Core.RustInterop.emitRustExpr v251 v264 
            let _run_target_args'_v261 = v265 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v266 : string = "String::from($0)"
            let v267 : std_string_String = Fable.Core.RustInterop.emitRustExpr v251 v266 
            let _run_target_args'_v261 = v267 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v269 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v261 = v269 
            #endif
#if FABLE_COMPILER_PYTHON
            let v273 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v261 = v273 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v277 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v261 = v277 
            #endif
#else
            let v281 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v261 = v281 
            #endif
            let v284 : std_string_String = _run_target_args'_v261 
            let func1_from_result = v284 //
            let v290 : _ = func1_from_result
            let v291 : string = $"true; $0 /*"
            let v292 : bool = Fable.Core.RustInterop.emitRustExpr v290 v291 
            let v293 : string = $"*/ }}); //"
            let v294 : bool = Fable.Core.RustInterop.emitRustExpr () v293 
            let v295 : string = $"_func1_from_v219"
            let v296 : Func0<string, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v295 
            let v297 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v298 : (string -> std_string_String) = closure10(v296)
            let v299 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v218, v298) v297 
            let v300 : std_sync_Arc<rexie_Rexie> = method11(v195)
            let v301 : string = "$0.transaction(&v299, rexie::TransactionMode::ReadOnly)"
            let v302 : Result<rexie_Transaction, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v300 v301 
            let v303 : (rexie_Error -> std_string_String) = method12()
            (* run_target_args'
            let v305 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v306 : string = "$0.map_err(|x| $1(x))"
            let v307 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v302, v303) v306 
            let _run_target_args'_v305 = v307 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v308 : string = "$0.map_err(|x| $1(x))"
            let v309 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v302, v303) v308 
            let _run_target_args'_v305 = v309 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v310 : string = "$0.map_err(|x| $1(x))"
            let v311 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v302, v303) v310 
            let _run_target_args'_v305 = v311 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v312 : Result<rexie_Transaction, std_string_String> = match v302 with Ok x -> Ok x | Error x -> Error (v303 x)
            let _run_target_args'_v305 = v312 
            #endif
#if FABLE_COMPILER_PYTHON
            let v313 : Result<rexie_Transaction, std_string_String> = match v302 with Ok x -> Ok x | Error x -> Error (v303 x)
            let _run_target_args'_v305 = v313 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v314 : Result<rexie_Transaction, std_string_String> = match v302 with Ok x -> Ok x | Error x -> Error (v303 x)
            let _run_target_args'_v305 = v314 
            #endif
#else
            let v315 : Result<rexie_Transaction, std_string_String> = match v302 with Ok x -> Ok x | Error x -> Error (v303 x)
            let _run_target_args'_v305 = v315 
            #endif
            let v316 : Result<rexie_Transaction, std_string_String> = _run_target_args'_v305 
            let v319 : string = "$0?"
            let v320 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v316 v319 
            let v321 : string = method13()
            (* run_target_args'
            let v326 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v327 : string = "&*$0"
            let v328 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v321 v327 
            let _run_target_args'_v326 = v328 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v329 : string = "&*$0"
            let v330 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v321 v329 
            let _run_target_args'_v326 = v330 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v331 : string = "&*$0"
            let v332 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v321 v331 
            let _run_target_args'_v326 = v332 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v334 : Ref<Str> = v321 |> unbox<Ref<Str>>
            let _run_target_args'_v326 = v334 
            #endif
#if FABLE_COMPILER_PYTHON
            let v338 : Ref<Str> = v321 |> unbox<Ref<Str>>
            let _run_target_args'_v326 = v338 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v342 : Ref<Str> = v321 |> unbox<Ref<Str>>
            let _run_target_args'_v326 = v342 
            #endif
#else
            let v346 : Ref<Str> = v321 |> unbox<Ref<Str>>
            let _run_target_args'_v326 = v346 
            #endif
            let v349 : Ref<Str> = _run_target_args'_v326 
            let v355 : string = "v320.store($0)"
            let v356 : Result<rexie_Store, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v349 v355 
            let v357 : (rexie_Error -> std_string_String) = method14()
            (* run_target_args'
            let v359 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v360 : string = "$0.map_err(|x| $1(x))"
            let v361 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v356, v357) v360 
            let _run_target_args'_v359 = v361 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v362 : string = "$0.map_err(|x| $1(x))"
            let v363 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v356, v357) v362 
            let _run_target_args'_v359 = v363 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v364 : string = "$0.map_err(|x| $1(x))"
            let v365 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v356, v357) v364 
            let _run_target_args'_v359 = v365 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v366 : Result<rexie_Store, std_string_String> = match v356 with Ok x -> Ok x | Error x -> Error (v357 x)
            let _run_target_args'_v359 = v366 
            #endif
#if FABLE_COMPILER_PYTHON
            let v367 : Result<rexie_Store, std_string_String> = match v356 with Ok x -> Ok x | Error x -> Error (v357 x)
            let _run_target_args'_v359 = v367 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v368 : Result<rexie_Store, std_string_String> = match v356 with Ok x -> Ok x | Error x -> Error (v357 x)
            let _run_target_args'_v359 = v368 
            #endif
#else
            let v369 : Result<rexie_Store, std_string_String> = match v356 with Ok x -> Ok x | Error x -> Error (v357 x)
            let _run_target_args'_v359 = v369 
            #endif
            let v370 : Result<rexie_Store, std_string_String> = _run_target_args'_v359 
            let v373 : string = "$0?"
            let v374 : rexie_Store = Fable.Core.RustInterop.emitRustExpr v370 v373 
            let v375 : string = method79(v205)
            (* run_target_args'
            let v380 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v381 : string = "&*$0"
            let v382 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v375 v381 
            let _run_target_args'_v380 = v382 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v383 : string = "&*$0"
            let v384 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v375 v383 
            let _run_target_args'_v380 = v384 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v385 : string = "&*$0"
            let v386 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v375 v385 
            let _run_target_args'_v380 = v386 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v388 : Ref<Str> = v375 |> unbox<Ref<Str>>
            let _run_target_args'_v380 = v388 
            #endif
#if FABLE_COMPILER_PYTHON
            let v392 : Ref<Str> = v375 |> unbox<Ref<Str>>
            let _run_target_args'_v380 = v392 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v396 : Ref<Str> = v375 |> unbox<Ref<Str>>
            let _run_target_args'_v380 = v396 
            #endif
#else
            let v400 : Ref<Str> = v375 |> unbox<Ref<Str>>
            let _run_target_args'_v380 = v400 
            #endif
            let v403 : Ref<Str> = _run_target_args'_v380 
            let v409 : string = "wasm_bindgen::JsValue::from_str($0)"
            let v410 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr v403 v409 
            let v411 : string = $"Box::pin(rexie::Store::get(&v374, v410))"
            let v412 : std_pin_Pin<Box<Dyn<std_future_Future<Result<wasm_bindgen_JsValue option, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v411 
            let v413 : string = "v412.await"
            let v414 : Result<wasm_bindgen_JsValue option, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v413 
            let v415 : (rexie_Error -> std_string_String) = method16()
            (* run_target_args'
            let v417 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v418 : string = "$0.map_err(|x| $1(x))"
            let v419 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v414, v415) v418 
            let _run_target_args'_v417 = v419 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v420 : string = "$0.map_err(|x| $1(x))"
            let v421 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v414, v415) v420 
            let _run_target_args'_v417 = v421 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v422 : string = "$0.map_err(|x| $1(x))"
            let v423 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v414, v415) v422 
            let _run_target_args'_v417 = v423 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v424 : Result<wasm_bindgen_JsValue option, std_string_String> = match v414 with Ok x -> Ok x | Error x -> Error (v415 x)
            let _run_target_args'_v417 = v424 
            #endif
#if FABLE_COMPILER_PYTHON
            let v425 : Result<wasm_bindgen_JsValue option, std_string_String> = match v414 with Ok x -> Ok x | Error x -> Error (v415 x)
            let _run_target_args'_v417 = v425 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v426 : Result<wasm_bindgen_JsValue option, std_string_String> = match v414 with Ok x -> Ok x | Error x -> Error (v415 x)
            let _run_target_args'_v417 = v426 
            #endif
#else
            let v427 : Result<wasm_bindgen_JsValue option, std_string_String> = match v414 with Ok x -> Ok x | Error x -> Error (v415 x)
            let _run_target_args'_v417 = v427 
            #endif
            let v428 : Result<wasm_bindgen_JsValue option, std_string_String> = _run_target_args'_v417 
            let v431 : string = "$0?"
            let v432 : wasm_bindgen_JsValue option = Fable.Core.RustInterop.emitRustExpr v428 v431 
            let v434 : (wasm_bindgen_JsValue -> US4) = method17()
            let v435 : US4 option = v432 |> Option.map v434 
            let v448 : US4 = US4_1
            let v449 : US4 = v435 |> Option.defaultValue v448 
            let v555 : US25 =
                match v449 with
                | US4_1 -> (* None *)
                    US25_1
                | US4_0(v453) -> (* Some *)
                    let v454 : wasm_bindgen_JsValue = method18(v453)
                    let v455 : string = "serde_wasm_bindgen::from_value(v454)"
                    let v456 : Result<serde_json_Value option, serde_wasm_bindgen_Error> = Fable.Core.RustInterop.emitRustExpr () v455 
                    let v457 : (serde_wasm_bindgen_Error -> std_string_String) = method19()
                    (* run_target_args'
                    let v459 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v460 : string = "$0.map_err(|x| $1(x))"
                    let v461 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v456, v457) v460 
                    let _run_target_args'_v459 = v461 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v462 : string = "$0.map_err(|x| $1(x))"
                    let v463 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v456, v457) v462 
                    let _run_target_args'_v459 = v463 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v464 : string = "$0.map_err(|x| $1(x))"
                    let v465 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v456, v457) v464 
                    let _run_target_args'_v459 = v465 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v466 : Result<serde_json_Value option, std_string_String> = match v456 with Ok x -> Ok x | Error x -> Error (v457 x)
                    let _run_target_args'_v459 = v466 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v467 : Result<serde_json_Value option, std_string_String> = match v456 with Ok x -> Ok x | Error x -> Error (v457 x)
                    let _run_target_args'_v459 = v467 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v468 : Result<serde_json_Value option, std_string_String> = match v456 with Ok x -> Ok x | Error x -> Error (v457 x)
                    let _run_target_args'_v459 = v468 
                    #endif
#else
                    let v469 : Result<serde_json_Value option, std_string_String> = match v456 with Ok x -> Ok x | Error x -> Error (v457 x)
                    let _run_target_args'_v459 = v469 
                    #endif
                    let v470 : Result<serde_json_Value option, std_string_String> = _run_target_args'_v459 
                    let v473 : string = "$0?"
                    let v474 : serde_json_Value option = Fable.Core.RustInterop.emitRustExpr v470 v473 
                    let v476 : (serde_json_Value -> US5) = method20()
                    let v477 : US5 option = v474 |> Option.map v476 
                    let v490 : US5 = US5_1
                    let v491 : US5 = v477 |> Option.defaultValue v490 
                    match v491 with
                    | US5_1 -> (* None *)
                        US25_1
                    | US5_0(v495) -> (* Some *)
                        let v496 : serde_json_Value = method21(v495)
                        let v497 : string = "serde_json::from_value(v496)"
                        let v498 : Result<Vec<uint8>, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr () v497 
                        let v499 : (serde_json_Error -> std_string_String) = method22()
                        (* run_target_args'
                        let v501 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v502 : string = "$0.map_err(|x| $1(x))"
                        let v503 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v498, v499) v502 
                        let _run_target_args'_v501 = v503 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v504 : string = "$0.map_err(|x| $1(x))"
                        let v505 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v498, v499) v504 
                        let _run_target_args'_v501 = v505 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v506 : string = "$0.map_err(|x| $1(x))"
                        let v507 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v498, v499) v506 
                        let _run_target_args'_v501 = v507 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v508 : Result<Vec<uint8>, std_string_String> = match v498 with Ok x -> Ok x | Error x -> Error (v499 x)
                        let _run_target_args'_v501 = v508 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v509 : Result<Vec<uint8>, std_string_String> = match v498 with Ok x -> Ok x | Error x -> Error (v499 x)
                        let _run_target_args'_v501 = v509 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v510 : Result<Vec<uint8>, std_string_String> = match v498 with Ok x -> Ok x | Error x -> Error (v499 x)
                        let _run_target_args'_v501 = v510 
                        #endif
#else
                        let v511 : Result<Vec<uint8>, std_string_String> = match v498 with Ok x -> Ok x | Error x -> Error (v499 x)
                        let _run_target_args'_v501 = v511 
                        #endif
                        let v512 : Result<Vec<uint8>, std_string_String> = _run_target_args'_v501 
                        let v515 : string = "$0?"
                        let v516 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v512 v515 
                        let v517 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                        let v518 : (uint8 []) = Fable.Core.RustInterop.emitRustExpr v516 v517 
                        let v519 : int32 = v518.Length
                        let v520 : string = "state_core.get_data () / data_len: " + string v519 + ""
                        let v521 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v522 : bool = Fable.Core.RustInterop.emitRustExpr v520 v521 
                        let v523 : string = "$0.to_vec()"
                        let v524 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v518 v523 
                        let v525 : string = "v524.as_slice()"
                        let v526 : Ref<Slice<uint8>> = Fable.Core.RustInterop.emitRustExpr () v525 
                        let v527 : string = "true; let mut v526 = v526"
                        let v528 : bool = Fable.Core.RustInterop.emitRustExpr () v527 
                        let v529 : string = "borsh::BorshDeserialize::deserialize(&mut v526)"
                        let v530 : Result<Heap4, borsh_io_Error> = Fable.Core.RustInterop.emitRustExpr () v529 
                        let v531 : (borsh_io_Error -> std_string_String) = method23()
                        (* run_target_args'
                        let v533 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v534 : string = "$0.map_err(|x| $1(x))"
                        let v535 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v530, v531) v534 
                        let _run_target_args'_v533 = v535 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v536 : string = "$0.map_err(|x| $1(x))"
                        let v537 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v530, v531) v536 
                        let _run_target_args'_v533 = v537 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v538 : string = "$0.map_err(|x| $1(x))"
                        let v539 : Result<Heap4, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v530, v531) v538 
                        let _run_target_args'_v533 = v539 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v540 : Result<Heap4, std_string_String> = match v530 with Ok x -> Ok x | Error x -> Error (v531 x)
                        let _run_target_args'_v533 = v540 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v541 : Result<Heap4, std_string_String> = match v530 with Ok x -> Ok x | Error x -> Error (v531 x)
                        let _run_target_args'_v533 = v541 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v542 : Result<Heap4, std_string_String> = match v530 with Ok x -> Ok x | Error x -> Error (v531 x)
                        let _run_target_args'_v533 = v542 
                        #endif
#else
                        let v543 : Result<Heap4, std_string_String> = match v530 with Ok x -> Ok x | Error x -> Error (v531 x)
                        let _run_target_args'_v533 = v543 
                        #endif
                        let v544 : Result<Heap4, std_string_String> = _run_target_args'_v533 
                        let v547 : string = "$0?"
                        let v548 : Heap4 = Fable.Core.RustInterop.emitRustExpr v544 v547 
                        US25_0(v548)
            let v563 : Heap4 option =
                match v555 with
                | US25_1 -> (* None *)
                    let v561 : Heap4 option = None
                    v561
                | US25_0(v556) -> (* Some *)
                    let v558 : Heap4 option = Some v556 
                    v558
            let v564 : Result<Heap4 option, std_string_String> = Ok v563 
            let v565 : string = v49 + v50 
            let x = v564 //
            let v566 : _ = x
            let v567 : unit = ()
            (* run_target_args'
            let v568 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v569 : string = $"true; let _fix_closure_v567 = $0"
            let v570 : bool = Fable.Core.RustInterop.emitRustExpr v566 v569 
            let _run_target_args'_v568 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v571 : string = $"true; let _fix_closure_v567 = $0"
            let v572 : bool = Fable.Core.RustInterop.emitRustExpr v566 v571 
            let _run_target_args'_v568 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v573 : string = $"true; let _fix_closure_v567 = $0"
            let v574 : bool = Fable.Core.RustInterop.emitRustExpr v566 v573 
            let _run_target_args'_v568 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v568 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v568 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v568 = false 
            #endif
#else
            let _run_target_args'_v568 = false 
            #endif
            let v575 : bool = _run_target_args'_v568 
            let v577 : string = $"true; _fix_closure_v567 " + v565 + "); " + v49 + " // rust.fix_closure'"
            let v578 : bool = Fable.Core.RustInterop.emitRustExpr () v577 
            let v579 : string = "__future_init"
            let v580 : _ = Fable.Core.RustInterop.emitRustExpr () v579 
            let v581 : string = "v580"
            let v582 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v581 
            let func1_from_result = v582 //
            let v583 : _ = func1_from_result
            let v584 : string = $"true; $0 /*"
            let v585 : bool = Fable.Core.RustInterop.emitRustExpr v583 v584 
            let v586 : string = $"*/ }}); //"
            let v587 : bool = Fable.Core.RustInterop.emitRustExpr () v586 
            let v588 : string = $"_func1_from_v196"
            let v589 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v588 
            let v590 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v591 : (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>) = closure65(v589)
            let v592 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr struct (v145, v591) v590 
            let v593 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = method81(v592)
            let v594 : string = "futures::future::try_join_all(v593)"
            let v595 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap4 option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v594 
            let v596 : string = "v595.await"
            let v597 : Result<Vec<Heap4 option>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v596 
            let v598 : string = "$0?"
            let v599 : Vec<Heap4 option> = Fable.Core.RustInterop.emitRustExpr v597 v598 
            US24_0(v599)
        | _ ->
            let v601 : string = "database=None"
            (* run_target_args'
            let v606 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v607 : string = "&*$0"
            let v608 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v601 v607 
            let _run_target_args'_v606 = v608 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v609 : string = "&*$0"
            let v610 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v601 v609 
            let _run_target_args'_v606 = v610 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v611 : string = "&*$0"
            let v612 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v601 v611 
            let _run_target_args'_v606 = v612 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v614 : Ref<Str> = v601 |> unbox<Ref<Str>>
            let _run_target_args'_v606 = v614 
            #endif
#if FABLE_COMPILER_PYTHON
            let v618 : Ref<Str> = v601 |> unbox<Ref<Str>>
            let _run_target_args'_v606 = v618 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v622 : Ref<Str> = v601 |> unbox<Ref<Str>>
            let _run_target_args'_v606 = v622 
            #endif
#else
            let v626 : Ref<Str> = v601 |> unbox<Ref<Str>>
            let _run_target_args'_v606 = v626 
            #endif
            let v629 : Ref<Str> = _run_target_args'_v606 
            (* run_target_args'
            let v639 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v640 : string = "String::from($0)"
            let v641 : std_string_String = Fable.Core.RustInterop.emitRustExpr v629 v640 
            let _run_target_args'_v639 = v641 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v642 : string = "String::from($0)"
            let v643 : std_string_String = Fable.Core.RustInterop.emitRustExpr v629 v642 
            let _run_target_args'_v639 = v643 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v644 : string = "String::from($0)"
            let v645 : std_string_String = Fable.Core.RustInterop.emitRustExpr v629 v644 
            let _run_target_args'_v639 = v645 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v647 : std_string_String = v629 |> unbox<std_string_String>
            let _run_target_args'_v639 = v647 
            #endif
#if FABLE_COMPILER_PYTHON
            let v651 : std_string_String = v629 |> unbox<std_string_String>
            let _run_target_args'_v639 = v651 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v655 : std_string_String = v629 |> unbox<std_string_String>
            let _run_target_args'_v639 = v655 
            #endif
#else
            let v659 : std_string_String = v629 |> unbox<std_string_String>
            let _run_target_args'_v639 = v659 
            #endif
            let v662 : std_string_String = _run_target_args'_v639 
            US24_1(v662)
    let v675 : Result<Vec<Heap4 option>, std_string_String> =
        match v669 with
        | US24_1(v672) -> (* Error *)
            let v673 : Result<Vec<Heap4 option>, std_string_String> = Error v672 
            v673
        | US24_0(v670) -> (* Ok *)
            let v671 : Result<Vec<Heap4 option>, std_string_String> = Ok v670 
            v671
    let v677 : string = $"%A{v675}"
    let v680 : string = "state_core.use_requests (4) / state_data_resource new_local_resource / result: " + string v677 + ""
    let v681 : int64 = 200L
    let v682 : string = method8(v681, v680)
    let v683 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v684 : bool = Fable.Core.RustInterop.emitRustExpr v682 v683 
    let v685 : string = v49 + v50 
    let x = v675 //
    let v686 : _ = x
    let v687 : unit = ()
    (* run_target_args'
    let v688 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v689 : string = $"true; let _fix_closure_v687 = $0"
    let v690 : bool = Fable.Core.RustInterop.emitRustExpr v686 v689 
    let _run_target_args'_v688 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v691 : string = $"true; let _fix_closure_v687 = $0"
    let v692 : bool = Fable.Core.RustInterop.emitRustExpr v686 v691 
    let _run_target_args'_v688 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v693 : string = $"true; let _fix_closure_v687 = $0"
    let v694 : bool = Fable.Core.RustInterop.emitRustExpr v686 v693 
    let _run_target_args'_v688 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v688 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v688 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v688 = false 
    #endif
#else
    let _run_target_args'_v688 = false 
    #endif
    let v695 : bool = _run_target_args'_v688 
    let v697 : string = $"true; _fix_closure_v687 " + v685 + "); " + v49 + " // rust.fix_closure'"
    let v698 : bool = Fable.Core.RustInterop.emitRustExpr () v697 
    let v699 : string = "__future_init"
    let v700 : _ = Fable.Core.RustInterop.emitRustExpr () v699 
    let v701 : string = "v700"
    let v702 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<Heap4 option>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v701 
    let v703 : string = $"true; $0 /*"
    let v704 : bool = Fable.Core.RustInterop.emitRustExpr v702 v703 
    let v705 : string = $"*/ }}); //"
    let v706 : bool = Fable.Core.RustInterop.emitRustExpr () v705 
    let v707 : string = $"_func0_from_v128"
    let v708 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<Heap4 option>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v707 
    let v709 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v710 : leptos_prelude_ArcLocalResource<Result<Vec<Heap4 option>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v708 v709 
    let v711 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v712 : (unit -> Result<Vec<Heap4 option>, std_string_String> option) = closure66(v710)
    let v713 : leptos_prelude_ArcMemo<Result<Vec<Heap4 option>, std_string_String> option> = Fable.Core.RustInterop.emitRustExpr v712 v711 
    let v714 : unit = ()
    let v715 : string = $"true; let _func0_from_v714 = Func0::from(move || {{ //"
    let v716 : bool = Fable.Core.RustInterop.emitRustExpr () v715 
    let v717 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v718 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v0 v717 
    let v719 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v720 : Result<Vec<Heap4 option>, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v713 v719 
    let v722 : string = $"%A{v718}"
    let v725 : int64 = 400L
    let v726 : string = method8(v725, v722)
    let v727 : string = "state_core.use_requests (7) / json new_local_resource / requests: " + string v726 + ""
    let v728 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v729 : bool = Fable.Core.RustInterop.emitRustExpr v727 v728 
    let v730 : string = "true; let __future_init = Box::pin(/*"
    let v731 : bool = Fable.Core.RustInterop.emitRustExpr () v730 
    let v732 : string = "*/ async move { /*"
    let v733 : bool = Fable.Core.RustInterop.emitRustExpr () v732 
    let v734 : string = "*/ ()"
    let v735 : bool = Fable.Core.RustInterop.emitRustExpr () v734 
    let v737 : (Result<Vec<Heap4 option>, std_string_String> -> US26) = method82()
    let v738 : US26 option = v720 |> Option.map v737 
    let v751 : US26 = US26_1
    let v752 : US26 = v738 |> Option.defaultValue v751 
    let v797 : US27 =
        match v752 with
        | US26_1 -> (* None *)
            US27_1
        | US26_0(v756) -> (* Some *)
            let v757 : (Vec<Heap4 option> -> US24) = method83()
            let v758 : (std_string_String -> US24) = method84()
            let v759 : US24 = match v756 with Ok x -> v757 x | Error x -> v758 x
            let v793 : US28 =
                match v759 with
                | US24_1(v790) -> (* Error *)
                    US28_1(v790)
                | US24_0(v760) -> (* Ok *)
                    let v761 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v762 : bool = Fable.Core.RustInterop.emitRustExpr v760 v761 
                    let v763 : string = "x"
                    let v764 : Heap4 option = Fable.Core.RustInterop.emitRustExpr () v763 
                    let v766 : (Heap4 -> US25) = method85()
                    let v767 : US25 option = v764 |> Option.map v766 
                    let v780 : US25 = US25_1
                    let v781 : US25 = v767 |> Option.defaultValue v780 
                    let v785 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v786 : bool = Fable.Core.RustInterop.emitRustExpr v781 v785 
                    let v787 : string = "_vec_map"
                    let v788 : Vec<US25> = Fable.Core.RustInterop.emitRustExpr () v787 
                    US28_0(v788)
            US27_0(v793)
    let v799 : string = $"%A{v797}"
    let v802 : int64 = 400L
    let v803 : string = method8(v802, v799)
    let v804 : string = "state_core.use_requests (8) / result_memo / state_data: " + string v803 + ""
    let v805 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v806 : bool = Fable.Core.RustInterop.emitRustExpr v804 v805 
    let v807 : (int32 -> (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>)) = method86(v797)
    let v808 : Vec<struct (string * US23 * string * bool * bool)> = method96(v718)
    let v809 : string = "v808.iter().enumerate().map(|(i, x)| v807(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v810 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v809 
    let v811 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = method97(v810)
    let v812 : string = "futures::future::try_join_all(v811)"
    let v813 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<string option, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v812 
    let v814 : string = "v813.await"
    let v815 : Result<Vec<string option>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v814 
    let v816 : string = "$0?"
    let v817 : Vec<string option> = Fable.Core.RustInterop.emitRustExpr v815 v816 
    let v818 : Result<Vec<string option>, std_string_String> = Ok v817 
    let v819 : string = v49 + v50 
    let x = v818 //
    let v820 : _ = x
    let v821 : unit = ()
    (* run_target_args'
    let v822 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v823 : string = $"true; let _fix_closure_v821 = $0"
    let v824 : bool = Fable.Core.RustInterop.emitRustExpr v820 v823 
    let _run_target_args'_v822 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v825 : string = $"true; let _fix_closure_v821 = $0"
    let v826 : bool = Fable.Core.RustInterop.emitRustExpr v820 v825 
    let _run_target_args'_v822 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v827 : string = $"true; let _fix_closure_v821 = $0"
    let v828 : bool = Fable.Core.RustInterop.emitRustExpr v820 v827 
    let _run_target_args'_v822 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v822 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v822 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v822 = false 
    #endif
#else
    let _run_target_args'_v822 = false 
    #endif
    let v829 : bool = _run_target_args'_v822 
    let v831 : string = $"true; _fix_closure_v821 " + v819 + "); " + v49 + " // rust.fix_closure'"
    let v832 : bool = Fable.Core.RustInterop.emitRustExpr () v831 
    let v833 : string = "__future_init"
    let v834 : _ = Fable.Core.RustInterop.emitRustExpr () v833 
    let v835 : string = "v834"
    let v836 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<string option>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v835 
    let v837 : string = $"true; $0 /*"
    let v838 : bool = Fable.Core.RustInterop.emitRustExpr v836 v837 
    let v839 : string = $"*/ }}); //"
    let v840 : bool = Fable.Core.RustInterop.emitRustExpr () v839 
    let v841 : string = $"_func0_from_v714"
    let v842 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<string option>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v841 
    let v843 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v844 : leptos_prelude_ArcLocalResource<Result<Vec<string option>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v842 v843 
    let v845 : unit = ()
    let v846 : string = $"true; let _func1_from_v845 = Func1::from(move |value| {{ //"
    let v847 : bool = Fable.Core.RustInterop.emitRustExpr () v846 
    let v848 : string = $"value"
    let v849 : Heap4 = Fable.Core.RustInterop.emitRustExpr () v848 
    let v851 : string = $"%A{v849}"
    let v854 : int64 = System.Convert.ToInt64 v851.Length
    let v855 : string = "state_core.use_requests (10) / set_state_data_action / value_len: " + string v854 + ""
    let v856 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v857 : bool = Fable.Core.RustInterop.emitRustExpr v855 v856 
    let v858 : string = "true; let __future_init = Box::pin(/*"
    let v859 : bool = Fable.Core.RustInterop.emitRustExpr () v858 
    let v860 : string = "*/ async move { /*"
    let v861 : bool = Fable.Core.RustInterop.emitRustExpr () v860 
    let v862 : string = "*/ ()"
    let v863 : bool = Fable.Core.RustInterop.emitRustExpr () v862 
    let v864 : string = "Box::pin($0)"
    let v865 : std_pin_Pin<Box<leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>>>> = Fable.Core.RustInterop.emitRustExpr v0 v864 
    let v866 : string = $"leptos::prelude::ArcMemo::get_untracked(&$0)"
    let v867 : Vec<struct (string * US23 * string * bool * bool)> = Fable.Core.RustInterop.emitRustExpr v865 v866 
    let v868 : string = "Box::pin($0)"
    let v869 : std_pin_Pin<Box<leptos_prelude_ArcMemo<PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option>>> = Fable.Core.RustInterop.emitRustExpr v127 v868 
    let v870 : string = $"leptos::prelude::ArcMemo::get_untracked(&$0)"
    let v871 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr v869 v870 
    let v872 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v873 : bool = Fable.Core.RustInterop.emitRustExpr v871 v872 
    let v874 : string = "x"
    let v875 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr () v874 
    let v876 : string = "$0.0"
    let v877 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr v875 v876 
    let v878 : string = "true; $0 })"
    let v879 : bool = Fable.Core.RustInterop.emitRustExpr v877 v878 
    let v880 : string = "_optionm_map_"
    let v881 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr () v880 
    let v883 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v884 : US2 option = v881 |> Option.map v883 
    let v897 : US2 = US2_1
    let v898 : US2 = v884 |> Option.defaultValue v897 
    let v1069 : US34 =
        match v898 with
        | US2_0(v902) -> (* Some *)
            let v903 : unit = ()
            let v904 : string = $"true; let _func1_from_v903 = Func1::from(move |value| {{ //"
            let v905 : bool = Fable.Core.RustInterop.emitRustExpr () v904 
            let v906 : string = $"value"
            let struct (v907 : string, v908 : US23, v909 : string, v910 : bool, v911 : bool) = Fable.Core.RustInterop.emitRustExpr () v906 
            let v912 : string = "true; let __future_init = Box::pin(/*"
            let v913 : bool = Fable.Core.RustInterop.emitRustExpr () v912 
            let v914 : string = "*/ async move { /*"
            let v915 : bool = Fable.Core.RustInterop.emitRustExpr () v914 
            let v916 : string = "*/ ()"
            let v917 : bool = Fable.Core.RustInterop.emitRustExpr () v916 
            let v918 : string = "state_core.use_requests (11) / set_state_data_action / database=Some(_) / url: " + v907 + ""
            let v919 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v920 : bool = Fable.Core.RustInterop.emitRustExpr v918 v919 
            let v921 : string = "url[" + v907 + "](" + $"%A{v909}" + ")"
            let v923 : string = $"%A{v849}"
            let v926 : int64 = System.Convert.ToInt64 v923.Length
            let v927 : string = "state_core.set_data () / data_len: " + string v926 + ""
            let v928 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v929 : bool = Fable.Core.RustInterop.emitRustExpr v927 v928 
            let v930 : string = "true; let __future_init = Box::pin(/*"
            let v931 : bool = Fable.Core.RustInterop.emitRustExpr () v930 
            let v932 : string = "*/ async move { /*"
            let v933 : bool = Fable.Core.RustInterop.emitRustExpr () v932 
            let v934 : string = "*/ ()"
            let v935 : bool = Fable.Core.RustInterop.emitRustExpr () v934 
            let v936 : string = "true; let mut data = Vec::new()"
            let v937 : bool = Fable.Core.RustInterop.emitRustExpr () v936 
            let v938 : string = "true; borsh::BorshSerialize::serialize(&$0, &mut data).unwrap()"
            let v939 : bool = Fable.Core.RustInterop.emitRustExpr v849 v938 
            let v940 : string = "data"
            let v941 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr () v940 
            let v942 : string = "serde_wasm_bindgen::to_value(&v941).unwrap()"
            let v943 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr () v942 
            let v944 : string = method98(v921)
            (* run_target_args'
            let v949 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v950 : string = "&*$0"
            let v951 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v944 v950 
            let _run_target_args'_v949 = v951 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v952 : string = "&*$0"
            let v953 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v944 v952 
            let _run_target_args'_v949 = v953 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v954 : string = "&*$0"
            let v955 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v944 v954 
            let _run_target_args'_v949 = v955 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v957 : Ref<Str> = v944 |> unbox<Ref<Str>>
            let _run_target_args'_v949 = v957 
            #endif
#if FABLE_COMPILER_PYTHON
            let v961 : Ref<Str> = v944 |> unbox<Ref<Str>>
            let _run_target_args'_v949 = v961 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v965 : Ref<Str> = v944 |> unbox<Ref<Str>>
            let _run_target_args'_v949 = v965 
            #endif
#else
            let v969 : Ref<Str> = v944 |> unbox<Ref<Str>>
            let _run_target_args'_v949 = v969 
            #endif
            let v972 : Ref<Str> = _run_target_args'_v949 
            let v978 : string = "$0.transaction(&[\"store\"], rexie::TransactionMode::ReadWrite)?"
            let v979 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v902 v978 
            let v980 : string = "v979.store(\"store\")?"
            let v981 : rexie_Store = Fable.Core.RustInterop.emitRustExpr () v980 
            let v982 : string = "true; v981.put(&v943, Some(&$0.into())).await?"
            let v983 : bool = Fable.Core.RustInterop.emitRustExpr v972 v982 
            let v984 : string = "true; v979.done().await?"
            let v985 : bool = Fable.Core.RustInterop.emitRustExpr () v984 
            let v986 : Result<unit, rexie_Error> = Ok () 
            let v987 : string = v49 + v50 
            let x = v986 //
            let v988 : _ = x
            let v989 : unit = ()
            (* run_target_args'
            let v990 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v991 : string = $"true; let _fix_closure_v989 = $0"
            let v992 : bool = Fable.Core.RustInterop.emitRustExpr v988 v991 
            let _run_target_args'_v990 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v993 : string = $"true; let _fix_closure_v989 = $0"
            let v994 : bool = Fable.Core.RustInterop.emitRustExpr v988 v993 
            let _run_target_args'_v990 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v995 : string = $"true; let _fix_closure_v989 = $0"
            let v996 : bool = Fable.Core.RustInterop.emitRustExpr v988 v995 
            let _run_target_args'_v990 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v990 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v990 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v990 = false 
            #endif
#else
            let _run_target_args'_v990 = false 
            #endif
            let v997 : bool = _run_target_args'_v990 
            let v999 : string = $"true; _fix_closure_v989 " + v987 + "); " + v49 + " // rust.fix_closure'"
            let v1000 : bool = Fable.Core.RustInterop.emitRustExpr () v999 
            let v1001 : string = "__future_init"
            let v1002 : _ = Fable.Core.RustInterop.emitRustExpr () v1001 
            let v1003 : string = "v1002"
            let v1004 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v1003 
            let v1005 : string = "v1004.await"
            let v1006 : Result<unit, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v1005 
            let v1007 : (rexie_Error -> std_string_String) = method99()
            (* run_target_args'
            let v1009 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1010 : string = "$0.map_err(|x| $1(x))"
            let v1011 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1006, v1007) v1010 
            let _run_target_args'_v1009 = v1011 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1012 : string = "$0.map_err(|x| $1(x))"
            let v1013 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1006, v1007) v1012 
            let _run_target_args'_v1009 = v1013 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1014 : string = "$0.map_err(|x| $1(x))"
            let v1015 : Result<unit, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v1006, v1007) v1014 
            let _run_target_args'_v1009 = v1015 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1016 : Result<unit, std_string_String> = match v1006 with Ok x -> Ok x | Error x -> Error (v1007 x)
            let _run_target_args'_v1009 = v1016 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1017 : Result<unit, std_string_String> = match v1006 with Ok x -> Ok x | Error x -> Error (v1007 x)
            let _run_target_args'_v1009 = v1017 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1018 : Result<unit, std_string_String> = match v1006 with Ok x -> Ok x | Error x -> Error (v1007 x)
            let _run_target_args'_v1009 = v1018 
            #endif
#else
            let v1019 : Result<unit, std_string_String> = match v1006 with Ok x -> Ok x | Error x -> Error (v1007 x)
            let _run_target_args'_v1009 = v1019 
            #endif
            let v1020 : Result<unit, std_string_String> = _run_target_args'_v1009 
            let v1023 : string = "true; $0?"
            let v1024 : bool = Fable.Core.RustInterop.emitRustExpr v1020 v1023 
            
            let v1025 : Result<unit, std_string_String> = Ok () 
            let v1026 : string = v49 + v50 
            let x = v1025 //
            let v1027 : _ = x
            let v1028 : unit = ()
            (* run_target_args'
            let v1029 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1030 : string = $"true; let _fix_closure_v1028 = $0"
            let v1031 : bool = Fable.Core.RustInterop.emitRustExpr v1027 v1030 
            let _run_target_args'_v1029 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1032 : string = $"true; let _fix_closure_v1028 = $0"
            let v1033 : bool = Fable.Core.RustInterop.emitRustExpr v1027 v1032 
            let _run_target_args'_v1029 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1034 : string = $"true; let _fix_closure_v1028 = $0"
            let v1035 : bool = Fable.Core.RustInterop.emitRustExpr v1027 v1034 
            let _run_target_args'_v1029 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v1029 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v1029 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v1029 = false 
            #endif
#else
            let _run_target_args'_v1029 = false 
            #endif
            let v1036 : bool = _run_target_args'_v1029 
            let v1038 : string = $"true; _fix_closure_v1028 " + v1026 + "); " + v49 + " // rust.fix_closure'"
            let v1039 : bool = Fable.Core.RustInterop.emitRustExpr () v1038 
            let v1040 : string = "__future_init"
            let v1041 : _ = Fable.Core.RustInterop.emitRustExpr () v1040 
            let v1042 : string = "v1041"
            let v1043 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v1042 
            let func1_from_result = v1043 //
            let v1044 : _ = func1_from_result
            let v1045 : string = $"true; $0 /*"
            let v1046 : bool = Fable.Core.RustInterop.emitRustExpr v1044 v1045 
            let v1047 : string = $"*/ }}); //"
            let v1048 : bool = Fable.Core.RustInterop.emitRustExpr () v1047 
            let v1049 : string = $"_func1_from_v903"
            let v1050 : Func0<struct (string * US23 * string * bool * bool), std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1049 
            let v1051 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v1052 : (struct (string * US23 * string * bool * bool) -> std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>) = closure76(v1050)
            let v1053 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr struct (v867, v1052) v1051 
            let v1054 : Vec<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = method101(v1053)
            let v1055 : string = "futures::future::try_join_all(v1054)"
            let v1056 : futures_future_TryJoinAll<std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1055 
            let v1057 : string = "v1056.await"
            let v1058 : Result<Vec<unit>, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v1057 
            let v1059 : string = "$0?"
            let v1060 : Vec<unit> = Fable.Core.RustInterop.emitRustExpr v1058 v1059 
            US34_0(v1060)
        | _ ->
            let v1062 : string = "state_core.use_requests (12) / set_state_data_action / database,request=None"
            let v1063 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1064 : bool = Fable.Core.RustInterop.emitRustExpr v1062 v1063 
            let v1065 : (unit []) = [||]
            let v1066 : string = "$0.to_vec()"
            let v1067 : Vec<unit> = Fable.Core.RustInterop.emitRustExpr v1065 v1066 
            US34_0(v1067)
    let v1075 : Result<Vec<unit>, std_string_String> =
        match v1069 with
        | US34_1(v1072) -> (* Error *)
            let v1073 : Result<Vec<unit>, std_string_String> = Error v1072 
            v1073
        | US34_0(v1070) -> (* Ok *)
            let v1071 : Result<Vec<unit>, std_string_String> = Ok v1070 
            v1071
    let v1076 : string = v49 + v50 
    let x = v1075 //
    let v1077 : _ = x
    let v1078 : unit = ()
    (* run_target_args'
    let v1079 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v1080 : string = $"true; let _fix_closure_v1078 = $0"
    let v1081 : bool = Fable.Core.RustInterop.emitRustExpr v1077 v1080 
    let _run_target_args'_v1079 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v1082 : string = $"true; let _fix_closure_v1078 = $0"
    let v1083 : bool = Fable.Core.RustInterop.emitRustExpr v1077 v1082 
    let _run_target_args'_v1079 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v1084 : string = $"true; let _fix_closure_v1078 = $0"
    let v1085 : bool = Fable.Core.RustInterop.emitRustExpr v1077 v1084 
    let _run_target_args'_v1079 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v1079 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v1079 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v1079 = false 
    #endif
#else
    let _run_target_args'_v1079 = false 
    #endif
    let v1086 : bool = _run_target_args'_v1079 
    let v1088 : string = $"true; _fix_closure_v1078 " + v1076 + "); " + v49 + " // rust.fix_closure'"
    let v1089 : bool = Fable.Core.RustInterop.emitRustExpr () v1088 
    let v1090 : string = "__future_init"
    let v1091 : _ = Fable.Core.RustInterop.emitRustExpr () v1090 
    let v1092 : string = "v1091"
    let v1093 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v1092 
    let func1_from_result = v1093 //
    let v1094 : _ = func1_from_result
    let v1095 : string = $"true; $0 /*"
    let v1096 : bool = Fable.Core.RustInterop.emitRustExpr v1094 v1095 
    let v1097 : string = $"*/ }}); //"
    let v1098 : bool = Fable.Core.RustInterop.emitRustExpr () v1097 
    let v1099 : string = $"_func1_from_v845"
    let v1100 : Func0<Heap4, std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v1099 
    let v1101 : string = "leptos::prelude::Action::new(move |value: &std::sync::Arc<Heap4>| $0(value.clone()))"
    let v1102 : (Heap4 -> std_pin_Pin<Box<Dyn<std_future_Future<Result<Vec<unit>, std_string_String>>>>>) = closure77(v1100)
    let v1103 : leptos_prelude_Action<Heap4, Result<Vec<unit>, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v1102 v1101 
    let v1104 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1105 : (unit -> (Result<crate_model_near_rpc_RpcResponse option, std_string_String> [])) = closure130(v0, v713, v844, v1103)
    let v1106 : leptos_prelude_ArcMemo<(Result<crate_model_near_rpc_RpcResponse option, std_string_String> [])> = Fable.Core.RustInterop.emitRustExpr v1105 v1104 
    let v1107 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1108 : (unit -> Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>) = closure134(v1, v124, v710, v1106)
    let v1109 : leptos_prelude_ArcMemo<Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>> = Fable.Core.RustInterop.emitRustExpr v1108 v1107 
    v1109
and method167 () : string =
    let v0 : string = "https://rpc.mainnet.near.org"
    v0
and closure137 () (v0 : US14) : US57 =
    US57_0(v0)
and method168 () : (US14 -> US57) =
    closure137()
and closure138 () (v0 : std_string_String) : US57 =
    US57_1(v0)
and method169 () : (std_string_String -> US57) =
    closure138()
and closure139 () (v0 : crate_model_near_rpc_RpcResponse) : US60 =
    US60_0(v0)
and method170 () : (crate_model_near_rpc_RpcResponse -> US60) =
    closure139()
and closure140 () (v0 : std_string_String) : US60 =
    US60_1(v0)
and method171 () : (std_string_String -> US60) =
    closure140()
and method172 (v0 : Func0<Heap6, std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>>) : Func0<Heap6, std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>> =
    v0
and closure141 (v0 : Func0<Heap6, std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>>) (v1 : Heap6) : std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>> =
    let v2 : Func0<Heap6, std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>> = method172(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure144 () (v0 : US59) : US58 =
    US58_0(v0)
and method174 () : (US59 -> US58) =
    closure144()
and closure145 () (v0 : std_string_String) : US58 =
    US58_1(v0)
and method175 () : (std_string_String -> US58) =
    closure145()
and closure143 () (v0 : Result<US59, std_string_String>) : US58 =
    let v1 : (US59 -> US58) = method174()
    let v2 : (std_string_String -> US58) = method175()
    let v3 : US58 = match v0 with Ok x -> v1 x | Error x -> v2 x
    v3
and method173 () : (Result<US59, std_string_String> -> US58) =
    closure143()
and closure146 () (v0 : US58) : US62 =
    US62_0(v0)
and method176 () : (US58 -> US62) =
    closure146()
and closure142 (v0 : leptos_prelude_ArcAction<Heap6, Result<US59, std_string_String>>) () : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> =
    let v1 : string = "leptos::prelude::ArcAction::value(&$0)"
    let v2 : leptos_prelude_ArcRwSignal<Result<US59, std_string_String> option> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v4 : Result<US59, std_string_String> option = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v6 : (Result<US59, std_string_String> -> US58) = method173()
    let v7 : US58 option = v4 |> Option.map v6 
    let v22 : (US58 -> US62) = method176()
    let v23 : US62 option = v7 |> Option.map v22 
    let v36 : US62 = US62_1
    let v37 : US62 = v23 |> Option.defaultValue v36 
    let v58 : US58 =
        match v37 with
        | US62_0(v41) -> (* Some *)
            match v41 with
            | US58_1(v42) -> (* Error *)
                US58_1(v42)
            | US58_0(v44) -> (* Ok *)
                match v44 with
                | US59_0(v45, v46, v47, v48) -> (* Some *)
                    let v49 : US59 = US59_0(v45, v46, v47, v48)
                    US58_0(v49)
                | _ ->
                    let v51 : US59 = US59_1
                    US58_0(v51)
        | _ ->
            let v56 : US59 = US59_1
            US58_0(v56)
    let v75 : US63 =
        match v58 with
        | US58_1(v72) -> (* Error *)
            US63_1(v72)
        | US58_0(v59) -> (* Ok *)
            let v70 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option =
                match v59 with
                | US59_1 -> (* None *)
                    let v68 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option = None
                    v68
                | US59_0(v60, v61, v62, v63) -> (* Some *)
                    let v65 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option = Some struct (v60, v61, v62, v63) 
                    v65
            US63_0(v70)
    let v81 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> =
        match v75 with
        | US63_1(v78) -> (* Error *)
            let v79 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = Error v78 
            v79
        | US63_0(v76) -> (* Ok *)
            let v77 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = Ok v76 
            v77
    let v83 : string = $"%A{v81}"
    let v86 : string = "dice_view.render (x) / roll new_arc_memo / result: " + string v83 + ""
    let v87 : int64 = 200L
    let v88 : string = method8(v87, v86)
    let v89 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v90 : bool = Fable.Core.RustInterop.emitRustExpr v88 v89 
    v81
and closure148 () (v0 : struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option) : US63 =
    US63_0(v0)
and method177 () : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option -> US63) =
    closure148()
and closure149 () (v0 : std_string_String) : US63 =
    US63_1(v0)
and method178 () : (std_string_String -> US63) =
    closure149()
and closure150 () struct (v0 : std_string_String, v1 : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option, v2 : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option, v3 : std_string_String option) : US59 =
    US59_0(v0, v1, v2, v3)
and method179 () : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) -> US59) =
    closure150()
and closure151 () struct (v0 : std_string_String, v1 : std_string_String, v2 : struct (std_string_String option * std_string_String option) option, v3 : int32, v4 : std_string_String, v5 : std_string_String) : US64 =
    US64_0(v0, v1, v2, v3, v4, v5)
and method180 () : (struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) -> US64) =
    closure151()
and closure147 (v0 : leptos_prelude_ArcMemo<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>) () : string option =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option -> US63) = method177()
    let v4 : (std_string_String -> US63) = method178()
    let v5 : US63 = match v2 with Ok x -> v3 x | Error x -> v4 x
    let v34 : US58 =
        match v5 with
        | US63_1(v31) -> (* Error *)
            US58_1(v31)
        | US63_0(v6) -> (* Ok *)
            let v8 : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) -> US59) = method179()
            let v9 : US59 option = v6 |> Option.map v8 
            let v25 : US59 = US59_1
            let v26 : US59 = v9 |> Option.defaultValue v25 
            US58_0(v26)
    let v78 : US31 =
        match v34 with
        | US58_0(v35) -> (* Ok *)
            match v35 with
            | US59_0(v36, v37, v38, v39) -> (* Some *)
                let v41 : (struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) -> US64) = method180()
                let v42 : US64 option = v38 |> Option.map v41 
                let v60 : US64 = US64_1
                let v61 : US64 = v42 |> Option.defaultValue v60 
                match v61 with
                | US64_0(v65, v66, v67, v68, v69, v70) -> (* Some *)
                    let v71 : string = string v65 + ": " + string v69 + " - " + string v70 + " (" + string v66 + ")"
                    US31_0(v71)
                | _ ->
                    US31_1
            | _ ->
                US31_1
        | _ ->
            US31_1
    let v86 : string option =
        match v78 with
        | US31_1 -> (* None *)
            let v84 : string option = None
            v84
        | US31_0(v79) -> (* Some *)
            let v81 : string option = Some v79 
            v81
    let v88 : string = $"%A{v86}"
    let v91 : string = "dice_view.render (x) / error_message new_arc_memo / result: " + string v88 + ""
    let v92 : int64 = 200L
    let v93 : string = method8(v92, v91)
    let v94 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v95 : bool = Fable.Core.RustInterop.emitRustExpr v93 v94 
    v86
and closure152 (v0 : Heap2) () : US31 =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<Heap0> = v5.l3
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : Heap0 = Fable.Core.RustInterop.emitRustExpr v6 v7 
    let v9 : std_string_String option = v8.l1
    let v11 : (std_string_String -> US14) = method39()
    let v12 : US14 option = v9 |> Option.map v11 
    let v25 : US14 = US14_1
    let v26 : US14 = v12 |> Option.defaultValue v25 
    match v26 with
    | US14_1 -> (* None *)
        US31_1
    | US14_0(v30) -> (* Some *)
        let v31 : string = "fable_library_rust::String_::fromString($0)"
        let v32 : string = Fable.Core.RustInterop.emitRustExpr v30 v31 
        US31_0(v32)
and method181 (v0 : Func0<(bool * std_string_String), struct (bool * std_string_String)>) : Func0<(bool * std_string_String), struct (bool * std_string_String)> =
    v0
and closure154 (v0 : Func0<(bool * std_string_String), struct (bool * std_string_String)>) (v1 : (bool * std_string_String)) : struct (bool * std_string_String) =
    let v2 : Func0<(bool * std_string_String), struct (bool * std_string_String)> = method181(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : bool, v6 : std_string_String) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6)
and method182 (v0 : Func0<struct (bool * std_string_String), std_string_String>) : Func0<struct (bool * std_string_String), std_string_String> =
    v0
and closure155 (v0 : Func0<struct (bool * std_string_String), std_string_String>) struct (v1 : bool, v2 : std_string_String) : std_string_String =
    let v3 : Func0<struct (bool * std_string_String), std_string_String> = method182(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let v6 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4 v5 
    v6
and closure157 (v0 : int32) (v1 : std_string_String) : (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)) =
    let v2 : string = $"leptos::prelude::signal($0)"
    let struct (v3 : leptos_prelude_ReadSignal<std_string_String>, v4 : leptos_prelude_WriteSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v6 : (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)) = v0, struct (v3, v4) 
    v6
and closure156 () (v0 : int32) : (std_string_String -> (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))) =
    closure157(v0)
and method183 () : (int32 -> (std_string_String -> (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)))) =
    closure156()
and method184 (v0 : Vec<std_string_String>) : Vec<std_string_String> =
    v0
and closure153 (v0 : Heap2) () : Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))> =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<Heap0> = v5.l3
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : Heap0 = Fable.Core.RustInterop.emitRustExpr v6 v7 
    let v9 : Vec<(bool * std_string_String)> = v8.l0
    let v10 : unit = ()
    let v11 : string = $"true; let _func1_from_v10 = Func1::from(move |value| {{ //"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr () v11 
    let v13 : string = $"value"
    let v14 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr () v13 
    let (a, b) = v14 
    let v17 : bool = a
    let v18 : std_string_String = b
    let func1_from_result = struct (v17, v18) //
    let v23 : _ = func1_from_result
    let v24 : string = $"true; $0 /*"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr v23 v24 
    let v26 : string = $"*/ }}); //"
    let v27 : bool = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : string = $"_func1_from_v10"
    let v29 : Func0<(bool * std_string_String), struct (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v28 
    let v30 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v31 : ((bool * std_string_String) -> struct (bool * std_string_String)) = closure154(v29)
    let v32 : Vec<struct (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v9, v31) v30 
    let v33 : (struct (bool * std_string_String) -> bool) = method55()
    let v34 : Vec<struct (bool * std_string_String)> = method56(v32)
    let v35 : string = "v34.into_iter().filter(|x| v33(x.clone().clone())).collect::<Vec<_>>()"
    let v36 : Vec<struct (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v35 
    let v37 : unit = ()
    let v38 : string = $"true; let _func1_from_v37 = Func1::from(move |value| {{ //"
    let v39 : bool = Fable.Core.RustInterop.emitRustExpr () v38 
    let v40 : string = $"value"
    let struct (v41 : bool, v42 : std_string_String) = Fable.Core.RustInterop.emitRustExpr () v40 
    let func1_from_result = v42 //
    let v43 : _ = func1_from_result
    let v44 : string = $"true; $0 /*"
    let v45 : bool = Fable.Core.RustInterop.emitRustExpr v43 v44 
    let v46 : string = $"*/ }}); //"
    let v47 : bool = Fable.Core.RustInterop.emitRustExpr () v46 
    let v48 : string = $"_func1_from_v37"
    let v49 : Func0<struct (bool * std_string_String), std_string_String> = Fable.Core.RustInterop.emitRustExpr () v48 
    let v50 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v51 : (struct (bool * std_string_String) -> std_string_String) = closure155(v49)
    let v52 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v36, v51) v50 
    let v53 : (int32 -> (std_string_String -> (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)))) = method183()
    let v54 : Vec<std_string_String> = method184(v52)
    let v55 : string = "v54.iter().enumerate().map(|(i, x)| v53(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v56 : Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))> = Fable.Core.RustInterop.emitRustExpr () v55 
    v56
and method185 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)), struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)>) : Func0<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)), struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)> =
    v0
and closure159 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)), struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)>) (v1 : (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))) : struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>) =
    let v2 : Func0<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)), struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)> = method185(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : int32, v6 : leptos_prelude_ReadSignal<std_string_String>, v7 : leptos_prelude_WriteSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7)
and method186 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>), struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>) : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>), struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> =
    v0
and closure160 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>), struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>) struct (v1 : int32, v2 : leptos_prelude_ReadSignal<std_string_String>, v3 : leptos_prelude_WriteSignal<std_string_String>) : struct (int32 * leptos_prelude_ReadSignal<std_string_String>) =
    let v4 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>), struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> = method186(v0)
    let func1_move_x = struct (v1, v2, v3) //
    let v5 : _ = func1_move_x
    let v6 : string = "(move |x| v4(x))($0)"
    let struct (v7 : int32, v8 : leptos_prelude_ReadSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr v5 v6 
    struct (v7, v8)
and closure158 (v0 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))>>) () : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : unit = ()
    let v4 : string = $"true; let _func1_from_v3 = Func1::from(move |value| {{ //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = $"value"
    let v7 : (int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)) = Fable.Core.RustInterop.emitRustExpr () v6 
    let (a, b) = v7 
    let v11 : int32 = a
    let struct (v12 : leptos_prelude_ReadSignal<std_string_String>, v13 : leptos_prelude_WriteSignal<std_string_String>) = b
    let func1_from_result = struct (v11, v12, v13) //
    let v20 : _ = func1_from_result
    let v21 : string = $"true; $0 /*"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : string = $"*/ }}); //"
    let v24 : bool = Fable.Core.RustInterop.emitRustExpr () v23 
    let v25 : string = $"_func1_from_v3"
    let v26 : Func0<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)), struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr () v25 
    let v27 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v28 : ((int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)) -> struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)) = closure159(v26)
    let v29 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr struct (v2, v28) v27 
    let v30 : unit = ()
    let v31 : string = $"true; let _func1_from_v30 = Func1::from(move |value| {{ //"
    let v32 : bool = Fable.Core.RustInterop.emitRustExpr () v31 
    let v33 : string = $"value"
    let struct (v34 : int32, v35 : leptos_prelude_ReadSignal<std_string_String>, v36 : leptos_prelude_WriteSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr () v33 
    let func1_from_result = struct (v34, v35) //
    let v37 : _ = func1_from_result
    let v38 : string = $"true; $0 /*"
    let v39 : bool = Fable.Core.RustInterop.emitRustExpr v37 v38 
    let v40 : string = $"*/ }}); //"
    let v41 : bool = Fable.Core.RustInterop.emitRustExpr () v40 
    let v42 : string = $"_func1_from_v30"
    let v43 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>), struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr () v42 
    let v44 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v45 : (struct (int32 * leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>) -> struct (int32 * leptos_prelude_ReadSignal<std_string_String>)) = closure160(v43)
    let v46 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr struct (v29, v45) v44 
    v46
and closure161 () () : string =
    let v0 : string = ""
    v0
and closure162 () () : bool =
    true
and closure163 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure164 () () : Ref<Lifetime<StaticLifetime, Str>> =
    let v0 : string = ""
    let v1 : string = "r#\"" + v0 + "\"#"
    let v2 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v1 
    v2
and closure165 () () : string =
    let v0 : string = "Roll"
    v0
and method187 () : (unit -> string) =
    closure165()
and closure166 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and closure168 () () : string =
    let v0 : string = "[align-self:flex-start]"
    v0
and closure169 () () : bool =
    false
and closure170 () () : string =
    let v0 : string = "py-[4px]"
    v0
and closure171 (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option, v1 : leptos_prelude_ArcMemo<US31> option, v2 : Heap2) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v3 : string = ""
    let v4 : string = "r#\"" + v3 + "\"#"
    let v5 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v4 
    v5
and closure173 () (v0 : leptos_prelude_ArcMemo<US31>) : US65 =
    US65_0(v0)
and method189 () : (leptos_prelude_ArcMemo<US31> -> US65) =
    closure173()
and closure172 (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option, v1 : leptos_prelude_ArcMemo<US31> option, v2 : Heap2) () : string =
    let v4 : (leptos_prelude_ArcMemo<US31> -> US65) = method189()
    let v5 : US65 option = v1 |> Option.map v4 
    let v18 : US65 = US65_1
    let v19 : US65 = v5 |> Option.defaultValue v18 
    let v29 : US42 =
        match v19 with
        | US65_1 -> (* None *)
            US42_1
        | US65_0(v23) -> (* Some *)
            let v24 : string = $"leptos::prelude::ArcMemo::get(&$0)"
            let v25 : US31 = Fable.Core.RustInterop.emitRustExpr v23 v24 
            US42_0(v25)
    let v36 : US31 =
        match v29 with
        | US42_0(v30) -> (* Some *)
            match v30 with
            | US31_0(v31) -> (* Some *)
                US31_0(v31)
            | _ ->
                US31_1
        | _ ->
            US31_1
    match v36 with
    | US31_1 -> (* None *)
        let v38 : string = "Select..."
        v38
    | US31_0(v37) -> (* Some *)
        v37
and method188 (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option, v1 : leptos_prelude_ArcMemo<US31> option, v2 : Heap2) : (unit -> string) =
    closure172(v0, v1, v2)
and closure175 () (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>>) : US66 =
    US66_0(v0)
and method190 () : (leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> -> US66) =
    closure175()
and method192 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32>) : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32> =
    v0
and closure176 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32>) struct (v1 : int32, v2 : leptos_prelude_ReadSignal<std_string_String>) : int32 =
    let v3 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32> = method192(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let v6 : int32 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    v6
and method191 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32>) : (struct (int32 * leptos_prelude_ReadSignal<std_string_String>) -> int32) =
    closure176(v0)
and method193 (v0 : std_string_String) : std_string_String =
    v0
and closure177 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and method194 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), leptos_prelude_AnyView_>) : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), leptos_prelude_AnyView_> =
    v0
and closure178 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), leptos_prelude_AnyView_>) struct (v1 : int32, v2 : leptos_prelude_ReadSignal<std_string_String>) : leptos_prelude_AnyView_ =
    let v3 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), leptos_prelude_AnyView_> = method194(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let v6 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4 v5 
    v6
and closure174 (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option, v1 : leptos_prelude_ArcMemo<US31> option, v2 : Heap2) () : leptos_dom_Fragment =
    let v3 : string = "class=\"flex flex-1 flex-col p-[10px] gap-[7px] [border-left-width:1px] [border-bottom-width:1px] border-gray-200 bg-gray-100\""
    let v4 : string = ""
    let v5 : string = " " + v3 + v4 + ""
    let v7 : (leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> -> US66) = method190()
    let v8 : US66 option = v0 |> Option.map v7 
    let v21 : US66 = US66_1
    let v22 : US66 = v8 |> Option.defaultValue v21 
    let v32 : US67 =
        match v22 with
        | US66_1 -> (* None *)
            US67_1
        | US66_0(v26) -> (* Some *)
            let v27 : string = $"leptos::prelude::ArcMemo::get(&$0)"
            let v28 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr v26 v27 
            US67_0(v28)
    let v33 : (struct (int32 * leptos_prelude_ReadSignal<std_string_String>) []) = [||]
    let v34 : string = "$0.to_vec()"
    let v35 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> = Fable.Core.RustInterop.emitRustExpr v33 v34 
    let v38 : Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)> =
        match v32 with
        | US67_1 -> (* None *)
            v35
        | US67_0(v36) -> (* Some *)
            v36
    let v39 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v40 : (struct (int32 * leptos_prelude_ReadSignal<std_string_String>) []) = Fable.Core.RustInterop.emitRustExpr v38 v39 
    let v41 : uint64 = System.Convert.ToUInt64 v40.Length
    let v42 : bool = v41 = 0UL
    let v821 : leptos_dom_Fragment =
        if v42 then
            let v43 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
            let v44 : string = " " + v43 + v4 + ""
            let v45 : string = "class=\"[height:17px]\""
            let v46 : string = " " + v45 + v4 + ""
            let v47 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v48 : string = "fill=\"none\""
            let v49 : string = "height=\"100%\""
            let v50 : string = "viewBox=\"0 0 24 24\""
            let v51 : string = "stroke-width=\"1.5\""
            let v52 : string = "stroke=\"currentColor\""
            let v53 : string = "class=\"text-red-700\""
            let v54 : string = " " + v47 + v4 + ""
            let v55 : string = " " + v48 + v54 + ""
            let v56 : string = " " + v49 + v55 + ""
            let v57 : string = " " + v50 + v56 + ""
            let v58 : string = " " + v51 + v57 + ""
            let v59 : string = " " + v52 + v58 + ""
            let v60 : string = " " + v53 + v59 + ""
            let v61 : string = "stroke-linecap=\"round\""
            let v62 : string = "stroke-linejoin=\"round\""
            let v63 : string = "d=\"M6 18L18 6M6 6l12 12\""
            let v64 : string = " " + v61 + v4 + ""
            let v65 : string = " " + v62 + v64 + ""
            let v66 : string = " " + v63 + v65 + ""
            let v67 : string = "vec![" + v4 + "]"
            let v68 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v67 
            let v69 : string = "leptos::prelude::Fragment::new($0)"
            let v70 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v68 v69 
            let v71 : string = "leptos::prelude::AnyView::from($0)"
            let v72 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v70 v71 
            let v73 : string = "path"
            let v74 : string = "<" + v73 + " " + v66 + ">move || { v72 }</" + v73 + ">"
            let v75 : string = "leptos::prelude::view! { " + v74 + " }"
            let v76 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v75 
            let v77 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v76 |> unbox
            let v78 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v79 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v78 
            let v80 : string = "v79"
            let v81 : string = v80 + v4 
            let v82 : string = v81 + v4 
            let v83 : string = "vec![" + v82 + "]"
            let v84 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v83 
            let v85 : string = "leptos::prelude::Fragment::new($0)"
            let v86 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v84 v85 
            let v87 : string = "leptos::prelude::AnyView::from($0)"
            let v88 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v86 v87 
            let v89 : string = "svg"
            let v90 : string = "<" + v89 + " " + v60 + ">move || { v88 }</" + v89 + ">"
            let v91 : string = "leptos::prelude::view! { " + v90 + " }"
            let v92 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v91 
            let v93 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v92 |> unbox
            let v94 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v95 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v93 v94 
            let v96 : string = "v95"
            let v97 : string = v96 + v4 
            let v98 : string = v97 + v4 
            let v99 : string = "vec![" + v98 + "]"
            let v100 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v99 
            let v101 : string = "leptos::prelude::Fragment::new($0)"
            let v102 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v100 v101 
            let v103 : string = "leptos::prelude::AnyView::from($0)"
            let v104 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v102 v103 
            let v105 : string = "span"
            let v106 : string = "<" + v105 + " " + v46 + ">move || { v104 }</" + v105 + ">"
            let v107 : string = "leptos::prelude::view! { " + v106 + " }"
            let v108 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v107 
            let v109 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v108 |> unbox
            let v110 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v111 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v109 v110 
            let v112 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
            let v113 : string = " " + v112 + v4 + ""
            let v114 : string = "No data"
            (* run_target_args'
            let v119 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v120 : string = "&*$0"
            let v121 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v114 v120 
            let _run_target_args'_v119 = v121 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v122 : string = "&*$0"
            let v123 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v114 v122 
            let _run_target_args'_v119 = v123 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v124 : string = "&*$0"
            let v125 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v114 v124 
            let _run_target_args'_v119 = v125 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v127 : Ref<Str> = v114 |> unbox<Ref<Str>>
            let _run_target_args'_v119 = v127 
            #endif
#if FABLE_COMPILER_PYTHON
            let v131 : Ref<Str> = v114 |> unbox<Ref<Str>>
            let _run_target_args'_v119 = v131 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v135 : Ref<Str> = v114 |> unbox<Ref<Str>>
            let _run_target_args'_v119 = v135 
            #endif
#else
            let v139 : Ref<Str> = v114 |> unbox<Ref<Str>>
            let _run_target_args'_v119 = v139 
            #endif
            let v142 : Ref<Str> = _run_target_args'_v119 
            (* run_target_args'
            let v152 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v153 : string = "String::from($0)"
            let v154 : std_string_String = Fable.Core.RustInterop.emitRustExpr v142 v153 
            let _run_target_args'_v152 = v154 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v155 : string = "String::from($0)"
            let v156 : std_string_String = Fable.Core.RustInterop.emitRustExpr v142 v155 
            let _run_target_args'_v152 = v156 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v157 : string = "String::from($0)"
            let v158 : std_string_String = Fable.Core.RustInterop.emitRustExpr v142 v157 
            let _run_target_args'_v152 = v158 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v160 : std_string_String = v142 |> unbox<std_string_String>
            let _run_target_args'_v152 = v160 
            #endif
#if FABLE_COMPILER_PYTHON
            let v164 : std_string_String = v142 |> unbox<std_string_String>
            let _run_target_args'_v152 = v164 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v168 : std_string_String = v142 |> unbox<std_string_String>
            let _run_target_args'_v152 = v168 
            #endif
#else
            let v172 : std_string_String = v142 |> unbox<std_string_String>
            let _run_target_args'_v152 = v172 
            #endif
            let v175 : std_string_String = _run_target_args'_v152 
            let v181 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v182 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v175 v181 
            let v183 : string = "v182"
            let v184 : string = v183 + v4 
            let v185 : string = v184 + v4 
            let v186 : string = "vec![" + v185 + "]"
            let v187 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v186 
            let v188 : string = "leptos::prelude::Fragment::new($0)"
            let v189 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v187 v188 
            let v190 : string = "leptos::prelude::AnyView::from($0)"
            let v191 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v189 v190 
            let v192 : string = "pre"
            let v193 : string = "<" + v192 + " " + v113 + ">move || { v191 }</" + v192 + ">"
            let v194 : string = "leptos::prelude::view! { " + v193 + " }"
            let v195 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v194 
            let v196 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v195 |> unbox
            let v197 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v198 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v196 v197 
            let v199 : string = "v198"
            let v200 : string = v199 + v4 
            let v201 : string = v200 + v4 
            let v202 : string = "v111"
            let v203 : string = ", "
            let v204 : string = v202 + v203 
            let v205 : string = v204 + v201 
            let v206 : string = "vec![" + v205 + "]"
            let v207 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v206 
            let v208 : string = "leptos::prelude::Fragment::new($0)"
            let v209 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v207 v208 
            let v210 : string = "leptos::prelude::AnyView::from($0)"
            let v211 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v209 v210 
            let v212 : string = "div"
            let v213 : string = "<" + v212 + " " + v44 + ">move || { v211 }</" + v212 + ">"
            let v214 : string = "leptos::prelude::view! { " + v213 + " }"
            let v215 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v214 
            let v216 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v215 |> unbox
            let v217 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v218 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v216 v217 
            let v219 : string = "v218"
            let v220 : string = v219 + v4 
            let v221 : string = v220 + v4 
            let v222 : string = "vec![" + v221 + "]"
            let v223 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v222 
            let v224 : string = "leptos::prelude::Fragment::new($0)"
            let v225 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v223 v224 
            v225
        else
            let v227 : (leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> -> US66) = method190()
            let v228 : US66 option = v0 |> Option.map v227 
            let v241 : US66 = US66_1
            let v242 : US66 = v228 |> Option.defaultValue v241 
            match v242 with
            | US66_1 -> (* None *)
                let v815 : string = "vec![" + v4 + "]"
                let v816 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v815 
                let v817 : string = "leptos::prelude::Fragment::new($0)"
                let v818 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v816 v817 
                v818
            | US66_0(v246) -> (* Some *)
                let v247 : string = "$0"
                let v248 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> = Fable.Core.RustInterop.emitRustExpr v246 v247 
                let v249 : unit = ()
                let v250 : string = $"true; let _func1_from_v249 = Func1::from(move |value| {{ //"
                let v251 : bool = Fable.Core.RustInterop.emitRustExpr () v250 
                let v252 : string = $"value"
                let struct (v253 : int32, v254 : leptos_prelude_ReadSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr () v252 
                let func1_from_result = v253 //
                let v255 : _ = func1_from_result
                let v256 : string = $"true; $0 /*"
                let v257 : bool = Fable.Core.RustInterop.emitRustExpr v255 v256 
                let v258 : string = $"*/ }}); //"
                let v259 : bool = Fable.Core.RustInterop.emitRustExpr () v258 
                let v260 : string = $"_func1_from_v249"
                let v261 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), int32> = Fable.Core.RustInterop.emitRustExpr () v260 
                let v262 : (struct (int32 * leptos_prelude_ReadSignal<std_string_String>) -> int32) = method191(v261)
                let v263 : unit = ()
                let v264 : string = $"true; let _func1_from_v263 = Func1::from(move |value| {{ //"
                let v265 : bool = Fable.Core.RustInterop.emitRustExpr () v264 
                let v266 : string = $"value"
                let struct (v267 : int32, v268 : leptos_prelude_ReadSignal<std_string_String>) = Fable.Core.RustInterop.emitRustExpr () v266 
                let v269 : string = $"leptos::prelude::ReadSignal::get(&$0)"
                let v270 : std_string_String = Fable.Core.RustInterop.emitRustExpr v268 v269 
                let v271 : std_string_String = method193(v270)
                let v272 : unit = ()
                let v273 : string = $"true; let _func0_from_v272 = Func0::from(move || {{ //"
                let v274 : bool = Fable.Core.RustInterop.emitRustExpr () v273 
                let v275 : string = "fable_library_rust::String_::fromString($0)"
                let v276 : string = Fable.Core.RustInterop.emitRustExpr v270 v275 
                let v277 : leptos_prelude_ArcRwSignal<Heap1> = v2.l0
                let v278 : string = "Box::pin($0)"
                let v279 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v277 v278 
                let v280 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                let v281 : Heap1 = Fable.Core.RustInterop.emitRustExpr v279 v280 
                let v282 : leptos_prelude_ArcRwSignal<Heap0> = v281.l3
                let v283 : string = "Box::pin($0)"
                let v284 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v282 v283 
                let v285 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                let v286 : Heap0 = Fable.Core.RustInterop.emitRustExpr v284 v285 
                let v287 : Vec<(bool * std_string_String)> = v286.l0
                let v288 : std_string_String option = v286.l1
                let v289 : int32 = v286.l2
                let v290 : int32 = v286.l3
                let v291 : US1 = v286.l4
                let v292 : leptos_prelude_ArcRwSignal<Heap1> = v2.l0
                let v293 : string = "Box::pin($0)"
                let v294 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v292 v293 
                let v295 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                let v296 : Heap1 = Fable.Core.RustInterop.emitRustExpr v294 v295 
                let v297 : leptos_prelude_ArcRwSignal<Heap0> = v296.l3
                (* run_target_args'
                let v302 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v303 : string = "&*$0"
                let v304 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v276 v303 
                let _run_target_args'_v302 = v304 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v305 : string = "&*$0"
                let v306 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v276 v305 
                let _run_target_args'_v302 = v306 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v307 : string = "&*$0"
                let v308 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v276 v307 
                let _run_target_args'_v302 = v308 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v310 : Ref<Str> = v276 |> unbox<Ref<Str>>
                let _run_target_args'_v302 = v310 
                #endif
#if FABLE_COMPILER_PYTHON
                let v314 : Ref<Str> = v276 |> unbox<Ref<Str>>
                let _run_target_args'_v302 = v314 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v318 : Ref<Str> = v276 |> unbox<Ref<Str>>
                let _run_target_args'_v302 = v318 
                #endif
#else
                let v322 : Ref<Str> = v276 |> unbox<Ref<Str>>
                let _run_target_args'_v302 = v322 
                #endif
                let v325 : Ref<Str> = _run_target_args'_v302 
                (* run_target_args'
                let v335 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v336 : string = "String::from($0)"
                let v337 : std_string_String = Fable.Core.RustInterop.emitRustExpr v325 v336 
                let _run_target_args'_v335 = v337 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v338 : string = "String::from($0)"
                let v339 : std_string_String = Fable.Core.RustInterop.emitRustExpr v325 v338 
                let _run_target_args'_v335 = v339 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v340 : string = "String::from($0)"
                let v341 : std_string_String = Fable.Core.RustInterop.emitRustExpr v325 v340 
                let _run_target_args'_v335 = v341 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v343 : std_string_String = v325 |> unbox<std_string_String>
                let _run_target_args'_v335 = v343 
                #endif
#if FABLE_COMPILER_PYTHON
                let v347 : std_string_String = v325 |> unbox<std_string_String>
                let _run_target_args'_v335 = v347 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v351 : std_string_String = v325 |> unbox<std_string_String>
                let _run_target_args'_v335 = v351 
                #endif
#else
                let v355 : std_string_String = v325 |> unbox<std_string_String>
                let _run_target_args'_v335 = v355 
                #endif
                let v358 : std_string_String = _run_target_args'_v335 
                let v365 : std_string_String option = Some v358 
                let v368 : Heap0 = {l0 = v287; l1 = v365; l2 = v289; l3 = v290; l4 = v291} : Heap0
                let v369 : string = $"true; leptos::prelude::ArcRwSignal::set(&$0, $1); //"
                let v370 : bool = Fable.Core.RustInterop.emitRustExpr struct (v297, v368) v369 
                // rust.func0_from / is_unit
                let v371 : string = $"true; /*"
                let v372 : bool = Fable.Core.RustInterop.emitRustExpr () v371 
                let v373 : string = $"*/ }}); //"
                let v374 : bool = Fable.Core.RustInterop.emitRustExpr () v373 
                let v375 : string = $"_func0_from_v272"
                let v376 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v375 
                let v377 : string = "flex"
                let v378 : string = "flex-1"
                let v379 : string = "gap-[10px]"
                let v380 : string = "[align-items:center]"
                let v381 : string = "[justify-content:center]"
                let v382 : string = "inline-block"
                let v383 : string = "rounded"
                let v384 : string = "border"
                let v385 : string = "border-gray-400"
                let v386 : string = "hover:bg-gray-100"
                let v387 : string = "px-[22px]"
                let v388 : string = "py-1"
                let v389 : string = "text-sm"
                let v390 : string = "text-gray-900"
                let v391 : string = "bg-gray-200"
                let v392 : string = "hover:text-gray-600"
                let v393 : string = "focus:outline-none"
                let v394 : string = "focus:ring"
                let v395 : string = "active:text-gray-500"
                let v396 : string list = []
                let v398 : string list = v395 :: v396 
                let v402 : string list = v394 :: v398 
                let v406 : string list = v393 :: v402 
                let v410 : string list = v392 :: v406 
                let v414 : string list = v391 :: v410 
                let v418 : string list = v390 :: v414 
                let v422 : string list = v389 :: v418 
                let v426 : string list = v388 :: v422 
                let v430 : string list = v387 :: v426 
                let v434 : string list = v386 :: v430 
                let v438 : string list = v385 :: v434 
                let v442 : string list = v384 :: v438 
                let v446 : string list = v383 :: v442 
                let v450 : string list = v382 :: v446 
                let v454 : string list = v381 :: v450 
                let v458 : string list = v380 :: v454 
                let v462 : string list = v379 :: v458 
                let v466 : string list = v378 :: v462 
                let v470 : string list = v377 :: v466 
                let v476 : unit = ()
                let _let'_v476 =
                    seq {
                        yield! v470 
                        (* indent
                        ()
                    indent *)
                    }
                    (* indent
                    ()
                indent *)
                let v479 : string seq = _let'_v476 
                let v486 : (string -> (string seq -> string)) = String.concat
                let v487 : string = " "
                let v488 : (string seq -> string) = v486 v487
                let v489 : string = v488 v479
                (* run_target_args'
                let v496 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v497 : string = "&*$0"
                let v498 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v489 v497 
                let _run_target_args'_v496 = v498 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v499 : string = "&*$0"
                let v500 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v489 v499 
                let _run_target_args'_v496 = v500 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v501 : string = "&*$0"
                let v502 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v489 v501 
                let _run_target_args'_v496 = v502 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v504 : Ref<Str> = v489 |> unbox<Ref<Str>>
                let _run_target_args'_v496 = v504 
                #endif
#if FABLE_COMPILER_PYTHON
                let v508 : Ref<Str> = v489 |> unbox<Ref<Str>>
                let _run_target_args'_v496 = v508 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v512 : Ref<Str> = v489 |> unbox<Ref<Str>>
                let _run_target_args'_v496 = v512 
                #endif
#else
                let v516 : Ref<Str> = v489 |> unbox<Ref<Str>>
                let _run_target_args'_v496 = v516 
                #endif
                let v519 : Ref<Str> = _run_target_args'_v496 
                (* run_target_args'
                let v529 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v530 : string = "String::from($0)"
                let v531 : std_string_String = Fable.Core.RustInterop.emitRustExpr v519 v530 
                let _run_target_args'_v529 = v531 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v532 : string = "String::from($0)"
                let v533 : std_string_String = Fable.Core.RustInterop.emitRustExpr v519 v532 
                let _run_target_args'_v529 = v533 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v534 : string = "String::from($0)"
                let v535 : std_string_String = Fable.Core.RustInterop.emitRustExpr v519 v534 
                let _run_target_args'_v529 = v535 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v537 : std_string_String = v519 |> unbox<std_string_String>
                let _run_target_args'_v529 = v537 
                #endif
#if FABLE_COMPILER_PYTHON
                let v541 : std_string_String = v519 |> unbox<std_string_String>
                let _run_target_args'_v529 = v541 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v545 : std_string_String = v519 |> unbox<std_string_String>
                let _run_target_args'_v529 = v545 
                #endif
#else
                let v549 : std_string_String = v519 |> unbox<std_string_String>
                let _run_target_args'_v529 = v549 
                #endif
                let v552 : std_string_String = _run_target_args'_v529 
                let v558 : string = "$0"
                let v559 : std_string_String = Fable.Core.RustInterop.emitRustExpr v552 v558 
                let v560 : string = "class=v559"
                let v561 : string = "on:click=move |_| v376()"
                let v562 : string = "aria-label=v271"
                let v563 : string = " " + v560 + v4 + ""
                let v564 : string = " " + v561 + v563 + ""
                let v565 : string = " " + v562 + v564 + ""
                let v566 : string = "fable_library_rust::String_::fromString($0)"
                let v567 : string = Fable.Core.RustInterop.emitRustExpr v270 v566 
                let v569 : (leptos_prelude_ArcMemo<US31> -> US65) = method189()
                let v570 : US65 option = v1 |> Option.map v569 
                let v583 : US65 = US65_1
                let v584 : US65 = v570 |> Option.defaultValue v583 
                let v594 : US42 =
                    match v584 with
                    | US65_1 -> (* None *)
                        US42_1
                    | US65_0(v588) -> (* Some *)
                        let v589 : string = $"leptos::prelude::ArcMemo::get(&$0)"
                        let v590 : US31 = Fable.Core.RustInterop.emitRustExpr v588 v589 
                        US42_0(v590)
                let v601 : US31 =
                    match v594 with
                    | US42_0(v595) -> (* Some *)
                        match v595 with
                        | US31_0(v596) -> (* Some *)
                            US31_0(v596)
                        | _ ->
                            US31_1
                    | _ ->
                        US31_1
                let v690 : leptos_prelude_AnyView_ =
                    match v601 with
                    | US31_0(v602) -> (* Some *)
                        let v603 : bool = v567 = v602
                        if v603 then
                            let v604 : string = "$0"
                            let v605 : (unit -> string) = closure177()
                            let v606 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v605 v604 
                            let v607 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                            let v608 : string = "fill=\"none\""
                            let v609 : string = "viewBox=\"0 0 24 24\""
                            let v610 : string = "stroke-width=\"1.5\""
                            let v611 : string = "stroke=\"currentColor\""
                            let v612 : string = "class=move || \" \".to_owned() + &v606(())"
                            let v613 : string = " " + v607 + v4 + ""
                            let v614 : string = " " + v608 + v613 + ""
                            let v615 : string = " " + v609 + v614 + ""
                            let v616 : string = " " + v610 + v615 + ""
                            let v617 : string = " " + v611 + v616 + ""
                            let v618 : string = " " + v612 + v617 + ""
                            let v619 : string = "cx=\"12\""
                            let v620 : string = "cy=\"12\""
                            let v621 : string = "r=\"9\""
                            let v622 : string = "stroke-linecap=\"round\""
                            let v623 : string = "stroke-linejoin=\"round\""
                            let v624 : string = " " + v619 + v4 + ""
                            let v625 : string = " " + v620 + v624 + ""
                            let v626 : string = " " + v621 + v625 + ""
                            let v627 : string = " " + v622 + v626 + ""
                            let v628 : string = " " + v623 + v627 + ""
                            let v629 : string = "vec![" + v4 + "]"
                            let v630 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v629 
                            let v631 : string = "leptos::prelude::Fragment::new($0)"
                            let v632 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v630 v631 
                            let v633 : string = "leptos::prelude::AnyView::from($0)"
                            let v634 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v632 v633 
                            let v635 : string = "circle"
                            let v636 : string = "<" + v635 + " " + v628 + ">move || { v634 }</" + v635 + ">"
                            let v637 : string = "leptos::prelude::view! { " + v636 + " }"
                            let v638 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v637 
                            let v639 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v638 |> unbox
                            let v640 : string = "leptos::prelude::IntoAny::into_any($0)"
                            let v641 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v639 v640 
                            let v642 : string = "stroke-linecap=\"round\""
                            let v643 : string = "stroke-linejoin=\"round\""
                            let v644 : string = "d=\"M9 12l2 2l4 -4\""
                            let v645 : string = " " + v642 + v4 + ""
                            let v646 : string = " " + v643 + v645 + ""
                            let v647 : string = " " + v644 + v646 + ""
                            let v648 : string = "vec![" + v4 + "]"
                            let v649 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v648 
                            let v650 : string = "leptos::prelude::Fragment::new($0)"
                            let v651 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v649 v650 
                            let v652 : string = "leptos::prelude::AnyView::from($0)"
                            let v653 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v651 v652 
                            let v654 : string = "path"
                            let v655 : string = "<" + v654 + " " + v647 + ">move || { v653 }</" + v654 + ">"
                            let v656 : string = "leptos::prelude::view! { " + v655 + " }"
                            let v657 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v656 
                            let v658 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v657 |> unbox
                            let v659 : string = "leptos::prelude::IntoAny::into_any($0)"
                            let v660 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v658 v659 
                            let v661 : string = "v660"
                            let v662 : string = v661 + v4 
                            let v663 : string = v662 + v4 
                            let v664 : string = "v641"
                            let v665 : string = ", "
                            let v666 : string = v664 + v665 
                            let v667 : string = v666 + v663 
                            let v668 : string = "vec![" + v667 + "]"
                            let v669 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v668 
                            let v670 : string = "leptos::prelude::Fragment::new($0)"
                            let v671 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v669 v670 
                            let v672 : string = "leptos::prelude::AnyView::from($0)"
                            let v673 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v671 v672 
                            let v674 : string = "svg"
                            let v675 : string = "<" + v674 + " " + v618 + ">move || { v673 }</" + v674 + ">"
                            let v676 : string = "leptos::prelude::view! { " + v675 + " }"
                            let v677 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v676 
                            let v678 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v677 |> unbox
                            let v679 : string = "leptos::prelude::IntoAny::into_any($0)"
                            let v680 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v678 v679 
                            v680
                        else
                            let v681 : string = "vec![" + v4 + "]"
                            let v682 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v681 
                            let v683 : string = "leptos::prelude::IntoAny::into_any($0)"
                            let v684 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v682 v683 
                            v684
                    | _ ->
                        let v686 : string = "vec![" + v4 + "]"
                        let v687 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v686 
                        let v688 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v689 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v687 v688 
                        v689
                (* run_target_args'
                let v695 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v696 : string = "&*$0"
                let v697 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v567 v696 
                let _run_target_args'_v695 = v697 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v698 : string = "&*$0"
                let v699 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v567 v698 
                let _run_target_args'_v695 = v699 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v700 : string = "&*$0"
                let v701 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v567 v700 
                let _run_target_args'_v695 = v701 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v703 : Ref<Str> = v567 |> unbox<Ref<Str>>
                let _run_target_args'_v695 = v703 
                #endif
#if FABLE_COMPILER_PYTHON
                let v707 : Ref<Str> = v567 |> unbox<Ref<Str>>
                let _run_target_args'_v695 = v707 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v711 : Ref<Str> = v567 |> unbox<Ref<Str>>
                let _run_target_args'_v695 = v711 
                #endif
#else
                let v715 : Ref<Str> = v567 |> unbox<Ref<Str>>
                let _run_target_args'_v695 = v715 
                #endif
                let v718 : Ref<Str> = _run_target_args'_v695 
                (* run_target_args'
                let v728 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v729 : string = "String::from($0)"
                let v730 : std_string_String = Fable.Core.RustInterop.emitRustExpr v718 v729 
                let _run_target_args'_v728 = v730 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v731 : string = "String::from($0)"
                let v732 : std_string_String = Fable.Core.RustInterop.emitRustExpr v718 v731 
                let _run_target_args'_v728 = v732 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v733 : string = "String::from($0)"
                let v734 : std_string_String = Fable.Core.RustInterop.emitRustExpr v718 v733 
                let _run_target_args'_v728 = v734 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v736 : std_string_String = v718 |> unbox<std_string_String>
                let _run_target_args'_v728 = v736 
                #endif
#if FABLE_COMPILER_PYTHON
                let v740 : std_string_String = v718 |> unbox<std_string_String>
                let _run_target_args'_v728 = v740 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v744 : std_string_String = v718 |> unbox<std_string_String>
                let _run_target_args'_v728 = v744 
                #endif
#else
                let v748 : std_string_String = v718 |> unbox<std_string_String>
                let _run_target_args'_v728 = v748 
                #endif
                let v751 : std_string_String = _run_target_args'_v728 
                let v757 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                let v758 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v751 v757 
                let v759 : string = "v758"
                let v760 : string = v759 + v4 
                let v761 : string = v760 + v4 
                let v762 : string = "v690"
                let v763 : string = ", "
                let v764 : string = v762 + v763 
                let v765 : string = v764 + v761 
                let v766 : string = "vec![" + v765 + "]"
                let v767 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v766 
                let v768 : string = "leptos::prelude::Fragment::new($0)"
                let v769 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v767 v768 
                let v770 : string = "leptos::prelude::AnyView::from($0)"
                let v771 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v769 v770 
                let v772 : string = "button"
                let v773 : string = "<" + v772 + " " + v565 + ">move || { v771 }</" + v772 + ">"
                let v774 : string = "leptos::prelude::view! { " + v773 + " }"
                let v775 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v774 
                let v776 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Button>> = v775 |> unbox
                let v777 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v778 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v776 v777 
                let v779 : string = "v778"
                let v780 : string = v779 + v4 
                let v781 : string = v780 + v4 
                let v782 : string = "vec![" + v781 + "]"
                let v783 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v782 
                let v784 : string = "leptos::prelude::Fragment::new($0)"
                let v785 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v783 v784 
                let v786 : string = "leptos::prelude::AnyView::from($0)"
                let v787 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v785 v786 
                let func1_from_result = v787 //
                let v788 : _ = func1_from_result
                let v789 : string = $"true; $0 /*"
                let v790 : bool = Fable.Core.RustInterop.emitRustExpr v788 v789 
                let v791 : string = $"*/ }}); //"
                let v792 : bool = Fable.Core.RustInterop.emitRustExpr () v791 
                let v793 : string = $"_func1_from_v263"
                let v794 : Func0<struct (int32 * leptos_prelude_ReadSignal<std_string_String>), leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v793 
                let v795 : string = "each=v248"
                let v796 : string = "key=move |x| v262(x.to_owned())"
                let v797 : string = "let:x"
                let v798 : (struct (int32 * leptos_prelude_ReadSignal<std_string_String>) -> leptos_prelude_AnyView_) = closure178(v794)
                let v799 : string = "children=move |x| v798(x)"
                let v800 : string = " " + v795 + v4 + ""
                let v801 : string = " " + v796 + v800 + ""
                let v802 : string = " " + v797 + v801 + ""
                let v803 : string = " " + v799 + v802 + ""
                let v804 : string = "leptos::prelude::For"
                let v805 : string = "<" + v804 + " " + v803 + " />"
                let v806 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::view! { " + v805 + " })"
                let v807 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr () v806 
                let v808 : string = "v807"
                let v809 : string = v808 + v4 
                let v810 : string = v809 + v4 
                let v811 : string = "vec![" + v810 + "]"
                let v812 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v811 
                let v813 : string = "leptos::prelude::Fragment::new($0)"
                let v814 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v812 v813 
                v814
    let v822 : string = "leptos::prelude::AnyView::from($0)"
    let v823 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v821 v822 
    let v824 : string = "div"
    let v825 : string = "<" + v824 + " " + v5 + ">move || { v823 }</" + v824 + ">"
    let v826 : string = "leptos::prelude::view! { " + v825 + " }"
    let v827 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v826 
    let v828 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v827 |> unbox
    let v829 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v830 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v828 v829 
    let v831 : string = "v830"
    let v832 : string = v831 + v4 
    let v833 : string = v832 + v4 
    let v834 : string = "vec![" + v833 + "]"
    let v835 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v834 
    let v836 : string = "leptos::prelude::Fragment::new($0)"
    let v837 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v835 v836 
    v837
and method195 (v0 : Func0<leptos_dom_Fragment>) : Func0<leptos_dom_Fragment> =
    v0
and closure179 () () : string =
    let v0 : string = ""
    v0
and method196 (v0 : Func0<std_string_String, unit>) : Func0<std_string_String, unit> =
    v0
and closure180 (v0 : Func0<std_string_String, unit>) (v1 : std_string_String) : unit =
    let v2 : Func0<std_string_String, unit> = method196(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    Fable.Core.RustInterop.emitRustExpr v3 v4 
    ()
and closure181 (v0 : leptos_prelude_ArcAction<Heap6, Result<US59, std_string_String>>) () : bool =
    let v1 : string = "leptos::prelude::ArcAction::pending(&$0)"
    let v2 : leptos_prelude_ArcMemo<bool> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr v2 v3 
    v4
and method197 (v0 : Func0<bool>) : Func0<bool> =
    v0
and closure182 () () : string =
    let v0 : string = "[width:15px] [height:14px]"
    v0
and closure167 (v0 : Heap2, v1 : leptos_prelude_ArcAction<Heap6, Result<US59, std_string_String>>, v2 : leptos_prelude_ArcMemo<string option>, v3 : leptos_prelude_ArcMemo<US31>, v4 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>>) () : leptos_dom_Fragment =
    let v5 : string = "class=\"flex flex-col p-[10px] gap-[11px]\""
    let v6 : string = ""
    let v7 : string = " " + v5 + v6 + ""
    let v8 : string = "class=\"flex [flex-direction:column] [gap:2px] [align-items:flex-start]\""
    let v9 : string = " " + v8 + v6 + ""
    let v10 : string = "Account"
    (* run_target_args'
    let v15 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v16 : string = "&*$0"
    let v17 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v10 v16 
    let _run_target_args'_v15 = v17 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v18 : string = "&*$0"
    let v19 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v10 v18 
    let _run_target_args'_v15 = v19 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v20 : string = "&*$0"
    let v21 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v10 v20 
    let _run_target_args'_v15 = v21 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v23 : Ref<Str> = v10 |> unbox<Ref<Str>>
    let _run_target_args'_v15 = v23 
    #endif
#if FABLE_COMPILER_PYTHON
    let v27 : Ref<Str> = v10 |> unbox<Ref<Str>>
    let _run_target_args'_v15 = v27 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v31 : Ref<Str> = v10 |> unbox<Ref<Str>>
    let _run_target_args'_v15 = v31 
    #endif
#else
    let v35 : Ref<Str> = v10 |> unbox<Ref<Str>>
    let _run_target_args'_v15 = v35 
    #endif
    let v38 : Ref<Str> = _run_target_args'_v15 
    (* run_target_args'
    let v48 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v49 : string = "String::from($0)"
    let v50 : std_string_String = Fable.Core.RustInterop.emitRustExpr v38 v49 
    let _run_target_args'_v48 = v50 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v51 : string = "String::from($0)"
    let v52 : std_string_String = Fable.Core.RustInterop.emitRustExpr v38 v51 
    let _run_target_args'_v48 = v52 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v53 : string = "String::from($0)"
    let v54 : std_string_String = Fable.Core.RustInterop.emitRustExpr v38 v53 
    let _run_target_args'_v48 = v54 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v56 : std_string_String = v38 |> unbox<std_string_String>
    let _run_target_args'_v48 = v56 
    #endif
#if FABLE_COMPILER_PYTHON
    let v60 : std_string_String = v38 |> unbox<std_string_String>
    let _run_target_args'_v48 = v60 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v64 : std_string_String = v38 |> unbox<std_string_String>
    let _run_target_args'_v48 = v64 
    #endif
#else
    let v68 : std_string_String = v38 |> unbox<std_string_String>
    let _run_target_args'_v48 = v68 
    #endif
    let v71 : std_string_String = _run_target_args'_v48 
    let v77 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v78 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v71 v77 
    let v79 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option = None
    let v80 : leptos_prelude_ArcMemo<US31> option = None
    let v82 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> option = Some v4 
    let v86 : leptos_prelude_ArcMemo<US31> option = Some v3 
    let v89 : string = "vec![" + v6 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v92 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v90 v91 
    let v93 : string = "class=\"flex flex-col [position:relative]\""
    let v94 : string = " " + v93 + v6 + ""
    let v95 : string = "$0"
    let v96 : (unit -> string) = closure168()
    let v97 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v96 v95 
    let v98 : string = "$0"
    let v99 : (unit -> bool) = closure169()
    let v100 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v99 v98 
    let v101 : string = "class=\"[position:absolute] [right:0] [top:0]\""
    let v102 : string = " " + v101 + v6 + ""
    let v103 : string = "v92"
    let v104 : string = v103 + v6 
    let v105 : string = v104 + v6 
    let v106 : string = "vec![" + v105 + "]"
    let v107 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v106 
    let v108 : string = "leptos::prelude::Fragment::new($0)"
    let v109 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v107 v108 
    let v110 : string = "leptos::prelude::AnyView::from($0)"
    let v111 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v109 v110 
    let v112 : string = "div"
    let v113 : string = "<" + v112 + " " + v102 + ">move || { v111 }</" + v112 + ">"
    let v114 : string = "leptos::prelude::view! { " + v113 + " }"
    let v115 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v114 
    let v116 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v115 |> unbox
    let v117 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v118 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v116 v117 
    let v119 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v97(())"
    let v120 : string = "open=move || v100(())"
    let v121 : string = " " + v119 + v6 + ""
    let v122 : string = " " + v120 + v121 + ""
    let v123 : string = "$0"
    let v124 : (unit -> string) = closure170()
    let v125 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v124 v123 
    let v126 : string = "$0"
    let v127 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure171(v82, v86, v0)
    let v128 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v127 v126 
    let v129 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v128(()) + \" \" + &v125(())"
    let v130 : string = " " + v129 + v6 + ""
    let v131 : string = "class=\"flex items-center gap-2\""
    let v132 : string = " " + v131 + v6 + ""
    let v133 : (unit -> string) = method188(v82, v86, v0)
    let v134 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
    let v135 : string = " " + v134 + v6 + ""
    let v136 : string = v133 ()
    (* run_target_args'
    let v141 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v142 : string = "&*$0"
    let v143 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v136 v142 
    let _run_target_args'_v141 = v143 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v144 : string = "&*$0"
    let v145 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v136 v144 
    let _run_target_args'_v141 = v145 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v146 : string = "&*$0"
    let v147 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v136 v146 
    let _run_target_args'_v141 = v147 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v149 : Ref<Str> = v136 |> unbox<Ref<Str>>
    let _run_target_args'_v141 = v149 
    #endif
#if FABLE_COMPILER_PYTHON
    let v153 : Ref<Str> = v136 |> unbox<Ref<Str>>
    let _run_target_args'_v141 = v153 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v157 : Ref<Str> = v136 |> unbox<Ref<Str>>
    let _run_target_args'_v141 = v157 
    #endif
#else
    let v161 : Ref<Str> = v136 |> unbox<Ref<Str>>
    let _run_target_args'_v141 = v161 
    #endif
    let v164 : Ref<Str> = _run_target_args'_v141 
    (* run_target_args'
    let v174 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v175 : string = "String::from($0)"
    let v176 : std_string_String = Fable.Core.RustInterop.emitRustExpr v164 v175 
    let _run_target_args'_v174 = v176 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v177 : string = "String::from($0)"
    let v178 : std_string_String = Fable.Core.RustInterop.emitRustExpr v164 v177 
    let _run_target_args'_v174 = v178 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v179 : string = "String::from($0)"
    let v180 : std_string_String = Fable.Core.RustInterop.emitRustExpr v164 v179 
    let _run_target_args'_v174 = v180 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v182 : std_string_String = v164 |> unbox<std_string_String>
    let _run_target_args'_v174 = v182 
    #endif
#if FABLE_COMPILER_PYTHON
    let v186 : std_string_String = v164 |> unbox<std_string_String>
    let _run_target_args'_v174 = v186 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v190 : std_string_String = v164 |> unbox<std_string_String>
    let _run_target_args'_v174 = v190 
    #endif
#else
    let v194 : std_string_String = v164 |> unbox<std_string_String>
    let _run_target_args'_v174 = v194 
    #endif
    let v197 : std_string_String = _run_target_args'_v174 
    let v203 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v204 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v197 v203 
    let v205 : string = "v204"
    let v206 : string = v205 + v6 
    let v207 : string = v206 + v6 
    let v208 : string = "vec![" + v207 + "]"
    let v209 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v208 
    let v210 : string = "leptos::prelude::Fragment::new($0)"
    let v211 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v209 v210 
    let v212 : string = "leptos::prelude::AnyView::from($0)"
    let v213 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v211 v212 
    let v214 : string = "span"
    let v215 : string = "<" + v214 + " " + v135 + ">move || { v213 }</" + v214 + ">"
    let v216 : string = "leptos::prelude::view! { " + v215 + " }"
    let v217 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v216 
    let v218 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v217 |> unbox
    let v219 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v220 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v218 v219 
    let v221 : string = "v220"
    let v222 : string = v221 + v6 
    let v223 : string = v222 + v6 
    let v224 : string = "vec![" + v223 + "]"
    let v225 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v224 
    let v226 : string = "leptos::prelude::Fragment::new($0)"
    let v227 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v225 v226 
    let v228 : string = "leptos::prelude::AnyView::from($0)"
    let v229 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v227 v228 
    let v230 : string = "<" + v112 + " " + v132 + ">move || { v229 }</" + v112 + ">"
    let v231 : string = "leptos::prelude::view! { " + v230 + " }"
    let v232 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v231 
    let v233 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v232 |> unbox
    let v234 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v235 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v233 v234 
    let v236 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
    let v237 : string = " " + v236 + v6 + ""
    let v238 : string = "$0"
    let v239 : (unit -> string) = closure166()
    let v240 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v239 v238 
    let v241 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v242 : string = "viewBox=\"0 0 20 20\""
    let v243 : string = "fill=\"currentColor\""
    let v244 : string = "class=move || \" \".to_owned() + &v240(())"
    let v245 : string = " " + v241 + v6 + ""
    let v246 : string = " " + v242 + v245 + ""
    let v247 : string = " " + v243 + v246 + ""
    let v248 : string = " " + v244 + v247 + ""
    let v249 : string = "fill-rule=\"evenodd\""
    let v250 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
    let v251 : string = "clip-rule=\"evenodd\""
    let v252 : string = " " + v249 + v6 + ""
    let v253 : string = " " + v250 + v252 + ""
    let v254 : string = " " + v251 + v253 + ""
    let v255 : string = "vec![" + v6 + "]"
    let v256 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v255 
    let v257 : string = "leptos::prelude::Fragment::new($0)"
    let v258 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v256 v257 
    let v259 : string = "leptos::prelude::AnyView::from($0)"
    let v260 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v258 v259 
    let v261 : string = "path"
    let v262 : string = "<" + v261 + " " + v254 + ">move || { v260 }</" + v261 + ">"
    let v263 : string = "leptos::prelude::view! { " + v262 + " }"
    let v264 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v263 
    let v265 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v264 |> unbox
    let v266 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v267 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v265 v266 
    let v268 : string = "v267"
    let v269 : string = v268 + v6 
    let v270 : string = v269 + v6 
    let v271 : string = "vec![" + v270 + "]"
    let v272 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v271 
    let v273 : string = "leptos::prelude::Fragment::new($0)"
    let v274 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v272 v273 
    let v275 : string = "leptos::prelude::AnyView::from($0)"
    let v276 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v274 v275 
    let v277 : string = "svg"
    let v278 : string = "<" + v277 + " " + v248 + ">move || { v276 }</" + v277 + ">"
    let v279 : string = "leptos::prelude::view! { " + v278 + " }"
    let v280 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v279 
    let v281 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v280 |> unbox
    let v282 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v283 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v281 v282 
    let v284 : string = "v283"
    let v285 : string = v284 + v6 
    let v286 : string = v285 + v6 
    let v287 : string = "vec![" + v286 + "]"
    let v288 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v287 
    let v289 : string = "leptos::prelude::Fragment::new($0)"
    let v290 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v288 v289 
    let v291 : string = "leptos::prelude::AnyView::from($0)"
    let v292 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v290 v291 
    let v293 : string = "<" + v214 + " " + v237 + ">move || { v292 }</" + v214 + ">"
    let v294 : string = "leptos::prelude::view! { " + v293 + " }"
    let v295 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v294 
    let v296 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v295 |> unbox
    let v297 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v298 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v296 v297 
    let v299 : string = "v298"
    let v300 : string = v299 + v6 
    let v301 : string = v300 + v6 
    let v302 : string = "v235"
    let v303 : string = ", "
    let v304 : string = v302 + v303 
    let v305 : string = v304 + v301 
    let v306 : string = "vec![" + v305 + "]"
    let v307 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v306 
    let v308 : string = "leptos::prelude::Fragment::new($0)"
    let v309 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v307 v308 
    let v310 : string = "leptos::prelude::AnyView::from($0)"
    let v311 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v309 v310 
    let v312 : string = "summary"
    let v313 : string = "<" + v312 + " " + v130 + ">move || { v311 }</" + v312 + ">"
    let v314 : string = "leptos::prelude::view! { " + v313 + " }"
    let v315 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v314 
    let v316 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v315 |> unbox
    let v317 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v318 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v316 v317 
    let v319 : string = "class=\"flex flex-1 flex-col\""
    let v320 : string = " " + v319 + v6 + ""
    let v321 : string = "Func0::new(move || $0())"
    let v322 : (unit -> leptos_dom_Fragment) = closure174(v82, v86, v0)
    let v323 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v322 v321 
    let v324 : Func0<leptos_dom_Fragment> = method195(v323)
    let v325 : string = "(move || v324())()"
    let v326 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v325 
    let v327 : string = "leptos::prelude::AnyView::from($0)"
    let v328 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v326 v327 
    let v329 : string = "<" + v112 + " " + v320 + ">move || { v328 }</" + v112 + ">"
    let v330 : string = "leptos::prelude::view! { " + v329 + " }"
    let v331 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v330 
    let v332 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v331 |> unbox
    let v333 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v334 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v332 v333 
    let v335 : string = "v334"
    let v336 : string = v335 + v6 
    let v337 : string = v336 + v6 
    let v338 : string = "v318"
    let v339 : string = v338 + v303 
    let v340 : string = v339 + v337 
    let v341 : string = "vec![" + v340 + "]"
    let v342 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v341 
    let v343 : string = "leptos::prelude::Fragment::new($0)"
    let v344 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v342 v343 
    let v345 : string = "leptos::prelude::AnyView::from($0)"
    let v346 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v344 v345 
    let v347 : string = "details"
    let v348 : string = "<" + v347 + " " + v122 + ">move || { v346 }</" + v347 + ">"
    let v349 : string = "leptos::prelude::view! { " + v348 + " }"
    let v350 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v349 
    let v351 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v350 |> unbox
    let v352 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v353 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v351 v352 
    let v354 : string = "v353"
    let v355 : string = v354 + v6 
    let v356 : string = v355 + v6 
    let v357 : string = "v118"
    let v358 : string = v357 + v303 
    let v359 : string = v358 + v356 
    let v360 : string = "vec![" + v359 + "]"
    let v361 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v360 
    let v362 : string = "leptos::prelude::Fragment::new($0)"
    let v363 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v361 v362 
    let v364 : string = "leptos::prelude::AnyView::from($0)"
    let v365 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v363 v364 
    let v366 : string = "<" + v112 + " " + v94 + ">move || { v365 }</" + v112 + ">"
    let v367 : string = "leptos::prelude::view! { " + v366 + " }"
    let v368 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v367 
    let v369 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v368 |> unbox
    let v370 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v371 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v369 v370 
    let v372 : string = "v371"
    let v373 : string = v372 + v6 
    let v374 : string = v373 + v6 
    let v375 : string = "v78"
    let v376 : string = v375 + v303 
    let v377 : string = v376 + v374 
    let v378 : string = "vec![" + v377 + "]"
    let v379 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v378 
    let v380 : string = "leptos::prelude::Fragment::new($0)"
    let v381 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v379 v380 
    let v382 : string = "leptos::prelude::AnyView::from($0)"
    let v383 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v381 v382 
    let v384 : string = "<" + v112 + " " + v9 + ">move || { v383 }</" + v112 + ">"
    let v385 : string = "leptos::prelude::view! { " + v384 + " }"
    let v386 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v385 
    let v387 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v386 |> unbox
    let v388 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v389 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v387 v388 
    let v390 : string = "class=\"flex [flex-direction:column] [gap:2px] [align-items:flex-start]\""
    let v391 : string = " " + v390 + v6 + ""
    let v392 : string = "Max"
    (* run_target_args'
    let v397 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v398 : string = "&*$0"
    let v399 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v392 v398 
    let _run_target_args'_v397 = v399 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v400 : string = "&*$0"
    let v401 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v392 v400 
    let _run_target_args'_v397 = v401 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v402 : string = "&*$0"
    let v403 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v392 v402 
    let _run_target_args'_v397 = v403 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v405 : Ref<Str> = v392 |> unbox<Ref<Str>>
    let _run_target_args'_v397 = v405 
    #endif
#if FABLE_COMPILER_PYTHON
    let v409 : Ref<Str> = v392 |> unbox<Ref<Str>>
    let _run_target_args'_v397 = v409 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v413 : Ref<Str> = v392 |> unbox<Ref<Str>>
    let _run_target_args'_v397 = v413 
    #endif
#else
    let v417 : Ref<Str> = v392 |> unbox<Ref<Str>>
    let _run_target_args'_v397 = v417 
    #endif
    let v420 : Ref<Str> = _run_target_args'_v397 
    (* run_target_args'
    let v430 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v431 : string = "String::from($0)"
    let v432 : std_string_String = Fable.Core.RustInterop.emitRustExpr v420 v431 
    let _run_target_args'_v430 = v432 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v433 : string = "String::from($0)"
    let v434 : std_string_String = Fable.Core.RustInterop.emitRustExpr v420 v433 
    let _run_target_args'_v430 = v434 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v435 : string = "String::from($0)"
    let v436 : std_string_String = Fable.Core.RustInterop.emitRustExpr v420 v435 
    let _run_target_args'_v430 = v436 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v438 : std_string_String = v420 |> unbox<std_string_String>
    let _run_target_args'_v430 = v438 
    #endif
#if FABLE_COMPILER_PYTHON
    let v442 : std_string_String = v420 |> unbox<std_string_String>
    let _run_target_args'_v430 = v442 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v446 : std_string_String = v420 |> unbox<std_string_String>
    let _run_target_args'_v430 = v446 
    #endif
#else
    let v450 : std_string_String = v420 |> unbox<std_string_String>
    let _run_target_args'_v430 = v450 
    #endif
    let v453 : std_string_String = _run_target_args'_v430 
    let v459 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v460 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v453 v459 
    let v461 : unit = ()
    let v462 : string = $"true; let _func0_from_v461 = Func0::from(move || {{ //"
    let v463 : bool = Fable.Core.RustInterop.emitRustExpr () v462 
    let v464 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v465 : string = "Box::pin($0)"
    let v466 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v464 v465 
    let v467 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v468 : Heap1 = Fable.Core.RustInterop.emitRustExpr v466 v467 
    let v469 : leptos_prelude_ArcRwSignal<Heap0> = v468.l3
    let v470 : string = "Box::pin($0)"
    let v471 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v469 v470 
    let v472 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v473 : Heap0 = Fable.Core.RustInterop.emitRustExpr v471 v472 
    let v474 : int32 = v473.l2
    let v475 : string = $"true; $0 /*"
    let v476 : bool = Fable.Core.RustInterop.emitRustExpr v474 v475 
    let v477 : string = $"*/ }}); //"
    let v478 : bool = Fable.Core.RustInterop.emitRustExpr () v477 
    let v479 : string = $"_func0_from_v461"
    let v480 : Func0<int32> = Fable.Core.RustInterop.emitRustExpr () v479 
    let v481 : unit = ()
    let v482 : string = $"true; let _func1_from_v481 = Func0::from(move || {{ //"
    let v483 : bool = Fable.Core.RustInterop.emitRustExpr () v482 
    let v484 : string = $"value"
    let v485 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v484 
    let v486 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v487 : string = "Box::pin($0)"
    let v488 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v486 v487 
    let v489 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v490 : Heap1 = Fable.Core.RustInterop.emitRustExpr v488 v489 
    let v491 : leptos_prelude_ArcRwSignal<Heap0> = v490.l3
    let v492 : string = "Box::pin($0)"
    let v493 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v491 v492 
    let v494 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v495 : Heap0 = Fable.Core.RustInterop.emitRustExpr v493 v494 
    let v496 : Vec<(bool * std_string_String)> = v495.l0
    let v497 : std_string_String option = v495.l1
    let v498 : int32 = v495.l2
    let v499 : int32 = v495.l3
    let v500 : US1 = v495.l4
    let v501 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v502 : string = "Box::pin($0)"
    let v503 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v501 v502 
    let v504 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v505 : Heap1 = Fable.Core.RustInterop.emitRustExpr v503 v504 
    let v506 : leptos_prelude_ArcRwSignal<Heap0> = v505.l3
    let v508 : (std_string_String -> string) = _.ToString()
    let v509 : string = v508 v485
    let v512 : bool = "" = v509
    let v526 : int32 =
        if v512 then
            1
        else
            let v518 : int32 = v509 |> int32 
            v518
    let v527 : Heap0 = {l0 = v496; l1 = v497; l2 = v526; l3 = v499; l4 = v500} : Heap0
    let v528 : string = $"true; leptos::prelude::ArcRwSignal::set(&$0, $1); //"
    let v529 : bool = Fable.Core.RustInterop.emitRustExpr struct (v506, v527) v528 
    let v530 : string = $"true; /*"
    let v531 : bool = Fable.Core.RustInterop.emitRustExpr () v530 
    let v532 : string = $"*/ }}); //"
    let v533 : bool = Fable.Core.RustInterop.emitRustExpr () v532 
    let v534 : string = $"_func1_from_v481"
    let v535 : Func0<std_string_String, unit> = Fable.Core.RustInterop.emitRustExpr () v534 
    let v536 : string = "$0"
    let v537 : (unit -> string) = closure179()
    let v538 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v537 v536 
    let v539 : string = "class=move || \"bg-gray-50 h-[31px] [font-size:.875rem] \".to_owned() + &v538(())"
    let v540 : string = "prop:value=move || v480()"
    let v541 : (std_string_String -> unit) = closure180(v535)
    let v542 : string = "on:keyup=move |event: web_sys::KeyboardEvent| v541(leptos::prelude::event_target_value(&event))"
    let v543 : string = " " + v539 + v6 + ""
    let v544 : string = " " + v540 + v543 + ""
    let v545 : string = " " + v542 + v544 + ""
    let v546 : string = "input"
    let v547 : string = "<" + v546 + " " + v545 + " />"
    let v548 : string = "leptos::prelude::view! { " + v547 + " }"
    let v549 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v548 
    let v550 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v549 |> unbox
    let v551 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v552 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v550 v551 
    let v553 : string = "v552"
    let v554 : string = v553 + v6 
    let v555 : string = v554 + v6 
    let v556 : string = "v460"
    let v557 : string = v556 + v303 
    let v558 : string = v557 + v555 
    let v559 : string = "vec![" + v558 + "]"
    let v560 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v559 
    let v561 : string = "leptos::prelude::Fragment::new($0)"
    let v562 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v560 v561 
    let v563 : string = "leptos::prelude::AnyView::from($0)"
    let v564 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v562 v563 
    let v565 : string = "<" + v112 + " " + v391 + ">move || { v564 }</" + v112 + ">"
    let v566 : string = "leptos::prelude::view! { " + v565 + " }"
    let v567 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v566 
    let v568 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v567 |> unbox
    let v569 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v570 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v568 v569 
    let v571 : string = "class=\"flex\""
    let v572 : string = " " + v571 + v6 + ""
    let v573 : string = "Func0::new(move || $0())"
    let v574 : (unit -> bool) = closure181(v1)
    let v575 : Func0<bool> = Fable.Core.RustInterop.emitRustExpr v574 v573 
    let v576 : Func0<bool> = method197(v575)
    let v577 : unit = ()
    let v578 : string = $"true; let _func0_from_v577 = Func0::from(move || {{ //"
    let v579 : bool = Fable.Core.RustInterop.emitRustExpr () v578 
    let v580 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v581 : string = "Box::pin($0)"
    let v582 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v580 v581 
    let v583 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v584 : Heap1 = Fable.Core.RustInterop.emitRustExpr v582 v583 
    let v585 : leptos_prelude_ArcRwSignal<Heap0> = v584.l3
    let v586 : string = "Box::pin($0)"
    let v587 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v585 v586 
    let v588 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v589 : Heap0 = Fable.Core.RustInterop.emitRustExpr v587 v588 
    let v590 : int32 = v589.l2
    let v591 : Heap6 = {l0 = v590} : Heap6
    let v592 : string = "true; leptos::prelude::ArcAction::dispatch(&$0, $1.clone())"
    let v593 : bool = Fable.Core.RustInterop.emitRustExpr struct (v1, v591) v592 
    // rust.func0_from / is_unit
    let v594 : string = $"true; /*"
    let v595 : bool = Fable.Core.RustInterop.emitRustExpr () v594 
    let v596 : string = $"*/ }}); //"
    let v597 : bool = Fable.Core.RustInterop.emitRustExpr () v596 
    let v598 : string = $"_func0_from_v577"
    let v599 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v598 
    let v600 : string = "flex"
    let v601 : string = "gap-[10px]"
    let v602 : string = "[align-items:center]"
    let v603 : string = "inline-block"
    let v604 : string = "rounded"
    let v605 : string = "border"
    let v606 : string = "border-gray-400"
    let v607 : string = "hover:bg-gray-400"
    let v608 : string = "px-4"
    let v609 : string = "py-1"
    let v610 : string = "text-sm"
    let v611 : string = "font-medium"
    let v612 : string = "text-gray-900"
    let v613 : string = "bg-transparent"
    let v614 : string = "hover:text-gray-600"
    let v615 : string = "focus:outline-none"
    let v616 : string = "focus:ring"
    let v617 : string = "active:text-gray-500"
    let v618 : string list = []
    let v620 : string list = v617 :: v618 
    let v624 : string list = v616 :: v620 
    let v628 : string list = v615 :: v624 
    let v632 : string list = v614 :: v628 
    let v636 : string list = v613 :: v632 
    let v640 : string list = v612 :: v636 
    let v644 : string list = v611 :: v640 
    let v648 : string list = v610 :: v644 
    let v652 : string list = v609 :: v648 
    let v656 : string list = v608 :: v652 
    let v660 : string list = v607 :: v656 
    let v664 : string list = v606 :: v660 
    let v668 : string list = v605 :: v664 
    let v672 : string list = v604 :: v668 
    let v676 : string list = v603 :: v672 
    let v680 : string list = v602 :: v676 
    let v684 : string list = v601 :: v680 
    let v688 : string list = v600 :: v684 
    let v694 : unit = ()
    let _let'_v694 =
        seq {
            yield! v688 
            (* indent
            ()
        indent *)
        }
        (* indent
        ()
    indent *)
    let v697 : string seq = _let'_v694 
    let v704 : (string -> (string seq -> string)) = String.concat
    let v705 : string = " "
    let v706 : (string seq -> string) = v704 v705
    let v707 : string = v706 v697
    (* run_target_args'
    let v714 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v715 : string = "&*$0"
    let v716 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v707 v715 
    let _run_target_args'_v714 = v716 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v717 : string = "&*$0"
    let v718 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v707 v717 
    let _run_target_args'_v714 = v718 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v719 : string = "&*$0"
    let v720 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v707 v719 
    let _run_target_args'_v714 = v720 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v722 : Ref<Str> = v707 |> unbox<Ref<Str>>
    let _run_target_args'_v714 = v722 
    #endif
#if FABLE_COMPILER_PYTHON
    let v726 : Ref<Str> = v707 |> unbox<Ref<Str>>
    let _run_target_args'_v714 = v726 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v730 : Ref<Str> = v707 |> unbox<Ref<Str>>
    let _run_target_args'_v714 = v730 
    #endif
#else
    let v734 : Ref<Str> = v707 |> unbox<Ref<Str>>
    let _run_target_args'_v714 = v734 
    #endif
    let v737 : Ref<Str> = _run_target_args'_v714 
    (* run_target_args'
    let v747 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v748 : string = "String::from($0)"
    let v749 : std_string_String = Fable.Core.RustInterop.emitRustExpr v737 v748 
    let _run_target_args'_v747 = v749 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v750 : string = "String::from($0)"
    let v751 : std_string_String = Fable.Core.RustInterop.emitRustExpr v737 v750 
    let _run_target_args'_v747 = v751 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v752 : string = "String::from($0)"
    let v753 : std_string_String = Fable.Core.RustInterop.emitRustExpr v737 v752 
    let _run_target_args'_v747 = v753 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v755 : std_string_String = v737 |> unbox<std_string_String>
    let _run_target_args'_v747 = v755 
    #endif
#if FABLE_COMPILER_PYTHON
    let v759 : std_string_String = v737 |> unbox<std_string_String>
    let _run_target_args'_v747 = v759 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v763 : std_string_String = v737 |> unbox<std_string_String>
    let _run_target_args'_v747 = v763 
    #endif
#else
    let v767 : std_string_String = v737 |> unbox<std_string_String>
    let _run_target_args'_v747 = v767 
    #endif
    let v770 : std_string_String = _run_target_args'_v747 
    let v776 : string = "$0"
    let v777 : std_string_String = Fable.Core.RustInterop.emitRustExpr v770 v776 
    let v778 : string = "class=v777"
    let v779 : string = "prop:disabled=move || v576()"
    let v780 : string = "on:click=move |_| v599()"
    let v781 : string = " " + v778 + v6 + ""
    let v782 : string = " " + v779 + v781 + ""
    let v783 : string = " " + v780 + v782 + ""
    let v784 : string = "Roll"
    (* run_target_args'
    let v789 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v790 : string = "&*$0"
    let v791 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v784 v790 
    let _run_target_args'_v789 = v791 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v792 : string = "&*$0"
    let v793 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v784 v792 
    let _run_target_args'_v789 = v793 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v794 : string = "&*$0"
    let v795 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v784 v794 
    let _run_target_args'_v789 = v795 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v797 : Ref<Str> = v784 |> unbox<Ref<Str>>
    let _run_target_args'_v789 = v797 
    #endif
#if FABLE_COMPILER_PYTHON
    let v801 : Ref<Str> = v784 |> unbox<Ref<Str>>
    let _run_target_args'_v789 = v801 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v805 : Ref<Str> = v784 |> unbox<Ref<Str>>
    let _run_target_args'_v789 = v805 
    #endif
#else
    let v809 : Ref<Str> = v784 |> unbox<Ref<Str>>
    let _run_target_args'_v789 = v809 
    #endif
    let v812 : Ref<Str> = _run_target_args'_v789 
    (* run_target_args'
    let v822 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v823 : string = "String::from($0)"
    let v824 : std_string_String = Fable.Core.RustInterop.emitRustExpr v812 v823 
    let _run_target_args'_v822 = v824 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v825 : string = "String::from($0)"
    let v826 : std_string_String = Fable.Core.RustInterop.emitRustExpr v812 v825 
    let _run_target_args'_v822 = v826 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v827 : string = "String::from($0)"
    let v828 : std_string_String = Fable.Core.RustInterop.emitRustExpr v812 v827 
    let _run_target_args'_v822 = v828 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v830 : std_string_String = v812 |> unbox<std_string_String>
    let _run_target_args'_v822 = v830 
    #endif
#if FABLE_COMPILER_PYTHON
    let v834 : std_string_String = v812 |> unbox<std_string_String>
    let _run_target_args'_v822 = v834 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v838 : std_string_String = v812 |> unbox<std_string_String>
    let _run_target_args'_v822 = v838 
    #endif
#else
    let v842 : std_string_String = v812 |> unbox<std_string_String>
    let _run_target_args'_v822 = v842 
    #endif
    let v845 : std_string_String = _run_target_args'_v822 
    let v851 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v852 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v845 v851 
    let v853 : string = "$0()"
    let v854 : bool = Fable.Core.RustInterop.emitRustExpr v575 v853 
    let v1218 : leptos_prelude_AnyView_ =
        if v854 then
            let v855 : string = "$0"
            let v856 : (unit -> string) = closure182()
            let v857 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v856 v855 
            let v858 : string = "version=\"1.1\""
            let v859 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v860 : string = "xmlns:xlink=\"http://www.w3.org/1999/xlink\""
            let v861 : string = "x=\"0px\""
            let v862 : string = "y=\"0px\""
            let v863 : string = "viewBox=\"0 0 24 30\""
            let v864 : string = "style=\"enable-background:new 0 0 50 50;\""
            let v865 : string = "xml:space=\"preserve\""
            let v866 : string = "class=move || \" \".to_owned() + &v857(())"
            let v867 : string = " " + v858 + v6 + ""
            let v868 : string = " " + v859 + v867 + ""
            let v869 : string = " " + v860 + v868 + ""
            let v870 : string = " " + v861 + v869 + ""
            let v871 : string = " " + v862 + v870 + ""
            let v872 : string = " " + v863 + v871 + ""
            let v873 : string = " " + v864 + v872 + ""
            let v874 : string = " " + v865 + v873 + ""
            let v875 : string = " " + v866 + v874 + ""
            let v876 : string = "x=\"0\""
            let v877 : string = "y=\"10\""
            let v878 : string = "width=\"4\""
            let v879 : string = "height=\"10\""
            let v880 : string = "fill=\"#333\""
            let v881 : string = "opacity=\"0.2\""
            let v882 : string = " " + v876 + v6 + ""
            let v883 : string = " " + v877 + v882 + ""
            let v884 : string = " " + v878 + v883 + ""
            let v885 : string = " " + v879 + v884 + ""
            let v886 : string = " " + v880 + v885 + ""
            let v887 : string = " " + v881 + v886 + ""
            let v888 : string = "attributeName=\"opacity\""
            let v889 : string = "attributeType=\"XML\""
            let v890 : string = "values=\"0.2; 1; .2\""
            let v891 : string = "begin=\"0s\""
            let v892 : string = "dur=\"0.6s\""
            let v893 : string = "repeatCount=\"indefinite\""
            let v894 : string = " " + v888 + v6 + ""
            let v895 : string = " " + v889 + v894 + ""
            let v896 : string = " " + v890 + v895 + ""
            let v897 : string = " " + v891 + v896 + ""
            let v898 : string = " " + v892 + v897 + ""
            let v899 : string = " " + v893 + v898 + ""
            let v900 : string = "vec![" + v6 + "]"
            let v901 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v900 
            let v902 : string = "leptos::prelude::Fragment::new($0)"
            let v903 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v901 v902 
            let v904 : string = "leptos::prelude::AnyView::from($0)"
            let v905 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v903 v904 
            let v906 : string = "animate"
            let v907 : string = "<" + v906 + " " + v899 + ">move || { v905 }</" + v906 + ">"
            let v908 : string = "leptos::prelude::view! { " + v907 + " }"
            let v909 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v908 
            let v910 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v909 |> unbox
            let v911 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v912 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v910 v911 
            let v913 : string = "attributeName=\"height\""
            let v914 : string = "attributeType=\"XML\""
            let v915 : string = "values=\"10; 20; 10\""
            let v916 : string = "begin=\"0s\""
            let v917 : string = "dur=\"0.6s\""
            let v918 : string = "repeatCount=\"indefinite\""
            let v919 : string = " " + v913 + v6 + ""
            let v920 : string = " " + v914 + v919 + ""
            let v921 : string = " " + v915 + v920 + ""
            let v922 : string = " " + v916 + v921 + ""
            let v923 : string = " " + v917 + v922 + ""
            let v924 : string = " " + v918 + v923 + ""
            let v925 : string = "vec![" + v6 + "]"
            let v926 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v925 
            let v927 : string = "leptos::prelude::Fragment::new($0)"
            let v928 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v926 v927 
            let v929 : string = "leptos::prelude::AnyView::from($0)"
            let v930 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v928 v929 
            let v931 : string = "<" + v906 + " " + v924 + ">move || { v930 }</" + v906 + ">"
            let v932 : string = "leptos::prelude::view! { " + v931 + " }"
            let v933 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v932 
            let v934 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v933 |> unbox
            let v935 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v936 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v934 v935 
            let v937 : string = "attributeName=\"y\""
            let v938 : string = "attributeType=\"XML\""
            let v939 : string = "values=\"10; 5; 10\""
            let v940 : string = "begin=\"0s\""
            let v941 : string = "dur=\"0.6s\""
            let v942 : string = "repeatCount=\"indefinite\""
            let v943 : string = " " + v937 + v6 + ""
            let v944 : string = " " + v938 + v943 + ""
            let v945 : string = " " + v939 + v944 + ""
            let v946 : string = " " + v940 + v945 + ""
            let v947 : string = " " + v941 + v946 + ""
            let v948 : string = " " + v942 + v947 + ""
            let v949 : string = "vec![" + v6 + "]"
            let v950 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v949 
            let v951 : string = "leptos::prelude::Fragment::new($0)"
            let v952 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v950 v951 
            let v953 : string = "leptos::prelude::AnyView::from($0)"
            let v954 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v952 v953 
            let v955 : string = "<" + v906 + " " + v948 + ">move || { v954 }</" + v906 + ">"
            let v956 : string = "leptos::prelude::view! { " + v955 + " }"
            let v957 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v956 
            let v958 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v957 |> unbox
            let v959 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v960 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v958 v959 
            let v961 : string = "v960"
            let v962 : string = v961 + v6 
            let v963 : string = v962 + v6 
            let v964 : string = "v936"
            let v965 : string = v964 + v303 
            let v966 : string = v965 + v963 
            let v967 : string = "v912"
            let v968 : string = v967 + v303 
            let v969 : string = v968 + v966 
            let v970 : string = "vec![" + v969 + "]"
            let v971 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v970 
            let v972 : string = "leptos::prelude::Fragment::new($0)"
            let v973 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v971 v972 
            let v974 : string = "leptos::prelude::AnyView::from($0)"
            let v975 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v973 v974 
            let v976 : string = "rect"
            let v977 : string = "<" + v976 + " " + v887 + ">move || { v975 }</" + v976 + ">"
            let v978 : string = "leptos::prelude::view! { " + v977 + " }"
            let v979 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v978 
            let v980 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v979 |> unbox
            let v981 : string = "x=\"8\""
            let v982 : string = "y=\"10\""
            let v983 : string = "width=\"4\""
            let v984 : string = "height=\"10\""
            let v985 : string = "fill=\"#333\""
            let v986 : string = "opacity=\"0.2\""
            let v987 : string = " " + v981 + v6 + ""
            let v988 : string = " " + v982 + v987 + ""
            let v989 : string = " " + v983 + v988 + ""
            let v990 : string = " " + v984 + v989 + ""
            let v991 : string = " " + v985 + v990 + ""
            let v992 : string = " " + v986 + v991 + ""
            let v993 : string = "attributeName=\"opacity\""
            let v994 : string = "attributeType=\"XML\""
            let v995 : string = "values=\"0.2; 1; .2\""
            let v996 : string = "begin=\"0.15s\""
            let v997 : string = "dur=\"0.6s\""
            let v998 : string = "repeatCount=\"indefinite\""
            let v999 : string = " " + v993 + v6 + ""
            let v1000 : string = " " + v994 + v999 + ""
            let v1001 : string = " " + v995 + v1000 + ""
            let v1002 : string = " " + v996 + v1001 + ""
            let v1003 : string = " " + v997 + v1002 + ""
            let v1004 : string = " " + v998 + v1003 + ""
            let v1005 : string = "vec![" + v6 + "]"
            let v1006 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1005 
            let v1007 : string = "leptos::prelude::Fragment::new($0)"
            let v1008 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1006 v1007 
            let v1009 : string = "leptos::prelude::AnyView::from($0)"
            let v1010 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1008 v1009 
            let v1011 : string = "<" + v906 + " " + v1004 + ">move || { v1010 }</" + v906 + ">"
            let v1012 : string = "leptos::prelude::view! { " + v1011 + " }"
            let v1013 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1012 
            let v1014 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1013 |> unbox
            let v1015 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1016 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1014 v1015 
            let v1017 : string = "attributeName=\"opacity\""
            let v1018 : string = "attributeType=\"XML\""
            let v1019 : string = "values=\"10; 20; 10\""
            let v1020 : string = "begin=\"0.15s\""
            let v1021 : string = "dur=\"0.6s\""
            let v1022 : string = "repeatCount=\"indefinite\""
            let v1023 : string = " " + v1017 + v6 + ""
            let v1024 : string = " " + v1018 + v1023 + ""
            let v1025 : string = " " + v1019 + v1024 + ""
            let v1026 : string = " " + v1020 + v1025 + ""
            let v1027 : string = " " + v1021 + v1026 + ""
            let v1028 : string = " " + v1022 + v1027 + ""
            let v1029 : string = "vec![" + v6 + "]"
            let v1030 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1029 
            let v1031 : string = "leptos::prelude::Fragment::new($0)"
            let v1032 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1030 v1031 
            let v1033 : string = "leptos::prelude::AnyView::from($0)"
            let v1034 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1032 v1033 
            let v1035 : string = "<" + v906 + " " + v1028 + ">move || { v1034 }</" + v906 + ">"
            let v1036 : string = "leptos::prelude::view! { " + v1035 + " }"
            let v1037 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1036 
            let v1038 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1037 |> unbox
            let v1039 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1040 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1038 v1039 
            let v1041 : string = "attributeName=\"y\""
            let v1042 : string = "attributeType=\"XML\""
            let v1043 : string = "values=\"10; 5; 10\""
            let v1044 : string = "begin=\"0.15s\""
            let v1045 : string = "dur=\"0.6s\""
            let v1046 : string = "repeatCount=\"indefinite\""
            let v1047 : string = " " + v1041 + v6 + ""
            let v1048 : string = " " + v1042 + v1047 + ""
            let v1049 : string = " " + v1043 + v1048 + ""
            let v1050 : string = " " + v1044 + v1049 + ""
            let v1051 : string = " " + v1045 + v1050 + ""
            let v1052 : string = " " + v1046 + v1051 + ""
            let v1053 : string = "vec![" + v6 + "]"
            let v1054 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1053 
            let v1055 : string = "leptos::prelude::Fragment::new($0)"
            let v1056 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1054 v1055 
            let v1057 : string = "leptos::prelude::AnyView::from($0)"
            let v1058 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1056 v1057 
            let v1059 : string = "<" + v906 + " " + v1052 + ">move || { v1058 }</" + v906 + ">"
            let v1060 : string = "leptos::prelude::view! { " + v1059 + " }"
            let v1061 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1060 
            let v1062 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1061 |> unbox
            let v1063 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1064 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1062 v1063 
            let v1065 : string = "v1064"
            let v1066 : string = v1065 + v6 
            let v1067 : string = v1066 + v6 
            let v1068 : string = "v1040"
            let v1069 : string = v1068 + v303 
            let v1070 : string = v1069 + v1067 
            let v1071 : string = "v1016"
            let v1072 : string = v1071 + v303 
            let v1073 : string = v1072 + v1070 
            let v1074 : string = "vec![" + v1073 + "]"
            let v1075 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1074 
            let v1076 : string = "leptos::prelude::Fragment::new($0)"
            let v1077 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1075 v1076 
            let v1078 : string = "leptos::prelude::AnyView::from($0)"
            let v1079 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1077 v1078 
            let v1080 : string = "<" + v976 + " " + v992 + ">move || { v1079 }</" + v976 + ">"
            let v1081 : string = "leptos::prelude::view! { " + v1080 + " }"
            let v1082 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1081 
            let v1083 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v1082 |> unbox
            let v1084 : string = "x=\"16\""
            let v1085 : string = "y=\"10\""
            let v1086 : string = "width=\"4\""
            let v1087 : string = "height=\"10\""
            let v1088 : string = "fill=\"#333\""
            let v1089 : string = "opacity=\"0.2\""
            let v1090 : string = " " + v1084 + v6 + ""
            let v1091 : string = " " + v1085 + v1090 + ""
            let v1092 : string = " " + v1086 + v1091 + ""
            let v1093 : string = " " + v1087 + v1092 + ""
            let v1094 : string = " " + v1088 + v1093 + ""
            let v1095 : string = " " + v1089 + v1094 + ""
            let v1096 : string = "attributeName=\"opacity\""
            let v1097 : string = "attributeType=\"XML\""
            let v1098 : string = "values=\"0.2; 1; .2\""
            let v1099 : string = "begin=\"0.3s\""
            let v1100 : string = "dur=\"0.6s\""
            let v1101 : string = "repeatCount=\"indefinite\""
            let v1102 : string = " " + v1096 + v6 + ""
            let v1103 : string = " " + v1097 + v1102 + ""
            let v1104 : string = " " + v1098 + v1103 + ""
            let v1105 : string = " " + v1099 + v1104 + ""
            let v1106 : string = " " + v1100 + v1105 + ""
            let v1107 : string = " " + v1101 + v1106 + ""
            let v1108 : string = "vec![" + v6 + "]"
            let v1109 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1108 
            let v1110 : string = "leptos::prelude::Fragment::new($0)"
            let v1111 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1109 v1110 
            let v1112 : string = "leptos::prelude::AnyView::from($0)"
            let v1113 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1111 v1112 
            let v1114 : string = "<" + v906 + " " + v1107 + ">move || { v1113 }</" + v906 + ">"
            let v1115 : string = "leptos::prelude::view! { " + v1114 + " }"
            let v1116 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1115 
            let v1117 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1116 |> unbox
            let v1118 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1119 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1117 v1118 
            let v1120 : string = "attributeName=\"height\""
            let v1121 : string = "attributeType=\"XML\""
            let v1122 : string = "values=\"10; 20; 10\""
            let v1123 : string = "begin=\"0.3s\""
            let v1124 : string = "dur=\"0.6s\""
            let v1125 : string = "repeatCount=\"indefinite\""
            let v1126 : string = " " + v1120 + v6 + ""
            let v1127 : string = " " + v1121 + v1126 + ""
            let v1128 : string = " " + v1122 + v1127 + ""
            let v1129 : string = " " + v1123 + v1128 + ""
            let v1130 : string = " " + v1124 + v1129 + ""
            let v1131 : string = " " + v1125 + v1130 + ""
            let v1132 : string = "vec![" + v6 + "]"
            let v1133 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1132 
            let v1134 : string = "leptos::prelude::Fragment::new($0)"
            let v1135 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1133 v1134 
            let v1136 : string = "leptos::prelude::AnyView::from($0)"
            let v1137 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1135 v1136 
            let v1138 : string = "<" + v906 + " " + v1131 + ">move || { v1137 }</" + v906 + ">"
            let v1139 : string = "leptos::prelude::view! { " + v1138 + " }"
            let v1140 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1139 
            let v1141 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1140 |> unbox
            let v1142 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1143 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1141 v1142 
            let v1144 : string = "attributeName=\"y\""
            let v1145 : string = "attributeType=\"XML\""
            let v1146 : string = "values=\"10; 5; 10\""
            let v1147 : string = "begin=\"0.3s\""
            let v1148 : string = "dur=\"0.6s\""
            let v1149 : string = "repeatCount=\"indefinite\""
            let v1150 : string = " " + v1144 + v6 + ""
            let v1151 : string = " " + v1145 + v1150 + ""
            let v1152 : string = " " + v1146 + v1151 + ""
            let v1153 : string = " " + v1147 + v1152 + ""
            let v1154 : string = " " + v1148 + v1153 + ""
            let v1155 : string = " " + v1149 + v1154 + ""
            let v1156 : string = "vec![" + v6 + "]"
            let v1157 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1156 
            let v1158 : string = "leptos::prelude::Fragment::new($0)"
            let v1159 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1157 v1158 
            let v1160 : string = "leptos::prelude::AnyView::from($0)"
            let v1161 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1159 v1160 
            let v1162 : string = "<" + v906 + " " + v1155 + ">move || { v1161 }</" + v906 + ">"
            let v1163 : string = "leptos::prelude::view! { " + v1162 + " }"
            let v1164 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1163 
            let v1165 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1164 |> unbox
            let v1166 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1167 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1165 v1166 
            let v1168 : string = "v1167"
            let v1169 : string = v1168 + v6 
            let v1170 : string = v1169 + v6 
            let v1171 : string = "v1143"
            let v1172 : string = v1171 + v303 
            let v1173 : string = v1172 + v1170 
            let v1174 : string = "v1119"
            let v1175 : string = v1174 + v303 
            let v1176 : string = v1175 + v1173 
            let v1177 : string = "vec![" + v1176 + "]"
            let v1178 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1177 
            let v1179 : string = "leptos::prelude::Fragment::new($0)"
            let v1180 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1178 v1179 
            let v1181 : string = "leptos::prelude::AnyView::from($0)"
            let v1182 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1180 v1181 
            let v1183 : string = "<" + v976 + " " + v1095 + ">move || { v1182 }</" + v976 + ">"
            let v1184 : string = "leptos::prelude::view! { " + v1183 + " }"
            let v1185 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1184 
            let v1186 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v1185 |> unbox
            let v1187 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1188 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1186 v1187 
            let v1189 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1190 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1083 v1189 
            let v1191 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1192 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v980 v1191 
            let v1193 : string = "v1188"
            let v1194 : string = v1193 + v6 
            let v1195 : string = v1194 + v6 
            let v1196 : string = "v1190"
            let v1197 : string = v1196 + v303 
            let v1198 : string = v1197 + v1195 
            let v1199 : string = "v1192"
            let v1200 : string = v1199 + v303 
            let v1201 : string = v1200 + v1198 
            let v1202 : string = "vec![" + v1201 + "]"
            let v1203 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1202 
            let v1204 : string = "leptos::prelude::Fragment::new($0)"
            let v1205 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1203 v1204 
            let v1206 : string = "leptos::prelude::AnyView::from($0)"
            let v1207 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1205 v1206 
            let v1208 : string = "<" + v277 + " " + v875 + ">move || { v1207 }</" + v277 + ">"
            let v1209 : string = "leptos::prelude::view! { " + v1208 + " }"
            let v1210 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1209 
            let v1211 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v1210 |> unbox
            let v1212 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1213 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1211 v1212 
            v1213
        else
            let v1214 : string = "vec![" + v6 + "]"
            let v1215 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1214 
            let v1216 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1217 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1215 v1216 
            v1217
    let v1219 : string = "v1218"
    let v1220 : string = v1219 + v6 
    let v1221 : string = v1220 + v6 
    let v1222 : string = "v852"
    let v1223 : string = v1222 + v303 
    let v1224 : string = v1223 + v1221 
    let v1225 : string = "vec![" + v1224 + "]"
    let v1226 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1225 
    let v1227 : string = "leptos::prelude::Fragment::new($0)"
    let v1228 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1226 v1227 
    let v1229 : string = "leptos::prelude::AnyView::from($0)"
    let v1230 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1228 v1229 
    let v1231 : string = "button"
    let v1232 : string = "<" + v1231 + " " + v783 + ">move || { v1230 }</" + v1231 + ">"
    let v1233 : string = "leptos::prelude::view! { " + v1232 + " }"
    let v1234 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1233 
    let v1235 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Button>> = v1234 |> unbox
    let v1236 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v1237 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1235 v1236 
    let v1238 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v1239 : string option = Fable.Core.RustInterop.emitRustExpr v2 v1238 
    let v1241 : (string -> US31) = method106()
    let v1242 : US31 option = v1239 |> Option.map v1241 
    let v1255 : US31 = US31_1
    let v1256 : US31 = v1242 |> Option.defaultValue v1255 
    let v1435 : leptos_prelude_AnyView_ =
        match v1256 with
        | US31_0(v1260) -> (* Some *)
            let v1261 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
            let v1262 : string = " " + v1261 + v6 + ""
            let v1263 : string = "class=\"[height:17px]\""
            let v1264 : string = " " + v1263 + v6 + ""
            let v1265 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v1266 : string = "fill=\"none\""
            let v1267 : string = "height=\"100%\""
            let v1268 : string = "viewBox=\"0 0 24 24\""
            let v1269 : string = "stroke-width=\"1.5\""
            let v1270 : string = "stroke=\"currentColor\""
            let v1271 : string = "class=\"text-red-700\""
            let v1272 : string = " " + v1265 + v6 + ""
            let v1273 : string = " " + v1266 + v1272 + ""
            let v1274 : string = " " + v1267 + v1273 + ""
            let v1275 : string = " " + v1268 + v1274 + ""
            let v1276 : string = " " + v1269 + v1275 + ""
            let v1277 : string = " " + v1270 + v1276 + ""
            let v1278 : string = " " + v1271 + v1277 + ""
            let v1279 : string = "stroke-linecap=\"round\""
            let v1280 : string = "stroke-linejoin=\"round\""
            let v1281 : string = "d=\"M6 18L18 6M6 6l12 12\""
            let v1282 : string = " " + v1279 + v6 + ""
            let v1283 : string = " " + v1280 + v1282 + ""
            let v1284 : string = " " + v1281 + v1283 + ""
            let v1285 : string = "vec![" + v6 + "]"
            let v1286 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1285 
            let v1287 : string = "leptos::prelude::Fragment::new($0)"
            let v1288 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1286 v1287 
            let v1289 : string = "leptos::prelude::AnyView::from($0)"
            let v1290 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1288 v1289 
            let v1291 : string = "<" + v261 + " " + v1284 + ">move || { v1290 }</" + v261 + ">"
            let v1292 : string = "leptos::prelude::view! { " + v1291 + " }"
            let v1293 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1292 
            let v1294 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v1293 |> unbox
            let v1295 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1296 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1294 v1295 
            let v1297 : string = "v1296"
            let v1298 : string = v1297 + v6 
            let v1299 : string = v1298 + v6 
            let v1300 : string = "vec![" + v1299 + "]"
            let v1301 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1300 
            let v1302 : string = "leptos::prelude::Fragment::new($0)"
            let v1303 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1301 v1302 
            let v1304 : string = "leptos::prelude::AnyView::from($0)"
            let v1305 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1303 v1304 
            let v1306 : string = "<" + v277 + " " + v1278 + ">move || { v1305 }</" + v277 + ">"
            let v1307 : string = "leptos::prelude::view! { " + v1306 + " }"
            let v1308 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1307 
            let v1309 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v1308 |> unbox
            let v1310 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1311 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1309 v1310 
            let v1312 : string = "v1311"
            let v1313 : string = v1312 + v6 
            let v1314 : string = v1313 + v6 
            let v1315 : string = "vec![" + v1314 + "]"
            let v1316 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1315 
            let v1317 : string = "leptos::prelude::Fragment::new($0)"
            let v1318 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1316 v1317 
            let v1319 : string = "leptos::prelude::AnyView::from($0)"
            let v1320 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1318 v1319 
            let v1321 : string = "<" + v214 + " " + v1264 + ">move || { v1320 }</" + v214 + ">"
            let v1322 : string = "leptos::prelude::view! { " + v1321 + " }"
            let v1323 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1322 
            let v1324 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v1323 |> unbox
            let v1325 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1326 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1324 v1325 
            let v1327 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
            let v1328 : string = " " + v1327 + v6 + ""
            (* run_target_args'
            let v1333 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1334 : string = "&*$0"
            let v1335 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1260 v1334 
            let _run_target_args'_v1333 = v1335 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1336 : string = "&*$0"
            let v1337 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1260 v1336 
            let _run_target_args'_v1333 = v1337 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1338 : string = "&*$0"
            let v1339 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1260 v1338 
            let _run_target_args'_v1333 = v1339 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1341 : Ref<Str> = v1260 |> unbox<Ref<Str>>
            let _run_target_args'_v1333 = v1341 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1345 : Ref<Str> = v1260 |> unbox<Ref<Str>>
            let _run_target_args'_v1333 = v1345 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1349 : Ref<Str> = v1260 |> unbox<Ref<Str>>
            let _run_target_args'_v1333 = v1349 
            #endif
#else
            let v1353 : Ref<Str> = v1260 |> unbox<Ref<Str>>
            let _run_target_args'_v1333 = v1353 
            #endif
            let v1356 : Ref<Str> = _run_target_args'_v1333 
            (* run_target_args'
            let v1366 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1367 : string = "String::from($0)"
            let v1368 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1356 v1367 
            let _run_target_args'_v1366 = v1368 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1369 : string = "String::from($0)"
            let v1370 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1356 v1369 
            let _run_target_args'_v1366 = v1370 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1371 : string = "String::from($0)"
            let v1372 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1356 v1371 
            let _run_target_args'_v1366 = v1372 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1374 : std_string_String = v1356 |> unbox<std_string_String>
            let _run_target_args'_v1366 = v1374 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1378 : std_string_String = v1356 |> unbox<std_string_String>
            let _run_target_args'_v1366 = v1378 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1382 : std_string_String = v1356 |> unbox<std_string_String>
            let _run_target_args'_v1366 = v1382 
            #endif
#else
            let v1386 : std_string_String = v1356 |> unbox<std_string_String>
            let _run_target_args'_v1366 = v1386 
            #endif
            let v1389 : std_string_String = _run_target_args'_v1366 
            let v1395 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v1396 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1389 v1395 
            let v1397 : string = "v1396"
            let v1398 : string = v1397 + v6 
            let v1399 : string = v1398 + v6 
            let v1400 : string = "vec![" + v1399 + "]"
            let v1401 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1400 
            let v1402 : string = "leptos::prelude::Fragment::new($0)"
            let v1403 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1401 v1402 
            let v1404 : string = "leptos::prelude::AnyView::from($0)"
            let v1405 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1403 v1404 
            let v1406 : string = "pre"
            let v1407 : string = "<" + v1406 + " " + v1328 + ">move || { v1405 }</" + v1406 + ">"
            let v1408 : string = "leptos::prelude::view! { " + v1407 + " }"
            let v1409 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1408 
            let v1410 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v1409 |> unbox
            let v1411 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1412 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1410 v1411 
            let v1413 : string = "v1412"
            let v1414 : string = v1413 + v6 
            let v1415 : string = v1414 + v6 
            let v1416 : string = "v1326"
            let v1417 : string = v1416 + v303 
            let v1418 : string = v1417 + v1415 
            let v1419 : string = "vec![" + v1418 + "]"
            let v1420 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1419 
            let v1421 : string = "leptos::prelude::Fragment::new($0)"
            let v1422 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1420 v1421 
            let v1423 : string = "leptos::prelude::AnyView::from($0)"
            let v1424 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1422 v1423 
            let v1425 : string = "<" + v112 + " " + v1262 + ">move || { v1424 }</" + v112 + ">"
            let v1426 : string = "leptos::prelude::view! { " + v1425 + " }"
            let v1427 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1426 
            let v1428 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1427 |> unbox
            let v1429 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1430 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1428 v1429 
            v1430
        | _ ->
            let v1431 : string = "vec![" + v6 + "]"
            let v1432 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1431 
            let v1433 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v1434 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1432 v1433 
            v1434
    let v1436 : string = "v1435"
    let v1437 : string = v1436 + v6 
    let v1438 : string = v1437 + v6 
    let v1439 : string = "v1237"
    let v1440 : string = v1439 + v303 
    let v1441 : string = v1440 + v1438 
    let v1442 : string = "vec![" + v1441 + "]"
    let v1443 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1442 
    let v1444 : string = "leptos::prelude::Fragment::new($0)"
    let v1445 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1443 v1444 
    let v1446 : string = "leptos::prelude::AnyView::from($0)"
    let v1447 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1445 v1446 
    let v1448 : string = "<" + v112 + " " + v572 + ">move || { v1447 }</" + v112 + ">"
    let v1449 : string = "leptos::prelude::view! { " + v1448 + " }"
    let v1450 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1449 
    let v1451 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1450 |> unbox
    let v1452 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v1453 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1451 v1452 
    let v1454 : string = "v1453"
    let v1455 : string = v1454 + v6 
    let v1456 : string = v1455 + v6 
    let v1457 : string = "v570"
    let v1458 : string = v1457 + v303 
    let v1459 : string = v1458 + v1456 
    let v1460 : string = "v389"
    let v1461 : string = v1460 + v303 
    let v1462 : string = v1461 + v1459 
    let v1463 : string = "vec![" + v1462 + "]"
    let v1464 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1463 
    let v1465 : string = "leptos::prelude::Fragment::new($0)"
    let v1466 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1464 v1465 
    let v1467 : string = "leptos::prelude::AnyView::from($0)"
    let v1468 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1466 v1467 
    let v1469 : string = "<" + v112 + " " + v7 + ">move || { v1468 }</" + v112 + ">"
    let v1470 : string = "leptos::prelude::view! { " + v1469 + " }"
    let v1471 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1470 
    let v1472 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1471 |> unbox
    let v1473 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v1474 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1472 v1473 
    let v1475 : string = "v1474"
    let v1476 : string = v1475 + v6 
    let v1477 : string = v1476 + v6 
    let v1478 : string = "vec![" + v1477 + "]"
    let v1479 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1478 
    let v1480 : string = "leptos::prelude::Fragment::new($0)"
    let v1481 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1479 v1480 
    v1481
and closure183 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure184 () () : Ref<Lifetime<StaticLifetime, Str>> =
    let v0 : string = ""
    let v1 : string = "r#\"" + v0 + "\"#"
    let v2 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v1 
    v2
and closure185 () () : string =
    let v0 : string = "History"
    v0
and method198 () : (unit -> string) =
    closure185()
and method200 (v0 : Func0<struct (std_string_String * std_string_String option), struct (string * US31)>) : Func0<struct (std_string_String * std_string_String option), struct (string * US31)> =
    v0
and closure188 (v0 : Func0<struct (std_string_String * std_string_String option), struct (string * US31)>) struct (v1 : std_string_String, v2 : std_string_String option) : struct (string * US31) =
    let v3 : Func0<struct (std_string_String * std_string_String option), struct (string * US31)> = method200(v0)
    let func1_move_x = struct (v1, v2) //
    let v4 : _ = func1_move_x
    let v5 : string = "(move |x| v3(x))($0)"
    let struct (v6 : string, v7 : US31) = Fable.Core.RustInterop.emitRustExpr v4 v5 
    struct (v6, v7)
and closure189 () struct (v0 : string, v1 : US31) : bool =
    let v2 : bool = "FUNCTION_CALL" = v0
    if v2 then
        match v1 with
        | US31_0(v3) -> (* Some *)
            let v4 : bool = "generate_random_number" = v3
            v4
        | _ ->
            false
    else
        false
and method201 () : (struct (string * US31) -> bool) =
    closure189()
and method202 (v0 : Vec<struct (string * US31)>) : Vec<struct (string * US31)> =
    v0
and closure187 () struct (v0 : string, v1 : unativeint, v2 : Heap5) : bool =
    let v3 : (struct (std_string_String * std_string_String option) []) = v2.l7
    let v4 : string = "$0.to_vec()"
    let v5 : Vec<struct (std_string_String * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : unit = ()
    let v7 : string = $"true; let _func1_from_v6 = Func1::from(move |value| {{ //"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr () v7 
    let v9 : string = $"value"
    let struct (v10 : std_string_String, v11 : std_string_String option) = Fable.Core.RustInterop.emitRustExpr () v9 
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v10 v12 
    let v15 : (std_string_String -> US14) = method39()
    let v16 : US14 option = v11 |> Option.map v15 
    let v29 : US14 = US14_1
    let v30 : US14 = v16 |> Option.defaultValue v29 
    let v40 : US31 =
        match v30 with
        | US14_1 -> (* None *)
            US31_1
        | US14_0(v34) -> (* Some *)
            let v35 : string = "fable_library_rust::String_::fromString($0)"
            let v36 : string = Fable.Core.RustInterop.emitRustExpr v34 v35 
            US31_0(v36)
    let func1_from_result = struct (v13, v40) //
    let v41 : _ = func1_from_result
    let v42 : string = $"true; $0 /*"
    let v43 : bool = Fable.Core.RustInterop.emitRustExpr v41 v42 
    let v44 : string = $"*/ }}); //"
    let v45 : bool = Fable.Core.RustInterop.emitRustExpr () v44 
    let v46 : string = $"_func1_from_v6"
    let v47 : Func0<struct (std_string_String * std_string_String option), struct (string * US31)> = Fable.Core.RustInterop.emitRustExpr () v46 
    let v48 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v49 : (struct (std_string_String * std_string_String option) -> struct (string * US31)) = closure188(v47)
    let v50 : Vec<struct (string * US31)> = Fable.Core.RustInterop.emitRustExpr struct (v5, v49) v48 
    let v51 : (struct (string * US31) -> bool) = method201()
    let v52 : Vec<struct (string * US31)> = method202(v50)
    let v53 : string = "v52.into_iter().filter(|x| v51(x.clone().clone())).collect::<Vec<_>>()"
    let v54 : Vec<struct (string * US31)> = Fable.Core.RustInterop.emitRustExpr () v53 
    let v55 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v56 : (struct (string * US31) []) = Fable.Core.RustInterop.emitRustExpr v54 v55 
    let v57 : int32 = v56.Length
    let v58 : bool = v57 > 0
    let v59 : std_string_String = v2.l2
    let v60 : string = "fable_library_rust::String_::fromString($0)"
    let v61 : string = Fable.Core.RustInterop.emitRustExpr v59 v60 
    let v62 : bool = v0 = v61
    let v63 : bool = v58 && v62
    v63
and method199 () : (struct (string * unativeint * Heap5) -> bool) =
    closure187()
and method203 (v0 : Vec<struct (string * unativeint * Heap5)>) : Vec<struct (string * unativeint * Heap5)> =
    v0
and method204 (v0 : int64) : int64 =
    v0
and closure190 () (v0 : chrono_DateTime<chrono_Utc>) : US68 =
    US68_0(v0)
and method205 () : (chrono_DateTime<chrono_Utc> -> US68) =
    closure190()
and method206 (v0 : int32, v1 : Mut2) : bool =
    let v2 : int32 = v1.l0
    let v3 : bool = v2 < v0
    v3
and closure191 () () : string =
    let v0 : string = "[width:24px] [height:30px]"
    v0
and closure186 (v0 : leptos_prelude_ArcMemo<Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>>, v1 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>, v2 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>>) () : leptos_dom_Fragment =
    let v3 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v4 : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v6 : (struct (string * Vec<struct (string * US23 * string * bool * bool)>) []) = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : uint64 = System.Convert.ToUInt64 v6.Length
    let v8 : bool = v7 = 0UL
    let v2394 : leptos_prelude_AnyView_ =
        if v8 then
            let v9 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
            let v10 : string = ""
            let v11 : string = " " + v9 + v10 + ""
            let v12 : string = "class=\"[height:17px]\""
            let v13 : string = " " + v12 + v10 + ""
            let v14 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v15 : string = "fill=\"none\""
            let v16 : string = "height=\"100%\""
            let v17 : string = "viewBox=\"0 0 24 24\""
            let v18 : string = "stroke-width=\"1.5\""
            let v19 : string = "stroke=\"currentColor\""
            let v20 : string = "class=\"text-red-700\""
            let v21 : string = " " + v14 + v10 + ""
            let v22 : string = " " + v15 + v21 + ""
            let v23 : string = " " + v16 + v22 + ""
            let v24 : string = " " + v17 + v23 + ""
            let v25 : string = " " + v18 + v24 + ""
            let v26 : string = " " + v19 + v25 + ""
            let v27 : string = " " + v20 + v26 + ""
            let v28 : string = "stroke-linecap=\"round\""
            let v29 : string = "stroke-linejoin=\"round\""
            let v30 : string = "d=\"M6 18L18 6M6 6l12 12\""
            let v31 : string = " " + v28 + v10 + ""
            let v32 : string = " " + v29 + v31 + ""
            let v33 : string = " " + v30 + v32 + ""
            let v34 : string = "vec![" + v10 + "]"
            let v35 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v34 
            let v36 : string = "leptos::prelude::Fragment::new($0)"
            let v37 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v35 v36 
            let v38 : string = "leptos::prelude::AnyView::from($0)"
            let v39 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v37 v38 
            let v40 : string = "path"
            let v41 : string = "<" + v40 + " " + v33 + ">move || { v39 }</" + v40 + ">"
            let v42 : string = "leptos::prelude::view! { " + v41 + " }"
            let v43 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v42 
            let v44 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v43 |> unbox
            let v45 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v46 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v44 v45 
            let v47 : string = "v46"
            let v48 : string = v47 + v10 
            let v49 : string = v48 + v10 
            let v50 : string = "vec![" + v49 + "]"
            let v51 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v50 
            let v52 : string = "leptos::prelude::Fragment::new($0)"
            let v53 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v51 v52 
            let v54 : string = "leptos::prelude::AnyView::from($0)"
            let v55 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v53 v54 
            let v56 : string = "svg"
            let v57 : string = "<" + v56 + " " + v27 + ">move || { v55 }</" + v56 + ">"
            let v58 : string = "leptos::prelude::view! { " + v57 + " }"
            let v59 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v58 
            let v60 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v59 |> unbox
            let v61 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v62 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v60 v61 
            let v63 : string = "v62"
            let v64 : string = v63 + v10 
            let v65 : string = v64 + v10 
            let v66 : string = "vec![" + v65 + "]"
            let v67 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v66 
            let v68 : string = "leptos::prelude::Fragment::new($0)"
            let v69 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v67 v68 
            let v70 : string = "leptos::prelude::AnyView::from($0)"
            let v71 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v69 v70 
            let v72 : string = "span"
            let v73 : string = "<" + v72 + " " + v13 + ">move || { v71 }</" + v72 + ">"
            let v74 : string = "leptos::prelude::view! { " + v73 + " }"
            let v75 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v74 
            let v76 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v75 |> unbox
            let v77 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v78 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v76 v77 
            let v79 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
            let v80 : string = " " + v79 + v10 + ""
            let v81 : string = "No account selected"
            (* run_target_args'
            let v86 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v87 : string = "&*$0"
            let v88 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v87 
            let _run_target_args'_v86 = v88 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v89 : string = "&*$0"
            let v90 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v89 
            let _run_target_args'_v86 = v90 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v91 : string = "&*$0"
            let v92 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v91 
            let _run_target_args'_v86 = v92 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v94 : Ref<Str> = v81 |> unbox<Ref<Str>>
            let _run_target_args'_v86 = v94 
            #endif
#if FABLE_COMPILER_PYTHON
            let v98 : Ref<Str> = v81 |> unbox<Ref<Str>>
            let _run_target_args'_v86 = v98 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v102 : Ref<Str> = v81 |> unbox<Ref<Str>>
            let _run_target_args'_v86 = v102 
            #endif
#else
            let v106 : Ref<Str> = v81 |> unbox<Ref<Str>>
            let _run_target_args'_v86 = v106 
            #endif
            let v109 : Ref<Str> = _run_target_args'_v86 
            (* run_target_args'
            let v119 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v120 : string = "String::from($0)"
            let v121 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v120 
            let _run_target_args'_v119 = v121 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v122 : string = "String::from($0)"
            let v123 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v122 
            let _run_target_args'_v119 = v123 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v124 : string = "String::from($0)"
            let v125 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v124 
            let _run_target_args'_v119 = v125 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v127 : std_string_String = v109 |> unbox<std_string_String>
            let _run_target_args'_v119 = v127 
            #endif
#if FABLE_COMPILER_PYTHON
            let v131 : std_string_String = v109 |> unbox<std_string_String>
            let _run_target_args'_v119 = v131 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v135 : std_string_String = v109 |> unbox<std_string_String>
            let _run_target_args'_v119 = v135 
            #endif
#else
            let v139 : std_string_String = v109 |> unbox<std_string_String>
            let _run_target_args'_v119 = v139 
            #endif
            let v142 : std_string_String = _run_target_args'_v119 
            let v148 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v149 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v142 v148 
            let v150 : string = "v149"
            let v151 : string = v150 + v10 
            let v152 : string = v151 + v10 
            let v153 : string = "vec![" + v152 + "]"
            let v154 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v153 
            let v155 : string = "leptos::prelude::Fragment::new($0)"
            let v156 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v154 v155 
            let v157 : string = "leptos::prelude::AnyView::from($0)"
            let v158 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v156 v157 
            let v159 : string = "pre"
            let v160 : string = "<" + v159 + " " + v80 + ">move || { v158 }</" + v159 + ">"
            let v161 : string = "leptos::prelude::view! { " + v160 + " }"
            let v162 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v161 
            let v163 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v162 |> unbox
            let v164 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v165 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v163 v164 
            let v166 : string = "v165"
            let v167 : string = v166 + v10 
            let v168 : string = v167 + v10 
            let v169 : string = "v78"
            let v170 : string = ", "
            let v171 : string = v169 + v170 
            let v172 : string = v171 + v168 
            let v173 : string = "vec![" + v172 + "]"
            let v174 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v173 
            let v175 : string = "leptos::prelude::Fragment::new($0)"
            let v176 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v174 v175 
            let v177 : string = "leptos::prelude::AnyView::from($0)"
            let v178 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v176 v177 
            let v179 : string = "div"
            let v180 : string = "<" + v179 + " " + v11 + ">move || { v178 }</" + v179 + ">"
            let v181 : string = "leptos::prelude::view! { " + v180 + " }"
            let v182 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v181 
            let v183 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v182 |> unbox
            let v184 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v185 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v183 v184 
            v185
        else
            let v186 : string = $"leptos::prelude::ArcMemo::get(&$0)"
            let v187 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v1 v186 
            let v188 : ((struct (string * unativeint * Heap5) []) option -> US53) = method138()
            let v189 : (std_string_String -> US53) = method139()
            let v190 : US53 = match v187 with Ok x -> v188 x | Error x -> v189 x
            let v216 : US46 =
                match v190 with
                | US53_1(v213) -> (* Error *)
                    US46_1(v213)
                | US53_0(v191) -> (* Ok *)
                    let v193 : ((struct (string * unativeint * Heap5) []) -> US47) = method140()
                    let v194 : US47 option = v191 |> Option.map v193 
                    let v207 : US47 = US47_1
                    let v208 : US47 = v194 |> Option.defaultValue v207 
                    US46_0(v208)
            match v216 with
            | US46_1(v2213) -> (* Error *)
                let v2214 : string = "fable_library_rust::String_::fromString($0)"
                let v2215 : string = Fable.Core.RustInterop.emitRustExpr v2213 v2214 
                let v2216 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
                let v2217 : string = ""
                let v2218 : string = " " + v2216 + v2217 + ""
                let v2219 : string = "class=\"[height:17px]\""
                let v2220 : string = " " + v2219 + v2217 + ""
                let v2221 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                let v2222 : string = "fill=\"none\""
                let v2223 : string = "height=\"100%\""
                let v2224 : string = "viewBox=\"0 0 24 24\""
                let v2225 : string = "stroke-width=\"1.5\""
                let v2226 : string = "stroke=\"currentColor\""
                let v2227 : string = "class=\"text-red-700\""
                let v2228 : string = " " + v2221 + v2217 + ""
                let v2229 : string = " " + v2222 + v2228 + ""
                let v2230 : string = " " + v2223 + v2229 + ""
                let v2231 : string = " " + v2224 + v2230 + ""
                let v2232 : string = " " + v2225 + v2231 + ""
                let v2233 : string = " " + v2226 + v2232 + ""
                let v2234 : string = " " + v2227 + v2233 + ""
                let v2235 : string = "stroke-linecap=\"round\""
                let v2236 : string = "stroke-linejoin=\"round\""
                let v2237 : string = "d=\"M6 18L18 6M6 6l12 12\""
                let v2238 : string = " " + v2235 + v2217 + ""
                let v2239 : string = " " + v2236 + v2238 + ""
                let v2240 : string = " " + v2237 + v2239 + ""
                let v2241 : string = "vec![" + v2217 + "]"
                let v2242 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2241 
                let v2243 : string = "leptos::prelude::Fragment::new($0)"
                let v2244 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2242 v2243 
                let v2245 : string = "leptos::prelude::AnyView::from($0)"
                let v2246 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2244 v2245 
                let v2247 : string = "path"
                let v2248 : string = "<" + v2247 + " " + v2240 + ">move || { v2246 }</" + v2247 + ">"
                let v2249 : string = "leptos::prelude::view! { " + v2248 + " }"
                let v2250 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2249 
                let v2251 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v2250 |> unbox
                let v2252 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v2253 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2251 v2252 
                let v2254 : string = "v2253"
                let v2255 : string = v2254 + v2217 
                let v2256 : string = v2255 + v2217 
                let v2257 : string = "vec![" + v2256 + "]"
                let v2258 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2257 
                let v2259 : string = "leptos::prelude::Fragment::new($0)"
                let v2260 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2258 v2259 
                let v2261 : string = "leptos::prelude::AnyView::from($0)"
                let v2262 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2260 v2261 
                let v2263 : string = "svg"
                let v2264 : string = "<" + v2263 + " " + v2234 + ">move || { v2262 }</" + v2263 + ">"
                let v2265 : string = "leptos::prelude::view! { " + v2264 + " }"
                let v2266 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2265 
                let v2267 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v2266 |> unbox
                let v2268 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v2269 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2267 v2268 
                let v2270 : string = "v2269"
                let v2271 : string = v2270 + v2217 
                let v2272 : string = v2271 + v2217 
                let v2273 : string = "vec![" + v2272 + "]"
                let v2274 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2273 
                let v2275 : string = "leptos::prelude::Fragment::new($0)"
                let v2276 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2274 v2275 
                let v2277 : string = "leptos::prelude::AnyView::from($0)"
                let v2278 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2276 v2277 
                let v2279 : string = "span"
                let v2280 : string = "<" + v2279 + " " + v2220 + ">move || { v2278 }</" + v2279 + ">"
                let v2281 : string = "leptos::prelude::view! { " + v2280 + " }"
                let v2282 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2281 
                let v2283 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v2282 |> unbox
                let v2284 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v2285 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2283 v2284 
                let v2286 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
                let v2287 : string = " " + v2286 + v2217 + ""
                (* run_target_args'
                let v2292 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v2293 : string = "&*$0"
                let v2294 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2215 v2293 
                let _run_target_args'_v2292 = v2294 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v2295 : string = "&*$0"
                let v2296 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2215 v2295 
                let _run_target_args'_v2292 = v2296 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v2297 : string = "&*$0"
                let v2298 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2215 v2297 
                let _run_target_args'_v2292 = v2298 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v2300 : Ref<Str> = v2215 |> unbox<Ref<Str>>
                let _run_target_args'_v2292 = v2300 
                #endif
#if FABLE_COMPILER_PYTHON
                let v2304 : Ref<Str> = v2215 |> unbox<Ref<Str>>
                let _run_target_args'_v2292 = v2304 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v2308 : Ref<Str> = v2215 |> unbox<Ref<Str>>
                let _run_target_args'_v2292 = v2308 
                #endif
#else
                let v2312 : Ref<Str> = v2215 |> unbox<Ref<Str>>
                let _run_target_args'_v2292 = v2312 
                #endif
                let v2315 : Ref<Str> = _run_target_args'_v2292 
                (* run_target_args'
                let v2325 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v2326 : string = "String::from($0)"
                let v2327 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2315 v2326 
                let _run_target_args'_v2325 = v2327 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v2328 : string = "String::from($0)"
                let v2329 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2315 v2328 
                let _run_target_args'_v2325 = v2329 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v2330 : string = "String::from($0)"
                let v2331 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2315 v2330 
                let _run_target_args'_v2325 = v2331 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v2333 : std_string_String = v2315 |> unbox<std_string_String>
                let _run_target_args'_v2325 = v2333 
                #endif
#if FABLE_COMPILER_PYTHON
                let v2337 : std_string_String = v2315 |> unbox<std_string_String>
                let _run_target_args'_v2325 = v2337 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v2341 : std_string_String = v2315 |> unbox<std_string_String>
                let _run_target_args'_v2325 = v2341 
                #endif
#else
                let v2345 : std_string_String = v2315 |> unbox<std_string_String>
                let _run_target_args'_v2325 = v2345 
                #endif
                let v2348 : std_string_String = _run_target_args'_v2325 
                let v2354 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                let v2355 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2348 v2354 
                let v2356 : string = "v2355"
                let v2357 : string = v2356 + v2217 
                let v2358 : string = v2357 + v2217 
                let v2359 : string = "vec![" + v2358 + "]"
                let v2360 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2359 
                let v2361 : string = "leptos::prelude::Fragment::new($0)"
                let v2362 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2360 v2361 
                let v2363 : string = "leptos::prelude::AnyView::from($0)"
                let v2364 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2362 v2363 
                let v2365 : string = "pre"
                let v2366 : string = "<" + v2365 + " " + v2287 + ">move || { v2364 }</" + v2365 + ">"
                let v2367 : string = "leptos::prelude::view! { " + v2366 + " }"
                let v2368 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2367 
                let v2369 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v2368 |> unbox
                let v2370 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v2371 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2369 v2370 
                let v2372 : string = "v2371"
                let v2373 : string = v2372 + v2217 
                let v2374 : string = v2373 + v2217 
                let v2375 : string = "v2285"
                let v2376 : string = ", "
                let v2377 : string = v2375 + v2376 
                let v2378 : string = v2377 + v2374 
                let v2379 : string = "vec![" + v2378 + "]"
                let v2380 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2379 
                let v2381 : string = "leptos::prelude::Fragment::new($0)"
                let v2382 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2380 v2381 
                let v2383 : string = "leptos::prelude::AnyView::from($0)"
                let v2384 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2382 v2383 
                let v2385 : string = "div"
                let v2386 : string = "<" + v2385 + " " + v2218 + ">move || { v2384 }</" + v2385 + ">"
                let v2387 : string = "leptos::prelude::view! { " + v2386 + " }"
                let v2388 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2387 
                let v2389 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v2388 |> unbox
                let v2390 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v2391 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2389 v2390 
                v2391
            | US46_0(v217) -> (* Ok *)
                match v217 with
                | US47_0(v218) -> (* Some *)
                    let v219 : string = "$0.to_vec()"
                    let v220 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr v218 v219 
                    let v221 : (struct (string * unativeint * Heap5) -> bool) = method199()
                    let v222 : Vec<struct (string * unativeint * Heap5)> = method203(v220)
                    let v223 : string = "v222.into_iter().filter(|x| v221(x.clone().clone())).collect::<Vec<_>>()"
                    let v224 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr () v223 
                    let v225 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v226 : string = ""
                    let v227 : string = " " + v225 + v226 + ""
                    let v228 : string = "Block Timestamp"
                    (* run_target_args'
                    let v233 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v234 : string = "&*$0"
                    let v235 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v228 v234 
                    let _run_target_args'_v233 = v235 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v236 : string = "&*$0"
                    let v237 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v228 v236 
                    let _run_target_args'_v233 = v237 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v238 : string = "&*$0"
                    let v239 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v228 v238 
                    let _run_target_args'_v233 = v239 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v241 : Ref<Str> = v228 |> unbox<Ref<Str>>
                    let _run_target_args'_v233 = v241 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v245 : Ref<Str> = v228 |> unbox<Ref<Str>>
                    let _run_target_args'_v233 = v245 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v249 : Ref<Str> = v228 |> unbox<Ref<Str>>
                    let _run_target_args'_v233 = v249 
                    #endif
#else
                    let v253 : Ref<Str> = v228 |> unbox<Ref<Str>>
                    let _run_target_args'_v233 = v253 
                    #endif
                    let v256 : Ref<Str> = _run_target_args'_v233 
                    (* run_target_args'
                    let v266 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v267 : string = "String::from($0)"
                    let v268 : std_string_String = Fable.Core.RustInterop.emitRustExpr v256 v267 
                    let _run_target_args'_v266 = v268 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v269 : string = "String::from($0)"
                    let v270 : std_string_String = Fable.Core.RustInterop.emitRustExpr v256 v269 
                    let _run_target_args'_v266 = v270 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v271 : string = "String::from($0)"
                    let v272 : std_string_String = Fable.Core.RustInterop.emitRustExpr v256 v271 
                    let _run_target_args'_v266 = v272 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v274 : std_string_String = v256 |> unbox<std_string_String>
                    let _run_target_args'_v266 = v274 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v278 : std_string_String = v256 |> unbox<std_string_String>
                    let _run_target_args'_v266 = v278 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v282 : std_string_String = v256 |> unbox<std_string_String>
                    let _run_target_args'_v266 = v282 
                    #endif
#else
                    let v286 : std_string_String = v256 |> unbox<std_string_String>
                    let _run_target_args'_v266 = v286 
                    #endif
                    let v289 : std_string_String = _run_target_args'_v266 
                    let v295 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v296 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v289 v295 
                    let v297 : string = "v296"
                    let v298 : string = v297 + v226 
                    let v299 : string = v298 + v226 
                    let v300 : string = "vec![" + v299 + "]"
                    let v301 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v300 
                    let v302 : string = "leptos::prelude::Fragment::new($0)"
                    let v303 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v301 v302 
                    let v304 : string = "leptos::prelude::AnyView::from($0)"
                    let v305 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v303 v304 
                    let v306 : string = "th"
                    let v307 : string = "<" + v306 + " " + v227 + ">move || { v305 }</" + v306 + ">"
                    let v308 : string = "leptos::prelude::view! { " + v307 + " }"
                    let v309 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v308 
                    let v310 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v309 |> unbox
                    let v311 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v312 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v310 v311 
                    let v313 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v314 : string = " " + v313 + v226 + ""
                    let v315 : string = "Predecessor"
                    (* run_target_args'
                    let v320 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v321 : string = "&*$0"
                    let v322 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v315 v321 
                    let _run_target_args'_v320 = v322 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v323 : string = "&*$0"
                    let v324 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v315 v323 
                    let _run_target_args'_v320 = v324 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v325 : string = "&*$0"
                    let v326 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v315 v325 
                    let _run_target_args'_v320 = v326 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v328 : Ref<Str> = v315 |> unbox<Ref<Str>>
                    let _run_target_args'_v320 = v328 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v332 : Ref<Str> = v315 |> unbox<Ref<Str>>
                    let _run_target_args'_v320 = v332 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v336 : Ref<Str> = v315 |> unbox<Ref<Str>>
                    let _run_target_args'_v320 = v336 
                    #endif
#else
                    let v340 : Ref<Str> = v315 |> unbox<Ref<Str>>
                    let _run_target_args'_v320 = v340 
                    #endif
                    let v343 : Ref<Str> = _run_target_args'_v320 
                    (* run_target_args'
                    let v353 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v354 : string = "String::from($0)"
                    let v355 : std_string_String = Fable.Core.RustInterop.emitRustExpr v343 v354 
                    let _run_target_args'_v353 = v355 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v356 : string = "String::from($0)"
                    let v357 : std_string_String = Fable.Core.RustInterop.emitRustExpr v343 v356 
                    let _run_target_args'_v353 = v357 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v358 : string = "String::from($0)"
                    let v359 : std_string_String = Fable.Core.RustInterop.emitRustExpr v343 v358 
                    let _run_target_args'_v353 = v359 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v361 : std_string_String = v343 |> unbox<std_string_String>
                    let _run_target_args'_v353 = v361 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v365 : std_string_String = v343 |> unbox<std_string_String>
                    let _run_target_args'_v353 = v365 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v369 : std_string_String = v343 |> unbox<std_string_String>
                    let _run_target_args'_v353 = v369 
                    #endif
#else
                    let v373 : std_string_String = v343 |> unbox<std_string_String>
                    let _run_target_args'_v353 = v373 
                    #endif
                    let v376 : std_string_String = _run_target_args'_v353 
                    let v382 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v383 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v376 v382 
                    let v384 : string = "v383"
                    let v385 : string = v384 + v226 
                    let v386 : string = v385 + v226 
                    let v387 : string = "vec![" + v386 + "]"
                    let v388 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v387 
                    let v389 : string = "leptos::prelude::Fragment::new($0)"
                    let v390 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v388 v389 
                    let v391 : string = "leptos::prelude::AnyView::from($0)"
                    let v392 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v390 v391 
                    let v393 : string = "<" + v306 + " " + v314 + ">move || { v392 }</" + v306 + ">"
                    let v394 : string = "leptos::prelude::view! { " + v393 + " }"
                    let v395 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v394 
                    let v396 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v395 |> unbox
                    let v397 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v398 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v396 v397 
                    let v399 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v400 : string = " " + v399 + v226 + ""
                    let v401 : string = "Receiver"
                    (* run_target_args'
                    let v406 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v407 : string = "&*$0"
                    let v408 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v401 v407 
                    let _run_target_args'_v406 = v408 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v409 : string = "&*$0"
                    let v410 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v401 v409 
                    let _run_target_args'_v406 = v410 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v411 : string = "&*$0"
                    let v412 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v401 v411 
                    let _run_target_args'_v406 = v412 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v414 : Ref<Str> = v401 |> unbox<Ref<Str>>
                    let _run_target_args'_v406 = v414 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v418 : Ref<Str> = v401 |> unbox<Ref<Str>>
                    let _run_target_args'_v406 = v418 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v422 : Ref<Str> = v401 |> unbox<Ref<Str>>
                    let _run_target_args'_v406 = v422 
                    #endif
#else
                    let v426 : Ref<Str> = v401 |> unbox<Ref<Str>>
                    let _run_target_args'_v406 = v426 
                    #endif
                    let v429 : Ref<Str> = _run_target_args'_v406 
                    (* run_target_args'
                    let v439 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v440 : string = "String::from($0)"
                    let v441 : std_string_String = Fable.Core.RustInterop.emitRustExpr v429 v440 
                    let _run_target_args'_v439 = v441 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v442 : string = "String::from($0)"
                    let v443 : std_string_String = Fable.Core.RustInterop.emitRustExpr v429 v442 
                    let _run_target_args'_v439 = v443 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v444 : string = "String::from($0)"
                    let v445 : std_string_String = Fable.Core.RustInterop.emitRustExpr v429 v444 
                    let _run_target_args'_v439 = v445 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v447 : std_string_String = v429 |> unbox<std_string_String>
                    let _run_target_args'_v439 = v447 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v451 : std_string_String = v429 |> unbox<std_string_String>
                    let _run_target_args'_v439 = v451 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v455 : std_string_String = v429 |> unbox<std_string_String>
                    let _run_target_args'_v439 = v455 
                    #endif
#else
                    let v459 : std_string_String = v429 |> unbox<std_string_String>
                    let _run_target_args'_v439 = v459 
                    #endif
                    let v462 : std_string_String = _run_target_args'_v439 
                    let v468 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v469 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v462 v468 
                    let v470 : string = "v469"
                    let v471 : string = v470 + v226 
                    let v472 : string = v471 + v226 
                    let v473 : string = "vec![" + v472 + "]"
                    let v474 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v473 
                    let v475 : string = "leptos::prelude::Fragment::new($0)"
                    let v476 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v474 v475 
                    let v477 : string = "leptos::prelude::AnyView::from($0)"
                    let v478 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v476 v477 
                    let v479 : string = "<" + v306 + " " + v400 + ">move || { v478 }</" + v306 + ">"
                    let v480 : string = "leptos::prelude::view! { " + v479 + " }"
                    let v481 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v480 
                    let v482 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v481 |> unbox
                    let v483 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v484 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v482 v483 
                    let v485 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v486 : string = " " + v485 + v226 + ""
                    let v487 : string = "Fee"
                    (* run_target_args'
                    let v492 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v493 : string = "&*$0"
                    let v494 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v487 v493 
                    let _run_target_args'_v492 = v494 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v495 : string = "&*$0"
                    let v496 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v487 v495 
                    let _run_target_args'_v492 = v496 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v497 : string = "&*$0"
                    let v498 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v487 v497 
                    let _run_target_args'_v492 = v498 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v500 : Ref<Str> = v487 |> unbox<Ref<Str>>
                    let _run_target_args'_v492 = v500 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v504 : Ref<Str> = v487 |> unbox<Ref<Str>>
                    let _run_target_args'_v492 = v504 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v508 : Ref<Str> = v487 |> unbox<Ref<Str>>
                    let _run_target_args'_v492 = v508 
                    #endif
#else
                    let v512 : Ref<Str> = v487 |> unbox<Ref<Str>>
                    let _run_target_args'_v492 = v512 
                    #endif
                    let v515 : Ref<Str> = _run_target_args'_v492 
                    (* run_target_args'
                    let v525 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v526 : string = "String::from($0)"
                    let v527 : std_string_String = Fable.Core.RustInterop.emitRustExpr v515 v526 
                    let _run_target_args'_v525 = v527 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v528 : string = "String::from($0)"
                    let v529 : std_string_String = Fable.Core.RustInterop.emitRustExpr v515 v528 
                    let _run_target_args'_v525 = v529 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v530 : string = "String::from($0)"
                    let v531 : std_string_String = Fable.Core.RustInterop.emitRustExpr v515 v530 
                    let _run_target_args'_v525 = v531 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v533 : std_string_String = v515 |> unbox<std_string_String>
                    let _run_target_args'_v525 = v533 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v537 : std_string_String = v515 |> unbox<std_string_String>
                    let _run_target_args'_v525 = v537 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v541 : std_string_String = v515 |> unbox<std_string_String>
                    let _run_target_args'_v525 = v541 
                    #endif
#else
                    let v545 : std_string_String = v515 |> unbox<std_string_String>
                    let _run_target_args'_v525 = v545 
                    #endif
                    let v548 : std_string_String = _run_target_args'_v525 
                    let v554 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v555 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v548 v554 
                    let v556 : string = "v555"
                    let v557 : string = v556 + v226 
                    let v558 : string = v557 + v226 
                    let v559 : string = "vec![" + v558 + "]"
                    let v560 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v559 
                    let v561 : string = "leptos::prelude::Fragment::new($0)"
                    let v562 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v560 v561 
                    let v563 : string = "leptos::prelude::AnyView::from($0)"
                    let v564 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v562 v563 
                    let v565 : string = "<" + v306 + " " + v486 + ">move || { v564 }</" + v306 + ">"
                    let v566 : string = "leptos::prelude::view! { " + v565 + " }"
                    let v567 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v566 
                    let v568 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v567 |> unbox
                    let v569 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v570 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v568 v569 
                    let v571 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v572 : string = " " + v571 + v226 + ""
                    let v573 : string = "Result"
                    (* run_target_args'
                    let v578 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v579 : string = "&*$0"
                    let v580 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v573 v579 
                    let _run_target_args'_v578 = v580 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v581 : string = "&*$0"
                    let v582 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v573 v581 
                    let _run_target_args'_v578 = v582 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v583 : string = "&*$0"
                    let v584 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v573 v583 
                    let _run_target_args'_v578 = v584 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v586 : Ref<Str> = v573 |> unbox<Ref<Str>>
                    let _run_target_args'_v578 = v586 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v590 : Ref<Str> = v573 |> unbox<Ref<Str>>
                    let _run_target_args'_v578 = v590 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v594 : Ref<Str> = v573 |> unbox<Ref<Str>>
                    let _run_target_args'_v578 = v594 
                    #endif
#else
                    let v598 : Ref<Str> = v573 |> unbox<Ref<Str>>
                    let _run_target_args'_v578 = v598 
                    #endif
                    let v601 : Ref<Str> = _run_target_args'_v578 
                    (* run_target_args'
                    let v611 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v612 : string = "String::from($0)"
                    let v613 : std_string_String = Fable.Core.RustInterop.emitRustExpr v601 v612 
                    let _run_target_args'_v611 = v613 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v614 : string = "String::from($0)"
                    let v615 : std_string_String = Fable.Core.RustInterop.emitRustExpr v601 v614 
                    let _run_target_args'_v611 = v615 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v616 : string = "String::from($0)"
                    let v617 : std_string_String = Fable.Core.RustInterop.emitRustExpr v601 v616 
                    let _run_target_args'_v611 = v617 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v619 : std_string_String = v601 |> unbox<std_string_String>
                    let _run_target_args'_v611 = v619 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v623 : std_string_String = v601 |> unbox<std_string_String>
                    let _run_target_args'_v611 = v623 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v627 : std_string_String = v601 |> unbox<std_string_String>
                    let _run_target_args'_v611 = v627 
                    #endif
#else
                    let v631 : std_string_String = v601 |> unbox<std_string_String>
                    let _run_target_args'_v611 = v631 
                    #endif
                    let v634 : std_string_String = _run_target_args'_v611 
                    let v640 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v641 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v634 v640 
                    let v642 : string = "v641"
                    let v643 : string = v642 + v226 
                    let v644 : string = v643 + v226 
                    let v645 : string = "vec![" + v644 + "]"
                    let v646 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v645 
                    let v647 : string = "leptos::prelude::Fragment::new($0)"
                    let v648 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v646 v647 
                    let v649 : string = "leptos::prelude::AnyView::from($0)"
                    let v650 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v648 v649 
                    let v651 : string = "<" + v306 + " " + v572 + ">move || { v650 }</" + v306 + ">"
                    let v652 : string = "leptos::prelude::view! { " + v651 + " }"
                    let v653 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v652 
                    let v654 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v653 |> unbox
                    let v655 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v656 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v654 v655 
                    let v657 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                    let v658 : string = " " + v657 + v226 + ""
                    let v659 : string = "Status"
                    (* run_target_args'
                    let v664 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v665 : string = "&*$0"
                    let v666 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v659 v665 
                    let _run_target_args'_v664 = v666 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v667 : string = "&*$0"
                    let v668 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v659 v667 
                    let _run_target_args'_v664 = v668 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v669 : string = "&*$0"
                    let v670 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v659 v669 
                    let _run_target_args'_v664 = v670 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v672 : Ref<Str> = v659 |> unbox<Ref<Str>>
                    let _run_target_args'_v664 = v672 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v676 : Ref<Str> = v659 |> unbox<Ref<Str>>
                    let _run_target_args'_v664 = v676 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v680 : Ref<Str> = v659 |> unbox<Ref<Str>>
                    let _run_target_args'_v664 = v680 
                    #endif
#else
                    let v684 : Ref<Str> = v659 |> unbox<Ref<Str>>
                    let _run_target_args'_v664 = v684 
                    #endif
                    let v687 : Ref<Str> = _run_target_args'_v664 
                    (* run_target_args'
                    let v697 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v698 : string = "String::from($0)"
                    let v699 : std_string_String = Fable.Core.RustInterop.emitRustExpr v687 v698 
                    let _run_target_args'_v697 = v699 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v700 : string = "String::from($0)"
                    let v701 : std_string_String = Fable.Core.RustInterop.emitRustExpr v687 v700 
                    let _run_target_args'_v697 = v701 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v702 : string = "String::from($0)"
                    let v703 : std_string_String = Fable.Core.RustInterop.emitRustExpr v687 v702 
                    let _run_target_args'_v697 = v703 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v705 : std_string_String = v687 |> unbox<std_string_String>
                    let _run_target_args'_v697 = v705 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v709 : std_string_String = v687 |> unbox<std_string_String>
                    let _run_target_args'_v697 = v709 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v713 : std_string_String = v687 |> unbox<std_string_String>
                    let _run_target_args'_v697 = v713 
                    #endif
#else
                    let v717 : std_string_String = v687 |> unbox<std_string_String>
                    let _run_target_args'_v697 = v717 
                    #endif
                    let v720 : std_string_String = _run_target_args'_v697 
                    let v726 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v727 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v720 v726 
                    let v728 : string = "v727"
                    let v729 : string = v728 + v226 
                    let v730 : string = v729 + v226 
                    let v731 : string = "vec![" + v730 + "]"
                    let v732 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v731 
                    let v733 : string = "leptos::prelude::Fragment::new($0)"
                    let v734 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v732 v733 
                    let v735 : string = "leptos::prelude::AnyView::from($0)"
                    let v736 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v734 v735 
                    let v737 : string = "<" + v306 + " " + v658 + ">move || { v736 }</" + v306 + ">"
                    let v738 : string = "leptos::prelude::view! { " + v737 + " }"
                    let v739 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v738 
                    let v740 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v739 |> unbox
                    let v741 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v742 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v740 v741 
                    let v743 : string = "v742"
                    let v744 : string = v743 + v226 
                    let v745 : string = v744 + v226 
                    let v746 : string = "v656"
                    let v747 : string = ", "
                    let v748 : string = v746 + v747 
                    let v749 : string = v748 + v745 
                    let v750 : string = "v570"
                    let v751 : string = v750 + v747 
                    let v752 : string = v751 + v749 
                    let v753 : string = "v484"
                    let v754 : string = v753 + v747 
                    let v755 : string = v754 + v752 
                    let v756 : string = "v398"
                    let v757 : string = v756 + v747 
                    let v758 : string = v757 + v755 
                    let v759 : string = "v312"
                    let v760 : string = v759 + v747 
                    let v761 : string = v760 + v758 
                    let v762 : string = "vec![" + v761 + "]"
                    let v763 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v762 
                    let v764 : string = "leptos::prelude::Fragment::new($0)"
                    let v765 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v763 v764 
                    let v766 : string = "leptos::prelude::AnyView::from($0)"
                    let v767 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v765 v766 
                    let v768 : string = "tr"
                    let v769 : string = "<" + v768 + " " + v226 + ">move || { v767 }</" + v768 + ">"
                    let v770 : string = "leptos::prelude::view! { " + v769 + " }"
                    let v771 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v770 
                    let v772 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>> = v771 |> unbox
                    let v773 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v774 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v772 v773 
                    let v775 : string = "v774"
                    let v776 : string = v775 + v226 
                    let v777 : string = v776 + v226 
                    let v778 : string = "vec![" + v777 + "]"
                    let v779 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v778 
                    let v780 : string = "leptos::prelude::Fragment::new($0)"
                    let v781 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v779 v780 
                    let v782 : string = $"leptos::prelude::ArcMemo::get(&$0)"
                    let v783 : Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v0 v782 
                    let v784 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                    let v785 : bool = Fable.Core.RustInterop.emitRustExpr v224 v784 
                    let v786 : string = "x"
                    let struct (v787 : string, v788 : unativeint, v789 : Heap5) = Fable.Core.RustInterop.emitRustExpr () v786 
                    let v790 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                    let v791 : (Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> []) = Fable.Core.RustInterop.emitRustExpr v783 v790 
                    let v797 : int32 = v788 |> int32 
                    let v806 : Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String> = v791.[int v797]
                    let v809 : string = "class=\"odd:bg-gray-50 dark:odd:bg-gray-800/50\""
                    let v810 : string = " " + v809 + v226 + ""
                    let v811 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v812 : string = " " + v811 + v226 + ""
                    let v813 : std_string_String = v789.l5
                    let v814 : string = "fable_library_rust::String_::fromString($0)"
                    let v815 : string = Fable.Core.RustInterop.emitRustExpr v813 v814 
                    let v817 : (string -> int64) = int64
                    let v818 : int64 = v817 v815
                    let v821 : int64 = method204(v818)
                    let v822 : int64 = v821 / 1000L
                    let v823 : string = "chrono::DateTime::from_timestamp_micros($0)"
                    let v824 : chrono_DateTime<chrono_Utc> option = Fable.Core.RustInterop.emitRustExpr v822 v823 
                    let v826 : (chrono_DateTime<chrono_Utc> -> US68) = method205()
                    let v827 : US68 option = v824 |> Option.map v826 
                    let v840 : US68 = US68_1
                    let v841 : US68 = v827 |> Option.defaultValue v840 
                    let v860 : US31 =
                        match v841 with
                        | US68_1 -> (* None *)
                            US31_1
                        | US68_0(v845) -> (* Some *)
                            let v846 : string = "$0.naive_utc()"
                            let v847 : chrono_NaiveDateTime = Fable.Core.RustInterop.emitRustExpr v845 v846 
                            let v848 : string = "chrono::offset::TimeZone::from_utc_datetime(&chrono::Local, &$0)"
                            let v849 : chrono_DateTime<chrono_Local> = Fable.Core.RustInterop.emitRustExpr v847 v848 
                            let v850 : string = "%Y-%m-%d %H:%M:%S"
                            let v851 : string = "r#\"" + v850 + "\"#"
                            let v852 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v851 
                            let v853 : string = "$0.format($1).to_string()"
                            let v854 : std_string_String = Fable.Core.RustInterop.emitRustExpr struct (v849, v852) v853 
                            let v855 : string = "fable_library_rust::String_::fromString($0)"
                            let v856 : string = Fable.Core.RustInterop.emitRustExpr v854 v855 
                            US31_0(v856)
                    let v866 : US69 =
                        match v860 with
                        | US31_1 -> (* None *)
                            let v863 : string = "resultm.from_option / Option does not have a value."
                            US69_1(v863)
                        | US31_0(v861) -> (* Some *)
                            US69_0(v861)
                    let v871 : string =
                        match v866 with
                        | US69_1(v868) -> (* Error *)
                            let v869 : string = "sm'.to_string result / Error: " + v868 + ""
                            v869
                        | US69_0(v867) -> (* Ok *)
                            v867
                    (* run_target_args'
                    let v876 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v877 : string = "&*$0"
                    let v878 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v871 v877 
                    let _run_target_args'_v876 = v878 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v879 : string = "&*$0"
                    let v880 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v871 v879 
                    let _run_target_args'_v876 = v880 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v881 : string = "&*$0"
                    let v882 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v871 v881 
                    let _run_target_args'_v876 = v882 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v884 : Ref<Str> = v871 |> unbox<Ref<Str>>
                    let _run_target_args'_v876 = v884 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v888 : Ref<Str> = v871 |> unbox<Ref<Str>>
                    let _run_target_args'_v876 = v888 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v892 : Ref<Str> = v871 |> unbox<Ref<Str>>
                    let _run_target_args'_v876 = v892 
                    #endif
#else
                    let v896 : Ref<Str> = v871 |> unbox<Ref<Str>>
                    let _run_target_args'_v876 = v896 
                    #endif
                    let v899 : Ref<Str> = _run_target_args'_v876 
                    (* run_target_args'
                    let v909 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v910 : string = "String::from($0)"
                    let v911 : std_string_String = Fable.Core.RustInterop.emitRustExpr v899 v910 
                    let _run_target_args'_v909 = v911 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v912 : string = "String::from($0)"
                    let v913 : std_string_String = Fable.Core.RustInterop.emitRustExpr v899 v912 
                    let _run_target_args'_v909 = v913 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v914 : string = "String::from($0)"
                    let v915 : std_string_String = Fable.Core.RustInterop.emitRustExpr v899 v914 
                    let _run_target_args'_v909 = v915 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v917 : std_string_String = v899 |> unbox<std_string_String>
                    let _run_target_args'_v909 = v917 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v921 : std_string_String = v899 |> unbox<std_string_String>
                    let _run_target_args'_v909 = v921 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v925 : std_string_String = v899 |> unbox<std_string_String>
                    let _run_target_args'_v909 = v925 
                    #endif
#else
                    let v929 : std_string_String = v899 |> unbox<std_string_String>
                    let _run_target_args'_v909 = v929 
                    #endif
                    let v932 : std_string_String = _run_target_args'_v909 
                    let v938 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v939 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v932 v938 
                    let v940 : string = "v939"
                    let v941 : string = v940 + v226 
                    let v942 : string = v941 + v226 
                    let v943 : string = "vec![" + v942 + "]"
                    let v944 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v943 
                    let v945 : string = "leptos::prelude::Fragment::new($0)"
                    let v946 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v944 v945 
                    let v947 : string = "leptos::prelude::AnyView::from($0)"
                    let v948 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v946 v947 
                    let v949 : string = "td"
                    let v950 : string = "<" + v949 + " " + v812 + ">move || { v948 }</" + v949 + ">"
                    let v951 : string = "leptos::prelude::view! { " + v950 + " }"
                    let v952 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v951 
                    let v953 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v952 |> unbox
                    let v954 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v955 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v953 v954 
                    let v956 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v957 : string = " " + v956 + v226 + ""
                    let v958 : std_string_String = v789.l1
                    let v959 : string = "fable_library_rust::String_::fromString($0)"
                    let v960 : string = Fable.Core.RustInterop.emitRustExpr v958 v959 
                    (* run_target_args'
                    let v965 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v966 : string = "&*$0"
                    let v967 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v960 v966 
                    let _run_target_args'_v965 = v967 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v968 : string = "&*$0"
                    let v969 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v960 v968 
                    let _run_target_args'_v965 = v969 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v970 : string = "&*$0"
                    let v971 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v960 v970 
                    let _run_target_args'_v965 = v971 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v973 : Ref<Str> = v960 |> unbox<Ref<Str>>
                    let _run_target_args'_v965 = v973 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v977 : Ref<Str> = v960 |> unbox<Ref<Str>>
                    let _run_target_args'_v965 = v977 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v981 : Ref<Str> = v960 |> unbox<Ref<Str>>
                    let _run_target_args'_v965 = v981 
                    #endif
#else
                    let v985 : Ref<Str> = v960 |> unbox<Ref<Str>>
                    let _run_target_args'_v965 = v985 
                    #endif
                    let v988 : Ref<Str> = _run_target_args'_v965 
                    (* run_target_args'
                    let v998 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v999 : string = "String::from($0)"
                    let v1000 : std_string_String = Fable.Core.RustInterop.emitRustExpr v988 v999 
                    let _run_target_args'_v998 = v1000 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1001 : string = "String::from($0)"
                    let v1002 : std_string_String = Fable.Core.RustInterop.emitRustExpr v988 v1001 
                    let _run_target_args'_v998 = v1002 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1003 : string = "String::from($0)"
                    let v1004 : std_string_String = Fable.Core.RustInterop.emitRustExpr v988 v1003 
                    let _run_target_args'_v998 = v1004 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1006 : std_string_String = v988 |> unbox<std_string_String>
                    let _run_target_args'_v998 = v1006 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1010 : std_string_String = v988 |> unbox<std_string_String>
                    let _run_target_args'_v998 = v1010 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1014 : std_string_String = v988 |> unbox<std_string_String>
                    let _run_target_args'_v998 = v1014 
                    #endif
#else
                    let v1018 : std_string_String = v988 |> unbox<std_string_String>
                    let _run_target_args'_v998 = v1018 
                    #endif
                    let v1021 : std_string_String = _run_target_args'_v998 
                    let v1027 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v1028 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1021 v1027 
                    let v1029 : string = "v1028"
                    let v1030 : string = v1029 + v226 
                    let v1031 : string = v1030 + v226 
                    let v1032 : string = "vec![" + v1031 + "]"
                    let v1033 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1032 
                    let v1034 : string = "leptos::prelude::Fragment::new($0)"
                    let v1035 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1033 v1034 
                    let v1036 : string = "leptos::prelude::AnyView::from($0)"
                    let v1037 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1035 v1036 
                    let v1038 : string = "<" + v949 + " " + v957 + ">move || { v1037 }</" + v949 + ">"
                    let v1039 : string = "leptos::prelude::view! { " + v1038 + " }"
                    let v1040 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1039 
                    let v1041 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1040 |> unbox
                    let v1042 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1043 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1041 v1042 
                    let v1044 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v1045 : string = " " + v1044 + v226 + ""
                    let v1046 : std_string_String = v789.l2
                    let v1047 : string = "fable_library_rust::String_::fromString($0)"
                    let v1048 : string = Fable.Core.RustInterop.emitRustExpr v1046 v1047 
                    (* run_target_args'
                    let v1053 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1054 : string = "&*$0"
                    let v1055 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1048 v1054 
                    let _run_target_args'_v1053 = v1055 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1056 : string = "&*$0"
                    let v1057 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1048 v1056 
                    let _run_target_args'_v1053 = v1057 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1058 : string = "&*$0"
                    let v1059 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1048 v1058 
                    let _run_target_args'_v1053 = v1059 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1061 : Ref<Str> = v1048 |> unbox<Ref<Str>>
                    let _run_target_args'_v1053 = v1061 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1065 : Ref<Str> = v1048 |> unbox<Ref<Str>>
                    let _run_target_args'_v1053 = v1065 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1069 : Ref<Str> = v1048 |> unbox<Ref<Str>>
                    let _run_target_args'_v1053 = v1069 
                    #endif
#else
                    let v1073 : Ref<Str> = v1048 |> unbox<Ref<Str>>
                    let _run_target_args'_v1053 = v1073 
                    #endif
                    let v1076 : Ref<Str> = _run_target_args'_v1053 
                    (* run_target_args'
                    let v1086 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1087 : string = "String::from($0)"
                    let v1088 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1076 v1087 
                    let _run_target_args'_v1086 = v1088 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1089 : string = "String::from($0)"
                    let v1090 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1076 v1089 
                    let _run_target_args'_v1086 = v1090 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1091 : string = "String::from($0)"
                    let v1092 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1076 v1091 
                    let _run_target_args'_v1086 = v1092 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1094 : std_string_String = v1076 |> unbox<std_string_String>
                    let _run_target_args'_v1086 = v1094 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1098 : std_string_String = v1076 |> unbox<std_string_String>
                    let _run_target_args'_v1086 = v1098 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1102 : std_string_String = v1076 |> unbox<std_string_String>
                    let _run_target_args'_v1086 = v1102 
                    #endif
#else
                    let v1106 : std_string_String = v1076 |> unbox<std_string_String>
                    let _run_target_args'_v1086 = v1106 
                    #endif
                    let v1109 : std_string_String = _run_target_args'_v1086 
                    let v1115 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v1116 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1109 v1115 
                    let v1117 : string = "v1116"
                    let v1118 : string = v1117 + v226 
                    let v1119 : string = v1118 + v226 
                    let v1120 : string = "vec![" + v1119 + "]"
                    let v1121 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1120 
                    let v1122 : string = "leptos::prelude::Fragment::new($0)"
                    let v1123 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1121 v1122 
                    let v1124 : string = "leptos::prelude::AnyView::from($0)"
                    let v1125 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1123 v1124 
                    let v1126 : string = "<" + v949 + " " + v1045 + ">move || { v1125 }</" + v949 + ">"
                    let v1127 : string = "leptos::prelude::view! { " + v1126 + " }"
                    let v1128 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1127 
                    let v1129 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1128 |> unbox
                    let v1130 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1131 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1129 v1130 
                    let v1132 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v1133 : string = " " + v1132 + v226 + ""
                    let v1134 : float = v789.l10
                    let v1136 : (float -> string) = _.ToString()
                    let v1137 : string = v1136 v1134
                    (* run_target_args'
                    let v1144 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1145 : string = "&*$0"
                    let v1146 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1137 v1145 
                    let _run_target_args'_v1144 = v1146 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1147 : string = "&*$0"
                    let v1148 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1137 v1147 
                    let _run_target_args'_v1144 = v1148 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1149 : string = "&*$0"
                    let v1150 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1137 v1149 
                    let _run_target_args'_v1144 = v1150 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1152 : Ref<Str> = v1137 |> unbox<Ref<Str>>
                    let _run_target_args'_v1144 = v1152 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1156 : Ref<Str> = v1137 |> unbox<Ref<Str>>
                    let _run_target_args'_v1144 = v1156 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1160 : Ref<Str> = v1137 |> unbox<Ref<Str>>
                    let _run_target_args'_v1144 = v1160 
                    #endif
#else
                    let v1164 : Ref<Str> = v1137 |> unbox<Ref<Str>>
                    let _run_target_args'_v1144 = v1164 
                    #endif
                    let v1167 : Ref<Str> = _run_target_args'_v1144 
                    (* run_target_args'
                    let v1177 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1178 : string = "String::from($0)"
                    let v1179 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1167 v1178 
                    let _run_target_args'_v1177 = v1179 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1180 : string = "String::from($0)"
                    let v1181 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1167 v1180 
                    let _run_target_args'_v1177 = v1181 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1182 : string = "String::from($0)"
                    let v1183 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1167 v1182 
                    let _run_target_args'_v1177 = v1183 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1185 : std_string_String = v1167 |> unbox<std_string_String>
                    let _run_target_args'_v1177 = v1185 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1189 : std_string_String = v1167 |> unbox<std_string_String>
                    let _run_target_args'_v1177 = v1189 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1193 : std_string_String = v1167 |> unbox<std_string_String>
                    let _run_target_args'_v1177 = v1193 
                    #endif
#else
                    let v1197 : std_string_String = v1167 |> unbox<std_string_String>
                    let _run_target_args'_v1177 = v1197 
                    #endif
                    let v1200 : std_string_String = _run_target_args'_v1177 
                    let v1206 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v1207 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1200 v1206 
                    let v1208 : string = "v1207"
                    let v1209 : string = v1208 + v226 
                    let v1210 : string = v1209 + v226 
                    let v1211 : string = "vec![" + v1210 + "]"
                    let v1212 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1211 
                    let v1213 : string = "leptos::prelude::Fragment::new($0)"
                    let v1214 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1212 v1213 
                    let v1215 : string = "leptos::prelude::AnyView::from($0)"
                    let v1216 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1214 v1215 
                    let v1217 : string = "<" + v949 + " " + v1133 + ">move || { v1216 }</" + v949 + ">"
                    let v1218 : string = "leptos::prelude::view! { " + v1217 + " }"
                    let v1219 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1218 
                    let v1220 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1219 |> unbox
                    let v1221 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1222 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1220 v1221 
                    let v1223 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v1224 : string = " " + v1223 + v226 + ""
                    let v1225 : (std_string_String []) = v789.l11
                    let v1226 : uint64 = System.Convert.ToUInt64 v1225.Length
                    let v1227 : bool = v1226 = 0UL
                    let v1409 : leptos_dom_Fragment =
                        if v1227 then
                            (* run_target_args'
                            let v1232 : unit = ()
                            run_target_args' *)
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1233 : string = "&*$0"
                            let v1234 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v226 v1233 
                            let _run_target_args'_v1232 = v1234 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1235 : string = "&*$0"
                            let v1236 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v226 v1235 
                            let _run_target_args'_v1232 = v1236 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1237 : string = "&*$0"
                            let v1238 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v226 v1237 
                            let _run_target_args'_v1232 = v1238 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1240 : Ref<Str> = v226 |> unbox<Ref<Str>>
                            let _run_target_args'_v1232 = v1240 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1244 : Ref<Str> = v226 |> unbox<Ref<Str>>
                            let _run_target_args'_v1232 = v1244 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1248 : Ref<Str> = v226 |> unbox<Ref<Str>>
                            let _run_target_args'_v1232 = v1248 
                            #endif
#else
                            let v1252 : Ref<Str> = v226 |> unbox<Ref<Str>>
                            let _run_target_args'_v1232 = v1252 
                            #endif
                            let v1255 : Ref<Str> = _run_target_args'_v1232 
                            (* run_target_args'
                            let v1265 : unit = ()
                            run_target_args' *)
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1266 : string = "String::from($0)"
                            let v1267 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1255 v1266 
                            let _run_target_args'_v1265 = v1267 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1268 : string = "String::from($0)"
                            let v1269 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1255 v1268 
                            let _run_target_args'_v1265 = v1269 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1270 : string = "String::from($0)"
                            let v1271 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1255 v1270 
                            let _run_target_args'_v1265 = v1271 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1273 : std_string_String = v1255 |> unbox<std_string_String>
                            let _run_target_args'_v1265 = v1273 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1277 : std_string_String = v1255 |> unbox<std_string_String>
                            let _run_target_args'_v1265 = v1277 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1281 : std_string_String = v1255 |> unbox<std_string_String>
                            let _run_target_args'_v1265 = v1281 
                            #endif
#else
                            let v1285 : std_string_String = v1255 |> unbox<std_string_String>
                            let _run_target_args'_v1265 = v1285 
                            #endif
                            let v1288 : std_string_String = _run_target_args'_v1265 
                            let v1294 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                            let v1295 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1288 v1294 
                            let v1296 : string = "v1295"
                            let v1297 : string = v1296 + v226 
                            let v1298 : string = v1297 + v226 
                            let v1299 : string = "vec![" + v1298 + "]"
                            let v1300 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1299 
                            let v1301 : string = "leptos::prelude::Fragment::new($0)"
                            let v1302 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1300 v1301 
                            v1302
                        else
                            let v1303 : (std_string_String []) = v789.l11
                            let v1304 : int32 = v1303.Length
                            let v1305 : US31 = US31_1
                            let v1306 : Mut2 = {l0 = 0; l1 = v1305} : Mut2
                            while method206(v1304, v1306) do
                                let v1308 : int32 = v1306.l0
                                let v1309 : int32 =  -v1308
                                let v1310 : int32 = v1309 + v1304
                                let v1311 : int32 = v1310 - 1
                                let v1312 : US31 = v1306.l1
                                let v1313 : std_string_String = v1303.[int v1311]
                                let v1314 : string = "fable_library_rust::String_::fromString($0)"
                                let v1315 : string = Fable.Core.RustInterop.emitRustExpr v1313 v1314 
                                let v1317 : string = " / result: "
                                let v1318 : (string []) = v1315.Split v1317 
                                let v1327 : US31 =
                                    match v1312 with
                                    | US31_1 -> (* None *)
                                        let v1321 : uint64 = System.Convert.ToUInt64 v1318.Length
                                        let v1322 : bool = v1321 = 2UL
                                        if v1322 then
                                            let v1323 : string = v1318.[int 0]
                                            let v1324 : string = v1318.[int 1]
                                            US31_0(v1324)
                                        else
                                            v1312
                                    | _ ->
                                        v1312
                                let v1328 : int32 = v1308 + 1
                                v1306.l0 <- v1328
                                v1306.l1 <- v1327
                                ()
                            let v1329 : US31 = v1306.l1
                            let v1333 : string =
                                match v1329 with
                                | US31_1 -> (* None *)
                                    let v1331 : string = "?"
                                    v1331
                                | US31_0(v1330) -> (* Some *)
                                    v1330
                            (* run_target_args'
                            let v1338 : unit = ()
                            run_target_args' *)
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1339 : string = "&*$0"
                            let v1340 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1333 v1339 
                            let _run_target_args'_v1338 = v1340 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1341 : string = "&*$0"
                            let v1342 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1333 v1341 
                            let _run_target_args'_v1338 = v1342 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1343 : string = "&*$0"
                            let v1344 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1333 v1343 
                            let _run_target_args'_v1338 = v1344 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1346 : Ref<Str> = v1333 |> unbox<Ref<Str>>
                            let _run_target_args'_v1338 = v1346 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1350 : Ref<Str> = v1333 |> unbox<Ref<Str>>
                            let _run_target_args'_v1338 = v1350 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1354 : Ref<Str> = v1333 |> unbox<Ref<Str>>
                            let _run_target_args'_v1338 = v1354 
                            #endif
#else
                            let v1358 : Ref<Str> = v1333 |> unbox<Ref<Str>>
                            let _run_target_args'_v1338 = v1358 
                            #endif
                            let v1361 : Ref<Str> = _run_target_args'_v1338 
                            (* run_target_args'
                            let v1371 : unit = ()
                            run_target_args' *)
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1372 : string = "String::from($0)"
                            let v1373 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1361 v1372 
                            let _run_target_args'_v1371 = v1373 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1374 : string = "String::from($0)"
                            let v1375 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1361 v1374 
                            let _run_target_args'_v1371 = v1375 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1376 : string = "String::from($0)"
                            let v1377 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1361 v1376 
                            let _run_target_args'_v1371 = v1377 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1379 : std_string_String = v1361 |> unbox<std_string_String>
                            let _run_target_args'_v1371 = v1379 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1383 : std_string_String = v1361 |> unbox<std_string_String>
                            let _run_target_args'_v1371 = v1383 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1387 : std_string_String = v1361 |> unbox<std_string_String>
                            let _run_target_args'_v1371 = v1387 
                            #endif
#else
                            let v1391 : std_string_String = v1361 |> unbox<std_string_String>
                            let _run_target_args'_v1371 = v1391 
                            #endif
                            let v1394 : std_string_String = _run_target_args'_v1371 
                            let v1400 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                            let v1401 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1394 v1400 
                            let v1402 : string = "v1401"
                            let v1403 : string = v1402 + v226 
                            let v1404 : string = v1403 + v226 
                            let v1405 : string = "vec![" + v1404 + "]"
                            let v1406 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1405 
                            let v1407 : string = "leptos::prelude::Fragment::new($0)"
                            let v1408 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1406 v1407 
                            v1408
                    let v1410 : string = "leptos::prelude::AnyView::from($0)"
                    let v1411 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1409 v1410 
                    let v1412 : string = "<" + v949 + " " + v1224 + ">move || { v1411 }</" + v949 + ">"
                    let v1413 : string = "leptos::prelude::view! { " + v1412 + " }"
                    let v1414 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1413 
                    let v1415 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1414 |> unbox
                    let v1416 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1417 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1415 v1416 
                    let v1418 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                    let v1419 : string = " " + v1418 + v226 + ""
                    let v1420 : bool = v789.l9
                    let v1423 : string =
                        if v1420 then
                            let v1421 : string = "Ok"
                            v1421
                        else
                            let v1422 : string = "Outcome Error"
                            v1422
                    let v1424 : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option -> US63) = method177()
                    let v1425 : (std_string_String -> US63) = method178()
                    let v1426 : US63 = match v806 with Ok x -> v1424 x | Error x -> v1425 x
                    let v1455 : US58 =
                        match v1426 with
                        | US63_1(v1452) -> (* Error *)
                            US58_1(v1452)
                        | US63_0(v1427) -> (* Ok *)
                            let v1429 : (struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) -> US59) = method179()
                            let v1430 : US59 option = v1427 |> Option.map v1429 
                            let v1446 : US59 = US59_1
                            let v1447 : US59 = v1430 |> Option.defaultValue v1446 
                            US58_0(v1447)
                    let v1560 : US69 =
                        match v1455 with
                        | US58_1(v1555) -> (* Error *)
                            let v1556 : string = "fable_library_rust::String_::fromString($0)"
                            let v1557 : string = Fable.Core.RustInterop.emitRustExpr v1555 v1556 
                            US69_1(v1557)
                        | US58_0(v1456) -> (* Ok *)
                            match v1456 with
                            | US59_0(v1457, v1458, v1459, v1460) -> (* Some *)
                                let v1462 : (struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) -> US64) = method180()
                                let v1463 : US64 option = v1459 |> Option.map v1462 
                                let v1481 : US64 = US64_1
                                let v1482 : US64 = v1463 |> Option.defaultValue v1481 
                                match v1482 with
                                | US64_1 -> (* None *)
                                    let v1538 : string = $"%A{struct (v1457, v1458, v1459, v1460)}"
                                    let v1541 : int64 = 400L
                                    let v1542 : string = method8(v1541, v1538)
                                    US69_0(v1542)
                                | US64_0(v1486, v1487, v1488, v1489, v1490, v1491) -> (* Some *)
                                    let v1493 : (struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) -> US64) = method180()
                                    let v1494 : US64 option = v1459 |> Option.map v1493 
                                    let v1512 : US64 = US64_1
                                    let v1513 : US64 = v1494 |> Option.defaultValue v1512 
                                    let v1526 : US31 =
                                        match v1513 with
                                        | US64_0(v1517, v1518, v1519, v1520, v1521, v1522) -> (* Some *)
                                            let v1523 : string = string v1517 + ": " + string v1521 + " - " + string v1522 + " (" + string v1518 + ")"
                                            US31_0(v1523)
                                        | _ ->
                                            US31_1
                                    let v1535 : string =
                                        match v1526 with
                                        | US31_1 -> (* None *)
                                            let v1529 : string = $"%A{()}"
                                            let v1532 : int64 = 400L
                                            method8(v1532, v1529)
                                        | US31_0(v1527) -> (* Some *)
                                            v1527
                                    US69_1(v1535)
                            | _ ->
                                let v1547 : string = $"%A{v1455}"
                                let v1550 : int64 = 400L
                                let v1551 : string = method8(v1550, v1547)
                                let v1552 : string = $"RPC Response: {v1551}"
                                US69_1(v1552)
                    let v1572 : string =
                        match v1560 with
                        | US69_1(v1569) -> (* Error *)
                            let v1570 : string = $"Error: {v1569}"
                            v1570
                        | US69_0(v1561) -> (* Ok *)
                            let v1563 : string = $"%A{v1561}"
                            let v1566 : int64 = 400L
                            let v1567 : string = method8(v1566, v1563)
                            let v1568 : string = $"RPC Response: {v1567}"
                            v1568
                    let v1573 : string = $"{v1423} / {v1572}"
                    (* run_target_args'
                    let v1578 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1579 : string = "&*$0"
                    let v1580 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1573 v1579 
                    let _run_target_args'_v1578 = v1580 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1581 : string = "&*$0"
                    let v1582 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1573 v1581 
                    let _run_target_args'_v1578 = v1582 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1583 : string = "&*$0"
                    let v1584 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1573 v1583 
                    let _run_target_args'_v1578 = v1584 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1586 : Ref<Str> = v1573 |> unbox<Ref<Str>>
                    let _run_target_args'_v1578 = v1586 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1590 : Ref<Str> = v1573 |> unbox<Ref<Str>>
                    let _run_target_args'_v1578 = v1590 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1594 : Ref<Str> = v1573 |> unbox<Ref<Str>>
                    let _run_target_args'_v1578 = v1594 
                    #endif
#else
                    let v1598 : Ref<Str> = v1573 |> unbox<Ref<Str>>
                    let _run_target_args'_v1578 = v1598 
                    #endif
                    let v1601 : Ref<Str> = _run_target_args'_v1578 
                    (* run_target_args'
                    let v1611 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1612 : string = "String::from($0)"
                    let v1613 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1601 v1612 
                    let _run_target_args'_v1611 = v1613 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1614 : string = "String::from($0)"
                    let v1615 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1601 v1614 
                    let _run_target_args'_v1611 = v1615 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1616 : string = "String::from($0)"
                    let v1617 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1601 v1616 
                    let _run_target_args'_v1611 = v1617 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1619 : std_string_String = v1601 |> unbox<std_string_String>
                    let _run_target_args'_v1611 = v1619 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1623 : std_string_String = v1601 |> unbox<std_string_String>
                    let _run_target_args'_v1611 = v1623 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1627 : std_string_String = v1601 |> unbox<std_string_String>
                    let _run_target_args'_v1611 = v1627 
                    #endif
#else
                    let v1631 : std_string_String = v1601 |> unbox<std_string_String>
                    let _run_target_args'_v1611 = v1631 
                    #endif
                    let v1634 : std_string_String = _run_target_args'_v1611 
                    let v1640 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v1641 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1634 v1640 
                    let v1642 : string = "v1641"
                    let v1643 : string = v1642 + v226 
                    let v1644 : string = v1643 + v226 
                    let v1645 : string = "vec![" + v1644 + "]"
                    let v1646 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1645 
                    let v1647 : string = "leptos::prelude::Fragment::new($0)"
                    let v1648 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1646 v1647 
                    let v1649 : string = "leptos::prelude::AnyView::from($0)"
                    let v1650 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1648 v1649 
                    let v1651 : string = "<" + v949 + " " + v1419 + ">move || { v1650 }</" + v949 + ">"
                    let v1652 : string = "leptos::prelude::view! { " + v1651 + " }"
                    let v1653 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1652 
                    let v1654 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1653 |> unbox
                    let v1655 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1656 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1654 v1655 
                    let v1657 : string = "v1656"
                    let v1658 : string = v1657 + v226 
                    let v1659 : string = v1658 + v226 
                    let v1660 : string = "v1417"
                    let v1661 : string = v1660 + v747 
                    let v1662 : string = v1661 + v1659 
                    let v1663 : string = "v1222"
                    let v1664 : string = v1663 + v747 
                    let v1665 : string = v1664 + v1662 
                    let v1666 : string = "v1131"
                    let v1667 : string = v1666 + v747 
                    let v1668 : string = v1667 + v1665 
                    let v1669 : string = "v1043"
                    let v1670 : string = v1669 + v747 
                    let v1671 : string = v1670 + v1668 
                    let v1672 : string = "v955"
                    let v1673 : string = v1672 + v747 
                    let v1674 : string = v1673 + v1671 
                    let v1675 : string = "vec![" + v1674 + "]"
                    let v1676 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1675 
                    let v1677 : string = "leptos::prelude::Fragment::new($0)"
                    let v1678 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1676 v1677 
                    let v1679 : string = "leptos::prelude::AnyView::from($0)"
                    let v1680 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1678 v1679 
                    let v1681 : string = "<" + v768 + " " + v810 + ">move || { v1680 }</" + v768 + ">"
                    let v1682 : string = "leptos::prelude::view! { " + v1681 + " }"
                    let v1683 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1682 
                    let v1684 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>> = v1683 |> unbox
                    let v1685 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1686 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1684 v1685 
                    let v1687 : string = "true; $0 }).collect::<Vec<_>>()"
                    let v1688 : bool = Fable.Core.RustInterop.emitRustExpr v1686 v1687 
                    let v1689 : string = "_vec_map"
                    let v1690 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1689 
                    let v1691 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1692 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1690 v1691 
                    let v1693 : string = "v1692"
                    let v1694 : string = v1693 + v226 
                    let v1695 : string = v1694 + v226 
                    let v1696 : string = "vec![" + v1695 + "]"
                    let v1697 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1696 
                    let v1698 : string = "leptos::prelude::Fragment::new($0)"
                    let v1699 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1697 v1698 
                    let v1700 : string = "class=\"flex-1 min-w-full divide-y-2 divide-gray-200 text-sm dark:divide-gray-700\""
                    let v1701 : string = " " + v1700 + v226 + ""
                    let v1702 : string = "class=\"ltr:text-left rtl:text-right\""
                    let v1703 : string = " " + v1702 + v226 + ""
                    let v1704 : string = "leptos::prelude::AnyView::from($0)"
                    let v1705 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v781 v1704 
                    let v1706 : string = "thead"
                    let v1707 : string = "<" + v1706 + " " + v1703 + ">move || { v1705 }</" + v1706 + ">"
                    let v1708 : string = "leptos::prelude::view! { " + v1707 + " }"
                    let v1709 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1708 
                    let v1710 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Thead>> = v1709 |> unbox
                    let v1711 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1712 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1710 v1711 
                    let v1713 : string = "class=\"divide-y divide-gray-200 dark:divide-gray-700\""
                    let v1714 : string = " " + v1713 + v226 + ""
                    let v1715 : string = "leptos::prelude::AnyView::from($0)"
                    let v1716 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1699 v1715 
                    let v1717 : string = "tbody"
                    let v1718 : string = "<" + v1717 + " " + v1714 + ">move || { v1716 }</" + v1717 + ">"
                    let v1719 : string = "leptos::prelude::view! { " + v1718 + " }"
                    let v1720 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1719 
                    let v1721 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tbody>> = v1720 |> unbox
                    let v1722 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1723 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1721 v1722 
                    let v1724 : string = "v1723"
                    let v1725 : string = v1724 + v226 
                    let v1726 : string = v1725 + v226 
                    let v1727 : string = "v1712"
                    let v1728 : string = v1727 + v747 
                    let v1729 : string = v1728 + v1726 
                    let v1730 : string = "vec![" + v1729 + "]"
                    let v1731 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1730 
                    let v1732 : string = "leptos::prelude::Fragment::new($0)"
                    let v1733 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1731 v1732 
                    let v1734 : string = "leptos::prelude::AnyView::from($0)"
                    let v1735 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1733 v1734 
                    let v1736 : string = "table"
                    let v1737 : string = "<" + v1736 + " " + v1701 + ">move || { v1735 }</" + v1736 + ">"
                    let v1738 : string = "leptos::prelude::view! { " + v1737 + " }"
                    let v1739 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1738 
                    let v1740 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Table>> = v1739 |> unbox
                    let v1741 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1742 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1740 v1741 
                    v1742
                | _ ->
                    let v1743 : string = "class=\"grid place-content-center py-[10vh]\""
                    let v1744 : string = ""
                    let v1745 : string = " " + v1743 + v1744 + ""
                    let v1746 : string = "class=\"flex flex-1 [gap:4px] items-center\""
                    let v1747 : string = " " + v1746 + v1744 + ""
                    let v1748 : string = "$0"
                    let v1749 : (unit -> string) = closure191()
                    let v1750 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1749 v1748 
                    let v1751 : string = "version=\"1.1\""
                    let v1752 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                    let v1753 : string = "xmlns:xlink=\"http://www.w3.org/1999/xlink\""
                    let v1754 : string = "x=\"0px\""
                    let v1755 : string = "y=\"0px\""
                    let v1756 : string = "viewBox=\"0 0 24 30\""
                    let v1757 : string = "style=\"enable-background:new 0 0 50 50;\""
                    let v1758 : string = "xml:space=\"preserve\""
                    let v1759 : string = "class=move || \" \".to_owned() + &v1750(())"
                    let v1760 : string = " " + v1751 + v1744 + ""
                    let v1761 : string = " " + v1752 + v1760 + ""
                    let v1762 : string = " " + v1753 + v1761 + ""
                    let v1763 : string = " " + v1754 + v1762 + ""
                    let v1764 : string = " " + v1755 + v1763 + ""
                    let v1765 : string = " " + v1756 + v1764 + ""
                    let v1766 : string = " " + v1757 + v1765 + ""
                    let v1767 : string = " " + v1758 + v1766 + ""
                    let v1768 : string = " " + v1759 + v1767 + ""
                    let v1769 : string = "x=\"0\""
                    let v1770 : string = "y=\"10\""
                    let v1771 : string = "width=\"4\""
                    let v1772 : string = "height=\"10\""
                    let v1773 : string = "fill=\"#333\""
                    let v1774 : string = "opacity=\"0.2\""
                    let v1775 : string = " " + v1769 + v1744 + ""
                    let v1776 : string = " " + v1770 + v1775 + ""
                    let v1777 : string = " " + v1771 + v1776 + ""
                    let v1778 : string = " " + v1772 + v1777 + ""
                    let v1779 : string = " " + v1773 + v1778 + ""
                    let v1780 : string = " " + v1774 + v1779 + ""
                    let v1781 : string = "attributeName=\"opacity\""
                    let v1782 : string = "attributeType=\"XML\""
                    let v1783 : string = "values=\"0.2; 1; .2\""
                    let v1784 : string = "begin=\"0s\""
                    let v1785 : string = "dur=\"0.6s\""
                    let v1786 : string = "repeatCount=\"indefinite\""
                    let v1787 : string = " " + v1781 + v1744 + ""
                    let v1788 : string = " " + v1782 + v1787 + ""
                    let v1789 : string = " " + v1783 + v1788 + ""
                    let v1790 : string = " " + v1784 + v1789 + ""
                    let v1791 : string = " " + v1785 + v1790 + ""
                    let v1792 : string = " " + v1786 + v1791 + ""
                    let v1793 : string = "vec![" + v1744 + "]"
                    let v1794 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1793 
                    let v1795 : string = "leptos::prelude::Fragment::new($0)"
                    let v1796 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1794 v1795 
                    let v1797 : string = "leptos::prelude::AnyView::from($0)"
                    let v1798 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1796 v1797 
                    let v1799 : string = "animate"
                    let v1800 : string = "<" + v1799 + " " + v1792 + ">move || { v1798 }</" + v1799 + ">"
                    let v1801 : string = "leptos::prelude::view! { " + v1800 + " }"
                    let v1802 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1801 
                    let v1803 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1802 |> unbox
                    let v1804 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1805 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1803 v1804 
                    let v1806 : string = "attributeName=\"height\""
                    let v1807 : string = "attributeType=\"XML\""
                    let v1808 : string = "values=\"10; 20; 10\""
                    let v1809 : string = "begin=\"0s\""
                    let v1810 : string = "dur=\"0.6s\""
                    let v1811 : string = "repeatCount=\"indefinite\""
                    let v1812 : string = " " + v1806 + v1744 + ""
                    let v1813 : string = " " + v1807 + v1812 + ""
                    let v1814 : string = " " + v1808 + v1813 + ""
                    let v1815 : string = " " + v1809 + v1814 + ""
                    let v1816 : string = " " + v1810 + v1815 + ""
                    let v1817 : string = " " + v1811 + v1816 + ""
                    let v1818 : string = "vec![" + v1744 + "]"
                    let v1819 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1818 
                    let v1820 : string = "leptos::prelude::Fragment::new($0)"
                    let v1821 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1819 v1820 
                    let v1822 : string = "leptos::prelude::AnyView::from($0)"
                    let v1823 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1821 v1822 
                    let v1824 : string = "<" + v1799 + " " + v1817 + ">move || { v1823 }</" + v1799 + ">"
                    let v1825 : string = "leptos::prelude::view! { " + v1824 + " }"
                    let v1826 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1825 
                    let v1827 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1826 |> unbox
                    let v1828 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1829 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1827 v1828 
                    let v1830 : string = "attributeName=\"y\""
                    let v1831 : string = "attributeType=\"XML\""
                    let v1832 : string = "values=\"10; 5; 10\""
                    let v1833 : string = "begin=\"0s\""
                    let v1834 : string = "dur=\"0.6s\""
                    let v1835 : string = "repeatCount=\"indefinite\""
                    let v1836 : string = " " + v1830 + v1744 + ""
                    let v1837 : string = " " + v1831 + v1836 + ""
                    let v1838 : string = " " + v1832 + v1837 + ""
                    let v1839 : string = " " + v1833 + v1838 + ""
                    let v1840 : string = " " + v1834 + v1839 + ""
                    let v1841 : string = " " + v1835 + v1840 + ""
                    let v1842 : string = "vec![" + v1744 + "]"
                    let v1843 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1842 
                    let v1844 : string = "leptos::prelude::Fragment::new($0)"
                    let v1845 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1843 v1844 
                    let v1846 : string = "leptos::prelude::AnyView::from($0)"
                    let v1847 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1845 v1846 
                    let v1848 : string = "<" + v1799 + " " + v1841 + ">move || { v1847 }</" + v1799 + ">"
                    let v1849 : string = "leptos::prelude::view! { " + v1848 + " }"
                    let v1850 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1849 
                    let v1851 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1850 |> unbox
                    let v1852 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1853 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1851 v1852 
                    let v1854 : string = "v1853"
                    let v1855 : string = v1854 + v1744 
                    let v1856 : string = v1855 + v1744 
                    let v1857 : string = "v1829"
                    let v1858 : string = ", "
                    let v1859 : string = v1857 + v1858 
                    let v1860 : string = v1859 + v1856 
                    let v1861 : string = "v1805"
                    let v1862 : string = v1861 + v1858 
                    let v1863 : string = v1862 + v1860 
                    let v1864 : string = "vec![" + v1863 + "]"
                    let v1865 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1864 
                    let v1866 : string = "leptos::prelude::Fragment::new($0)"
                    let v1867 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1865 v1866 
                    let v1868 : string = "leptos::prelude::AnyView::from($0)"
                    let v1869 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1867 v1868 
                    let v1870 : string = "rect"
                    let v1871 : string = "<" + v1870 + " " + v1780 + ">move || { v1869 }</" + v1870 + ">"
                    let v1872 : string = "leptos::prelude::view! { " + v1871 + " }"
                    let v1873 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1872 
                    let v1874 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v1873 |> unbox
                    let v1875 : string = "x=\"8\""
                    let v1876 : string = "y=\"10\""
                    let v1877 : string = "width=\"4\""
                    let v1878 : string = "height=\"10\""
                    let v1879 : string = "fill=\"#333\""
                    let v1880 : string = "opacity=\"0.2\""
                    let v1881 : string = " " + v1875 + v1744 + ""
                    let v1882 : string = " " + v1876 + v1881 + ""
                    let v1883 : string = " " + v1877 + v1882 + ""
                    let v1884 : string = " " + v1878 + v1883 + ""
                    let v1885 : string = " " + v1879 + v1884 + ""
                    let v1886 : string = " " + v1880 + v1885 + ""
                    let v1887 : string = "attributeName=\"opacity\""
                    let v1888 : string = "attributeType=\"XML\""
                    let v1889 : string = "values=\"0.2; 1; .2\""
                    let v1890 : string = "begin=\"0.15s\""
                    let v1891 : string = "dur=\"0.6s\""
                    let v1892 : string = "repeatCount=\"indefinite\""
                    let v1893 : string = " " + v1887 + v1744 + ""
                    let v1894 : string = " " + v1888 + v1893 + ""
                    let v1895 : string = " " + v1889 + v1894 + ""
                    let v1896 : string = " " + v1890 + v1895 + ""
                    let v1897 : string = " " + v1891 + v1896 + ""
                    let v1898 : string = " " + v1892 + v1897 + ""
                    let v1899 : string = "vec![" + v1744 + "]"
                    let v1900 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1899 
                    let v1901 : string = "leptos::prelude::Fragment::new($0)"
                    let v1902 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1900 v1901 
                    let v1903 : string = "leptos::prelude::AnyView::from($0)"
                    let v1904 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1902 v1903 
                    let v1905 : string = "<" + v1799 + " " + v1898 + ">move || { v1904 }</" + v1799 + ">"
                    let v1906 : string = "leptos::prelude::view! { " + v1905 + " }"
                    let v1907 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1906 
                    let v1908 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1907 |> unbox
                    let v1909 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1910 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1908 v1909 
                    let v1911 : string = "attributeName=\"opacity\""
                    let v1912 : string = "attributeType=\"XML\""
                    let v1913 : string = "values=\"10; 20; 10\""
                    let v1914 : string = "begin=\"0.15s\""
                    let v1915 : string = "dur=\"0.6s\""
                    let v1916 : string = "repeatCount=\"indefinite\""
                    let v1917 : string = " " + v1911 + v1744 + ""
                    let v1918 : string = " " + v1912 + v1917 + ""
                    let v1919 : string = " " + v1913 + v1918 + ""
                    let v1920 : string = " " + v1914 + v1919 + ""
                    let v1921 : string = " " + v1915 + v1920 + ""
                    let v1922 : string = " " + v1916 + v1921 + ""
                    let v1923 : string = "vec![" + v1744 + "]"
                    let v1924 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1923 
                    let v1925 : string = "leptos::prelude::Fragment::new($0)"
                    let v1926 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1924 v1925 
                    let v1927 : string = "leptos::prelude::AnyView::from($0)"
                    let v1928 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1926 v1927 
                    let v1929 : string = "<" + v1799 + " " + v1922 + ">move || { v1928 }</" + v1799 + ">"
                    let v1930 : string = "leptos::prelude::view! { " + v1929 + " }"
                    let v1931 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1930 
                    let v1932 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1931 |> unbox
                    let v1933 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1934 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1932 v1933 
                    let v1935 : string = "attributeName=\"y\""
                    let v1936 : string = "attributeType=\"XML\""
                    let v1937 : string = "values=\"10; 5; 10\""
                    let v1938 : string = "begin=\"0.15s\""
                    let v1939 : string = "dur=\"0.6s\""
                    let v1940 : string = "repeatCount=\"indefinite\""
                    let v1941 : string = " " + v1935 + v1744 + ""
                    let v1942 : string = " " + v1936 + v1941 + ""
                    let v1943 : string = " " + v1937 + v1942 + ""
                    let v1944 : string = " " + v1938 + v1943 + ""
                    let v1945 : string = " " + v1939 + v1944 + ""
                    let v1946 : string = " " + v1940 + v1945 + ""
                    let v1947 : string = "vec![" + v1744 + "]"
                    let v1948 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1947 
                    let v1949 : string = "leptos::prelude::Fragment::new($0)"
                    let v1950 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1948 v1949 
                    let v1951 : string = "leptos::prelude::AnyView::from($0)"
                    let v1952 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1950 v1951 
                    let v1953 : string = "<" + v1799 + " " + v1946 + ">move || { v1952 }</" + v1799 + ">"
                    let v1954 : string = "leptos::prelude::view! { " + v1953 + " }"
                    let v1955 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1954 
                    let v1956 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v1955 |> unbox
                    let v1957 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v1958 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1956 v1957 
                    let v1959 : string = "v1958"
                    let v1960 : string = v1959 + v1744 
                    let v1961 : string = v1960 + v1744 
                    let v1962 : string = "v1934"
                    let v1963 : string = v1962 + v1858 
                    let v1964 : string = v1963 + v1961 
                    let v1965 : string = "v1910"
                    let v1966 : string = v1965 + v1858 
                    let v1967 : string = v1966 + v1964 
                    let v1968 : string = "vec![" + v1967 + "]"
                    let v1969 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1968 
                    let v1970 : string = "leptos::prelude::Fragment::new($0)"
                    let v1971 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1969 v1970 
                    let v1972 : string = "leptos::prelude::AnyView::from($0)"
                    let v1973 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1971 v1972 
                    let v1974 : string = "<" + v1870 + " " + v1886 + ">move || { v1973 }</" + v1870 + ">"
                    let v1975 : string = "leptos::prelude::view! { " + v1974 + " }"
                    let v1976 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1975 
                    let v1977 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v1976 |> unbox
                    let v1978 : string = "x=\"16\""
                    let v1979 : string = "y=\"10\""
                    let v1980 : string = "width=\"4\""
                    let v1981 : string = "height=\"10\""
                    let v1982 : string = "fill=\"#333\""
                    let v1983 : string = "opacity=\"0.2\""
                    let v1984 : string = " " + v1978 + v1744 + ""
                    let v1985 : string = " " + v1979 + v1984 + ""
                    let v1986 : string = " " + v1980 + v1985 + ""
                    let v1987 : string = " " + v1981 + v1986 + ""
                    let v1988 : string = " " + v1982 + v1987 + ""
                    let v1989 : string = " " + v1983 + v1988 + ""
                    let v1990 : string = "attributeName=\"opacity\""
                    let v1991 : string = "attributeType=\"XML\""
                    let v1992 : string = "values=\"0.2; 1; .2\""
                    let v1993 : string = "begin=\"0.3s\""
                    let v1994 : string = "dur=\"0.6s\""
                    let v1995 : string = "repeatCount=\"indefinite\""
                    let v1996 : string = " " + v1990 + v1744 + ""
                    let v1997 : string = " " + v1991 + v1996 + ""
                    let v1998 : string = " " + v1992 + v1997 + ""
                    let v1999 : string = " " + v1993 + v1998 + ""
                    let v2000 : string = " " + v1994 + v1999 + ""
                    let v2001 : string = " " + v1995 + v2000 + ""
                    let v2002 : string = "vec![" + v1744 + "]"
                    let v2003 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2002 
                    let v2004 : string = "leptos::prelude::Fragment::new($0)"
                    let v2005 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2003 v2004 
                    let v2006 : string = "leptos::prelude::AnyView::from($0)"
                    let v2007 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2005 v2006 
                    let v2008 : string = "<" + v1799 + " " + v2001 + ">move || { v2007 }</" + v1799 + ">"
                    let v2009 : string = "leptos::prelude::view! { " + v2008 + " }"
                    let v2010 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2009 
                    let v2011 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v2010 |> unbox
                    let v2012 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2013 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2011 v2012 
                    let v2014 : string = "attributeName=\"height\""
                    let v2015 : string = "attributeType=\"XML\""
                    let v2016 : string = "values=\"10; 20; 10\""
                    let v2017 : string = "begin=\"0.3s\""
                    let v2018 : string = "dur=\"0.6s\""
                    let v2019 : string = "repeatCount=\"indefinite\""
                    let v2020 : string = " " + v2014 + v1744 + ""
                    let v2021 : string = " " + v2015 + v2020 + ""
                    let v2022 : string = " " + v2016 + v2021 + ""
                    let v2023 : string = " " + v2017 + v2022 + ""
                    let v2024 : string = " " + v2018 + v2023 + ""
                    let v2025 : string = " " + v2019 + v2024 + ""
                    let v2026 : string = "vec![" + v1744 + "]"
                    let v2027 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2026 
                    let v2028 : string = "leptos::prelude::Fragment::new($0)"
                    let v2029 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2027 v2028 
                    let v2030 : string = "leptos::prelude::AnyView::from($0)"
                    let v2031 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2029 v2030 
                    let v2032 : string = "<" + v1799 + " " + v2025 + ">move || { v2031 }</" + v1799 + ">"
                    let v2033 : string = "leptos::prelude::view! { " + v2032 + " }"
                    let v2034 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2033 
                    let v2035 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v2034 |> unbox
                    let v2036 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2037 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2035 v2036 
                    let v2038 : string = "attributeName=\"y\""
                    let v2039 : string = "attributeType=\"XML\""
                    let v2040 : string = "values=\"10; 5; 10\""
                    let v2041 : string = "begin=\"0.3s\""
                    let v2042 : string = "dur=\"0.6s\""
                    let v2043 : string = "repeatCount=\"indefinite\""
                    let v2044 : string = " " + v2038 + v1744 + ""
                    let v2045 : string = " " + v2039 + v2044 + ""
                    let v2046 : string = " " + v2040 + v2045 + ""
                    let v2047 : string = " " + v2041 + v2046 + ""
                    let v2048 : string = " " + v2042 + v2047 + ""
                    let v2049 : string = " " + v2043 + v2048 + ""
                    let v2050 : string = "vec![" + v1744 + "]"
                    let v2051 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2050 
                    let v2052 : string = "leptos::prelude::Fragment::new($0)"
                    let v2053 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2051 v2052 
                    let v2054 : string = "leptos::prelude::AnyView::from($0)"
                    let v2055 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2053 v2054 
                    let v2056 : string = "<" + v1799 + " " + v2049 + ">move || { v2055 }</" + v1799 + ">"
                    let v2057 : string = "leptos::prelude::view! { " + v2056 + " }"
                    let v2058 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2057 
                    let v2059 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v2058 |> unbox
                    let v2060 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2061 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2059 v2060 
                    let v2062 : string = "v2061"
                    let v2063 : string = v2062 + v1744 
                    let v2064 : string = v2063 + v1744 
                    let v2065 : string = "v2037"
                    let v2066 : string = v2065 + v1858 
                    let v2067 : string = v2066 + v2064 
                    let v2068 : string = "v2013"
                    let v2069 : string = v2068 + v1858 
                    let v2070 : string = v2069 + v2067 
                    let v2071 : string = "vec![" + v2070 + "]"
                    let v2072 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2071 
                    let v2073 : string = "leptos::prelude::Fragment::new($0)"
                    let v2074 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2072 v2073 
                    let v2075 : string = "leptos::prelude::AnyView::from($0)"
                    let v2076 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2074 v2075 
                    let v2077 : string = "<" + v1870 + " " + v1989 + ">move || { v2076 }</" + v1870 + ">"
                    let v2078 : string = "leptos::prelude::view! { " + v2077 + " }"
                    let v2079 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2078 
                    let v2080 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v2079 |> unbox
                    let v2081 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2082 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2080 v2081 
                    let v2083 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2084 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1977 v2083 
                    let v2085 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2086 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1874 v2085 
                    let v2087 : string = "v2082"
                    let v2088 : string = v2087 + v1744 
                    let v2089 : string = v2088 + v1744 
                    let v2090 : string = "v2084"
                    let v2091 : string = v2090 + v1858 
                    let v2092 : string = v2091 + v2089 
                    let v2093 : string = "v2086"
                    let v2094 : string = v2093 + v1858 
                    let v2095 : string = v2094 + v2092 
                    let v2096 : string = "vec![" + v2095 + "]"
                    let v2097 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2096 
                    let v2098 : string = "leptos::prelude::Fragment::new($0)"
                    let v2099 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2097 v2098 
                    let v2100 : string = "leptos::prelude::AnyView::from($0)"
                    let v2101 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2099 v2100 
                    let v2102 : string = "svg"
                    let v2103 : string = "<" + v2102 + " " + v1768 + ">move || { v2101 }</" + v2102 + ">"
                    let v2104 : string = "leptos::prelude::view! { " + v2103 + " }"
                    let v2105 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2104 
                    let v2106 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v2105 |> unbox
                    let v2107 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2108 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2106 v2107 
                    let v2109 : string = "Loading..."
                    (* run_target_args'
                    let v2114 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v2115 : string = "&*$0"
                    let v2116 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2109 v2115 
                    let _run_target_args'_v2114 = v2116 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v2117 : string = "&*$0"
                    let v2118 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2109 v2117 
                    let _run_target_args'_v2114 = v2118 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v2119 : string = "&*$0"
                    let v2120 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2109 v2119 
                    let _run_target_args'_v2114 = v2120 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v2122 : Ref<Str> = v2109 |> unbox<Ref<Str>>
                    let _run_target_args'_v2114 = v2122 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v2126 : Ref<Str> = v2109 |> unbox<Ref<Str>>
                    let _run_target_args'_v2114 = v2126 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v2130 : Ref<Str> = v2109 |> unbox<Ref<Str>>
                    let _run_target_args'_v2114 = v2130 
                    #endif
#else
                    let v2134 : Ref<Str> = v2109 |> unbox<Ref<Str>>
                    let _run_target_args'_v2114 = v2134 
                    #endif
                    let v2137 : Ref<Str> = _run_target_args'_v2114 
                    (* run_target_args'
                    let v2147 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v2148 : string = "String::from($0)"
                    let v2149 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2137 v2148 
                    let _run_target_args'_v2147 = v2149 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v2150 : string = "String::from($0)"
                    let v2151 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2137 v2150 
                    let _run_target_args'_v2147 = v2151 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v2152 : string = "String::from($0)"
                    let v2153 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2137 v2152 
                    let _run_target_args'_v2147 = v2153 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v2155 : std_string_String = v2137 |> unbox<std_string_String>
                    let _run_target_args'_v2147 = v2155 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v2159 : std_string_String = v2137 |> unbox<std_string_String>
                    let _run_target_args'_v2147 = v2159 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v2163 : std_string_String = v2137 |> unbox<std_string_String>
                    let _run_target_args'_v2147 = v2163 
                    #endif
#else
                    let v2167 : std_string_String = v2137 |> unbox<std_string_String>
                    let _run_target_args'_v2147 = v2167 
                    #endif
                    let v2170 : std_string_String = _run_target_args'_v2147 
                    let v2176 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v2177 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2170 v2176 
                    let v2178 : string = "v2177"
                    let v2179 : string = v2178 + v1744 
                    let v2180 : string = v2179 + v1744 
                    let v2181 : string = "v2108"
                    let v2182 : string = v2181 + v1858 
                    let v2183 : string = v2182 + v2180 
                    let v2184 : string = "vec![" + v2183 + "]"
                    let v2185 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2184 
                    let v2186 : string = "leptos::prelude::Fragment::new($0)"
                    let v2187 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2185 v2186 
                    let v2188 : string = "leptos::prelude::AnyView::from($0)"
                    let v2189 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2187 v2188 
                    let v2190 : string = "div"
                    let v2191 : string = "<" + v2190 + " " + v1747 + ">move || { v2189 }</" + v2190 + ">"
                    let v2192 : string = "leptos::prelude::view! { " + v2191 + " }"
                    let v2193 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2192 
                    let v2194 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v2193 |> unbox
                    let v2195 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2196 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2194 v2195 
                    let v2197 : string = "v2196"
                    let v2198 : string = v2197 + v1744 
                    let v2199 : string = v2198 + v1744 
                    let v2200 : string = "vec![" + v2199 + "]"
                    let v2201 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2200 
                    let v2202 : string = "leptos::prelude::Fragment::new($0)"
                    let v2203 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2201 v2202 
                    let v2204 : string = "leptos::prelude::AnyView::from($0)"
                    let v2205 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2203 v2204 
                    let v2206 : string = "<" + v2190 + " " + v1745 + ">move || { v2205 }</" + v2190 + ">"
                    let v2207 : string = "leptos::prelude::view! { " + v2206 + " }"
                    let v2208 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2207 
                    let v2209 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v2208 |> unbox
                    let v2210 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v2211 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2209 v2210 
                    v2211
    let v2395 : string = "v2394"
    let v2396 : string = ""
    let v2397 : string = v2395 + v2396 
    let v2398 : string = v2397 + v2396 
    let v2399 : string = "vec![" + v2398 + "]"
    let v2400 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2399 
    let v2401 : string = "leptos::prelude::Fragment::new($0)"
    let v2402 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2400 v2401 
    v2402
and closure194 (v0 : int32) (v1 : (bool * std_string_String)) : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) =
    let v2 : string = $"leptos::prelude::signal($0)"
    let struct (v3 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v4 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v6 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = v0, struct (v3, v4) 
    v6
and closure193 () (v0 : int32) : ((bool * std_string_String) -> (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))) =
    closure194(v0)
and method207 () : (int32 -> ((bool * std_string_String) -> (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)))) =
    closure193()
and method208 (v0 : Vec<(bool * std_string_String)>) : Vec<(bool * std_string_String)> =
    v0
and closure192 (v0 : Heap2) () : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<Heap0> = v5.l3
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : Heap0 = Fable.Core.RustInterop.emitRustExpr v6 v7 
    let v9 : Vec<(bool * std_string_String)> = v8.l0
    let v10 : (int32 -> ((bool * std_string_String) -> (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)))) = method207()
    let v11 : Vec<(bool * std_string_String)> = method208(v9)
    let v12 : string = "v11.iter().enumerate().map(|(i, x)| v10(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v13 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr () v12 
    v13
and method209 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)>) : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)> =
    v0
and closure196 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)>) (v1 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))) : struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>) =
    let v2 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)> = method209(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let struct (v5 : int32, v6 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v7 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    struct (v5, v6, v7)
and method210 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>), struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>) : Func0<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>), struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> =
    v0
and closure197 (v0 : Func0<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>), struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>) struct (v1 : int32, v2 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v3 : leptos_prelude_WriteSignal<(bool * std_string_String)>) : struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>) =
    let v4 : Func0<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>), struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> = method210(v0)
    let func1_move_x = struct (v1, v2, v3) //
    let v5 : _ = func1_move_x
    let v6 : string = "(move |x| v4(x))($0)"
    let struct (v7 : int32, v8 : int32, v9 : leptos_prelude_ReadSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr v5 v6 
    struct (v7, v8, v9)
and closure195 (v0 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>>, v1 : leptos_prelude_ReadSignal<int32>) () : Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> =
    let v2 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v3 : int32 = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v5 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr v0 v4 
    let v6 : unit = ()
    let v7 : string = $"true; let _func1_from_v6 = Func1::from(move |value| {{ //"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr () v7 
    let v9 : string = $"value"
    let v10 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = Fable.Core.RustInterop.emitRustExpr () v9 
    let (a, b) = v10 
    let v14 : int32 = a
    let struct (v15 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v16 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = b
    let func1_from_result = struct (v14, v15, v16) //
    let v23 : _ = func1_from_result
    let v24 : string = $"true; $0 /*"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr v23 v24 
    let v26 : string = $"*/ }}); //"
    let v27 : bool = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : string = $"_func1_from_v6"
    let v29 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)> = Fable.Core.RustInterop.emitRustExpr () v28 
    let v30 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v31 : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) -> struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = closure196(v29)
    let v32 : Vec<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)> = Fable.Core.RustInterop.emitRustExpr struct (v5, v31) v30 
    let v33 : unit = ()
    let v34 : string = $"true; let _func1_from_v33 = Func1::from(move |value| {{ //"
    let v35 : bool = Fable.Core.RustInterop.emitRustExpr () v34 
    let v36 : string = $"value"
    let struct (v37 : int32, v38 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v39 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr () v36 
    let func1_from_result = struct (v3, v37, v38) //
    let v40 : _ = func1_from_result
    let v41 : string = $"true; $0 /*"
    let v42 : bool = Fable.Core.RustInterop.emitRustExpr v40 v41 
    let v43 : string = $"*/ }}); //"
    let v44 : bool = Fable.Core.RustInterop.emitRustExpr () v43 
    let v45 : string = $"_func1_from_v33"
    let v46 : Func0<struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>), struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> = Fable.Core.RustInterop.emitRustExpr () v45 
    let v47 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v48 : (struct (int32 * leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>) -> struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)) = closure197(v46)
    let v49 : Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> = Fable.Core.RustInterop.emitRustExpr struct (v32, v48) v47 
    v49
and closure198 (v0 : leptos_prelude_ArcMemo<Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>>) () : int32 =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v4 : (struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>) []) = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : int32 = v4.Length
    v5
and method211 (v0 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))) : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) =
    v0
and method212 (v0 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>) : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> =
    v0
and method213 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)>) : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)> =
    v0
and closure200 (v0 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)>) (v1 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))) : (bool * std_string_String) =
    let v2 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)> = method213(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and closure199 (v0 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>>) (v1 : Heap0) : Heap0 =
    let v2 : Vec<(bool * std_string_String)> = v1.l0
    let v3 : std_string_String option = v1.l1
    let v4 : int32 = v1.l2
    let v5 : int32 = v1.l3
    let v6 : US1 = v1.l4
    let v7 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v8 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr v0 v7 
    let v9 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v10 : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) []) = Fable.Core.RustInterop.emitRustExpr v8 v9 
    let v11 : int32 = v10.Length
    let v12 : string = ""
    (* run_target_args'
    let v17 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v18 : string = "&*$0"
    let v19 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v12 v18 
    let _run_target_args'_v17 = v19 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v20 : string = "&*$0"
    let v21 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v12 v20 
    let _run_target_args'_v17 = v21 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v22 : string = "&*$0"
    let v23 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v12 v22 
    let _run_target_args'_v17 = v23 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v25 : Ref<Str> = v12 |> unbox<Ref<Str>>
    let _run_target_args'_v17 = v25 
    #endif
#if FABLE_COMPILER_PYTHON
    let v29 : Ref<Str> = v12 |> unbox<Ref<Str>>
    let _run_target_args'_v17 = v29 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v33 : Ref<Str> = v12 |> unbox<Ref<Str>>
    let _run_target_args'_v17 = v33 
    #endif
#else
    let v37 : Ref<Str> = v12 |> unbox<Ref<Str>>
    let _run_target_args'_v17 = v37 
    #endif
    let v40 : Ref<Str> = _run_target_args'_v17 
    (* run_target_args'
    let v50 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v51 : string = "String::from($0)"
    let v52 : std_string_String = Fable.Core.RustInterop.emitRustExpr v40 v51 
    let _run_target_args'_v50 = v52 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v53 : string = "String::from($0)"
    let v54 : std_string_String = Fable.Core.RustInterop.emitRustExpr v40 v53 
    let _run_target_args'_v50 = v54 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v40 v55 
    let _run_target_args'_v50 = v56 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v58 : std_string_String = v40 |> unbox<std_string_String>
    let _run_target_args'_v50 = v58 
    #endif
#if FABLE_COMPILER_PYTHON
    let v62 : std_string_String = v40 |> unbox<std_string_String>
    let _run_target_args'_v50 = v62 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v40 |> unbox<std_string_String>
    let _run_target_args'_v50 = v66 
    #endif
#else
    let v70 : std_string_String = v40 |> unbox<std_string_String>
    let _run_target_args'_v50 = v70 
    #endif
    let v73 : std_string_String = _run_target_args'_v50 
    let v80 : (bool * std_string_String) = false, v73 
    let v83 : string = $"leptos::prelude::signal($0)"
    let struct (v84 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v85 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr v80 v83 
    let v87 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = v11, struct (v84, v85) 
    let v90 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = method211(v87)
    let v91 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = method212(v8)
    let v92 : string = "true; let mut v91 = v91"
    let v93 : bool = Fable.Core.RustInterop.emitRustExpr () v92 
    let v94 : string = "true; v91.push(v90)"
    let v95 : bool = Fable.Core.RustInterop.emitRustExpr () v94 
    let v96 : string = "v91"
    let v97 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr () v96 
    let v98 : unit = ()
    let v99 : string = $"true; let _func1_from_v98 = Func1::from(move |value| {{ //"
    let v100 : bool = Fable.Core.RustInterop.emitRustExpr () v99 
    let v101 : string = $"value"
    let v102 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = Fable.Core.RustInterop.emitRustExpr () v101 
    let (a, b) = v102 
    let v106 : int32 = a
    let struct (v107 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v108 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = b
    let v115 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v116 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr v107 v115 
    let func1_from_result = v116 //
    let v117 : _ = func1_from_result
    let v118 : string = $"true; $0 /*"
    let v119 : bool = Fable.Core.RustInterop.emitRustExpr v117 v118 
    let v120 : string = $"*/ }}); //"
    let v121 : bool = Fable.Core.RustInterop.emitRustExpr () v120 
    let v122 : string = $"_func1_from_v98"
    let v123 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v122 
    let v124 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v125 : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) -> (bool * std_string_String)) = closure200(v123)
    let v126 : Vec<(bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v97, v125) v124 
    {l0 = v126; l1 = v3; l2 = v4; l3 = v5; l4 = v6} : Heap0
and closure201 () (v0 : int32) : int32 =
    let v1 : int32 = 1 + v0
    v1
and closure202 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and closure203 () () : std_string_String =
    let v0 : string = " bg-gray-300 hover:bg-gray-200"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    v61
and closure204 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure205 (v0 : leptos_prelude_AnyView_) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = "[margin-right:40px]"
    let v2 : string = "r#\"" + v1 + "\"#"
    let v3 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v2 
    v3
and closure206 () () : string =
    let v0 : string = "Accounts"
    v0
and method214 (v0 : leptos_prelude_AnyView_) : (unit -> string) =
    closure206()
and method216 (v0 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)>) : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)> =
    v0
and closure208 (v0 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)>) struct (v1 : int32, v2 : int32, v3 : leptos_prelude_ReadSignal<(bool * std_string_String)>) : (int32 * int32) =
    let v4 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)> = method216(v0)
    let func1_move_x = struct (v1, v2, v3) //
    let v5 : _ = func1_move_x
    let v6 : string = "(move |x| v4(x))($0)"
    let v7 : (int32 * int32) = Fable.Core.RustInterop.emitRustExpr v5 v6 
    v7
and method215 (v0 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)>) : (struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>) -> (int32 * int32)) =
    closure208(v0)
and method217 (v0 : int32) : int32 =
    v0
and method219 (v0 : bool) : bool =
    let v1 : bool = v0 = false
    v1
and closure211 (v0 : int32, v1 : int32) (v2 : (bool * std_string_String)) : (bool * std_string_String) =
    let v3 : bool = v1 = v0
    let v4 : bool = method219(v3)
    if v4 then
        v2
    else
        let (a, b) = v2 
        let v7 : bool = a
        let v8 : std_string_String = b
        let v13 : bool = v7 = false
        let v15 : (bool * std_string_String) = v13, v8 
        v15
and closure210 (v0 : int32) (v1 : int32) : ((bool * std_string_String) -> (bool * std_string_String)) =
    closure211(v0, v1)
and method218 (v0 : int32) : (int32 -> ((bool * std_string_String) -> (bool * std_string_String))) =
    closure210(v0)
and closure209 (v0 : Heap2, v1 : int32) (v2 : leptos_ev_Event) : unit =
    let v3 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v4 : string = "Box::pin($0)"
    let v5 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v7 : Heap1 = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : leptos_prelude_ArcRwSignal<Heap0> = v7.l3
    let v9 : string = "Box::pin($0)"
    let v10 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v8 v9 
    let v11 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v12 : Heap0 = Fable.Core.RustInterop.emitRustExpr v10 v11 
    let v13 : Vec<(bool * std_string_String)> = v12.l0
    let v14 : std_string_String option = v12.l1
    let v15 : int32 = v12.l2
    let v16 : int32 = v12.l3
    let v17 : US1 = v12.l4
    let v18 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v19 : string = "Box::pin($0)"
    let v20 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v18 v19 
    let v21 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v22 : Heap1 = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : leptos_prelude_ArcRwSignal<Heap0> = v22.l3
    let v24 : (int32 -> ((bool * std_string_String) -> (bool * std_string_String))) = method218(v1)
    let v25 : Vec<(bool * std_string_String)> = method208(v13)
    let v26 : string = "v25.iter().enumerate().map(|(i, x)| v24(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v27 : Vec<(bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : Heap0 = {l0 = v27; l1 = v14; l2 = v15; l3 = v16; l4 = v17} : Heap0
    let v29 : string = $"true; leptos::prelude::ArcRwSignal::set(&$0, $1); //"
    let v30 : bool = Fable.Core.RustInterop.emitRustExpr struct (v23, v28) v29 
    ()
and closure212 (v0 : leptos_prelude_ReadSignal<(bool * std_string_String)>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let (a, b) = v2 
    let v5 : bool = a
    let v6 : std_string_String = b
    v5
and method220 (v0 : leptos_prelude_ReadSignal<(bool * std_string_String)>) : (unit -> bool) =
    closure212(v0)
and closure213 (v0 : int32) () : std_string_String =
    let v1 : string = "account-" + string v0 + ""
    (* run_target_args'
    let v6 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v7 : string = "&*$0"
    let v8 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v7 
    let _run_target_args'_v6 = v8 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v9 : string = "&*$0"
    let v10 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v9 
    let _run_target_args'_v6 = v10 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v11 : string = "&*$0"
    let v12 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v11 
    let _run_target_args'_v6 = v12 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v14 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v14 
    #endif
#if FABLE_COMPILER_PYTHON
    let v18 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v18 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v22 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v22 
    #endif
#else
    let v26 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v26 
    #endif
    let v29 : Ref<Str> = _run_target_args'_v6 
    (* run_target_args'
    let v39 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v40 : string = "String::from($0)"
    let v41 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v40 
    let _run_target_args'_v39 = v41 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v42 
    let _run_target_args'_v39 = v43 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v44 
    let _run_target_args'_v39 = v45 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v47 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v47 
    #endif
#if FABLE_COMPILER_PYTHON
    let v51 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v51 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v55 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v55 
    #endif
#else
    let v59 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v59 
    #endif
    let v62 : std_string_String = _run_target_args'_v39 
    v62
and method221 (v0 : int32) : (unit -> std_string_String) =
    closure213(v0)
and method223 (v0 : bool) : bool =
    let v1 : bool = v0 = false
    v1
and closure215 (v0 : int32, v1 : std_string_String, v2 : int32) (v3 : (bool * std_string_String)) : (bool * std_string_String) =
    let v4 : bool = v2 = v0
    let v5 : bool = method223(v4)
    if v5 then
        v3
    else
        let (a, b) = v3 
        let v8 : bool = a
        let v9 : std_string_String = b
        let v15 : (bool * std_string_String) = v8, v1 
        v15
and closure214 (v0 : int32, v1 : std_string_String) (v2 : int32) : ((bool * std_string_String) -> (bool * std_string_String)) =
    closure215(v0, v1, v2)
and method222 (v0 : int32, v1 : std_string_String) : (int32 -> ((bool * std_string_String) -> (bool * std_string_String))) =
    closure214(v0, v1)
and closure216 () () : string =
    let v0 : string = "flex-1"
    v0
and method224 (v0 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>) : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> =
    v0
and closure219 () (v0 : bool) : bool =
    let v1 : bool = v0 = false
    v1
and method226 () : (bool -> bool) =
    closure219()
and closure218 (v0 : int32) (v1 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))) : bool =
    let (a, b) = v1 
    let v5 : int32 = a
    let struct (v6 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v7 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = b
    let v14 : bool = v5 = v0
    let v15 : (bool -> bool) = method226()
    v15 v14
and method225 (v0 : int32) : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) -> bool) =
    closure218(v0)
and closure217 (v0 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>>, v1 : int32) (v2 : Heap0) : Heap0 =
    let v3 : Vec<(bool * std_string_String)> = v2.l0
    let v4 : std_string_String option = v2.l1
    let v5 : int32 = v2.l2
    let v6 : int32 = v2.l3
    let v7 : US1 = v2.l4
    let v8 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v9 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let v10 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = method224(v9)
    let v11 : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) -> bool) = method225(v1)
    let v12 : string = "true; let mut v10 = v10"
    let v13 : bool = Fable.Core.RustInterop.emitRustExpr () v12 
    let v14 : string = "true; v10.retain(|x| v11(x.clone()))"
    let v15 : bool = Fable.Core.RustInterop.emitRustExpr () v14 
    let v16 : string = "v10"
    let v17 : Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))> = Fable.Core.RustInterop.emitRustExpr () v16 
    let v18 : unit = ()
    let v19 : string = $"true; let _func1_from_v18 = Func1::from(move |value| {{ //"
    let v20 : bool = Fable.Core.RustInterop.emitRustExpr () v19 
    let v21 : string = $"value"
    let v22 : (int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) = Fable.Core.RustInterop.emitRustExpr () v21 
    let (a, b) = v22 
    let v26 : int32 = a
    let struct (v27 : leptos_prelude_ReadSignal<(bool * std_string_String)>, v28 : leptos_prelude_WriteSignal<(bool * std_string_String)>) = b
    let v35 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v36 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr v27 v35 
    let func1_from_result = v36 //
    let v37 : _ = func1_from_result
    let v38 : string = $"true; $0 /*"
    let v39 : bool = Fable.Core.RustInterop.emitRustExpr v37 v38 
    let v40 : string = $"*/ }}); //"
    let v41 : bool = Fable.Core.RustInterop.emitRustExpr () v40 
    let v42 : string = $"_func1_from_v18"
    let v43 : Func0<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)), (bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v42 
    let v44 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v45 : ((int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>)) -> (bool * std_string_String)) = closure200(v43)
    let v46 : Vec<(bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr struct (v17, v45) v44 
    {l0 = v46; l1 = v4; l2 = v5; l3 = v6; l4 = v7} : Heap0
and closure220 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and closure221 () () : std_string_String =
    let v0 : string = " pr-[7px] pl-[5px]"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    v61
and method227 (v0 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), leptos_prelude_AnyView_>) : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), leptos_prelude_AnyView_> =
    v0
and closure222 (v0 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), leptos_prelude_AnyView_>) struct (v1 : int32, v2 : int32, v3 : leptos_prelude_ReadSignal<(bool * std_string_String)>) : leptos_prelude_AnyView_ =
    let v4 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), leptos_prelude_AnyView_> = method227(v0)
    let func1_move_x = struct (v1, v2, v3) //
    let v5 : _ = func1_move_x
    let v6 : string = "(move |x| v4(x))($0)"
    let v7 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5 v6 
    v7
and closure207 (v0 : Heap2, v1 : leptos_prelude_ArcMemo<Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>>, v2 : leptos_prelude_ArcMemo<int32>, v3 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>>, v4 : leptos_prelude_WriteSignal<int32>) () : leptos_dom_Fragment =
    let v5 : string = "class=\"flex flex-1 flex-col p-[8px] gap-[8px]\""
    let v6 : string = ""
    let v7 : string = " " + v5 + v6 + ""
    let v8 : string = "$0"
    let v9 : leptos_prelude_ArcMemo<Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>> = Fable.Core.RustInterop.emitRustExpr v1 v8 
    let v10 : unit = ()
    let v11 : string = $"true; let _func1_from_v10 = Func1::from(move |value| {{ //"
    let v12 : bool = Fable.Core.RustInterop.emitRustExpr () v11 
    let v13 : string = $"value"
    let struct (v14 : int32, v15 : int32, v16 : leptos_prelude_ReadSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr () v13 
    let v18 : (int32 * int32) = v14, v15 
    let func1_from_result = v18 //
    let v21 : _ = func1_from_result
    let v22 : string = $"true; $0 /*"
    let v23 : bool = Fable.Core.RustInterop.emitRustExpr v21 v22 
    let v24 : string = $"*/ }}); //"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr () v24 
    let v26 : string = $"_func1_from_v10"
    let v27 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), (int32 * int32)> = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : (struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>) -> (int32 * int32)) = method215(v27)
    let v29 : unit = ()
    let v30 : string = $"true; let _func1_from_v29 = Func1::from(move |value| {{ //"
    let v31 : bool = Fable.Core.RustInterop.emitRustExpr () v30 
    let v32 : string = $"value"
    let struct (v33 : int32, v34 : int32, v35 : leptos_prelude_ReadSignal<(bool * std_string_String)>) = Fable.Core.RustInterop.emitRustExpr () v32 
    let v36 : string = "class=\"flex gap-[8px] [align-items:center]\""
    let v37 : string = " " + v36 + v6 + ""
    let v38 : int32 = method217(v34)
    let v39 : unit = ()
    let v40 : string = $"true; let _func0_from_v39 = Func0::from(move || {{ //"
    let v41 : bool = Fable.Core.RustInterop.emitRustExpr () v40 
    let v42 : string = "account-" + string v38 + ""
    (* run_target_args'
    let v47 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v48 : string = "&*$0"
    let v49 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v42 v48 
    let _run_target_args'_v47 = v49 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v50 : string = "&*$0"
    let v51 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v42 v50 
    let _run_target_args'_v47 = v51 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v52 : string = "&*$0"
    let v53 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v42 v52 
    let _run_target_args'_v47 = v53 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v55 : Ref<Str> = v42 |> unbox<Ref<Str>>
    let _run_target_args'_v47 = v55 
    #endif
#if FABLE_COMPILER_PYTHON
    let v59 : Ref<Str> = v42 |> unbox<Ref<Str>>
    let _run_target_args'_v47 = v59 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v63 : Ref<Str> = v42 |> unbox<Ref<Str>>
    let _run_target_args'_v47 = v63 
    #endif
#else
    let v67 : Ref<Str> = v42 |> unbox<Ref<Str>>
    let _run_target_args'_v47 = v67 
    #endif
    let v70 : Ref<Str> = _run_target_args'_v47 
    (* run_target_args'
    let v80 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v81 : string = "String::from($0)"
    let v82 : std_string_String = Fable.Core.RustInterop.emitRustExpr v70 v81 
    let _run_target_args'_v80 = v82 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v83 : string = "String::from($0)"
    let v84 : std_string_String = Fable.Core.RustInterop.emitRustExpr v70 v83 
    let _run_target_args'_v80 = v84 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v85 : string = "String::from($0)"
    let v86 : std_string_String = Fable.Core.RustInterop.emitRustExpr v70 v85 
    let _run_target_args'_v80 = v86 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v88 : std_string_String = v70 |> unbox<std_string_String>
    let _run_target_args'_v80 = v88 
    #endif
#if FABLE_COMPILER_PYTHON
    let v92 : std_string_String = v70 |> unbox<std_string_String>
    let _run_target_args'_v80 = v92 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v96 : std_string_String = v70 |> unbox<std_string_String>
    let _run_target_args'_v80 = v96 
    #endif
#else
    let v100 : std_string_String = v70 |> unbox<std_string_String>
    let _run_target_args'_v80 = v100 
    #endif
    let v103 : std_string_String = _run_target_args'_v80 
    let v109 : string = $"true; $0 /*"
    let v110 : bool = Fable.Core.RustInterop.emitRustExpr v103 v109 
    let v111 : string = $"*/ }}); //"
    let v112 : bool = Fable.Core.RustInterop.emitRustExpr () v111 
    let v113 : string = $"_func0_from_v39"
    let v114 : Func0<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v113 
    let v115 : string = "block"
    let v116 : string = "relative"
    let v117 : string = "h-8"
    let v118 : string = "w-14"
    let v119 : string = "cursor-pointer"
    let v120 : string = "[-webkit-tap-highlight-color:_transparent]"
    let v121 : string list = []
    let v123 : string list = v120 :: v121 
    let v127 : string list = v119 :: v123 
    let v131 : string list = v118 :: v127 
    let v135 : string list = v117 :: v131 
    let v139 : string list = v116 :: v135 
    let v143 : string list = v115 :: v139 
    let v149 : unit = ()
    let _let'_v149 =
        seq {
            yield! v143 
            (* indent
            ()
        indent *)
        }
        (* indent
        ()
    indent *)
    let v152 : string seq = _let'_v149 
    let v159 : (string -> (string seq -> string)) = String.concat
    let v160 : string = " "
    let v161 : (string seq -> string) = v159 v160
    let v162 : string = v161 v152
    (* run_target_args'
    let v169 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v170 : string = "&*$0"
    let v171 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v162 v170 
    let _run_target_args'_v169 = v171 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v172 : string = "&*$0"
    let v173 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v162 v172 
    let _run_target_args'_v169 = v173 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v174 : string = "&*$0"
    let v175 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v162 v174 
    let _run_target_args'_v169 = v175 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v177 : Ref<Str> = v162 |> unbox<Ref<Str>>
    let _run_target_args'_v169 = v177 
    #endif
#if FABLE_COMPILER_PYTHON
    let v181 : Ref<Str> = v162 |> unbox<Ref<Str>>
    let _run_target_args'_v169 = v181 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v185 : Ref<Str> = v162 |> unbox<Ref<Str>>
    let _run_target_args'_v169 = v185 
    #endif
#else
    let v189 : Ref<Str> = v162 |> unbox<Ref<Str>>
    let _run_target_args'_v169 = v189 
    #endif
    let v192 : Ref<Str> = _run_target_args'_v169 
    (* run_target_args'
    let v202 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v203 : string = "String::from($0)"
    let v204 : std_string_String = Fable.Core.RustInterop.emitRustExpr v192 v203 
    let _run_target_args'_v202 = v204 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v205 : string = "String::from($0)"
    let v206 : std_string_String = Fable.Core.RustInterop.emitRustExpr v192 v205 
    let _run_target_args'_v202 = v206 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v207 : string = "String::from($0)"
    let v208 : std_string_String = Fable.Core.RustInterop.emitRustExpr v192 v207 
    let _run_target_args'_v202 = v208 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v210 : std_string_String = v192 |> unbox<std_string_String>
    let _run_target_args'_v202 = v210 
    #endif
#if FABLE_COMPILER_PYTHON
    let v214 : std_string_String = v192 |> unbox<std_string_String>
    let _run_target_args'_v202 = v214 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v218 : std_string_String = v192 |> unbox<std_string_String>
    let _run_target_args'_v202 = v218 
    #endif
#else
    let v222 : std_string_String = v192 |> unbox<std_string_String>
    let _run_target_args'_v202 = v222 
    #endif
    let v225 : std_string_String = _run_target_args'_v202 
    let v231 : string = "$0"
    let v232 : std_string_String = Fable.Core.RustInterop.emitRustExpr v225 v231 
    let v233 : string = "for=move || v114()"
    let v234 : string = "class=v232"
    let v235 : string = " " + v233 + v6 + ""
    let v236 : string = " " + v234 + v235 + ""
    let v237 : (leptos_ev_Event -> unit) = closure209(v0, v38)
    let v238 : string = "true; let v237 = $0; //"
    let v239 : bool = Fable.Core.RustInterop.emitRustExpr v237 v238 
    let v240 : (unit -> bool) = method220(v35)
    let v241 : (unit -> std_string_String) = method221(v38)
    let v242 : string = "class=\"peer sr-only [&:checked_+_span_svg[data-checked-icon]]:block [&:checked_+_span_svg[data-unchecked-icon]]:hidden\""
    let v243 : string = "type=\"checkbox\""
    let v244 : string = "id=move || v241()"
    let v245 : string = "on:change=move |event| v237(event)"
    let v246 : string = "prop:checked=move || v240()"
    let v247 : string = " " + v242 + v6 + ""
    let v248 : string = " " + v243 + v247 + ""
    let v249 : string = " " + v244 + v248 + ""
    let v250 : string = " " + v245 + v249 + ""
    let v251 : string = " " + v246 + v250 + ""
    let v252 : string = "input"
    let v253 : string = "<" + v252 + " " + v251 + " />"
    let v254 : string = "leptos::prelude::view! { " + v253 + " }"
    let v255 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v254 
    let v256 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v255 |> unbox
    let v257 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v258 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v256 v257 
    let v259 : string = "class=\"absolute inset-y-0 start-0 z-10 m-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-white dark:bg-gray-400 peer-checked:bg-white text-gray-200 transition-all peer-checked:start-6 peer-checked:text-gray-400\""
    let v260 : string = " " + v259 + v6 + ""
    let v261 : string = "data-unchecked-icon"
    let v262 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v263 : string = "class=\"h-4 w-4\""
    let v264 : string = "viewBox=\"0 0 20 20\""
    let v265 : string = "fill=\"currentColor\""
    let v266 : string = " " + v261 + v6 + ""
    let v267 : string = " " + v262 + v266 + ""
    let v268 : string = " " + v263 + v267 + ""
    let v269 : string = " " + v264 + v268 + ""
    let v270 : string = " " + v265 + v269 + ""
    let v271 : string = "fill-rule=\"evenodd\""
    let v272 : string = "d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\""
    let v273 : string = "clip-rule=\"evenodd\""
    let v274 : string = " " + v271 + v6 + ""
    let v275 : string = " " + v272 + v274 + ""
    let v276 : string = " " + v273 + v275 + ""
    let v277 : string = "vec![" + v6 + "]"
    let v278 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v277 
    let v279 : string = "leptos::prelude::Fragment::new($0)"
    let v280 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v278 v279 
    let v281 : string = "leptos::prelude::AnyView::from($0)"
    let v282 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v280 v281 
    let v283 : string = "path"
    let v284 : string = "<" + v283 + " " + v276 + ">move || { v282 }</" + v283 + ">"
    let v285 : string = "leptos::prelude::view! { " + v284 + " }"
    let v286 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v285 
    let v287 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v286 |> unbox
    let v288 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v289 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v287 v288 
    let v290 : string = "v289"
    let v291 : string = v290 + v6 
    let v292 : string = v291 + v6 
    let v293 : string = "vec![" + v292 + "]"
    let v294 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v293 
    let v295 : string = "leptos::prelude::Fragment::new($0)"
    let v296 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v294 v295 
    let v297 : string = "leptos::prelude::AnyView::from($0)"
    let v298 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v296 v297 
    let v299 : string = "svg"
    let v300 : string = "<" + v299 + " " + v270 + ">move || { v298 }</" + v299 + ">"
    let v301 : string = "leptos::prelude::view! { " + v300 + " }"
    let v302 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v301 
    let v303 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v302 |> unbox
    let v304 : string = "data-checked-icon"
    let v305 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v306 : string = "class=\"hidden h-4 w-4\""
    let v307 : string = "viewBox=\"0 0 20 20\""
    let v308 : string = "fill=\"currentColor\""
    let v309 : string = " " + v304 + v6 + ""
    let v310 : string = " " + v305 + v309 + ""
    let v311 : string = " " + v306 + v310 + ""
    let v312 : string = " " + v307 + v311 + ""
    let v313 : string = " " + v308 + v312 + ""
    let v314 : string = "fill-rule=\"evenodd\""
    let v315 : string = "d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\""
    let v316 : string = "clip-rule=\"evenodd\""
    let v317 : string = " " + v314 + v6 + ""
    let v318 : string = " " + v315 + v317 + ""
    let v319 : string = " " + v316 + v318 + ""
    let v320 : string = "vec![" + v6 + "]"
    let v321 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v320 
    let v322 : string = "leptos::prelude::Fragment::new($0)"
    let v323 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v321 v322 
    let v324 : string = "leptos::prelude::AnyView::from($0)"
    let v325 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v323 v324 
    let v326 : string = "<" + v283 + " " + v319 + ">move || { v325 }</" + v283 + ">"
    let v327 : string = "leptos::prelude::view! { " + v326 + " }"
    let v328 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v327 
    let v329 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v328 |> unbox
    let v330 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v331 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v329 v330 
    let v332 : string = "v331"
    let v333 : string = v332 + v6 
    let v334 : string = v333 + v6 
    let v335 : string = "vec![" + v334 + "]"
    let v336 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v335 
    let v337 : string = "leptos::prelude::Fragment::new($0)"
    let v338 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v336 v337 
    let v339 : string = "leptos::prelude::AnyView::from($0)"
    let v340 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v338 v339 
    let v341 : string = "<" + v299 + " " + v313 + ">move || { v340 }</" + v299 + ">"
    let v342 : string = "leptos::prelude::view! { " + v341 + " }"
    let v343 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v342 
    let v344 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v343 |> unbox
    let v345 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v346 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v344 v345 
    let v347 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v348 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v303 v347 
    let v349 : string = "v346"
    let v350 : string = v349 + v6 
    let v351 : string = v350 + v6 
    let v352 : string = "v348"
    let v353 : string = ", "
    let v354 : string = v352 + v353 
    let v355 : string = v354 + v351 
    let v356 : string = "vec![" + v355 + "]"
    let v357 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v356 
    let v358 : string = "leptos::prelude::Fragment::new($0)"
    let v359 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v357 v358 
    let v360 : string = "leptos::prelude::AnyView::from($0)"
    let v361 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v359 v360 
    let v362 : string = "span"
    let v363 : string = "<" + v362 + " " + v260 + ">move || { v361 }</" + v362 + ">"
    let v364 : string = "leptos::prelude::view! { " + v363 + " }"
    let v365 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v364 
    let v366 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v365 |> unbox
    let v367 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v368 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v366 v367 
    let v369 : string = "class=\"absolute inset-0 rounded-full bg-gray-200 dark:bg-gray-200 transition peer-checked:bg-gray-300\""
    let v370 : string = " " + v369 + v6 + ""
    let v371 : string = "vec![" + v6 + "]"
    let v372 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v371 
    let v373 : string = "leptos::prelude::Fragment::new($0)"
    let v374 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v372 v373 
    let v375 : string = "leptos::prelude::AnyView::from($0)"
    let v376 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v374 v375 
    let v377 : string = "<" + v362 + " " + v370 + ">move || { v376 }</" + v362 + ">"
    let v378 : string = "leptos::prelude::view! { " + v377 + " }"
    let v379 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v378 
    let v380 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v379 |> unbox
    let v381 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v382 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v380 v381 
    let v383 : string = "v382"
    let v384 : string = v383 + v6 
    let v385 : string = v384 + v6 
    let v386 : string = "v368"
    let v387 : string = v386 + v353 
    let v388 : string = v387 + v385 
    let v389 : string = "v258"
    let v390 : string = v389 + v353 
    let v391 : string = v390 + v388 
    let v392 : string = "vec![" + v391 + "]"
    let v393 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v392 
    let v394 : string = "leptos::prelude::Fragment::new($0)"
    let v395 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v393 v394 
    let v396 : string = "leptos::prelude::AnyView::from($0)"
    let v397 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v395 v396 
    let v398 : string = "label"
    let v399 : string = "<" + v398 + " " + v236 + ">move || { v397 }</" + v398 + ">"
    let v400 : string = "leptos::prelude::view! { " + v399 + " }"
    let v401 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v400 
    let v402 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Label>> = v401 |> unbox
    let v403 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v404 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v402 v403 
    let v405 : unit = ()
    let v406 : string = $"true; let _func0_from_v405 = Func0::from(move || {{ //"
    let v407 : bool = Fable.Core.RustInterop.emitRustExpr () v406 
    let v408 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v409 : (bool * std_string_String) = Fable.Core.RustInterop.emitRustExpr v35 v408 
    let (a, b) = v409 
    let v412 : bool = a
    let v413 : std_string_String = b
    let v418 : string = $"true; $0 /*"
    let v419 : bool = Fable.Core.RustInterop.emitRustExpr v413 v418 
    let v420 : string = $"*/ }}); //"
    let v421 : bool = Fable.Core.RustInterop.emitRustExpr () v420 
    let v422 : string = $"_func0_from_v405"
    let v423 : Func0<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v422 
    let v424 : unit = ()
    let v425 : string = $"true; let _func1_from_v424 = Func0::from(move || {{ //"
    let v426 : bool = Fable.Core.RustInterop.emitRustExpr () v425 
    let v427 : string = $"value"
    let v428 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v427 
    let v429 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v430 : string = "Box::pin($0)"
    let v431 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v429 v430 
    let v432 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v433 : Heap1 = Fable.Core.RustInterop.emitRustExpr v431 v432 
    let v434 : leptos_prelude_ArcRwSignal<Heap0> = v433.l3
    let v435 : string = "Box::pin($0)"
    let v436 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap0>>> = Fable.Core.RustInterop.emitRustExpr v434 v435 
    let v437 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v438 : Heap0 = Fable.Core.RustInterop.emitRustExpr v436 v437 
    let v439 : Vec<(bool * std_string_String)> = v438.l0
    let v440 : std_string_String option = v438.l1
    let v441 : int32 = v438.l2
    let v442 : int32 = v438.l3
    let v443 : US1 = v438.l4
    let v444 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v445 : string = "Box::pin($0)"
    let v446 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v444 v445 
    let v447 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v448 : Heap1 = Fable.Core.RustInterop.emitRustExpr v446 v447 
    let v449 : leptos_prelude_ArcRwSignal<Heap0> = v448.l3
    let v450 : (int32 -> ((bool * std_string_String) -> (bool * std_string_String))) = method222(v38, v428)
    let v451 : Vec<(bool * std_string_String)> = method208(v439)
    let v452 : string = "v451.iter().enumerate().map(|(i, x)| v450(i.try_into().unwrap())(x.clone())).collect::<Vec<_>>()"
    let v453 : Vec<(bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr () v452 
    let v454 : Heap0 = {l0 = v453; l1 = v440; l2 = v441; l3 = v442; l4 = v443} : Heap0
    let v455 : string = $"true; leptos::prelude::ArcRwSignal::set(&$0, $1); //"
    let v456 : bool = Fable.Core.RustInterop.emitRustExpr struct (v449, v454) v455 
    let v457 : string = $"true; /*"
    let v458 : bool = Fable.Core.RustInterop.emitRustExpr () v457 
    let v459 : string = $"*/ }}); //"
    let v460 : bool = Fable.Core.RustInterop.emitRustExpr () v459 
    let v461 : string = $"_func1_from_v424"
    let v462 : Func0<std_string_String, unit> = Fable.Core.RustInterop.emitRustExpr () v461 
    let v463 : string = "$0"
    let v464 : (unit -> string) = closure216()
    let v465 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v464 v463 
    let v466 : string = "class=move || \"bg-gray-50 h-[31px] [font-size:.875rem] \".to_owned() + &v465(())"
    let v467 : string = "prop:value=move || v423()"
    let v468 : (std_string_String -> unit) = closure180(v462)
    let v469 : string = "on:keyup=move |event: web_sys::KeyboardEvent| v468(leptos::prelude::event_target_value(&event))"
    let v470 : string = " " + v466 + v6 + ""
    let v471 : string = " " + v467 + v470 + ""
    let v472 : string = " " + v469 + v471 + ""
    let v473 : string = "<" + v252 + " " + v472 + " />"
    let v474 : string = "leptos::prelude::view! { " + v473 + " }"
    let v475 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v474 
    let v476 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v475 |> unbox
    let v477 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v478 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v476 v477 
    let v479 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v480 : int32 = Fable.Core.RustInterop.emitRustExpr v2 v479 
    let v481 : bool = v480 = 1
    let v592 : leptos_prelude_AnyView_ =
        if v481 then
            let v482 : string = "vec![" + v6 + "]"
            let v483 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v482 
            let v484 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v485 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v483 v484 
            v485
        else
            let v486 : unit = ()
            let v487 : string = $"true; let _func0_from_v486 = Func0::from(move || {{ //"
            let v488 : bool = Fable.Core.RustInterop.emitRustExpr () v487 
            let v489 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
            let v490 : string = "Box::pin($0)"
            let v491 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v489 v490 
            let v492 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
            let v493 : Heap1 = Fable.Core.RustInterop.emitRustExpr v491 v492 
            let v494 : leptos_prelude_ArcRwSignal<Heap0> = v493.l3
            let v495 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
            let v496 : bool = Fable.Core.RustInterop.emitRustExpr v494 v495 
            let v498 : TypeEmit<Heap0> = null |> unbox<TypeEmit<Heap0>>
            let v501 : string = "*/ | { *x = $0(x.clone()) }); //"
            let v502 : (Heap0 -> Heap0) = closure217(v3, v38)
            let v503 : bool = Fable.Core.RustInterop.emitRustExpr v502 v501 
            let v504 : string = $"true; leptos::prelude::WriteSignal::update(&$0, |x: &mut /*"
            let v505 : bool = Fable.Core.RustInterop.emitRustExpr v4 v504 
            let v507 : TypeEmit<int32> = null |> unbox<TypeEmit<int32>>
            let v510 : string = "*/ | { *x = $0(x.clone()) }); //"
            let v511 : (int32 -> int32) = closure201()
            let v512 : bool = Fable.Core.RustInterop.emitRustExpr v511 v510 
            // rust.func0_from / is_unit
            let v513 : string = $"true; /*"
            let v514 : bool = Fable.Core.RustInterop.emitRustExpr () v513 
            let v515 : string = $"*/ }}); //"
            let v516 : bool = Fable.Core.RustInterop.emitRustExpr () v515 
            let v517 : string = $"_func0_from_v486"
            let v518 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v517 
            let v519 : string = "$0"
            let v520 : (unit -> string) = closure220()
            let v521 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v520 v519 
            let v522 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v523 : string = "fill=\"none\""
            let v524 : string = "viewBox=\"0 0 24 24\""
            let v525 : string = "stroke-width=\"1.5\""
            let v526 : string = "stroke=\"currentColor\""
            let v527 : string = "class=move || \" \".to_owned() + &v521(())"
            let v528 : string = " " + v522 + v6 + ""
            let v529 : string = " " + v523 + v528 + ""
            let v530 : string = " " + v524 + v529 + ""
            let v531 : string = " " + v525 + v530 + ""
            let v532 : string = " " + v526 + v531 + ""
            let v533 : string = " " + v527 + v532 + ""
            let v534 : string = "stroke-linecap=\"round\""
            let v535 : string = "stroke-linejoin=\"round\""
            let v536 : string = "d=\"M6 6l12 12m0-12L6 18\""
            let v537 : string = " " + v534 + v6 + ""
            let v538 : string = " " + v535 + v537 + ""
            let v539 : string = " " + v536 + v538 + ""
            let v540 : string = "vec![" + v6 + "]"
            let v541 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v540 
            let v542 : string = "leptos::prelude::Fragment::new($0)"
            let v543 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v541 v542 
            let v544 : string = "leptos::prelude::AnyView::from($0)"
            let v545 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v543 v544 
            let v546 : string = "<" + v283 + " " + v539 + ">move || { v545 }</" + v283 + ">"
            let v547 : string = "leptos::prelude::view! { " + v546 + " }"
            let v548 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v547 
            let v549 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v548 |> unbox
            let v550 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v551 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v549 v550 
            let v552 : string = "v551"
            let v553 : string = v552 + v6 
            let v554 : string = v553 + v6 
            let v555 : string = "vec![" + v554 + "]"
            let v556 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v555 
            let v557 : string = "leptos::prelude::Fragment::new($0)"
            let v558 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v556 v557 
            let v559 : string = "leptos::prelude::AnyView::from($0)"
            let v560 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v558 v559 
            let v561 : string = "<" + v299 + " " + v533 + ">move || { v560 }</" + v299 + ">"
            let v562 : string = "leptos::prelude::view! { " + v561 + " }"
            let v563 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v562 
            let v564 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v563 |> unbox
            let v565 : string = "on:click=move |_| v518()"
            let v566 : string = "aria-label=\"Delete\""
            let v567 : string = "$0"
            let v568 : (unit -> std_string_String) = closure221()
            let v569 : (unit -> std_string_String) = Fable.Core.RustInterop.emitRustExpr v568 v567 
            let v570 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] pb-[8px] pt-[8px] px-[12px] \".to_owned() + &v569(())"
            let v571 : string = " " + v570 + v6 + ""
            let v572 : string = " " + v565 + v571 + ""
            let v573 : string = " " + v566 + v572 + ""
            let v574 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v575 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v564 v574 
            let v576 : string = "v575"
            let v577 : string = v576 + v6 
            let v578 : string = v577 + v6 
            let v579 : string = "vec![" + v578 + "]"
            let v580 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v579 
            let v581 : string = "leptos::prelude::Fragment::new($0)"
            let v582 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v580 v581 
            let v583 : string = "leptos::prelude::AnyView::from($0)"
            let v584 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v582 v583 
            let v585 : string = "button"
            let v586 : string = "<" + v585 + " " + v573 + ">move || { v584 }</" + v585 + ">"
            let v587 : string = "leptos::prelude::view! { " + v586 + " }"
            let v588 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v587 
            let v589 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Button>> = v588 |> unbox
            let v590 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v591 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v589 v590 
            v591
    let v593 : string = "v592"
    let v594 : string = v593 + v6 
    let v595 : string = v594 + v6 
    let v596 : string = "v478"
    let v597 : string = v596 + v353 
    let v598 : string = v597 + v595 
    let v599 : string = "v404"
    let v600 : string = v599 + v353 
    let v601 : string = v600 + v598 
    let v602 : string = "vec![" + v601 + "]"
    let v603 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v602 
    let v604 : string = "leptos::prelude::Fragment::new($0)"
    let v605 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v603 v604 
    let v606 : string = "leptos::prelude::AnyView::from($0)"
    let v607 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v605 v606 
    let v608 : string = "div"
    let v609 : string = "<" + v608 + " " + v37 + ">move || { v607 }</" + v608 + ">"
    let v610 : string = "leptos::prelude::view! { " + v609 + " }"
    let v611 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v610 
    let v612 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v611 |> unbox
    let v613 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v614 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v612 v613 
    let v615 : string = "v614"
    let v616 : string = v615 + v6 
    let v617 : string = v616 + v6 
    let v618 : string = "vec![" + v617 + "]"
    let v619 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v618 
    let v620 : string = "leptos::prelude::Fragment::new($0)"
    let v621 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v619 v620 
    let v622 : string = "leptos::prelude::AnyView::from($0)"
    let v623 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v621 v622 
    let func1_from_result = v623 //
    let v624 : _ = func1_from_result
    let v625 : string = $"true; $0 /*"
    let v626 : bool = Fable.Core.RustInterop.emitRustExpr v624 v625 
    let v627 : string = $"*/ }}); //"
    let v628 : bool = Fable.Core.RustInterop.emitRustExpr () v627 
    let v629 : string = $"_func1_from_v29"
    let v630 : Func0<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>), leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v629 
    let v631 : string = "each=v9"
    let v632 : string = "key=move |x| v28(x.to_owned())"
    let v633 : string = "let:x"
    let v634 : (struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>) -> leptos_prelude_AnyView_) = closure222(v630)
    let v635 : string = "children=move |x| v634(x)"
    let v636 : string = " " + v631 + v6 + ""
    let v637 : string = " " + v632 + v636 + ""
    let v638 : string = " " + v633 + v637 + ""
    let v639 : string = " " + v635 + v638 + ""
    let v640 : string = "leptos::prelude::For"
    let v641 : string = "<" + v640 + " " + v639 + " />"
    let v642 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::view! { " + v641 + " })"
    let v643 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr () v642 
    let v644 : string = "v643"
    let v645 : string = v644 + v6 
    let v646 : string = v645 + v6 
    let v647 : string = "vec![" + v646 + "]"
    let v648 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v647 
    let v649 : string = "leptos::prelude::Fragment::new($0)"
    let v650 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v648 v649 
    let v651 : string = "leptos::prelude::AnyView::from($0)"
    let v652 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v650 v651 
    let v653 : string = "<" + v608 + " " + v7 + ">move || { v652 }</" + v608 + ">"
    let v654 : string = "leptos::prelude::view! { " + v653 + " }"
    let v655 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v654 
    let v656 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v655 |> unbox
    let v657 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v658 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v656 v657 
    let v659 : string = "v658"
    let v660 : string = v659 + v6 
    let v661 : string = v660 + v6 
    let v662 : string = "vec![" + v661 + "]"
    let v663 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v662 
    let v664 : string = "leptos::prelude::Fragment::new($0)"
    let v665 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v663 v664 
    v665
and closure223 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure224 () () : Ref<Lifetime<StaticLifetime, Str>> =
    let v0 : string = ""
    let v1 : string = "r#\"" + v0 + "\"#"
    let v2 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v1 
    v2
and closure225 () () : string =
    let v0 : string = "View"
    v0
and method228 () : (unit -> string) =
    closure225()
and closure227 () () : leptos_dom_Fragment =
    let v0 : string = "Dark Mode"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method229 () : (unit -> leptos_dom_Fragment) =
    closure227()
and closure230 () (v0 : bool) : bool =
    let v1 : bool = v0 = false
    v1
and closure229 (v0 : Heap2) (v1 : leptos_ev_Event) : unit =
    let v2 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v3 : string = "Box::pin($0)"
    let v4 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v6 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : leptos_prelude_ArcRwSignal<bool> = v6.l0
    let v8 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
    let v9 : bool = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v11 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
    let v14 : string = "*/ | { *x = $0(x.clone()) }); //"
    let v15 : (bool -> bool) = closure230()
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr v15 v14 
    ()
and closure231 (v0 : Heap2) () : bool =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<bool> = v5.l0
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr v6 v7 
    v8
and method231 (v0 : Heap2) : (unit -> bool) =
    closure231(v0)
and closure232 () () : std_string_String =
    let v0 : string = "dark-mode"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    v61
and method232 () : (unit -> std_string_String) =
    closure232()
and closure228 (v0 : Heap2) () : leptos_dom_Fragment =
    let v1 : unit = ()
    let v2 : string = $"true; let _func0_from_v1 = Func0::from(move || {{ //"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr () v2 
    let v4 : string = "dark-mode"
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    let v71 : string = $"true; $0 /*"
    let v72 : bool = Fable.Core.RustInterop.emitRustExpr v65 v71 
    let v73 : string = $"*/ }}); //"
    let v74 : bool = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = $"_func0_from_v1"
    let v76 : Func0<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v75 
    let v77 : string = "block"
    let v78 : string = "relative"
    let v79 : string = "h-8"
    let v80 : string = "w-14"
    let v81 : string = "cursor-pointer"
    let v82 : string = "[-webkit-tap-highlight-color:_transparent]"
    let v83 : string list = []
    let v85 : string list = v82 :: v83 
    let v89 : string list = v81 :: v85 
    let v93 : string list = v80 :: v89 
    let v97 : string list = v79 :: v93 
    let v101 : string list = v78 :: v97 
    let v105 : string list = v77 :: v101 
    let v111 : unit = ()
    let _let'_v111 =
        seq {
            yield! v105 
            (* indent
            ()
        indent *)
        }
        (* indent
        ()
    indent *)
    let v114 : string seq = _let'_v111 
    let v121 : (string -> (string seq -> string)) = String.concat
    let v122 : string = " "
    let v123 : (string seq -> string) = v121 v122
    let v124 : string = v123 v114
    (* run_target_args'
    let v131 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v132 : string = "&*$0"
    let v133 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v124 v132 
    let _run_target_args'_v131 = v133 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v134 : string = "&*$0"
    let v135 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v124 v134 
    let _run_target_args'_v131 = v135 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v136 : string = "&*$0"
    let v137 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v124 v136 
    let _run_target_args'_v131 = v137 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v139 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v139 
    #endif
#if FABLE_COMPILER_PYTHON
    let v143 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v143 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v147 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v147 
    #endif
#else
    let v151 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v151 
    #endif
    let v154 : Ref<Str> = _run_target_args'_v131 
    (* run_target_args'
    let v164 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v165 : string = "String::from($0)"
    let v166 : std_string_String = Fable.Core.RustInterop.emitRustExpr v154 v165 
    let _run_target_args'_v164 = v166 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v167 : string = "String::from($0)"
    let v168 : std_string_String = Fable.Core.RustInterop.emitRustExpr v154 v167 
    let _run_target_args'_v164 = v168 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v169 : string = "String::from($0)"
    let v170 : std_string_String = Fable.Core.RustInterop.emitRustExpr v154 v169 
    let _run_target_args'_v164 = v170 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v172 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v172 
    #endif
#if FABLE_COMPILER_PYTHON
    let v176 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v176 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v180 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v180 
    #endif
#else
    let v184 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v184 
    #endif
    let v187 : std_string_String = _run_target_args'_v164 
    let v193 : string = "$0"
    let v194 : std_string_String = Fable.Core.RustInterop.emitRustExpr v187 v193 
    let v195 : string = "for=move || v76()"
    let v196 : string = "class=v194"
    let v197 : string = ""
    let v198 : string = " " + v195 + v197 + ""
    let v199 : string = " " + v196 + v198 + ""
    let v200 : (leptos_ev_Event -> unit) = closure229(v0)
    let v201 : string = "true; let v200 = $0; //"
    let v202 : bool = Fable.Core.RustInterop.emitRustExpr v200 v201 
    let v203 : (unit -> bool) = method231(v0)
    let v204 : (unit -> std_string_String) = method232()
    let v205 : string = "class=\"peer sr-only [&:checked_+_span_svg[data-checked-icon]]:block [&:checked_+_span_svg[data-unchecked-icon]]:hidden\""
    let v206 : string = "type=\"checkbox\""
    let v207 : string = "id=move || v204()"
    let v208 : string = "on:change=move |event| v200(event)"
    let v209 : string = "prop:checked=move || v203()"
    let v210 : string = " " + v205 + v197 + ""
    let v211 : string = " " + v206 + v210 + ""
    let v212 : string = " " + v207 + v211 + ""
    let v213 : string = " " + v208 + v212 + ""
    let v214 : string = " " + v209 + v213 + ""
    let v215 : string = "input"
    let v216 : string = "<" + v215 + " " + v214 + " />"
    let v217 : string = "leptos::prelude::view! { " + v216 + " }"
    let v218 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v217 
    let v219 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v218 |> unbox
    let v220 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v221 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v219 v220 
    let v222 : string = "class=\"absolute inset-y-0 start-0 z-10 m-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-white dark:bg-gray-400 peer-checked:bg-white text-gray-200 transition-all peer-checked:start-6 peer-checked:text-gray-400\""
    let v223 : string = " " + v222 + v197 + ""
    let v224 : string = "data-unchecked-icon"
    let v225 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v226 : string = "class=\"h-4 w-4\""
    let v227 : string = "viewBox=\"0 0 20 20\""
    let v228 : string = "fill=\"currentColor\""
    let v229 : string = " " + v224 + v197 + ""
    let v230 : string = " " + v225 + v229 + ""
    let v231 : string = " " + v226 + v230 + ""
    let v232 : string = " " + v227 + v231 + ""
    let v233 : string = " " + v228 + v232 + ""
    let v234 : string = "fill-rule=\"evenodd\""
    let v235 : string = "d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\""
    let v236 : string = "clip-rule=\"evenodd\""
    let v237 : string = " " + v234 + v197 + ""
    let v238 : string = " " + v235 + v237 + ""
    let v239 : string = " " + v236 + v238 + ""
    let v240 : string = "vec![" + v197 + "]"
    let v241 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v240 
    let v242 : string = "leptos::prelude::Fragment::new($0)"
    let v243 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v241 v242 
    let v244 : string = "leptos::prelude::AnyView::from($0)"
    let v245 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v243 v244 
    let v246 : string = "path"
    let v247 : string = "<" + v246 + " " + v239 + ">move || { v245 }</" + v246 + ">"
    let v248 : string = "leptos::prelude::view! { " + v247 + " }"
    let v249 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v248 
    let v250 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v249 |> unbox
    let v251 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v252 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v250 v251 
    let v253 : string = "v252"
    let v254 : string = v253 + v197 
    let v255 : string = v254 + v197 
    let v256 : string = "vec![" + v255 + "]"
    let v257 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v256 
    let v258 : string = "leptos::prelude::Fragment::new($0)"
    let v259 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v257 v258 
    let v260 : string = "leptos::prelude::AnyView::from($0)"
    let v261 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v259 v260 
    let v262 : string = "svg"
    let v263 : string = "<" + v262 + " " + v233 + ">move || { v261 }</" + v262 + ">"
    let v264 : string = "leptos::prelude::view! { " + v263 + " }"
    let v265 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v264 
    let v266 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v265 |> unbox
    let v267 : string = "data-checked-icon"
    let v268 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v269 : string = "class=\"hidden h-4 w-4\""
    let v270 : string = "viewBox=\"0 0 20 20\""
    let v271 : string = "fill=\"currentColor\""
    let v272 : string = " " + v267 + v197 + ""
    let v273 : string = " " + v268 + v272 + ""
    let v274 : string = " " + v269 + v273 + ""
    let v275 : string = " " + v270 + v274 + ""
    let v276 : string = " " + v271 + v275 + ""
    let v277 : string = "fill-rule=\"evenodd\""
    let v278 : string = "d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\""
    let v279 : string = "clip-rule=\"evenodd\""
    let v280 : string = " " + v277 + v197 + ""
    let v281 : string = " " + v278 + v280 + ""
    let v282 : string = " " + v279 + v281 + ""
    let v283 : string = "vec![" + v197 + "]"
    let v284 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v283 
    let v285 : string = "leptos::prelude::Fragment::new($0)"
    let v286 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v284 v285 
    let v287 : string = "leptos::prelude::AnyView::from($0)"
    let v288 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v286 v287 
    let v289 : string = "<" + v246 + " " + v282 + ">move || { v288 }</" + v246 + ">"
    let v290 : string = "leptos::prelude::view! { " + v289 + " }"
    let v291 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v290 
    let v292 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v291 |> unbox
    let v293 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v294 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v292 v293 
    let v295 : string = "v294"
    let v296 : string = v295 + v197 
    let v297 : string = v296 + v197 
    let v298 : string = "vec![" + v297 + "]"
    let v299 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v298 
    let v300 : string = "leptos::prelude::Fragment::new($0)"
    let v301 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v299 v300 
    let v302 : string = "leptos::prelude::AnyView::from($0)"
    let v303 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v301 v302 
    let v304 : string = "<" + v262 + " " + v276 + ">move || { v303 }</" + v262 + ">"
    let v305 : string = "leptos::prelude::view! { " + v304 + " }"
    let v306 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v305 
    let v307 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v306 |> unbox
    let v308 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v309 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v307 v308 
    let v310 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v311 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v266 v310 
    let v312 : string = "v309"
    let v313 : string = v312 + v197 
    let v314 : string = v313 + v197 
    let v315 : string = "v311"
    let v316 : string = ", "
    let v317 : string = v315 + v316 
    let v318 : string = v317 + v314 
    let v319 : string = "vec![" + v318 + "]"
    let v320 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v319 
    let v321 : string = "leptos::prelude::Fragment::new($0)"
    let v322 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v320 v321 
    let v323 : string = "leptos::prelude::AnyView::from($0)"
    let v324 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v322 v323 
    let v325 : string = "span"
    let v326 : string = "<" + v325 + " " + v223 + ">move || { v324 }</" + v325 + ">"
    let v327 : string = "leptos::prelude::view! { " + v326 + " }"
    let v328 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v327 
    let v329 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v328 |> unbox
    let v330 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v331 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v329 v330 
    let v332 : string = "class=\"absolute inset-0 rounded-full bg-gray-200 dark:bg-gray-200 transition peer-checked:bg-gray-300\""
    let v333 : string = " " + v332 + v197 + ""
    let v334 : string = "vec![" + v197 + "]"
    let v335 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v334 
    let v336 : string = "leptos::prelude::Fragment::new($0)"
    let v337 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v335 v336 
    let v338 : string = "leptos::prelude::AnyView::from($0)"
    let v339 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v337 v338 
    let v340 : string = "<" + v325 + " " + v333 + ">move || { v339 }</" + v325 + ">"
    let v341 : string = "leptos::prelude::view! { " + v340 + " }"
    let v342 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v341 
    let v343 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v342 |> unbox
    let v344 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v345 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v343 v344 
    let v346 : string = "v345"
    let v347 : string = v346 + v197 
    let v348 : string = v347 + v197 
    let v349 : string = "v331"
    let v350 : string = v349 + v316 
    let v351 : string = v350 + v348 
    let v352 : string = "v221"
    let v353 : string = v352 + v316 
    let v354 : string = v353 + v351 
    let v355 : string = "vec![" + v354 + "]"
    let v356 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v355 
    let v357 : string = "leptos::prelude::Fragment::new($0)"
    let v358 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v356 v357 
    let v359 : string = "leptos::prelude::AnyView::from($0)"
    let v360 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v358 v359 
    let v361 : string = "label"
    let v362 : string = "<" + v361 + " " + v199 + ">move || { v360 }</" + v361 + ">"
    let v363 : string = "leptos::prelude::view! { " + v362 + " }"
    let v364 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v363 
    let v365 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Label>> = v364 |> unbox
    let v366 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v367 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v365 v366 
    let v368 : string = "v367"
    let v369 : string = v368 + v197 
    let v370 : string = v369 + v197 
    let v371 : string = "vec![" + v370 + "]"
    let v372 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v371 
    let v373 : string = "leptos::prelude::Fragment::new($0)"
    let v374 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v372 v373 
    v374
and method230 (v0 : Heap2) : (unit -> leptos_dom_Fragment) =
    closure228(v0)
and closure233 () () : string =
    let v0 : string = "items-center p-0"
    v0
and closure234 () () : string =
    let v0 : string = "pt-[9px] pr-[10px] pb-[11px] pl-[10px]"
    v0
and closure235 () () : string =
    let v0 : string = "sm:grid-cols-[150px_repeat(2,minmax(0,1fr))]"
    v0
and closure236 () () : string =
    let v0 : string = "[overflow:auto]"
    v0
and closure237 () () : leptos_dom_Fragment =
    let v0 : string = "Debug"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method233 () : (unit -> leptos_dom_Fragment) =
    closure237()
and closure239 (v0 : Heap2) (v1 : leptos_ev_Event) : unit =
    let v2 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v3 : string = "Box::pin($0)"
    let v4 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v6 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : leptos_prelude_ArcRwSignal<bool> = v6.l1
    let v8 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
    let v9 : bool = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v11 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
    let v14 : string = "*/ | { *x = $0(x.clone()) }); //"
    let v15 : (bool -> bool) = closure230()
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr v15 v14 
    ()
and closure240 (v0 : Heap2) () : bool =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<bool> = v5.l1
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : bool = Fable.Core.RustInterop.emitRustExpr v6 v7 
    v8
and method235 (v0 : Heap2) : (unit -> bool) =
    closure240(v0)
and closure241 () () : std_string_String =
    let v0 : string = "debug"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    v61
and method236 () : (unit -> std_string_String) =
    closure241()
and closure238 (v0 : Heap2) () : leptos_dom_Fragment =
    let v1 : unit = ()
    let v2 : string = $"true; let _func0_from_v1 = Func0::from(move || {{ //"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr () v2 
    let v4 : string = "debug"
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    let v71 : string = $"true; $0 /*"
    let v72 : bool = Fable.Core.RustInterop.emitRustExpr v65 v71 
    let v73 : string = $"*/ }}); //"
    let v74 : bool = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = $"_func0_from_v1"
    let v76 : Func0<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v75 
    let v77 : string = "block"
    let v78 : string = "relative"
    let v79 : string = "h-8"
    let v80 : string = "w-14"
    let v81 : string = "cursor-pointer"
    let v82 : string = "[-webkit-tap-highlight-color:_transparent]"
    let v83 : string list = []
    let v85 : string list = v82 :: v83 
    let v89 : string list = v81 :: v85 
    let v93 : string list = v80 :: v89 
    let v97 : string list = v79 :: v93 
    let v101 : string list = v78 :: v97 
    let v105 : string list = v77 :: v101 
    let v111 : unit = ()
    let _let'_v111 =
        seq {
            yield! v105 
            (* indent
            ()
        indent *)
        }
        (* indent
        ()
    indent *)
    let v114 : string seq = _let'_v111 
    let v121 : (string -> (string seq -> string)) = String.concat
    let v122 : string = " "
    let v123 : (string seq -> string) = v121 v122
    let v124 : string = v123 v114
    (* run_target_args'
    let v131 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v132 : string = "&*$0"
    let v133 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v124 v132 
    let _run_target_args'_v131 = v133 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v134 : string = "&*$0"
    let v135 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v124 v134 
    let _run_target_args'_v131 = v135 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v136 : string = "&*$0"
    let v137 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v124 v136 
    let _run_target_args'_v131 = v137 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v139 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v139 
    #endif
#if FABLE_COMPILER_PYTHON
    let v143 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v143 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v147 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v147 
    #endif
#else
    let v151 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v151 
    #endif
    let v154 : Ref<Str> = _run_target_args'_v131 
    (* run_target_args'
    let v164 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v165 : string = "String::from($0)"
    let v166 : std_string_String = Fable.Core.RustInterop.emitRustExpr v154 v165 
    let _run_target_args'_v164 = v166 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v167 : string = "String::from($0)"
    let v168 : std_string_String = Fable.Core.RustInterop.emitRustExpr v154 v167 
    let _run_target_args'_v164 = v168 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v169 : string = "String::from($0)"
    let v170 : std_string_String = Fable.Core.RustInterop.emitRustExpr v154 v169 
    let _run_target_args'_v164 = v170 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v172 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v172 
    #endif
#if FABLE_COMPILER_PYTHON
    let v176 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v176 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v180 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v180 
    #endif
#else
    let v184 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v184 
    #endif
    let v187 : std_string_String = _run_target_args'_v164 
    let v193 : string = "$0"
    let v194 : std_string_String = Fable.Core.RustInterop.emitRustExpr v187 v193 
    let v195 : string = "for=move || v76()"
    let v196 : string = "class=v194"
    let v197 : string = ""
    let v198 : string = " " + v195 + v197 + ""
    let v199 : string = " " + v196 + v198 + ""
    let v200 : (leptos_ev_Event -> unit) = closure239(v0)
    let v201 : string = "true; let v200 = $0; //"
    let v202 : bool = Fable.Core.RustInterop.emitRustExpr v200 v201 
    let v203 : (unit -> bool) = method235(v0)
    let v204 : (unit -> std_string_String) = method236()
    let v205 : string = "class=\"peer sr-only [&:checked_+_span_svg[data-checked-icon]]:block [&:checked_+_span_svg[data-unchecked-icon]]:hidden\""
    let v206 : string = "type=\"checkbox\""
    let v207 : string = "id=move || v204()"
    let v208 : string = "on:change=move |event| v200(event)"
    let v209 : string = "prop:checked=move || v203()"
    let v210 : string = " " + v205 + v197 + ""
    let v211 : string = " " + v206 + v210 + ""
    let v212 : string = " " + v207 + v211 + ""
    let v213 : string = " " + v208 + v212 + ""
    let v214 : string = " " + v209 + v213 + ""
    let v215 : string = "input"
    let v216 : string = "<" + v215 + " " + v214 + " />"
    let v217 : string = "leptos::prelude::view! { " + v216 + " }"
    let v218 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v217 
    let v219 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v218 |> unbox
    let v220 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v221 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v219 v220 
    let v222 : string = "class=\"absolute inset-y-0 start-0 z-10 m-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-white dark:bg-gray-400 peer-checked:bg-white text-gray-200 transition-all peer-checked:start-6 peer-checked:text-gray-400\""
    let v223 : string = " " + v222 + v197 + ""
    let v224 : string = "data-unchecked-icon"
    let v225 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v226 : string = "class=\"h-4 w-4\""
    let v227 : string = "viewBox=\"0 0 20 20\""
    let v228 : string = "fill=\"currentColor\""
    let v229 : string = " " + v224 + v197 + ""
    let v230 : string = " " + v225 + v229 + ""
    let v231 : string = " " + v226 + v230 + ""
    let v232 : string = " " + v227 + v231 + ""
    let v233 : string = " " + v228 + v232 + ""
    let v234 : string = "fill-rule=\"evenodd\""
    let v235 : string = "d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\""
    let v236 : string = "clip-rule=\"evenodd\""
    let v237 : string = " " + v234 + v197 + ""
    let v238 : string = " " + v235 + v237 + ""
    let v239 : string = " " + v236 + v238 + ""
    let v240 : string = "vec![" + v197 + "]"
    let v241 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v240 
    let v242 : string = "leptos::prelude::Fragment::new($0)"
    let v243 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v241 v242 
    let v244 : string = "leptos::prelude::AnyView::from($0)"
    let v245 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v243 v244 
    let v246 : string = "path"
    let v247 : string = "<" + v246 + " " + v239 + ">move || { v245 }</" + v246 + ">"
    let v248 : string = "leptos::prelude::view! { " + v247 + " }"
    let v249 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v248 
    let v250 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v249 |> unbox
    let v251 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v252 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v250 v251 
    let v253 : string = "v252"
    let v254 : string = v253 + v197 
    let v255 : string = v254 + v197 
    let v256 : string = "vec![" + v255 + "]"
    let v257 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v256 
    let v258 : string = "leptos::prelude::Fragment::new($0)"
    let v259 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v257 v258 
    let v260 : string = "leptos::prelude::AnyView::from($0)"
    let v261 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v259 v260 
    let v262 : string = "svg"
    let v263 : string = "<" + v262 + " " + v233 + ">move || { v261 }</" + v262 + ">"
    let v264 : string = "leptos::prelude::view! { " + v263 + " }"
    let v265 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v264 
    let v266 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v265 |> unbox
    let v267 : string = "data-checked-icon"
    let v268 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v269 : string = "class=\"hidden h-4 w-4\""
    let v270 : string = "viewBox=\"0 0 20 20\""
    let v271 : string = "fill=\"currentColor\""
    let v272 : string = " " + v267 + v197 + ""
    let v273 : string = " " + v268 + v272 + ""
    let v274 : string = " " + v269 + v273 + ""
    let v275 : string = " " + v270 + v274 + ""
    let v276 : string = " " + v271 + v275 + ""
    let v277 : string = "fill-rule=\"evenodd\""
    let v278 : string = "d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\""
    let v279 : string = "clip-rule=\"evenodd\""
    let v280 : string = " " + v277 + v197 + ""
    let v281 : string = " " + v278 + v280 + ""
    let v282 : string = " " + v279 + v281 + ""
    let v283 : string = "vec![" + v197 + "]"
    let v284 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v283 
    let v285 : string = "leptos::prelude::Fragment::new($0)"
    let v286 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v284 v285 
    let v287 : string = "leptos::prelude::AnyView::from($0)"
    let v288 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v286 v287 
    let v289 : string = "<" + v246 + " " + v282 + ">move || { v288 }</" + v246 + ">"
    let v290 : string = "leptos::prelude::view! { " + v289 + " }"
    let v291 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v290 
    let v292 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v291 |> unbox
    let v293 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v294 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v292 v293 
    let v295 : string = "v294"
    let v296 : string = v295 + v197 
    let v297 : string = v296 + v197 
    let v298 : string = "vec![" + v297 + "]"
    let v299 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v298 
    let v300 : string = "leptos::prelude::Fragment::new($0)"
    let v301 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v299 v300 
    let v302 : string = "leptos::prelude::AnyView::from($0)"
    let v303 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v301 v302 
    let v304 : string = "<" + v262 + " " + v276 + ">move || { v303 }</" + v262 + ">"
    let v305 : string = "leptos::prelude::view! { " + v304 + " }"
    let v306 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v305 
    let v307 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v306 |> unbox
    let v308 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v309 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v307 v308 
    let v310 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v311 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v266 v310 
    let v312 : string = "v309"
    let v313 : string = v312 + v197 
    let v314 : string = v313 + v197 
    let v315 : string = "v311"
    let v316 : string = ", "
    let v317 : string = v315 + v316 
    let v318 : string = v317 + v314 
    let v319 : string = "vec![" + v318 + "]"
    let v320 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v319 
    let v321 : string = "leptos::prelude::Fragment::new($0)"
    let v322 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v320 v321 
    let v323 : string = "leptos::prelude::AnyView::from($0)"
    let v324 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v322 v323 
    let v325 : string = "span"
    let v326 : string = "<" + v325 + " " + v223 + ">move || { v324 }</" + v325 + ">"
    let v327 : string = "leptos::prelude::view! { " + v326 + " }"
    let v328 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v327 
    let v329 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v328 |> unbox
    let v330 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v331 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v329 v330 
    let v332 : string = "class=\"absolute inset-0 rounded-full bg-gray-200 dark:bg-gray-200 transition peer-checked:bg-gray-300\""
    let v333 : string = " " + v332 + v197 + ""
    let v334 : string = "vec![" + v197 + "]"
    let v335 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v334 
    let v336 : string = "leptos::prelude::Fragment::new($0)"
    let v337 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v335 v336 
    let v338 : string = "leptos::prelude::AnyView::from($0)"
    let v339 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v337 v338 
    let v340 : string = "<" + v325 + " " + v333 + ">move || { v339 }</" + v325 + ">"
    let v341 : string = "leptos::prelude::view! { " + v340 + " }"
    let v342 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v341 
    let v343 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v342 |> unbox
    let v344 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v345 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v343 v344 
    let v346 : string = "v345"
    let v347 : string = v346 + v197 
    let v348 : string = v347 + v197 
    let v349 : string = "v331"
    let v350 : string = v349 + v316 
    let v351 : string = v350 + v348 
    let v352 : string = "v221"
    let v353 : string = v352 + v316 
    let v354 : string = v353 + v351 
    let v355 : string = "vec![" + v354 + "]"
    let v356 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v355 
    let v357 : string = "leptos::prelude::Fragment::new($0)"
    let v358 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v356 v357 
    let v359 : string = "leptos::prelude::AnyView::from($0)"
    let v360 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v358 v359 
    let v361 : string = "label"
    let v362 : string = "<" + v361 + " " + v199 + ">move || { v360 }</" + v361 + ">"
    let v363 : string = "leptos::prelude::view! { " + v362 + " }"
    let v364 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v363 
    let v365 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Label>> = v364 |> unbox
    let v366 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v367 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v365 v366 
    let v368 : string = "v367"
    let v369 : string = v368 + v197 
    let v370 : string = v369 + v197 
    let v371 : string = "vec![" + v370 + "]"
    let v372 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v371 
    let v373 : string = "leptos::prelude::Fragment::new($0)"
    let v374 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v372 v373 
    v374
and method234 (v0 : Heap2) : (unit -> leptos_dom_Fragment) =
    closure238(v0)
and closure242 () () : string =
    let v0 : string = "items-center p-0"
    v0
and closure226 (v0 : Heap2) () : leptos_dom_Fragment =
    let v1 : string = "class=\"flex flex-1 flex-col p-[11px] gap-[11px]\""
    let v2 : string = ""
    let v3 : string = " " + v1 + v2 + ""
    let v4 : (unit -> leptos_dom_Fragment) = method229()
    let v5 : (unit -> leptos_dom_Fragment) = method230(v0)
    let v6 : string = "$0"
    let v7 : (unit -> string) = closure233()
    let v8 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v7 v6 
    let v9 : string = "$0"
    let v10 : (unit -> string) = closure234()
    let v11 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v10 v9 
    let v12 : string = "$0"
    let v13 : (unit -> string) = closure235()
    let v14 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v13 v12 
    let v15 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v14(()) + \" \" + &v11(()) + \" \" + &v8(())"
    let v16 : string = " " + v15 + v2 + ""
    let v17 : string = "$0"
    let v18 : (unit -> string) = closure236()
    let v19 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v18 v17 
    let v20 : string = "class=\"[font-size:12px] text-gray-400\""
    let v21 : string = " " + v20 + v2 + ""
    let v22 : leptos_dom_Fragment = v4 ()
    let v23 : string = "leptos::prelude::AnyView::from($0)"
    let v24 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v22 v23 
    let v25 : string = "dt"
    let v26 : string = "<" + v25 + " " + v21 + ">move || { v24 }</" + v25 + ">"
    let v27 : string = "leptos::prelude::view! { " + v26 + " }"
    let v28 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v28 |> unbox
    let v30 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v31 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v29 v30 
    let v32 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v19(())"
    let v33 : string = " " + v32 + v2 + ""
    let v34 : leptos_dom_Fragment = v5 ()
    let v35 : string = "leptos::prelude::AnyView::from($0)"
    let v36 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v34 v35 
    let v37 : string = "dd"
    let v38 : string = "<" + v37 + " " + v33 + ">move || { v36 }</" + v37 + ">"
    let v39 : string = "leptos::prelude::view! { " + v38 + " }"
    let v40 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v39 
    let v41 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v40 |> unbox
    let v42 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v43 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v41 v42 
    let v44 : string = "v43"
    let v45 : string = v44 + v2 
    let v46 : string = v45 + v2 
    let v47 : string = "v31"
    let v48 : string = ", "
    let v49 : string = v47 + v48 
    let v50 : string = v49 + v46 
    let v51 : string = "vec![" + v50 + "]"
    let v52 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v51 
    let v53 : string = "leptos::prelude::Fragment::new($0)"
    let v54 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v52 v53 
    let v55 : string = "leptos::prelude::AnyView::from($0)"
    let v56 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v54 v55 
    let v57 : string = "dl"
    let v58 : string = "<" + v57 + " " + v16 + ">move || { v56 }</" + v57 + ">"
    let v59 : string = "leptos::prelude::view! { " + v58 + " }"
    let v60 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v59 
    let v61 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v60 |> unbox
    let v62 : (unit -> leptos_dom_Fragment) = method233()
    let v63 : (unit -> leptos_dom_Fragment) = method234(v0)
    let v64 : string = "$0"
    let v65 : (unit -> string) = closure242()
    let v66 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v65 v64 
    let v67 : string = "$0"
    let v68 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v10 v67 
    let v69 : string = "$0"
    let v70 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v13 v69 
    let v71 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v70(()) + \" \" + &v68(()) + \" \" + &v66(())"
    let v72 : string = " " + v71 + v2 + ""
    let v73 : string = "$0"
    let v74 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v18 v73 
    let v75 : string = "class=\"[font-size:12px] text-gray-400\""
    let v76 : string = " " + v75 + v2 + ""
    let v77 : leptos_dom_Fragment = v62 ()
    let v78 : string = "leptos::prelude::AnyView::from($0)"
    let v79 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v78 
    let v80 : string = "<" + v25 + " " + v76 + ">move || { v79 }</" + v25 + ">"
    let v81 : string = "leptos::prelude::view! { " + v80 + " }"
    let v82 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v81 
    let v83 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v82 |> unbox
    let v84 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v85 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v83 v84 
    let v86 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v74(())"
    let v87 : string = " " + v86 + v2 + ""
    let v88 : leptos_dom_Fragment = v63 ()
    let v89 : string = "leptos::prelude::AnyView::from($0)"
    let v90 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v88 v89 
    let v91 : string = "<" + v37 + " " + v87 + ">move || { v90 }</" + v37 + ">"
    let v92 : string = "leptos::prelude::view! { " + v91 + " }"
    let v93 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v92 
    let v94 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v93 |> unbox
    let v95 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v96 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v94 v95 
    let v97 : string = "v96"
    let v98 : string = v97 + v2 
    let v99 : string = v98 + v2 
    let v100 : string = "v85"
    let v101 : string = v100 + v48 
    let v102 : string = v101 + v99 
    let v103 : string = "vec![" + v102 + "]"
    let v104 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v103 
    let v105 : string = "leptos::prelude::Fragment::new($0)"
    let v106 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v104 v105 
    let v107 : string = "leptos::prelude::AnyView::from($0)"
    let v108 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v106 v107 
    let v109 : string = "<" + v57 + " " + v72 + ">move || { v108 }</" + v57 + ">"
    let v110 : string = "leptos::prelude::view! { " + v109 + " }"
    let v111 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v110 
    let v112 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v111 |> unbox
    let v113 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v114 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v112 v113 
    let v115 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v116 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v115 
    let v117 : string = "v114"
    let v118 : string = v117 + v2 
    let v119 : string = v118 + v2 
    let v120 : string = "v116"
    let v121 : string = v120 + v48 
    let v122 : string = v121 + v119 
    let v123 : string = "vec![" + v122 + "]"
    let v124 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v123 
    let v125 : string = "leptos::prelude::Fragment::new($0)"
    let v126 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v124 v125 
    let v127 : string = "leptos::prelude::AnyView::from($0)"
    let v128 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v126 v127 
    let v129 : string = "div"
    let v130 : string = "<" + v129 + " " + v3 + ">move || { v128 }</" + v129 + ">"
    let v131 : string = "leptos::prelude::view! { " + v130 + " }"
    let v132 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v131 
    let v133 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v132 |> unbox
    let v134 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v135 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v133 v134 
    let v136 : string = "v135"
    let v137 : string = v136 + v2 
    let v138 : string = v137 + v2 
    let v139 : string = "vec![" + v138 + "]"
    let v140 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v139 
    let v141 : string = "leptos::prelude::Fragment::new($0)"
    let v142 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v140 v141 
    v142
and closure243 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure244 () () : Ref<Lifetime<StaticLifetime, Str>> =
    let v0 : string = ""
    let v1 : string = "r#\"" + v0 + "\"#"
    let v2 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v1 
    v2
and closure245 () () : string =
    let v0 : string = "Debug"
    v0
and method237 () : (unit -> string) =
    closure245()
and closure247 () () : leptos_dom_Fragment =
    let v0 : string = "Global State"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method238 () : (unit -> leptos_dom_Fragment) =
    closure247()
and closure250 () (v0 : std_string_String) : US70 =
    US70_0(v0)
and method240 () : (std_string_String -> US70) =
    closure250()
and closure251 () (v0 : std_string_String) : US70 =
    US70_1(v0)
and method241 () : (std_string_String -> US70) =
    closure251()
and closure249 (v0 : Heap2) () : string =
    let v1 : string = "settings_view.global_state_log_render () / global_state_json memo"
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "$0.clone()"
    let v5 : Heap2 = Fable.Core.RustInterop.emitRustExpr v0 v4 
    let v6 : string = "serde_json::to_string_pretty(&v5).map_err(|x| x.to_string())"
    let v7 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : (std_string_String -> US70) = method240()
    let v9 : (std_string_String -> US70) = method241()
    let v10 : US70 = match v7 with Ok x -> v8 x | Error x -> v9 x
    match v10 with
    | US70_1(v14) -> (* Error *)
        let v15 : string = "Error: " + string v14 + ""
        v15
    | US70_0(v11) -> (* Ok *)
        let v12 : string = "fable_library_rust::String_::fromString($0)"
        let v13 : string = Fable.Core.RustInterop.emitRustExpr v11 v12 
        v13
and closure252 () () : string =
    let v0 : string = ""
    v0
and closure248 () () : leptos_dom_Fragment =
    let v0 : string = "settings_view.global_state_log_render ()"
    let v1 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v2 : bool = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
    let v4 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v3 
    let v5 : string = "$0.unwrap()"
    let v6 : Heap2 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v8 : (unit -> string) = closure249(v6)
    let v9 : leptos_prelude_ArcMemo<string> = Fable.Core.RustInterop.emitRustExpr v8 v7 
    let v10 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v11 : string = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "$0"
    let v13 : (unit -> string) = closure252()
    let v14 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v13 v12 
    let v15 : string = "class=move || \"[padding:1px] [font-size:12px] [line-height:12px] [text-wrap:pretty] \".to_owned() + &v14(())"
    let v16 : string = ""
    let v17 : string = " " + v15 + v16 + ""
    (* run_target_args'
    let v22 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v23 
    let _run_target_args'_v22 = v24 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v25 : string = "&*$0"
    let v26 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v25 
    let _run_target_args'_v22 = v26 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v27 : string = "&*$0"
    let v28 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v27 
    let _run_target_args'_v22 = v28 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v30 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v22 = v30 
    #endif
#if FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v22 = v34 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v38 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v22 = v38 
    #endif
#else
    let v42 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v22 = v42 
    #endif
    let v45 : Ref<Str> = _run_target_args'_v22 
    (* run_target_args'
    let v55 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v56 : string = "String::from($0)"
    let v57 : std_string_String = Fable.Core.RustInterop.emitRustExpr v45 v56 
    let _run_target_args'_v55 = v57 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v58 : string = "String::from($0)"
    let v59 : std_string_String = Fable.Core.RustInterop.emitRustExpr v45 v58 
    let _run_target_args'_v55 = v59 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v60 : string = "String::from($0)"
    let v61 : std_string_String = Fable.Core.RustInterop.emitRustExpr v45 v60 
    let _run_target_args'_v55 = v61 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v63 : std_string_String = v45 |> unbox<std_string_String>
    let _run_target_args'_v55 = v63 
    #endif
#if FABLE_COMPILER_PYTHON
    let v67 : std_string_String = v45 |> unbox<std_string_String>
    let _run_target_args'_v55 = v67 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v71 : std_string_String = v45 |> unbox<std_string_String>
    let _run_target_args'_v55 = v71 
    #endif
#else
    let v75 : std_string_String = v45 |> unbox<std_string_String>
    let _run_target_args'_v55 = v75 
    #endif
    let v78 : std_string_String = _run_target_args'_v55 
    let v84 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v85 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v78 v84 
    let v86 : string = "v85"
    let v87 : string = v86 + v16 
    let v88 : string = v87 + v16 
    let v89 : string = "vec![" + v88 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::Fragment::new($0)"
    let v92 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v90 v91 
    let v93 : string = "leptos::prelude::AnyView::from($0)"
    let v94 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v92 v93 
    let v95 : string = "pre"
    let v96 : string = "<" + v95 + " " + v17 + ">move || { v94 }</" + v95 + ">"
    let v97 : string = "leptos::prelude::view! { " + v96 + " }"
    let v98 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v97 
    let v99 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v98 |> unbox
    let v100 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v101 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v99 v100 
    let v102 : string = "v101"
    let v103 : string = v102 + v16 
    let v104 : string = v103 + v16 
    let v105 : string = "vec![" + v104 + "]"
    let v106 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v105 
    let v107 : string = "leptos::prelude::Fragment::new($0)"
    let v108 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v106 v107 
    v108
and method239 () : (unit -> leptos_dom_Fragment) =
    closure248()
and closure253 () () : string =
    let v0 : string = ""
    v0
and closure246 () () : leptos_dom_Fragment =
    let v0 : (unit -> leptos_dom_Fragment) = method238()
    let v1 : (unit -> leptos_dom_Fragment) = method239()
    let v2 : string = "$0"
    let v3 : (unit -> string) = closure253()
    let v4 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3 v2 
    let v5 : string = "$0"
    let v6 : (unit -> string) = closure234()
    let v7 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v6 v5 
    let v8 : string = "$0"
    let v9 : (unit -> string) = closure235()
    let v10 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v9 v8 
    let v11 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v10(()) + \" \" + &v7(()) + \" \" + &v4(())"
    let v12 : string = ""
    let v13 : string = " " + v11 + v12 + ""
    let v14 : string = "$0"
    let v15 : (unit -> string) = closure236()
    let v16 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v15 v14 
    let v17 : string = "class=\"[font-size:12px] text-gray-400\""
    let v18 : string = " " + v17 + v12 + ""
    let v19 : leptos_dom_Fragment = v0 ()
    let v20 : string = "leptos::prelude::AnyView::from($0)"
    let v21 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v19 v20 
    let v22 : string = "dt"
    let v23 : string = "<" + v22 + " " + v18 + ">move || { v21 }</" + v22 + ">"
    let v24 : string = "leptos::prelude::view! { " + v23 + " }"
    let v25 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v24 
    let v26 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v25 |> unbox
    let v27 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v28 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v26 v27 
    let v29 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v16(())"
    let v30 : string = " " + v29 + v12 + ""
    let v31 : leptos_dom_Fragment = v1 ()
    let v32 : string = "leptos::prelude::AnyView::from($0)"
    let v33 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v31 v32 
    let v34 : string = "dd"
    let v35 : string = "<" + v34 + " " + v30 + ">move || { v33 }</" + v34 + ">"
    let v36 : string = "leptos::prelude::view! { " + v35 + " }"
    let v37 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v36 
    let v38 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v37 |> unbox
    let v39 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v40 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v38 v39 
    let v41 : string = "v40"
    let v42 : string = v41 + v12 
    let v43 : string = v42 + v12 
    let v44 : string = "v28"
    let v45 : string = ", "
    let v46 : string = v44 + v45 
    let v47 : string = v46 + v43 
    let v48 : string = "vec![" + v47 + "]"
    let v49 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v48 
    let v50 : string = "leptos::prelude::Fragment::new($0)"
    let v51 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v49 v50 
    let v52 : string = "leptos::prelude::AnyView::from($0)"
    let v53 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v51 v52 
    let v54 : string = "dl"
    let v55 : string = "<" + v54 + " " + v13 + ">move || { v53 }</" + v54 + ">"
    let v56 : string = "leptos::prelude::view! { " + v55 + " }"
    let v57 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v56 
    let v58 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v57 |> unbox
    let v59 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v60 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v58 v59 
    let v61 : string = "v60"
    let v62 : string = v61 + v12 
    let v63 : string = v62 + v12 
    let v64 : string = "vec![" + v63 + "]"
    let v65 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v64 
    let v66 : string = "leptos::prelude::Fragment::new($0)"
    let v67 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v65 v66 
    v67
and closure254 (v0 : leptos_prelude_WriteSignal<bool>) () : unit =
    let v1 : string = $"true; leptos::prelude::WriteSignal::update(&$0, |x: &mut /*"
    let v2 : bool = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v4 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
    let v7 : string = "*/ | { *x = $0(x.clone()) }); //"
    let v8 : (bool -> bool) = closure230()
    let v9 : bool = Fable.Core.RustInterop.emitRustExpr v8 v7 
    ()
and closure255 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and method242 (v0 : Ref<Lifetime<StaticLifetime, Str>>) : Ref<Lifetime<StaticLifetime, Str>> =
    v0
and closure256 (v0 : leptos_prelude_ReadSignal<bool>) () : std_string_String =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : bool = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v9 : Ref<Lifetime<StaticLifetime, Str>> =
        if v2 then
            let v3 : string = ""
            let v4 : string = "r#\"" + v3 + "\"#"
            let v5 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v4 
            v5
        else
            let v6 : string = "bg-gray-300 hover:bg-gray-200"
            let v7 : string = "r#\"" + v6 + "\"#"
            let v8 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v7 
            v8
    let v10 : Ref<Lifetime<StaticLifetime, Str>> = method242(v9)
    let v11 : string = "v10.to_owned() + \" hover:bg-gray-200\""
    let v12 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v11 
    v12
and closure257 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure258 (v0 : leptos_prelude_AnyView_) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = "[margin-right:40px]"
    let v2 : string = "r#\"" + v1 + "\"#"
    let v3 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v2 
    v3
and closure259 () () : string =
    let v0 : string = "Transactions"
    v0
and method243 (v0 : leptos_prelude_AnyView_) : (unit -> string) =
    closure259()
and closure261 () () : leptos_dom_Fragment =
    let v0 : string = "Settings"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and closure262 () () : leptos_dom_Fragment =
    let v0 : string = "Table View"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method244 () : (unit -> leptos_dom_Fragment) =
    closure262()
and closure265 () (v0 : Heap0) : Heap0 =
    let v1 : Vec<(bool * std_string_String)> = v0.l0
    let v2 : std_string_String option = v0.l1
    let v3 : int32 = v0.l2
    let v4 : int32 = v0.l3
    let v5 : US1 = v0.l4
    let v6 : bool =
        match v5 with
        | US1_1 -> (* Table *)
            true
        | _ ->
            false
    let v9 : US1 =
        if v6 then
            US1_0
        else
            US1_1
    {l0 = v1; l1 = v2; l2 = v3; l3 = v4; l4 = v9} : Heap0
and closure264 (v0 : Heap2) (v1 : leptos_ev_Event) : unit =
    let v2 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v3 : string = "Box::pin($0)"
    let v4 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v2 v3 
    let v5 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v6 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4 v5 
    let v7 : leptos_prelude_ArcRwSignal<Heap0> = v6.l3
    let v8 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
    let v9 : bool = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v11 : TypeEmit<Heap0> = null |> unbox<TypeEmit<Heap0>>
    let v14 : string = "*/ | { *x = $0(x.clone()) }); //"
    let v15 : (Heap0 -> Heap0) = closure265()
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr v15 v14 
    ()
and closure266 (v0 : Heap2) () : bool =
    let v1 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
    let v2 : string = "Box::pin($0)"
    let v3 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v5 : Heap1 = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : leptos_prelude_ArcRwSignal<Heap0> = v5.l3
    let v7 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v8 : Heap0 = Fable.Core.RustInterop.emitRustExpr v6 v7 
    let v9 : US1 = v8.l4
    match v9 with
    | US1_1 -> (* Table *)
        true
    | _ ->
        false
and method246 (v0 : Heap2) : (unit -> bool) =
    closure266(v0)
and closure267 () () : std_string_String =
    let v0 : string = "table-view"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    v61
and method247 () : (unit -> std_string_String) =
    closure267()
and closure263 (v0 : Heap2) () : leptos_dom_Fragment =
    let v1 : unit = ()
    let v2 : string = $"true; let _func0_from_v1 = Func0::from(move || {{ //"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr () v2 
    let v4 : string = "table-view"
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    let v71 : string = $"true; $0 /*"
    let v72 : bool = Fable.Core.RustInterop.emitRustExpr v65 v71 
    let v73 : string = $"*/ }}); //"
    let v74 : bool = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = $"_func0_from_v1"
    let v76 : Func0<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v75 
    let v77 : string = "block"
    let v78 : string = "relative"
    let v79 : string = "h-8"
    let v80 : string = "w-14"
    let v81 : string = "cursor-pointer"
    let v82 : string = "[-webkit-tap-highlight-color:_transparent]"
    let v83 : string list = []
    let v85 : string list = v82 :: v83 
    let v89 : string list = v81 :: v85 
    let v93 : string list = v80 :: v89 
    let v97 : string list = v79 :: v93 
    let v101 : string list = v78 :: v97 
    let v105 : string list = v77 :: v101 
    let v111 : unit = ()
    let _let'_v111 =
        seq {
            yield! v105 
            (* indent
            ()
        indent *)
        }
        (* indent
        ()
    indent *)
    let v114 : string seq = _let'_v111 
    let v121 : (string -> (string seq -> string)) = String.concat
    let v122 : string = " "
    let v123 : (string seq -> string) = v121 v122
    let v124 : string = v123 v114
    (* run_target_args'
    let v131 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v132 : string = "&*$0"
    let v133 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v124 v132 
    let _run_target_args'_v131 = v133 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v134 : string = "&*$0"
    let v135 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v124 v134 
    let _run_target_args'_v131 = v135 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v136 : string = "&*$0"
    let v137 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v124 v136 
    let _run_target_args'_v131 = v137 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v139 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v139 
    #endif
#if FABLE_COMPILER_PYTHON
    let v143 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v143 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v147 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v147 
    #endif
#else
    let v151 : Ref<Str> = v124 |> unbox<Ref<Str>>
    let _run_target_args'_v131 = v151 
    #endif
    let v154 : Ref<Str> = _run_target_args'_v131 
    (* run_target_args'
    let v164 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v165 : string = "String::from($0)"
    let v166 : std_string_String = Fable.Core.RustInterop.emitRustExpr v154 v165 
    let _run_target_args'_v164 = v166 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v167 : string = "String::from($0)"
    let v168 : std_string_String = Fable.Core.RustInterop.emitRustExpr v154 v167 
    let _run_target_args'_v164 = v168 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v169 : string = "String::from($0)"
    let v170 : std_string_String = Fable.Core.RustInterop.emitRustExpr v154 v169 
    let _run_target_args'_v164 = v170 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v172 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v172 
    #endif
#if FABLE_COMPILER_PYTHON
    let v176 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v176 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v180 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v180 
    #endif
#else
    let v184 : std_string_String = v154 |> unbox<std_string_String>
    let _run_target_args'_v164 = v184 
    #endif
    let v187 : std_string_String = _run_target_args'_v164 
    let v193 : string = "$0"
    let v194 : std_string_String = Fable.Core.RustInterop.emitRustExpr v187 v193 
    let v195 : string = "for=move || v76()"
    let v196 : string = "class=v194"
    let v197 : string = ""
    let v198 : string = " " + v195 + v197 + ""
    let v199 : string = " " + v196 + v198 + ""
    let v200 : (leptos_ev_Event -> unit) = closure264(v0)
    let v201 : string = "true; let v200 = $0; //"
    let v202 : bool = Fable.Core.RustInterop.emitRustExpr v200 v201 
    let v203 : (unit -> bool) = method246(v0)
    let v204 : (unit -> std_string_String) = method247()
    let v205 : string = "class=\"peer sr-only [&:checked_+_span_svg[data-checked-icon]]:block [&:checked_+_span_svg[data-unchecked-icon]]:hidden\""
    let v206 : string = "type=\"checkbox\""
    let v207 : string = "id=move || v204()"
    let v208 : string = "on:change=move |event| v200(event)"
    let v209 : string = "prop:checked=move || v203()"
    let v210 : string = " " + v205 + v197 + ""
    let v211 : string = " " + v206 + v210 + ""
    let v212 : string = " " + v207 + v211 + ""
    let v213 : string = " " + v208 + v212 + ""
    let v214 : string = " " + v209 + v213 + ""
    let v215 : string = "input"
    let v216 : string = "<" + v215 + " " + v214 + " />"
    let v217 : string = "leptos::prelude::view! { " + v216 + " }"
    let v218 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v217 
    let v219 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Input>> = v218 |> unbox
    let v220 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v221 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v219 v220 
    let v222 : string = "class=\"absolute inset-y-0 start-0 z-10 m-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-white dark:bg-gray-400 peer-checked:bg-white text-gray-200 transition-all peer-checked:start-6 peer-checked:text-gray-400\""
    let v223 : string = " " + v222 + v197 + ""
    let v224 : string = "data-unchecked-icon"
    let v225 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v226 : string = "class=\"h-4 w-4\""
    let v227 : string = "viewBox=\"0 0 20 20\""
    let v228 : string = "fill=\"currentColor\""
    let v229 : string = " " + v224 + v197 + ""
    let v230 : string = " " + v225 + v229 + ""
    let v231 : string = " " + v226 + v230 + ""
    let v232 : string = " " + v227 + v231 + ""
    let v233 : string = " " + v228 + v232 + ""
    let v234 : string = "fill-rule=\"evenodd\""
    let v235 : string = "d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\""
    let v236 : string = "clip-rule=\"evenodd\""
    let v237 : string = " " + v234 + v197 + ""
    let v238 : string = " " + v235 + v237 + ""
    let v239 : string = " " + v236 + v238 + ""
    let v240 : string = "vec![" + v197 + "]"
    let v241 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v240 
    let v242 : string = "leptos::prelude::Fragment::new($0)"
    let v243 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v241 v242 
    let v244 : string = "leptos::prelude::AnyView::from($0)"
    let v245 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v243 v244 
    let v246 : string = "path"
    let v247 : string = "<" + v246 + " " + v239 + ">move || { v245 }</" + v246 + ">"
    let v248 : string = "leptos::prelude::view! { " + v247 + " }"
    let v249 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v248 
    let v250 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v249 |> unbox
    let v251 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v252 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v250 v251 
    let v253 : string = "v252"
    let v254 : string = v253 + v197 
    let v255 : string = v254 + v197 
    let v256 : string = "vec![" + v255 + "]"
    let v257 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v256 
    let v258 : string = "leptos::prelude::Fragment::new($0)"
    let v259 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v257 v258 
    let v260 : string = "leptos::prelude::AnyView::from($0)"
    let v261 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v259 v260 
    let v262 : string = "svg"
    let v263 : string = "<" + v262 + " " + v233 + ">move || { v261 }</" + v262 + ">"
    let v264 : string = "leptos::prelude::view! { " + v263 + " }"
    let v265 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v264 
    let v266 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v265 |> unbox
    let v267 : string = "data-checked-icon"
    let v268 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v269 : string = "class=\"hidden h-4 w-4\""
    let v270 : string = "viewBox=\"0 0 20 20\""
    let v271 : string = "fill=\"currentColor\""
    let v272 : string = " " + v267 + v197 + ""
    let v273 : string = " " + v268 + v272 + ""
    let v274 : string = " " + v269 + v273 + ""
    let v275 : string = " " + v270 + v274 + ""
    let v276 : string = " " + v271 + v275 + ""
    let v277 : string = "fill-rule=\"evenodd\""
    let v278 : string = "d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\""
    let v279 : string = "clip-rule=\"evenodd\""
    let v280 : string = " " + v277 + v197 + ""
    let v281 : string = " " + v278 + v280 + ""
    let v282 : string = " " + v279 + v281 + ""
    let v283 : string = "vec![" + v197 + "]"
    let v284 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v283 
    let v285 : string = "leptos::prelude::Fragment::new($0)"
    let v286 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v284 v285 
    let v287 : string = "leptos::prelude::AnyView::from($0)"
    let v288 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v286 v287 
    let v289 : string = "<" + v246 + " " + v282 + ">move || { v288 }</" + v246 + ">"
    let v290 : string = "leptos::prelude::view! { " + v289 + " }"
    let v291 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v290 
    let v292 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v291 |> unbox
    let v293 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v294 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v292 v293 
    let v295 : string = "v294"
    let v296 : string = v295 + v197 
    let v297 : string = v296 + v197 
    let v298 : string = "vec![" + v297 + "]"
    let v299 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v298 
    let v300 : string = "leptos::prelude::Fragment::new($0)"
    let v301 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v299 v300 
    let v302 : string = "leptos::prelude::AnyView::from($0)"
    let v303 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v301 v302 
    let v304 : string = "<" + v262 + " " + v276 + ">move || { v303 }</" + v262 + ">"
    let v305 : string = "leptos::prelude::view! { " + v304 + " }"
    let v306 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v305 
    let v307 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v306 |> unbox
    let v308 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v309 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v307 v308 
    let v310 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v311 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v266 v310 
    let v312 : string = "v309"
    let v313 : string = v312 + v197 
    let v314 : string = v313 + v197 
    let v315 : string = "v311"
    let v316 : string = ", "
    let v317 : string = v315 + v316 
    let v318 : string = v317 + v314 
    let v319 : string = "vec![" + v318 + "]"
    let v320 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v319 
    let v321 : string = "leptos::prelude::Fragment::new($0)"
    let v322 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v320 v321 
    let v323 : string = "leptos::prelude::AnyView::from($0)"
    let v324 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v322 v323 
    let v325 : string = "span"
    let v326 : string = "<" + v325 + " " + v223 + ">move || { v324 }</" + v325 + ">"
    let v327 : string = "leptos::prelude::view! { " + v326 + " }"
    let v328 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v327 
    let v329 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v328 |> unbox
    let v330 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v331 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v329 v330 
    let v332 : string = "class=\"absolute inset-0 rounded-full bg-gray-200 dark:bg-gray-200 transition peer-checked:bg-gray-300\""
    let v333 : string = " " + v332 + v197 + ""
    let v334 : string = "vec![" + v197 + "]"
    let v335 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v334 
    let v336 : string = "leptos::prelude::Fragment::new($0)"
    let v337 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v335 v336 
    let v338 : string = "leptos::prelude::AnyView::from($0)"
    let v339 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v337 v338 
    let v340 : string = "<" + v325 + " " + v333 + ">move || { v339 }</" + v325 + ">"
    let v341 : string = "leptos::prelude::view! { " + v340 + " }"
    let v342 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v341 
    let v343 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v342 |> unbox
    let v344 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v345 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v343 v344 
    let v346 : string = "v345"
    let v347 : string = v346 + v197 
    let v348 : string = v347 + v197 
    let v349 : string = "v331"
    let v350 : string = v349 + v316 
    let v351 : string = v350 + v348 
    let v352 : string = "v221"
    let v353 : string = v352 + v316 
    let v354 : string = v353 + v351 
    let v355 : string = "vec![" + v354 + "]"
    let v356 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v355 
    let v357 : string = "leptos::prelude::Fragment::new($0)"
    let v358 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v356 v357 
    let v359 : string = "leptos::prelude::AnyView::from($0)"
    let v360 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v358 v359 
    let v361 : string = "label"
    let v362 : string = "<" + v361 + " " + v199 + ">move || { v360 }</" + v361 + ">"
    let v363 : string = "leptos::prelude::view! { " + v362 + " }"
    let v364 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v363 
    let v365 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Label>> = v364 |> unbox
    let v366 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v367 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v365 v366 
    let v368 : string = "v367"
    let v369 : string = v368 + v197 
    let v370 : string = v369 + v197 
    let v371 : string = "vec![" + v370 + "]"
    let v372 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v371 
    let v373 : string = "leptos::prelude::Fragment::new($0)"
    let v374 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v372 v373 
    v374
and method245 (v0 : Heap2) : (unit -> leptos_dom_Fragment) =
    closure263(v0)
and closure268 () () : string =
    let v0 : string = "items-center"
    v0
and closure269 (v0 : int64) () : leptos_dom_Fragment =
    let v1 : string = "Transaction " + string (v0 + 1L) + ""
    (* run_target_args'
    let v6 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v7 : string = "&*$0"
    let v8 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v7 
    let _run_target_args'_v6 = v8 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v9 : string = "&*$0"
    let v10 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v9 
    let _run_target_args'_v6 = v10 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v11 : string = "&*$0"
    let v12 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v11 
    let _run_target_args'_v6 = v12 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v14 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v14 
    #endif
#if FABLE_COMPILER_PYTHON
    let v18 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v18 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v22 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v22 
    #endif
#else
    let v26 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v26 
    #endif
    let v29 : Ref<Str> = _run_target_args'_v6 
    (* run_target_args'
    let v39 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v40 : string = "String::from($0)"
    let v41 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v40 
    let _run_target_args'_v39 = v41 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v42 
    let _run_target_args'_v39 = v43 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v44 
    let _run_target_args'_v39 = v45 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v47 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v47 
    #endif
#if FABLE_COMPILER_PYTHON
    let v51 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v51 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v55 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v55 
    #endif
#else
    let v59 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v59 
    #endif
    let v62 : std_string_String = _run_target_args'_v39 
    let v68 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v69 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v62 v68 
    let v70 : string = "v69"
    let v71 : string = ""
    let v72 : string = v70 + v71 
    let v73 : string = v72 + v71 
    let v74 : string = "vec![" + v73 + "]"
    let v75 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v74 
    let v76 : string = "leptos::prelude::Fragment::new($0)"
    let v77 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v75 v76 
    v77
and closure270 () () : leptos_dom_Fragment =
    let v0 : string = "Account"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method248 () : (unit -> leptos_dom_Fragment) =
    closure270()
and closure271 (v0 : string) () : leptos_dom_Fragment =
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method249 (v0 : string) : (unit -> leptos_dom_Fragment) =
    closure271(v0)
and closure272 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure273 () () : string =
    let v0 : string = ""
    v0
and closure274 () () : leptos_dom_Fragment =
    let v0 : string = "Block Timestamp"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method250 () : (unit -> leptos_dom_Fragment) =
    closure274()
and closure275 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v5 v12 
    let v15 : (string -> int64) = int64
    let v16 : int64 = v15 v13
    let v19 : int64 = method204(v16)
    let v20 : int64 = v19 / 1000L
    let v21 : string = "chrono::DateTime::from_timestamp_micros($0)"
    let v22 : chrono_DateTime<chrono_Utc> option = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v24 : (chrono_DateTime<chrono_Utc> -> US68) = method205()
    let v25 : US68 option = v22 |> Option.map v24 
    let v38 : US68 = US68_1
    let v39 : US68 = v25 |> Option.defaultValue v38 
    let v58 : US31 =
        match v39 with
        | US68_1 -> (* None *)
            US31_1
        | US68_0(v43) -> (* Some *)
            let v44 : string = "$0.naive_utc()"
            let v45 : chrono_NaiveDateTime = Fable.Core.RustInterop.emitRustExpr v43 v44 
            let v46 : string = "chrono::offset::TimeZone::from_utc_datetime(&chrono::Local, &$0)"
            let v47 : chrono_DateTime<chrono_Local> = Fable.Core.RustInterop.emitRustExpr v45 v46 
            let v48 : string = "%Y-%m-%d %H:%M:%S"
            let v49 : string = "r#\"" + v48 + "\"#"
            let v50 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v49 
            let v51 : string = "$0.format($1).to_string()"
            let v52 : std_string_String = Fable.Core.RustInterop.emitRustExpr struct (v47, v50) v51 
            let v53 : string = "fable_library_rust::String_::fromString($0)"
            let v54 : string = Fable.Core.RustInterop.emitRustExpr v52 v53 
            US31_0(v54)
    let v64 : US69 =
        match v58 with
        | US31_1 -> (* None *)
            let v61 : string = "resultm.from_option / Option does not have a value."
            US69_1(v61)
        | US31_0(v59) -> (* Some *)
            US69_0(v59)
    let v69 : string =
        match v64 with
        | US69_1(v66) -> (* Error *)
            let v67 : string = "sm'.to_string result / Error: " + v66 + ""
            v67
        | US69_0(v65) -> (* Ok *)
            v65
    (* run_target_args'
    let v74 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v75 : string = "&*$0"
    let v76 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v69 v75 
    let _run_target_args'_v74 = v76 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v77 : string = "&*$0"
    let v78 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v69 v77 
    let _run_target_args'_v74 = v78 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v79 : string = "&*$0"
    let v80 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v69 v79 
    let _run_target_args'_v74 = v80 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v82 : Ref<Str> = v69 |> unbox<Ref<Str>>
    let _run_target_args'_v74 = v82 
    #endif
#if FABLE_COMPILER_PYTHON
    let v86 : Ref<Str> = v69 |> unbox<Ref<Str>>
    let _run_target_args'_v74 = v86 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v90 : Ref<Str> = v69 |> unbox<Ref<Str>>
    let _run_target_args'_v74 = v90 
    #endif
#else
    let v94 : Ref<Str> = v69 |> unbox<Ref<Str>>
    let _run_target_args'_v74 = v94 
    #endif
    let v97 : Ref<Str> = _run_target_args'_v74 
    (* run_target_args'
    let v107 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v108 : string = "String::from($0)"
    let v109 : std_string_String = Fable.Core.RustInterop.emitRustExpr v97 v108 
    let _run_target_args'_v107 = v109 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v110 : string = "String::from($0)"
    let v111 : std_string_String = Fable.Core.RustInterop.emitRustExpr v97 v110 
    let _run_target_args'_v107 = v111 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v112 : string = "String::from($0)"
    let v113 : std_string_String = Fable.Core.RustInterop.emitRustExpr v97 v112 
    let _run_target_args'_v107 = v113 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v115 : std_string_String = v97 |> unbox<std_string_String>
    let _run_target_args'_v107 = v115 
    #endif
#if FABLE_COMPILER_PYTHON
    let v119 : std_string_String = v97 |> unbox<std_string_String>
    let _run_target_args'_v107 = v119 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v123 : std_string_String = v97 |> unbox<std_string_String>
    let _run_target_args'_v107 = v123 
    #endif
#else
    let v127 : std_string_String = v97 |> unbox<std_string_String>
    let _run_target_args'_v107 = v127 
    #endif
    let v130 : std_string_String = _run_target_args'_v107 
    let v136 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v137 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v130 v136 
    let v138 : string = "v137"
    let v139 : string = ""
    let v140 : string = v138 + v139 
    let v141 : string = v140 + v139 
    let v142 : string = "vec![" + v141 + "]"
    let v143 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v142 
    let v144 : string = "leptos::prelude::Fragment::new($0)"
    let v145 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v143 v144 
    v145
and method251 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure275(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure276 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure277 () () : string =
    let v0 : string = ""
    v0
and closure278 () () : leptos_dom_Fragment =
    let v0 : string = "Predecessor"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method252 () : (unit -> leptos_dom_Fragment) =
    closure278()
and closure279 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v1 v12 
    (* run_target_args'
    let v18 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v19 
    let _run_target_args'_v18 = v20 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v21 
    let _run_target_args'_v18 = v22 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v23 
    let _run_target_args'_v18 = v24 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v26 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v26 
    #endif
#if FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v30 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v34 
    #endif
#else
    let v38 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v38 
    #endif
    let v41 : Ref<Str> = _run_target_args'_v18 
    (* run_target_args'
    let v51 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v52 
    let _run_target_args'_v51 = v53 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v54 : string = "String::from($0)"
    let v55 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v54 
    let _run_target_args'_v51 = v55 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v56 : string = "String::from($0)"
    let v57 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v56 
    let _run_target_args'_v51 = v57 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v59 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v59 
    #endif
#if FABLE_COMPILER_PYTHON
    let v63 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v63 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v67 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v67 
    #endif
#else
    let v71 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v71 
    #endif
    let v74 : std_string_String = _run_target_args'_v51 
    let v80 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v74 v80 
    let v82 : string = "v81"
    let v83 : string = ""
    let v84 : string = v82 + v83 
    let v85 : string = v84 + v83 
    let v86 : string = "vec![" + v85 + "]"
    let v87 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v86 
    let v88 : string = "leptos::prelude::Fragment::new($0)"
    let v89 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v87 v88 
    v89
and method253 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure279(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure280 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure281 () () : string =
    let v0 : string = ""
    v0
and closure282 () () : leptos_dom_Fragment =
    let v0 : string = "Receiver"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method254 () : (unit -> leptos_dom_Fragment) =
    closure282()
and closure283 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v2 v12 
    (* run_target_args'
    let v18 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v19 
    let _run_target_args'_v18 = v20 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v21 
    let _run_target_args'_v18 = v22 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v23 
    let _run_target_args'_v18 = v24 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v26 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v26 
    #endif
#if FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v30 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v34 
    #endif
#else
    let v38 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v38 
    #endif
    let v41 : Ref<Str> = _run_target_args'_v18 
    (* run_target_args'
    let v51 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v52 
    let _run_target_args'_v51 = v53 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v54 : string = "String::from($0)"
    let v55 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v54 
    let _run_target_args'_v51 = v55 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v56 : string = "String::from($0)"
    let v57 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v56 
    let _run_target_args'_v51 = v57 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v59 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v59 
    #endif
#if FABLE_COMPILER_PYTHON
    let v63 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v63 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v67 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v67 
    #endif
#else
    let v71 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v71 
    #endif
    let v74 : std_string_String = _run_target_args'_v51 
    let v80 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v74 v80 
    let v82 : string = "v81"
    let v83 : string = ""
    let v84 : string = v82 + v83 
    let v85 : string = v84 + v83 
    let v86 : string = "vec![" + v85 + "]"
    let v87 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v86 
    let v88 : string = "leptos::prelude::Fragment::new($0)"
    let v89 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v87 v88 
    v89
and method255 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure283(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure284 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure285 () () : string =
    let v0 : string = ""
    v0
and closure286 () () : leptos_dom_Fragment =
    let v0 : string = "Actions"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method256 () : (unit -> leptos_dom_Fragment) =
    closure286()
and closure288 (v0 : std_string_String) () : leptos_dom_Fragment =
    let v1 : string = "fable_library_rust::String_::fromString($0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : bool = "FUNCTION_CALL" = v2
    let v11 : string =
        if v3 then
            let v4 : string = "Function Call:"
            v4
        else
            let v5 : bool = "DEPLOY_CONTRACT" = v2
            if v5 then
                let v6 : string = "Contract Deploy:"
                v6
            else
                let v7 : bool = "TRANSFER" = v2
                if v7 then
                    let v8 : string = "Transfer:"
                    v8
                else
                    v2
    (* run_target_args'
    let v16 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v17 : string = "&*$0"
    let v18 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v17 
    let _run_target_args'_v16 = v18 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v19 
    let _run_target_args'_v16 = v20 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v11 v21 
    let _run_target_args'_v16 = v22 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v24 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v16 = v24 
    #endif
#if FABLE_COMPILER_PYTHON
    let v28 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v16 = v28 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v32 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v16 = v32 
    #endif
#else
    let v36 : Ref<Str> = v11 |> unbox<Ref<Str>>
    let _run_target_args'_v16 = v36 
    #endif
    let v39 : Ref<Str> = _run_target_args'_v16 
    (* run_target_args'
    let v49 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v50 : string = "String::from($0)"
    let v51 : std_string_String = Fable.Core.RustInterop.emitRustExpr v39 v50 
    let _run_target_args'_v49 = v51 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v39 v52 
    let _run_target_args'_v49 = v53 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v54 : string = "String::from($0)"
    let v55 : std_string_String = Fable.Core.RustInterop.emitRustExpr v39 v54 
    let _run_target_args'_v49 = v55 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v57 : std_string_String = v39 |> unbox<std_string_String>
    let _run_target_args'_v49 = v57 
    #endif
#if FABLE_COMPILER_PYTHON
    let v61 : std_string_String = v39 |> unbox<std_string_String>
    let _run_target_args'_v49 = v61 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v65 : std_string_String = v39 |> unbox<std_string_String>
    let _run_target_args'_v49 = v65 
    #endif
#else
    let v69 : std_string_String = v39 |> unbox<std_string_String>
    let _run_target_args'_v49 = v69 
    #endif
    let v72 : std_string_String = _run_target_args'_v49 
    let v78 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v79 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v72 v78 
    let v80 : string = "v79"
    let v81 : string = ""
    let v82 : string = v80 + v81 
    let v83 : string = v82 + v81 
    let v84 : string = "vec![" + v83 + "]"
    let v85 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v84 
    let v86 : string = "leptos::prelude::Fragment::new($0)"
    let v87 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v85 v86 
    v87
and method258 (v0 : std_string_String) : (unit -> leptos_dom_Fragment) =
    closure288(v0)
and closure290 () () : leptos_dom_Fragment =
    let v0 : string = "Method"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method260 () : (unit -> leptos_dom_Fragment) =
    closure290()
and closure291 (v0 : std_string_String option) () : leptos_dom_Fragment =
    let v2 : (std_string_String -> US14) = method39()
    let v3 : US14 option = v0 |> Option.map v2 
    let v16 : US14 = US14_1
    let v17 : US14 = v3 |> Option.defaultValue v16 
    match v17 with
    | US14_1 -> (* None *)
        let v100 : string = "None"
        (* run_target_args'
        let v105 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v106 : string = "&*$0"
        let v107 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v100 v106 
        let _run_target_args'_v105 = v107 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v108 : string = "&*$0"
        let v109 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v100 v108 
        let _run_target_args'_v105 = v109 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v110 : string = "&*$0"
        let v111 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v100 v110 
        let _run_target_args'_v105 = v111 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v113 : Ref<Str> = v100 |> unbox<Ref<Str>>
        let _run_target_args'_v105 = v113 
        #endif
#if FABLE_COMPILER_PYTHON
        let v117 : Ref<Str> = v100 |> unbox<Ref<Str>>
        let _run_target_args'_v105 = v117 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v121 : Ref<Str> = v100 |> unbox<Ref<Str>>
        let _run_target_args'_v105 = v121 
        #endif
#else
        let v125 : Ref<Str> = v100 |> unbox<Ref<Str>>
        let _run_target_args'_v105 = v125 
        #endif
        let v128 : Ref<Str> = _run_target_args'_v105 
        (* run_target_args'
        let v138 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v139 : string = "String::from($0)"
        let v140 : std_string_String = Fable.Core.RustInterop.emitRustExpr v128 v139 
        let _run_target_args'_v138 = v140 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v141 : string = "String::from($0)"
        let v142 : std_string_String = Fable.Core.RustInterop.emitRustExpr v128 v141 
        let _run_target_args'_v138 = v142 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v143 : string = "String::from($0)"
        let v144 : std_string_String = Fable.Core.RustInterop.emitRustExpr v128 v143 
        let _run_target_args'_v138 = v144 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v146 : std_string_String = v128 |> unbox<std_string_String>
        let _run_target_args'_v138 = v146 
        #endif
#if FABLE_COMPILER_PYTHON
        let v150 : std_string_String = v128 |> unbox<std_string_String>
        let _run_target_args'_v138 = v150 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v154 : std_string_String = v128 |> unbox<std_string_String>
        let _run_target_args'_v138 = v154 
        #endif
#else
        let v158 : std_string_String = v128 |> unbox<std_string_String>
        let _run_target_args'_v138 = v158 
        #endif
        let v161 : std_string_String = _run_target_args'_v138 
        let v167 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
        let v168 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v161 v167 
        let v169 : string = "v168"
        let v170 : string = ""
        let v171 : string = v169 + v170 
        let v172 : string = v171 + v170 
        let v173 : string = "vec![" + v172 + "]"
        let v174 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v173 
        let v175 : string = "leptos::prelude::Fragment::new($0)"
        let v176 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v174 v175 
        v176
    | US14_0(v21) -> (* Some *)
        let v22 : string = "fable_library_rust::String_::fromString($0)"
        let v23 : string = Fable.Core.RustInterop.emitRustExpr v21 v22 
        (* run_target_args'
        let v28 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v29 : string = "&*$0"
        let v30 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v23 v29 
        let _run_target_args'_v28 = v30 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v31 : string = "&*$0"
        let v32 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v23 v31 
        let _run_target_args'_v28 = v32 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v33 : string = "&*$0"
        let v34 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v23 v33 
        let _run_target_args'_v28 = v34 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v36 : Ref<Str> = v23 |> unbox<Ref<Str>>
        let _run_target_args'_v28 = v36 
        #endif
#if FABLE_COMPILER_PYTHON
        let v40 : Ref<Str> = v23 |> unbox<Ref<Str>>
        let _run_target_args'_v28 = v40 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v44 : Ref<Str> = v23 |> unbox<Ref<Str>>
        let _run_target_args'_v28 = v44 
        #endif
#else
        let v48 : Ref<Str> = v23 |> unbox<Ref<Str>>
        let _run_target_args'_v28 = v48 
        #endif
        let v51 : Ref<Str> = _run_target_args'_v28 
        (* run_target_args'
        let v61 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v62 : string = "String::from($0)"
        let v63 : std_string_String = Fable.Core.RustInterop.emitRustExpr v51 v62 
        let _run_target_args'_v61 = v63 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v64 : string = "String::from($0)"
        let v65 : std_string_String = Fable.Core.RustInterop.emitRustExpr v51 v64 
        let _run_target_args'_v61 = v65 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v66 : string = "String::from($0)"
        let v67 : std_string_String = Fable.Core.RustInterop.emitRustExpr v51 v66 
        let _run_target_args'_v61 = v67 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v69 : std_string_String = v51 |> unbox<std_string_String>
        let _run_target_args'_v61 = v69 
        #endif
#if FABLE_COMPILER_PYTHON
        let v73 : std_string_String = v51 |> unbox<std_string_String>
        let _run_target_args'_v61 = v73 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v77 : std_string_String = v51 |> unbox<std_string_String>
        let _run_target_args'_v61 = v77 
        #endif
#else
        let v81 : std_string_String = v51 |> unbox<std_string_String>
        let _run_target_args'_v61 = v81 
        #endif
        let v84 : std_string_String = _run_target_args'_v61 
        let v90 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
        let v91 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v84 v90 
        let v92 : string = "v91"
        let v93 : string = ""
        let v94 : string = v92 + v93 
        let v95 : string = v94 + v93 
        let v96 : string = "vec![" + v95 + "]"
        let v97 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v96 
        let v98 : string = "leptos::prelude::Fragment::new($0)"
        let v99 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v97 v98 
        v99
and method261 (v0 : std_string_String option) : (unit -> leptos_dom_Fragment) =
    closure291(v0)
and closure292 () () : string =
    let v0 : string = ""
    v0
and closure293 () () : string =
    let v0 : string = ""
    v0
and closure294 () () : string =
    let v0 : string = ""
    v0
and closure289 (v0 : std_string_String option) () : leptos_dom_Fragment =
    let v1 : string = "class=\"flex flex-1 flex-col\""
    let v2 : string = ""
    let v3 : string = " " + v1 + v2 + ""
    let v4 : (unit -> leptos_dom_Fragment) = method260()
    let v5 : (unit -> leptos_dom_Fragment) = method261(v0)
    let v6 : string = "$0"
    let v7 : (unit -> string) = closure292()
    let v8 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v7 v6 
    let v9 : string = "$0"
    let v10 : (unit -> string) = closure293()
    let v11 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v10 v9 
    let v12 : string = "$0"
    let v13 : (unit -> string) = closure235()
    let v14 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v13 v12 
    let v15 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v14(()) + \" \" + &v11(()) + \" \" + &v8(())"
    let v16 : string = " " + v15 + v2 + ""
    let v17 : string = "$0"
    let v18 : (unit -> string) = closure294()
    let v19 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v18 v17 
    let v20 : string = "class=\"[font-size:12px] text-gray-400\""
    let v21 : string = " " + v20 + v2 + ""
    let v22 : leptos_dom_Fragment = v4 ()
    let v23 : string = "leptos::prelude::AnyView::from($0)"
    let v24 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v22 v23 
    let v25 : string = "dt"
    let v26 : string = "<" + v25 + " " + v21 + ">move || { v24 }</" + v25 + ">"
    let v27 : string = "leptos::prelude::view! { " + v26 + " }"
    let v28 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v28 |> unbox
    let v30 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v31 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v29 v30 
    let v32 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v19(())"
    let v33 : string = " " + v32 + v2 + ""
    let v34 : leptos_dom_Fragment = v5 ()
    let v35 : string = "leptos::prelude::AnyView::from($0)"
    let v36 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v34 v35 
    let v37 : string = "dd"
    let v38 : string = "<" + v37 + " " + v33 + ">move || { v36 }</" + v37 + ">"
    let v39 : string = "leptos::prelude::view! { " + v38 + " }"
    let v40 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v39 
    let v41 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v40 |> unbox
    let v42 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v43 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v41 v42 
    let v44 : string = "v43"
    let v45 : string = v44 + v2 
    let v46 : string = v45 + v2 
    let v47 : string = "v31"
    let v48 : string = ", "
    let v49 : string = v47 + v48 
    let v50 : string = v49 + v46 
    let v51 : string = "vec![" + v50 + "]"
    let v52 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v51 
    let v53 : string = "leptos::prelude::Fragment::new($0)"
    let v54 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v52 v53 
    let v55 : string = "leptos::prelude::AnyView::from($0)"
    let v56 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v54 v55 
    let v57 : string = "dl"
    let v58 : string = "<" + v57 + " " + v16 + ">move || { v56 }</" + v57 + ">"
    let v59 : string = "leptos::prelude::view! { " + v58 + " }"
    let v60 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v59 
    let v61 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v60 |> unbox
    let v62 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v63 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v62 
    let v64 : string = "v63"
    let v65 : string = v64 + v2 
    let v66 : string = v65 + v2 
    let v67 : string = "vec![" + v66 + "]"
    let v68 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v67 
    let v69 : string = "leptos::prelude::Fragment::new($0)"
    let v70 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v68 v69 
    let v71 : string = "leptos::prelude::AnyView::from($0)"
    let v72 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v70 v71 
    let v73 : string = "div"
    let v74 : string = "<" + v73 + " " + v3 + ">move || { v72 }</" + v73 + ">"
    let v75 : string = "leptos::prelude::view! { " + v74 + " }"
    let v76 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v75 
    let v77 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v76 |> unbox
    let v78 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v79 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v78 
    let v80 : string = "v79"
    let v81 : string = v80 + v2 
    let v82 : string = v81 + v2 
    let v83 : string = "vec![" + v82 + "]"
    let v84 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v83 
    let v85 : string = "leptos::prelude::Fragment::new($0)"
    let v86 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v84 v85 
    v86
and method259 (v0 : std_string_String option) : (unit -> leptos_dom_Fragment) =
    closure289(v0)
and closure295 () () : string =
    let v0 : string = ""
    v0
and closure296 () () : string =
    let v0 : string = "items-center"
    v0
and closure297 () () : string =
    let v0 : string = ""
    v0
and closure298 () () : string =
    let v0 : string = ""
    v0
and closure287 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "$0.to_vec()"
    let v13 : Vec<struct (std_string_String * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr v7 v12 
    let v14 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
    let v15 : bool = Fable.Core.RustInterop.emitRustExpr v13 v14 
    let v16 : string = "x"
    let struct (v17 : std_string_String, v18 : std_string_String option) = Fable.Core.RustInterop.emitRustExpr () v16 
    let v19 : (unit -> leptos_dom_Fragment) = method258(v17)
    let v20 : (unit -> leptos_dom_Fragment) = method259(v18)
    let v21 : string = "$0"
    let v22 : (unit -> string) = closure295()
    let v23 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v22 v21 
    let v24 : string = "$0"
    let v25 : (unit -> string) = closure296()
    let v26 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v25 v24 
    let v27 : string = "$0"
    let v28 : (unit -> string) = closure297()
    let v29 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v28 v27 
    let v30 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v29(()) + \" \" + &v26(()) + \" \" + &v23(())"
    let v31 : string = ""
    let v32 : string = " " + v30 + v31 + ""
    let v33 : string = "$0"
    let v34 : (unit -> string) = closure298()
    let v35 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v34 v33 
    let v36 : string = "class=\"[font-size:12px] text-gray-400\""
    let v37 : string = " " + v36 + v31 + ""
    let v38 : leptos_dom_Fragment = v19 ()
    let v39 : string = "leptos::prelude::AnyView::from($0)"
    let v40 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v38 v39 
    let v41 : string = "dt"
    let v42 : string = "<" + v41 + " " + v37 + ">move || { v40 }</" + v41 + ">"
    let v43 : string = "leptos::prelude::view! { " + v42 + " }"
    let v44 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v43 
    let v45 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v44 |> unbox
    let v46 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v47 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v45 v46 
    let v48 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v35(())"
    let v49 : string = " " + v48 + v31 + ""
    let v50 : leptos_dom_Fragment = v20 ()
    let v51 : string = "leptos::prelude::AnyView::from($0)"
    let v52 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v50 v51 
    let v53 : string = "dd"
    let v54 : string = "<" + v53 + " " + v49 + ">move || { v52 }</" + v53 + ">"
    let v55 : string = "leptos::prelude::view! { " + v54 + " }"
    let v56 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v55 
    let v57 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v56 |> unbox
    let v58 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v59 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v57 v58 
    let v60 : string = "v59"
    let v61 : string = v60 + v31 
    let v62 : string = v61 + v31 
    let v63 : string = "v47"
    let v64 : string = ", "
    let v65 : string = v63 + v64 
    let v66 : string = v65 + v62 
    let v67 : string = "vec![" + v66 + "]"
    let v68 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v67 
    let v69 : string = "leptos::prelude::Fragment::new($0)"
    let v70 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v68 v69 
    let v71 : string = "leptos::prelude::AnyView::from($0)"
    let v72 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v70 v71 
    let v73 : string = "dl"
    let v74 : string = "<" + v73 + " " + v32 + ">move || { v72 }</" + v73 + ">"
    let v75 : string = "leptos::prelude::view! { " + v74 + " }"
    let v76 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v75 
    let v77 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v76 |> unbox
    let v78 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v79 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v78 
    let v80 : string = "true; $0 }).collect::<Vec<_>>()"
    let v81 : bool = Fable.Core.RustInterop.emitRustExpr v79 v80 
    let v82 : string = "_vec_map"
    let v83 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v82 
    let v84 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v85 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v83 v84 
    let v86 : string = "v85"
    let v87 : string = v86 + v31 
    let v88 : string = v87 + v31 
    let v89 : string = "vec![" + v88 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::Fragment::new($0)"
    let v92 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v90 v91 
    v92
and method257 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure287(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure299 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure300 () () : string =
    let v0 : string = "sm:pr-[10px]"
    v0
and closure301 () () : string =
    let v0 : string = "[flex-direction:column]"
    v0
and closure302 () () : leptos_dom_Fragment =
    let v0 : string = "Deposit"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method262 () : (unit -> leptos_dom_Fragment) =
    closure302()
and closure303 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v13 : (float -> string) = _.ToString()
    let v14 : string = v13 v8
    (* run_target_args'
    let v21 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v22 : string = "&*$0"
    let v23 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v22 
    let _run_target_args'_v21 = v23 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v24 : string = "&*$0"
    let v25 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v24 
    let _run_target_args'_v21 = v25 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v26 : string = "&*$0"
    let v27 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v26 
    let _run_target_args'_v21 = v27 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v29 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v29 
    #endif
#if FABLE_COMPILER_PYTHON
    let v33 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v33 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v37 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v37 
    #endif
#else
    let v41 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v41 
    #endif
    let v44 : Ref<Str> = _run_target_args'_v21 
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v55 
    let _run_target_args'_v54 = v56 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = "String::from($0)"
    let v58 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v57 
    let _run_target_args'_v54 = v58 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = "String::from($0)"
    let v60 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v59 
    let _run_target_args'_v54 = v60 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v62 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v62 
    #endif
#if FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v66 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v70 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v70 
    #endif
#else
    let v74 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v74 
    #endif
    let v77 : std_string_String = _run_target_args'_v54 
    let v83 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v84 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v83 
    let v85 : string = "v84"
    let v86 : string = ""
    let v87 : string = v85 + v86 
    let v88 : string = v87 + v86 
    let v89 : string = "vec![" + v88 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::Fragment::new($0)"
    let v92 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v90 v91 
    v92
and method263 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure303(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure304 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure305 () () : string =
    let v0 : string = ""
    v0
and closure306 () () : leptos_dom_Fragment =
    let v0 : string = "Outcome Status"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method264 () : (unit -> leptos_dom_Fragment) =
    closure306()
and closure307 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v13 : (bool -> string) = _.ToString()
    let v14 : string = v13 v9
    (* run_target_args'
    let v21 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v22 : string = "&*$0"
    let v23 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v22 
    let _run_target_args'_v21 = v23 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v24 : string = "&*$0"
    let v25 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v24 
    let _run_target_args'_v21 = v25 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v26 : string = "&*$0"
    let v27 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v26 
    let _run_target_args'_v21 = v27 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v29 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v29 
    #endif
#if FABLE_COMPILER_PYTHON
    let v33 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v33 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v37 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v37 
    #endif
#else
    let v41 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v41 
    #endif
    let v44 : Ref<Str> = _run_target_args'_v21 
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v55 
    let _run_target_args'_v54 = v56 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = "String::from($0)"
    let v58 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v57 
    let _run_target_args'_v54 = v58 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = "String::from($0)"
    let v60 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v59 
    let _run_target_args'_v54 = v60 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v62 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v62 
    #endif
#if FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v66 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v70 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v70 
    #endif
#else
    let v74 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v74 
    #endif
    let v77 : std_string_String = _run_target_args'_v54 
    let v83 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v84 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v83 
    let v85 : string = "v84"
    let v86 : string = ""
    let v87 : string = v85 + v86 
    let v88 : string = v87 + v86 
    let v89 : string = "vec![" + v88 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::Fragment::new($0)"
    let v92 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v90 v91 
    v92
and method265 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure307(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure308 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure309 () () : string =
    let v0 : string = ""
    v0
and closure310 () () : leptos_dom_Fragment =
    let v0 : string = "Fee"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method266 () : (unit -> leptos_dom_Fragment) =
    closure310()
and closure311 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v13 : (float -> string) = _.ToString()
    let v14 : string = v13 v10
    (* run_target_args'
    let v21 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v22 : string = "&*$0"
    let v23 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v22 
    let _run_target_args'_v21 = v23 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v24 : string = "&*$0"
    let v25 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v24 
    let _run_target_args'_v21 = v25 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v26 : string = "&*$0"
    let v27 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v26 
    let _run_target_args'_v21 = v27 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v29 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v29 
    #endif
#if FABLE_COMPILER_PYTHON
    let v33 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v33 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v37 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v37 
    #endif
#else
    let v41 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v41 
    #endif
    let v44 : Ref<Str> = _run_target_args'_v21 
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v55 
    let _run_target_args'_v54 = v56 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = "String::from($0)"
    let v58 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v57 
    let _run_target_args'_v54 = v58 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = "String::from($0)"
    let v60 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v59 
    let _run_target_args'_v54 = v60 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v62 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v62 
    #endif
#if FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v66 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v70 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v70 
    #endif
#else
    let v74 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v74 
    #endif
    let v77 : std_string_String = _run_target_args'_v54 
    let v83 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v84 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v83 
    let v85 : string = "v84"
    let v86 : string = ""
    let v87 : string = v85 + v86 
    let v88 : string = v87 + v86 
    let v89 : string = "vec![" + v88 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::Fragment::new($0)"
    let v92 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v90 v91 
    v92
and method267 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure311(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure312 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure313 () () : string =
    let v0 : string = ""
    v0
and closure314 () () : leptos_dom_Fragment =
    let v0 : string = "Block Height"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method268 () : (unit -> leptos_dom_Fragment) =
    closure314()
and closure315 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v13 : (uint32 -> string) = _.ToString()
    let v14 : string = v13 v6
    (* run_target_args'
    let v21 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v22 : string = "&*$0"
    let v23 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v22 
    let _run_target_args'_v21 = v23 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v24 : string = "&*$0"
    let v25 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v24 
    let _run_target_args'_v21 = v25 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v26 : string = "&*$0"
    let v27 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v14 v26 
    let _run_target_args'_v21 = v27 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v29 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v29 
    #endif
#if FABLE_COMPILER_PYTHON
    let v33 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v33 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v37 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v37 
    #endif
#else
    let v41 : Ref<Str> = v14 |> unbox<Ref<Str>>
    let _run_target_args'_v21 = v41 
    #endif
    let v44 : Ref<Str> = _run_target_args'_v21 
    (* run_target_args'
    let v54 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = "String::from($0)"
    let v56 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v55 
    let _run_target_args'_v54 = v56 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = "String::from($0)"
    let v58 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v57 
    let _run_target_args'_v54 = v58 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = "String::from($0)"
    let v60 : std_string_String = Fable.Core.RustInterop.emitRustExpr v44 v59 
    let _run_target_args'_v54 = v60 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v62 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v62 
    #endif
#if FABLE_COMPILER_PYTHON
    let v66 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v66 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v70 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v70 
    #endif
#else
    let v74 : std_string_String = v44 |> unbox<std_string_String>
    let _run_target_args'_v54 = v74 
    #endif
    let v77 : std_string_String = _run_target_args'_v54 
    let v83 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v84 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v77 v83 
    let v85 : string = "v84"
    let v86 : string = ""
    let v87 : string = v85 + v86 
    let v88 : string = v87 + v86 
    let v89 : string = "vec![" + v88 + "]"
    let v90 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v89 
    let v91 : string = "leptos::prelude::Fragment::new($0)"
    let v92 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v90 v91 
    v92
and method269 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure315(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure316 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure317 () () : string =
    let v0 : string = ""
    v0
and closure318 () () : leptos_dom_Fragment =
    let v0 : string = "Hash"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method270 () : (unit -> leptos_dom_Fragment) =
    closure318()
and closure319 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v3 v12 
    (* run_target_args'
    let v18 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v19 
    let _run_target_args'_v18 = v20 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v21 
    let _run_target_args'_v18 = v22 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v23 
    let _run_target_args'_v18 = v24 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v26 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v26 
    #endif
#if FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v30 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v34 
    #endif
#else
    let v38 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v38 
    #endif
    let v41 : Ref<Str> = _run_target_args'_v18 
    (* run_target_args'
    let v51 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v52 
    let _run_target_args'_v51 = v53 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v54 : string = "String::from($0)"
    let v55 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v54 
    let _run_target_args'_v51 = v55 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v56 : string = "String::from($0)"
    let v57 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v56 
    let _run_target_args'_v51 = v57 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v59 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v59 
    #endif
#if FABLE_COMPILER_PYTHON
    let v63 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v63 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v67 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v67 
    #endif
#else
    let v71 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v71 
    #endif
    let v74 : std_string_String = _run_target_args'_v51 
    let v80 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v74 v80 
    let v82 : string = "v81"
    let v83 : string = ""
    let v84 : string = v82 + v83 
    let v85 : string = v84 + v83 
    let v86 : string = "vec![" + v85 + "]"
    let v87 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v86 
    let v88 : string = "leptos::prelude::Fragment::new($0)"
    let v89 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v87 v88 
    v89
and method271 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure319(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure320 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure321 () () : string =
    let v0 : string = ""
    v0
and closure322 () () : leptos_dom_Fragment =
    let v0 : string = "Block Hash"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method272 () : (unit -> leptos_dom_Fragment) =
    closure322()
and closure323 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v4 v12 
    (* run_target_args'
    let v18 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v19 
    let _run_target_args'_v18 = v20 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v21 
    let _run_target_args'_v18 = v22 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v23 
    let _run_target_args'_v18 = v24 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v26 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v26 
    #endif
#if FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v30 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v34 
    #endif
#else
    let v38 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v38 
    #endif
    let v41 : Ref<Str> = _run_target_args'_v18 
    (* run_target_args'
    let v51 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v52 
    let _run_target_args'_v51 = v53 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v54 : string = "String::from($0)"
    let v55 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v54 
    let _run_target_args'_v51 = v55 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v56 : string = "String::from($0)"
    let v57 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v56 
    let _run_target_args'_v51 = v57 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v59 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v59 
    #endif
#if FABLE_COMPILER_PYTHON
    let v63 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v63 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v67 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v67 
    #endif
#else
    let v71 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v71 
    #endif
    let v74 : std_string_String = _run_target_args'_v51 
    let v80 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v74 v80 
    let v82 : string = "v81"
    let v83 : string = ""
    let v84 : string = v82 + v83 
    let v85 : string = v84 + v83 
    let v86 : string = "vec![" + v85 + "]"
    let v87 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v86 
    let v88 : string = "leptos::prelude::Fragment::new($0)"
    let v89 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v87 v88 
    v89
and method273 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure323(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure324 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure325 () () : string =
    let v0 : string = ""
    v0
and closure326 () () : leptos_dom_Fragment =
    let v0 : string = "Receipt ID"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method274 () : (unit -> leptos_dom_Fragment) =
    closure326()
and closure327 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "fable_library_rust::String_::fromString($0)"
    let v13 : string = Fable.Core.RustInterop.emitRustExpr v0 v12 
    (* run_target_args'
    let v18 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v19 
    let _run_target_args'_v18 = v20 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v21 : string = "&*$0"
    let v22 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v21 
    let _run_target_args'_v18 = v22 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v23 : string = "&*$0"
    let v24 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v13 v23 
    let _run_target_args'_v18 = v24 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v26 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v26 
    #endif
#if FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v30 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v34 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v34 
    #endif
#else
    let v38 : Ref<Str> = v13 |> unbox<Ref<Str>>
    let _run_target_args'_v18 = v38 
    #endif
    let v41 : Ref<Str> = _run_target_args'_v18 
    (* run_target_args'
    let v51 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v52 
    let _run_target_args'_v51 = v53 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v54 : string = "String::from($0)"
    let v55 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v54 
    let _run_target_args'_v51 = v55 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v56 : string = "String::from($0)"
    let v57 : std_string_String = Fable.Core.RustInterop.emitRustExpr v41 v56 
    let _run_target_args'_v51 = v57 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v59 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v59 
    #endif
#if FABLE_COMPILER_PYTHON
    let v63 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v63 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v67 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v67 
    #endif
#else
    let v71 : std_string_String = v41 |> unbox<std_string_String>
    let _run_target_args'_v51 = v71 
    #endif
    let v74 : std_string_String = _run_target_args'_v51 
    let v80 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v74 v80 
    let v82 : string = "v81"
    let v83 : string = ""
    let v84 : string = v82 + v83 
    let v85 : string = v84 + v83 
    let v86 : string = "vec![" + v85 + "]"
    let v87 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v86 
    let v88 : string = "leptos::prelude::Fragment::new($0)"
    let v89 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v87 v88 
    v89
and method275 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure327(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure328 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure329 () () : string =
    let v0 : string = ""
    v0
and closure330 () () : leptos_dom_Fragment =
    let v0 : string = "Logs"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method276 () : (unit -> leptos_dom_Fragment) =
    closure330()
and method278 (v0 : Func0<std_string_String, string>) : Func0<std_string_String, string> =
    v0
and closure332 (v0 : Func0<std_string_String, string>) (v1 : std_string_String) : string =
    let v2 : Func0<std_string_String, string> = method278(v0)
    let func1_move_x = v1 //
    let v3 : _ = func1_move_x
    let v4 : string = "(move |x| v2(x))($0)"
    let v5 : string = Fable.Core.RustInterop.emitRustExpr v3 v4 
    v5
and method279 () : string =
    let v0 : string = "\n"
    v0
and closure333 () () : string =
    let v0 : string = "[max-height:20vh]"
    v0
and closure331 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) () : leptos_dom_Fragment =
    let v12 : string = "$0.to_vec()"
    let v13 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v11 v12 
    let v14 : unit = ()
    let v15 : string = $"true; let _func1_from_v14 = Func1::from(move |value| {{ //"
    let v16 : bool = Fable.Core.RustInterop.emitRustExpr () v15 
    let v17 : string = $"value"
    let v18 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v17 
    let v19 : string = "fable_library_rust::String_::fromString($0)"
    let v20 : string = Fable.Core.RustInterop.emitRustExpr v18 v19 
    let func1_from_result = v20 //
    let v21 : _ = func1_from_result
    let v22 : string = $"true; $0 /*"
    let v23 : bool = Fable.Core.RustInterop.emitRustExpr v21 v22 
    let v24 : string = $"*/ }}); //"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr () v24 
    let v26 : string = $"_func1_from_v14"
    let v27 : Func0<std_string_String, string> = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
    let v29 : (std_string_String -> string) = closure332(v27)
    let v30 : Vec<string> = Fable.Core.RustInterop.emitRustExpr struct (v13, v29) v28 
    let v31 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v32 : (string []) = Fable.Core.RustInterop.emitRustExpr v30 v31 
    let v34 : string seq = v32 |> Seq.ofArray
    let v38 : string = method279()
    let v39 : (string -> (string seq -> string)) = String.concat
    let v40 : (string seq -> string) = v39 v38
    let v41 : string = v40 v34
    let v45 : string = "\\n"
    let v46 : string = "\n"
    let v47 : string = v41.Replace (v45, v46)
    let v48 : string = "$0"
    let v49 : (unit -> string) = closure333()
    let v50 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v49 v48 
    let v51 : string = "class=move || \"[padding:1px] [font-size:12px] [line-height:12px] [text-wrap:pretty] \".to_owned() + &v50(())"
    let v52 : string = ""
    let v53 : string = " " + v51 + v52 + ""
    (* run_target_args'
    let v58 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v59 : string = "&*$0"
    let v60 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v47 v59 
    let _run_target_args'_v58 = v60 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v61 : string = "&*$0"
    let v62 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v47 v61 
    let _run_target_args'_v58 = v62 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v63 : string = "&*$0"
    let v64 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v47 v63 
    let _run_target_args'_v58 = v64 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v66 : Ref<Str> = v47 |> unbox<Ref<Str>>
    let _run_target_args'_v58 = v66 
    #endif
#if FABLE_COMPILER_PYTHON
    let v70 : Ref<Str> = v47 |> unbox<Ref<Str>>
    let _run_target_args'_v58 = v70 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v74 : Ref<Str> = v47 |> unbox<Ref<Str>>
    let _run_target_args'_v58 = v74 
    #endif
#else
    let v78 : Ref<Str> = v47 |> unbox<Ref<Str>>
    let _run_target_args'_v58 = v78 
    #endif
    let v81 : Ref<Str> = _run_target_args'_v58 
    (* run_target_args'
    let v91 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v92 : string = "String::from($0)"
    let v93 : std_string_String = Fable.Core.RustInterop.emitRustExpr v81 v92 
    let _run_target_args'_v91 = v93 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v94 : string = "String::from($0)"
    let v95 : std_string_String = Fable.Core.RustInterop.emitRustExpr v81 v94 
    let _run_target_args'_v91 = v95 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v96 : string = "String::from($0)"
    let v97 : std_string_String = Fable.Core.RustInterop.emitRustExpr v81 v96 
    let _run_target_args'_v91 = v97 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v99 : std_string_String = v81 |> unbox<std_string_String>
    let _run_target_args'_v91 = v99 
    #endif
#if FABLE_COMPILER_PYTHON
    let v103 : std_string_String = v81 |> unbox<std_string_String>
    let _run_target_args'_v91 = v103 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v107 : std_string_String = v81 |> unbox<std_string_String>
    let _run_target_args'_v91 = v107 
    #endif
#else
    let v111 : std_string_String = v81 |> unbox<std_string_String>
    let _run_target_args'_v91 = v111 
    #endif
    let v114 : std_string_String = _run_target_args'_v91 
    let v120 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v121 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v114 v120 
    let v122 : string = "v121"
    let v123 : string = v122 + v52 
    let v124 : string = v123 + v52 
    let v125 : string = "vec![" + v124 + "]"
    let v126 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v125 
    let v127 : string = "leptos::prelude::Fragment::new($0)"
    let v128 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v126 v127 
    let v129 : string = "leptos::prelude::AnyView::from($0)"
    let v130 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v128 v129 
    let v131 : string = "pre"
    let v132 : string = "<" + v131 + " " + v53 + ">move || { v130 }</" + v131 + ">"
    let v133 : string = "leptos::prelude::view! { " + v132 + " }"
    let v134 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v133 
    let v135 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v134 |> unbox
    let v136 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v137 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v135 v136 
    let v138 : string = "v137"
    let v139 : string = v138 + v52 
    let v140 : string = v139 + v52 
    let v141 : string = "vec![" + v140 + "]"
    let v142 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v141 
    let v143 : string = "leptos::prelude::Fragment::new($0)"
    let v144 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v142 v143 
    v144
and method277 (v0 : std_string_String, v1 : std_string_String, v2 : std_string_String, v3 : std_string_String, v4 : std_string_String, v5 : std_string_String, v6 : uint32, v7 : (struct (std_string_String * std_string_String option) []), v8 : float, v9 : bool, v10 : float, v11 : (std_string_String [])) : (unit -> leptos_dom_Fragment) =
    closure331(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11)
and closure334 () () : string =
    let v0 : string = "items-center py-[4px]"
    v0
and closure335 () () : string =
    let v0 : string = ""
    v0
and closure336 () () : string =
    let v0 : string = "[max-height:20vh] [width:100vw] [max-width:100vw]"
    v0
and method281 (v0 : (std_string_String []), v1 : int32) : bool =
    let v2 : int32 = v0.Length
    let v3 : bool = v1 < v2
    if v3 then
        let v4 : std_string_String = v0.[int v1]
        let v5 : string = "fable_library_rust::String_::fromString($0)"
        let v6 : string = Fable.Core.RustInterop.emitRustExpr v4 v5 
        let v7 : int32 = v6.Length
        let v8 : bool = v7 > 0
        if v8 then
            true
        else
            let v9 : int32 = v1 + 1
            method281(v0, v9)
    else
        false
and method280 (v0 : (struct (string * unativeint * Heap5) []), v1 : int32) : bool =
    let v2 : int32 = v0.Length
    let v3 : bool = v1 < v2
    if v3 then
        let struct (v4 : string, v5 : unativeint, v6 : Heap5) = v0.[int v1]
        let v7 : (std_string_String []) = v6.l11
        let v8 : int32 = 0
        let v9 : bool = method281(v7, v8)
        if v9 then
            true
        else
            let v10 : int32 = v1 + 1
            method280(v0, v10)
    else
        false
and closure260 (v0 : Heap2, v1 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>, v2 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>>, v3 : leptos_prelude_ReadSignal<bool>) () : leptos_dom_Fragment =
    let v4 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v144 : leptos_prelude_AnyView_ =
        if v5 then
            let v6 : string = "class=\"px-[12px] py-[10px]\""
            let v7 : string = ""
            let v8 : string = " " + v6 + v7 + ""
            let v9 : string = "class=\"flex items-center pb-[6px]\""
            let v10 : string = " " + v9 + v7 + ""
            let v11 : string = "class=\"pr-[15px] [font-size:13px]\""
            let v12 : string = " " + v11 + v7 + ""
            let v13 : string = "Func0::new(move || $0())"
            let v14 : (unit -> leptos_dom_Fragment) = closure261()
            let v15 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v14 v13 
            let v16 : Func0<leptos_dom_Fragment> = method195(v15)
            let v17 : string = "(move || v16())()"
            let v18 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v17 
            let v19 : string = "leptos::prelude::AnyView::from($0)"
            let v20 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v18 v19 
            let v21 : string = "span"
            let v22 : string = "<" + v21 + " " + v12 + ">move || { v20 }</" + v21 + ">"
            let v23 : string = "leptos::prelude::view! { " + v22 + " }"
            let v24 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v23 
            let v25 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v24 |> unbox
            let v26 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v27 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v25 v26 
            let v28 : string = "class=\"h-px flex-1 bg-gray-300\""
            let v29 : string = " " + v28 + v7 + ""
            let v30 : string = "vec![" + v7 + "]"
            let v31 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v30 
            let v32 : string = "leptos::prelude::Fragment::new($0)"
            let v33 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v31 v32 
            let v34 : string = "leptos::prelude::AnyView::from($0)"
            let v35 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v33 v34 
            let v36 : string = "<" + v21 + " " + v29 + ">move || { v35 }</" + v21 + ">"
            let v37 : string = "leptos::prelude::view! { " + v36 + " }"
            let v38 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v37 
            let v39 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v38 |> unbox
            let v40 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v41 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v39 v40 
            let v42 : string = "v41"
            let v43 : string = v42 + v7 
            let v44 : string = v43 + v7 
            let v45 : string = "v27"
            let v46 : string = ", "
            let v47 : string = v45 + v46 
            let v48 : string = v47 + v44 
            let v49 : string = "vec![" + v48 + "]"
            let v50 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v49 
            let v51 : string = "leptos::prelude::Fragment::new($0)"
            let v52 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v50 v51 
            let v53 : string = "leptos::prelude::AnyView::from($0)"
            let v54 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v52 v53 
            let v55 : string = "<" + v21 + " " + v10 + ">move || { v54 }</" + v21 + ">"
            let v56 : string = "leptos::prelude::view! { " + v55 + " }"
            let v57 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v56 
            let v58 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v57 |> unbox
            let v59 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v60 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v58 v59 
            let v61 : (unit -> leptos_dom_Fragment) = method244()
            let v62 : (unit -> leptos_dom_Fragment) = method245(v0)
            let v63 : string = "$0"
            let v64 : (unit -> string) = closure268()
            let v65 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v64 v63 
            let v66 : string = "$0"
            let v67 : (unit -> string) = closure234()
            let v68 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v67 v66 
            let v69 : string = "$0"
            let v70 : (unit -> string) = closure235()
            let v71 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v70 v69 
            let v72 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v71(()) + \" \" + &v68(()) + \" \" + &v65(())"
            let v73 : string = " " + v72 + v7 + ""
            let v74 : string = "$0"
            let v75 : (unit -> string) = closure236()
            let v76 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v75 v74 
            let v77 : string = "class=\"[font-size:12px] text-gray-400\""
            let v78 : string = " " + v77 + v7 + ""
            let v79 : leptos_dom_Fragment = v61 ()
            let v80 : string = "leptos::prelude::AnyView::from($0)"
            let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v79 v80 
            let v82 : string = "dt"
            let v83 : string = "<" + v82 + " " + v78 + ">move || { v81 }</" + v82 + ">"
            let v84 : string = "leptos::prelude::view! { " + v83 + " }"
            let v85 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v84 
            let v86 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v85 |> unbox
            let v87 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v88 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v86 v87 
            let v89 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v76(())"
            let v90 : string = " " + v89 + v7 + ""
            let v91 : leptos_dom_Fragment = v62 ()
            let v92 : string = "leptos::prelude::AnyView::from($0)"
            let v93 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v91 v92 
            let v94 : string = "dd"
            let v95 : string = "<" + v94 + " " + v90 + ">move || { v93 }</" + v94 + ">"
            let v96 : string = "leptos::prelude::view! { " + v95 + " }"
            let v97 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v96 
            let v98 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v97 |> unbox
            let v99 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v100 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v98 v99 
            let v101 : string = "v100"
            let v102 : string = v101 + v7 
            let v103 : string = v102 + v7 
            let v104 : string = "v88"
            let v105 : string = v104 + v46 
            let v106 : string = v105 + v103 
            let v107 : string = "vec![" + v106 + "]"
            let v108 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v107 
            let v109 : string = "leptos::prelude::Fragment::new($0)"
            let v110 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v108 v109 
            let v111 : string = "leptos::prelude::AnyView::from($0)"
            let v112 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v110 v111 
            let v113 : string = "dl"
            let v114 : string = "<" + v113 + " " + v73 + ">move || { v112 }</" + v113 + ">"
            let v115 : string = "leptos::prelude::view! { " + v114 + " }"
            let v116 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v115 
            let v117 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v116 |> unbox
            let v118 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v119 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v117 v118 
            let v120 : string = "v119"
            let v121 : string = v120 + v7 
            let v122 : string = v121 + v7 
            let v123 : string = "v60"
            let v124 : string = v123 + v46 
            let v125 : string = v124 + v122 
            let v126 : string = "vec![" + v125 + "]"
            let v127 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v126 
            let v128 : string = "leptos::prelude::Fragment::new($0)"
            let v129 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v127 v128 
            let v130 : string = "leptos::prelude::AnyView::from($0)"
            let v131 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v129 v130 
            let v132 : string = "div"
            let v133 : string = "<" + v132 + " " + v8 + ">move || { v131 }</" + v132 + ">"
            let v134 : string = "leptos::prelude::view! { " + v133 + " }"
            let v135 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v134 
            let v136 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v135 |> unbox
            let v137 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v138 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v136 v137 
            v138
        else
            let v139 : string = ""
            let v140 : string = "vec![" + v139 + "]"
            let v141 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v140 
            let v142 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v143 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v141 v142 
            v143
    let v145 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v146 : Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)> = Fable.Core.RustInterop.emitRustExpr v2 v145 
    let v147 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
    let v148 : (struct (string * Vec<struct (string * US23 * string * bool * bool)>) []) = Fable.Core.RustInterop.emitRustExpr v146 v147 
    let v149 : uint64 = System.Convert.ToUInt64 v148.Length
    let v150 : bool = v149 = 0UL
    let v4581 : leptos_prelude_AnyView_ =
        if v150 then
            let v151 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
            let v152 : string = ""
            let v153 : string = " " + v151 + v152 + ""
            let v154 : string = "class=\"[height:17px]\""
            let v155 : string = " " + v154 + v152 + ""
            let v156 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v157 : string = "fill=\"none\""
            let v158 : string = "height=\"100%\""
            let v159 : string = "viewBox=\"0 0 24 24\""
            let v160 : string = "stroke-width=\"1.5\""
            let v161 : string = "stroke=\"currentColor\""
            let v162 : string = "class=\"text-red-700\""
            let v163 : string = " " + v156 + v152 + ""
            let v164 : string = " " + v157 + v163 + ""
            let v165 : string = " " + v158 + v164 + ""
            let v166 : string = " " + v159 + v165 + ""
            let v167 : string = " " + v160 + v166 + ""
            let v168 : string = " " + v161 + v167 + ""
            let v169 : string = " " + v162 + v168 + ""
            let v170 : string = "stroke-linecap=\"round\""
            let v171 : string = "stroke-linejoin=\"round\""
            let v172 : string = "d=\"M6 18L18 6M6 6l12 12\""
            let v173 : string = " " + v170 + v152 + ""
            let v174 : string = " " + v171 + v173 + ""
            let v175 : string = " " + v172 + v174 + ""
            let v176 : string = "vec![" + v152 + "]"
            let v177 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v176 
            let v178 : string = "leptos::prelude::Fragment::new($0)"
            let v179 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v177 v178 
            let v180 : string = "leptos::prelude::AnyView::from($0)"
            let v181 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v179 v180 
            let v182 : string = "path"
            let v183 : string = "<" + v182 + " " + v175 + ">move || { v181 }</" + v182 + ">"
            let v184 : string = "leptos::prelude::view! { " + v183 + " }"
            let v185 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v184 
            let v186 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v185 |> unbox
            let v187 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v188 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v186 v187 
            let v189 : string = "v188"
            let v190 : string = v189 + v152 
            let v191 : string = v190 + v152 
            let v192 : string = "vec![" + v191 + "]"
            let v193 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v192 
            let v194 : string = "leptos::prelude::Fragment::new($0)"
            let v195 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v193 v194 
            let v196 : string = "leptos::prelude::AnyView::from($0)"
            let v197 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v195 v196 
            let v198 : string = "svg"
            let v199 : string = "<" + v198 + " " + v169 + ">move || { v197 }</" + v198 + ">"
            let v200 : string = "leptos::prelude::view! { " + v199 + " }"
            let v201 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v200 
            let v202 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v201 |> unbox
            let v203 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v204 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v202 v203 
            let v205 : string = "v204"
            let v206 : string = v205 + v152 
            let v207 : string = v206 + v152 
            let v208 : string = "vec![" + v207 + "]"
            let v209 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v208 
            let v210 : string = "leptos::prelude::Fragment::new($0)"
            let v211 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v209 v210 
            let v212 : string = "leptos::prelude::AnyView::from($0)"
            let v213 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v211 v212 
            let v214 : string = "span"
            let v215 : string = "<" + v214 + " " + v155 + ">move || { v213 }</" + v214 + ">"
            let v216 : string = "leptos::prelude::view! { " + v215 + " }"
            let v217 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v216 
            let v218 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v217 |> unbox
            let v219 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v220 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v218 v219 
            let v221 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
            let v222 : string = " " + v221 + v152 + ""
            let v223 : string = "No account selected"
            (* run_target_args'
            let v228 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v229 : string = "&*$0"
            let v230 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v223 v229 
            let _run_target_args'_v228 = v230 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v231 : string = "&*$0"
            let v232 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v223 v231 
            let _run_target_args'_v228 = v232 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v233 : string = "&*$0"
            let v234 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v223 v233 
            let _run_target_args'_v228 = v234 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v236 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v236 
            #endif
#if FABLE_COMPILER_PYTHON
            let v240 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v240 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v244 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v244 
            #endif
#else
            let v248 : Ref<Str> = v223 |> unbox<Ref<Str>>
            let _run_target_args'_v228 = v248 
            #endif
            let v251 : Ref<Str> = _run_target_args'_v228 
            (* run_target_args'
            let v261 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v262 : string = "String::from($0)"
            let v263 : std_string_String = Fable.Core.RustInterop.emitRustExpr v251 v262 
            let _run_target_args'_v261 = v263 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v264 : string = "String::from($0)"
            let v265 : std_string_String = Fable.Core.RustInterop.emitRustExpr v251 v264 
            let _run_target_args'_v261 = v265 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v266 : string = "String::from($0)"
            let v267 : std_string_String = Fable.Core.RustInterop.emitRustExpr v251 v266 
            let _run_target_args'_v261 = v267 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v269 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v261 = v269 
            #endif
#if FABLE_COMPILER_PYTHON
            let v273 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v261 = v273 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v277 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v261 = v277 
            #endif
#else
            let v281 : std_string_String = v251 |> unbox<std_string_String>
            let _run_target_args'_v261 = v281 
            #endif
            let v284 : std_string_String = _run_target_args'_v261 
            let v290 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v291 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v284 v290 
            let v292 : string = "v291"
            let v293 : string = v292 + v152 
            let v294 : string = v293 + v152 
            let v295 : string = "vec![" + v294 + "]"
            let v296 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v295 
            let v297 : string = "leptos::prelude::Fragment::new($0)"
            let v298 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v296 v297 
            let v299 : string = "leptos::prelude::AnyView::from($0)"
            let v300 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v298 v299 
            let v301 : string = "pre"
            let v302 : string = "<" + v301 + " " + v222 + ">move || { v300 }</" + v301 + ">"
            let v303 : string = "leptos::prelude::view! { " + v302 + " }"
            let v304 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v303 
            let v305 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v304 |> unbox
            let v306 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v307 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v305 v306 
            let v308 : string = "v307"
            let v309 : string = v308 + v152 
            let v310 : string = v309 + v152 
            let v311 : string = "v220"
            let v312 : string = ", "
            let v313 : string = v311 + v312 
            let v314 : string = v313 + v310 
            let v315 : string = "vec![" + v314 + "]"
            let v316 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v315 
            let v317 : string = "leptos::prelude::Fragment::new($0)"
            let v318 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v316 v317 
            let v319 : string = "leptos::prelude::AnyView::from($0)"
            let v320 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v318 v319 
            let v321 : string = "div"
            let v322 : string = "<" + v321 + " " + v153 + ">move || { v320 }</" + v321 + ">"
            let v323 : string = "leptos::prelude::view! { " + v322 + " }"
            let v324 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v323 
            let v325 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v324 |> unbox
            let v326 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v327 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v325 v326 
            v327
        else
            let v328 : string = $"leptos::prelude::ArcMemo::get(&$0)"
            let v329 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v1 v328 
            let v330 : ((struct (string * unativeint * Heap5) []) option -> US53) = method138()
            let v331 : (std_string_String -> US53) = method139()
            let v332 : US53 = match v329 with Ok x -> v330 x | Error x -> v331 x
            let v358 : US46 =
                match v332 with
                | US53_1(v355) -> (* Error *)
                    US46_1(v355)
                | US53_0(v333) -> (* Ok *)
                    let v335 : ((struct (string * unativeint * Heap5) []) -> US47) = method140()
                    let v336 : US47 option = v333 |> Option.map v335 
                    let v349 : US47 = US47_1
                    let v350 : US47 = v336 |> Option.defaultValue v349 
                    US46_0(v350)
            match v358 with
            | US46_1(v4400) -> (* Error *)
                let v4401 : string = "fable_library_rust::String_::fromString($0)"
                let v4402 : string = Fable.Core.RustInterop.emitRustExpr v4400 v4401 
                let v4403 : string = "class=\"flex flex-1 items-center [gap:4px] [padding:5px]\""
                let v4404 : string = ""
                let v4405 : string = " " + v4403 + v4404 + ""
                let v4406 : string = "class=\"[height:17px]\""
                let v4407 : string = " " + v4406 + v4404 + ""
                let v4408 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                let v4409 : string = "fill=\"none\""
                let v4410 : string = "height=\"100%\""
                let v4411 : string = "viewBox=\"0 0 24 24\""
                let v4412 : string = "stroke-width=\"1.5\""
                let v4413 : string = "stroke=\"currentColor\""
                let v4414 : string = "class=\"text-red-700\""
                let v4415 : string = " " + v4408 + v4404 + ""
                let v4416 : string = " " + v4409 + v4415 + ""
                let v4417 : string = " " + v4410 + v4416 + ""
                let v4418 : string = " " + v4411 + v4417 + ""
                let v4419 : string = " " + v4412 + v4418 + ""
                let v4420 : string = " " + v4413 + v4419 + ""
                let v4421 : string = " " + v4414 + v4420 + ""
                let v4422 : string = "stroke-linecap=\"round\""
                let v4423 : string = "stroke-linejoin=\"round\""
                let v4424 : string = "d=\"M6 18L18 6M6 6l12 12\""
                let v4425 : string = " " + v4422 + v4404 + ""
                let v4426 : string = " " + v4423 + v4425 + ""
                let v4427 : string = " " + v4424 + v4426 + ""
                let v4428 : string = "vec![" + v4404 + "]"
                let v4429 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4428 
                let v4430 : string = "leptos::prelude::Fragment::new($0)"
                let v4431 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4429 v4430 
                let v4432 : string = "leptos::prelude::AnyView::from($0)"
                let v4433 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4431 v4432 
                let v4434 : string = "path"
                let v4435 : string = "<" + v4434 + " " + v4427 + ">move || { v4433 }</" + v4434 + ">"
                let v4436 : string = "leptos::prelude::view! { " + v4435 + " }"
                let v4437 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4436 
                let v4438 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4437 |> unbox
                let v4439 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v4440 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4438 v4439 
                let v4441 : string = "v4440"
                let v4442 : string = v4441 + v4404 
                let v4443 : string = v4442 + v4404 
                let v4444 : string = "vec![" + v4443 + "]"
                let v4445 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4444 
                let v4446 : string = "leptos::prelude::Fragment::new($0)"
                let v4447 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4445 v4446 
                let v4448 : string = "leptos::prelude::AnyView::from($0)"
                let v4449 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4447 v4448 
                let v4450 : string = "svg"
                let v4451 : string = "<" + v4450 + " " + v4421 + ">move || { v4449 }</" + v4450 + ">"
                let v4452 : string = "leptos::prelude::view! { " + v4451 + " }"
                let v4453 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4452 
                let v4454 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4453 |> unbox
                let v4455 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v4456 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4454 v4455 
                let v4457 : string = "v4456"
                let v4458 : string = v4457 + v4404 
                let v4459 : string = v4458 + v4404 
                let v4460 : string = "vec![" + v4459 + "]"
                let v4461 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4460 
                let v4462 : string = "leptos::prelude::Fragment::new($0)"
                let v4463 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4461 v4462 
                let v4464 : string = "leptos::prelude::AnyView::from($0)"
                let v4465 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4463 v4464 
                let v4466 : string = "span"
                let v4467 : string = "<" + v4466 + " " + v4407 + ">move || { v4465 }</" + v4466 + ">"
                let v4468 : string = "leptos::prelude::view! { " + v4467 + " }"
                let v4469 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4468 
                let v4470 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4469 |> unbox
                let v4471 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v4472 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4470 v4471 
                let v4473 : string = "class=\"[overflow-y:auto] [text-wrap:wrap]\""
                let v4474 : string = " " + v4473 + v4404 + ""
                (* run_target_args'
                let v4479 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v4480 : string = "&*$0"
                let v4481 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4402 v4480 
                let _run_target_args'_v4479 = v4481 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v4482 : string = "&*$0"
                let v4483 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4402 v4482 
                let _run_target_args'_v4479 = v4483 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v4484 : string = "&*$0"
                let v4485 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4402 v4484 
                let _run_target_args'_v4479 = v4485 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v4487 : Ref<Str> = v4402 |> unbox<Ref<Str>>
                let _run_target_args'_v4479 = v4487 
                #endif
#if FABLE_COMPILER_PYTHON
                let v4491 : Ref<Str> = v4402 |> unbox<Ref<Str>>
                let _run_target_args'_v4479 = v4491 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v4495 : Ref<Str> = v4402 |> unbox<Ref<Str>>
                let _run_target_args'_v4479 = v4495 
                #endif
#else
                let v4499 : Ref<Str> = v4402 |> unbox<Ref<Str>>
                let _run_target_args'_v4479 = v4499 
                #endif
                let v4502 : Ref<Str> = _run_target_args'_v4479 
                (* run_target_args'
                let v4512 : unit = ()
                run_target_args' *)
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v4513 : string = "String::from($0)"
                let v4514 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4502 v4513 
                let _run_target_args'_v4512 = v4514 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v4515 : string = "String::from($0)"
                let v4516 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4502 v4515 
                let _run_target_args'_v4512 = v4516 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v4517 : string = "String::from($0)"
                let v4518 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4502 v4517 
                let _run_target_args'_v4512 = v4518 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v4520 : std_string_String = v4502 |> unbox<std_string_String>
                let _run_target_args'_v4512 = v4520 
                #endif
#if FABLE_COMPILER_PYTHON
                let v4524 : std_string_String = v4502 |> unbox<std_string_String>
                let _run_target_args'_v4512 = v4524 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v4528 : std_string_String = v4502 |> unbox<std_string_String>
                let _run_target_args'_v4512 = v4528 
                #endif
#else
                let v4532 : std_string_String = v4502 |> unbox<std_string_String>
                let _run_target_args'_v4512 = v4532 
                #endif
                let v4535 : std_string_String = _run_target_args'_v4512 
                let v4541 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                let v4542 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4535 v4541 
                let v4543 : string = "v4542"
                let v4544 : string = v4543 + v4404 
                let v4545 : string = v4544 + v4404 
                let v4546 : string = "vec![" + v4545 + "]"
                let v4547 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4546 
                let v4548 : string = "leptos::prelude::Fragment::new($0)"
                let v4549 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4547 v4548 
                let v4550 : string = "leptos::prelude::AnyView::from($0)"
                let v4551 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4549 v4550 
                let v4552 : string = "pre"
                let v4553 : string = "<" + v4552 + " " + v4474 + ">move || { v4551 }</" + v4552 + ">"
                let v4554 : string = "leptos::prelude::view! { " + v4553 + " }"
                let v4555 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4554 
                let v4556 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v4555 |> unbox
                let v4557 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v4558 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4556 v4557 
                let v4559 : string = "v4558"
                let v4560 : string = v4559 + v4404 
                let v4561 : string = v4560 + v4404 
                let v4562 : string = "v4472"
                let v4563 : string = ", "
                let v4564 : string = v4562 + v4563 
                let v4565 : string = v4564 + v4561 
                let v4566 : string = "vec![" + v4565 + "]"
                let v4567 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4566 
                let v4568 : string = "leptos::prelude::Fragment::new($0)"
                let v4569 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4567 v4568 
                let v4570 : string = "leptos::prelude::AnyView::from($0)"
                let v4571 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4569 v4570 
                let v4572 : string = "div"
                let v4573 : string = "<" + v4572 + " " + v4405 + ">move || { v4571 }</" + v4572 + ">"
                let v4574 : string = "leptos::prelude::view! { " + v4573 + " }"
                let v4575 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4574 
                let v4576 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4575 |> unbox
                let v4577 : string = "leptos::prelude::IntoAny::into_any($0)"
                let v4578 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4576 v4577 
                v4578
            | US46_0(v359) -> (* Ok *)
                match v359 with
                | US47_0(v360) -> (* Some *)
                    let v361 : leptos_prelude_ArcRwSignal<Heap1> = v0.l0
                    let v362 : string = "Box::pin($0)"
                    let v363 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v361 v362 
                    let v364 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                    let v365 : Heap1 = Fable.Core.RustInterop.emitRustExpr v363 v364 
                    let v366 : leptos_prelude_ArcRwSignal<Heap0> = v365.l3
                    let v367 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
                    let v368 : Heap0 = Fable.Core.RustInterop.emitRustExpr v366 v367 
                    let v369 : US1 = v368.l4
                    let v370 : bool =
                        match v369 with
                        | US1_0 -> (* Details *)
                            true
                        | _ ->
                            false
                    if v370 then
                        let v371 : string = "class=\"grid flex-1 py-[10px] px-[12px] [gap:15px] sm:[grid-template-columns:repeat(auto-fill,minmax(500px,1fr))]\""
                        let v372 : string = ""
                        let v373 : string = " " + v371 + v372 + ""
                        let v374 : string = "$0.to_vec()"
                        let v375 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr v360 v374 
                        let v376 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                        let v377 : bool = Fable.Core.RustInterop.emitRustExpr v375 v376 
                        let v378 : string = "x"
                        let struct (v379 : string, v380 : unativeint, v381 : Heap5) = Fable.Core.RustInterop.emitRustExpr () v378 
                        let v382 : std_string_String = v381.l0
                        let v383 : std_string_String = v381.l1
                        let v384 : std_string_String = v381.l2
                        let v385 : std_string_String = v381.l3
                        let v386 : std_string_String = v381.l4
                        let v387 : std_string_String = v381.l5
                        let v388 : uint32 = v381.l6
                        let v389 : (struct (std_string_String * std_string_String option) []) = v381.l7
                        let v390 : float = v381.l8
                        let v391 : bool = v381.l9
                        let v392 : float = v381.l10
                        let v393 : (std_string_String []) = v381.l11
                        let v395 : (unativeint -> int64) = int64
                        let v396 : int64 = v395 v380
                        let v399 : string = "transaction.render (1)"
                        let v400 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v401 : bool = Fable.Core.RustInterop.emitRustExpr v399 v400 
                        let v402 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
                        let v403 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v402 
                        let v404 : string = "$0.unwrap()"
                        let v405 : Heap2 = Fable.Core.RustInterop.emitRustExpr v403 v404 
                        let v406 : string = "class=\"flex flex-1 flex-col overflow-x-auto\""
                        let v407 : string = " " + v406 + v372 + ""
                        let v408 : string = "class=\"flex items-center pb-[6px]\""
                        let v409 : string = " " + v408 + v372 + ""
                        let v410 : string = "class=\"pr-[15px] [font-size:13px]\""
                        let v411 : string = " " + v410 + v372 + ""
                        let v412 : string = "Func0::new(move || $0())"
                        let v413 : (unit -> leptos_dom_Fragment) = closure269(v396)
                        let v414 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v413 v412 
                        let v415 : Func0<leptos_dom_Fragment> = method195(v414)
                        let v416 : string = "(move || v415())()"
                        let v417 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v416 
                        let v418 : string = "leptos::prelude::AnyView::from($0)"
                        let v419 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v417 v418 
                        let v420 : string = "span"
                        let v421 : string = "<" + v420 + " " + v411 + ">move || { v419 }</" + v420 + ">"
                        let v422 : string = "leptos::prelude::view! { " + v421 + " }"
                        let v423 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v422 
                        let v424 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v423 |> unbox
                        let v425 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v426 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v424 v425 
                        let v427 : string = "class=\"h-px flex-1 bg-gray-300\""
                        let v428 : string = " " + v427 + v372 + ""
                        let v429 : string = "vec![" + v372 + "]"
                        let v430 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v429 
                        let v431 : string = "leptos::prelude::Fragment::new($0)"
                        let v432 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v430 v431 
                        let v433 : string = "leptos::prelude::AnyView::from($0)"
                        let v434 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v432 v433 
                        let v435 : string = "<" + v420 + " " + v428 + ">move || { v434 }</" + v420 + ">"
                        let v436 : string = "leptos::prelude::view! { " + v435 + " }"
                        let v437 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v436 
                        let v438 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v437 |> unbox
                        let v439 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v440 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v438 v439 
                        let v441 : string = "v440"
                        let v442 : string = v441 + v372 
                        let v443 : string = v442 + v372 
                        let v444 : string = "v426"
                        let v445 : string = ", "
                        let v446 : string = v444 + v445 
                        let v447 : string = v446 + v443 
                        let v448 : string = "vec![" + v447 + "]"
                        let v449 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v448 
                        let v450 : string = "leptos::prelude::Fragment::new($0)"
                        let v451 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v449 v450 
                        let v452 : string = "leptos::prelude::AnyView::from($0)"
                        let v453 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v451 v452 
                        let v454 : string = "<" + v420 + " " + v409 + ">move || { v453 }</" + v420 + ">"
                        let v455 : string = "leptos::prelude::view! { " + v454 + " }"
                        let v456 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v455 
                        let v457 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v456 |> unbox
                        let v458 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v459 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v457 v458 
                        let v460 : string = "class=\"grid flex-1 divide-y-[1px] divide-gray-500/[.10]\""
                        let v461 : string = " " + v460 + v372 + ""
                        let v462 : (unit -> leptos_dom_Fragment) = method248()
                        let v463 : (unit -> leptos_dom_Fragment) = method249(v379)
                        let v464 : string = "$0"
                        let v465 : (unit -> string) = closure272()
                        let v466 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v465 v464 
                        let v467 : string = "$0"
                        let v468 : (unit -> string) = closure273()
                        let v469 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v468 v467 
                        let v470 : string = "$0"
                        let v471 : (unit -> string) = closure235()
                        let v472 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v471 v470 
                        let v473 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v472(()) + \" \" + &v469(()) + \" \" + &v466(())"
                        let v474 : string = " " + v473 + v372 + ""
                        let v475 : string = "$0"
                        let v476 : (unit -> string) = closure236()
                        let v477 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v475 
                        let v478 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v479 : string = " " + v478 + v372 + ""
                        let v480 : leptos_dom_Fragment = v462 ()
                        let v481 : string = "leptos::prelude::AnyView::from($0)"
                        let v482 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v480 v481 
                        let v483 : string = "dt"
                        let v484 : string = "<" + v483 + " " + v479 + ">move || { v482 }</" + v483 + ">"
                        let v485 : string = "leptos::prelude::view! { " + v484 + " }"
                        let v486 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v485 
                        let v487 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v486 |> unbox
                        let v488 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v489 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v487 v488 
                        let v490 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v477(())"
                        let v491 : string = " " + v490 + v372 + ""
                        let v492 : leptos_dom_Fragment = v463 ()
                        let v493 : string = "leptos::prelude::AnyView::from($0)"
                        let v494 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v492 v493 
                        let v495 : string = "dd"
                        let v496 : string = "<" + v495 + " " + v491 + ">move || { v494 }</" + v495 + ">"
                        let v497 : string = "leptos::prelude::view! { " + v496 + " }"
                        let v498 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v497 
                        let v499 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v498 |> unbox
                        let v500 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v501 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v499 v500 
                        let v502 : string = "v501"
                        let v503 : string = v502 + v372 
                        let v504 : string = v503 + v372 
                        let v505 : string = "v489"
                        let v506 : string = v505 + v445 
                        let v507 : string = v506 + v504 
                        let v508 : string = "vec![" + v507 + "]"
                        let v509 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v508 
                        let v510 : string = "leptos::prelude::Fragment::new($0)"
                        let v511 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v509 v510 
                        let v512 : string = "leptos::prelude::AnyView::from($0)"
                        let v513 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v511 v512 
                        let v514 : string = "dl"
                        let v515 : string = "<" + v514 + " " + v474 + ">move || { v513 }</" + v514 + ">"
                        let v516 : string = "leptos::prelude::view! { " + v515 + " }"
                        let v517 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v516 
                        let v518 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v517 |> unbox
                        let v519 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v520 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v518 v519 
                        let v521 : (unit -> leptos_dom_Fragment) = method250()
                        let v522 : (unit -> leptos_dom_Fragment) = method251(v382, v383, v384, v385, v386, v387, v388, v389, v390, v391, v392, v393)
                        let v523 : string = "$0"
                        let v524 : (unit -> string) = closure276()
                        let v525 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v524 v523 
                        let v526 : string = "$0"
                        let v527 : (unit -> string) = closure277()
                        let v528 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v527 v526 
                        let v529 : string = "$0"
                        let v530 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v471 v529 
                        let v531 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v530(()) + \" \" + &v528(()) + \" \" + &v525(())"
                        let v532 : string = " " + v531 + v372 + ""
                        let v533 : string = "$0"
                        let v534 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v533 
                        let v535 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v536 : string = " " + v535 + v372 + ""
                        let v537 : leptos_dom_Fragment = v521 ()
                        let v538 : string = "leptos::prelude::AnyView::from($0)"
                        let v539 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v537 v538 
                        let v540 : string = "<" + v483 + " " + v536 + ">move || { v539 }</" + v483 + ">"
                        let v541 : string = "leptos::prelude::view! { " + v540 + " }"
                        let v542 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v541 
                        let v543 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v542 |> unbox
                        let v544 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v545 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v543 v544 
                        let v546 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v534(())"
                        let v547 : string = " " + v546 + v372 + ""
                        let v548 : leptos_dom_Fragment = v522 ()
                        let v549 : string = "leptos::prelude::AnyView::from($0)"
                        let v550 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v548 v549 
                        let v551 : string = "<" + v495 + " " + v547 + ">move || { v550 }</" + v495 + ">"
                        let v552 : string = "leptos::prelude::view! { " + v551 + " }"
                        let v553 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v552 
                        let v554 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v553 |> unbox
                        let v555 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v556 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v554 v555 
                        let v557 : string = "v556"
                        let v558 : string = v557 + v372 
                        let v559 : string = v558 + v372 
                        let v560 : string = "v545"
                        let v561 : string = v560 + v445 
                        let v562 : string = v561 + v559 
                        let v563 : string = "vec![" + v562 + "]"
                        let v564 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v563 
                        let v565 : string = "leptos::prelude::Fragment::new($0)"
                        let v566 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v564 v565 
                        let v567 : string = "leptos::prelude::AnyView::from($0)"
                        let v568 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v566 v567 
                        let v569 : string = "<" + v514 + " " + v532 + ">move || { v568 }</" + v514 + ">"
                        let v570 : string = "leptos::prelude::view! { " + v569 + " }"
                        let v571 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v570 
                        let v572 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v571 |> unbox
                        let v573 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v574 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v572 v573 
                        let v575 : (unit -> leptos_dom_Fragment) = method252()
                        let v576 : (unit -> leptos_dom_Fragment) = method253(v382, v383, v384, v385, v386, v387, v388, v389, v390, v391, v392, v393)
                        let v577 : string = "$0"
                        let v578 : (unit -> string) = closure280()
                        let v579 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v578 v577 
                        let v580 : string = "$0"
                        let v581 : (unit -> string) = closure281()
                        let v582 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v581 v580 
                        let v583 : string = "$0"
                        let v584 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v471 v583 
                        let v585 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v584(()) + \" \" + &v582(()) + \" \" + &v579(())"
                        let v586 : string = " " + v585 + v372 + ""
                        let v587 : string = "$0"
                        let v588 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v587 
                        let v589 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v590 : string = " " + v589 + v372 + ""
                        let v591 : leptos_dom_Fragment = v575 ()
                        let v592 : string = "leptos::prelude::AnyView::from($0)"
                        let v593 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v591 v592 
                        let v594 : string = "<" + v483 + " " + v590 + ">move || { v593 }</" + v483 + ">"
                        let v595 : string = "leptos::prelude::view! { " + v594 + " }"
                        let v596 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v595 
                        let v597 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v596 |> unbox
                        let v598 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v599 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v597 v598 
                        let v600 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v588(())"
                        let v601 : string = " " + v600 + v372 + ""
                        let v602 : leptos_dom_Fragment = v576 ()
                        let v603 : string = "leptos::prelude::AnyView::from($0)"
                        let v604 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v602 v603 
                        let v605 : string = "<" + v495 + " " + v601 + ">move || { v604 }</" + v495 + ">"
                        let v606 : string = "leptos::prelude::view! { " + v605 + " }"
                        let v607 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v606 
                        let v608 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v607 |> unbox
                        let v609 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v610 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v608 v609 
                        let v611 : string = "v610"
                        let v612 : string = v611 + v372 
                        let v613 : string = v612 + v372 
                        let v614 : string = "v599"
                        let v615 : string = v614 + v445 
                        let v616 : string = v615 + v613 
                        let v617 : string = "vec![" + v616 + "]"
                        let v618 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v617 
                        let v619 : string = "leptos::prelude::Fragment::new($0)"
                        let v620 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v618 v619 
                        let v621 : string = "leptos::prelude::AnyView::from($0)"
                        let v622 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v620 v621 
                        let v623 : string = "<" + v514 + " " + v586 + ">move || { v622 }</" + v514 + ">"
                        let v624 : string = "leptos::prelude::view! { " + v623 + " }"
                        let v625 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v624 
                        let v626 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v625 |> unbox
                        let v627 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v628 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v626 v627 
                        let v629 : (unit -> leptos_dom_Fragment) = method254()
                        let v630 : (unit -> leptos_dom_Fragment) = method255(v382, v383, v384, v385, v386, v387, v388, v389, v390, v391, v392, v393)
                        let v631 : string = "$0"
                        let v632 : (unit -> string) = closure284()
                        let v633 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v632 v631 
                        let v634 : string = "$0"
                        let v635 : (unit -> string) = closure285()
                        let v636 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v635 v634 
                        let v637 : string = "$0"
                        let v638 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v471 v637 
                        let v639 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v638(()) + \" \" + &v636(()) + \" \" + &v633(())"
                        let v640 : string = " " + v639 + v372 + ""
                        let v641 : string = "$0"
                        let v642 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v641 
                        let v643 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v644 : string = " " + v643 + v372 + ""
                        let v645 : leptos_dom_Fragment = v629 ()
                        let v646 : string = "leptos::prelude::AnyView::from($0)"
                        let v647 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v645 v646 
                        let v648 : string = "<" + v483 + " " + v644 + ">move || { v647 }</" + v483 + ">"
                        let v649 : string = "leptos::prelude::view! { " + v648 + " }"
                        let v650 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v649 
                        let v651 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v650 |> unbox
                        let v652 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v653 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v651 v652 
                        let v654 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v642(())"
                        let v655 : string = " " + v654 + v372 + ""
                        let v656 : leptos_dom_Fragment = v630 ()
                        let v657 : string = "leptos::prelude::AnyView::from($0)"
                        let v658 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v656 v657 
                        let v659 : string = "<" + v495 + " " + v655 + ">move || { v658 }</" + v495 + ">"
                        let v660 : string = "leptos::prelude::view! { " + v659 + " }"
                        let v661 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v660 
                        let v662 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v661 |> unbox
                        let v663 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v664 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v662 v663 
                        let v665 : string = "v664"
                        let v666 : string = v665 + v372 
                        let v667 : string = v666 + v372 
                        let v668 : string = "v653"
                        let v669 : string = v668 + v445 
                        let v670 : string = v669 + v667 
                        let v671 : string = "vec![" + v670 + "]"
                        let v672 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v671 
                        let v673 : string = "leptos::prelude::Fragment::new($0)"
                        let v674 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v672 v673 
                        let v675 : string = "leptos::prelude::AnyView::from($0)"
                        let v676 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v674 v675 
                        let v677 : string = "<" + v514 + " " + v640 + ">move || { v676 }</" + v514 + ">"
                        let v678 : string = "leptos::prelude::view! { " + v677 + " }"
                        let v679 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v678 
                        let v680 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v679 |> unbox
                        let v681 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v682 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v680 v681 
                        let v683 : (unit -> leptos_dom_Fragment) = method256()
                        let v684 : (unit -> leptos_dom_Fragment) = method257(v382, v383, v384, v385, v386, v387, v388, v389, v390, v391, v392, v393)
                        let v685 : string = "$0"
                        let v686 : (unit -> string) = closure299()
                        let v687 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v686 v685 
                        let v688 : string = "$0"
                        let v689 : (unit -> string) = closure300()
                        let v690 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v689 v688 
                        let v691 : string = "$0"
                        let v692 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v471 v691 
                        let v693 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v692(()) + \" \" + &v690(()) + \" \" + &v687(())"
                        let v694 : string = " " + v693 + v372 + ""
                        let v695 : string = "$0"
                        let v696 : (unit -> string) = closure301()
                        let v697 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v696 v695 
                        let v698 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v699 : string = " " + v698 + v372 + ""
                        let v700 : leptos_dom_Fragment = v683 ()
                        let v701 : string = "leptos::prelude::AnyView::from($0)"
                        let v702 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v700 v701 
                        let v703 : string = "<" + v483 + " " + v699 + ">move || { v702 }</" + v483 + ">"
                        let v704 : string = "leptos::prelude::view! { " + v703 + " }"
                        let v705 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v704 
                        let v706 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v705 |> unbox
                        let v707 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v708 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v706 v707 
                        let v709 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v697(())"
                        let v710 : string = " " + v709 + v372 + ""
                        let v711 : leptos_dom_Fragment = v684 ()
                        let v712 : string = "leptos::prelude::AnyView::from($0)"
                        let v713 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v711 v712 
                        let v714 : string = "<" + v495 + " " + v710 + ">move || { v713 }</" + v495 + ">"
                        let v715 : string = "leptos::prelude::view! { " + v714 + " }"
                        let v716 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v715 
                        let v717 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v716 |> unbox
                        let v718 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v719 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v717 v718 
                        let v720 : string = "v719"
                        let v721 : string = v720 + v372 
                        let v722 : string = v721 + v372 
                        let v723 : string = "v708"
                        let v724 : string = v723 + v445 
                        let v725 : string = v724 + v722 
                        let v726 : string = "vec![" + v725 + "]"
                        let v727 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v726 
                        let v728 : string = "leptos::prelude::Fragment::new($0)"
                        let v729 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v727 v728 
                        let v730 : string = "leptos::prelude::AnyView::from($0)"
                        let v731 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v729 v730 
                        let v732 : string = "<" + v514 + " " + v694 + ">move || { v731 }</" + v514 + ">"
                        let v733 : string = "leptos::prelude::view! { " + v732 + " }"
                        let v734 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v733 
                        let v735 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v734 |> unbox
                        let v736 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v737 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v735 v736 
                        let v738 : (unit -> leptos_dom_Fragment) = method262()
                        let v739 : (unit -> leptos_dom_Fragment) = method263(v382, v383, v384, v385, v386, v387, v388, v389, v390, v391, v392, v393)
                        let v740 : string = "$0"
                        let v741 : (unit -> string) = closure304()
                        let v742 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v741 v740 
                        let v743 : string = "$0"
                        let v744 : (unit -> string) = closure305()
                        let v745 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v744 v743 
                        let v746 : string = "$0"
                        let v747 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v471 v746 
                        let v748 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v747(()) + \" \" + &v745(()) + \" \" + &v742(())"
                        let v749 : string = " " + v748 + v372 + ""
                        let v750 : string = "$0"
                        let v751 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v750 
                        let v752 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v753 : string = " " + v752 + v372 + ""
                        let v754 : leptos_dom_Fragment = v738 ()
                        let v755 : string = "leptos::prelude::AnyView::from($0)"
                        let v756 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v754 v755 
                        let v757 : string = "<" + v483 + " " + v753 + ">move || { v756 }</" + v483 + ">"
                        let v758 : string = "leptos::prelude::view! { " + v757 + " }"
                        let v759 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v758 
                        let v760 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v759 |> unbox
                        let v761 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v762 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v760 v761 
                        let v763 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v751(())"
                        let v764 : string = " " + v763 + v372 + ""
                        let v765 : leptos_dom_Fragment = v739 ()
                        let v766 : string = "leptos::prelude::AnyView::from($0)"
                        let v767 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v765 v766 
                        let v768 : string = "<" + v495 + " " + v764 + ">move || { v767 }</" + v495 + ">"
                        let v769 : string = "leptos::prelude::view! { " + v768 + " }"
                        let v770 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v769 
                        let v771 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v770 |> unbox
                        let v772 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v773 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v771 v772 
                        let v774 : string = "v773"
                        let v775 : string = v774 + v372 
                        let v776 : string = v775 + v372 
                        let v777 : string = "v762"
                        let v778 : string = v777 + v445 
                        let v779 : string = v778 + v776 
                        let v780 : string = "vec![" + v779 + "]"
                        let v781 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v780 
                        let v782 : string = "leptos::prelude::Fragment::new($0)"
                        let v783 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v781 v782 
                        let v784 : string = "leptos::prelude::AnyView::from($0)"
                        let v785 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v783 v784 
                        let v786 : string = "<" + v514 + " " + v749 + ">move || { v785 }</" + v514 + ">"
                        let v787 : string = "leptos::prelude::view! { " + v786 + " }"
                        let v788 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v787 
                        let v789 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v788 |> unbox
                        let v790 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v791 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v789 v790 
                        let v792 : (unit -> leptos_dom_Fragment) = method264()
                        let v793 : (unit -> leptos_dom_Fragment) = method265(v382, v383, v384, v385, v386, v387, v388, v389, v390, v391, v392, v393)
                        let v794 : string = "$0"
                        let v795 : (unit -> string) = closure308()
                        let v796 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v795 v794 
                        let v797 : string = "$0"
                        let v798 : (unit -> string) = closure309()
                        let v799 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v798 v797 
                        let v800 : string = "$0"
                        let v801 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v471 v800 
                        let v802 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v801(()) + \" \" + &v799(()) + \" \" + &v796(())"
                        let v803 : string = " " + v802 + v372 + ""
                        let v804 : string = "$0"
                        let v805 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v804 
                        let v806 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v807 : string = " " + v806 + v372 + ""
                        let v808 : leptos_dom_Fragment = v792 ()
                        let v809 : string = "leptos::prelude::AnyView::from($0)"
                        let v810 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v808 v809 
                        let v811 : string = "<" + v483 + " " + v807 + ">move || { v810 }</" + v483 + ">"
                        let v812 : string = "leptos::prelude::view! { " + v811 + " }"
                        let v813 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v812 
                        let v814 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v813 |> unbox
                        let v815 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v816 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v814 v815 
                        let v817 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v805(())"
                        let v818 : string = " " + v817 + v372 + ""
                        let v819 : leptos_dom_Fragment = v793 ()
                        let v820 : string = "leptos::prelude::AnyView::from($0)"
                        let v821 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v819 v820 
                        let v822 : string = "<" + v495 + " " + v818 + ">move || { v821 }</" + v495 + ">"
                        let v823 : string = "leptos::prelude::view! { " + v822 + " }"
                        let v824 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v823 
                        let v825 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v824 |> unbox
                        let v826 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v827 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v825 v826 
                        let v828 : string = "v827"
                        let v829 : string = v828 + v372 
                        let v830 : string = v829 + v372 
                        let v831 : string = "v816"
                        let v832 : string = v831 + v445 
                        let v833 : string = v832 + v830 
                        let v834 : string = "vec![" + v833 + "]"
                        let v835 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v834 
                        let v836 : string = "leptos::prelude::Fragment::new($0)"
                        let v837 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v835 v836 
                        let v838 : string = "leptos::prelude::AnyView::from($0)"
                        let v839 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v837 v838 
                        let v840 : string = "<" + v514 + " " + v803 + ">move || { v839 }</" + v514 + ">"
                        let v841 : string = "leptos::prelude::view! { " + v840 + " }"
                        let v842 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v841 
                        let v843 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v842 |> unbox
                        let v844 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v845 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v843 v844 
                        let v846 : (unit -> leptos_dom_Fragment) = method266()
                        let v847 : (unit -> leptos_dom_Fragment) = method267(v382, v383, v384, v385, v386, v387, v388, v389, v390, v391, v392, v393)
                        let v848 : string = "$0"
                        let v849 : (unit -> string) = closure312()
                        let v850 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v849 v848 
                        let v851 : string = "$0"
                        let v852 : (unit -> string) = closure313()
                        let v853 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v852 v851 
                        let v854 : string = "$0"
                        let v855 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v471 v854 
                        let v856 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v855(()) + \" \" + &v853(()) + \" \" + &v850(())"
                        let v857 : string = " " + v856 + v372 + ""
                        let v858 : string = "$0"
                        let v859 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v858 
                        let v860 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v861 : string = " " + v860 + v372 + ""
                        let v862 : leptos_dom_Fragment = v846 ()
                        let v863 : string = "leptos::prelude::AnyView::from($0)"
                        let v864 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v862 v863 
                        let v865 : string = "<" + v483 + " " + v861 + ">move || { v864 }</" + v483 + ">"
                        let v866 : string = "leptos::prelude::view! { " + v865 + " }"
                        let v867 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v866 
                        let v868 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v867 |> unbox
                        let v869 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v870 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v868 v869 
                        let v871 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v859(())"
                        let v872 : string = " " + v871 + v372 + ""
                        let v873 : leptos_dom_Fragment = v847 ()
                        let v874 : string = "leptos::prelude::AnyView::from($0)"
                        let v875 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v873 v874 
                        let v876 : string = "<" + v495 + " " + v872 + ">move || { v875 }</" + v495 + ">"
                        let v877 : string = "leptos::prelude::view! { " + v876 + " }"
                        let v878 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v877 
                        let v879 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v878 |> unbox
                        let v880 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v881 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v879 v880 
                        let v882 : string = "v881"
                        let v883 : string = v882 + v372 
                        let v884 : string = v883 + v372 
                        let v885 : string = "v870"
                        let v886 : string = v885 + v445 
                        let v887 : string = v886 + v884 
                        let v888 : string = "vec![" + v887 + "]"
                        let v889 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v888 
                        let v890 : string = "leptos::prelude::Fragment::new($0)"
                        let v891 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v889 v890 
                        let v892 : string = "leptos::prelude::AnyView::from($0)"
                        let v893 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v891 v892 
                        let v894 : string = "<" + v514 + " " + v857 + ">move || { v893 }</" + v514 + ">"
                        let v895 : string = "leptos::prelude::view! { " + v894 + " }"
                        let v896 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v895 
                        let v897 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v896 |> unbox
                        let v898 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v899 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v897 v898 
                        let v900 : (unit -> leptos_dom_Fragment) = method268()
                        let v901 : (unit -> leptos_dom_Fragment) = method269(v382, v383, v384, v385, v386, v387, v388, v389, v390, v391, v392, v393)
                        let v902 : string = "$0"
                        let v903 : (unit -> string) = closure316()
                        let v904 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v903 v902 
                        let v905 : string = "$0"
                        let v906 : (unit -> string) = closure317()
                        let v907 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v906 v905 
                        let v908 : string = "$0"
                        let v909 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v471 v908 
                        let v910 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v909(()) + \" \" + &v907(()) + \" \" + &v904(())"
                        let v911 : string = " " + v910 + v372 + ""
                        let v912 : string = "$0"
                        let v913 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v912 
                        let v914 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v915 : string = " " + v914 + v372 + ""
                        let v916 : leptos_dom_Fragment = v900 ()
                        let v917 : string = "leptos::prelude::AnyView::from($0)"
                        let v918 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v916 v917 
                        let v919 : string = "<" + v483 + " " + v915 + ">move || { v918 }</" + v483 + ">"
                        let v920 : string = "leptos::prelude::view! { " + v919 + " }"
                        let v921 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v920 
                        let v922 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v921 |> unbox
                        let v923 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v924 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v922 v923 
                        let v925 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v913(())"
                        let v926 : string = " " + v925 + v372 + ""
                        let v927 : leptos_dom_Fragment = v901 ()
                        let v928 : string = "leptos::prelude::AnyView::from($0)"
                        let v929 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v927 v928 
                        let v930 : string = "<" + v495 + " " + v926 + ">move || { v929 }</" + v495 + ">"
                        let v931 : string = "leptos::prelude::view! { " + v930 + " }"
                        let v932 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v931 
                        let v933 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v932 |> unbox
                        let v934 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v935 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v933 v934 
                        let v936 : string = "v935"
                        let v937 : string = v936 + v372 
                        let v938 : string = v937 + v372 
                        let v939 : string = "v924"
                        let v940 : string = v939 + v445 
                        let v941 : string = v940 + v938 
                        let v942 : string = "vec![" + v941 + "]"
                        let v943 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v942 
                        let v944 : string = "leptos::prelude::Fragment::new($0)"
                        let v945 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v943 v944 
                        let v946 : string = "leptos::prelude::AnyView::from($0)"
                        let v947 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v945 v946 
                        let v948 : string = "<" + v514 + " " + v911 + ">move || { v947 }</" + v514 + ">"
                        let v949 : string = "leptos::prelude::view! { " + v948 + " }"
                        let v950 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v949 
                        let v951 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v950 |> unbox
                        let v952 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v953 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v951 v952 
                        let v954 : (unit -> leptos_dom_Fragment) = method270()
                        let v955 : (unit -> leptos_dom_Fragment) = method271(v382, v383, v384, v385, v386, v387, v388, v389, v390, v391, v392, v393)
                        let v956 : string = "$0"
                        let v957 : (unit -> string) = closure320()
                        let v958 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v957 v956 
                        let v959 : string = "$0"
                        let v960 : (unit -> string) = closure321()
                        let v961 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v960 v959 
                        let v962 : string = "$0"
                        let v963 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v471 v962 
                        let v964 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v963(()) + \" \" + &v961(()) + \" \" + &v958(())"
                        let v965 : string = " " + v964 + v372 + ""
                        let v966 : string = "$0"
                        let v967 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v966 
                        let v968 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v969 : string = " " + v968 + v372 + ""
                        let v970 : leptos_dom_Fragment = v954 ()
                        let v971 : string = "leptos::prelude::AnyView::from($0)"
                        let v972 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v970 v971 
                        let v973 : string = "<" + v483 + " " + v969 + ">move || { v972 }</" + v483 + ">"
                        let v974 : string = "leptos::prelude::view! { " + v973 + " }"
                        let v975 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v974 
                        let v976 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v975 |> unbox
                        let v977 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v978 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v976 v977 
                        let v979 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v967(())"
                        let v980 : string = " " + v979 + v372 + ""
                        let v981 : leptos_dom_Fragment = v955 ()
                        let v982 : string = "leptos::prelude::AnyView::from($0)"
                        let v983 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v981 v982 
                        let v984 : string = "<" + v495 + " " + v980 + ">move || { v983 }</" + v495 + ">"
                        let v985 : string = "leptos::prelude::view! { " + v984 + " }"
                        let v986 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v985 
                        let v987 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v986 |> unbox
                        let v988 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v989 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v987 v988 
                        let v990 : string = "v989"
                        let v991 : string = v990 + v372 
                        let v992 : string = v991 + v372 
                        let v993 : string = "v978"
                        let v994 : string = v993 + v445 
                        let v995 : string = v994 + v992 
                        let v996 : string = "vec![" + v995 + "]"
                        let v997 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v996 
                        let v998 : string = "leptos::prelude::Fragment::new($0)"
                        let v999 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v997 v998 
                        let v1000 : string = "leptos::prelude::AnyView::from($0)"
                        let v1001 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v999 v1000 
                        let v1002 : string = "<" + v514 + " " + v965 + ">move || { v1001 }</" + v514 + ">"
                        let v1003 : string = "leptos::prelude::view! { " + v1002 + " }"
                        let v1004 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1003 
                        let v1005 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v1004 |> unbox
                        let v1006 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1007 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1005 v1006 
                        let v1008 : (unit -> leptos_dom_Fragment) = method272()
                        let v1009 : (unit -> leptos_dom_Fragment) = method273(v382, v383, v384, v385, v386, v387, v388, v389, v390, v391, v392, v393)
                        let v1010 : string = "$0"
                        let v1011 : (unit -> string) = closure324()
                        let v1012 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1011 v1010 
                        let v1013 : string = "$0"
                        let v1014 : (unit -> string) = closure325()
                        let v1015 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1014 v1013 
                        let v1016 : string = "$0"
                        let v1017 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v471 v1016 
                        let v1018 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v1017(()) + \" \" + &v1015(()) + \" \" + &v1012(())"
                        let v1019 : string = " " + v1018 + v372 + ""
                        let v1020 : string = "$0"
                        let v1021 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v1020 
                        let v1022 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v1023 : string = " " + v1022 + v372 + ""
                        let v1024 : leptos_dom_Fragment = v1008 ()
                        let v1025 : string = "leptos::prelude::AnyView::from($0)"
                        let v1026 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1024 v1025 
                        let v1027 : string = "<" + v483 + " " + v1023 + ">move || { v1026 }</" + v483 + ">"
                        let v1028 : string = "leptos::prelude::view! { " + v1027 + " }"
                        let v1029 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1028 
                        let v1030 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v1029 |> unbox
                        let v1031 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1032 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1030 v1031 
                        let v1033 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v1021(())"
                        let v1034 : string = " " + v1033 + v372 + ""
                        let v1035 : leptos_dom_Fragment = v1009 ()
                        let v1036 : string = "leptos::prelude::AnyView::from($0)"
                        let v1037 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1035 v1036 
                        let v1038 : string = "<" + v495 + " " + v1034 + ">move || { v1037 }</" + v495 + ">"
                        let v1039 : string = "leptos::prelude::view! { " + v1038 + " }"
                        let v1040 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1039 
                        let v1041 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v1040 |> unbox
                        let v1042 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1043 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1041 v1042 
                        let v1044 : string = "v1043"
                        let v1045 : string = v1044 + v372 
                        let v1046 : string = v1045 + v372 
                        let v1047 : string = "v1032"
                        let v1048 : string = v1047 + v445 
                        let v1049 : string = v1048 + v1046 
                        let v1050 : string = "vec![" + v1049 + "]"
                        let v1051 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1050 
                        let v1052 : string = "leptos::prelude::Fragment::new($0)"
                        let v1053 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1051 v1052 
                        let v1054 : string = "leptos::prelude::AnyView::from($0)"
                        let v1055 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1053 v1054 
                        let v1056 : string = "<" + v514 + " " + v1019 + ">move || { v1055 }</" + v514 + ">"
                        let v1057 : string = "leptos::prelude::view! { " + v1056 + " }"
                        let v1058 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1057 
                        let v1059 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v1058 |> unbox
                        let v1060 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1061 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1059 v1060 
                        let v1062 : (unit -> leptos_dom_Fragment) = method274()
                        let v1063 : (unit -> leptos_dom_Fragment) = method275(v382, v383, v384, v385, v386, v387, v388, v389, v390, v391, v392, v393)
                        let v1064 : string = "$0"
                        let v1065 : (unit -> string) = closure328()
                        let v1066 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1065 v1064 
                        let v1067 : string = "$0"
                        let v1068 : (unit -> string) = closure329()
                        let v1069 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1068 v1067 
                        let v1070 : string = "$0"
                        let v1071 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v471 v1070 
                        let v1072 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v1071(()) + \" \" + &v1069(()) + \" \" + &v1066(())"
                        let v1073 : string = " " + v1072 + v372 + ""
                        let v1074 : string = "$0"
                        let v1075 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v1074 
                        let v1076 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v1077 : string = " " + v1076 + v372 + ""
                        let v1078 : leptos_dom_Fragment = v1062 ()
                        let v1079 : string = "leptos::prelude::AnyView::from($0)"
                        let v1080 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1078 v1079 
                        let v1081 : string = "<" + v483 + " " + v1077 + ">move || { v1080 }</" + v483 + ">"
                        let v1082 : string = "leptos::prelude::view! { " + v1081 + " }"
                        let v1083 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1082 
                        let v1084 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v1083 |> unbox
                        let v1085 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1086 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1084 v1085 
                        let v1087 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v1075(())"
                        let v1088 : string = " " + v1087 + v372 + ""
                        let v1089 : leptos_dom_Fragment = v1063 ()
                        let v1090 : string = "leptos::prelude::AnyView::from($0)"
                        let v1091 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1089 v1090 
                        let v1092 : string = "<" + v495 + " " + v1088 + ">move || { v1091 }</" + v495 + ">"
                        let v1093 : string = "leptos::prelude::view! { " + v1092 + " }"
                        let v1094 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1093 
                        let v1095 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v1094 |> unbox
                        let v1096 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1097 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1095 v1096 
                        let v1098 : string = "v1097"
                        let v1099 : string = v1098 + v372 
                        let v1100 : string = v1099 + v372 
                        let v1101 : string = "v1086"
                        let v1102 : string = v1101 + v445 
                        let v1103 : string = v1102 + v1100 
                        let v1104 : string = "vec![" + v1103 + "]"
                        let v1105 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1104 
                        let v1106 : string = "leptos::prelude::Fragment::new($0)"
                        let v1107 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1105 v1106 
                        let v1108 : string = "leptos::prelude::AnyView::from($0)"
                        let v1109 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1107 v1108 
                        let v1110 : string = "<" + v514 + " " + v1073 + ">move || { v1109 }</" + v514 + ">"
                        let v1111 : string = "leptos::prelude::view! { " + v1110 + " }"
                        let v1112 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1111 
                        let v1113 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v1112 |> unbox
                        let v1114 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1115 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1113 v1114 
                        let v1116 : uint64 = System.Convert.ToUInt64 v393.Length
                        let v1117 : bool = v1116 = 0UL
                        let v1176 : leptos_prelude_AnyView_ =
                            if v1117 then
                                let v1118 : string = "vec![" + v372 + "]"
                                let v1119 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1118 
                                let v1120 : string = "leptos::prelude::IntoAny::into_any($0)"
                                let v1121 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1119 v1120 
                                v1121
                            else
                                let v1122 : (unit -> leptos_dom_Fragment) = method276()
                                let v1123 : (unit -> leptos_dom_Fragment) = method277(v382, v383, v384, v385, v386, v387, v388, v389, v390, v391, v392, v393)
                                let v1124 : string = "$0"
                                let v1125 : (unit -> string) = closure334()
                                let v1126 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1125 v1124 
                                let v1127 : string = "$0"
                                let v1128 : (unit -> string) = closure335()
                                let v1129 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1128 v1127 
                                let v1130 : string = "$0"
                                let v1131 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v471 v1130 
                                let v1132 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v1131(()) + \" \" + &v1129(()) + \" \" + &v1126(())"
                                let v1133 : string = " " + v1132 + v372 + ""
                                let v1134 : string = "$0"
                                let v1135 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v476 v1134 
                                let v1136 : string = "class=\"[font-size:12px] text-gray-400\""
                                let v1137 : string = " " + v1136 + v372 + ""
                                let v1138 : leptos_dom_Fragment = v1122 ()
                                let v1139 : string = "leptos::prelude::AnyView::from($0)"
                                let v1140 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1138 v1139 
                                let v1141 : string = "<" + v483 + " " + v1137 + ">move || { v1140 }</" + v483 + ">"
                                let v1142 : string = "leptos::prelude::view! { " + v1141 + " }"
                                let v1143 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1142 
                                let v1144 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v1143 |> unbox
                                let v1145 : string = "leptos::prelude::IntoAny::into_any($0)"
                                let v1146 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1144 v1145 
                                let v1147 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v1135(())"
                                let v1148 : string = " " + v1147 + v372 + ""
                                let v1149 : leptos_dom_Fragment = v1123 ()
                                let v1150 : string = "leptos::prelude::AnyView::from($0)"
                                let v1151 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1149 v1150 
                                let v1152 : string = "<" + v495 + " " + v1148 + ">move || { v1151 }</" + v495 + ">"
                                let v1153 : string = "leptos::prelude::view! { " + v1152 + " }"
                                let v1154 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1153 
                                let v1155 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v1154 |> unbox
                                let v1156 : string = "leptos::prelude::IntoAny::into_any($0)"
                                let v1157 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1155 v1156 
                                let v1158 : string = "v1157"
                                let v1159 : string = v1158 + v372 
                                let v1160 : string = v1159 + v372 
                                let v1161 : string = "v1146"
                                let v1162 : string = v1161 + v445 
                                let v1163 : string = v1162 + v1160 
                                let v1164 : string = "vec![" + v1163 + "]"
                                let v1165 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1164 
                                let v1166 : string = "leptos::prelude::Fragment::new($0)"
                                let v1167 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1165 v1166 
                                let v1168 : string = "leptos::prelude::AnyView::from($0)"
                                let v1169 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1167 v1168 
                                let v1170 : string = "<" + v514 + " " + v1133 + ">move || { v1169 }</" + v514 + ">"
                                let v1171 : string = "leptos::prelude::view! { " + v1170 + " }"
                                let v1172 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1171 
                                let v1173 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v1172 |> unbox
                                let v1174 : string = "leptos::prelude::IntoAny::into_any($0)"
                                let v1175 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1173 v1174 
                                v1175
                        let v1177 : string = "v1176"
                        let v1178 : string = v1177 + v372 
                        let v1179 : string = v1178 + v372 
                        let v1180 : string = "v1115"
                        let v1181 : string = v1180 + v445 
                        let v1182 : string = v1181 + v1179 
                        let v1183 : string = "v1061"
                        let v1184 : string = v1183 + v445 
                        let v1185 : string = v1184 + v1182 
                        let v1186 : string = "v1007"
                        let v1187 : string = v1186 + v445 
                        let v1188 : string = v1187 + v1185 
                        let v1189 : string = "v953"
                        let v1190 : string = v1189 + v445 
                        let v1191 : string = v1190 + v1188 
                        let v1192 : string = "v899"
                        let v1193 : string = v1192 + v445 
                        let v1194 : string = v1193 + v1191 
                        let v1195 : string = "v845"
                        let v1196 : string = v1195 + v445 
                        let v1197 : string = v1196 + v1194 
                        let v1198 : string = "v791"
                        let v1199 : string = v1198 + v445 
                        let v1200 : string = v1199 + v1197 
                        let v1201 : string = "v737"
                        let v1202 : string = v1201 + v445 
                        let v1203 : string = v1202 + v1200 
                        let v1204 : string = "v682"
                        let v1205 : string = v1204 + v445 
                        let v1206 : string = v1205 + v1203 
                        let v1207 : string = "v628"
                        let v1208 : string = v1207 + v445 
                        let v1209 : string = v1208 + v1206 
                        let v1210 : string = "v574"
                        let v1211 : string = v1210 + v445 
                        let v1212 : string = v1211 + v1209 
                        let v1213 : string = "v520"
                        let v1214 : string = v1213 + v445 
                        let v1215 : string = v1214 + v1212 
                        let v1216 : string = "vec![" + v1215 + "]"
                        let v1217 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1216 
                        let v1218 : string = "leptos::prelude::Fragment::new($0)"
                        let v1219 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1217 v1218 
                        let v1220 : string = "leptos::prelude::AnyView::from($0)"
                        let v1221 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1219 v1220 
                        let v1222 : string = "div"
                        let v1223 : string = "<" + v1222 + " " + v461 + ">move || { v1221 }</" + v1222 + ">"
                        let v1224 : string = "leptos::prelude::view! { " + v1223 + " }"
                        let v1225 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1224 
                        let v1226 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1225 |> unbox
                        let v1227 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1228 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1226 v1227 
                        let v1229 : string = "v1228"
                        let v1230 : string = v1229 + v372 
                        let v1231 : string = v1230 + v372 
                        let v1232 : string = "v459"
                        let v1233 : string = v1232 + v445 
                        let v1234 : string = v1233 + v1231 
                        let v1235 : string = "vec![" + v1234 + "]"
                        let v1236 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1235 
                        let v1237 : string = "leptos::prelude::Fragment::new($0)"
                        let v1238 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1236 v1237 
                        let v1239 : string = "leptos::prelude::AnyView::from($0)"
                        let v1240 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1238 v1239 
                        let v1241 : string = "<" + v1222 + " " + v407 + ">move || { v1240 }</" + v1222 + ">"
                        let v1242 : string = "leptos::prelude::view! { " + v1241 + " }"
                        let v1243 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1242 
                        let v1244 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1243 |> unbox
                        let v1245 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1246 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1244 v1245 
                        let v1247 : string = "true; $0 }).collect::<Vec<_>>()"
                        let v1248 : bool = Fable.Core.RustInterop.emitRustExpr v1246 v1247 
                        let v1249 : string = "_vec_map"
                        let v1250 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1249 
                        let v1251 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1252 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1250 v1251 
                        let v1253 : string = "v1252"
                        let v1254 : string = v1253 + v372 
                        let v1255 : string = v1254 + v372 
                        let v1256 : string = "vec![" + v1255 + "]"
                        let v1257 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1256 
                        let v1258 : string = "leptos::prelude::Fragment::new($0)"
                        let v1259 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1257 v1258 
                        let v1260 : string = "leptos::prelude::AnyView::from($0)"
                        let v1261 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1259 v1260 
                        let v1262 : string = "<" + v1222 + " " + v373 + ">move || { v1261 }</" + v1222 + ">"
                        let v1263 : string = "leptos::prelude::view! { " + v1262 + " }"
                        let v1264 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1263 
                        let v1265 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v1264 |> unbox
                        let v1266 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1267 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1265 v1266 
                        v1267
                    else
                        let v1268 : string = "$0.to_vec()"
                        let v1269 : Vec<struct (string * unativeint * Heap5)> = Fable.Core.RustInterop.emitRustExpr v360 v1268 
                        let v1270 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                        let v1271 : bool = Fable.Core.RustInterop.emitRustExpr v1269 v1270 
                        let v1272 : string = "x"
                        let struct (v1273 : string, v1274 : unativeint, v1275 : Heap5) = Fable.Core.RustInterop.emitRustExpr () v1272 
                        let v1276 : string = "transaction.tr_render (1)"
                        let v1277 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v1278 : bool = Fable.Core.RustInterop.emitRustExpr v1276 v1277 
                        let v1279 : string = "class=\"odd:bg-gray-50 dark:odd:bg-gray-800/50\""
                        let v1280 : string = ""
                        let v1281 : string = " " + v1279 + v1280 + ""
                        let v1282 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1283 : string = " " + v1282 + v1280 + ""
                        (* run_target_args'
                        let v1288 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1289 : string = "&*$0"
                        let v1290 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1273 v1289 
                        let _run_target_args'_v1288 = v1290 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1291 : string = "&*$0"
                        let v1292 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1273 v1291 
                        let _run_target_args'_v1288 = v1292 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1293 : string = "&*$0"
                        let v1294 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1273 v1293 
                        let _run_target_args'_v1288 = v1294 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1296 : Ref<Str> = v1273 |> unbox<Ref<Str>>
                        let _run_target_args'_v1288 = v1296 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1300 : Ref<Str> = v1273 |> unbox<Ref<Str>>
                        let _run_target_args'_v1288 = v1300 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1304 : Ref<Str> = v1273 |> unbox<Ref<Str>>
                        let _run_target_args'_v1288 = v1304 
                        #endif
#else
                        let v1308 : Ref<Str> = v1273 |> unbox<Ref<Str>>
                        let _run_target_args'_v1288 = v1308 
                        #endif
                        let v1311 : Ref<Str> = _run_target_args'_v1288 
                        (* run_target_args'
                        let v1321 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1322 : string = "String::from($0)"
                        let v1323 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1311 v1322 
                        let _run_target_args'_v1321 = v1323 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1324 : string = "String::from($0)"
                        let v1325 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1311 v1324 
                        let _run_target_args'_v1321 = v1325 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1326 : string = "String::from($0)"
                        let v1327 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1311 v1326 
                        let _run_target_args'_v1321 = v1327 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1329 : std_string_String = v1311 |> unbox<std_string_String>
                        let _run_target_args'_v1321 = v1329 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1333 : std_string_String = v1311 |> unbox<std_string_String>
                        let _run_target_args'_v1321 = v1333 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1337 : std_string_String = v1311 |> unbox<std_string_String>
                        let _run_target_args'_v1321 = v1337 
                        #endif
#else
                        let v1341 : std_string_String = v1311 |> unbox<std_string_String>
                        let _run_target_args'_v1321 = v1341 
                        #endif
                        let v1344 : std_string_String = _run_target_args'_v1321 
                        let v1350 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1351 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1344 v1350 
                        let v1352 : string = "v1351"
                        let v1353 : string = v1352 + v1280 
                        let v1354 : string = v1353 + v1280 
                        let v1355 : string = "vec![" + v1354 + "]"
                        let v1356 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1355 
                        let v1357 : string = "leptos::prelude::Fragment::new($0)"
                        let v1358 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1356 v1357 
                        let v1359 : string = "leptos::prelude::AnyView::from($0)"
                        let v1360 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1358 v1359 
                        let v1361 : string = "td"
                        let v1362 : string = "<" + v1361 + " " + v1283 + ">move || { v1360 }</" + v1361 + ">"
                        let v1363 : string = "leptos::prelude::view! { " + v1362 + " }"
                        let v1364 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1363 
                        let v1365 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1364 |> unbox
                        let v1366 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1367 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1365 v1366 
                        let v1368 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1369 : string = " " + v1368 + v1280 + ""
                        let v1370 : std_string_String = v1275.l5
                        let v1371 : string = "fable_library_rust::String_::fromString($0)"
                        let v1372 : string = Fable.Core.RustInterop.emitRustExpr v1370 v1371 
                        let v1374 : (string -> int64) = int64
                        let v1375 : int64 = v1374 v1372
                        let v1378 : int64 = method204(v1375)
                        let v1379 : int64 = v1378 / 1000L
                        let v1380 : string = "chrono::DateTime::from_timestamp_micros($0)"
                        let v1381 : chrono_DateTime<chrono_Utc> option = Fable.Core.RustInterop.emitRustExpr v1379 v1380 
                        let v1383 : (chrono_DateTime<chrono_Utc> -> US68) = method205()
                        let v1384 : US68 option = v1381 |> Option.map v1383 
                        let v1397 : US68 = US68_1
                        let v1398 : US68 = v1384 |> Option.defaultValue v1397 
                        let v1417 : US31 =
                            match v1398 with
                            | US68_1 -> (* None *)
                                US31_1
                            | US68_0(v1402) -> (* Some *)
                                let v1403 : string = "$0.naive_utc()"
                                let v1404 : chrono_NaiveDateTime = Fable.Core.RustInterop.emitRustExpr v1402 v1403 
                                let v1405 : string = "chrono::offset::TimeZone::from_utc_datetime(&chrono::Local, &$0)"
                                let v1406 : chrono_DateTime<chrono_Local> = Fable.Core.RustInterop.emitRustExpr v1404 v1405 
                                let v1407 : string = "%Y-%m-%d %H:%M:%S"
                                let v1408 : string = "r#\"" + v1407 + "\"#"
                                let v1409 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v1408 
                                let v1410 : string = "$0.format($1).to_string()"
                                let v1411 : std_string_String = Fable.Core.RustInterop.emitRustExpr struct (v1406, v1409) v1410 
                                let v1412 : string = "fable_library_rust::String_::fromString($0)"
                                let v1413 : string = Fable.Core.RustInterop.emitRustExpr v1411 v1412 
                                US31_0(v1413)
                        let v1423 : US69 =
                            match v1417 with
                            | US31_1 -> (* None *)
                                let v1420 : string = "resultm.from_option / Option does not have a value."
                                US69_1(v1420)
                            | US31_0(v1418) -> (* Some *)
                                US69_0(v1418)
                        let v1428 : string =
                            match v1423 with
                            | US69_1(v1425) -> (* Error *)
                                let v1426 : string = "sm'.to_string result / Error: " + v1425 + ""
                                v1426
                            | US69_0(v1424) -> (* Ok *)
                                v1424
                        (* run_target_args'
                        let v1433 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1434 : string = "&*$0"
                        let v1435 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1428 v1434 
                        let _run_target_args'_v1433 = v1435 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1436 : string = "&*$0"
                        let v1437 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1428 v1436 
                        let _run_target_args'_v1433 = v1437 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1438 : string = "&*$0"
                        let v1439 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1428 v1438 
                        let _run_target_args'_v1433 = v1439 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1441 : Ref<Str> = v1428 |> unbox<Ref<Str>>
                        let _run_target_args'_v1433 = v1441 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1445 : Ref<Str> = v1428 |> unbox<Ref<Str>>
                        let _run_target_args'_v1433 = v1445 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1449 : Ref<Str> = v1428 |> unbox<Ref<Str>>
                        let _run_target_args'_v1433 = v1449 
                        #endif
#else
                        let v1453 : Ref<Str> = v1428 |> unbox<Ref<Str>>
                        let _run_target_args'_v1433 = v1453 
                        #endif
                        let v1456 : Ref<Str> = _run_target_args'_v1433 
                        (* run_target_args'
                        let v1466 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1467 : string = "String::from($0)"
                        let v1468 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1456 v1467 
                        let _run_target_args'_v1466 = v1468 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1469 : string = "String::from($0)"
                        let v1470 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1456 v1469 
                        let _run_target_args'_v1466 = v1470 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1471 : string = "String::from($0)"
                        let v1472 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1456 v1471 
                        let _run_target_args'_v1466 = v1472 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1474 : std_string_String = v1456 |> unbox<std_string_String>
                        let _run_target_args'_v1466 = v1474 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1478 : std_string_String = v1456 |> unbox<std_string_String>
                        let _run_target_args'_v1466 = v1478 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1482 : std_string_String = v1456 |> unbox<std_string_String>
                        let _run_target_args'_v1466 = v1482 
                        #endif
#else
                        let v1486 : std_string_String = v1456 |> unbox<std_string_String>
                        let _run_target_args'_v1466 = v1486 
                        #endif
                        let v1489 : std_string_String = _run_target_args'_v1466 
                        let v1495 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1496 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1489 v1495 
                        let v1497 : string = "v1496"
                        let v1498 : string = v1497 + v1280 
                        let v1499 : string = v1498 + v1280 
                        let v1500 : string = "vec![" + v1499 + "]"
                        let v1501 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1500 
                        let v1502 : string = "leptos::prelude::Fragment::new($0)"
                        let v1503 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1501 v1502 
                        let v1504 : string = "leptos::prelude::AnyView::from($0)"
                        let v1505 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1503 v1504 
                        let v1506 : string = "<" + v1361 + " " + v1369 + ">move || { v1505 }</" + v1361 + ">"
                        let v1507 : string = "leptos::prelude::view! { " + v1506 + " }"
                        let v1508 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1507 
                        let v1509 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1508 |> unbox
                        let v1510 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1511 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1509 v1510 
                        let v1512 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1513 : string = " " + v1512 + v1280 + ""
                        let v1514 : std_string_String = v1275.l1
                        let v1515 : string = "fable_library_rust::String_::fromString($0)"
                        let v1516 : string = Fable.Core.RustInterop.emitRustExpr v1514 v1515 
                        (* run_target_args'
                        let v1521 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1522 : string = "&*$0"
                        let v1523 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1516 v1522 
                        let _run_target_args'_v1521 = v1523 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1524 : string = "&*$0"
                        let v1525 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1516 v1524 
                        let _run_target_args'_v1521 = v1525 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1526 : string = "&*$0"
                        let v1527 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1516 v1526 
                        let _run_target_args'_v1521 = v1527 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1529 : Ref<Str> = v1516 |> unbox<Ref<Str>>
                        let _run_target_args'_v1521 = v1529 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1533 : Ref<Str> = v1516 |> unbox<Ref<Str>>
                        let _run_target_args'_v1521 = v1533 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1537 : Ref<Str> = v1516 |> unbox<Ref<Str>>
                        let _run_target_args'_v1521 = v1537 
                        #endif
#else
                        let v1541 : Ref<Str> = v1516 |> unbox<Ref<Str>>
                        let _run_target_args'_v1521 = v1541 
                        #endif
                        let v1544 : Ref<Str> = _run_target_args'_v1521 
                        (* run_target_args'
                        let v1554 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1555 : string = "String::from($0)"
                        let v1556 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1544 v1555 
                        let _run_target_args'_v1554 = v1556 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1557 : string = "String::from($0)"
                        let v1558 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1544 v1557 
                        let _run_target_args'_v1554 = v1558 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1559 : string = "String::from($0)"
                        let v1560 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1544 v1559 
                        let _run_target_args'_v1554 = v1560 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1562 : std_string_String = v1544 |> unbox<std_string_String>
                        let _run_target_args'_v1554 = v1562 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1566 : std_string_String = v1544 |> unbox<std_string_String>
                        let _run_target_args'_v1554 = v1566 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1570 : std_string_String = v1544 |> unbox<std_string_String>
                        let _run_target_args'_v1554 = v1570 
                        #endif
#else
                        let v1574 : std_string_String = v1544 |> unbox<std_string_String>
                        let _run_target_args'_v1554 = v1574 
                        #endif
                        let v1577 : std_string_String = _run_target_args'_v1554 
                        let v1583 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1584 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1577 v1583 
                        let v1585 : string = "v1584"
                        let v1586 : string = v1585 + v1280 
                        let v1587 : string = v1586 + v1280 
                        let v1588 : string = "vec![" + v1587 + "]"
                        let v1589 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1588 
                        let v1590 : string = "leptos::prelude::Fragment::new($0)"
                        let v1591 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1589 v1590 
                        let v1592 : string = "leptos::prelude::AnyView::from($0)"
                        let v1593 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1591 v1592 
                        let v1594 : string = "<" + v1361 + " " + v1513 + ">move || { v1593 }</" + v1361 + ">"
                        let v1595 : string = "leptos::prelude::view! { " + v1594 + " }"
                        let v1596 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1595 
                        let v1597 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1596 |> unbox
                        let v1598 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1599 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1597 v1598 
                        let v1600 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1601 : string = " " + v1600 + v1280 + ""
                        let v1602 : std_string_String = v1275.l2
                        let v1603 : string = "fable_library_rust::String_::fromString($0)"
                        let v1604 : string = Fable.Core.RustInterop.emitRustExpr v1602 v1603 
                        (* run_target_args'
                        let v1609 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1610 : string = "&*$0"
                        let v1611 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1604 v1610 
                        let _run_target_args'_v1609 = v1611 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1612 : string = "&*$0"
                        let v1613 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1604 v1612 
                        let _run_target_args'_v1609 = v1613 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1614 : string = "&*$0"
                        let v1615 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1604 v1614 
                        let _run_target_args'_v1609 = v1615 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1617 : Ref<Str> = v1604 |> unbox<Ref<Str>>
                        let _run_target_args'_v1609 = v1617 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1621 : Ref<Str> = v1604 |> unbox<Ref<Str>>
                        let _run_target_args'_v1609 = v1621 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1625 : Ref<Str> = v1604 |> unbox<Ref<Str>>
                        let _run_target_args'_v1609 = v1625 
                        #endif
#else
                        let v1629 : Ref<Str> = v1604 |> unbox<Ref<Str>>
                        let _run_target_args'_v1609 = v1629 
                        #endif
                        let v1632 : Ref<Str> = _run_target_args'_v1609 
                        (* run_target_args'
                        let v1642 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1643 : string = "String::from($0)"
                        let v1644 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1632 v1643 
                        let _run_target_args'_v1642 = v1644 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1645 : string = "String::from($0)"
                        let v1646 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1632 v1645 
                        let _run_target_args'_v1642 = v1646 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1647 : string = "String::from($0)"
                        let v1648 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1632 v1647 
                        let _run_target_args'_v1642 = v1648 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1650 : std_string_String = v1632 |> unbox<std_string_String>
                        let _run_target_args'_v1642 = v1650 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1654 : std_string_String = v1632 |> unbox<std_string_String>
                        let _run_target_args'_v1642 = v1654 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1658 : std_string_String = v1632 |> unbox<std_string_String>
                        let _run_target_args'_v1642 = v1658 
                        #endif
#else
                        let v1662 : std_string_String = v1632 |> unbox<std_string_String>
                        let _run_target_args'_v1642 = v1662 
                        #endif
                        let v1665 : std_string_String = _run_target_args'_v1642 
                        let v1671 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1672 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1665 v1671 
                        let v1673 : string = "v1672"
                        let v1674 : string = v1673 + v1280 
                        let v1675 : string = v1674 + v1280 
                        let v1676 : string = "vec![" + v1675 + "]"
                        let v1677 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1676 
                        let v1678 : string = "leptos::prelude::Fragment::new($0)"
                        let v1679 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1677 v1678 
                        let v1680 : string = "leptos::prelude::AnyView::from($0)"
                        let v1681 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1679 v1680 
                        let v1682 : string = "<" + v1361 + " " + v1601 + ">move || { v1681 }</" + v1361 + ">"
                        let v1683 : string = "leptos::prelude::view! { " + v1682 + " }"
                        let v1684 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1683 
                        let v1685 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1684 |> unbox
                        let v1686 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1687 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1685 v1686 
                        let v1688 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1689 : string = " " + v1688 + v1280 + ""
                        let v1690 : (struct (std_string_String * std_string_String option) []) = v1275.l7
                        let v1691 : string = "$0.to_vec()"
                        let v1692 : Vec<struct (std_string_String * std_string_String option)> = Fable.Core.RustInterop.emitRustExpr v1690 v1691 
                        let v1693 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                        let v1694 : bool = Fable.Core.RustInterop.emitRustExpr v1692 v1693 
                        let v1695 : string = "x"
                        let struct (v1696 : std_string_String, v1697 : std_string_String option) = Fable.Core.RustInterop.emitRustExpr () v1695 
                        let v1698 : (unit -> leptos_dom_Fragment) = method258(v1696)
                        let v1699 : (unit -> leptos_dom_Fragment) = method259(v1697)
                        let v1700 : string = "$0"
                        let v1701 : (unit -> string) = closure295()
                        let v1702 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1701 v1700 
                        let v1703 : string = "$0"
                        let v1704 : (unit -> string) = closure296()
                        let v1705 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1704 v1703 
                        let v1706 : string = "$0"
                        let v1707 : (unit -> string) = closure297()
                        let v1708 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1707 v1706 
                        let v1709 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v1708(()) + \" \" + &v1705(()) + \" \" + &v1702(())"
                        let v1710 : string = " " + v1709 + v1280 + ""
                        let v1711 : string = "$0"
                        let v1712 : (unit -> string) = closure298()
                        let v1713 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v1712 v1711 
                        let v1714 : string = "class=\"[font-size:12px] text-gray-400\""
                        let v1715 : string = " " + v1714 + v1280 + ""
                        let v1716 : leptos_dom_Fragment = v1698 ()
                        let v1717 : string = "leptos::prelude::AnyView::from($0)"
                        let v1718 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1716 v1717 
                        let v1719 : string = "dt"
                        let v1720 : string = "<" + v1719 + " " + v1715 + ">move || { v1718 }</" + v1719 + ">"
                        let v1721 : string = "leptos::prelude::view! { " + v1720 + " }"
                        let v1722 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1721 
                        let v1723 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v1722 |> unbox
                        let v1724 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1725 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1723 v1724 
                        let v1726 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v1713(())"
                        let v1727 : string = " " + v1726 + v1280 + ""
                        let v1728 : leptos_dom_Fragment = v1699 ()
                        let v1729 : string = "leptos::prelude::AnyView::from($0)"
                        let v1730 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1728 v1729 
                        let v1731 : string = "dd"
                        let v1732 : string = "<" + v1731 + " " + v1727 + ">move || { v1730 }</" + v1731 + ">"
                        let v1733 : string = "leptos::prelude::view! { " + v1732 + " }"
                        let v1734 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1733 
                        let v1735 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v1734 |> unbox
                        let v1736 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1737 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1735 v1736 
                        let v1738 : string = "v1737"
                        let v1739 : string = v1738 + v1280 
                        let v1740 : string = v1739 + v1280 
                        let v1741 : string = "v1725"
                        let v1742 : string = ", "
                        let v1743 : string = v1741 + v1742 
                        let v1744 : string = v1743 + v1740 
                        let v1745 : string = "vec![" + v1744 + "]"
                        let v1746 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1745 
                        let v1747 : string = "leptos::prelude::Fragment::new($0)"
                        let v1748 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1746 v1747 
                        let v1749 : string = "leptos::prelude::AnyView::from($0)"
                        let v1750 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1748 v1749 
                        let v1751 : string = "dl"
                        let v1752 : string = "<" + v1751 + " " + v1710 + ">move || { v1750 }</" + v1751 + ">"
                        let v1753 : string = "leptos::prelude::view! { " + v1752 + " }"
                        let v1754 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1753 
                        let v1755 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v1754 |> unbox
                        let v1756 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1757 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1755 v1756 
                        let v1758 : string = "true; $0 }).collect::<Vec<_>>()"
                        let v1759 : bool = Fable.Core.RustInterop.emitRustExpr v1757 v1758 
                        let v1760 : string = "_vec_map"
                        let v1761 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1760 
                        let v1762 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1763 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1761 v1762 
                        let v1764 : string = "v1763"
                        let v1765 : string = v1764 + v1280 
                        let v1766 : string = v1765 + v1280 
                        let v1767 : string = "vec![" + v1766 + "]"
                        let v1768 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1767 
                        let v1769 : string = "leptos::prelude::Fragment::new($0)"
                        let v1770 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1768 v1769 
                        let v1771 : string = "leptos::prelude::AnyView::from($0)"
                        let v1772 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1770 v1771 
                        let v1773 : string = "<" + v1361 + " " + v1689 + ">move || { v1772 }</" + v1361 + ">"
                        let v1774 : string = "leptos::prelude::view! { " + v1773 + " }"
                        let v1775 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1774 
                        let v1776 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1775 |> unbox
                        let v1777 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1778 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1776 v1777 
                        let v1779 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1780 : string = " " + v1779 + v1280 + ""
                        let v1781 : float = v1275.l8
                        let v1783 : (float -> string) = _.ToString()
                        let v1784 : string = v1783 v1781
                        (* run_target_args'
                        let v1791 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1792 : string = "&*$0"
                        let v1793 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1784 v1792 
                        let _run_target_args'_v1791 = v1793 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1794 : string = "&*$0"
                        let v1795 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1784 v1794 
                        let _run_target_args'_v1791 = v1795 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1796 : string = "&*$0"
                        let v1797 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1784 v1796 
                        let _run_target_args'_v1791 = v1797 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1799 : Ref<Str> = v1784 |> unbox<Ref<Str>>
                        let _run_target_args'_v1791 = v1799 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1803 : Ref<Str> = v1784 |> unbox<Ref<Str>>
                        let _run_target_args'_v1791 = v1803 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1807 : Ref<Str> = v1784 |> unbox<Ref<Str>>
                        let _run_target_args'_v1791 = v1807 
                        #endif
#else
                        let v1811 : Ref<Str> = v1784 |> unbox<Ref<Str>>
                        let _run_target_args'_v1791 = v1811 
                        #endif
                        let v1814 : Ref<Str> = _run_target_args'_v1791 
                        (* run_target_args'
                        let v1824 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1825 : string = "String::from($0)"
                        let v1826 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1814 v1825 
                        let _run_target_args'_v1824 = v1826 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1827 : string = "String::from($0)"
                        let v1828 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1814 v1827 
                        let _run_target_args'_v1824 = v1828 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1829 : string = "String::from($0)"
                        let v1830 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1814 v1829 
                        let _run_target_args'_v1824 = v1830 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1832 : std_string_String = v1814 |> unbox<std_string_String>
                        let _run_target_args'_v1824 = v1832 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1836 : std_string_String = v1814 |> unbox<std_string_String>
                        let _run_target_args'_v1824 = v1836 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1840 : std_string_String = v1814 |> unbox<std_string_String>
                        let _run_target_args'_v1824 = v1840 
                        #endif
#else
                        let v1844 : std_string_String = v1814 |> unbox<std_string_String>
                        let _run_target_args'_v1824 = v1844 
                        #endif
                        let v1847 : std_string_String = _run_target_args'_v1824 
                        let v1853 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1854 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1847 v1853 
                        let v1855 : string = "v1854"
                        let v1856 : string = v1855 + v1280 
                        let v1857 : string = v1856 + v1280 
                        let v1858 : string = "vec![" + v1857 + "]"
                        let v1859 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1858 
                        let v1860 : string = "leptos::prelude::Fragment::new($0)"
                        let v1861 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1859 v1860 
                        let v1862 : string = "leptos::prelude::AnyView::from($0)"
                        let v1863 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1861 v1862 
                        let v1864 : string = "<" + v1361 + " " + v1780 + ">move || { v1863 }</" + v1361 + ">"
                        let v1865 : string = "leptos::prelude::view! { " + v1864 + " }"
                        let v1866 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1865 
                        let v1867 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1866 |> unbox
                        let v1868 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1869 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1867 v1868 
                        let v1870 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1871 : string = " " + v1870 + v1280 + ""
                        let v1872 : float = v1275.l10
                        let v1874 : (float -> string) = _.ToString()
                        let v1875 : string = v1874 v1872
                        (* run_target_args'
                        let v1882 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1883 : string = "&*$0"
                        let v1884 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1875 v1883 
                        let _run_target_args'_v1882 = v1884 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1885 : string = "&*$0"
                        let v1886 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1875 v1885 
                        let _run_target_args'_v1882 = v1886 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1887 : string = "&*$0"
                        let v1888 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1875 v1887 
                        let _run_target_args'_v1882 = v1888 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1890 : Ref<Str> = v1875 |> unbox<Ref<Str>>
                        let _run_target_args'_v1882 = v1890 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1894 : Ref<Str> = v1875 |> unbox<Ref<Str>>
                        let _run_target_args'_v1882 = v1894 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1898 : Ref<Str> = v1875 |> unbox<Ref<Str>>
                        let _run_target_args'_v1882 = v1898 
                        #endif
#else
                        let v1902 : Ref<Str> = v1875 |> unbox<Ref<Str>>
                        let _run_target_args'_v1882 = v1902 
                        #endif
                        let v1905 : Ref<Str> = _run_target_args'_v1882 
                        (* run_target_args'
                        let v1915 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1916 : string = "String::from($0)"
                        let v1917 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1905 v1916 
                        let _run_target_args'_v1915 = v1917 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1918 : string = "String::from($0)"
                        let v1919 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1905 v1918 
                        let _run_target_args'_v1915 = v1919 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1920 : string = "String::from($0)"
                        let v1921 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1905 v1920 
                        let _run_target_args'_v1915 = v1921 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1923 : std_string_String = v1905 |> unbox<std_string_String>
                        let _run_target_args'_v1915 = v1923 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1927 : std_string_String = v1905 |> unbox<std_string_String>
                        let _run_target_args'_v1915 = v1927 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1931 : std_string_String = v1905 |> unbox<std_string_String>
                        let _run_target_args'_v1915 = v1931 
                        #endif
#else
                        let v1935 : std_string_String = v1905 |> unbox<std_string_String>
                        let _run_target_args'_v1915 = v1935 
                        #endif
                        let v1938 : std_string_String = _run_target_args'_v1915 
                        let v1944 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v1945 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1938 v1944 
                        let v1946 : string = "v1945"
                        let v1947 : string = v1946 + v1280 
                        let v1948 : string = v1947 + v1280 
                        let v1949 : string = "vec![" + v1948 + "]"
                        let v1950 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1949 
                        let v1951 : string = "leptos::prelude::Fragment::new($0)"
                        let v1952 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v1950 v1951 
                        let v1953 : string = "leptos::prelude::AnyView::from($0)"
                        let v1954 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1952 v1953 
                        let v1955 : string = "<" + v1361 + " " + v1871 + ">move || { v1954 }</" + v1361 + ">"
                        let v1956 : string = "leptos::prelude::view! { " + v1955 + " }"
                        let v1957 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v1956 
                        let v1958 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v1957 |> unbox
                        let v1959 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v1960 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1958 v1959 
                        let v1961 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v1962 : string = " " + v1961 + v1280 + ""
                        let v1963 : uint32 = v1275.l6
                        let v1965 : (uint32 -> string) = _.ToString()
                        let v1966 : string = v1965 v1963
                        (* run_target_args'
                        let v1973 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1974 : string = "&*$0"
                        let v1975 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1966 v1974 
                        let _run_target_args'_v1973 = v1975 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1976 : string = "&*$0"
                        let v1977 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1966 v1976 
                        let _run_target_args'_v1973 = v1977 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1978 : string = "&*$0"
                        let v1979 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1966 v1978 
                        let _run_target_args'_v1973 = v1979 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1981 : Ref<Str> = v1966 |> unbox<Ref<Str>>
                        let _run_target_args'_v1973 = v1981 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1985 : Ref<Str> = v1966 |> unbox<Ref<Str>>
                        let _run_target_args'_v1973 = v1985 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1989 : Ref<Str> = v1966 |> unbox<Ref<Str>>
                        let _run_target_args'_v1973 = v1989 
                        #endif
#else
                        let v1993 : Ref<Str> = v1966 |> unbox<Ref<Str>>
                        let _run_target_args'_v1973 = v1993 
                        #endif
                        let v1996 : Ref<Str> = _run_target_args'_v1973 
                        (* run_target_args'
                        let v2006 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2007 : string = "String::from($0)"
                        let v2008 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1996 v2007 
                        let _run_target_args'_v2006 = v2008 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2009 : string = "String::from($0)"
                        let v2010 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1996 v2009 
                        let _run_target_args'_v2006 = v2010 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2011 : string = "String::from($0)"
                        let v2012 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1996 v2011 
                        let _run_target_args'_v2006 = v2012 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2014 : std_string_String = v1996 |> unbox<std_string_String>
                        let _run_target_args'_v2006 = v2014 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2018 : std_string_String = v1996 |> unbox<std_string_String>
                        let _run_target_args'_v2006 = v2018 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2022 : std_string_String = v1996 |> unbox<std_string_String>
                        let _run_target_args'_v2006 = v2022 
                        #endif
#else
                        let v2026 : std_string_String = v1996 |> unbox<std_string_String>
                        let _run_target_args'_v2006 = v2026 
                        #endif
                        let v2029 : std_string_String = _run_target_args'_v2006 
                        let v2035 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2036 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2029 v2035 
                        let v2037 : string = "v2036"
                        let v2038 : string = v2037 + v1280 
                        let v2039 : string = v2038 + v1280 
                        let v2040 : string = "vec![" + v2039 + "]"
                        let v2041 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2040 
                        let v2042 : string = "leptos::prelude::Fragment::new($0)"
                        let v2043 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2041 v2042 
                        let v2044 : string = "leptos::prelude::AnyView::from($0)"
                        let v2045 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2043 v2044 
                        let v2046 : string = "<" + v1361 + " " + v1962 + ">move || { v2045 }</" + v1361 + ">"
                        let v2047 : string = "leptos::prelude::view! { " + v2046 + " }"
                        let v2048 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2047 
                        let v2049 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2048 |> unbox
                        let v2050 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2051 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2049 v2050 
                        let v2052 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500 [overflow:auto]\""
                        let v2053 : string = " " + v2052 + v1280 + ""
                        let v2054 : (std_string_String []) = v1275.l11
                        let v2055 : uint64 = System.Convert.ToUInt64 v2054.Length
                        let v2056 : bool = v2055 = 0UL
                        let v2265 : leptos_dom_Fragment =
                            if v2056 then
                                (* run_target_args'
                                let v2061 : unit = ()
                                run_target_args' *)
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v2062 : string = "&*$0"
                                let v2063 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1280 v2062 
                                let _run_target_args'_v2061 = v2063 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v2064 : string = "&*$0"
                                let v2065 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1280 v2064 
                                let _run_target_args'_v2061 = v2065 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v2066 : string = "&*$0"
                                let v2067 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1280 v2066 
                                let _run_target_args'_v2061 = v2067 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v2069 : Ref<Str> = v1280 |> unbox<Ref<Str>>
                                let _run_target_args'_v2061 = v2069 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v2073 : Ref<Str> = v1280 |> unbox<Ref<Str>>
                                let _run_target_args'_v2061 = v2073 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v2077 : Ref<Str> = v1280 |> unbox<Ref<Str>>
                                let _run_target_args'_v2061 = v2077 
                                #endif
#else
                                let v2081 : Ref<Str> = v1280 |> unbox<Ref<Str>>
                                let _run_target_args'_v2061 = v2081 
                                #endif
                                let v2084 : Ref<Str> = _run_target_args'_v2061 
                                (* run_target_args'
                                let v2094 : unit = ()
                                run_target_args' *)
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v2095 : string = "String::from($0)"
                                let v2096 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2084 v2095 
                                let _run_target_args'_v2094 = v2096 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v2097 : string = "String::from($0)"
                                let v2098 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2084 v2097 
                                let _run_target_args'_v2094 = v2098 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v2099 : string = "String::from($0)"
                                let v2100 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2084 v2099 
                                let _run_target_args'_v2094 = v2100 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v2102 : std_string_String = v2084 |> unbox<std_string_String>
                                let _run_target_args'_v2094 = v2102 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v2106 : std_string_String = v2084 |> unbox<std_string_String>
                                let _run_target_args'_v2094 = v2106 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v2110 : std_string_String = v2084 |> unbox<std_string_String>
                                let _run_target_args'_v2094 = v2110 
                                #endif
#else
                                let v2114 : std_string_String = v2084 |> unbox<std_string_String>
                                let _run_target_args'_v2094 = v2114 
                                #endif
                                let v2117 : std_string_String = _run_target_args'_v2094 
                                let v2123 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                                let v2124 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2117 v2123 
                                let v2125 : string = "v2124"
                                let v2126 : string = v2125 + v1280 
                                let v2127 : string = v2126 + v1280 
                                let v2128 : string = "vec![" + v2127 + "]"
                                let v2129 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2128 
                                let v2130 : string = "leptos::prelude::Fragment::new($0)"
                                let v2131 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2129 v2130 
                                v2131
                            else
                                let v2132 : (std_string_String []) = v1275.l11
                                let v2133 : string = "$0.to_vec()"
                                let v2134 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v2132 v2133 
                                let v2135 : unit = ()
                                let v2136 : string = $"true; let _func1_from_v2135 = Func1::from(move |value| {{ //"
                                let v2137 : bool = Fable.Core.RustInterop.emitRustExpr () v2136 
                                let v2138 : string = $"value"
                                let v2139 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v2138 
                                let v2140 : string = "fable_library_rust::String_::fromString($0)"
                                let v2141 : string = Fable.Core.RustInterop.emitRustExpr v2139 v2140 
                                let func1_from_result = v2141 //
                                let v2142 : _ = func1_from_result
                                let v2143 : string = $"true; $0 /*"
                                let v2144 : bool = Fable.Core.RustInterop.emitRustExpr v2142 v2143 
                                let v2145 : string = $"*/ }}); //"
                                let v2146 : bool = Fable.Core.RustInterop.emitRustExpr () v2145 
                                let v2147 : string = $"_func1_from_v2135"
                                let v2148 : Func0<std_string_String, string> = Fable.Core.RustInterop.emitRustExpr () v2147 
                                let v2149 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
                                let v2150 : (std_string_String -> string) = closure332(v2148)
                                let v2151 : Vec<string> = Fable.Core.RustInterop.emitRustExpr struct (v2134, v2150) v2149 
                                let v2152 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                                let v2153 : (string []) = Fable.Core.RustInterop.emitRustExpr v2151 v2152 
                                let v2155 : string seq = v2153 |> Seq.ofArray
                                let v2159 : string = method279()
                                let v2160 : (string -> (string seq -> string)) = String.concat
                                let v2161 : (string seq -> string) = v2160 v2159
                                let v2162 : string = v2161 v2155
                                let v2166 : string = "\\n"
                                let v2167 : string = "\n"
                                let v2168 : string = v2162.Replace (v2166, v2167)
                                let v2169 : string = "$0"
                                let v2170 : (unit -> string) = closure336()
                                let v2171 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v2170 v2169 
                                let v2172 : string = "class=move || \"[padding:1px] [font-size:12px] [line-height:12px] [text-wrap:pretty] \".to_owned() + &v2171(())"
                                let v2173 : string = " " + v2172 + v1280 + ""
                                (* run_target_args'
                                let v2178 : unit = ()
                                run_target_args' *)
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v2179 : string = "&*$0"
                                let v2180 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2168 v2179 
                                let _run_target_args'_v2178 = v2180 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v2181 : string = "&*$0"
                                let v2182 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2168 v2181 
                                let _run_target_args'_v2178 = v2182 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v2183 : string = "&*$0"
                                let v2184 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2168 v2183 
                                let _run_target_args'_v2178 = v2184 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v2186 : Ref<Str> = v2168 |> unbox<Ref<Str>>
                                let _run_target_args'_v2178 = v2186 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v2190 : Ref<Str> = v2168 |> unbox<Ref<Str>>
                                let _run_target_args'_v2178 = v2190 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v2194 : Ref<Str> = v2168 |> unbox<Ref<Str>>
                                let _run_target_args'_v2178 = v2194 
                                #endif
#else
                                let v2198 : Ref<Str> = v2168 |> unbox<Ref<Str>>
                                let _run_target_args'_v2178 = v2198 
                                #endif
                                let v2201 : Ref<Str> = _run_target_args'_v2178 
                                (* run_target_args'
                                let v2211 : unit = ()
                                run_target_args' *)
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v2212 : string = "String::from($0)"
                                let v2213 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2201 v2212 
                                let _run_target_args'_v2211 = v2213 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v2214 : string = "String::from($0)"
                                let v2215 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2201 v2214 
                                let _run_target_args'_v2211 = v2215 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v2216 : string = "String::from($0)"
                                let v2217 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2201 v2216 
                                let _run_target_args'_v2211 = v2217 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v2219 : std_string_String = v2201 |> unbox<std_string_String>
                                let _run_target_args'_v2211 = v2219 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v2223 : std_string_String = v2201 |> unbox<std_string_String>
                                let _run_target_args'_v2211 = v2223 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v2227 : std_string_String = v2201 |> unbox<std_string_String>
                                let _run_target_args'_v2211 = v2227 
                                #endif
#else
                                let v2231 : std_string_String = v2201 |> unbox<std_string_String>
                                let _run_target_args'_v2211 = v2231 
                                #endif
                                let v2234 : std_string_String = _run_target_args'_v2211 
                                let v2240 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                                let v2241 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2234 v2240 
                                let v2242 : string = "v2241"
                                let v2243 : string = v2242 + v1280 
                                let v2244 : string = v2243 + v1280 
                                let v2245 : string = "vec![" + v2244 + "]"
                                let v2246 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2245 
                                let v2247 : string = "leptos::prelude::Fragment::new($0)"
                                let v2248 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2246 v2247 
                                let v2249 : string = "leptos::prelude::AnyView::from($0)"
                                let v2250 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2248 v2249 
                                let v2251 : string = "pre"
                                let v2252 : string = "<" + v2251 + " " + v2173 + ">move || { v2250 }</" + v2251 + ">"
                                let v2253 : string = "leptos::prelude::view! { " + v2252 + " }"
                                let v2254 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2253 
                                let v2255 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v2254 |> unbox
                                let v2256 : string = "leptos::prelude::IntoAny::into_any($0)"
                                let v2257 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2255 v2256 
                                let v2258 : string = "v2257"
                                let v2259 : string = v2258 + v1280 
                                let v2260 : string = v2259 + v1280 
                                let v2261 : string = "vec![" + v2260 + "]"
                                let v2262 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2261 
                                let v2263 : string = "leptos::prelude::Fragment::new($0)"
                                let v2264 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2262 v2263 
                                v2264
                        let v2266 : string = "leptos::prelude::AnyView::from($0)"
                        let v2267 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2265 v2266 
                        let v2268 : string = "<" + v1361 + " " + v2053 + ">move || { v2267 }</" + v1361 + ">"
                        let v2269 : string = "leptos::prelude::view! { " + v2268 + " }"
                        let v2270 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2269 
                        let v2271 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2270 |> unbox
                        let v2272 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2273 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2271 v2272 
                        let v2274 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v2275 : string = " " + v2274 + v1280 + ""
                        let v2276 : bool = v1275.l9
                        let v2278 : (bool -> string) = _.ToString()
                        let v2279 : string = v2278 v2276
                        (* run_target_args'
                        let v2286 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2287 : string = "&*$0"
                        let v2288 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2279 v2287 
                        let _run_target_args'_v2286 = v2288 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2289 : string = "&*$0"
                        let v2290 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2279 v2289 
                        let _run_target_args'_v2286 = v2290 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2291 : string = "&*$0"
                        let v2292 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2279 v2291 
                        let _run_target_args'_v2286 = v2292 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2294 : Ref<Str> = v2279 |> unbox<Ref<Str>>
                        let _run_target_args'_v2286 = v2294 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2298 : Ref<Str> = v2279 |> unbox<Ref<Str>>
                        let _run_target_args'_v2286 = v2298 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2302 : Ref<Str> = v2279 |> unbox<Ref<Str>>
                        let _run_target_args'_v2286 = v2302 
                        #endif
#else
                        let v2306 : Ref<Str> = v2279 |> unbox<Ref<Str>>
                        let _run_target_args'_v2286 = v2306 
                        #endif
                        let v2309 : Ref<Str> = _run_target_args'_v2286 
                        (* run_target_args'
                        let v2319 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2320 : string = "String::from($0)"
                        let v2321 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2309 v2320 
                        let _run_target_args'_v2319 = v2321 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2322 : string = "String::from($0)"
                        let v2323 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2309 v2322 
                        let _run_target_args'_v2319 = v2323 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2324 : string = "String::from($0)"
                        let v2325 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2309 v2324 
                        let _run_target_args'_v2319 = v2325 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2327 : std_string_String = v2309 |> unbox<std_string_String>
                        let _run_target_args'_v2319 = v2327 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2331 : std_string_String = v2309 |> unbox<std_string_String>
                        let _run_target_args'_v2319 = v2331 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2335 : std_string_String = v2309 |> unbox<std_string_String>
                        let _run_target_args'_v2319 = v2335 
                        #endif
#else
                        let v2339 : std_string_String = v2309 |> unbox<std_string_String>
                        let _run_target_args'_v2319 = v2339 
                        #endif
                        let v2342 : std_string_String = _run_target_args'_v2319 
                        let v2348 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2349 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2342 v2348 
                        let v2350 : string = "v2349"
                        let v2351 : string = v2350 + v1280 
                        let v2352 : string = v2351 + v1280 
                        let v2353 : string = "vec![" + v2352 + "]"
                        let v2354 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2353 
                        let v2355 : string = "leptos::prelude::Fragment::new($0)"
                        let v2356 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2354 v2355 
                        let v2357 : string = "leptos::prelude::AnyView::from($0)"
                        let v2358 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2356 v2357 
                        let v2359 : string = "<" + v1361 + " " + v2275 + ">move || { v2358 }</" + v1361 + ">"
                        let v2360 : string = "leptos::prelude::view! { " + v2359 + " }"
                        let v2361 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2360 
                        let v2362 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2361 |> unbox
                        let v2363 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2364 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2362 v2363 
                        let v2365 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v2366 : string = " " + v2365 + v1280 + ""
                        let v2367 : std_string_String = v1275.l3
                        let v2368 : string = "fable_library_rust::String_::fromString($0)"
                        let v2369 : string = Fable.Core.RustInterop.emitRustExpr v2367 v2368 
                        (* run_target_args'
                        let v2374 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2375 : string = "&*$0"
                        let v2376 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2369 v2375 
                        let _run_target_args'_v2374 = v2376 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2377 : string = "&*$0"
                        let v2378 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2369 v2377 
                        let _run_target_args'_v2374 = v2378 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2379 : string = "&*$0"
                        let v2380 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2369 v2379 
                        let _run_target_args'_v2374 = v2380 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2382 : Ref<Str> = v2369 |> unbox<Ref<Str>>
                        let _run_target_args'_v2374 = v2382 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2386 : Ref<Str> = v2369 |> unbox<Ref<Str>>
                        let _run_target_args'_v2374 = v2386 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2390 : Ref<Str> = v2369 |> unbox<Ref<Str>>
                        let _run_target_args'_v2374 = v2390 
                        #endif
#else
                        let v2394 : Ref<Str> = v2369 |> unbox<Ref<Str>>
                        let _run_target_args'_v2374 = v2394 
                        #endif
                        let v2397 : Ref<Str> = _run_target_args'_v2374 
                        (* run_target_args'
                        let v2407 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2408 : string = "String::from($0)"
                        let v2409 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2397 v2408 
                        let _run_target_args'_v2407 = v2409 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2410 : string = "String::from($0)"
                        let v2411 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2397 v2410 
                        let _run_target_args'_v2407 = v2411 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2412 : string = "String::from($0)"
                        let v2413 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2397 v2412 
                        let _run_target_args'_v2407 = v2413 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2415 : std_string_String = v2397 |> unbox<std_string_String>
                        let _run_target_args'_v2407 = v2415 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2419 : std_string_String = v2397 |> unbox<std_string_String>
                        let _run_target_args'_v2407 = v2419 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2423 : std_string_String = v2397 |> unbox<std_string_String>
                        let _run_target_args'_v2407 = v2423 
                        #endif
#else
                        let v2427 : std_string_String = v2397 |> unbox<std_string_String>
                        let _run_target_args'_v2407 = v2427 
                        #endif
                        let v2430 : std_string_String = _run_target_args'_v2407 
                        let v2436 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2437 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2430 v2436 
                        let v2438 : string = "v2437"
                        let v2439 : string = v2438 + v1280 
                        let v2440 : string = v2439 + v1280 
                        let v2441 : string = "vec![" + v2440 + "]"
                        let v2442 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2441 
                        let v2443 : string = "leptos::prelude::Fragment::new($0)"
                        let v2444 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2442 v2443 
                        let v2445 : string = "leptos::prelude::AnyView::from($0)"
                        let v2446 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2444 v2445 
                        let v2447 : string = "<" + v1361 + " " + v2366 + ">move || { v2446 }</" + v1361 + ">"
                        let v2448 : string = "leptos::prelude::view! { " + v2447 + " }"
                        let v2449 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2448 
                        let v2450 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2449 |> unbox
                        let v2451 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2452 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2450 v2451 
                        let v2453 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v2454 : string = " " + v2453 + v1280 + ""
                        let v2455 : std_string_String = v1275.l4
                        let v2456 : string = "fable_library_rust::String_::fromString($0)"
                        let v2457 : string = Fable.Core.RustInterop.emitRustExpr v2455 v2456 
                        (* run_target_args'
                        let v2462 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2463 : string = "&*$0"
                        let v2464 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2457 v2463 
                        let _run_target_args'_v2462 = v2464 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2465 : string = "&*$0"
                        let v2466 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2457 v2465 
                        let _run_target_args'_v2462 = v2466 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2467 : string = "&*$0"
                        let v2468 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2457 v2467 
                        let _run_target_args'_v2462 = v2468 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2470 : Ref<Str> = v2457 |> unbox<Ref<Str>>
                        let _run_target_args'_v2462 = v2470 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2474 : Ref<Str> = v2457 |> unbox<Ref<Str>>
                        let _run_target_args'_v2462 = v2474 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2478 : Ref<Str> = v2457 |> unbox<Ref<Str>>
                        let _run_target_args'_v2462 = v2478 
                        #endif
#else
                        let v2482 : Ref<Str> = v2457 |> unbox<Ref<Str>>
                        let _run_target_args'_v2462 = v2482 
                        #endif
                        let v2485 : Ref<Str> = _run_target_args'_v2462 
                        (* run_target_args'
                        let v2495 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2496 : string = "String::from($0)"
                        let v2497 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2485 v2496 
                        let _run_target_args'_v2495 = v2497 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2498 : string = "String::from($0)"
                        let v2499 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2485 v2498 
                        let _run_target_args'_v2495 = v2499 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2500 : string = "String::from($0)"
                        let v2501 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2485 v2500 
                        let _run_target_args'_v2495 = v2501 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2503 : std_string_String = v2485 |> unbox<std_string_String>
                        let _run_target_args'_v2495 = v2503 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2507 : std_string_String = v2485 |> unbox<std_string_String>
                        let _run_target_args'_v2495 = v2507 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2511 : std_string_String = v2485 |> unbox<std_string_String>
                        let _run_target_args'_v2495 = v2511 
                        #endif
#else
                        let v2515 : std_string_String = v2485 |> unbox<std_string_String>
                        let _run_target_args'_v2495 = v2515 
                        #endif
                        let v2518 : std_string_String = _run_target_args'_v2495 
                        let v2524 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2525 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2518 v2524 
                        let v2526 : string = "v2525"
                        let v2527 : string = v2526 + v1280 
                        let v2528 : string = v2527 + v1280 
                        let v2529 : string = "vec![" + v2528 + "]"
                        let v2530 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2529 
                        let v2531 : string = "leptos::prelude::Fragment::new($0)"
                        let v2532 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2530 v2531 
                        let v2533 : string = "leptos::prelude::AnyView::from($0)"
                        let v2534 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2532 v2533 
                        let v2535 : string = "<" + v1361 + " " + v2454 + ">move || { v2534 }</" + v1361 + ">"
                        let v2536 : string = "leptos::prelude::view! { " + v2535 + " }"
                        let v2537 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2536 
                        let v2538 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2537 |> unbox
                        let v2539 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2540 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2538 v2539 
                        let v2541 : string = "class=\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\""
                        let v2542 : string = " " + v2541 + v1280 + ""
                        let v2543 : std_string_String = v1275.l0
                        let v2544 : string = "fable_library_rust::String_::fromString($0)"
                        let v2545 : string = Fable.Core.RustInterop.emitRustExpr v2543 v2544 
                        (* run_target_args'
                        let v2550 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2551 : string = "&*$0"
                        let v2552 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2545 v2551 
                        let _run_target_args'_v2550 = v2552 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2553 : string = "&*$0"
                        let v2554 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2545 v2553 
                        let _run_target_args'_v2550 = v2554 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2555 : string = "&*$0"
                        let v2556 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2545 v2555 
                        let _run_target_args'_v2550 = v2556 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2558 : Ref<Str> = v2545 |> unbox<Ref<Str>>
                        let _run_target_args'_v2550 = v2558 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2562 : Ref<Str> = v2545 |> unbox<Ref<Str>>
                        let _run_target_args'_v2550 = v2562 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2566 : Ref<Str> = v2545 |> unbox<Ref<Str>>
                        let _run_target_args'_v2550 = v2566 
                        #endif
#else
                        let v2570 : Ref<Str> = v2545 |> unbox<Ref<Str>>
                        let _run_target_args'_v2550 = v2570 
                        #endif
                        let v2573 : Ref<Str> = _run_target_args'_v2550 
                        (* run_target_args'
                        let v2583 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2584 : string = "String::from($0)"
                        let v2585 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2573 v2584 
                        let _run_target_args'_v2583 = v2585 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2586 : string = "String::from($0)"
                        let v2587 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2573 v2586 
                        let _run_target_args'_v2583 = v2587 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2588 : string = "String::from($0)"
                        let v2589 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2573 v2588 
                        let _run_target_args'_v2583 = v2589 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2591 : std_string_String = v2573 |> unbox<std_string_String>
                        let _run_target_args'_v2583 = v2591 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2595 : std_string_String = v2573 |> unbox<std_string_String>
                        let _run_target_args'_v2583 = v2595 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2599 : std_string_String = v2573 |> unbox<std_string_String>
                        let _run_target_args'_v2583 = v2599 
                        #endif
#else
                        let v2603 : std_string_String = v2573 |> unbox<std_string_String>
                        let _run_target_args'_v2583 = v2603 
                        #endif
                        let v2606 : std_string_String = _run_target_args'_v2583 
                        let v2612 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2613 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2606 v2612 
                        let v2614 : string = "v2613"
                        let v2615 : string = v2614 + v1280 
                        let v2616 : string = v2615 + v1280 
                        let v2617 : string = "vec![" + v2616 + "]"
                        let v2618 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2617 
                        let v2619 : string = "leptos::prelude::Fragment::new($0)"
                        let v2620 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2618 v2619 
                        let v2621 : string = "leptos::prelude::AnyView::from($0)"
                        let v2622 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2620 v2621 
                        let v2623 : string = "<" + v1361 + " " + v2542 + ">move || { v2622 }</" + v1361 + ">"
                        let v2624 : string = "leptos::prelude::view! { " + v2623 + " }"
                        let v2625 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2624 
                        let v2626 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Td>> = v2625 |> unbox
                        let v2627 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2628 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2626 v2627 
                        let v2629 : string = "v2628"
                        let v2630 : string = v2629 + v1280 
                        let v2631 : string = v2630 + v1280 
                        let v2632 : string = "v2540"
                        let v2633 : string = v2632 + v1742 
                        let v2634 : string = v2633 + v2631 
                        let v2635 : string = "v2452"
                        let v2636 : string = v2635 + v1742 
                        let v2637 : string = v2636 + v2634 
                        let v2638 : string = "v2364"
                        let v2639 : string = v2638 + v1742 
                        let v2640 : string = v2639 + v2637 
                        let v2641 : string = "v2273"
                        let v2642 : string = v2641 + v1742 
                        let v2643 : string = v2642 + v2640 
                        let v2644 : string = "v2051"
                        let v2645 : string = v2644 + v1742 
                        let v2646 : string = v2645 + v2643 
                        let v2647 : string = "v1960"
                        let v2648 : string = v2647 + v1742 
                        let v2649 : string = v2648 + v2646 
                        let v2650 : string = "v1869"
                        let v2651 : string = v2650 + v1742 
                        let v2652 : string = v2651 + v2649 
                        let v2653 : string = "v1778"
                        let v2654 : string = v2653 + v1742 
                        let v2655 : string = v2654 + v2652 
                        let v2656 : string = "v1687"
                        let v2657 : string = v2656 + v1742 
                        let v2658 : string = v2657 + v2655 
                        let v2659 : string = "v1599"
                        let v2660 : string = v2659 + v1742 
                        let v2661 : string = v2660 + v2658 
                        let v2662 : string = "v1511"
                        let v2663 : string = v2662 + v1742 
                        let v2664 : string = v2663 + v2661 
                        let v2665 : string = "v1367"
                        let v2666 : string = v2665 + v1742 
                        let v2667 : string = v2666 + v2664 
                        let v2668 : string = "vec![" + v2667 + "]"
                        let v2669 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2668 
                        let v2670 : string = "leptos::prelude::Fragment::new($0)"
                        let v2671 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2669 v2670 
                        let v2672 : string = "leptos::prelude::AnyView::from($0)"
                        let v2673 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2671 v2672 
                        let v2674 : string = "tr"
                        let v2675 : string = "<" + v2674 + " " + v1281 + ">move || { v2673 }</" + v2674 + ">"
                        let v2676 : string = "leptos::prelude::view! { " + v2675 + " }"
                        let v2677 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2676 
                        let v2678 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>> = v2677 |> unbox
                        let v2679 : string = "true; $0 }).collect::<Vec<_>>()"
                        let v2680 : bool = Fable.Core.RustInterop.emitRustExpr v2678 v2679 
                        let v2681 : string = "_vec_map"
                        let v2682 : Vec<leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>>> = Fable.Core.RustInterop.emitRustExpr () v2681 
                        let v2683 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
                        let v2684 : bool = Fable.Core.RustInterop.emitRustExpr v2682 v2683 
                        let v2685 : string = "x"
                        let v2686 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>> = Fable.Core.RustInterop.emitRustExpr () v2685 
                        let v2687 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2688 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2686 v2687 
                        let v2689 : string = "true; $0 }).collect::<Vec<_>>()"
                        let v2690 : bool = Fable.Core.RustInterop.emitRustExpr v2688 v2689 
                        let v2691 : string = "_vec_map"
                        let v2692 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2691 
                        let v2693 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2694 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2692 v2693 
                        let v2695 : string = "v2694"
                        let v2696 : string = v2695 + v1280 
                        let v2697 : string = v2696 + v1280 
                        let v2698 : string = "vec![" + v2697 + "]"
                        let v2699 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2698 
                        let v2700 : string = "leptos::prelude::Fragment::new($0)"
                        let v2701 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2699 v2700 
                        let v2702 : string = "transaction.tr_head_render (1)"
                        let v2703 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v2704 : bool = Fable.Core.RustInterop.emitRustExpr v2702 v2703 
                        let v2705 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v2706 : string = " " + v2705 + v1280 + ""
                        let v2707 : string = "Account"
                        (* run_target_args'
                        let v2712 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2713 : string = "&*$0"
                        let v2714 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2707 v2713 
                        let _run_target_args'_v2712 = v2714 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2715 : string = "&*$0"
                        let v2716 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2707 v2715 
                        let _run_target_args'_v2712 = v2716 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2717 : string = "&*$0"
                        let v2718 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2707 v2717 
                        let _run_target_args'_v2712 = v2718 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2720 : Ref<Str> = v2707 |> unbox<Ref<Str>>
                        let _run_target_args'_v2712 = v2720 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2724 : Ref<Str> = v2707 |> unbox<Ref<Str>>
                        let _run_target_args'_v2712 = v2724 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2728 : Ref<Str> = v2707 |> unbox<Ref<Str>>
                        let _run_target_args'_v2712 = v2728 
                        #endif
#else
                        let v2732 : Ref<Str> = v2707 |> unbox<Ref<Str>>
                        let _run_target_args'_v2712 = v2732 
                        #endif
                        let v2735 : Ref<Str> = _run_target_args'_v2712 
                        (* run_target_args'
                        let v2745 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2746 : string = "String::from($0)"
                        let v2747 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2735 v2746 
                        let _run_target_args'_v2745 = v2747 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2748 : string = "String::from($0)"
                        let v2749 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2735 v2748 
                        let _run_target_args'_v2745 = v2749 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2750 : string = "String::from($0)"
                        let v2751 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2735 v2750 
                        let _run_target_args'_v2745 = v2751 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2753 : std_string_String = v2735 |> unbox<std_string_String>
                        let _run_target_args'_v2745 = v2753 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2757 : std_string_String = v2735 |> unbox<std_string_String>
                        let _run_target_args'_v2745 = v2757 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2761 : std_string_String = v2735 |> unbox<std_string_String>
                        let _run_target_args'_v2745 = v2761 
                        #endif
#else
                        let v2765 : std_string_String = v2735 |> unbox<std_string_String>
                        let _run_target_args'_v2745 = v2765 
                        #endif
                        let v2768 : std_string_String = _run_target_args'_v2745 
                        let v2774 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2775 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2768 v2774 
                        let v2776 : string = "v2775"
                        let v2777 : string = v2776 + v1280 
                        let v2778 : string = v2777 + v1280 
                        let v2779 : string = "vec![" + v2778 + "]"
                        let v2780 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2779 
                        let v2781 : string = "leptos::prelude::Fragment::new($0)"
                        let v2782 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2780 v2781 
                        let v2783 : string = "leptos::prelude::AnyView::from($0)"
                        let v2784 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2782 v2783 
                        let v2785 : string = "th"
                        let v2786 : string = "<" + v2785 + " " + v2706 + ">move || { v2784 }</" + v2785 + ">"
                        let v2787 : string = "leptos::prelude::view! { " + v2786 + " }"
                        let v2788 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2787 
                        let v2789 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v2788 |> unbox
                        let v2790 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2791 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2789 v2790 
                        let v2792 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v2793 : string = " " + v2792 + v1280 + ""
                        let v2794 : string = "Block Timestamp"
                        (* run_target_args'
                        let v2799 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2800 : string = "&*$0"
                        let v2801 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2794 v2800 
                        let _run_target_args'_v2799 = v2801 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2802 : string = "&*$0"
                        let v2803 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2794 v2802 
                        let _run_target_args'_v2799 = v2803 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2804 : string = "&*$0"
                        let v2805 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2794 v2804 
                        let _run_target_args'_v2799 = v2805 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2807 : Ref<Str> = v2794 |> unbox<Ref<Str>>
                        let _run_target_args'_v2799 = v2807 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2811 : Ref<Str> = v2794 |> unbox<Ref<Str>>
                        let _run_target_args'_v2799 = v2811 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2815 : Ref<Str> = v2794 |> unbox<Ref<Str>>
                        let _run_target_args'_v2799 = v2815 
                        #endif
#else
                        let v2819 : Ref<Str> = v2794 |> unbox<Ref<Str>>
                        let _run_target_args'_v2799 = v2819 
                        #endif
                        let v2822 : Ref<Str> = _run_target_args'_v2799 
                        (* run_target_args'
                        let v2832 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2833 : string = "String::from($0)"
                        let v2834 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2822 v2833 
                        let _run_target_args'_v2832 = v2834 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2835 : string = "String::from($0)"
                        let v2836 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2822 v2835 
                        let _run_target_args'_v2832 = v2836 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2837 : string = "String::from($0)"
                        let v2838 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2822 v2837 
                        let _run_target_args'_v2832 = v2838 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2840 : std_string_String = v2822 |> unbox<std_string_String>
                        let _run_target_args'_v2832 = v2840 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2844 : std_string_String = v2822 |> unbox<std_string_String>
                        let _run_target_args'_v2832 = v2844 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2848 : std_string_String = v2822 |> unbox<std_string_String>
                        let _run_target_args'_v2832 = v2848 
                        #endif
#else
                        let v2852 : std_string_String = v2822 |> unbox<std_string_String>
                        let _run_target_args'_v2832 = v2852 
                        #endif
                        let v2855 : std_string_String = _run_target_args'_v2832 
                        let v2861 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2862 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2855 v2861 
                        let v2863 : string = "v2862"
                        let v2864 : string = v2863 + v1280 
                        let v2865 : string = v2864 + v1280 
                        let v2866 : string = "vec![" + v2865 + "]"
                        let v2867 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2866 
                        let v2868 : string = "leptos::prelude::Fragment::new($0)"
                        let v2869 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2867 v2868 
                        let v2870 : string = "leptos::prelude::AnyView::from($0)"
                        let v2871 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2869 v2870 
                        let v2872 : string = "<" + v2785 + " " + v2793 + ">move || { v2871 }</" + v2785 + ">"
                        let v2873 : string = "leptos::prelude::view! { " + v2872 + " }"
                        let v2874 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2873 
                        let v2875 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v2874 |> unbox
                        let v2876 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2877 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2875 v2876 
                        let v2878 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v2879 : string = " " + v2878 + v1280 + ""
                        let v2880 : string = "Predecessor"
                        (* run_target_args'
                        let v2885 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2886 : string = "&*$0"
                        let v2887 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2880 v2886 
                        let _run_target_args'_v2885 = v2887 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2888 : string = "&*$0"
                        let v2889 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2880 v2888 
                        let _run_target_args'_v2885 = v2889 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2890 : string = "&*$0"
                        let v2891 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2880 v2890 
                        let _run_target_args'_v2885 = v2891 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2893 : Ref<Str> = v2880 |> unbox<Ref<Str>>
                        let _run_target_args'_v2885 = v2893 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2897 : Ref<Str> = v2880 |> unbox<Ref<Str>>
                        let _run_target_args'_v2885 = v2897 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2901 : Ref<Str> = v2880 |> unbox<Ref<Str>>
                        let _run_target_args'_v2885 = v2901 
                        #endif
#else
                        let v2905 : Ref<Str> = v2880 |> unbox<Ref<Str>>
                        let _run_target_args'_v2885 = v2905 
                        #endif
                        let v2908 : Ref<Str> = _run_target_args'_v2885 
                        (* run_target_args'
                        let v2918 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2919 : string = "String::from($0)"
                        let v2920 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2908 v2919 
                        let _run_target_args'_v2918 = v2920 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2921 : string = "String::from($0)"
                        let v2922 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2908 v2921 
                        let _run_target_args'_v2918 = v2922 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2923 : string = "String::from($0)"
                        let v2924 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2908 v2923 
                        let _run_target_args'_v2918 = v2924 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2926 : std_string_String = v2908 |> unbox<std_string_String>
                        let _run_target_args'_v2918 = v2926 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2930 : std_string_String = v2908 |> unbox<std_string_String>
                        let _run_target_args'_v2918 = v2930 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2934 : std_string_String = v2908 |> unbox<std_string_String>
                        let _run_target_args'_v2918 = v2934 
                        #endif
#else
                        let v2938 : std_string_String = v2908 |> unbox<std_string_String>
                        let _run_target_args'_v2918 = v2938 
                        #endif
                        let v2941 : std_string_String = _run_target_args'_v2918 
                        let v2947 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v2948 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2941 v2947 
                        let v2949 : string = "v2948"
                        let v2950 : string = v2949 + v1280 
                        let v2951 : string = v2950 + v1280 
                        let v2952 : string = "vec![" + v2951 + "]"
                        let v2953 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2952 
                        let v2954 : string = "leptos::prelude::Fragment::new($0)"
                        let v2955 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2953 v2954 
                        let v2956 : string = "leptos::prelude::AnyView::from($0)"
                        let v2957 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2955 v2956 
                        let v2958 : string = "<" + v2785 + " " + v2879 + ">move || { v2957 }</" + v2785 + ">"
                        let v2959 : string = "leptos::prelude::view! { " + v2958 + " }"
                        let v2960 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v2959 
                        let v2961 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v2960 |> unbox
                        let v2962 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v2963 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2961 v2962 
                        let v2964 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v2965 : string = " " + v2964 + v1280 + ""
                        let v2966 : string = "Receiver"
                        (* run_target_args'
                        let v2971 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2972 : string = "&*$0"
                        let v2973 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2966 v2972 
                        let _run_target_args'_v2971 = v2973 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2974 : string = "&*$0"
                        let v2975 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2966 v2974 
                        let _run_target_args'_v2971 = v2975 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2976 : string = "&*$0"
                        let v2977 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2966 v2976 
                        let _run_target_args'_v2971 = v2977 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2979 : Ref<Str> = v2966 |> unbox<Ref<Str>>
                        let _run_target_args'_v2971 = v2979 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2983 : Ref<Str> = v2966 |> unbox<Ref<Str>>
                        let _run_target_args'_v2971 = v2983 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2987 : Ref<Str> = v2966 |> unbox<Ref<Str>>
                        let _run_target_args'_v2971 = v2987 
                        #endif
#else
                        let v2991 : Ref<Str> = v2966 |> unbox<Ref<Str>>
                        let _run_target_args'_v2971 = v2991 
                        #endif
                        let v2994 : Ref<Str> = _run_target_args'_v2971 
                        (* run_target_args'
                        let v3004 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3005 : string = "String::from($0)"
                        let v3006 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2994 v3005 
                        let _run_target_args'_v3004 = v3006 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3007 : string = "String::from($0)"
                        let v3008 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2994 v3007 
                        let _run_target_args'_v3004 = v3008 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3009 : string = "String::from($0)"
                        let v3010 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2994 v3009 
                        let _run_target_args'_v3004 = v3010 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3012 : std_string_String = v2994 |> unbox<std_string_String>
                        let _run_target_args'_v3004 = v3012 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3016 : std_string_String = v2994 |> unbox<std_string_String>
                        let _run_target_args'_v3004 = v3016 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3020 : std_string_String = v2994 |> unbox<std_string_String>
                        let _run_target_args'_v3004 = v3020 
                        #endif
#else
                        let v3024 : std_string_String = v2994 |> unbox<std_string_String>
                        let _run_target_args'_v3004 = v3024 
                        #endif
                        let v3027 : std_string_String = _run_target_args'_v3004 
                        let v3033 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3034 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3027 v3033 
                        let v3035 : string = "v3034"
                        let v3036 : string = v3035 + v1280 
                        let v3037 : string = v3036 + v1280 
                        let v3038 : string = "vec![" + v3037 + "]"
                        let v3039 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3038 
                        let v3040 : string = "leptos::prelude::Fragment::new($0)"
                        let v3041 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3039 v3040 
                        let v3042 : string = "leptos::prelude::AnyView::from($0)"
                        let v3043 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3041 v3042 
                        let v3044 : string = "<" + v2785 + " " + v2965 + ">move || { v3043 }</" + v2785 + ">"
                        let v3045 : string = "leptos::prelude::view! { " + v3044 + " }"
                        let v3046 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3045 
                        let v3047 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3046 |> unbox
                        let v3048 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3049 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3047 v3048 
                        let v3050 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3051 : string = " " + v3050 + v1280 + ""
                        let v3052 : string = "Action"
                        (* run_target_args'
                        let v3057 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3058 : string = "&*$0"
                        let v3059 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3052 v3058 
                        let _run_target_args'_v3057 = v3059 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3060 : string = "&*$0"
                        let v3061 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3052 v3060 
                        let _run_target_args'_v3057 = v3061 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3062 : string = "&*$0"
                        let v3063 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3052 v3062 
                        let _run_target_args'_v3057 = v3063 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3065 : Ref<Str> = v3052 |> unbox<Ref<Str>>
                        let _run_target_args'_v3057 = v3065 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3069 : Ref<Str> = v3052 |> unbox<Ref<Str>>
                        let _run_target_args'_v3057 = v3069 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3073 : Ref<Str> = v3052 |> unbox<Ref<Str>>
                        let _run_target_args'_v3057 = v3073 
                        #endif
#else
                        let v3077 : Ref<Str> = v3052 |> unbox<Ref<Str>>
                        let _run_target_args'_v3057 = v3077 
                        #endif
                        let v3080 : Ref<Str> = _run_target_args'_v3057 
                        (* run_target_args'
                        let v3090 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3091 : string = "String::from($0)"
                        let v3092 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3080 v3091 
                        let _run_target_args'_v3090 = v3092 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3093 : string = "String::from($0)"
                        let v3094 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3080 v3093 
                        let _run_target_args'_v3090 = v3094 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3095 : string = "String::from($0)"
                        let v3096 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3080 v3095 
                        let _run_target_args'_v3090 = v3096 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3098 : std_string_String = v3080 |> unbox<std_string_String>
                        let _run_target_args'_v3090 = v3098 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3102 : std_string_String = v3080 |> unbox<std_string_String>
                        let _run_target_args'_v3090 = v3102 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3106 : std_string_String = v3080 |> unbox<std_string_String>
                        let _run_target_args'_v3090 = v3106 
                        #endif
#else
                        let v3110 : std_string_String = v3080 |> unbox<std_string_String>
                        let _run_target_args'_v3090 = v3110 
                        #endif
                        let v3113 : std_string_String = _run_target_args'_v3090 
                        let v3119 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3120 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3113 v3119 
                        let v3121 : string = "v3120"
                        let v3122 : string = v3121 + v1280 
                        let v3123 : string = v3122 + v1280 
                        let v3124 : string = "vec![" + v3123 + "]"
                        let v3125 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3124 
                        let v3126 : string = "leptos::prelude::Fragment::new($0)"
                        let v3127 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3125 v3126 
                        let v3128 : string = "leptos::prelude::AnyView::from($0)"
                        let v3129 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3127 v3128 
                        let v3130 : string = "<" + v2785 + " " + v3051 + ">move || { v3129 }</" + v2785 + ">"
                        let v3131 : string = "leptos::prelude::view! { " + v3130 + " }"
                        let v3132 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3131 
                        let v3133 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3132 |> unbox
                        let v3134 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3135 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3133 v3134 
                        let v3136 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3137 : string = " " + v3136 + v1280 + ""
                        let v3138 : string = "Deposit"
                        (* run_target_args'
                        let v3143 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3144 : string = "&*$0"
                        let v3145 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3138 v3144 
                        let _run_target_args'_v3143 = v3145 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3146 : string = "&*$0"
                        let v3147 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3138 v3146 
                        let _run_target_args'_v3143 = v3147 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3148 : string = "&*$0"
                        let v3149 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3138 v3148 
                        let _run_target_args'_v3143 = v3149 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3151 : Ref<Str> = v3138 |> unbox<Ref<Str>>
                        let _run_target_args'_v3143 = v3151 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3155 : Ref<Str> = v3138 |> unbox<Ref<Str>>
                        let _run_target_args'_v3143 = v3155 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3159 : Ref<Str> = v3138 |> unbox<Ref<Str>>
                        let _run_target_args'_v3143 = v3159 
                        #endif
#else
                        let v3163 : Ref<Str> = v3138 |> unbox<Ref<Str>>
                        let _run_target_args'_v3143 = v3163 
                        #endif
                        let v3166 : Ref<Str> = _run_target_args'_v3143 
                        (* run_target_args'
                        let v3176 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3177 : string = "String::from($0)"
                        let v3178 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3166 v3177 
                        let _run_target_args'_v3176 = v3178 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3179 : string = "String::from($0)"
                        let v3180 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3166 v3179 
                        let _run_target_args'_v3176 = v3180 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3181 : string = "String::from($0)"
                        let v3182 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3166 v3181 
                        let _run_target_args'_v3176 = v3182 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3184 : std_string_String = v3166 |> unbox<std_string_String>
                        let _run_target_args'_v3176 = v3184 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3188 : std_string_String = v3166 |> unbox<std_string_String>
                        let _run_target_args'_v3176 = v3188 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3192 : std_string_String = v3166 |> unbox<std_string_String>
                        let _run_target_args'_v3176 = v3192 
                        #endif
#else
                        let v3196 : std_string_String = v3166 |> unbox<std_string_String>
                        let _run_target_args'_v3176 = v3196 
                        #endif
                        let v3199 : std_string_String = _run_target_args'_v3176 
                        let v3205 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3206 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3199 v3205 
                        let v3207 : string = "v3206"
                        let v3208 : string = v3207 + v1280 
                        let v3209 : string = v3208 + v1280 
                        let v3210 : string = "vec![" + v3209 + "]"
                        let v3211 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3210 
                        let v3212 : string = "leptos::prelude::Fragment::new($0)"
                        let v3213 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3211 v3212 
                        let v3214 : string = "leptos::prelude::AnyView::from($0)"
                        let v3215 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3213 v3214 
                        let v3216 : string = "<" + v2785 + " " + v3137 + ">move || { v3215 }</" + v2785 + ">"
                        let v3217 : string = "leptos::prelude::view! { " + v3216 + " }"
                        let v3218 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3217 
                        let v3219 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3218 |> unbox
                        let v3220 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3221 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3219 v3220 
                        let v3222 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3223 : string = " " + v3222 + v1280 + ""
                        let v3224 : string = "Fee"
                        (* run_target_args'
                        let v3229 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3230 : string = "&*$0"
                        let v3231 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3224 v3230 
                        let _run_target_args'_v3229 = v3231 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3232 : string = "&*$0"
                        let v3233 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3224 v3232 
                        let _run_target_args'_v3229 = v3233 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3234 : string = "&*$0"
                        let v3235 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3224 v3234 
                        let _run_target_args'_v3229 = v3235 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3237 : Ref<Str> = v3224 |> unbox<Ref<Str>>
                        let _run_target_args'_v3229 = v3237 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3241 : Ref<Str> = v3224 |> unbox<Ref<Str>>
                        let _run_target_args'_v3229 = v3241 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3245 : Ref<Str> = v3224 |> unbox<Ref<Str>>
                        let _run_target_args'_v3229 = v3245 
                        #endif
#else
                        let v3249 : Ref<Str> = v3224 |> unbox<Ref<Str>>
                        let _run_target_args'_v3229 = v3249 
                        #endif
                        let v3252 : Ref<Str> = _run_target_args'_v3229 
                        (* run_target_args'
                        let v3262 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3263 : string = "String::from($0)"
                        let v3264 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3252 v3263 
                        let _run_target_args'_v3262 = v3264 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3265 : string = "String::from($0)"
                        let v3266 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3252 v3265 
                        let _run_target_args'_v3262 = v3266 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3267 : string = "String::from($0)"
                        let v3268 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3252 v3267 
                        let _run_target_args'_v3262 = v3268 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3270 : std_string_String = v3252 |> unbox<std_string_String>
                        let _run_target_args'_v3262 = v3270 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3274 : std_string_String = v3252 |> unbox<std_string_String>
                        let _run_target_args'_v3262 = v3274 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3278 : std_string_String = v3252 |> unbox<std_string_String>
                        let _run_target_args'_v3262 = v3278 
                        #endif
#else
                        let v3282 : std_string_String = v3252 |> unbox<std_string_String>
                        let _run_target_args'_v3262 = v3282 
                        #endif
                        let v3285 : std_string_String = _run_target_args'_v3262 
                        let v3291 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3292 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3285 v3291 
                        let v3293 : string = "v3292"
                        let v3294 : string = v3293 + v1280 
                        let v3295 : string = v3294 + v1280 
                        let v3296 : string = "vec![" + v3295 + "]"
                        let v3297 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3296 
                        let v3298 : string = "leptos::prelude::Fragment::new($0)"
                        let v3299 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3297 v3298 
                        let v3300 : string = "leptos::prelude::AnyView::from($0)"
                        let v3301 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3299 v3300 
                        let v3302 : string = "<" + v2785 + " " + v3223 + ">move || { v3301 }</" + v2785 + ">"
                        let v3303 : string = "leptos::prelude::view! { " + v3302 + " }"
                        let v3304 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3303 
                        let v3305 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3304 |> unbox
                        let v3306 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3307 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3305 v3306 
                        let v3308 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3309 : string = " " + v3308 + v1280 + ""
                        let v3310 : string = "Block Height"
                        (* run_target_args'
                        let v3315 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3316 : string = "&*$0"
                        let v3317 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3310 v3316 
                        let _run_target_args'_v3315 = v3317 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3318 : string = "&*$0"
                        let v3319 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3310 v3318 
                        let _run_target_args'_v3315 = v3319 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3320 : string = "&*$0"
                        let v3321 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3310 v3320 
                        let _run_target_args'_v3315 = v3321 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3323 : Ref<Str> = v3310 |> unbox<Ref<Str>>
                        let _run_target_args'_v3315 = v3323 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3327 : Ref<Str> = v3310 |> unbox<Ref<Str>>
                        let _run_target_args'_v3315 = v3327 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3331 : Ref<Str> = v3310 |> unbox<Ref<Str>>
                        let _run_target_args'_v3315 = v3331 
                        #endif
#else
                        let v3335 : Ref<Str> = v3310 |> unbox<Ref<Str>>
                        let _run_target_args'_v3315 = v3335 
                        #endif
                        let v3338 : Ref<Str> = _run_target_args'_v3315 
                        (* run_target_args'
                        let v3348 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3349 : string = "String::from($0)"
                        let v3350 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3338 v3349 
                        let _run_target_args'_v3348 = v3350 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3351 : string = "String::from($0)"
                        let v3352 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3338 v3351 
                        let _run_target_args'_v3348 = v3352 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3353 : string = "String::from($0)"
                        let v3354 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3338 v3353 
                        let _run_target_args'_v3348 = v3354 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3356 : std_string_String = v3338 |> unbox<std_string_String>
                        let _run_target_args'_v3348 = v3356 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3360 : std_string_String = v3338 |> unbox<std_string_String>
                        let _run_target_args'_v3348 = v3360 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3364 : std_string_String = v3338 |> unbox<std_string_String>
                        let _run_target_args'_v3348 = v3364 
                        #endif
#else
                        let v3368 : std_string_String = v3338 |> unbox<std_string_String>
                        let _run_target_args'_v3348 = v3368 
                        #endif
                        let v3371 : std_string_String = _run_target_args'_v3348 
                        let v3377 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3378 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3371 v3377 
                        let v3379 : string = "v3378"
                        let v3380 : string = v3379 + v1280 
                        let v3381 : string = v3380 + v1280 
                        let v3382 : string = "vec![" + v3381 + "]"
                        let v3383 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3382 
                        let v3384 : string = "leptos::prelude::Fragment::new($0)"
                        let v3385 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3383 v3384 
                        let v3386 : string = "leptos::prelude::AnyView::from($0)"
                        let v3387 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3385 v3386 
                        let v3388 : string = "<" + v2785 + " " + v3309 + ">move || { v3387 }</" + v2785 + ">"
                        let v3389 : string = "leptos::prelude::view! { " + v3388 + " }"
                        let v3390 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3389 
                        let v3391 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3390 |> unbox
                        let v3392 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3393 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3391 v3392 
                        let v3394 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3395 : string = " " + v3394 + v1280 + ""
                        let v3396 : int32 = 0
                        let v3397 : bool = method280(v360, v3396)
                        let v3398 : bool = false = v3397
                        let v3400 : string =
                            if v3398 then
                                v1280
                            else
                                let v3399 : string = "Logs"
                                v3399
                        (* run_target_args'
                        let v3405 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3406 : string = "&*$0"
                        let v3407 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3400 v3406 
                        let _run_target_args'_v3405 = v3407 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3408 : string = "&*$0"
                        let v3409 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3400 v3408 
                        let _run_target_args'_v3405 = v3409 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3410 : string = "&*$0"
                        let v3411 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3400 v3410 
                        let _run_target_args'_v3405 = v3411 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3413 : Ref<Str> = v3400 |> unbox<Ref<Str>>
                        let _run_target_args'_v3405 = v3413 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3417 : Ref<Str> = v3400 |> unbox<Ref<Str>>
                        let _run_target_args'_v3405 = v3417 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3421 : Ref<Str> = v3400 |> unbox<Ref<Str>>
                        let _run_target_args'_v3405 = v3421 
                        #endif
#else
                        let v3425 : Ref<Str> = v3400 |> unbox<Ref<Str>>
                        let _run_target_args'_v3405 = v3425 
                        #endif
                        let v3428 : Ref<Str> = _run_target_args'_v3405 
                        (* run_target_args'
                        let v3438 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3439 : string = "String::from($0)"
                        let v3440 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3428 v3439 
                        let _run_target_args'_v3438 = v3440 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3441 : string = "String::from($0)"
                        let v3442 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3428 v3441 
                        let _run_target_args'_v3438 = v3442 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3443 : string = "String::from($0)"
                        let v3444 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3428 v3443 
                        let _run_target_args'_v3438 = v3444 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3446 : std_string_String = v3428 |> unbox<std_string_String>
                        let _run_target_args'_v3438 = v3446 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3450 : std_string_String = v3428 |> unbox<std_string_String>
                        let _run_target_args'_v3438 = v3450 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3454 : std_string_String = v3428 |> unbox<std_string_String>
                        let _run_target_args'_v3438 = v3454 
                        #endif
#else
                        let v3458 : std_string_String = v3428 |> unbox<std_string_String>
                        let _run_target_args'_v3438 = v3458 
                        #endif
                        let v3461 : std_string_String = _run_target_args'_v3438 
                        let v3467 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3468 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3461 v3467 
                        let v3469 : string = "v3468"
                        let v3470 : string = v3469 + v1280 
                        let v3471 : string = v3470 + v1280 
                        let v3472 : string = "vec![" + v3471 + "]"
                        let v3473 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3472 
                        let v3474 : string = "leptos::prelude::Fragment::new($0)"
                        let v3475 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3473 v3474 
                        let v3476 : string = "leptos::prelude::AnyView::from($0)"
                        let v3477 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3475 v3476 
                        let v3478 : string = "<" + v2785 + " " + v3395 + ">move || { v3477 }</" + v2785 + ">"
                        let v3479 : string = "leptos::prelude::view! { " + v3478 + " }"
                        let v3480 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3479 
                        let v3481 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3480 |> unbox
                        let v3482 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3483 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3481 v3482 
                        let v3484 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3485 : string = " " + v3484 + v1280 + ""
                        let v3486 : string = "Outcome Status"
                        (* run_target_args'
                        let v3491 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3492 : string = "&*$0"
                        let v3493 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3486 v3492 
                        let _run_target_args'_v3491 = v3493 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3494 : string = "&*$0"
                        let v3495 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3486 v3494 
                        let _run_target_args'_v3491 = v3495 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3496 : string = "&*$0"
                        let v3497 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3486 v3496 
                        let _run_target_args'_v3491 = v3497 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3499 : Ref<Str> = v3486 |> unbox<Ref<Str>>
                        let _run_target_args'_v3491 = v3499 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3503 : Ref<Str> = v3486 |> unbox<Ref<Str>>
                        let _run_target_args'_v3491 = v3503 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3507 : Ref<Str> = v3486 |> unbox<Ref<Str>>
                        let _run_target_args'_v3491 = v3507 
                        #endif
#else
                        let v3511 : Ref<Str> = v3486 |> unbox<Ref<Str>>
                        let _run_target_args'_v3491 = v3511 
                        #endif
                        let v3514 : Ref<Str> = _run_target_args'_v3491 
                        (* run_target_args'
                        let v3524 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3525 : string = "String::from($0)"
                        let v3526 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3514 v3525 
                        let _run_target_args'_v3524 = v3526 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3527 : string = "String::from($0)"
                        let v3528 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3514 v3527 
                        let _run_target_args'_v3524 = v3528 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3529 : string = "String::from($0)"
                        let v3530 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3514 v3529 
                        let _run_target_args'_v3524 = v3530 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3532 : std_string_String = v3514 |> unbox<std_string_String>
                        let _run_target_args'_v3524 = v3532 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3536 : std_string_String = v3514 |> unbox<std_string_String>
                        let _run_target_args'_v3524 = v3536 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3540 : std_string_String = v3514 |> unbox<std_string_String>
                        let _run_target_args'_v3524 = v3540 
                        #endif
#else
                        let v3544 : std_string_String = v3514 |> unbox<std_string_String>
                        let _run_target_args'_v3524 = v3544 
                        #endif
                        let v3547 : std_string_String = _run_target_args'_v3524 
                        let v3553 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3554 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3547 v3553 
                        let v3555 : string = "v3554"
                        let v3556 : string = v3555 + v1280 
                        let v3557 : string = v3556 + v1280 
                        let v3558 : string = "vec![" + v3557 + "]"
                        let v3559 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3558 
                        let v3560 : string = "leptos::prelude::Fragment::new($0)"
                        let v3561 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3559 v3560 
                        let v3562 : string = "leptos::prelude::AnyView::from($0)"
                        let v3563 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3561 v3562 
                        let v3564 : string = "<" + v2785 + " " + v3485 + ">move || { v3563 }</" + v2785 + ">"
                        let v3565 : string = "leptos::prelude::view! { " + v3564 + " }"
                        let v3566 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3565 
                        let v3567 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3566 |> unbox
                        let v3568 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3569 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3567 v3568 
                        let v3570 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3571 : string = " " + v3570 + v1280 + ""
                        let v3572 : string = "Hash"
                        (* run_target_args'
                        let v3577 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3578 : string = "&*$0"
                        let v3579 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3572 v3578 
                        let _run_target_args'_v3577 = v3579 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3580 : string = "&*$0"
                        let v3581 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3572 v3580 
                        let _run_target_args'_v3577 = v3581 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3582 : string = "&*$0"
                        let v3583 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3572 v3582 
                        let _run_target_args'_v3577 = v3583 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3585 : Ref<Str> = v3572 |> unbox<Ref<Str>>
                        let _run_target_args'_v3577 = v3585 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3589 : Ref<Str> = v3572 |> unbox<Ref<Str>>
                        let _run_target_args'_v3577 = v3589 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3593 : Ref<Str> = v3572 |> unbox<Ref<Str>>
                        let _run_target_args'_v3577 = v3593 
                        #endif
#else
                        let v3597 : Ref<Str> = v3572 |> unbox<Ref<Str>>
                        let _run_target_args'_v3577 = v3597 
                        #endif
                        let v3600 : Ref<Str> = _run_target_args'_v3577 
                        (* run_target_args'
                        let v3610 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3611 : string = "String::from($0)"
                        let v3612 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3600 v3611 
                        let _run_target_args'_v3610 = v3612 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3613 : string = "String::from($0)"
                        let v3614 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3600 v3613 
                        let _run_target_args'_v3610 = v3614 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3615 : string = "String::from($0)"
                        let v3616 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3600 v3615 
                        let _run_target_args'_v3610 = v3616 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3618 : std_string_String = v3600 |> unbox<std_string_String>
                        let _run_target_args'_v3610 = v3618 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3622 : std_string_String = v3600 |> unbox<std_string_String>
                        let _run_target_args'_v3610 = v3622 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3626 : std_string_String = v3600 |> unbox<std_string_String>
                        let _run_target_args'_v3610 = v3626 
                        #endif
#else
                        let v3630 : std_string_String = v3600 |> unbox<std_string_String>
                        let _run_target_args'_v3610 = v3630 
                        #endif
                        let v3633 : std_string_String = _run_target_args'_v3610 
                        let v3639 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3640 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3633 v3639 
                        let v3641 : string = "v3640"
                        let v3642 : string = v3641 + v1280 
                        let v3643 : string = v3642 + v1280 
                        let v3644 : string = "vec![" + v3643 + "]"
                        let v3645 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3644 
                        let v3646 : string = "leptos::prelude::Fragment::new($0)"
                        let v3647 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3645 v3646 
                        let v3648 : string = "leptos::prelude::AnyView::from($0)"
                        let v3649 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3647 v3648 
                        let v3650 : string = "<" + v2785 + " " + v3571 + ">move || { v3649 }</" + v2785 + ">"
                        let v3651 : string = "leptos::prelude::view! { " + v3650 + " }"
                        let v3652 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3651 
                        let v3653 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3652 |> unbox
                        let v3654 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3655 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3653 v3654 
                        let v3656 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3657 : string = " " + v3656 + v1280 + ""
                        let v3658 : string = "Block Hash"
                        (* run_target_args'
                        let v3663 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3664 : string = "&*$0"
                        let v3665 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3658 v3664 
                        let _run_target_args'_v3663 = v3665 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3666 : string = "&*$0"
                        let v3667 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3658 v3666 
                        let _run_target_args'_v3663 = v3667 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3668 : string = "&*$0"
                        let v3669 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3658 v3668 
                        let _run_target_args'_v3663 = v3669 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3671 : Ref<Str> = v3658 |> unbox<Ref<Str>>
                        let _run_target_args'_v3663 = v3671 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3675 : Ref<Str> = v3658 |> unbox<Ref<Str>>
                        let _run_target_args'_v3663 = v3675 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3679 : Ref<Str> = v3658 |> unbox<Ref<Str>>
                        let _run_target_args'_v3663 = v3679 
                        #endif
#else
                        let v3683 : Ref<Str> = v3658 |> unbox<Ref<Str>>
                        let _run_target_args'_v3663 = v3683 
                        #endif
                        let v3686 : Ref<Str> = _run_target_args'_v3663 
                        (* run_target_args'
                        let v3696 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3697 : string = "String::from($0)"
                        let v3698 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3686 v3697 
                        let _run_target_args'_v3696 = v3698 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3699 : string = "String::from($0)"
                        let v3700 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3686 v3699 
                        let _run_target_args'_v3696 = v3700 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3701 : string = "String::from($0)"
                        let v3702 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3686 v3701 
                        let _run_target_args'_v3696 = v3702 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3704 : std_string_String = v3686 |> unbox<std_string_String>
                        let _run_target_args'_v3696 = v3704 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3708 : std_string_String = v3686 |> unbox<std_string_String>
                        let _run_target_args'_v3696 = v3708 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3712 : std_string_String = v3686 |> unbox<std_string_String>
                        let _run_target_args'_v3696 = v3712 
                        #endif
#else
                        let v3716 : std_string_String = v3686 |> unbox<std_string_String>
                        let _run_target_args'_v3696 = v3716 
                        #endif
                        let v3719 : std_string_String = _run_target_args'_v3696 
                        let v3725 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3726 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3719 v3725 
                        let v3727 : string = "v3726"
                        let v3728 : string = v3727 + v1280 
                        let v3729 : string = v3728 + v1280 
                        let v3730 : string = "vec![" + v3729 + "]"
                        let v3731 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3730 
                        let v3732 : string = "leptos::prelude::Fragment::new($0)"
                        let v3733 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3731 v3732 
                        let v3734 : string = "leptos::prelude::AnyView::from($0)"
                        let v3735 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3733 v3734 
                        let v3736 : string = "<" + v2785 + " " + v3657 + ">move || { v3735 }</" + v2785 + ">"
                        let v3737 : string = "leptos::prelude::view! { " + v3736 + " }"
                        let v3738 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3737 
                        let v3739 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3738 |> unbox
                        let v3740 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3741 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3739 v3740 
                        let v3742 : string = "class=\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\""
                        let v3743 : string = " " + v3742 + v1280 + ""
                        let v3744 : string = "Receipt ID"
                        (* run_target_args'
                        let v3749 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3750 : string = "&*$0"
                        let v3751 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3744 v3750 
                        let _run_target_args'_v3749 = v3751 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3752 : string = "&*$0"
                        let v3753 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3744 v3752 
                        let _run_target_args'_v3749 = v3753 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3754 : string = "&*$0"
                        let v3755 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3744 v3754 
                        let _run_target_args'_v3749 = v3755 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3757 : Ref<Str> = v3744 |> unbox<Ref<Str>>
                        let _run_target_args'_v3749 = v3757 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3761 : Ref<Str> = v3744 |> unbox<Ref<Str>>
                        let _run_target_args'_v3749 = v3761 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3765 : Ref<Str> = v3744 |> unbox<Ref<Str>>
                        let _run_target_args'_v3749 = v3765 
                        #endif
#else
                        let v3769 : Ref<Str> = v3744 |> unbox<Ref<Str>>
                        let _run_target_args'_v3749 = v3769 
                        #endif
                        let v3772 : Ref<Str> = _run_target_args'_v3749 
                        (* run_target_args'
                        let v3782 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v3783 : string = "String::from($0)"
                        let v3784 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3772 v3783 
                        let _run_target_args'_v3782 = v3784 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v3785 : string = "String::from($0)"
                        let v3786 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3772 v3785 
                        let _run_target_args'_v3782 = v3786 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v3787 : string = "String::from($0)"
                        let v3788 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3772 v3787 
                        let _run_target_args'_v3782 = v3788 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v3790 : std_string_String = v3772 |> unbox<std_string_String>
                        let _run_target_args'_v3782 = v3790 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v3794 : std_string_String = v3772 |> unbox<std_string_String>
                        let _run_target_args'_v3782 = v3794 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v3798 : std_string_String = v3772 |> unbox<std_string_String>
                        let _run_target_args'_v3782 = v3798 
                        #endif
#else
                        let v3802 : std_string_String = v3772 |> unbox<std_string_String>
                        let _run_target_args'_v3782 = v3802 
                        #endif
                        let v3805 : std_string_String = _run_target_args'_v3782 
                        let v3811 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                        let v3812 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3805 v3811 
                        let v3813 : string = "v3812"
                        let v3814 : string = v3813 + v1280 
                        let v3815 : string = v3814 + v1280 
                        let v3816 : string = "vec![" + v3815 + "]"
                        let v3817 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3816 
                        let v3818 : string = "leptos::prelude::Fragment::new($0)"
                        let v3819 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3817 v3818 
                        let v3820 : string = "leptos::prelude::AnyView::from($0)"
                        let v3821 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3819 v3820 
                        let v3822 : string = "<" + v2785 + " " + v3743 + ">move || { v3821 }</" + v2785 + ">"
                        let v3823 : string = "leptos::prelude::view! { " + v3822 + " }"
                        let v3824 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3823 
                        let v3825 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Th>> = v3824 |> unbox
                        let v3826 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3827 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3825 v3826 
                        let v3828 : string = "v3827"
                        let v3829 : string = v3828 + v1280 
                        let v3830 : string = v3829 + v1280 
                        let v3831 : string = "v3741"
                        let v3832 : string = v3831 + v1742 
                        let v3833 : string = v3832 + v3830 
                        let v3834 : string = "v3655"
                        let v3835 : string = v3834 + v1742 
                        let v3836 : string = v3835 + v3833 
                        let v3837 : string = "v3569"
                        let v3838 : string = v3837 + v1742 
                        let v3839 : string = v3838 + v3836 
                        let v3840 : string = "v3483"
                        let v3841 : string = v3840 + v1742 
                        let v3842 : string = v3841 + v3839 
                        let v3843 : string = "v3393"
                        let v3844 : string = v3843 + v1742 
                        let v3845 : string = v3844 + v3842 
                        let v3846 : string = "v3307"
                        let v3847 : string = v3846 + v1742 
                        let v3848 : string = v3847 + v3845 
                        let v3849 : string = "v3221"
                        let v3850 : string = v3849 + v1742 
                        let v3851 : string = v3850 + v3848 
                        let v3852 : string = "v3135"
                        let v3853 : string = v3852 + v1742 
                        let v3854 : string = v3853 + v3851 
                        let v3855 : string = "v3049"
                        let v3856 : string = v3855 + v1742 
                        let v3857 : string = v3856 + v3854 
                        let v3858 : string = "v2963"
                        let v3859 : string = v3858 + v1742 
                        let v3860 : string = v3859 + v3857 
                        let v3861 : string = "v2877"
                        let v3862 : string = v3861 + v1742 
                        let v3863 : string = v3862 + v3860 
                        let v3864 : string = "v2791"
                        let v3865 : string = v3864 + v1742 
                        let v3866 : string = v3865 + v3863 
                        let v3867 : string = "vec![" + v3866 + "]"
                        let v3868 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3867 
                        let v3869 : string = "leptos::prelude::Fragment::new($0)"
                        let v3870 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3868 v3869 
                        let v3871 : string = "leptos::prelude::AnyView::from($0)"
                        let v3872 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3870 v3871 
                        let v3873 : string = "<" + v2674 + " " + v1280 + ">move || { v3872 }</" + v2674 + ">"
                        let v3874 : string = "leptos::prelude::view! { " + v3873 + " }"
                        let v3875 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3874 
                        let v3876 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tr>> = v3875 |> unbox
                        let v3877 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3878 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3876 v3877 
                        let v3879 : string = "v3878"
                        let v3880 : string = v3879 + v1280 
                        let v3881 : string = v3880 + v1280 
                        let v3882 : string = "vec![" + v3881 + "]"
                        let v3883 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3882 
                        let v3884 : string = "leptos::prelude::Fragment::new($0)"
                        let v3885 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3883 v3884 
                        let v3886 : string = "class=\"flex-1 min-w-full divide-y-2 divide-gray-200 text-sm dark:divide-gray-700\""
                        let v3887 : string = " " + v3886 + v1280 + ""
                        let v3888 : string = "class=\"ltr:text-left rtl:text-right\""
                        let v3889 : string = " " + v3888 + v1280 + ""
                        let v3890 : string = "leptos::prelude::AnyView::from($0)"
                        let v3891 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3885 v3890 
                        let v3892 : string = "thead"
                        let v3893 : string = "<" + v3892 + " " + v3889 + ">move || { v3891 }</" + v3892 + ">"
                        let v3894 : string = "leptos::prelude::view! { " + v3893 + " }"
                        let v3895 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3894 
                        let v3896 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Thead>> = v3895 |> unbox
                        let v3897 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3898 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3896 v3897 
                        let v3899 : string = "class=\"divide-y divide-gray-200 dark:divide-gray-700\""
                        let v3900 : string = " " + v3899 + v1280 + ""
                        let v3901 : string = "leptos::prelude::AnyView::from($0)"
                        let v3902 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2701 v3901 
                        let v3903 : string = "tbody"
                        let v3904 : string = "<" + v3903 + " " + v3900 + ">move || { v3902 }</" + v3903 + ">"
                        let v3905 : string = "leptos::prelude::view! { " + v3904 + " }"
                        let v3906 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3905 
                        let v3907 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Tbody>> = v3906 |> unbox
                        let v3908 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3909 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3907 v3908 
                        let v3910 : string = "v3909"
                        let v3911 : string = v3910 + v1280 
                        let v3912 : string = v3911 + v1280 
                        let v3913 : string = "v3898"
                        let v3914 : string = v3913 + v1742 
                        let v3915 : string = v3914 + v3912 
                        let v3916 : string = "vec![" + v3915 + "]"
                        let v3917 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3916 
                        let v3918 : string = "leptos::prelude::Fragment::new($0)"
                        let v3919 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3917 v3918 
                        let v3920 : string = "leptos::prelude::AnyView::from($0)"
                        let v3921 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3919 v3920 
                        let v3922 : string = "table"
                        let v3923 : string = "<" + v3922 + " " + v3887 + ">move || { v3921 }</" + v3922 + ">"
                        let v3924 : string = "leptos::prelude::view! { " + v3923 + " }"
                        let v3925 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3924 
                        let v3926 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Table>> = v3925 |> unbox
                        let v3927 : string = "leptos::prelude::IntoAny::into_any($0)"
                        let v3928 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3926 v3927 
                        v3928
                | _ ->
                    let v3930 : string = "class=\"grid place-content-center py-[10vh]\""
                    let v3931 : string = ""
                    let v3932 : string = " " + v3930 + v3931 + ""
                    let v3933 : string = "class=\"flex flex-1 [gap:4px] items-center\""
                    let v3934 : string = " " + v3933 + v3931 + ""
                    let v3935 : string = "$0"
                    let v3936 : (unit -> string) = closure191()
                    let v3937 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3936 v3935 
                    let v3938 : string = "version=\"1.1\""
                    let v3939 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                    let v3940 : string = "xmlns:xlink=\"http://www.w3.org/1999/xlink\""
                    let v3941 : string = "x=\"0px\""
                    let v3942 : string = "y=\"0px\""
                    let v3943 : string = "viewBox=\"0 0 24 30\""
                    let v3944 : string = "style=\"enable-background:new 0 0 50 50;\""
                    let v3945 : string = "xml:space=\"preserve\""
                    let v3946 : string = "class=move || \" \".to_owned() + &v3937(())"
                    let v3947 : string = " " + v3938 + v3931 + ""
                    let v3948 : string = " " + v3939 + v3947 + ""
                    let v3949 : string = " " + v3940 + v3948 + ""
                    let v3950 : string = " " + v3941 + v3949 + ""
                    let v3951 : string = " " + v3942 + v3950 + ""
                    let v3952 : string = " " + v3943 + v3951 + ""
                    let v3953 : string = " " + v3944 + v3952 + ""
                    let v3954 : string = " " + v3945 + v3953 + ""
                    let v3955 : string = " " + v3946 + v3954 + ""
                    let v3956 : string = "x=\"0\""
                    let v3957 : string = "y=\"10\""
                    let v3958 : string = "width=\"4\""
                    let v3959 : string = "height=\"10\""
                    let v3960 : string = "fill=\"#333\""
                    let v3961 : string = "opacity=\"0.2\""
                    let v3962 : string = " " + v3956 + v3931 + ""
                    let v3963 : string = " " + v3957 + v3962 + ""
                    let v3964 : string = " " + v3958 + v3963 + ""
                    let v3965 : string = " " + v3959 + v3964 + ""
                    let v3966 : string = " " + v3960 + v3965 + ""
                    let v3967 : string = " " + v3961 + v3966 + ""
                    let v3968 : string = "attributeName=\"opacity\""
                    let v3969 : string = "attributeType=\"XML\""
                    let v3970 : string = "values=\"0.2; 1; .2\""
                    let v3971 : string = "begin=\"0s\""
                    let v3972 : string = "dur=\"0.6s\""
                    let v3973 : string = "repeatCount=\"indefinite\""
                    let v3974 : string = " " + v3968 + v3931 + ""
                    let v3975 : string = " " + v3969 + v3974 + ""
                    let v3976 : string = " " + v3970 + v3975 + ""
                    let v3977 : string = " " + v3971 + v3976 + ""
                    let v3978 : string = " " + v3972 + v3977 + ""
                    let v3979 : string = " " + v3973 + v3978 + ""
                    let v3980 : string = "vec![" + v3931 + "]"
                    let v3981 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3980 
                    let v3982 : string = "leptos::prelude::Fragment::new($0)"
                    let v3983 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3981 v3982 
                    let v3984 : string = "leptos::prelude::AnyView::from($0)"
                    let v3985 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3983 v3984 
                    let v3986 : string = "animate"
                    let v3987 : string = "<" + v3986 + " " + v3979 + ">move || { v3985 }</" + v3986 + ">"
                    let v3988 : string = "leptos::prelude::view! { " + v3987 + " }"
                    let v3989 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3988 
                    let v3990 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v3989 |> unbox
                    let v3991 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v3992 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3990 v3991 
                    let v3993 : string = "attributeName=\"height\""
                    let v3994 : string = "attributeType=\"XML\""
                    let v3995 : string = "values=\"10; 20; 10\""
                    let v3996 : string = "begin=\"0s\""
                    let v3997 : string = "dur=\"0.6s\""
                    let v3998 : string = "repeatCount=\"indefinite\""
                    let v3999 : string = " " + v3993 + v3931 + ""
                    let v4000 : string = " " + v3994 + v3999 + ""
                    let v4001 : string = " " + v3995 + v4000 + ""
                    let v4002 : string = " " + v3996 + v4001 + ""
                    let v4003 : string = " " + v3997 + v4002 + ""
                    let v4004 : string = " " + v3998 + v4003 + ""
                    let v4005 : string = "vec![" + v3931 + "]"
                    let v4006 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4005 
                    let v4007 : string = "leptos::prelude::Fragment::new($0)"
                    let v4008 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4006 v4007 
                    let v4009 : string = "leptos::prelude::AnyView::from($0)"
                    let v4010 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4008 v4009 
                    let v4011 : string = "<" + v3986 + " " + v4004 + ">move || { v4010 }</" + v3986 + ">"
                    let v4012 : string = "leptos::prelude::view! { " + v4011 + " }"
                    let v4013 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4012 
                    let v4014 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4013 |> unbox
                    let v4015 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4016 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4014 v4015 
                    let v4017 : string = "attributeName=\"y\""
                    let v4018 : string = "attributeType=\"XML\""
                    let v4019 : string = "values=\"10; 5; 10\""
                    let v4020 : string = "begin=\"0s\""
                    let v4021 : string = "dur=\"0.6s\""
                    let v4022 : string = "repeatCount=\"indefinite\""
                    let v4023 : string = " " + v4017 + v3931 + ""
                    let v4024 : string = " " + v4018 + v4023 + ""
                    let v4025 : string = " " + v4019 + v4024 + ""
                    let v4026 : string = " " + v4020 + v4025 + ""
                    let v4027 : string = " " + v4021 + v4026 + ""
                    let v4028 : string = " " + v4022 + v4027 + ""
                    let v4029 : string = "vec![" + v3931 + "]"
                    let v4030 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4029 
                    let v4031 : string = "leptos::prelude::Fragment::new($0)"
                    let v4032 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4030 v4031 
                    let v4033 : string = "leptos::prelude::AnyView::from($0)"
                    let v4034 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4032 v4033 
                    let v4035 : string = "<" + v3986 + " " + v4028 + ">move || { v4034 }</" + v3986 + ">"
                    let v4036 : string = "leptos::prelude::view! { " + v4035 + " }"
                    let v4037 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4036 
                    let v4038 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4037 |> unbox
                    let v4039 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4040 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4038 v4039 
                    let v4041 : string = "v4040"
                    let v4042 : string = v4041 + v3931 
                    let v4043 : string = v4042 + v3931 
                    let v4044 : string = "v4016"
                    let v4045 : string = ", "
                    let v4046 : string = v4044 + v4045 
                    let v4047 : string = v4046 + v4043 
                    let v4048 : string = "v3992"
                    let v4049 : string = v4048 + v4045 
                    let v4050 : string = v4049 + v4047 
                    let v4051 : string = "vec![" + v4050 + "]"
                    let v4052 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4051 
                    let v4053 : string = "leptos::prelude::Fragment::new($0)"
                    let v4054 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4052 v4053 
                    let v4055 : string = "leptos::prelude::AnyView::from($0)"
                    let v4056 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4054 v4055 
                    let v4057 : string = "rect"
                    let v4058 : string = "<" + v4057 + " " + v3967 + ">move || { v4056 }</" + v4057 + ">"
                    let v4059 : string = "leptos::prelude::view! { " + v4058 + " }"
                    let v4060 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4059 
                    let v4061 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v4060 |> unbox
                    let v4062 : string = "x=\"8\""
                    let v4063 : string = "y=\"10\""
                    let v4064 : string = "width=\"4\""
                    let v4065 : string = "height=\"10\""
                    let v4066 : string = "fill=\"#333\""
                    let v4067 : string = "opacity=\"0.2\""
                    let v4068 : string = " " + v4062 + v3931 + ""
                    let v4069 : string = " " + v4063 + v4068 + ""
                    let v4070 : string = " " + v4064 + v4069 + ""
                    let v4071 : string = " " + v4065 + v4070 + ""
                    let v4072 : string = " " + v4066 + v4071 + ""
                    let v4073 : string = " " + v4067 + v4072 + ""
                    let v4074 : string = "attributeName=\"opacity\""
                    let v4075 : string = "attributeType=\"XML\""
                    let v4076 : string = "values=\"0.2; 1; .2\""
                    let v4077 : string = "begin=\"0.15s\""
                    let v4078 : string = "dur=\"0.6s\""
                    let v4079 : string = "repeatCount=\"indefinite\""
                    let v4080 : string = " " + v4074 + v3931 + ""
                    let v4081 : string = " " + v4075 + v4080 + ""
                    let v4082 : string = " " + v4076 + v4081 + ""
                    let v4083 : string = " " + v4077 + v4082 + ""
                    let v4084 : string = " " + v4078 + v4083 + ""
                    let v4085 : string = " " + v4079 + v4084 + ""
                    let v4086 : string = "vec![" + v3931 + "]"
                    let v4087 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4086 
                    let v4088 : string = "leptos::prelude::Fragment::new($0)"
                    let v4089 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4087 v4088 
                    let v4090 : string = "leptos::prelude::AnyView::from($0)"
                    let v4091 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4089 v4090 
                    let v4092 : string = "<" + v3986 + " " + v4085 + ">move || { v4091 }</" + v3986 + ">"
                    let v4093 : string = "leptos::prelude::view! { " + v4092 + " }"
                    let v4094 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4093 
                    let v4095 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4094 |> unbox
                    let v4096 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4097 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4095 v4096 
                    let v4098 : string = "attributeName=\"opacity\""
                    let v4099 : string = "attributeType=\"XML\""
                    let v4100 : string = "values=\"10; 20; 10\""
                    let v4101 : string = "begin=\"0.15s\""
                    let v4102 : string = "dur=\"0.6s\""
                    let v4103 : string = "repeatCount=\"indefinite\""
                    let v4104 : string = " " + v4098 + v3931 + ""
                    let v4105 : string = " " + v4099 + v4104 + ""
                    let v4106 : string = " " + v4100 + v4105 + ""
                    let v4107 : string = " " + v4101 + v4106 + ""
                    let v4108 : string = " " + v4102 + v4107 + ""
                    let v4109 : string = " " + v4103 + v4108 + ""
                    let v4110 : string = "vec![" + v3931 + "]"
                    let v4111 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4110 
                    let v4112 : string = "leptos::prelude::Fragment::new($0)"
                    let v4113 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4111 v4112 
                    let v4114 : string = "leptos::prelude::AnyView::from($0)"
                    let v4115 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4113 v4114 
                    let v4116 : string = "<" + v3986 + " " + v4109 + ">move || { v4115 }</" + v3986 + ">"
                    let v4117 : string = "leptos::prelude::view! { " + v4116 + " }"
                    let v4118 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4117 
                    let v4119 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4118 |> unbox
                    let v4120 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4121 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4119 v4120 
                    let v4122 : string = "attributeName=\"y\""
                    let v4123 : string = "attributeType=\"XML\""
                    let v4124 : string = "values=\"10; 5; 10\""
                    let v4125 : string = "begin=\"0.15s\""
                    let v4126 : string = "dur=\"0.6s\""
                    let v4127 : string = "repeatCount=\"indefinite\""
                    let v4128 : string = " " + v4122 + v3931 + ""
                    let v4129 : string = " " + v4123 + v4128 + ""
                    let v4130 : string = " " + v4124 + v4129 + ""
                    let v4131 : string = " " + v4125 + v4130 + ""
                    let v4132 : string = " " + v4126 + v4131 + ""
                    let v4133 : string = " " + v4127 + v4132 + ""
                    let v4134 : string = "vec![" + v3931 + "]"
                    let v4135 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4134 
                    let v4136 : string = "leptos::prelude::Fragment::new($0)"
                    let v4137 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4135 v4136 
                    let v4138 : string = "leptos::prelude::AnyView::from($0)"
                    let v4139 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4137 v4138 
                    let v4140 : string = "<" + v3986 + " " + v4133 + ">move || { v4139 }</" + v3986 + ">"
                    let v4141 : string = "leptos::prelude::view! { " + v4140 + " }"
                    let v4142 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4141 
                    let v4143 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4142 |> unbox
                    let v4144 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4145 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4143 v4144 
                    let v4146 : string = "v4145"
                    let v4147 : string = v4146 + v3931 
                    let v4148 : string = v4147 + v3931 
                    let v4149 : string = "v4121"
                    let v4150 : string = v4149 + v4045 
                    let v4151 : string = v4150 + v4148 
                    let v4152 : string = "v4097"
                    let v4153 : string = v4152 + v4045 
                    let v4154 : string = v4153 + v4151 
                    let v4155 : string = "vec![" + v4154 + "]"
                    let v4156 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4155 
                    let v4157 : string = "leptos::prelude::Fragment::new($0)"
                    let v4158 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4156 v4157 
                    let v4159 : string = "leptos::prelude::AnyView::from($0)"
                    let v4160 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4158 v4159 
                    let v4161 : string = "<" + v4057 + " " + v4073 + ">move || { v4160 }</" + v4057 + ">"
                    let v4162 : string = "leptos::prelude::view! { " + v4161 + " }"
                    let v4163 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4162 
                    let v4164 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v4163 |> unbox
                    let v4165 : string = "x=\"16\""
                    let v4166 : string = "y=\"10\""
                    let v4167 : string = "width=\"4\""
                    let v4168 : string = "height=\"10\""
                    let v4169 : string = "fill=\"#333\""
                    let v4170 : string = "opacity=\"0.2\""
                    let v4171 : string = " " + v4165 + v3931 + ""
                    let v4172 : string = " " + v4166 + v4171 + ""
                    let v4173 : string = " " + v4167 + v4172 + ""
                    let v4174 : string = " " + v4168 + v4173 + ""
                    let v4175 : string = " " + v4169 + v4174 + ""
                    let v4176 : string = " " + v4170 + v4175 + ""
                    let v4177 : string = "attributeName=\"opacity\""
                    let v4178 : string = "attributeType=\"XML\""
                    let v4179 : string = "values=\"0.2; 1; .2\""
                    let v4180 : string = "begin=\"0.3s\""
                    let v4181 : string = "dur=\"0.6s\""
                    let v4182 : string = "repeatCount=\"indefinite\""
                    let v4183 : string = " " + v4177 + v3931 + ""
                    let v4184 : string = " " + v4178 + v4183 + ""
                    let v4185 : string = " " + v4179 + v4184 + ""
                    let v4186 : string = " " + v4180 + v4185 + ""
                    let v4187 : string = " " + v4181 + v4186 + ""
                    let v4188 : string = " " + v4182 + v4187 + ""
                    let v4189 : string = "vec![" + v3931 + "]"
                    let v4190 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4189 
                    let v4191 : string = "leptos::prelude::Fragment::new($0)"
                    let v4192 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4190 v4191 
                    let v4193 : string = "leptos::prelude::AnyView::from($0)"
                    let v4194 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4192 v4193 
                    let v4195 : string = "<" + v3986 + " " + v4188 + ">move || { v4194 }</" + v3986 + ">"
                    let v4196 : string = "leptos::prelude::view! { " + v4195 + " }"
                    let v4197 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4196 
                    let v4198 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4197 |> unbox
                    let v4199 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4200 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4198 v4199 
                    let v4201 : string = "attributeName=\"height\""
                    let v4202 : string = "attributeType=\"XML\""
                    let v4203 : string = "values=\"10; 20; 10\""
                    let v4204 : string = "begin=\"0.3s\""
                    let v4205 : string = "dur=\"0.6s\""
                    let v4206 : string = "repeatCount=\"indefinite\""
                    let v4207 : string = " " + v4201 + v3931 + ""
                    let v4208 : string = " " + v4202 + v4207 + ""
                    let v4209 : string = " " + v4203 + v4208 + ""
                    let v4210 : string = " " + v4204 + v4209 + ""
                    let v4211 : string = " " + v4205 + v4210 + ""
                    let v4212 : string = " " + v4206 + v4211 + ""
                    let v4213 : string = "vec![" + v3931 + "]"
                    let v4214 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4213 
                    let v4215 : string = "leptos::prelude::Fragment::new($0)"
                    let v4216 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4214 v4215 
                    let v4217 : string = "leptos::prelude::AnyView::from($0)"
                    let v4218 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4216 v4217 
                    let v4219 : string = "<" + v3986 + " " + v4212 + ">move || { v4218 }</" + v3986 + ">"
                    let v4220 : string = "leptos::prelude::view! { " + v4219 + " }"
                    let v4221 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4220 
                    let v4222 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4221 |> unbox
                    let v4223 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4224 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4222 v4223 
                    let v4225 : string = "attributeName=\"y\""
                    let v4226 : string = "attributeType=\"XML\""
                    let v4227 : string = "values=\"10; 5; 10\""
                    let v4228 : string = "begin=\"0.3s\""
                    let v4229 : string = "dur=\"0.6s\""
                    let v4230 : string = "repeatCount=\"indefinite\""
                    let v4231 : string = " " + v4225 + v3931 + ""
                    let v4232 : string = " " + v4226 + v4231 + ""
                    let v4233 : string = " " + v4227 + v4232 + ""
                    let v4234 : string = " " + v4228 + v4233 + ""
                    let v4235 : string = " " + v4229 + v4234 + ""
                    let v4236 : string = " " + v4230 + v4235 + ""
                    let v4237 : string = "vec![" + v3931 + "]"
                    let v4238 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4237 
                    let v4239 : string = "leptos::prelude::Fragment::new($0)"
                    let v4240 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4238 v4239 
                    let v4241 : string = "leptos::prelude::AnyView::from($0)"
                    let v4242 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4240 v4241 
                    let v4243 : string = "<" + v3986 + " " + v4236 + ">move || { v4242 }</" + v3986 + ">"
                    let v4244 : string = "leptos::prelude::view! { " + v4243 + " }"
                    let v4245 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4244 
                    let v4246 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Animate>> = v4245 |> unbox
                    let v4247 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4248 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4246 v4247 
                    let v4249 : string = "v4248"
                    let v4250 : string = v4249 + v3931 
                    let v4251 : string = v4250 + v3931 
                    let v4252 : string = "v4224"
                    let v4253 : string = v4252 + v4045 
                    let v4254 : string = v4253 + v4251 
                    let v4255 : string = "v4200"
                    let v4256 : string = v4255 + v4045 
                    let v4257 : string = v4256 + v4254 
                    let v4258 : string = "vec![" + v4257 + "]"
                    let v4259 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4258 
                    let v4260 : string = "leptos::prelude::Fragment::new($0)"
                    let v4261 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4259 v4260 
                    let v4262 : string = "leptos::prelude::AnyView::from($0)"
                    let v4263 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4261 v4262 
                    let v4264 : string = "<" + v4057 + " " + v4176 + ">move || { v4263 }</" + v4057 + ">"
                    let v4265 : string = "leptos::prelude::view! { " + v4264 + " }"
                    let v4266 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4265 
                    let v4267 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v4266 |> unbox
                    let v4268 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4269 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4267 v4268 
                    let v4270 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4271 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4164 v4270 
                    let v4272 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4273 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4061 v4272 
                    let v4274 : string = "v4269"
                    let v4275 : string = v4274 + v3931 
                    let v4276 : string = v4275 + v3931 
                    let v4277 : string = "v4271"
                    let v4278 : string = v4277 + v4045 
                    let v4279 : string = v4278 + v4276 
                    let v4280 : string = "v4273"
                    let v4281 : string = v4280 + v4045 
                    let v4282 : string = v4281 + v4279 
                    let v4283 : string = "vec![" + v4282 + "]"
                    let v4284 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4283 
                    let v4285 : string = "leptos::prelude::Fragment::new($0)"
                    let v4286 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4284 v4285 
                    let v4287 : string = "leptos::prelude::AnyView::from($0)"
                    let v4288 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4286 v4287 
                    let v4289 : string = "svg"
                    let v4290 : string = "<" + v4289 + " " + v3955 + ">move || { v4288 }</" + v4289 + ">"
                    let v4291 : string = "leptos::prelude::view! { " + v4290 + " }"
                    let v4292 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4291 
                    let v4293 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4292 |> unbox
                    let v4294 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4295 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4293 v4294 
                    let v4296 : string = "Loading..."
                    (* run_target_args'
                    let v4301 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v4302 : string = "&*$0"
                    let v4303 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4296 v4302 
                    let _run_target_args'_v4301 = v4303 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v4304 : string = "&*$0"
                    let v4305 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4296 v4304 
                    let _run_target_args'_v4301 = v4305 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v4306 : string = "&*$0"
                    let v4307 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4296 v4306 
                    let _run_target_args'_v4301 = v4307 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v4309 : Ref<Str> = v4296 |> unbox<Ref<Str>>
                    let _run_target_args'_v4301 = v4309 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v4313 : Ref<Str> = v4296 |> unbox<Ref<Str>>
                    let _run_target_args'_v4301 = v4313 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v4317 : Ref<Str> = v4296 |> unbox<Ref<Str>>
                    let _run_target_args'_v4301 = v4317 
                    #endif
#else
                    let v4321 : Ref<Str> = v4296 |> unbox<Ref<Str>>
                    let _run_target_args'_v4301 = v4321 
                    #endif
                    let v4324 : Ref<Str> = _run_target_args'_v4301 
                    (* run_target_args'
                    let v4334 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v4335 : string = "String::from($0)"
                    let v4336 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4324 v4335 
                    let _run_target_args'_v4334 = v4336 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v4337 : string = "String::from($0)"
                    let v4338 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4324 v4337 
                    let _run_target_args'_v4334 = v4338 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v4339 : string = "String::from($0)"
                    let v4340 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4324 v4339 
                    let _run_target_args'_v4334 = v4340 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v4342 : std_string_String = v4324 |> unbox<std_string_String>
                    let _run_target_args'_v4334 = v4342 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v4346 : std_string_String = v4324 |> unbox<std_string_String>
                    let _run_target_args'_v4334 = v4346 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v4350 : std_string_String = v4324 |> unbox<std_string_String>
                    let _run_target_args'_v4334 = v4350 
                    #endif
#else
                    let v4354 : std_string_String = v4324 |> unbox<std_string_String>
                    let _run_target_args'_v4334 = v4354 
                    #endif
                    let v4357 : std_string_String = _run_target_args'_v4334 
                    let v4363 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v4364 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4357 v4363 
                    let v4365 : string = "v4364"
                    let v4366 : string = v4365 + v3931 
                    let v4367 : string = v4366 + v3931 
                    let v4368 : string = "v4295"
                    let v4369 : string = v4368 + v4045 
                    let v4370 : string = v4369 + v4367 
                    let v4371 : string = "vec![" + v4370 + "]"
                    let v4372 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4371 
                    let v4373 : string = "leptos::prelude::Fragment::new($0)"
                    let v4374 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4372 v4373 
                    let v4375 : string = "leptos::prelude::AnyView::from($0)"
                    let v4376 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4374 v4375 
                    let v4377 : string = "div"
                    let v4378 : string = "<" + v4377 + " " + v3934 + ">move || { v4376 }</" + v4377 + ">"
                    let v4379 : string = "leptos::prelude::view! { " + v4378 + " }"
                    let v4380 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4379 
                    let v4381 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4380 |> unbox
                    let v4382 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4383 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4381 v4382 
                    let v4384 : string = "v4383"
                    let v4385 : string = v4384 + v3931 
                    let v4386 : string = v4385 + v3931 
                    let v4387 : string = "vec![" + v4386 + "]"
                    let v4388 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4387 
                    let v4389 : string = "leptos::prelude::Fragment::new($0)"
                    let v4390 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4388 v4389 
                    let v4391 : string = "leptos::prelude::AnyView::from($0)"
                    let v4392 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4390 v4391 
                    let v4393 : string = "<" + v4377 + " " + v3932 + ">move || { v4392 }</" + v4377 + ">"
                    let v4394 : string = "leptos::prelude::view! { " + v4393 + " }"
                    let v4395 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4394 
                    let v4396 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4395 |> unbox
                    let v4397 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4398 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4396 v4397 
                    v4398
    let v4582 : string = "v4581"
    let v4583 : string = ""
    let v4584 : string = v4582 + v4583 
    let v4585 : string = v4584 + v4583 
    let v4586 : string = "v144"
    let v4587 : string = ", "
    let v4588 : string = v4586 + v4587 
    let v4589 : string = v4588 + v4585 
    let v4590 : string = "vec![" + v4589 + "]"
    let v4591 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4590 
    let v4592 : string = "leptos::prelude::Fragment::new($0)"
    let v4593 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4591 v4592 
    v4593
and closure337 () () : string =
    let v0 : string = "py-[7px]"
    v0
and closure338 () () : Ref<Lifetime<StaticLifetime, Str>> =
    let v0 : string = ""
    let v1 : string = "r#\"" + v0 + "\"#"
    let v2 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v1 
    v2
and closure339 () () : string =
    let v0 : string = "Debug"
    v0
and method282 () : (unit -> string) =
    closure339()
and closure341 () () : leptos_dom_Fragment =
    let v0 : string = "Transactions"
    (* run_target_args'
    let v5 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : string = "&*$0"
    let v7 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v6 
    let _run_target_args'_v5 = v7 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v8 
    let _run_target_args'_v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v0 v10 
    let _run_target_args'_v5 = v11 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v17 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v17 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v21 
    #endif
#else
    let v25 : Ref<Str> = v0 |> unbox<Ref<Str>>
    let _run_target_args'_v5 = v25 
    #endif
    let v28 : Ref<Str> = _run_target_args'_v5 
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "String::from($0)"
    let v40 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v28 v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v46 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v46 
    #endif
#if FABLE_COMPILER_PYTHON
    let v50 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v50 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v54 
    #endif
#else
    let v58 : std_string_String = v28 |> unbox<std_string_String>
    let _run_target_args'_v38 = v58 
    #endif
    let v61 : std_string_String = _run_target_args'_v38 
    let v67 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v68 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v61 v67 
    let v69 : string = "v68"
    let v70 : string = ""
    let v71 : string = v69 + v70 
    let v72 : string = v71 + v70 
    let v73 : string = "vec![" + v72 + "]"
    let v74 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v73 
    let v75 : string = "leptos::prelude::Fragment::new($0)"
    let v76 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v74 v75 
    v76
and method283 () : (unit -> leptos_dom_Fragment) =
    closure341()
and closure343 () () : string =
    let v0 : string = "[max-height:70vh]"
    v0
and closure342 (v0 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>) () : leptos_dom_Fragment =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : Result<(struct (string * unativeint * Heap5) []) option, std_string_String> = Fable.Core.RustInterop.emitRustExpr v0 v1 
    (* run_target_args'
    let v7 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v8 : string = "format!(\"{:#?}\", $0)"
    let v9 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2 v8 
    let v10 : string = "fable_library_rust::String_::fromString($0)"
    let v11 : string = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let _run_target_args'_v7 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "format!(\"{:#?}\", $0)"
    let v13 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2 v12 
    let v14 : string = "fable_library_rust::String_::fromString($0)"
    let v15 : string = Fable.Core.RustInterop.emitRustExpr v13 v14 
    let _run_target_args'_v7 = v15 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v16 : string = "format!(\"{:#?}\", $0)"
    let v17 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2 v16 
    let v18 : string = "fable_library_rust::String_::fromString($0)"
    let v19 : string = Fable.Core.RustInterop.emitRustExpr v17 v18 
    let _run_target_args'_v7 = v19 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v21 : string = $"%A{v2}"
    let _run_target_args'_v7 = v21 
    #endif
#if FABLE_COMPILER_PYTHON
    let v25 : string = $"%A{v2}"
    let _run_target_args'_v7 = v25 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v29 : string = $"%A{v2}"
    let _run_target_args'_v7 = v29 
    #endif
#else
    let v33 : string = $"%A{v2}"
    let _run_target_args'_v7 = v33 
    #endif
    let v36 : string = _run_target_args'_v7 
    let v42 : string = "$0"
    let v43 : (unit -> string) = closure343()
    let v44 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v43 v42 
    let v45 : string = "class=move || \"[padding:1px] [font-size:12px] [line-height:12px] [text-wrap:pretty] \".to_owned() + &v44(())"
    let v46 : string = ""
    let v47 : string = " " + v45 + v46 + ""
    (* run_target_args'
    let v52 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v53 : string = "&*$0"
    let v54 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v36 v53 
    let _run_target_args'_v52 = v54 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v55 : string = "&*$0"
    let v56 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v36 v55 
    let _run_target_args'_v52 = v56 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v57 : string = "&*$0"
    let v58 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v36 v57 
    let _run_target_args'_v52 = v58 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v60 : Ref<Str> = v36 |> unbox<Ref<Str>>
    let _run_target_args'_v52 = v60 
    #endif
#if FABLE_COMPILER_PYTHON
    let v64 : Ref<Str> = v36 |> unbox<Ref<Str>>
    let _run_target_args'_v52 = v64 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v68 : Ref<Str> = v36 |> unbox<Ref<Str>>
    let _run_target_args'_v52 = v68 
    #endif
#else
    let v72 : Ref<Str> = v36 |> unbox<Ref<Str>>
    let _run_target_args'_v52 = v72 
    #endif
    let v75 : Ref<Str> = _run_target_args'_v52 
    (* run_target_args'
    let v85 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v86 : string = "String::from($0)"
    let v87 : std_string_String = Fable.Core.RustInterop.emitRustExpr v75 v86 
    let _run_target_args'_v85 = v87 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v88 : string = "String::from($0)"
    let v89 : std_string_String = Fable.Core.RustInterop.emitRustExpr v75 v88 
    let _run_target_args'_v85 = v89 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v90 : string = "String::from($0)"
    let v91 : std_string_String = Fable.Core.RustInterop.emitRustExpr v75 v90 
    let _run_target_args'_v85 = v91 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v93 : std_string_String = v75 |> unbox<std_string_String>
    let _run_target_args'_v85 = v93 
    #endif
#if FABLE_COMPILER_PYTHON
    let v97 : std_string_String = v75 |> unbox<std_string_String>
    let _run_target_args'_v85 = v97 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v101 : std_string_String = v75 |> unbox<std_string_String>
    let _run_target_args'_v85 = v101 
    #endif
#else
    let v105 : std_string_String = v75 |> unbox<std_string_String>
    let _run_target_args'_v85 = v105 
    #endif
    let v108 : std_string_String = _run_target_args'_v85 
    let v114 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v115 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v108 v114 
    let v116 : string = "v115"
    let v117 : string = v116 + v46 
    let v118 : string = v117 + v46 
    let v119 : string = "vec![" + v118 + "]"
    let v120 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v119 
    let v121 : string = "leptos::prelude::Fragment::new($0)"
    let v122 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v120 v121 
    let v123 : string = "leptos::prelude::AnyView::from($0)"
    let v124 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v122 v123 
    let v125 : string = "pre"
    let v126 : string = "<" + v125 + " " + v47 + ">move || { v124 }</" + v125 + ">"
    let v127 : string = "leptos::prelude::view! { " + v126 + " }"
    let v128 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v127 
    let v129 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Pre>> = v128 |> unbox
    let v130 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v131 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v129 v130 
    let v132 : string = "v131"
    let v133 : string = v132 + v46 
    let v134 : string = v133 + v46 
    let v135 : string = "vec![" + v134 + "]"
    let v136 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v135 
    let v137 : string = "leptos::prelude::Fragment::new($0)"
    let v138 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v136 v137 
    v138
and method284 (v0 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>) : (unit -> leptos_dom_Fragment) =
    closure342(v0)
and closure340 (v0 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>>) () : leptos_dom_Fragment =
    let v1 : (unit -> leptos_dom_Fragment) = method283()
    let v2 : (unit -> leptos_dom_Fragment) = method284(v0)
    let v3 : string = "$0"
    let v4 : (unit -> string) = closure253()
    let v5 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4 v3 
    let v6 : string = "$0"
    let v7 : (unit -> string) = closure234()
    let v8 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v7 v6 
    let v9 : string = "$0"
    let v10 : (unit -> string) = closure235()
    let v11 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v10 v9 
    let v12 : string = "class=move || \"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \".to_owned() + &v11(()) + \" \" + &v8(()) + \" \" + &v5(())"
    let v13 : string = ""
    let v14 : string = " " + v12 + v13 + ""
    let v15 : string = "$0"
    let v16 : (unit -> string) = closure236()
    let v17 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v16 v15 
    let v18 : string = "class=\"[font-size:12px] text-gray-400\""
    let v19 : string = " " + v18 + v13 + ""
    let v20 : leptos_dom_Fragment = v1 ()
    let v21 : string = "leptos::prelude::AnyView::from($0)"
    let v22 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : string = "dt"
    let v24 : string = "<" + v23 + " " + v19 + ">move || { v22 }</" + v23 + ">"
    let v25 : string = "leptos::prelude::view! { " + v24 + " }"
    let v26 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v25 
    let v27 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dt>> = v26 |> unbox
    let v28 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v29 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v27 v28 
    let v30 : string = "class=move || \"text-gray-700 sm:col-span-2 flex flex-1 \".to_owned () + &v17(())"
    let v31 : string = " " + v30 + v13 + ""
    let v32 : leptos_dom_Fragment = v2 ()
    let v33 : string = "leptos::prelude::AnyView::from($0)"
    let v34 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v32 v33 
    let v35 : string = "dd"
    let v36 : string = "<" + v35 + " " + v31 + ">move || { v34 }</" + v35 + ">"
    let v37 : string = "leptos::prelude::view! { " + v36 + " }"
    let v38 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v37 
    let v39 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dd>> = v38 |> unbox
    let v40 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v41 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v39 v40 
    let v42 : string = "v41"
    let v43 : string = v42 + v13 
    let v44 : string = v43 + v13 
    let v45 : string = "v29"
    let v46 : string = ", "
    let v47 : string = v45 + v46 
    let v48 : string = v47 + v44 
    let v49 : string = "vec![" + v48 + "]"
    let v50 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v49 
    let v51 : string = "leptos::prelude::Fragment::new($0)"
    let v52 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v50 v51 
    let v53 : string = "leptos::prelude::AnyView::from($0)"
    let v54 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v52 v53 
    let v55 : string = "dl"
    let v56 : string = "<" + v55 + " " + v14 + ">move || { v54 }</" + v55 + ">"
    let v57 : string = "leptos::prelude::view! { " + v56 + " }"
    let v58 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v57 
    let v59 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Dl>> = v58 |> unbox
    let v60 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v61 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v59 v60 
    let v62 : string = "v61"
    let v63 : string = v62 + v13 
    let v64 : string = v63 + v13 
    let v65 : string = "vec![" + v64 + "]"
    let v66 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v65 
    let v67 : string = "leptos::prelude::Fragment::new($0)"
    let v68 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v66 v67 
    v68
and closure344 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_4 -> (* Settings *)
        true
    | _ ->
        false
and method285 (v0 : leptos_prelude_ReadSignal<US18>) : (unit -> bool) =
    closure344(v0)
and closure345 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_3 -> (* Transactions *)
        true
    | _ ->
        false
and method286 (v0 : leptos_prelude_ReadSignal<US18>) : (unit -> bool) =
    closure345(v0)
and closure346 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_2 -> (* Lists *)
        true
    | _ ->
        false
and method287 (v0 : leptos_prelude_ReadSignal<US18>) : (unit -> bool) =
    closure346(v0)
and closure347 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_1(v3) -> (* Dice *)
        match v3 with
        | US19_0 -> (* Dice' *)
            true
        | _ ->
            false
    | _ ->
        false
and method288 (v0 : leptos_prelude_ReadSignal<US18>) : (unit -> bool) =
    closure347(v0)
and closure348 () () : string =
    let v0 : string = "h-5 w-5"
    v0
and closure349 (v0 : leptos_prelude_ArcMemo<string>) () : std_string_String =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "settings"
    let v4 : string = v2 + "#/" + v3 + ""
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    v65
and closure350 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_4 -> (* Settings *)
        true
    | _ ->
        false
and closure351 (v0 : leptos_prelude_ReadSignal<US18>) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : bool =
        match v2 with
        | US18_4 -> (* Settings *)
            true
        | _ ->
            false
    if v3 then
        let v4 : string = "border-grey-200 text-grey-900"
        let v5 : string = "r#\"" + v4 + "\"#"
        let v6 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v5 
        v6
    else
        let v7 : string = "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700"
        let v8 : string = "r#\"" + v7 + "\"#"
        let v9 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v8 
        v9
and closure352 (v0 : leptos_prelude_ArcMemo<string>) () : std_string_String =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "transactions"
    let v4 : string = v2 + "#/" + v3 + ""
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    v65
and closure353 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_3 -> (* Transactions *)
        true
    | _ ->
        false
and closure354 (v0 : leptos_prelude_ReadSignal<US18>) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : bool =
        match v2 with
        | US18_3 -> (* Transactions *)
            true
        | _ ->
            false
    if v3 then
        let v4 : string = "border-grey-200 text-grey-900"
        let v5 : string = "r#\"" + v4 + "\"#"
        let v6 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v5 
        v6
    else
        let v7 : string = "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700"
        let v8 : string = "r#\"" + v7 + "\"#"
        let v9 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v8 
        v9
and closure355 (v0 : leptos_prelude_ArcMemo<string>) () : std_string_String =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "lists"
    let v4 : string = v2 + "#/" + v3 + ""
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    v65
and closure356 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_2 -> (* Lists *)
        true
    | _ ->
        false
and closure357 (v0 : leptos_prelude_ReadSignal<US18>) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : bool =
        match v2 with
        | US18_2 -> (* Lists *)
            true
        | _ ->
            false
    if v3 then
        let v4 : string = "border-grey-200 text-grey-900"
        let v5 : string = "r#\"" + v4 + "\"#"
        let v6 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v5 
        v6
    else
        let v7 : string = "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700"
        let v8 : string = "r#\"" + v7 + "\"#"
        let v9 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v8 
        v9
and closure358 (v0 : leptos_prelude_ArcMemo<string>) () : std_string_String =
    let v1 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v2 : string = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "dice"
    let v4 : string = v2 + "#/" + v3 + ""
    (* run_target_args'
    let v9 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v10 
    let _run_target_args'_v9 = v11 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v12 
    let _run_target_args'_v9 = v13 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v14 : string = "&*$0"
    let v15 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4 v14 
    let _run_target_args'_v9 = v15 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v21 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v21 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v25 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v25 
    #endif
#else
    let v29 : Ref<Str> = v4 |> unbox<Ref<Str>>
    let _run_target_args'_v9 = v29 
    #endif
    let v32 : Ref<Str> = _run_target_args'_v9 
    (* run_target_args'
    let v42 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v43 
    let _run_target_args'_v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v45 
    let _run_target_args'_v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "String::from($0)"
    let v48 : std_string_String = Fable.Core.RustInterop.emitRustExpr v32 v47 
    let _run_target_args'_v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v50 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v50 
    #endif
#if FABLE_COMPILER_PYTHON
    let v54 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v54 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v58 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v58 
    #endif
#else
    let v62 : std_string_String = v32 |> unbox<std_string_String>
    let _run_target_args'_v42 = v62 
    #endif
    let v65 : std_string_String = _run_target_args'_v42 
    v65
and closure359 (v0 : leptos_prelude_ReadSignal<US18>) () : bool =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    match v2 with
    | US18_1(v3) -> (* Dice *)
        match v3 with
        | US19_0 -> (* Dice' *)
            true
        | _ ->
            false
    | _ ->
        false
and closure360 (v0 : leptos_prelude_ReadSignal<US18>) () : Ref<Lifetime<StaticLifetime, Str>> =
    let v1 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2 : US18 = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v5 : bool =
        match v2 with
        | US18_1(v3) -> (* Dice *)
            match v3 with
            | US19_0 -> (* Dice' *)
                true
            | _ ->
                false
        | _ ->
            false
    if v5 then
        let v6 : string = "border-grey-200 text-grey-900"
        let v7 : string = "r#\"" + v6 + "\"#"
        let v8 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v7 
        v8
    else
        let v9 : string = "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700"
        let v10 : string = "r#\"" + v9 + "\"#"
        let v11 : Ref<Lifetime<StaticLifetime, Str>> = Fable.Core.RustInterop.emitRustExpr () v10 
        v11
and closure5 () (v0 : int32) : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> =
    let v1 : string = "home.render () / router: " + string v0 + ""
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
    let v5 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v4 
    let v6 : string = "$0.unwrap()"
    let v7 : Heap2 = Fable.Core.RustInterop.emitRustExpr v5 v6 
    let v8 : string = "state_core.use_database (1)"
    let v9 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v10 : bool = Fable.Core.RustInterop.emitRustExpr v8 v9 
    let v11 : unit = ()
    let v12 : string = $"true; let _func0_from_v11 = Func0::from(move || {{ //"
    let v13 : bool = Fable.Core.RustInterop.emitRustExpr () v12 
    let v14 : string = "true; let __future_init = Box::pin(/*"
    let v15 : bool = Fable.Core.RustInterop.emitRustExpr () v14 
    let v16 : string = "*/ async move { /*"
    let v17 : bool = Fable.Core.RustInterop.emitRustExpr () v16 
    let v18 : string = "*/ ()"
    let v19 : bool = Fable.Core.RustInterop.emitRustExpr () v18 
    let v20 : string = "state_core.use_database (2) / database new_local_resource"
    let v21 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v22 : bool = Fable.Core.RustInterop.emitRustExpr v20 v21 
    let v23 : string = "state_core.build_database ()"
    let v24 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v25 : bool = Fable.Core.RustInterop.emitRustExpr v23 v24 
    let v26 : string = "true; let __future_init = Box::pin(/*"
    let v27 : bool = Fable.Core.RustInterop.emitRustExpr () v26 
    let v28 : string = "*/ async { /*"
    let v29 : bool = Fable.Core.RustInterop.emitRustExpr () v28 
    let v30 : string = "*/ ()"
    let v31 : bool = Fable.Core.RustInterop.emitRustExpr () v30 
    let v32 : string = "Box::pin(rexie::Rexie::builder(\"database\").version(1).add_object_store(rexie::ObjectStore::new(\"store\")).build())"
    let v33 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v32 
    let v34 : string = "v33.await"
    let v35 : Result<rexie_Rexie, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v34 
    let v36 : (rexie_Error -> std_string_String) = method6()
    (* run_target_args'
    let v38 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v39 : string = "$0.map_err(|x| $1(x))"
    let v40 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v35, v36) v39 
    let _run_target_args'_v38 = v40 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v41 : string = "$0.map_err(|x| $1(x))"
    let v42 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v35, v36) v41 
    let _run_target_args'_v38 = v42 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v43 : string = "$0.map_err(|x| $1(x))"
    let v44 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v35, v36) v43 
    let _run_target_args'_v38 = v44 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v45 : Result<rexie_Rexie, std_string_String> = match v35 with Ok x -> Ok x | Error x -> Error (v36 x)
    let _run_target_args'_v38 = v45 
    #endif
#if FABLE_COMPILER_PYTHON
    let v46 : Result<rexie_Rexie, std_string_String> = match v35 with Ok x -> Ok x | Error x -> Error (v36 x)
    let _run_target_args'_v38 = v46 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v47 : Result<rexie_Rexie, std_string_String> = match v35 with Ok x -> Ok x | Error x -> Error (v36 x)
    let _run_target_args'_v38 = v47 
    #endif
#else
    let v48 : Result<rexie_Rexie, std_string_String> = match v35 with Ok x -> Ok x | Error x -> Error (v36 x)
    let _run_target_args'_v38 = v48 
    #endif
    let v49 : Result<rexie_Rexie, std_string_String> = _run_target_args'_v38 
    let v52 : string = ""
    let v53 : string = "}"
    let v54 : string = v52 + v53 
    let x = v49 //
    let v55 : _ = x
    let v56 : unit = ()
    (* run_target_args'
    let v57 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v58 : string = $"true; let _fix_closure_v56 = $0"
    let v59 : bool = Fable.Core.RustInterop.emitRustExpr v55 v58 
    let _run_target_args'_v57 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v60 : string = $"true; let _fix_closure_v56 = $0"
    let v61 : bool = Fable.Core.RustInterop.emitRustExpr v55 v60 
    let _run_target_args'_v57 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v62 : string = $"true; let _fix_closure_v56 = $0"
    let v63 : bool = Fable.Core.RustInterop.emitRustExpr v55 v62 
    let _run_target_args'_v57 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v57 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v57 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v57 = false 
    #endif
#else
    let _run_target_args'_v57 = false 
    #endif
    let v64 : bool = _run_target_args'_v57 
    let v66 : string = $"true; _fix_closure_v56 " + v54 + "); " + v52 + " // rust.fix_closure'"
    let v67 : bool = Fable.Core.RustInterop.emitRustExpr () v66 
    let v68 : string = "__future_init"
    let v69 : _ = Fable.Core.RustInterop.emitRustExpr () v68 
    let v70 : string = "v69"
    let v71 : std_pin_Pin<Box<Dyn<std_future_Future<Result<rexie_Rexie, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v70 
    let v72 : string = "v71.await"
    let v73 : Result<rexie_Rexie, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v72 
    (* run_target_args'
    let v75 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v76 : string = "$0.unwrap()"
    let v77 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v73 v76 
    let _run_target_args'_v75 = v77 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v78 : string = "$0.unwrap()"
    let v79 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v73 v78 
    let _run_target_args'_v75 = v79 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v80 : string = "$0.unwrap()"
    let v81 : rexie_Rexie = Fable.Core.RustInterop.emitRustExpr v73 v80 
    let _run_target_args'_v75 = v81 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v82 : rexie_Rexie = match v73 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v75 = v82 
    #endif
#if FABLE_COMPILER_PYTHON
    let v83 : rexie_Rexie = match v73 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v75 = v83 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v84 : rexie_Rexie = match v73 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v75 = v84 
    #endif
#else
    let v85 : rexie_Rexie = match v73 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
    let _run_target_args'_v75 = v85 
    #endif
    let v86 : rexie_Rexie = _run_target_args'_v75 
    let v89 : (rexie_Rexie -> rexie_Rexie) = method7()
    let v90 : rexie_Rexie = v89 v86
    let v91 : string = "std::sync::Arc::new(v90)"
    let v92 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v91 
    let v94 : string = $"%A{v92}"
    let v97 : string = "state_core.use_database (3) / database new_local_resource / result: " + string v94 + ""
    let v98 : int64 = 200L
    let v99 : string = method8(v98, v97)
    let v100 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v101 : bool = Fable.Core.RustInterop.emitRustExpr v99 v100 
    let v102 : string = v52 + v53 
    let x = v92 //
    let v103 : _ = x
    let v104 : unit = ()
    (* run_target_args'
    let v105 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v106 : string = $"true; let _fix_closure_v104 = $0"
    let v107 : bool = Fable.Core.RustInterop.emitRustExpr v103 v106 
    let _run_target_args'_v105 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v108 : string = $"true; let _fix_closure_v104 = $0"
    let v109 : bool = Fable.Core.RustInterop.emitRustExpr v103 v108 
    let _run_target_args'_v105 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v110 : string = $"true; let _fix_closure_v104 = $0"
    let v111 : bool = Fable.Core.RustInterop.emitRustExpr v103 v110 
    let _run_target_args'_v105 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v105 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v105 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v105 = false 
    #endif
#else
    let _run_target_args'_v105 = false 
    #endif
    let v112 : bool = _run_target_args'_v105 
    let v114 : string = $"true; _fix_closure_v104 " + v102 + "); " + v52 + " // rust.fix_closure'"
    let v115 : bool = Fable.Core.RustInterop.emitRustExpr () v114 
    let v116 : string = "__future_init"
    let v117 : _ = Fable.Core.RustInterop.emitRustExpr () v116 
    let v118 : string = "v117"
    let v119 : std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>> = Fable.Core.RustInterop.emitRustExpr () v118 
    let v120 : string = $"true; $0 /*"
    let v121 : bool = Fable.Core.RustInterop.emitRustExpr v119 v120 
    let v122 : string = $"*/ }}); //"
    let v123 : bool = Fable.Core.RustInterop.emitRustExpr () v122 
    let v124 : string = $"_func0_from_v11"
    let v125 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<std_sync_Arc<rexie_Rexie>>>>>> = Fable.Core.RustInterop.emitRustExpr () v124 
    let v126 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v127 : leptos_prelude_ArcLocalResource<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v125 v126 
    let v128 : string = "state_core.use_core_database (1)"
    let v129 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v130 : bool = Fable.Core.RustInterop.emitRustExpr v128 v129 
    let v131 : unit = ()
    let v132 : string = $"true; let _func0_from_v131 = Func0::from(move || {{ //"
    let v133 : bool = Fable.Core.RustInterop.emitRustExpr () v132 
    let v134 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v135 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v127 v134 
    let v136 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v137 : bool = Fable.Core.RustInterop.emitRustExpr v135 v136 
    let v138 : string = "x"
    let v139 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr () v138 
    let v140 : (unit -> unit) = closure8()
    let _v140 = true
    let v141 : string = "PartialEqWrapper($0)"
    let v142 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr v139 v141 
    let v143 : string = "true; $0 })"
    let v144 : bool = Fable.Core.RustInterop.emitRustExpr v142 v143 
    let v145 : string = "_optionm_map_"
    let v146 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> option = Fable.Core.RustInterop.emitRustExpr () v145 
    let v147 : string = "true; let __future_init = Box::pin(/*"
    let v148 : bool = Fable.Core.RustInterop.emitRustExpr () v147 
    let v149 : string = "*/ async move { /*"
    let v150 : bool = Fable.Core.RustInterop.emitRustExpr () v149 
    let v151 : string = "*/ ()"
    let v152 : bool = Fable.Core.RustInterop.emitRustExpr () v151 
    let v154 : string = $"%A{v146}"
    let v157 : string = "state_core.use_core_database (2) / core_state_heap new_local_resource / database: " + v154 + ""
    let v158 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v159 : bool = Fable.Core.RustInterop.emitRustExpr v157 v158 
    let v160 : string = "true; let _optionm_map_ = $0.map(|x| { //"
    let v161 : bool = Fable.Core.RustInterop.emitRustExpr v146 v160 
    let v162 : string = "x"
    let v163 : PartialEqWrapper<std_sync_Arc<rexie_Rexie>> = Fable.Core.RustInterop.emitRustExpr () v162 
    let v164 : string = "$0.0"
    let v165 : std_sync_Arc<rexie_Rexie> = Fable.Core.RustInterop.emitRustExpr v163 v164 
    let v166 : string = "true; $0 })"
    let v167 : bool = Fable.Core.RustInterop.emitRustExpr v165 v166 
    let v168 : string = "_optionm_map_"
    let v169 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr () v168 
    let v171 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v172 : US2 option = v169 |> Option.map v171 
    let v185 : US2 = US2_1
    let v186 : US2 = v172 |> Option.defaultValue v185 
    let v604 : US3 =
        match v186 with
        | US2_1 -> (* None *)
            US3_1
        | US2_0(v190) -> (* Some *)
            let v191 : string = "core-state-heap"
            let v192 : string = "state_core.get_data () / id: " + v191 + ""
            let v193 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v194 : bool = Fable.Core.RustInterop.emitRustExpr v192 v193 
            let v195 : string = "true; let __future_init = Box::pin(/*"
            let v196 : bool = Fable.Core.RustInterop.emitRustExpr () v195 
            let v197 : string = "*/ async { /*"
            let v198 : bool = Fable.Core.RustInterop.emitRustExpr () v197 
            let v199 : string = "*/ ()"
            let v200 : bool = Fable.Core.RustInterop.emitRustExpr () v199 
            let v201 : string = "store"
            let v202 : (string []) = [|v201|]
            let v203 : string = "$0.to_vec()"
            let v204 : Vec<string> = Fable.Core.RustInterop.emitRustExpr v202 v203 
            let v205 : unit = ()
            let v206 : string = $"true; let _func1_from_v205 = Func1::from(move |value| {{ //"
            let v207 : bool = Fable.Core.RustInterop.emitRustExpr () v206 
            let v208 : string = $"value"
            let v209 : string = Fable.Core.RustInterop.emitRustExpr () v208 
            (* run_target_args'
            let v214 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v215 : string = "&*$0"
            let v216 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v209 v215 
            let _run_target_args'_v214 = v216 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v217 : string = "&*$0"
            let v218 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v209 v217 
            let _run_target_args'_v214 = v218 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v219 : string = "&*$0"
            let v220 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v209 v219 
            let _run_target_args'_v214 = v220 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v222 : Ref<Str> = v209 |> unbox<Ref<Str>>
            let _run_target_args'_v214 = v222 
            #endif
#if FABLE_COMPILER_PYTHON
            let v226 : Ref<Str> = v209 |> unbox<Ref<Str>>
            let _run_target_args'_v214 = v226 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v230 : Ref<Str> = v209 |> unbox<Ref<Str>>
            let _run_target_args'_v214 = v230 
            #endif
#else
            let v234 : Ref<Str> = v209 |> unbox<Ref<Str>>
            let _run_target_args'_v214 = v234 
            #endif
            let v237 : Ref<Str> = _run_target_args'_v214 
            (* run_target_args'
            let v247 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v248 : string = "String::from($0)"
            let v249 : std_string_String = Fable.Core.RustInterop.emitRustExpr v237 v248 
            let _run_target_args'_v247 = v249 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v250 : string = "String::from($0)"
            let v251 : std_string_String = Fable.Core.RustInterop.emitRustExpr v237 v250 
            let _run_target_args'_v247 = v251 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v252 : string = "String::from($0)"
            let v253 : std_string_String = Fable.Core.RustInterop.emitRustExpr v237 v252 
            let _run_target_args'_v247 = v253 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v255 : std_string_String = v237 |> unbox<std_string_String>
            let _run_target_args'_v247 = v255 
            #endif
#if FABLE_COMPILER_PYTHON
            let v259 : std_string_String = v237 |> unbox<std_string_String>
            let _run_target_args'_v247 = v259 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v263 : std_string_String = v237 |> unbox<std_string_String>
            let _run_target_args'_v247 = v263 
            #endif
#else
            let v267 : std_string_String = v237 |> unbox<std_string_String>
            let _run_target_args'_v247 = v267 
            #endif
            let v270 : std_string_String = _run_target_args'_v247 
            let func1_from_result = v270 //
            let v276 : _ = func1_from_result
            let v277 : string = $"true; $0 /*"
            let v278 : bool = Fable.Core.RustInterop.emitRustExpr v276 v277 
            let v279 : string = $"*/ }}); //"
            let v280 : bool = Fable.Core.RustInterop.emitRustExpr () v279 
            let v281 : string = $"_func1_from_v205"
            let v282 : Func0<string, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v281 
            let v283 : string = "$0.into_iter().map(|x| $1(x.clone())).collect::<Vec<_>>()"
            let v284 : (string -> std_string_String) = closure10(v282)
            let v285 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v204, v284) v283 
            let v286 : std_sync_Arc<rexie_Rexie> = method11(v190)
            let v287 : string = "$0.transaction(&v285, rexie::TransactionMode::ReadOnly)"
            let v288 : Result<rexie_Transaction, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v286 v287 
            let v289 : (rexie_Error -> std_string_String) = method12()
            (* run_target_args'
            let v291 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v292 : string = "$0.map_err(|x| $1(x))"
            let v293 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v288, v289) v292 
            let _run_target_args'_v291 = v293 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v294 : string = "$0.map_err(|x| $1(x))"
            let v295 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v288, v289) v294 
            let _run_target_args'_v291 = v295 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v296 : string = "$0.map_err(|x| $1(x))"
            let v297 : Result<rexie_Transaction, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v288, v289) v296 
            let _run_target_args'_v291 = v297 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v298 : Result<rexie_Transaction, std_string_String> = match v288 with Ok x -> Ok x | Error x -> Error (v289 x)
            let _run_target_args'_v291 = v298 
            #endif
#if FABLE_COMPILER_PYTHON
            let v299 : Result<rexie_Transaction, std_string_String> = match v288 with Ok x -> Ok x | Error x -> Error (v289 x)
            let _run_target_args'_v291 = v299 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v300 : Result<rexie_Transaction, std_string_String> = match v288 with Ok x -> Ok x | Error x -> Error (v289 x)
            let _run_target_args'_v291 = v300 
            #endif
#else
            let v301 : Result<rexie_Transaction, std_string_String> = match v288 with Ok x -> Ok x | Error x -> Error (v289 x)
            let _run_target_args'_v291 = v301 
            #endif
            let v302 : Result<rexie_Transaction, std_string_String> = _run_target_args'_v291 
            let v305 : string = "$0?"
            let v306 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v302 v305 
            let v307 : string = method13()
            (* run_target_args'
            let v312 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v313 : string = "&*$0"
            let v314 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v307 v313 
            let _run_target_args'_v312 = v314 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v315 : string = "&*$0"
            let v316 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v307 v315 
            let _run_target_args'_v312 = v316 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v317 : string = "&*$0"
            let v318 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v307 v317 
            let _run_target_args'_v312 = v318 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v320 : Ref<Str> = v307 |> unbox<Ref<Str>>
            let _run_target_args'_v312 = v320 
            #endif
#if FABLE_COMPILER_PYTHON
            let v324 : Ref<Str> = v307 |> unbox<Ref<Str>>
            let _run_target_args'_v312 = v324 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v328 : Ref<Str> = v307 |> unbox<Ref<Str>>
            let _run_target_args'_v312 = v328 
            #endif
#else
            let v332 : Ref<Str> = v307 |> unbox<Ref<Str>>
            let _run_target_args'_v312 = v332 
            #endif
            let v335 : Ref<Str> = _run_target_args'_v312 
            let v341 : string = "v306.store($0)"
            let v342 : Result<rexie_Store, rexie_Error> = Fable.Core.RustInterop.emitRustExpr v335 v341 
            let v343 : (rexie_Error -> std_string_String) = method14()
            (* run_target_args'
            let v345 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v346 : string = "$0.map_err(|x| $1(x))"
            let v347 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v342, v343) v346 
            let _run_target_args'_v345 = v347 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v348 : string = "$0.map_err(|x| $1(x))"
            let v349 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v342, v343) v348 
            let _run_target_args'_v345 = v349 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v350 : string = "$0.map_err(|x| $1(x))"
            let v351 : Result<rexie_Store, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v342, v343) v350 
            let _run_target_args'_v345 = v351 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v352 : Result<rexie_Store, std_string_String> = match v342 with Ok x -> Ok x | Error x -> Error (v343 x)
            let _run_target_args'_v345 = v352 
            #endif
#if FABLE_COMPILER_PYTHON
            let v353 : Result<rexie_Store, std_string_String> = match v342 with Ok x -> Ok x | Error x -> Error (v343 x)
            let _run_target_args'_v345 = v353 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v354 : Result<rexie_Store, std_string_String> = match v342 with Ok x -> Ok x | Error x -> Error (v343 x)
            let _run_target_args'_v345 = v354 
            #endif
#else
            let v355 : Result<rexie_Store, std_string_String> = match v342 with Ok x -> Ok x | Error x -> Error (v343 x)
            let _run_target_args'_v345 = v355 
            #endif
            let v356 : Result<rexie_Store, std_string_String> = _run_target_args'_v345 
            let v359 : string = "$0?"
            let v360 : rexie_Store = Fable.Core.RustInterop.emitRustExpr v356 v359 
            let v361 : string = method15()
            (* run_target_args'
            let v366 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v367 : string = "&*$0"
            let v368 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v361 v367 
            let _run_target_args'_v366 = v368 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v369 : string = "&*$0"
            let v370 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v361 v369 
            let _run_target_args'_v366 = v370 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v371 : string = "&*$0"
            let v372 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v361 v371 
            let _run_target_args'_v366 = v372 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v374 : Ref<Str> = v361 |> unbox<Ref<Str>>
            let _run_target_args'_v366 = v374 
            #endif
#if FABLE_COMPILER_PYTHON
            let v378 : Ref<Str> = v361 |> unbox<Ref<Str>>
            let _run_target_args'_v366 = v378 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v382 : Ref<Str> = v361 |> unbox<Ref<Str>>
            let _run_target_args'_v366 = v382 
            #endif
#else
            let v386 : Ref<Str> = v361 |> unbox<Ref<Str>>
            let _run_target_args'_v366 = v386 
            #endif
            let v389 : Ref<Str> = _run_target_args'_v366 
            let v395 : string = "wasm_bindgen::JsValue::from_str($0)"
            let v396 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr v389 v395 
            let v397 : string = $"Box::pin(rexie::Store::get(&v360, v396))"
            let v398 : std_pin_Pin<Box<Dyn<std_future_Future<Result<wasm_bindgen_JsValue option, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v397 
            let v399 : string = "v398.await"
            let v400 : Result<wasm_bindgen_JsValue option, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v399 
            let v401 : (rexie_Error -> std_string_String) = method16()
            (* run_target_args'
            let v403 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v404 : string = "$0.map_err(|x| $1(x))"
            let v405 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v400, v401) v404 
            let _run_target_args'_v403 = v405 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v406 : string = "$0.map_err(|x| $1(x))"
            let v407 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v400, v401) v406 
            let _run_target_args'_v403 = v407 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v408 : string = "$0.map_err(|x| $1(x))"
            let v409 : Result<wasm_bindgen_JsValue option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v400, v401) v408 
            let _run_target_args'_v403 = v409 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v410 : Result<wasm_bindgen_JsValue option, std_string_String> = match v400 with Ok x -> Ok x | Error x -> Error (v401 x)
            let _run_target_args'_v403 = v410 
            #endif
#if FABLE_COMPILER_PYTHON
            let v411 : Result<wasm_bindgen_JsValue option, std_string_String> = match v400 with Ok x -> Ok x | Error x -> Error (v401 x)
            let _run_target_args'_v403 = v411 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v412 : Result<wasm_bindgen_JsValue option, std_string_String> = match v400 with Ok x -> Ok x | Error x -> Error (v401 x)
            let _run_target_args'_v403 = v412 
            #endif
#else
            let v413 : Result<wasm_bindgen_JsValue option, std_string_String> = match v400 with Ok x -> Ok x | Error x -> Error (v401 x)
            let _run_target_args'_v403 = v413 
            #endif
            let v414 : Result<wasm_bindgen_JsValue option, std_string_String> = _run_target_args'_v403 
            let v417 : string = "$0?"
            let v418 : wasm_bindgen_JsValue option = Fable.Core.RustInterop.emitRustExpr v414 v417 
            let v420 : (wasm_bindgen_JsValue -> US4) = method17()
            let v421 : US4 option = v418 |> Option.map v420 
            let v434 : US4 = US4_1
            let v435 : US4 = v421 |> Option.defaultValue v434 
            let v541 : US3 =
                match v435 with
                | US4_1 -> (* None *)
                    US3_1
                | US4_0(v439) -> (* Some *)
                    let v440 : wasm_bindgen_JsValue = method18(v439)
                    let v441 : string = "serde_wasm_bindgen::from_value(v440)"
                    let v442 : Result<serde_json_Value option, serde_wasm_bindgen_Error> = Fable.Core.RustInterop.emitRustExpr () v441 
                    let v443 : (serde_wasm_bindgen_Error -> std_string_String) = method19()
                    (* run_target_args'
                    let v445 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v446 : string = "$0.map_err(|x| $1(x))"
                    let v447 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v442, v443) v446 
                    let _run_target_args'_v445 = v447 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v448 : string = "$0.map_err(|x| $1(x))"
                    let v449 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v442, v443) v448 
                    let _run_target_args'_v445 = v449 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v450 : string = "$0.map_err(|x| $1(x))"
                    let v451 : Result<serde_json_Value option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v442, v443) v450 
                    let _run_target_args'_v445 = v451 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v452 : Result<serde_json_Value option, std_string_String> = match v442 with Ok x -> Ok x | Error x -> Error (v443 x)
                    let _run_target_args'_v445 = v452 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v453 : Result<serde_json_Value option, std_string_String> = match v442 with Ok x -> Ok x | Error x -> Error (v443 x)
                    let _run_target_args'_v445 = v453 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v454 : Result<serde_json_Value option, std_string_String> = match v442 with Ok x -> Ok x | Error x -> Error (v443 x)
                    let _run_target_args'_v445 = v454 
                    #endif
#else
                    let v455 : Result<serde_json_Value option, std_string_String> = match v442 with Ok x -> Ok x | Error x -> Error (v443 x)
                    let _run_target_args'_v445 = v455 
                    #endif
                    let v456 : Result<serde_json_Value option, std_string_String> = _run_target_args'_v445 
                    let v459 : string = "$0?"
                    let v460 : serde_json_Value option = Fable.Core.RustInterop.emitRustExpr v456 v459 
                    let v462 : (serde_json_Value -> US5) = method20()
                    let v463 : US5 option = v460 |> Option.map v462 
                    let v476 : US5 = US5_1
                    let v477 : US5 = v463 |> Option.defaultValue v476 
                    match v477 with
                    | US5_1 -> (* None *)
                        US3_1
                    | US5_0(v481) -> (* Some *)
                        let v482 : serde_json_Value = method21(v481)
                        let v483 : string = "serde_json::from_value(v482)"
                        let v484 : Result<Vec<uint8>, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr () v483 
                        let v485 : (serde_json_Error -> std_string_String) = method22()
                        (* run_target_args'
                        let v487 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v488 : string = "$0.map_err(|x| $1(x))"
                        let v489 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v484, v485) v488 
                        let _run_target_args'_v487 = v489 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v490 : string = "$0.map_err(|x| $1(x))"
                        let v491 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v484, v485) v490 
                        let _run_target_args'_v487 = v491 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v492 : string = "$0.map_err(|x| $1(x))"
                        let v493 : Result<Vec<uint8>, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v484, v485) v492 
                        let _run_target_args'_v487 = v493 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v494 : Result<Vec<uint8>, std_string_String> = match v484 with Ok x -> Ok x | Error x -> Error (v485 x)
                        let _run_target_args'_v487 = v494 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v495 : Result<Vec<uint8>, std_string_String> = match v484 with Ok x -> Ok x | Error x -> Error (v485 x)
                        let _run_target_args'_v487 = v495 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v496 : Result<Vec<uint8>, std_string_String> = match v484 with Ok x -> Ok x | Error x -> Error (v485 x)
                        let _run_target_args'_v487 = v496 
                        #endif
#else
                        let v497 : Result<Vec<uint8>, std_string_String> = match v484 with Ok x -> Ok x | Error x -> Error (v485 x)
                        let _run_target_args'_v487 = v497 
                        #endif
                        let v498 : Result<Vec<uint8>, std_string_String> = _run_target_args'_v487 
                        let v501 : string = "$0?"
                        let v502 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v498 v501 
                        let v503 : string = "fable_library_rust::NativeArray_::array_from($0.clone())"
                        let v504 : (uint8 []) = Fable.Core.RustInterop.emitRustExpr v502 v503 
                        let v505 : int32 = v504.Length
                        let v506 : string = "state_core.get_data () / data_len: " + string v505 + ""
                        let v507 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                        let v508 : bool = Fable.Core.RustInterop.emitRustExpr v506 v507 
                        let v509 : string = "$0.to_vec()"
                        let v510 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr v504 v509 
                        let v511 : string = "v510.as_slice()"
                        let v512 : Ref<Slice<uint8>> = Fable.Core.RustInterop.emitRustExpr () v511 
                        let v513 : string = "true; let mut v512 = v512"
                        let v514 : bool = Fable.Core.RustInterop.emitRustExpr () v513 
                        let v515 : string = "borsh::BorshDeserialize::deserialize(&mut v512)"
                        let v516 : Result<Heap3 option, borsh_io_Error> = Fable.Core.RustInterop.emitRustExpr () v515 
                        let v517 : (borsh_io_Error -> std_string_String) = method23()
                        (* run_target_args'
                        let v519 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v520 : string = "$0.map_err(|x| $1(x))"
                        let v521 : Result<Heap3 option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v516, v517) v520 
                        let _run_target_args'_v519 = v521 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v522 : string = "$0.map_err(|x| $1(x))"
                        let v523 : Result<Heap3 option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v516, v517) v522 
                        let _run_target_args'_v519 = v523 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v524 : string = "$0.map_err(|x| $1(x))"
                        let v525 : Result<Heap3 option, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v516, v517) v524 
                        let _run_target_args'_v519 = v525 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v526 : Result<Heap3 option, std_string_String> = match v516 with Ok x -> Ok x | Error x -> Error (v517 x)
                        let _run_target_args'_v519 = v526 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v527 : Result<Heap3 option, std_string_String> = match v516 with Ok x -> Ok x | Error x -> Error (v517 x)
                        let _run_target_args'_v519 = v527 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v528 : Result<Heap3 option, std_string_String> = match v516 with Ok x -> Ok x | Error x -> Error (v517 x)
                        let _run_target_args'_v519 = v528 
                        #endif
#else
                        let v529 : Result<Heap3 option, std_string_String> = match v516 with Ok x -> Ok x | Error x -> Error (v517 x)
                        let _run_target_args'_v519 = v529 
                        #endif
                        let v530 : Result<Heap3 option, std_string_String> = _run_target_args'_v519 
                        let v533 : string = "$0?"
                        let v534 : Heap3 option = Fable.Core.RustInterop.emitRustExpr v530 v533 
                        US3_0(v534)
            let v549 : Heap3 option option =
                match v541 with
                | US3_1 -> (* None *)
                    let v547 : Heap3 option option = None
                    v547
                | US3_0(v542) -> (* Some *)
                    let v544 : Heap3 option option = Some v542 
                    v544
            let v550 : Result<Heap3 option option, std_string_String> = Ok v549 
            let v551 : string = v52 + v53 
            let x = v550 //
            let v552 : _ = x
            let v553 : unit = ()
            (* run_target_args'
            let v554 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v555 : string = $"true; let _fix_closure_v553 = $0"
            let v556 : bool = Fable.Core.RustInterop.emitRustExpr v552 v555 
            let _run_target_args'_v554 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v557 : string = $"true; let _fix_closure_v553 = $0"
            let v558 : bool = Fable.Core.RustInterop.emitRustExpr v552 v557 
            let _run_target_args'_v554 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v559 : string = $"true; let _fix_closure_v553 = $0"
            let v560 : bool = Fable.Core.RustInterop.emitRustExpr v552 v559 
            let _run_target_args'_v554 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v554 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v554 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v554 = false 
            #endif
#else
            let _run_target_args'_v554 = false 
            #endif
            let v561 : bool = _run_target_args'_v554 
            let v563 : string = $"true; _fix_closure_v553 " + v551 + "); " + v52 + " // rust.fix_closure'"
            let v564 : bool = Fable.Core.RustInterop.emitRustExpr () v563 
            let v565 : string = "__future_init"
            let v566 : _ = Fable.Core.RustInterop.emitRustExpr () v565 
            let v567 : string = "v566"
            let v568 : std_pin_Pin<Box<Dyn<std_future_Future<Result<Heap3 option option, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v567 
            let v569 : string = "v568.await"
            let v570 : Result<Heap3 option option, std_string_String> = Fable.Core.RustInterop.emitRustExpr () v569 
            let v571 : (Heap3 option option -> US6) = method24()
            let v572 : (std_string_String -> US6) = method25()
            let v573 : US6 = match v570 with Ok x -> v571 x | Error x -> v572 x
            match v573 with
            | US6_1(v595) -> (* Error *)
                let v596 : string = "state_core.use_core_database (3) / error: " + string v595 + ""
                let v597 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v598 : bool = Fable.Core.RustInterop.emitRustExpr v596 v597 
                US3_1
            | US6_0(v574) -> (* Ok *)
                let v576 : (Heap3 option -> US3) = method26()
                let v577 : US3 option = v574 |> Option.map v576 
                let v590 : US3 = US3_1
                let v591 : US3 = v577 |> Option.defaultValue v590 
                v591
    let v629 : US7 =
        match v604 with
        | US3_1 -> (* None *)
            US7_1
        | US3_0(v605) -> (* Some *)
            let v607 : (Heap3 -> US8) = method27()
            let v608 : US8 option = v605 |> Option.map v607 
            let v621 : US8 = US8_1
            let v622 : US8 = v608 |> Option.defaultValue v621 
            US7_0(v622)
    let v636 : US8 =
        match v629 with
        | US7_0(v630) -> (* Some *)
            match v630 with
            | US8_0(v631) -> (* Some *)
                US8_0(v631)
            | _ ->
                US8_1
        | _ ->
            US8_1
    let v637 : string = v52 + v53 
    let x = v636 //
    let v638 : _ = x
    let v639 : unit = ()
    (* run_target_args'
    let v640 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v641 : string = $"true; let _fix_closure_v639 = $0"
    let v642 : bool = Fable.Core.RustInterop.emitRustExpr v638 v641 
    let _run_target_args'_v640 = true 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v643 : string = $"true; let _fix_closure_v639 = $0"
    let v644 : bool = Fable.Core.RustInterop.emitRustExpr v638 v643 
    let _run_target_args'_v640 = true 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v645 : string = $"true; let _fix_closure_v639 = $0"
    let v646 : bool = Fable.Core.RustInterop.emitRustExpr v638 v645 
    let _run_target_args'_v640 = true 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v640 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v640 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v640 = false 
    #endif
#else
    let _run_target_args'_v640 = false 
    #endif
    let v647 : bool = _run_target_args'_v640 
    let v649 : string = $"true; _fix_closure_v639 " + v637 + "); " + v52 + " // rust.fix_closure'"
    let v650 : bool = Fable.Core.RustInterop.emitRustExpr () v649 
    let v651 : string = "__future_init"
    let v652 : _ = Fable.Core.RustInterop.emitRustExpr () v651 
    let v653 : string = "v652"
    let v654 : std_pin_Pin<Box<Dyn<std_future_Future<US8>>>> = Fable.Core.RustInterop.emitRustExpr () v653 
    let v655 : string = $"true; $0 /*"
    let v656 : bool = Fable.Core.RustInterop.emitRustExpr v654 v655 
    let v657 : string = $"*/ }}); //"
    let v658 : bool = Fable.Core.RustInterop.emitRustExpr () v657 
    let v659 : string = $"_func0_from_v131"
    let v660 : Func0<std_pin_Pin<Box<Dyn<std_future_Future<US8>>>>> = Fable.Core.RustInterop.emitRustExpr () v659 
    let v661 : string = "leptos::prelude::ArcLocalResource::new(|| async move { $0().await })"
    let v662 : leptos_prelude_ArcLocalResource<US8> = Fable.Core.RustInterop.emitRustExpr v660 v661 
    let v663 : unit = ()
    let v664 : string = $"true; let _func0_from_v663 = Func0::from(move || {{ //"
    let v665 : bool = Fable.Core.RustInterop.emitRustExpr () v664 
    let v666 : string = "state_core.use_core_database (4) / effect core_state_heap / ##1"
    let v667 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v668 : bool = Fable.Core.RustInterop.emitRustExpr v666 v667 
    let v669 : web_sys_Window = method28()
    let v670 : Result<web_sys_Storage option, wasm_bindgen_JsValue> = method29(v669)
    let v671 : (web_sys_Storage option -> US9) = method30()
    let v672 : (wasm_bindgen_JsValue -> US9) = method31()
    let v673 : US9 = match v670 with Ok x -> v671 x | Error x -> v672 x
    let v699 : US10 =
        match v673 with
        | US9_1(v696) -> (* Error *)
            US10_1(v696)
        | US9_0(v674) -> (* Ok *)
            let v676 : (web_sys_Storage -> US11) = method32()
            let v677 : US11 option = v674 |> Option.map v676 
            let v690 : US11 = US11_1
            let v691 : US11 = v677 |> Option.defaultValue v690 
            US10_0(v691)
    let v1244 : bool =
        match v699 with
        | US10_0(v700) -> (* Ok *)
            match v700 with
            | US11_0(v701) -> (* Some *)
                let v702 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
                let v703 : US8 option = Fable.Core.RustInterop.emitRustExpr v662 v702 
                let v705 : (US8 -> US7) = method33()
                let v706 : US7 option = v703 |> Option.map v705 
                let v719 : US7 = US7_1
                let v720 : US7 = v706 |> Option.defaultValue v719 
                let v725 : string = $"%A{v720}"
                let v728 : string = "state_core.use_core_database (5) / effect core_state_heap / ##2 / core_state_heap: " + v725 + ""
                let v729 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v730 : bool = Fable.Core.RustInterop.emitRustExpr v728 v729 
                let v1173 : US8 =
                    match v720 with
                    | US7_0(v731) -> (* Some *)
                        match v731 with
                        | US8_0(v732) -> (* Some *)
                            US8_0(v732)
                        | _ ->
                            let v734 : web_sys_Storage = method34(v701)
                            let v735 : string = method35()
                            (* run_target_args'
                            let v740 : unit = ()
                            run_target_args' *)
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v741 : string = "&*$0"
                            let v742 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v735 v741 
                            let _run_target_args'_v740 = v742 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v743 : string = "&*$0"
                            let v744 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v735 v743 
                            let _run_target_args'_v740 = v744 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v745 : string = "&*$0"
                            let v746 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v735 v745 
                            let _run_target_args'_v740 = v746 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v748 : Ref<Str> = v735 |> unbox<Ref<Str>>
                            let _run_target_args'_v740 = v748 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v752 : Ref<Str> = v735 |> unbox<Ref<Str>>
                            let _run_target_args'_v740 = v752 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v756 : Ref<Str> = v735 |> unbox<Ref<Str>>
                            let _run_target_args'_v740 = v756 
                            #endif
#else
                            let v760 : Ref<Str> = v735 |> unbox<Ref<Str>>
                            let _run_target_args'_v740 = v760 
                            #endif
                            let v763 : Ref<Str> = _run_target_args'_v740 
                            let v769 : string = $"web_sys::Storage::get_item(&v734, $0)"
                            let v770 : Result<std_string_String option, wasm_bindgen_JsValue> = Fable.Core.RustInterop.emitRustExpr v763 v769 
                            let v771 : (std_string_String option -> US12) = method36()
                            let v772 : (wasm_bindgen_JsValue -> US12) = method37()
                            let v773 : US12 = match v770 with Ok x -> v771 x | Error x -> v772 x
                            let v802 : US13 =
                                match v773 with
                                | US12_1(v799) -> (* Error *)
                                    US13_1(v799)
                                | US12_0(v774) -> (* Ok *)
                                    let v775 : std_string_String option = method38(v774)
                                    let v776 : string = "serde_json::from_value(v775.into()).unwrap()"
                                    let v777 : std_string_String option = Fable.Core.RustInterop.emitRustExpr () v776 
                                    let v779 : (std_string_String -> US14) = method39()
                                    let v780 : US14 option = v777 |> Option.map v779 
                                    let v793 : US14 = US14_1
                                    let v794 : US14 = v780 |> Option.defaultValue v793 
                                    US13_0(v794)
                            let v808 : US15 =
                                match v802 with
                                | US13_1(v805) -> (* Error *)
                                    US15_1
                                | US13_0(v803) -> (* Ok *)
                                    US15_0(v803)
                            let v815 : US14 =
                                match v808 with
                                | US15_0(v809) -> (* Some *)
                                    match v809 with
                                    | US14_0(v810) -> (* Some *)
                                        US14_0(v810)
                                    | _ ->
                                        US14_1
                                | _ ->
                                    US14_1
                            let v823 : std_string_String option =
                                match v815 with
                                | US14_1 -> (* None *)
                                    let v821 : std_string_String option = None
                                    v821
                                | US14_0(v816) -> (* Some *)
                                    let v818 : std_string_String option = Some v816 
                                    v818
                            let v825 : (std_string_String -> US8) = method40()
                            let v826 : US8 option = v823 |> Option.map v825 
                            let v927 : (US8 -> US7) = method33()
                            let v928 : US7 option = v826 |> Option.map v927 
                            let v941 : US7 = US7_1
                            let v942 : US7 = v928 |> Option.defaultValue v941 
                            match v942 with
                            | US7_0(v946) -> (* Some *)
                                match v946 with
                                | US8_0(v947) -> (* Some *)
                                    US8_0(v947)
                                | _ ->
                                    US8_1
                            | _ ->
                                US8_1
                    | _ ->
                        let v954 : web_sys_Storage = method34(v701)
                        let v955 : string = method35()
                        (* run_target_args'
                        let v960 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v961 : string = "&*$0"
                        let v962 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v955 v961 
                        let _run_target_args'_v960 = v962 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v963 : string = "&*$0"
                        let v964 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v955 v963 
                        let _run_target_args'_v960 = v964 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v965 : string = "&*$0"
                        let v966 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v955 v965 
                        let _run_target_args'_v960 = v966 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v968 : Ref<Str> = v955 |> unbox<Ref<Str>>
                        let _run_target_args'_v960 = v968 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v972 : Ref<Str> = v955 |> unbox<Ref<Str>>
                        let _run_target_args'_v960 = v972 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v976 : Ref<Str> = v955 |> unbox<Ref<Str>>
                        let _run_target_args'_v960 = v976 
                        #endif
#else
                        let v980 : Ref<Str> = v955 |> unbox<Ref<Str>>
                        let _run_target_args'_v960 = v980 
                        #endif
                        let v983 : Ref<Str> = _run_target_args'_v960 
                        let v989 : string = $"web_sys::Storage::get_item(&v954, $0)"
                        let v990 : Result<std_string_String option, wasm_bindgen_JsValue> = Fable.Core.RustInterop.emitRustExpr v983 v989 
                        let v991 : (std_string_String option -> US12) = method36()
                        let v992 : (wasm_bindgen_JsValue -> US12) = method37()
                        let v993 : US12 = match v990 with Ok x -> v991 x | Error x -> v992 x
                        let v1022 : US13 =
                            match v993 with
                            | US12_1(v1019) -> (* Error *)
                                US13_1(v1019)
                            | US12_0(v994) -> (* Ok *)
                                let v995 : std_string_String option = method38(v994)
                                let v996 : string = "serde_json::from_value(v995.into()).unwrap()"
                                let v997 : std_string_String option = Fable.Core.RustInterop.emitRustExpr () v996 
                                let v999 : (std_string_String -> US14) = method39()
                                let v1000 : US14 option = v997 |> Option.map v999 
                                let v1013 : US14 = US14_1
                                let v1014 : US14 = v1000 |> Option.defaultValue v1013 
                                US13_0(v1014)
                        let v1028 : US15 =
                            match v1022 with
                            | US13_1(v1025) -> (* Error *)
                                US15_1
                            | US13_0(v1023) -> (* Ok *)
                                US15_0(v1023)
                        let v1035 : US14 =
                            match v1028 with
                            | US15_0(v1029) -> (* Some *)
                                match v1029 with
                                | US14_0(v1030) -> (* Some *)
                                    US14_0(v1030)
                                | _ ->
                                    US14_1
                            | _ ->
                                US14_1
                        let v1043 : std_string_String option =
                            match v1035 with
                            | US14_1 -> (* None *)
                                let v1041 : std_string_String option = None
                                v1041
                            | US14_0(v1036) -> (* Some *)
                                let v1038 : std_string_String option = Some v1036 
                                v1038
                        let v1045 : (std_string_String -> US8) = method40()
                        let v1046 : US8 option = v1043 |> Option.map v1045 
                        let v1147 : (US8 -> US7) = method33()
                        let v1148 : US7 option = v1046 |> Option.map v1147 
                        let v1161 : US7 = US7_1
                        let v1162 : US7 = v1148 |> Option.defaultValue v1161 
                        match v1162 with
                        | US7_0(v1166) -> (* Some *)
                            match v1166 with
                            | US8_0(v1167) -> (* Some *)
                                US8_0(v1167)
                            | _ ->
                                US8_1
                        | _ ->
                            US8_1
                let v1175 : string = $"%A{v1173}"
                let v1178 : string = "state_core.use_core_database (6) / effect core_state_heap / ##3 / core_state_heap: " + v1175 + ""
                let v1179 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v1180 : bool = Fable.Core.RustInterop.emitRustExpr v1178 v1179 
                match v1173 with
                | US8_0(v1181) -> (* Some *)
                    let v1182 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
                    let v1183 : string = "Box::pin($0)"
                    let v1184 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1182 v1183 
                    let v1185 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                    let v1186 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1184 v1185 
                    let v1187 : leptos_prelude_ArcRwSignal<bool> = v1186.l0
                    let v1188 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
                    let v1189 : bool = Fable.Core.RustInterop.emitRustExpr v1187 v1188 
                    let v1191 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
                    let v1194 : string = "*/ | { *x = $0(x.clone()) }); //"
                    let v1195 : (bool -> bool) = closure32(v1181)
                    let v1196 : bool = Fable.Core.RustInterop.emitRustExpr v1195 v1194 
                    let v1197 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
                    let v1198 : string = "Box::pin($0)"
                    let v1199 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1197 v1198 
                    let v1200 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                    let v1201 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1199 v1200 
                    let v1202 : leptos_prelude_ArcRwSignal<bool> = v1201.l1
                    let v1203 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
                    let v1204 : bool = Fable.Core.RustInterop.emitRustExpr v1202 v1203 
                    let v1206 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
                    let v1209 : string = "*/ | { *x = $0(x.clone()) }); //"
                    let v1210 : (bool -> bool) = closure33(v1181)
                    let v1211 : bool = Fable.Core.RustInterop.emitRustExpr v1210 v1209 
                    let v1212 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
                    let v1213 : string = "Box::pin($0)"
                    let v1214 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1212 v1213 
                    let v1215 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                    let v1216 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1214 v1215 
                    let v1217 : leptos_prelude_ArcRwSignal<std_string_String> = v1216.l2
                    let v1218 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
                    let v1219 : bool = Fable.Core.RustInterop.emitRustExpr v1217 v1218 
                    let v1221 : TypeEmit<std_string_String> = null |> unbox<TypeEmit<std_string_String>>
                    let v1224 : string = "*/ | { *x = $0(x.clone()) }); //"
                    let v1225 : (std_string_String -> std_string_String) = closure34(v1181)
                    let v1226 : bool = Fable.Core.RustInterop.emitRustExpr v1225 v1224 
                    let v1227 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
                    let v1228 : string = "Box::pin($0)"
                    let v1229 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1227 v1228 
                    let v1230 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                    let v1231 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1229 v1230 
                    let v1232 : leptos_prelude_ArcRwSignal<Heap0> = v1231.l3
                    let v1233 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
                    let v1234 : bool = Fable.Core.RustInterop.emitRustExpr v1232 v1233 
                    let v1236 : TypeEmit<Heap0> = null |> unbox<TypeEmit<Heap0>>
                    let v1239 : string = "*/ | { *x = $0(x.clone()) }); //"
                    let v1240 : (Heap0 -> Heap0) = closure35(v1181)
                    let v1241 : bool = Fable.Core.RustInterop.emitRustExpr v1240 v1239 
                    true
                | _ ->
                    false
            | _ ->
                false
        | _ ->
            false
    // rust.func0_from / is_unit
    let v1245 : string = $"true; /*"
    let v1246 : bool = Fable.Core.RustInterop.emitRustExpr () v1245 
    let v1247 : string = $"*/ }}); //"
    let v1248 : bool = Fable.Core.RustInterop.emitRustExpr () v1247 
    let v1249 : string = $"_func0_from_v663"
    let v1250 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v1249 
    let v1251 : string = "true; leptos::prelude::Effect::new(move |_| { v1250() })"
    let v1252 : bool = Fable.Core.RustInterop.emitRustExpr () v1251 
    let v1253 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1254 : (unit -> std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>) = closure36(v7)
    let v1255 : leptos_prelude_ArcMemo<std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>> = Fable.Core.RustInterop.emitRustExpr v1254 v1253 
    let v1256 : string = $"leptos::prelude::signal($0)"
    let struct (v1257 : leptos_prelude_ReadSignal<bool>, v1258 : leptos_prelude_WriteSignal<bool>) = Fable.Core.RustInterop.emitRustExpr false v1256 
    let v1259 : unit = ()
    let v1260 : string = $"true; let _func1_from_v1259 = Func1::from(move |value| {{ //"
    let v1261 : bool = Fable.Core.RustInterop.emitRustExpr () v1260 
    let v1262 : string = $"value"
    let v1263 : Heap3 = Fable.Core.RustInterop.emitRustExpr () v1262 
    let v1265 : string = $"%A{v1263}"
    let v1268 : string = $"Option::map(leptos::prelude::ArcLocalResource::get(&$0), |x| x.clone())"
    let v1269 : std_sync_Arc<rexie_Rexie> option = Fable.Core.RustInterop.emitRustExpr v127 v1268 
    let v1271 : (std_sync_Arc<rexie_Rexie> -> US2) = method9()
    let v1272 : US2 option = v1269 |> Option.map v1271 
    let v1285 : US2 = US2_1
    let v1286 : US2 = v1272 |> Option.defaultValue v1285 
    let v1290 : string = "true; let __future_init = Box::pin(/*"
    let v1291 : bool = Fable.Core.RustInterop.emitRustExpr () v1290 
    let v1292 : string = "*/ async move { /*"
    let v1293 : bool = Fable.Core.RustInterop.emitRustExpr () v1292 
    let v1294 : string = "*/ ()"
    let v1295 : bool = Fable.Core.RustInterop.emitRustExpr () v1294 
    let v1393 : bool =
        match v1286 with
        | US2_1 -> (* None *)
            let v1389 : string = "state_core.use_core_database (13) / set_core_state_heap_action / database=None"
            let v1390 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1391 : bool = Fable.Core.RustInterop.emitRustExpr v1389 v1390 
            false
        | US2_0(v1296) -> (* Some *)
            let v1297 : string = "state_core.use_core_database (12) / set_core_state_heap_action / value: " + string v1265 + ""
            let v1298 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1299 : bool = Fable.Core.RustInterop.emitRustExpr v1297 v1298 
            let v1301 : string = $"%A{v1263}"
            let v1304 : int64 = System.Convert.ToInt64 v1301.Length
            let v1305 : string = "state_core.set_data () / data_len: " + string v1304 + ""
            let v1306 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v1307 : bool = Fable.Core.RustInterop.emitRustExpr v1305 v1306 
            let v1308 : string = "true; let __future_init = Box::pin(/*"
            let v1309 : bool = Fable.Core.RustInterop.emitRustExpr () v1308 
            let v1310 : string = "*/ async move { /*"
            let v1311 : bool = Fable.Core.RustInterop.emitRustExpr () v1310 
            let v1312 : string = "*/ ()"
            let v1313 : bool = Fable.Core.RustInterop.emitRustExpr () v1312 
            let v1314 : string = "true; let mut data = Vec::new()"
            let v1315 : bool = Fable.Core.RustInterop.emitRustExpr () v1314 
            let v1316 : string = "true; borsh::BorshSerialize::serialize(&$0, &mut data).unwrap()"
            let v1317 : bool = Fable.Core.RustInterop.emitRustExpr v1263 v1316 
            let v1318 : string = "data"
            let v1319 : Vec<uint8> = Fable.Core.RustInterop.emitRustExpr () v1318 
            let v1320 : string = "serde_wasm_bindgen::to_value(&v1319).unwrap()"
            let v1321 : wasm_bindgen_JsValue = Fable.Core.RustInterop.emitRustExpr () v1320 
            let v1322 : string = method43()
            (* run_target_args'
            let v1327 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1328 : string = "&*$0"
            let v1329 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1322 v1328 
            let _run_target_args'_v1327 = v1329 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1330 : string = "&*$0"
            let v1331 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1322 v1330 
            let _run_target_args'_v1327 = v1331 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1332 : string = "&*$0"
            let v1333 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1322 v1332 
            let _run_target_args'_v1327 = v1333 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1335 : Ref<Str> = v1322 |> unbox<Ref<Str>>
            let _run_target_args'_v1327 = v1335 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1339 : Ref<Str> = v1322 |> unbox<Ref<Str>>
            let _run_target_args'_v1327 = v1339 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1343 : Ref<Str> = v1322 |> unbox<Ref<Str>>
            let _run_target_args'_v1327 = v1343 
            #endif
#else
            let v1347 : Ref<Str> = v1322 |> unbox<Ref<Str>>
            let _run_target_args'_v1327 = v1347 
            #endif
            let v1350 : Ref<Str> = _run_target_args'_v1327 
            let v1356 : string = "$0.transaction(&[\"store\"], rexie::TransactionMode::ReadWrite)?"
            let v1357 : rexie_Transaction = Fable.Core.RustInterop.emitRustExpr v1296 v1356 
            let v1358 : string = "v1357.store(\"store\")?"
            let v1359 : rexie_Store = Fable.Core.RustInterop.emitRustExpr () v1358 
            let v1360 : string = "true; v1359.put(&v1321, Some(&$0.into())).await?"
            let v1361 : bool = Fable.Core.RustInterop.emitRustExpr v1350 v1360 
            let v1362 : string = "true; v1357.done().await?"
            let v1363 : bool = Fable.Core.RustInterop.emitRustExpr () v1362 
            let v1364 : Result<unit, rexie_Error> = Ok () 
            let v1365 : string = v52 + v53 
            let x = v1364 //
            let v1366 : _ = x
            let v1367 : unit = ()
            (* run_target_args'
            let v1368 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1369 : string = $"true; let _fix_closure_v1367 = $0"
            let v1370 : bool = Fable.Core.RustInterop.emitRustExpr v1366 v1369 
            let _run_target_args'_v1368 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1371 : string = $"true; let _fix_closure_v1367 = $0"
            let v1372 : bool = Fable.Core.RustInterop.emitRustExpr v1366 v1371 
            let _run_target_args'_v1368 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1373 : string = $"true; let _fix_closure_v1367 = $0"
            let v1374 : bool = Fable.Core.RustInterop.emitRustExpr v1366 v1373 
            let _run_target_args'_v1368 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v1368 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v1368 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v1368 = false 
            #endif
#else
            let _run_target_args'_v1368 = false 
            #endif
            let v1375 : bool = _run_target_args'_v1368 
            let v1377 : string = $"true; _fix_closure_v1367 " + v1365 + "); " + v52 + " // rust.fix_closure'"
            let v1378 : bool = Fable.Core.RustInterop.emitRustExpr () v1377 
            let v1379 : string = "__future_init"
            let v1380 : _ = Fable.Core.RustInterop.emitRustExpr () v1379 
            let v1381 : string = "v1380"
            let v1382 : std_pin_Pin<Box<Dyn<std_future_Future<Result<unit, rexie_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v1381 
            let v1383 : string = "v1382.await"
            let v1384 : Result<unit, rexie_Error> = Fable.Core.RustInterop.emitRustExpr () v1383 
            (* run_target_args'
            let v1385 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1386 : string = "$0.unwrap()"
            Fable.Core.RustInterop.emitRustExpr v1384 v1386 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1387 : string = "$0.unwrap()"
            Fable.Core.RustInterop.emitRustExpr v1384 v1387 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1388 : string = "$0.unwrap()"
            Fable.Core.RustInterop.emitRustExpr v1384 v1388 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            match v1384 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
            #endif
#if FABLE_COMPILER_PYTHON
            match v1384 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            match v1384 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
            #endif
#else
            match v1384 with Ok x -> x | Error e -> failwith $"resultm.unwrap' / e: {e}"
            #endif
            // run_target_args' is_unit
            true
    let v1394 : string = v52 + v53 
    let x = () //
    let v1395 : _ = x
    let v1396 : unit = ()
    (* run_target_args'
    let v1397 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let _run_target_args'_v1397 = false 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let _run_target_args'_v1397 = false 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let _run_target_args'_v1397 = false 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let _run_target_args'_v1397 = false 
    #endif
#if FABLE_COMPILER_PYTHON
    let _run_target_args'_v1397 = false 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let _run_target_args'_v1397 = false 
    #endif
#else
    let _run_target_args'_v1397 = false 
    #endif
    let v1398 : bool = _run_target_args'_v1397 
    let v1400 : string = $"true; _fix_closure_v1396 " + v1394 + "); " + v52 + " // rust.fix_closure'"
    let v1401 : bool = Fable.Core.RustInterop.emitRustExpr () v1400 
    let v1402 : string = "__future_init"
    let v1403 : _ = Fable.Core.RustInterop.emitRustExpr () v1402 
    let v1404 : string = "v1403"
    let v1405 : std_pin_Pin<Box<Dyn<std_future_Future<unit>>>> = Fable.Core.RustInterop.emitRustExpr () v1404 
    let func1_from_result = v1405 //
    let v1406 : _ = func1_from_result
    let v1407 : string = $"true; $0 /*"
    let v1408 : bool = Fable.Core.RustInterop.emitRustExpr v1406 v1407 
    let v1409 : string = $"*/ }}); //"
    let v1410 : bool = Fable.Core.RustInterop.emitRustExpr () v1409 
    let v1411 : string = $"_func1_from_v1259"
    let v1412 : Func0<Heap3, std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>> = Fable.Core.RustInterop.emitRustExpr () v1411 
    let v1413 : string = "leptos::prelude::ArcAction::new(move |value: &std::sync::Arc<Heap3>| $0(value.clone()))"
    let v1414 : (Heap3 -> std_pin_Pin<Box<Dyn<std_future_Future<unit>>>>) = closure37(v1412)
    let v1415 : leptos_prelude_ArcAction<Heap3, unit> = Fable.Core.RustInterop.emitRustExpr v1414 v1413 
    let v1416 : unit = ()
    let v1417 : string = $"true; let _func0_from_v1416 = Func0::from(move || {{ //"
    let v1418 : bool = Fable.Core.RustInterop.emitRustExpr () v1417 
    let v1419 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v1420 : bool = Fable.Core.RustInterop.emitRustExpr v1257 v1419 
    let v1421 : string = "state_core.use_core_database (14) / effect new_core_state_heap / ##1 / loaded: " + string v1420 + ""
    let v1422 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1423 : bool = Fable.Core.RustInterop.emitRustExpr v1421 v1422 
    let v1424 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
    let v1425 : string = "Box::pin($0)"
    let v1426 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1424 v1425 
    let v1427 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v1428 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1426 v1427 
    let v1429 : leptos_prelude_ArcRwSignal<bool> = v1428.l0
    let v1430 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v1431 : bool = Fable.Core.RustInterop.emitRustExpr v1429 v1430 
    let v1432 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
    let v1433 : string = "Box::pin($0)"
    let v1434 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1432 v1433 
    let v1435 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v1436 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1434 v1435 
    let v1437 : leptos_prelude_ArcRwSignal<bool> = v1436.l1
    let v1438 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v1439 : bool = Fable.Core.RustInterop.emitRustExpr v1437 v1438 
    let v1440 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
    let v1441 : string = "Box::pin($0)"
    let v1442 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1440 v1441 
    let v1443 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v1444 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1442 v1443 
    let v1445 : leptos_prelude_ArcRwSignal<std_string_String> = v1444.l2
    let v1446 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v1447 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1445 v1446 
    let v1448 : leptos_prelude_ArcRwSignal<Heap1> = v7.l0
    let v1449 : string = "Box::pin($0)"
    let v1450 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1448 v1449 
    let v1451 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
    let v1452 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1450 v1451 
    let v1453 : leptos_prelude_ArcRwSignal<Heap0> = v1452.l3
    let v1454 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
    let v1455 : Heap0 = Fable.Core.RustInterop.emitRustExpr v1453 v1454 
    let v1456 : Heap3 = {l0 = v1431; l1 = v1439; l2 = v1447; l3 = v1455} : Heap3
    let v1458 : string = $"%A{v1456}"
    let v1461 : string = "state_core.use_core_database (15) / effect new_core_state_heap / ##2 / new_core_state_heap: " + string v1458 + ""
    let v1462 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1463 : bool = Fable.Core.RustInterop.emitRustExpr v1461 v1462 
    let v1464 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v1465 : std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>> = Fable.Core.RustInterop.emitRustExpr v1255 v1464 
    let v1466 : string = "dark_mode_key"
    (* run_target_args'
    let v1471 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v1472 : string = "&*$0"
    let v1473 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1466 v1472 
    let _run_target_args'_v1471 = v1473 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v1474 : string = "&*$0"
    let v1475 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1466 v1474 
    let _run_target_args'_v1471 = v1475 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v1476 : string = "&*$0"
    let v1477 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1466 v1476 
    let _run_target_args'_v1471 = v1477 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v1479 : Ref<Str> = v1466 |> unbox<Ref<Str>>
    let _run_target_args'_v1471 = v1479 
    #endif
#if FABLE_COMPILER_PYTHON
    let v1483 : Ref<Str> = v1466 |> unbox<Ref<Str>>
    let _run_target_args'_v1471 = v1483 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v1487 : Ref<Str> = v1466 |> unbox<Ref<Str>>
    let _run_target_args'_v1471 = v1487 
    #endif
#else
    let v1491 : Ref<Str> = v1466 |> unbox<Ref<Str>>
    let _run_target_args'_v1471 = v1491 
    #endif
    let v1494 : Ref<Str> = _run_target_args'_v1471 
    (* run_target_args'
    let v1504 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v1505 : string = "String::from($0)"
    let v1506 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1494 v1505 
    let _run_target_args'_v1504 = v1506 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v1507 : string = "String::from($0)"
    let v1508 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1494 v1507 
    let _run_target_args'_v1504 = v1508 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v1509 : string = "String::from($0)"
    let v1510 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1494 v1509 
    let _run_target_args'_v1504 = v1510 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v1512 : std_string_String = v1494 |> unbox<std_string_String>
    let _run_target_args'_v1504 = v1512 
    #endif
#if FABLE_COMPILER_PYTHON
    let v1516 : std_string_String = v1494 |> unbox<std_string_String>
    let _run_target_args'_v1504 = v1516 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v1520 : std_string_String = v1494 |> unbox<std_string_String>
    let _run_target_args'_v1504 = v1520 
    #endif
#else
    let v1524 : std_string_String = v1494 |> unbox<std_string_String>
    let _run_target_args'_v1504 = v1524 
    #endif
    let v1527 : std_string_String = _run_target_args'_v1504 
    let v1533 : std_string_String = method45(v1527)
    let v1534 : string = "std::collections::HashMap::get(&$0, &v1533).map(|x| x).cloned()"
    let v1535 : leptos_prelude_ArcRwSignal<bool> option = Fable.Core.RustInterop.emitRustExpr v1465 v1534 
    let v1537 : (leptos_prelude_ArcRwSignal<bool> -> US16) = method46()
    let v1538 : US16 option = v1535 |> Option.map v1537 
    let v1551 : US16 = US16_1
    let v1552 : US16 = v1538 |> Option.defaultValue v1551 
    let v1562 : US17 =
        match v1552 with
        | US16_1 -> (* None *)
            US17_1
        | US16_0(v1556) -> (* Some *)
            let v1557 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
            let v1558 : bool = Fable.Core.RustInterop.emitRustExpr v1556 v1557 
            US17_0(v1558)
    let v1565 : bool =
        match v1562 with
        | US17_1 -> (* None *)
            false
        | US17_0(v1563) -> (* Some *)
            v1563
    let v1566 : string = "state_core.use_core_database (16) / effect new_core_state_heap / ##3 / dark_mode_loading: " + string v1565 + ""
    let v1567 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1568 : bool = Fable.Core.RustInterop.emitRustExpr v1566 v1567 
    let v1569 : bool = v1565 = false
    let v1663 : bool =
        if v1569 then
            let v1570 : bool = v1420 = false
            if v1570 then
                let v1571 : string = $"true; leptos::prelude::WriteSignal::update(&$0, |x: &mut /*"
                let v1572 : bool = Fable.Core.RustInterop.emitRustExpr v1258 v1571 
                let v1574 : TypeEmit<bool> = null |> unbox<TypeEmit<bool>>
                let v1577 : string = "*/ | { *x = $0(x.clone()) }); //"
                let v1578 : (bool -> bool) = closure39()
                let v1579 : bool = Fable.Core.RustInterop.emitRustExpr v1578 v1577 
                true
            else
                let v1580 : string = "state_core.use_core_database (18) / effect new_core_state_heap / ##4"
                let v1581 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v1582 : bool = Fable.Core.RustInterop.emitRustExpr v1580 v1581 
                let v1583 : web_sys_Window = method28()
                let v1584 : Result<web_sys_Storage option, wasm_bindgen_JsValue> = method29(v1583)
                let v1585 : (web_sys_Storage option -> US9) = method30()
                let v1586 : (wasm_bindgen_JsValue -> US9) = method31()
                let v1587 : US9 = match v1584 with Ok x -> v1585 x | Error x -> v1586 x
                let v1613 : US10 =
                    match v1587 with
                    | US9_1(v1610) -> (* Error *)
                        US10_1(v1610)
                    | US9_0(v1588) -> (* Ok *)
                        let v1590 : (web_sys_Storage -> US11) = method32()
                        let v1591 : US11 option = v1588 |> Option.map v1590 
                        let v1604 : US11 = US11_1
                        let v1605 : US11 = v1591 |> Option.defaultValue v1604 
                        US10_0(v1605)
                match v1613 with
                | US10_0(v1614) -> (* Ok *)
                    match v1614 with
                    | US11_0(v1615) -> (* Some *)
                        let v1616 : string = "true; leptos::prelude::ArcAction::dispatch(&$0, $1.clone())"
                        let v1617 : bool = Fable.Core.RustInterop.emitRustExpr struct (v1415, v1456) v1616 
                        let v1618 : web_sys_Storage = method47(v1615)
                        let v1619 : string = method48()
                        (* run_target_args'
                        let v1624 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v1625 : string = "&*$0"
                        let v1626 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1619 v1625 
                        let _run_target_args'_v1624 = v1626 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v1627 : string = "&*$0"
                        let v1628 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1619 v1627 
                        let _run_target_args'_v1624 = v1628 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v1629 : string = "&*$0"
                        let v1630 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1619 v1629 
                        let _run_target_args'_v1624 = v1630 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v1632 : Ref<Str> = v1619 |> unbox<Ref<Str>>
                        let _run_target_args'_v1624 = v1632 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v1636 : Ref<Str> = v1619 |> unbox<Ref<Str>>
                        let _run_target_args'_v1624 = v1636 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v1640 : Ref<Str> = v1619 |> unbox<Ref<Str>>
                        let _run_target_args'_v1624 = v1640 
                        #endif
#else
                        let v1644 : Ref<Str> = v1619 |> unbox<Ref<Str>>
                        let _run_target_args'_v1624 = v1644 
                        #endif
                        let v1647 : Ref<Str> = _run_target_args'_v1624 
                        let v1653 : Heap3 = method49(v1456)
                        let v1654 : string = "serde_json::json!(v1653).to_string()"
                        let v1655 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v1654 
                        let v1656 : string = "$0.as_str()"
                        let v1657 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1655 v1656 
                        let v1658 : string = $"true; web_sys::Storage::set(&v1618, $0, v1657).unwrap()"
                        let v1659 : bool = Fable.Core.RustInterop.emitRustExpr v1647 v1658 
                        true
                    | _ ->
                        false
                | _ ->
                    false
        else
            false
    // rust.func0_from / is_unit
    let v1664 : string = $"true; /*"
    let v1665 : bool = Fable.Core.RustInterop.emitRustExpr () v1664 
    let v1666 : string = $"*/ }}); //"
    let v1667 : bool = Fable.Core.RustInterop.emitRustExpr () v1666 
    let v1668 : string = $"_func0_from_v1416"
    let v1669 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v1668 
    let v1670 : string = "true; leptos::prelude::Effect::new(move |_| { v1669() })"
    let v1671 : bool = Fable.Core.RustInterop.emitRustExpr () v1670 
    let v1672 : string = "class=\"flex flex-1\""
    let v1673 : (unit -> bool) = method50(v7)
    let v1674 : string = "class:dark"
    let v1675 : string = "" + v1674 + "={move || v1673()}"
    let v1676 : string = " " + v1672 + v52 + ""
    let v1677 : string = " " + v1675 + v1676 + ""
    let v1678 : string = "content.render ()"
    let v1679 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1680 : bool = Fable.Core.RustInterop.emitRustExpr v1678 v1679 
    let v1681 : string = "leptos_router::hooks::use_location()"
    let v1682 : leptos_router_location_Location = Fable.Core.RustInterop.emitRustExpr () v1681 
    let v1683 : string = "std::sync::Arc::new(leptos_router::hooks::use_navigate())"
    let v1684 : std_sync_Arc<Dyn<ActionFn2<Ref<Str>, leptos_router_NavigateOptions>>> = Fable.Core.RustInterop.emitRustExpr () v1683 
    let v1685 : string = "leptos_router::hooks::use_location()"
    let v1686 : leptos_router_location_Location = Fable.Core.RustInterop.emitRustExpr () v1685 
    let v1687 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v1688 : (unit -> string) = closure41(v1686)
    let v1689 : leptos_prelude_ArcMemo<string> = Fable.Core.RustInterop.emitRustExpr v1688 v1687 
    let v1690 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
    let v1691 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v1690 
    let v1692 : string = "$0.unwrap()"
    let v1693 : Heap2 = Fable.Core.RustInterop.emitRustExpr v1691 v1692 
    let v1694 : string = $"leptos::prelude::signal($0)"
    let v1695 : US18 = US18_0
    let struct (v1696 : leptos_prelude_ReadSignal<US18>, v1697 : leptos_prelude_WriteSignal<US18>) = Fable.Core.RustInterop.emitRustExpr v1695 v1694 
    let v1698 : string = $"leptos::prelude::signal($0)"
    let struct (v1699 : leptos_prelude_ReadSignal<bool>, v1700 : leptos_prelude_WriteSignal<bool>) = Fable.Core.RustInterop.emitRustExpr false v1698 
    let v1701 : unit = ()
    let v1702 : string = $"true; let _func0_from_v1701 = Func0::from(move || {{ //"
    let v1703 : bool = Fable.Core.RustInterop.emitRustExpr () v1702 
    let v1704 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v1705 : bool = Fable.Core.RustInterop.emitRustExpr v1699 v1704 
    let v1706 : string = "$0.hash"
    let v1707 : leptos_prelude_Memo<std_string_String> = Fable.Core.RustInterop.emitRustExpr v1682 v1706 
    let v1708 : string = $"leptos::prelude::Memo::get(&$0)"
    let v1709 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1707 v1708 
    let v1710 : string = $"leptos::prelude::ArcMemo::get(&$0)"
    let v1711 : string = Fable.Core.RustInterop.emitRustExpr v1689 v1710 
    let v1712 : string = $"{v1711}{v1709}"
    let v1713 : string = "content.render () / effect 1 / new_url_hash: " + v1712 + " / loaded: " + string v1705 + ""
    let v1714 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1715 : bool = Fable.Core.RustInterop.emitRustExpr v1713 v1714 
    let v1716 : bool = v1705 = false
    let v1848 : bool =
        if v1716 then
            let v1717 : std_string_String = method51(v1709)
            let v1718 : string = "v1717 == \"\""
            let v1719 : bool = Fable.Core.RustInterop.emitRustExpr () v1718 
            if v1719 then
                let v1720 : leptos_prelude_ArcRwSignal<Heap1> = v1693.l0
                let v1721 : string = "Box::pin($0)"
                let v1722 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1720 v1721 
                let v1723 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
                let v1724 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1722 v1723 
                let v1725 : leptos_prelude_ArcRwSignal<std_string_String> = v1724.l2
                let v1726 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
                let v1727 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1725 v1726 
                let v1728 : string = "fable_library_rust::String_::fromString($0)"
                let v1729 : string = Fable.Core.RustInterop.emitRustExpr v1727 v1728 
                let v1730 : string = "content.render () / effect 1 / url_hash: " + v1729 + ""
                let v1731 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
                let v1732 : bool = Fable.Core.RustInterop.emitRustExpr v1730 v1731 
                let v1734 : string = "#"
                let v1735 : bool = v1729.Contains v1734 
                if v1735 then
                    (* run_target_args'
                    let v1742 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1743 : string = "&*$0"
                    let v1744 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1729 v1743 
                    let _run_target_args'_v1742 = v1744 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1745 : string = "&*$0"
                    let v1746 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1729 v1745 
                    let _run_target_args'_v1742 = v1746 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1747 : string = "&*$0"
                    let v1748 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1729 v1747 
                    let _run_target_args'_v1742 = v1748 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1750 : Ref<Str> = v1729 |> unbox<Ref<Str>>
                    let _run_target_args'_v1742 = v1750 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1754 : Ref<Str> = v1729 |> unbox<Ref<Str>>
                    let _run_target_args'_v1742 = v1754 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1758 : Ref<Str> = v1729 |> unbox<Ref<Str>>
                    let _run_target_args'_v1742 = v1758 
                    #endif
#else
                    let v1762 : Ref<Str> = v1729 |> unbox<Ref<Str>>
                    let _run_target_args'_v1742 = v1762 
                    #endif
                    let v1765 : Ref<Str> = _run_target_args'_v1742 
                    let v1771 : string = "$0($1, Default::default())"
                    Fable.Core.RustInterop.emitRustExpr struct (v1684, v1765) v1771 
                    ()
            let v1772 : string = $"true; leptos::prelude::WriteSignal::set(&$0, $1); //"
            let v1773 : bool = Fable.Core.RustInterop.emitRustExpr struct (v1700, true) v1772 
            true
        else
            let v1774 : leptos_prelude_ArcRwSignal<Heap1> = v1693.l0
            let v1775 : string = "Box::pin($0)"
            let v1776 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v1774 v1775 
            let v1777 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
            let v1778 : Heap1 = Fable.Core.RustInterop.emitRustExpr v1776 v1777 
            let v1779 : leptos_prelude_ArcRwSignal<std_string_String> = v1778.l2
            (* run_target_args'
            let v1784 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1785 : string = "&*$0"
            let v1786 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1712 v1785 
            let _run_target_args'_v1784 = v1786 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1787 : string = "&*$0"
            let v1788 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1712 v1787 
            let _run_target_args'_v1784 = v1788 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1789 : string = "&*$0"
            let v1790 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1712 v1789 
            let _run_target_args'_v1784 = v1790 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1792 : Ref<Str> = v1712 |> unbox<Ref<Str>>
            let _run_target_args'_v1784 = v1792 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1796 : Ref<Str> = v1712 |> unbox<Ref<Str>>
            let _run_target_args'_v1784 = v1796 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1800 : Ref<Str> = v1712 |> unbox<Ref<Str>>
            let _run_target_args'_v1784 = v1800 
            #endif
#else
            let v1804 : Ref<Str> = v1712 |> unbox<Ref<Str>>
            let _run_target_args'_v1784 = v1804 
            #endif
            let v1807 : Ref<Str> = _run_target_args'_v1784 
            (* run_target_args'
            let v1817 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1818 : string = "String::from($0)"
            let v1819 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1807 v1818 
            let _run_target_args'_v1817 = v1819 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1820 : string = "String::from($0)"
            let v1821 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1807 v1820 
            let _run_target_args'_v1817 = v1821 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1822 : string = "String::from($0)"
            let v1823 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1807 v1822 
            let _run_target_args'_v1817 = v1823 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1825 : std_string_String = v1807 |> unbox<std_string_String>
            let _run_target_args'_v1817 = v1825 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1829 : std_string_String = v1807 |> unbox<std_string_String>
            let _run_target_args'_v1817 = v1829 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1833 : std_string_String = v1807 |> unbox<std_string_String>
            let _run_target_args'_v1817 = v1833 
            #endif
#else
            let v1837 : std_string_String = v1807 |> unbox<std_string_String>
            let _run_target_args'_v1817 = v1837 
            #endif
            let v1840 : std_string_String = _run_target_args'_v1817 
            let v1846 : string = $"true; leptos::prelude::ArcRwSignal::set(&$0, $1); //"
            let v1847 : bool = Fable.Core.RustInterop.emitRustExpr struct (v1779, v1840) v1846 
            false
    // rust.func0_from / is_unit
    let v1849 : string = $"true; /*"
    let v1850 : bool = Fable.Core.RustInterop.emitRustExpr () v1849 
    let v1851 : string = $"*/ }}); //"
    let v1852 : bool = Fable.Core.RustInterop.emitRustExpr () v1851 
    let v1853 : string = $"_func0_from_v1701"
    let v1854 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v1853 
    let v1855 : string = "true; leptos::prelude::Effect::new(move |_| { v1854() })"
    let v1856 : bool = Fable.Core.RustInterop.emitRustExpr () v1855 
    let v1857 : unit = ()
    let v1858 : string = $"true; let _func0_from_v1857 = Func0::from(move || {{ //"
    let v1859 : bool = Fable.Core.RustInterop.emitRustExpr () v1858 
    let v1860 : string = "$0.hash"
    let v1861 : leptos_prelude_Memo<std_string_String> = Fable.Core.RustInterop.emitRustExpr v1682 v1860 
    let v1862 : string = $"leptos::prelude::Memo::get(&$0)"
    let v1863 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1861 v1862 
    let v1864 : std_string_String = method52(v1863)
    let v1865 : string = "v1864.strip_prefix('#')"
    let v1866 : Ref<Str> option = Fable.Core.RustInterop.emitRustExpr () v1865 
    let v1867 : string = "r#\"" + v52 + "\"#"
    let v1868 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v1867 
    let v1869 : string = "v1866.unwrap_or(v1868)"
    let v1870 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v1869 
    let v1871 : string = "leptos_router::location::Url::try_from($0)"
    let v1872 : Result<leptos_router_Url, std_string_String> = Fable.Core.RustInterop.emitRustExpr v1870 v1871 
    let v1873 : (leptos_router_Url -> US20) = method53()
    let v1874 : (std_string_String -> US20) = method54()
    let v1875 : US20 = match v1872 with Ok x -> v1873 x | Error x -> v1874 x
    (* run_target_args'
    let v1880 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v1881 : string = "format!(\"{:#?}\", $0)"
    let v1882 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1875 v1881 
    let v1883 : string = "fable_library_rust::String_::fromString($0)"
    let v1884 : string = Fable.Core.RustInterop.emitRustExpr v1882 v1883 
    let _run_target_args'_v1880 = v1884 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v1885 : string = "format!(\"{:#?}\", $0)"
    let v1886 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1875 v1885 
    let v1887 : string = "fable_library_rust::String_::fromString($0)"
    let v1888 : string = Fable.Core.RustInterop.emitRustExpr v1886 v1887 
    let _run_target_args'_v1880 = v1888 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v1889 : string = "format!(\"{:#?}\", $0)"
    let v1890 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1875 v1889 
    let v1891 : string = "fable_library_rust::String_::fromString($0)"
    let v1892 : string = Fable.Core.RustInterop.emitRustExpr v1890 v1891 
    let _run_target_args'_v1880 = v1892 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v1894 : string = $"%A{v1875}"
    let _run_target_args'_v1880 = v1894 
    #endif
#if FABLE_COMPILER_PYTHON
    let v1898 : string = $"%A{v1875}"
    let _run_target_args'_v1880 = v1898 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v1902 : string = $"%A{v1875}"
    let _run_target_args'_v1880 = v1902 
    #endif
#else
    let v1906 : string = $"%A{v1875}"
    let _run_target_args'_v1880 = v1906 
    #endif
    let v1909 : string = _run_target_args'_v1880 
    let v1915 : string = "content.render () / effect 2 / hash_url: " + v1909 + ""
    let v1916 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v1917 : bool = Fable.Core.RustInterop.emitRustExpr v1915 v1916 
    let v2042 : bool =
        match v1875 with
        | US20_1(v2037) -> (* Error *)
            let v2038 : string = "content.render () / effect 2 / hash_url error: " + string v2037 + ""
            let v2039 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2040 : bool = Fable.Core.RustInterop.emitRustExpr v2038 v2039 
            false
        | US20_0(v1918) -> (* Ok *)
            let v1919 : string = "$0.pathname"
            let v1920 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1918 v1919 
            let v1921 : string = "fable_library_rust::String_::fromString($0)"
            let v1922 : string = Fable.Core.RustInterop.emitRustExpr v1920 v1921 
            let v1923 : string = "dice"
            let v1924 : string = "/" + v1923 + ""
            let v1926 : bool = v1922.StartsWith (v1924, false, null)
            let v1933 : US21 =
                if v1926 then
                    let v1929 : US19 = US19_0
                    let v1930 : US18 = US18_1(v1929)
                    US21_0(v1930)
                else
                    US21_1
            let v1951 : US21 =
                match v1933 with
                | US21_1 -> (* None *)
                    let v1936 : string = "$0.pathname"
                    let v1937 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1918 v1936 
                    let v1938 : string = "fable_library_rust::String_::fromString($0)"
                    let v1939 : string = Fable.Core.RustInterop.emitRustExpr v1937 v1938 
                    let v1940 : string = "lists"
                    let v1941 : string = "/" + v1940 + ""
                    let v1943 : bool = v1939.StartsWith (v1941, false, null)
                    if v1943 then
                        let v1946 : US18 = US18_2
                        US21_0(v1946)
                    else
                        US21_1
                | US21_0(v1934) -> (* Some *)
                    US21_0(v1934)
            let v1969 : US21 =
                match v1951 with
                | US21_1 -> (* None *)
                    let v1954 : string = "$0.pathname"
                    let v1955 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1918 v1954 
                    let v1956 : string = "fable_library_rust::String_::fromString($0)"
                    let v1957 : string = Fable.Core.RustInterop.emitRustExpr v1955 v1956 
                    let v1958 : string = "transactions"
                    let v1959 : string = "/" + v1958 + ""
                    let v1961 : bool = v1957.StartsWith (v1959, false, null)
                    if v1961 then
                        let v1964 : US18 = US18_3
                        US21_0(v1964)
                    else
                        US21_1
                | US21_0(v1952) -> (* Some *)
                    US21_0(v1952)
            let v1987 : US21 =
                match v1969 with
                | US21_1 -> (* None *)
                    let v1972 : string = "$0.pathname"
                    let v1973 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1918 v1972 
                    let v1974 : string = "fable_library_rust::String_::fromString($0)"
                    let v1975 : string = Fable.Core.RustInterop.emitRustExpr v1973 v1974 
                    let v1976 : string = "settings"
                    let v1977 : string = "/" + v1976 + ""
                    let v1979 : bool = v1975.StartsWith (v1977, false, null)
                    if v1979 then
                        let v1982 : US18 = US18_4
                        US21_0(v1982)
                    else
                        US21_1
                | US21_0(v1970) -> (* Some *)
                    US21_0(v1970)
            let v1992 : US18 =
                match v1987 with
                | US21_1 -> (* None *)
                    let v1989 : US19 = US19_0
                    US18_1(v1989)
                | US21_0(v1988) -> (* Some *)
                    v1988
            (* run_target_args'
            let v1997 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1998 : string = "format!(\"{:#?}\", $0)"
            let v1999 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1992 v1998 
            let v2000 : string = "fable_library_rust::String_::fromString($0)"
            let v2001 : string = Fable.Core.RustInterop.emitRustExpr v1999 v2000 
            let _run_target_args'_v1997 = v2001 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2002 : string = "format!(\"{:#?}\", $0)"
            let v2003 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1992 v2002 
            let v2004 : string = "fable_library_rust::String_::fromString($0)"
            let v2005 : string = Fable.Core.RustInterop.emitRustExpr v2003 v2004 
            let _run_target_args'_v1997 = v2005 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2006 : string = "format!(\"{:#?}\", $0)"
            let v2007 : std_string_String = Fable.Core.RustInterop.emitRustExpr v1992 v2006 
            let v2008 : string = "fable_library_rust::String_::fromString($0)"
            let v2009 : string = Fable.Core.RustInterop.emitRustExpr v2007 v2008 
            let _run_target_args'_v1997 = v2009 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2011 : string = $"%A{v1992}"
            let _run_target_args'_v1997 = v2011 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2015 : string = $"%A{v1992}"
            let _run_target_args'_v1997 = v2015 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2019 : string = $"%A{v1992}"
            let _run_target_args'_v1997 = v2019 
            #endif
#else
            let v2023 : string = $"%A{v1992}"
            let _run_target_args'_v1997 = v2023 
            #endif
            let v2026 : string = _run_target_args'_v1997 
            let v2032 : string = "content.render () / effect 2 / new_tab: " + v2026 + ""
            let v2033 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2034 : bool = Fable.Core.RustInterop.emitRustExpr v2032 v2033 
            let v2035 : string = $"true; leptos::prelude::WriteSignal::set(&$0, $1); //"
            let v2036 : bool = Fable.Core.RustInterop.emitRustExpr struct (v1697, v1992) v2035 
            true
    // rust.func0_from / is_unit
    let v2043 : string = $"true; /*"
    let v2044 : bool = Fable.Core.RustInterop.emitRustExpr () v2043 
    let v2045 : string = $"*/ }}); //"
    let v2046 : bool = Fable.Core.RustInterop.emitRustExpr () v2045 
    let v2047 : string = $"_func0_from_v1857"
    let v2048 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v2047 
    let v2049 : string = "true; leptos::prelude::Effect::new(move |_| { v2048() })"
    let v2050 : bool = Fable.Core.RustInterop.emitRustExpr () v2049 
    let v2051 : string = "class=\"flex flex-1 max-[100px]:[overflow-x:auto]\""
    let v2052 : string = " " + v2051 + v52 + ""
    let v2053 : string = "class=\"flex flex-1 flex-col [width:100vw] [max-width:100vw] max-[100px]:[min-width:800px] [height:100vh] [max-height:100dvh] [max-height:-webkit-fill-available] max-[60px]:[min-height:600px] bg-gray-50 text-gray-700 text-sm\""
    let v2054 : string = " " + v2053 + v52 + ""
    let v2055 : string = "class=\"flex flex-1 flex-col [overflow:hidden]\""
    let v2056 : string = " " + v2055 + v52 + ""
    let v2057 : string = $"leptos::prelude::ReadSignal::get(&$0)"
    let v2058 : US18 = Fable.Core.RustInterop.emitRustExpr v1696 v2057 
    let v5356 : US22 =
        match v2058 with
        | US18_1(v2059) -> (* Dice *)
            let v2060 : string = "dice_view.render (1)"
            let v2061 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2062 : bool = Fable.Core.RustInterop.emitRustExpr v2060 v2061 
            let v2063 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
            let v2064 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v2063 
            let v2065 : string = "$0.unwrap()"
            let v2066 : Heap2 = Fable.Core.RustInterop.emitRustExpr v2064 v2065 
            let v2067 : string = "use_transactions.render (1)"
            let v2068 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2069 : bool = Fable.Core.RustInterop.emitRustExpr v2067 v2068 
            let v2070 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2071 : (unit -> Vec<string>) = closure44(v2066)
            let v2072 : leptos_prelude_ArcMemo<Vec<string>> = Fable.Core.RustInterop.emitRustExpr v2071 v2070 
            let v2073 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2074 : (unit -> (struct (string * US23 * string * bool * bool) [])) = closure46(v2072)
            let v2075 : leptos_prelude_ArcMemo<(struct (string * US23 * string * bool * bool) [])> = Fable.Core.RustInterop.emitRustExpr v2074 v2073 
            let v2076 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2077 : (unit -> Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>) = closure48(v2066, v2072)
            let v2078 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>> = Fable.Core.RustInterop.emitRustExpr v2077 v2076 
            let v2079 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2080 : (unit -> Vec<struct (string * US23 * string * bool * bool)>) = closure51(v2078)
            let v2081 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr v2080 v2079 
            let v2082 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2083 : (unit -> (string [])) = closure55(v2078)
            let v2084 : leptos_prelude_ArcMemo<(string [])> = Fable.Core.RustInterop.emitRustExpr v2083 v2082 
            let v2085 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) = closure60()
            let v2086 : leptos_prelude_ArcMemo<Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>> = method78(v2081, v2085)
            let v2088 : string = $"%A{v2086}"
            let v2091 : string = "use_transactions.render (7) / root func0 / result: " + string v2088 + ""
            let v2092 : int64 = 200L
            let v2093 : string = method8(v2092, v2091)
            let v2094 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2095 : bool = Fable.Core.RustInterop.emitRustExpr v2093 v2094 
            let v2096 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2097 : (unit -> Result<(struct (string * unativeint * Heap5) []) option, std_string_String>) = closure90(v2084, v2086)
            let v2098 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v2097 v2096 
            let v2099 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2100 : (unit -> Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String>) = closure107(v2098)
            let v2101 : leptos_prelude_ArcMemo<Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v2100 v2099 
            let v2102 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2103 : (unit -> Vec<struct (string * US23 * string * bool * bool)>) = closure115(v2101)
            let v2104 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr v2103 v2102 
            let v2105 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option)) = closure119()
            let v2106 : leptos_prelude_ArcMemo<Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>> = method159(v2104, v2105)
            let v2108 : string = $"%A{v2106}"
            let v2111 : string = "use_transactions.render (12) / rpc_response func0 / result: " + string v2108 + ""
            let v2112 : int64 = 200L
            let v2113 : string = method8(v2112, v2111)
            let v2114 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2115 : bool = Fable.Core.RustInterop.emitRustExpr v2113 v2114 
            let v2116 : unit = ()
            let v2117 : string = $"true; let _func1_from_v2116 = Func1::from(move |value| {{ //"
            let v2118 : bool = Fable.Core.RustInterop.emitRustExpr () v2117 
            let v2119 : string = $"value"
            let v2120 : Heap6 = Fable.Core.RustInterop.emitRustExpr () v2119 
            let v2122 : string = $"%A{v2120}"
            let v2125 : string = "dice_view.render (2) / set_max_action / value: " + string v2122 + ""
            let v2126 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2127 : bool = Fable.Core.RustInterop.emitRustExpr v2125 v2126 
            let v2128 : string = "true; let __future_init = Box::pin(/*"
            let v2129 : bool = Fable.Core.RustInterop.emitRustExpr () v2128 
            let v2130 : string = "*/ async move { /*"
            let v2131 : bool = Fable.Core.RustInterop.emitRustExpr () v2130 
            let v2132 : string = "*/ ()"
            let v2133 : bool = Fable.Core.RustInterop.emitRustExpr () v2132 
            let v2134 : string = "2.0"
            (* run_target_args'
            let v2139 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2140 : string = "&*$0"
            let v2141 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2134 v2140 
            let _run_target_args'_v2139 = v2141 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2142 : string = "&*$0"
            let v2143 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2134 v2142 
            let _run_target_args'_v2139 = v2143 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2144 : string = "&*$0"
            let v2145 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2134 v2144 
            let _run_target_args'_v2139 = v2145 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2147 : Ref<Str> = v2134 |> unbox<Ref<Str>>
            let _run_target_args'_v2139 = v2147 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2151 : Ref<Str> = v2134 |> unbox<Ref<Str>>
            let _run_target_args'_v2139 = v2151 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2155 : Ref<Str> = v2134 |> unbox<Ref<Str>>
            let _run_target_args'_v2139 = v2155 
            #endif
#else
            let v2159 : Ref<Str> = v2134 |> unbox<Ref<Str>>
            let _run_target_args'_v2139 = v2159 
            #endif
            let v2162 : Ref<Str> = _run_target_args'_v2139 
            (* run_target_args'
            let v2172 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2173 : string = "String::from($0)"
            let v2174 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2162 v2173 
            let _run_target_args'_v2172 = v2174 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2175 : string = "String::from($0)"
            let v2176 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2162 v2175 
            let _run_target_args'_v2172 = v2176 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2177 : string = "String::from($0)"
            let v2178 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2162 v2177 
            let _run_target_args'_v2172 = v2178 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2180 : std_string_String = v2162 |> unbox<std_string_String>
            let _run_target_args'_v2172 = v2180 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2184 : std_string_String = v2162 |> unbox<std_string_String>
            let _run_target_args'_v2172 = v2184 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2188 : std_string_String = v2162 |> unbox<std_string_String>
            let _run_target_args'_v2172 = v2188 
            #endif
#else
            let v2192 : std_string_String = v2162 |> unbox<std_string_String>
            let _run_target_args'_v2172 = v2192 
            #endif
            let v2195 : std_string_String = _run_target_args'_v2172 
            let v2201 : string = "dontcare"
            (* run_target_args'
            let v2206 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2207 : string = "&*$0"
            let v2208 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2201 v2207 
            let _run_target_args'_v2206 = v2208 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2209 : string = "&*$0"
            let v2210 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2201 v2209 
            let _run_target_args'_v2206 = v2210 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2211 : string = "&*$0"
            let v2212 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2201 v2211 
            let _run_target_args'_v2206 = v2212 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2214 : Ref<Str> = v2201 |> unbox<Ref<Str>>
            let _run_target_args'_v2206 = v2214 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2218 : Ref<Str> = v2201 |> unbox<Ref<Str>>
            let _run_target_args'_v2206 = v2218 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2222 : Ref<Str> = v2201 |> unbox<Ref<Str>>
            let _run_target_args'_v2206 = v2222 
            #endif
#else
            let v2226 : Ref<Str> = v2201 |> unbox<Ref<Str>>
            let _run_target_args'_v2206 = v2226 
            #endif
            let v2229 : Ref<Str> = _run_target_args'_v2206 
            (* run_target_args'
            let v2239 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2240 : string = "String::from($0)"
            let v2241 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2229 v2240 
            let _run_target_args'_v2239 = v2241 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2242 : string = "String::from($0)"
            let v2243 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2229 v2242 
            let _run_target_args'_v2239 = v2243 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2244 : string = "String::from($0)"
            let v2245 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2229 v2244 
            let _run_target_args'_v2239 = v2245 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2247 : std_string_String = v2229 |> unbox<std_string_String>
            let _run_target_args'_v2239 = v2247 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2251 : std_string_String = v2229 |> unbox<std_string_String>
            let _run_target_args'_v2239 = v2251 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2255 : std_string_String = v2229 |> unbox<std_string_String>
            let _run_target_args'_v2239 = v2255 
            #endif
#else
            let v2259 : std_string_String = v2229 |> unbox<std_string_String>
            let _run_target_args'_v2239 = v2259 
            #endif
            let v2262 : std_string_String = _run_target_args'_v2239 
            let v2268 : string = "EXPERIMENTAL_tx_status"
            (* run_target_args'
            let v2273 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2274 : string = "&*$0"
            let v2275 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2268 v2274 
            let _run_target_args'_v2273 = v2275 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2276 : string = "&*$0"
            let v2277 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2268 v2276 
            let _run_target_args'_v2273 = v2277 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2278 : string = "&*$0"
            let v2279 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2268 v2278 
            let _run_target_args'_v2273 = v2279 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2281 : Ref<Str> = v2268 |> unbox<Ref<Str>>
            let _run_target_args'_v2273 = v2281 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2285 : Ref<Str> = v2268 |> unbox<Ref<Str>>
            let _run_target_args'_v2273 = v2285 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2289 : Ref<Str> = v2268 |> unbox<Ref<Str>>
            let _run_target_args'_v2273 = v2289 
            #endif
#else
            let v2293 : Ref<Str> = v2268 |> unbox<Ref<Str>>
            let _run_target_args'_v2273 = v2293 
            #endif
            let v2296 : Ref<Str> = _run_target_args'_v2273 
            (* run_target_args'
            let v2306 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2307 : string = "String::from($0)"
            let v2308 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2296 v2307 
            let _run_target_args'_v2306 = v2308 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2309 : string = "String::from($0)"
            let v2310 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2296 v2309 
            let _run_target_args'_v2306 = v2310 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2311 : string = "String::from($0)"
            let v2312 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2296 v2311 
            let _run_target_args'_v2306 = v2312 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2314 : std_string_String = v2296 |> unbox<std_string_String>
            let _run_target_args'_v2306 = v2314 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2318 : std_string_String = v2296 |> unbox<std_string_String>
            let _run_target_args'_v2306 = v2318 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2322 : std_string_String = v2296 |> unbox<std_string_String>
            let _run_target_args'_v2306 = v2322 
            #endif
#else
            let v2326 : std_string_String = v2296 |> unbox<std_string_String>
            let _run_target_args'_v2306 = v2326 
            #endif
            let v2329 : std_string_String = _run_target_args'_v2306 
            let v2335 : string = "9JgptZpFQGtUvusnoF9ysVqHXD8fXCri8mFxPTMnt3kS"
            (* run_target_args'
            let v2340 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2341 : string = "&*$0"
            let v2342 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2335 v2341 
            let _run_target_args'_v2340 = v2342 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2343 : string = "&*$0"
            let v2344 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2335 v2343 
            let _run_target_args'_v2340 = v2344 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2345 : string = "&*$0"
            let v2346 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2335 v2345 
            let _run_target_args'_v2340 = v2346 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2348 : Ref<Str> = v2335 |> unbox<Ref<Str>>
            let _run_target_args'_v2340 = v2348 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2352 : Ref<Str> = v2335 |> unbox<Ref<Str>>
            let _run_target_args'_v2340 = v2352 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2356 : Ref<Str> = v2335 |> unbox<Ref<Str>>
            let _run_target_args'_v2340 = v2356 
            #endif
#else
            let v2360 : Ref<Str> = v2335 |> unbox<Ref<Str>>
            let _run_target_args'_v2340 = v2360 
            #endif
            let v2363 : Ref<Str> = _run_target_args'_v2340 
            (* run_target_args'
            let v2373 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2374 : string = "String::from($0)"
            let v2375 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2363 v2374 
            let _run_target_args'_v2373 = v2375 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2376 : string = "String::from($0)"
            let v2377 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2363 v2376 
            let _run_target_args'_v2373 = v2377 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2378 : string = "String::from($0)"
            let v2379 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2363 v2378 
            let _run_target_args'_v2373 = v2379 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2381 : std_string_String = v2363 |> unbox<std_string_String>
            let _run_target_args'_v2373 = v2381 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2385 : std_string_String = v2363 |> unbox<std_string_String>
            let _run_target_args'_v2373 = v2385 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2389 : std_string_String = v2363 |> unbox<std_string_String>
            let _run_target_args'_v2373 = v2389 
            #endif
#else
            let v2393 : std_string_String = v2363 |> unbox<std_string_String>
            let _run_target_args'_v2373 = v2393 
            #endif
            let v2396 : std_string_String = _run_target_args'_v2373 
            let v2402 : string = "bowen"
            (* run_target_args'
            let v2407 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2408 : string = "&*$0"
            let v2409 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2402 v2408 
            let _run_target_args'_v2407 = v2409 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2410 : string = "&*$0"
            let v2411 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2402 v2410 
            let _run_target_args'_v2407 = v2411 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2412 : string = "&*$0"
            let v2413 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2402 v2412 
            let _run_target_args'_v2407 = v2413 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2415 : Ref<Str> = v2402 |> unbox<Ref<Str>>
            let _run_target_args'_v2407 = v2415 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2419 : Ref<Str> = v2402 |> unbox<Ref<Str>>
            let _run_target_args'_v2407 = v2419 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2423 : Ref<Str> = v2402 |> unbox<Ref<Str>>
            let _run_target_args'_v2407 = v2423 
            #endif
#else
            let v2427 : Ref<Str> = v2402 |> unbox<Ref<Str>>
            let _run_target_args'_v2407 = v2427 
            #endif
            let v2430 : Ref<Str> = _run_target_args'_v2407 
            (* run_target_args'
            let v2440 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2441 : string = "String::from($0)"
            let v2442 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2430 v2441 
            let _run_target_args'_v2440 = v2442 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2443 : string = "String::from($0)"
            let v2444 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2430 v2443 
            let _run_target_args'_v2440 = v2444 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2445 : string = "String::from($0)"
            let v2446 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2430 v2445 
            let _run_target_args'_v2440 = v2446 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2448 : std_string_String = v2430 |> unbox<std_string_String>
            let _run_target_args'_v2440 = v2448 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2452 : std_string_String = v2430 |> unbox<std_string_String>
            let _run_target_args'_v2440 = v2452 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2456 : std_string_String = v2430 |> unbox<std_string_String>
            let _run_target_args'_v2440 = v2456 
            #endif
#else
            let v2460 : std_string_String = v2430 |> unbox<std_string_String>
            let _run_target_args'_v2440 = v2460 
            #endif
            let v2463 : std_string_String = _run_target_args'_v2440 
            let v2469 : (std_string_String []) = [|v2396; v2463|]
            let v2470 : string = "$0.to_vec()"
            let v2471 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr v2469 v2470 
            let v2472 : string = "crate::model::near::rpc::RpcInput { jsonrpc: $0, id: $1, method: $2, params: v2471 }"
            let v2473 : crate_model_near_rpc_RpcInput = Fable.Core.RustInterop.emitRustExpr struct (v2195, v2262, v2329) v2472 
            let v2474 : string = method167()
            (* run_target_args'
            let v2479 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2480 : string = "&*$0"
            let v2481 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2474 v2480 
            let _run_target_args'_v2479 = v2481 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2482 : string = "&*$0"
            let v2483 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2474 v2482 
            let _run_target_args'_v2479 = v2483 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2484 : string = "&*$0"
            let v2485 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2474 v2484 
            let _run_target_args'_v2479 = v2485 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2487 : Ref<Str> = v2474 |> unbox<Ref<Str>>
            let _run_target_args'_v2479 = v2487 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2491 : Ref<Str> = v2474 |> unbox<Ref<Str>>
            let _run_target_args'_v2479 = v2491 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2495 : Ref<Str> = v2474 |> unbox<Ref<Str>>
            let _run_target_args'_v2479 = v2495 
            #endif
#else
            let v2499 : Ref<Str> = v2474 |> unbox<Ref<Str>>
            let _run_target_args'_v2479 = v2499 
            #endif
            let v2502 : Ref<Str> = _run_target_args'_v2479 
            (* run_target_args'
            let v2512 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2513 : string = "String::from($0)"
            let v2514 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2502 v2513 
            let _run_target_args'_v2512 = v2514 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2515 : string = "String::from($0)"
            let v2516 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2502 v2515 
            let _run_target_args'_v2512 = v2516 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2517 : string = "String::from($0)"
            let v2518 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2502 v2517 
            let _run_target_args'_v2512 = v2518 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2520 : std_string_String = v2502 |> unbox<std_string_String>
            let _run_target_args'_v2512 = v2520 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2524 : std_string_String = v2502 |> unbox<std_string_String>
            let _run_target_args'_v2512 = v2524 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2528 : std_string_String = v2502 |> unbox<std_string_String>
            let _run_target_args'_v2512 = v2528 
            #endif
#else
            let v2532 : std_string_String = v2502 |> unbox<std_string_String>
            let _run_target_args'_v2512 = v2532 
            #endif
            let v2535 : std_string_String = _run_target_args'_v2512 
            let v2541 : std_string_String = method92(v2535)
            let v2542 : string = "reqwest_wasm::Client::builder().build().map_err(|err| err.to_string())?.post(v2541)"
            let v2543 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr () v2542 
            let v2544 : string = "reqwest_wasm::RequestBuilder::json(v2543, &v2473)"
            let v2545 : reqwest_RequestBuilder = Fable.Core.RustInterop.emitRustExpr () v2544 
            let v2546 : reqwest_RequestBuilder = method94(v2545)
            let v2547 : string = "Box::pin(reqwest_wasm::RequestBuilder::send(v2546))"
            let v2548 : std_pin_Pin<Box<Dyn<std_future_Future<Result<reqwest_Response, reqwest_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v2547 
            let v2549 : string = "v2548.await"
            let v2550 : Result<reqwest_Response, reqwest_Error> = Fable.Core.RustInterop.emitRustExpr () v2549 
            let v2551 : (reqwest_Error -> std_string_String) = method95()
            (* run_target_args'
            let v2553 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2554 : string = "$0.map_err(|x| $1(x))"
            let v2555 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2550, v2551) v2554 
            let _run_target_args'_v2553 = v2555 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2556 : string = "$0.map_err(|x| $1(x))"
            let v2557 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2550, v2551) v2556 
            let _run_target_args'_v2553 = v2557 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2558 : string = "$0.map_err(|x| $1(x))"
            let v2559 : Result<reqwest_Response, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2550, v2551) v2558 
            let _run_target_args'_v2553 = v2559 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2560 : Result<reqwest_Response, std_string_String> = match v2550 with Ok x -> Ok x | Error x -> Error (v2551 x)
            let _run_target_args'_v2553 = v2560 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2561 : Result<reqwest_Response, std_string_String> = match v2550 with Ok x -> Ok x | Error x -> Error (v2551 x)
            let _run_target_args'_v2553 = v2561 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2562 : Result<reqwest_Response, std_string_String> = match v2550 with Ok x -> Ok x | Error x -> Error (v2551 x)
            let _run_target_args'_v2553 = v2562 
            #endif
#else
            let v2563 : Result<reqwest_Response, std_string_String> = match v2550 with Ok x -> Ok x | Error x -> Error (v2551 x)
            let _run_target_args'_v2553 = v2563 
            #endif
            let v2564 : Result<reqwest_Response, std_string_String> = _run_target_args'_v2553 
            let v2567 : string = "$0?"
            let v2568 : reqwest_Response = Fable.Core.RustInterop.emitRustExpr v2564 v2567 
            let v2569 : string = "Box::pin(reqwest_wasm::Response::text(v2568))"
            let v2570 : std_pin_Pin<Box<Dyn<std_future_Future<Result<std_string_String, reqwest_Error>>>>> = Fable.Core.RustInterop.emitRustExpr () v2569 
            let v2571 : string = "v2570.await"
            let v2572 : Result<std_string_String, reqwest_Error> = Fable.Core.RustInterop.emitRustExpr () v2571 
            let v2573 : (reqwest_Error -> std_string_String) = method95()
            (* run_target_args'
            let v2575 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2576 : string = "$0.map_err(|x| $1(x))"
            let v2577 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2572, v2573) v2576 
            let _run_target_args'_v2575 = v2577 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2578 : string = "$0.map_err(|x| $1(x))"
            let v2579 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2572, v2573) v2578 
            let _run_target_args'_v2575 = v2579 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2580 : string = "$0.map_err(|x| $1(x))"
            let v2581 : Result<std_string_String, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2572, v2573) v2580 
            let _run_target_args'_v2575 = v2581 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2582 : Result<std_string_String, std_string_String> = match v2572 with Ok x -> Ok x | Error x -> Error (v2573 x)
            let _run_target_args'_v2575 = v2582 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2583 : Result<std_string_String, std_string_String> = match v2572 with Ok x -> Ok x | Error x -> Error (v2573 x)
            let _run_target_args'_v2575 = v2583 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2584 : Result<std_string_String, std_string_String> = match v2572 with Ok x -> Ok x | Error x -> Error (v2573 x)
            let _run_target_args'_v2575 = v2584 
            #endif
#else
            let v2585 : Result<std_string_String, std_string_String> = match v2572 with Ok x -> Ok x | Error x -> Error (v2573 x)
            let _run_target_args'_v2575 = v2585 
            #endif
            let v2586 : Result<std_string_String, std_string_String> = _run_target_args'_v2575 
            let v2589 : string = "$0?"
            let v2590 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2586 v2589 
            let v2591 : US14 = US14_0(v2590)
            let v2592 : Result<US14, std_string_String> = Ok v2591 
            let v2594 : string = $"%A{v2592}"
            let v2597 : string = "dice_view.render (x) / roll_action new_arc_action / result1 / result: " + string v2594 + ""
            let v2598 : int64 = 200L
            let v2599 : string = method8(v2598, v2597)
            let v2600 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2601 : bool = Fable.Core.RustInterop.emitRustExpr v2599 v2600 
            let v2602 : (US14 -> US57) = method168()
            let v2603 : (std_string_String -> US57) = method169()
            let v2604 : US57 = match v2592 with Ok x -> v2602 x | Error x -> v2603 x
            let v2926 : US58 =
                match v2604 with
                | US57_0(v2605) -> (* Ok *)
                    match v2605 with
                    | US14_0(v2606) -> (* Some *)
                        let v2607 : string = "fable_library_rust::String_::fromString($0)"
                        let v2608 : string = Fable.Core.RustInterop.emitRustExpr v2606 v2607 
                        let v2609 : string = method41(v2608)
                        (* run_target_args'
                        let v2614 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2615 : string = "&*$0"
                        let v2616 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2609 v2615 
                        let _run_target_args'_v2614 = v2616 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2617 : string = "&*$0"
                        let v2618 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2609 v2617 
                        let _run_target_args'_v2614 = v2618 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2619 : string = "&*$0"
                        let v2620 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2609 v2619 
                        let _run_target_args'_v2614 = v2620 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2622 : Ref<Str> = v2609 |> unbox<Ref<Str>>
                        let _run_target_args'_v2614 = v2622 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2626 : Ref<Str> = v2609 |> unbox<Ref<Str>>
                        let _run_target_args'_v2614 = v2626 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2630 : Ref<Str> = v2609 |> unbox<Ref<Str>>
                        let _run_target_args'_v2614 = v2630 
                        #endif
#else
                        let v2634 : Ref<Str> = v2609 |> unbox<Ref<Str>>
                        let _run_target_args'_v2614 = v2634 
                        #endif
                        let v2637 : Ref<Str> = _run_target_args'_v2614 
                        let v2643 : string = "serde_json::from_str(&$0)"
                        let v2644 : Result<crate_model_near_rpc_RpcResponse, serde_json_Error> = Fable.Core.RustInterop.emitRustExpr v2637 v2643 
                        let v2645 : (serde_json_Error -> std_string_String) = method42()
                        (* run_target_args'
                        let v2647 : unit = ()
                        run_target_args' *)
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2648 : string = "$0.map_err(|x| $1(x))"
                        let v2649 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2644, v2645) v2648 
                        let _run_target_args'_v2647 = v2649 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2650 : string = "$0.map_err(|x| $1(x))"
                        let v2651 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2644, v2645) v2650 
                        let _run_target_args'_v2647 = v2651 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2652 : string = "$0.map_err(|x| $1(x))"
                        let v2653 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = Fable.Core.RustInterop.emitRustExpr struct (v2644, v2645) v2652 
                        let _run_target_args'_v2647 = v2653 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2654 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v2644 with Ok x -> Ok x | Error x -> Error (v2645 x)
                        let _run_target_args'_v2647 = v2654 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2655 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v2644 with Ok x -> Ok x | Error x -> Error (v2645 x)
                        let _run_target_args'_v2647 = v2655 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2656 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v2644 with Ok x -> Ok x | Error x -> Error (v2645 x)
                        let _run_target_args'_v2647 = v2656 
                        #endif
#else
                        let v2657 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = match v2644 with Ok x -> Ok x | Error x -> Error (v2645 x)
                        let _run_target_args'_v2647 = v2657 
                        #endif
                        let v2658 : Result<crate_model_near_rpc_RpcResponse, std_string_String> = _run_target_args'_v2647 
                        let v2661 : (crate_model_near_rpc_RpcResponse -> US60) = method170()
                        let v2662 : (std_string_String -> US60) = method171()
                        let v2663 : US60 = match v2658 with Ok x -> v2661 x | Error x -> v2662 x
                        let v2910 : US61 =
                            match v2663 with
                            | US60_1(v2907) -> (* Error *)
                                US61_1(v2907)
                            | US60_0(v2664) -> (* Ok *)
                                let v2665 : string = "$0.jsonrpc"
                                let v2666 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2664 v2665 
                                let v2667 : string = "$0.result"
                                let v2668 : crate_model_near_rpc_TransactionStatus option = Fable.Core.RustInterop.emitRustExpr v2664 v2667 
                                let v2670 : (crate_model_near_rpc_TransactionStatus -> struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) []))) = method150()
                                let v2671 : struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option = v2668 |> Option.map v2670 
                                let v2858 : string = "$0.error"
                                let v2859 : crate_model_near_rpc_RpcError option = Fable.Core.RustInterop.emitRustExpr v2664 v2858 
                                let v2861 : (crate_model_near_rpc_RpcError -> struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String)) = method157()
                                let v2862 : struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option = v2859 |> Option.map v2861 
                                let v2904 : string = "$0.id"
                                let v2905 : std_string_String option = Fable.Core.RustInterop.emitRustExpr v2664 v2904 
                                US61_0(v2666, v2671, v2862, v2905)
                        match v2910 with
                        | US61_1(v2917) -> (* Error *)
                            US58_1(v2917)
                        | US61_0(v2911, v2912, v2913, v2914) -> (* Ok *)
                            let v2915 : US59 = US59_0(v2911, v2912, v2913, v2914)
                            US58_0(v2915)
                    | _ ->
                        let v2921 : US59 = US59_1
                        US58_0(v2921)
                | _ ->
                    let v2924 : US59 = US59_1
                    US58_0(v2924)
            let v2932 : Result<US59, std_string_String> =
                match v2926 with
                | US58_1(v2929) -> (* Error *)
                    let v2930 : Result<US59, std_string_String> = Error v2929 
                    v2930
                | US58_0(v2927) -> (* Ok *)
                    let v2928 : Result<US59, std_string_String> = Ok v2927 
                    v2928
            let v2934 : string = $"%A{v2932}"
            let v2937 : string = "dice_view.render (x) / roll_action new_arc_action / result2 / result: " + string v2934 + ""
            let v2938 : int64 = 200L
            let v2939 : string = method8(v2938, v2937)
            let v2940 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v2941 : bool = Fable.Core.RustInterop.emitRustExpr v2939 v2940 
            let v2942 : string = v52 + v53 
            let x = v2932 //
            let v2943 : _ = x
            let v2944 : unit = ()
            (* run_target_args'
            let v2945 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2946 : string = $"true; let _fix_closure_v2944 = $0"
            let v2947 : bool = Fable.Core.RustInterop.emitRustExpr v2943 v2946 
            let _run_target_args'_v2945 = true 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2948 : string = $"true; let _fix_closure_v2944 = $0"
            let v2949 : bool = Fable.Core.RustInterop.emitRustExpr v2943 v2948 
            let _run_target_args'_v2945 = true 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2950 : string = $"true; let _fix_closure_v2944 = $0"
            let v2951 : bool = Fable.Core.RustInterop.emitRustExpr v2943 v2950 
            let _run_target_args'_v2945 = true 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let _run_target_args'_v2945 = false 
            #endif
#if FABLE_COMPILER_PYTHON
            let _run_target_args'_v2945 = false 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let _run_target_args'_v2945 = false 
            #endif
#else
            let _run_target_args'_v2945 = false 
            #endif
            let v2952 : bool = _run_target_args'_v2945 
            let v2954 : string = $"true; _fix_closure_v2944 " + v2942 + "); " + v52 + " // rust.fix_closure'"
            let v2955 : bool = Fable.Core.RustInterop.emitRustExpr () v2954 
            let v2956 : string = "__future_init"
            let v2957 : _ = Fable.Core.RustInterop.emitRustExpr () v2956 
            let v2958 : string = "v2957"
            let v2959 : std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>> = Fable.Core.RustInterop.emitRustExpr () v2958 
            let func1_from_result = v2959 //
            let v2960 : _ = func1_from_result
            let v2961 : string = $"true; $0 /*"
            let v2962 : bool = Fable.Core.RustInterop.emitRustExpr v2960 v2961 
            let v2963 : string = $"*/ }}); //"
            let v2964 : bool = Fable.Core.RustInterop.emitRustExpr () v2963 
            let v2965 : string = $"_func1_from_v2116"
            let v2966 : Func0<Heap6, std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>> = Fable.Core.RustInterop.emitRustExpr () v2965 
            let v2967 : string = "leptos::prelude::ArcAction::new(move |value: &std::sync::Arc<Heap6>| $0(value.clone()))"
            let v2968 : (Heap6 -> std_pin_Pin<Box<Dyn<std_future_Future<Result<US59, std_string_String>>>>>) = closure141(v2966)
            let v2969 : leptos_prelude_ArcAction<Heap6, Result<US59, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v2968 v2967 
            let v2970 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2971 : (unit -> Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>) = closure142(v2969)
            let v2972 : leptos_prelude_ArcMemo<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v2971 v2970 
            let v2973 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2974 : (unit -> string option) = closure147(v2972)
            let v2975 : leptos_prelude_ArcMemo<string option> = Fable.Core.RustInterop.emitRustExpr v2974 v2973 
            let v2976 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2977 : (unit -> US31) = closure152(v2066)
            let v2978 : leptos_prelude_ArcMemo<US31> = Fable.Core.RustInterop.emitRustExpr v2977 v2976 
            let v2979 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2980 : (unit -> Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))>) = closure153(v2066)
            let v2981 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<std_string_String> * leptos_prelude_WriteSignal<std_string_String>))>> = Fable.Core.RustInterop.emitRustExpr v2980 v2979 
            let v2982 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v2983 : (unit -> Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>) = closure158(v2981)
            let v2984 : leptos_prelude_ArcMemo<Vec<struct (int32 * leptos_prelude_ReadSignal<std_string_String>)>> = Fable.Core.RustInterop.emitRustExpr v2983 v2982 
            let v2985 : string = "vec![" + v52 + "]"
            let v2986 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v2985 
            let v2987 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v2988 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v2986 v2987 
            let v2989 : string = "class=\"flex flex-col [position:relative]\""
            let v2990 : string = " " + v2989 + v52 + ""
            let v2991 : string = "$0"
            let v2992 : (unit -> string) = closure161()
            let v2993 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v2992 v2991 
            let v2994 : string = "$0"
            let v2995 : (unit -> bool) = closure162()
            let v2996 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v2995 v2994 
            let v2997 : string = "class=\"[position:absolute] [right:0] [top:0]\""
            let v2998 : string = " " + v2997 + v52 + ""
            let v2999 : string = "v2988"
            let v3000 : string = v2999 + v52 
            let v3001 : string = v3000 + v52 
            let v3002 : string = "vec![" + v3001 + "]"
            let v3003 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3002 
            let v3004 : string = "leptos::prelude::Fragment::new($0)"
            let v3005 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3003 v3004 
            let v3006 : string = "leptos::prelude::AnyView::from($0)"
            let v3007 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3005 v3006 
            let v3008 : string = "div"
            let v3009 : string = "<" + v3008 + " " + v2998 + ">move || { v3007 }</" + v3008 + ">"
            let v3010 : string = "leptos::prelude::view! { " + v3009 + " }"
            let v3011 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3010 
            let v3012 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3011 |> unbox
            let v3013 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3014 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3012 v3013 
            let v3015 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v2993(())"
            let v3016 : string = "open=move || v2996(())"
            let v3017 : string = " " + v3015 + v52 + ""
            let v3018 : string = " " + v3016 + v3017 + ""
            let v3019 : string = "$0"
            let v3020 : (unit -> string) = closure163()
            let v3021 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3020 v3019 
            let v3022 : string = "$0"
            let v3023 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure164()
            let v3024 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v3023 v3022 
            let v3025 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v3024(()) + \" \" + &v3021(())"
            let v3026 : string = " " + v3025 + v52 + ""
            let v3027 : string = "class=\"flex items-center gap-2\""
            let v3028 : string = " " + v3027 + v52 + ""
            let v3029 : (unit -> string) = method187()
            let v3030 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
            let v3031 : string = " " + v3030 + v52 + ""
            let v3032 : string = v3029 ()
            (* run_target_args'
            let v3037 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3038 : string = "&*$0"
            let v3039 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3032 v3038 
            let _run_target_args'_v3037 = v3039 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3040 : string = "&*$0"
            let v3041 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3032 v3040 
            let _run_target_args'_v3037 = v3041 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3042 : string = "&*$0"
            let v3043 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3032 v3042 
            let _run_target_args'_v3037 = v3043 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3045 : Ref<Str> = v3032 |> unbox<Ref<Str>>
            let _run_target_args'_v3037 = v3045 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3049 : Ref<Str> = v3032 |> unbox<Ref<Str>>
            let _run_target_args'_v3037 = v3049 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3053 : Ref<Str> = v3032 |> unbox<Ref<Str>>
            let _run_target_args'_v3037 = v3053 
            #endif
#else
            let v3057 : Ref<Str> = v3032 |> unbox<Ref<Str>>
            let _run_target_args'_v3037 = v3057 
            #endif
            let v3060 : Ref<Str> = _run_target_args'_v3037 
            (* run_target_args'
            let v3070 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3071 : string = "String::from($0)"
            let v3072 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3060 v3071 
            let _run_target_args'_v3070 = v3072 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3073 : string = "String::from($0)"
            let v3074 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3060 v3073 
            let _run_target_args'_v3070 = v3074 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3075 : string = "String::from($0)"
            let v3076 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3060 v3075 
            let _run_target_args'_v3070 = v3076 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3078 : std_string_String = v3060 |> unbox<std_string_String>
            let _run_target_args'_v3070 = v3078 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3082 : std_string_String = v3060 |> unbox<std_string_String>
            let _run_target_args'_v3070 = v3082 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3086 : std_string_String = v3060 |> unbox<std_string_String>
            let _run_target_args'_v3070 = v3086 
            #endif
#else
            let v3090 : std_string_String = v3060 |> unbox<std_string_String>
            let _run_target_args'_v3070 = v3090 
            #endif
            let v3093 : std_string_String = _run_target_args'_v3070 
            let v3099 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v3100 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3093 v3099 
            let v3101 : string = "v3100"
            let v3102 : string = v3101 + v52 
            let v3103 : string = v3102 + v52 
            let v3104 : string = "vec![" + v3103 + "]"
            let v3105 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3104 
            let v3106 : string = "leptos::prelude::Fragment::new($0)"
            let v3107 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3105 v3106 
            let v3108 : string = "leptos::prelude::AnyView::from($0)"
            let v3109 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3107 v3108 
            let v3110 : string = "span"
            let v3111 : string = "<" + v3110 + " " + v3031 + ">move || { v3109 }</" + v3110 + ">"
            let v3112 : string = "leptos::prelude::view! { " + v3111 + " }"
            let v3113 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3112 
            let v3114 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v3113 |> unbox
            let v3115 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3116 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3114 v3115 
            let v3117 : string = "v3116"
            let v3118 : string = v3117 + v52 
            let v3119 : string = v3118 + v52 
            let v3120 : string = "vec![" + v3119 + "]"
            let v3121 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3120 
            let v3122 : string = "leptos::prelude::Fragment::new($0)"
            let v3123 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3121 v3122 
            let v3124 : string = "leptos::prelude::AnyView::from($0)"
            let v3125 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3123 v3124 
            let v3126 : string = "<" + v3008 + " " + v3028 + ">move || { v3125 }</" + v3008 + ">"
            let v3127 : string = "leptos::prelude::view! { " + v3126 + " }"
            let v3128 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3127 
            let v3129 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3128 |> unbox
            let v3130 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3131 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3129 v3130 
            let v3132 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
            let v3133 : string = " " + v3132 + v52 + ""
            let v3134 : string = "$0"
            let v3135 : (unit -> string) = closure166()
            let v3136 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3135 v3134 
            let v3137 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v3138 : string = "viewBox=\"0 0 20 20\""
            let v3139 : string = "fill=\"currentColor\""
            let v3140 : string = "class=move || \" \".to_owned() + &v3136(())"
            let v3141 : string = " " + v3137 + v52 + ""
            let v3142 : string = " " + v3138 + v3141 + ""
            let v3143 : string = " " + v3139 + v3142 + ""
            let v3144 : string = " " + v3140 + v3143 + ""
            let v3145 : string = "fill-rule=\"evenodd\""
            let v3146 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
            let v3147 : string = "clip-rule=\"evenodd\""
            let v3148 : string = " " + v3145 + v52 + ""
            let v3149 : string = " " + v3146 + v3148 + ""
            let v3150 : string = " " + v3147 + v3149 + ""
            let v3151 : string = "vec![" + v52 + "]"
            let v3152 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3151 
            let v3153 : string = "leptos::prelude::Fragment::new($0)"
            let v3154 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3152 v3153 
            let v3155 : string = "leptos::prelude::AnyView::from($0)"
            let v3156 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3154 v3155 
            let v3157 : string = "path"
            let v3158 : string = "<" + v3157 + " " + v3150 + ">move || { v3156 }</" + v3157 + ">"
            let v3159 : string = "leptos::prelude::view! { " + v3158 + " }"
            let v3160 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3159 
            let v3161 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v3160 |> unbox
            let v3162 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3163 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3161 v3162 
            let v3164 : string = "v3163"
            let v3165 : string = v3164 + v52 
            let v3166 : string = v3165 + v52 
            let v3167 : string = "vec![" + v3166 + "]"
            let v3168 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3167 
            let v3169 : string = "leptos::prelude::Fragment::new($0)"
            let v3170 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3168 v3169 
            let v3171 : string = "leptos::prelude::AnyView::from($0)"
            let v3172 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3170 v3171 
            let v3173 : string = "svg"
            let v3174 : string = "<" + v3173 + " " + v3144 + ">move || { v3172 }</" + v3173 + ">"
            let v3175 : string = "leptos::prelude::view! { " + v3174 + " }"
            let v3176 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3175 
            let v3177 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v3176 |> unbox
            let v3178 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3179 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3177 v3178 
            let v3180 : string = "v3179"
            let v3181 : string = v3180 + v52 
            let v3182 : string = v3181 + v52 
            let v3183 : string = "vec![" + v3182 + "]"
            let v3184 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3183 
            let v3185 : string = "leptos::prelude::Fragment::new($0)"
            let v3186 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3184 v3185 
            let v3187 : string = "leptos::prelude::AnyView::from($0)"
            let v3188 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3186 v3187 
            let v3189 : string = "<" + v3110 + " " + v3133 + ">move || { v3188 }</" + v3110 + ">"
            let v3190 : string = "leptos::prelude::view! { " + v3189 + " }"
            let v3191 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3190 
            let v3192 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v3191 |> unbox
            let v3193 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3194 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3192 v3193 
            let v3195 : string = "v3194"
            let v3196 : string = v3195 + v52 
            let v3197 : string = v3196 + v52 
            let v3198 : string = "v3131"
            let v3199 : string = ", "
            let v3200 : string = v3198 + v3199 
            let v3201 : string = v3200 + v3197 
            let v3202 : string = "vec![" + v3201 + "]"
            let v3203 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3202 
            let v3204 : string = "leptos::prelude::Fragment::new($0)"
            let v3205 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3203 v3204 
            let v3206 : string = "leptos::prelude::AnyView::from($0)"
            let v3207 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3205 v3206 
            let v3208 : string = "summary"
            let v3209 : string = "<" + v3208 + " " + v3026 + ">move || { v3207 }</" + v3208 + ">"
            let v3210 : string = "leptos::prelude::view! { " + v3209 + " }"
            let v3211 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3210 
            let v3212 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v3211 |> unbox
            let v3213 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3214 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3212 v3213 
            let v3215 : string = "class=\"flex flex-1 flex-col\""
            let v3216 : string = " " + v3215 + v52 + ""
            let v3217 : string = "Func0::new(move || $0())"
            let v3218 : (unit -> leptos_dom_Fragment) = closure167(v2066, v2969, v2975, v2978, v2984)
            let v3219 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v3218 v3217 
            let v3220 : Func0<leptos_dom_Fragment> = method195(v3219)
            let v3221 : string = "(move || v3220())()"
            let v3222 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v3221 
            let v3223 : string = "leptos::prelude::AnyView::from($0)"
            let v3224 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3222 v3223 
            let v3225 : string = "<" + v3008 + " " + v3216 + ">move || { v3224 }</" + v3008 + ">"
            let v3226 : string = "leptos::prelude::view! { " + v3225 + " }"
            let v3227 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3226 
            let v3228 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3227 |> unbox
            let v3229 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3230 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3228 v3229 
            let v3231 : string = "v3230"
            let v3232 : string = v3231 + v52 
            let v3233 : string = v3232 + v52 
            let v3234 : string = "v3214"
            let v3235 : string = v3234 + v3199 
            let v3236 : string = v3235 + v3233 
            let v3237 : string = "vec![" + v3236 + "]"
            let v3238 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3237 
            let v3239 : string = "leptos::prelude::Fragment::new($0)"
            let v3240 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3238 v3239 
            let v3241 : string = "leptos::prelude::AnyView::from($0)"
            let v3242 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3240 v3241 
            let v3243 : string = "details"
            let v3244 : string = "<" + v3243 + " " + v3018 + ">move || { v3242 }</" + v3243 + ">"
            let v3245 : string = "leptos::prelude::view! { " + v3244 + " }"
            let v3246 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3245 
            let v3247 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v3246 |> unbox
            let v3248 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3249 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3247 v3248 
            let v3250 : string = "v3249"
            let v3251 : string = v3250 + v52 
            let v3252 : string = v3251 + v52 
            let v3253 : string = "v3014"
            let v3254 : string = v3253 + v3199 
            let v3255 : string = v3254 + v3252 
            let v3256 : string = "vec![" + v3255 + "]"
            let v3257 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3256 
            let v3258 : string = "leptos::prelude::Fragment::new($0)"
            let v3259 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3257 v3258 
            let v3260 : string = "leptos::prelude::AnyView::from($0)"
            let v3261 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3259 v3260 
            let v3262 : string = "<" + v3008 + " " + v2990 + ">move || { v3261 }</" + v3008 + ">"
            let v3263 : string = "leptos::prelude::view! { " + v3262 + " }"
            let v3264 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3263 
            let v3265 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3264 |> unbox
            let v3266 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3267 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3265 v3266 
            let v3268 : string = "vec![" + v52 + "]"
            let v3269 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3268 
            let v3270 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3271 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3269 v3270 
            let v3272 : string = "class=\"flex flex-col [position:relative]\""
            let v3273 : string = " " + v3272 + v52 + ""
            let v3274 : string = "$0"
            let v3275 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v2992 v3274 
            let v3276 : string = "$0"
            let v3277 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v2995 v3276 
            let v3278 : string = "class=\"[position:absolute] [right:0] [top:0]\""
            let v3279 : string = " " + v3278 + v52 + ""
            let v3280 : string = "v3271"
            let v3281 : string = v3280 + v52 
            let v3282 : string = v3281 + v52 
            let v3283 : string = "vec![" + v3282 + "]"
            let v3284 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3283 
            let v3285 : string = "leptos::prelude::Fragment::new($0)"
            let v3286 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3284 v3285 
            let v3287 : string = "leptos::prelude::AnyView::from($0)"
            let v3288 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3286 v3287 
            let v3289 : string = "<" + v3008 + " " + v3279 + ">move || { v3288 }</" + v3008 + ">"
            let v3290 : string = "leptos::prelude::view! { " + v3289 + " }"
            let v3291 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3290 
            let v3292 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3291 |> unbox
            let v3293 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3294 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3292 v3293 
            let v3295 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v3275(())"
            let v3296 : string = "open=move || v3277(())"
            let v3297 : string = " " + v3295 + v52 + ""
            let v3298 : string = " " + v3296 + v3297 + ""
            let v3299 : string = "$0"
            let v3300 : (unit -> string) = closure183()
            let v3301 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3300 v3299 
            let v3302 : string = "$0"
            let v3303 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure184()
            let v3304 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v3303 v3302 
            let v3305 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v3304(()) + \" \" + &v3301(())"
            let v3306 : string = " " + v3305 + v52 + ""
            let v3307 : string = "class=\"flex items-center gap-2\""
            let v3308 : string = " " + v3307 + v52 + ""
            let v3309 : (unit -> string) = method198()
            let v3310 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
            let v3311 : string = " " + v3310 + v52 + ""
            let v3312 : string = v3309 ()
            (* run_target_args'
            let v3317 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3318 : string = "&*$0"
            let v3319 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3312 v3318 
            let _run_target_args'_v3317 = v3319 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3320 : string = "&*$0"
            let v3321 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3312 v3320 
            let _run_target_args'_v3317 = v3321 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3322 : string = "&*$0"
            let v3323 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3312 v3322 
            let _run_target_args'_v3317 = v3323 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3325 : Ref<Str> = v3312 |> unbox<Ref<Str>>
            let _run_target_args'_v3317 = v3325 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3329 : Ref<Str> = v3312 |> unbox<Ref<Str>>
            let _run_target_args'_v3317 = v3329 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3333 : Ref<Str> = v3312 |> unbox<Ref<Str>>
            let _run_target_args'_v3317 = v3333 
            #endif
#else
            let v3337 : Ref<Str> = v3312 |> unbox<Ref<Str>>
            let _run_target_args'_v3317 = v3337 
            #endif
            let v3340 : Ref<Str> = _run_target_args'_v3317 
            (* run_target_args'
            let v3350 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3351 : string = "String::from($0)"
            let v3352 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3340 v3351 
            let _run_target_args'_v3350 = v3352 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3353 : string = "String::from($0)"
            let v3354 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3340 v3353 
            let _run_target_args'_v3350 = v3354 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3355 : string = "String::from($0)"
            let v3356 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3340 v3355 
            let _run_target_args'_v3350 = v3356 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3358 : std_string_String = v3340 |> unbox<std_string_String>
            let _run_target_args'_v3350 = v3358 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3362 : std_string_String = v3340 |> unbox<std_string_String>
            let _run_target_args'_v3350 = v3362 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3366 : std_string_String = v3340 |> unbox<std_string_String>
            let _run_target_args'_v3350 = v3366 
            #endif
#else
            let v3370 : std_string_String = v3340 |> unbox<std_string_String>
            let _run_target_args'_v3350 = v3370 
            #endif
            let v3373 : std_string_String = _run_target_args'_v3350 
            let v3379 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v3380 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3373 v3379 
            let v3381 : string = "v3380"
            let v3382 : string = v3381 + v52 
            let v3383 : string = v3382 + v52 
            let v3384 : string = "vec![" + v3383 + "]"
            let v3385 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3384 
            let v3386 : string = "leptos::prelude::Fragment::new($0)"
            let v3387 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3385 v3386 
            let v3388 : string = "leptos::prelude::AnyView::from($0)"
            let v3389 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3387 v3388 
            let v3390 : string = "<" + v3110 + " " + v3311 + ">move || { v3389 }</" + v3110 + ">"
            let v3391 : string = "leptos::prelude::view! { " + v3390 + " }"
            let v3392 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3391 
            let v3393 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v3392 |> unbox
            let v3394 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3395 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3393 v3394 
            let v3396 : string = "v3395"
            let v3397 : string = v3396 + v52 
            let v3398 : string = v3397 + v52 
            let v3399 : string = "vec![" + v3398 + "]"
            let v3400 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3399 
            let v3401 : string = "leptos::prelude::Fragment::new($0)"
            let v3402 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3400 v3401 
            let v3403 : string = "leptos::prelude::AnyView::from($0)"
            let v3404 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3402 v3403 
            let v3405 : string = "<" + v3008 + " " + v3308 + ">move || { v3404 }</" + v3008 + ">"
            let v3406 : string = "leptos::prelude::view! { " + v3405 + " }"
            let v3407 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3406 
            let v3408 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3407 |> unbox
            let v3409 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3410 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3408 v3409 
            let v3411 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
            let v3412 : string = " " + v3411 + v52 + ""
            let v3413 : string = "$0"
            let v3414 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3135 v3413 
            let v3415 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v3416 : string = "viewBox=\"0 0 20 20\""
            let v3417 : string = "fill=\"currentColor\""
            let v3418 : string = "class=move || \" \".to_owned() + &v3414(())"
            let v3419 : string = " " + v3415 + v52 + ""
            let v3420 : string = " " + v3416 + v3419 + ""
            let v3421 : string = " " + v3417 + v3420 + ""
            let v3422 : string = " " + v3418 + v3421 + ""
            let v3423 : string = "fill-rule=\"evenodd\""
            let v3424 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
            let v3425 : string = "clip-rule=\"evenodd\""
            let v3426 : string = " " + v3423 + v52 + ""
            let v3427 : string = " " + v3424 + v3426 + ""
            let v3428 : string = " " + v3425 + v3427 + ""
            let v3429 : string = "vec![" + v52 + "]"
            let v3430 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3429 
            let v3431 : string = "leptos::prelude::Fragment::new($0)"
            let v3432 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3430 v3431 
            let v3433 : string = "leptos::prelude::AnyView::from($0)"
            let v3434 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3432 v3433 
            let v3435 : string = "<" + v3157 + " " + v3428 + ">move || { v3434 }</" + v3157 + ">"
            let v3436 : string = "leptos::prelude::view! { " + v3435 + " }"
            let v3437 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3436 
            let v3438 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v3437 |> unbox
            let v3439 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3440 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3438 v3439 
            let v3441 : string = "v3440"
            let v3442 : string = v3441 + v52 
            let v3443 : string = v3442 + v52 
            let v3444 : string = "vec![" + v3443 + "]"
            let v3445 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3444 
            let v3446 : string = "leptos::prelude::Fragment::new($0)"
            let v3447 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3445 v3446 
            let v3448 : string = "leptos::prelude::AnyView::from($0)"
            let v3449 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3447 v3448 
            let v3450 : string = "<" + v3173 + " " + v3422 + ">move || { v3449 }</" + v3173 + ">"
            let v3451 : string = "leptos::prelude::view! { " + v3450 + " }"
            let v3452 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3451 
            let v3453 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v3452 |> unbox
            let v3454 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3455 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3453 v3454 
            let v3456 : string = "v3455"
            let v3457 : string = v3456 + v52 
            let v3458 : string = v3457 + v52 
            let v3459 : string = "vec![" + v3458 + "]"
            let v3460 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3459 
            let v3461 : string = "leptos::prelude::Fragment::new($0)"
            let v3462 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3460 v3461 
            let v3463 : string = "leptos::prelude::AnyView::from($0)"
            let v3464 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3462 v3463 
            let v3465 : string = "<" + v3110 + " " + v3412 + ">move || { v3464 }</" + v3110 + ">"
            let v3466 : string = "leptos::prelude::view! { " + v3465 + " }"
            let v3467 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3466 
            let v3468 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v3467 |> unbox
            let v3469 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3470 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3468 v3469 
            let v3471 : string = "v3470"
            let v3472 : string = v3471 + v52 
            let v3473 : string = v3472 + v52 
            let v3474 : string = "v3410"
            let v3475 : string = v3474 + v3199 
            let v3476 : string = v3475 + v3473 
            let v3477 : string = "vec![" + v3476 + "]"
            let v3478 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3477 
            let v3479 : string = "leptos::prelude::Fragment::new($0)"
            let v3480 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3478 v3479 
            let v3481 : string = "leptos::prelude::AnyView::from($0)"
            let v3482 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3480 v3481 
            let v3483 : string = "<" + v3208 + " " + v3306 + ">move || { v3482 }</" + v3208 + ">"
            let v3484 : string = "leptos::prelude::view! { " + v3483 + " }"
            let v3485 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3484 
            let v3486 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v3485 |> unbox
            let v3487 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3488 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3486 v3487 
            let v3489 : string = "class=\"flex flex-1 flex-col\""
            let v3490 : string = " " + v3489 + v52 + ""
            let v3491 : string = "Func0::new(move || $0())"
            let v3492 : (unit -> leptos_dom_Fragment) = closure186(v2106, v2098, v2078)
            let v3493 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v3492 v3491 
            let v3494 : Func0<leptos_dom_Fragment> = method195(v3493)
            let v3495 : string = "(move || v3494())()"
            let v3496 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v3495 
            let v3497 : string = "leptos::prelude::AnyView::from($0)"
            let v3498 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3496 v3497 
            let v3499 : string = "<" + v3008 + " " + v3490 + ">move || { v3498 }</" + v3008 + ">"
            let v3500 : string = "leptos::prelude::view! { " + v3499 + " }"
            let v3501 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3500 
            let v3502 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3501 |> unbox
            let v3503 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3504 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3502 v3503 
            let v3505 : string = "v3504"
            let v3506 : string = v3505 + v52 
            let v3507 : string = v3506 + v52 
            let v3508 : string = "v3488"
            let v3509 : string = v3508 + v3199 
            let v3510 : string = v3509 + v3507 
            let v3511 : string = "vec![" + v3510 + "]"
            let v3512 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3511 
            let v3513 : string = "leptos::prelude::Fragment::new($0)"
            let v3514 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3512 v3513 
            let v3515 : string = "leptos::prelude::AnyView::from($0)"
            let v3516 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3514 v3515 
            let v3517 : string = "<" + v3243 + " " + v3298 + ">move || { v3516 }</" + v3243 + ">"
            let v3518 : string = "leptos::prelude::view! { " + v3517 + " }"
            let v3519 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3518 
            let v3520 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v3519 |> unbox
            let v3521 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3522 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3520 v3521 
            let v3523 : string = "v3522"
            let v3524 : string = v3523 + v52 
            let v3525 : string = v3524 + v52 
            let v3526 : string = "v3294"
            let v3527 : string = v3526 + v3199 
            let v3528 : string = v3527 + v3525 
            let v3529 : string = "vec![" + v3528 + "]"
            let v3530 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3529 
            let v3531 : string = "leptos::prelude::Fragment::new($0)"
            let v3532 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3530 v3531 
            let v3533 : string = "leptos::prelude::AnyView::from($0)"
            let v3534 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3532 v3533 
            let v3535 : string = "<" + v3008 + " " + v3273 + ">move || { v3534 }</" + v3008 + ">"
            let v3536 : string = "leptos::prelude::view! { " + v3535 + " }"
            let v3537 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3536 
            let v3538 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3537 |> unbox
            let v3539 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3540 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3538 v3539 
            let v3541 : string = "v3540"
            let v3542 : string = v3541 + v52 
            let v3543 : string = v3542 + v52 
            let v3544 : string = "v3267"
            let v3545 : string = v3544 + v3199 
            let v3546 : string = v3545 + v3543 
            let v3547 : string = "vec![" + v3546 + "]"
            let v3548 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3547 
            let v3549 : string = "leptos::prelude::Fragment::new($0)"
            let v3550 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3548 v3549 
            US22_0(v3550)
        | US18_2 -> (* Lists *)
            let v3552 : string = "lists_view.render ()"
            let v3553 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3554 : bool = Fable.Core.RustInterop.emitRustExpr v3552 v3553 
            let v3555 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
            let v3556 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v3555 
            let v3557 : string = "$0.unwrap()"
            let v3558 : Heap2 = Fable.Core.RustInterop.emitRustExpr v3556 v3557 
            let v3559 : string = "???"
            (* run_target_args'
            let v3564 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3565 : string = "&*$0"
            let v3566 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3559 v3565 
            let _run_target_args'_v3564 = v3566 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3567 : string = "&*$0"
            let v3568 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3559 v3567 
            let _run_target_args'_v3564 = v3568 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3569 : string = "&*$0"
            let v3570 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3559 v3569 
            let _run_target_args'_v3564 = v3570 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3572 : Ref<Str> = v3559 |> unbox<Ref<Str>>
            let _run_target_args'_v3564 = v3572 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3576 : Ref<Str> = v3559 |> unbox<Ref<Str>>
            let _run_target_args'_v3564 = v3576 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3580 : Ref<Str> = v3559 |> unbox<Ref<Str>>
            let _run_target_args'_v3564 = v3580 
            #endif
#else
            let v3584 : Ref<Str> = v3559 |> unbox<Ref<Str>>
            let _run_target_args'_v3564 = v3584 
            #endif
            let v3587 : Ref<Str> = _run_target_args'_v3564 
            (* run_target_args'
            let v3597 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3598 : string = "String::from($0)"
            let v3599 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3587 v3598 
            let _run_target_args'_v3597 = v3599 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3600 : string = "String::from($0)"
            let v3601 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3587 v3600 
            let _run_target_args'_v3597 = v3601 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3602 : string = "String::from($0)"
            let v3603 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3587 v3602 
            let _run_target_args'_v3597 = v3603 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3605 : std_string_String = v3587 |> unbox<std_string_String>
            let _run_target_args'_v3597 = v3605 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3609 : std_string_String = v3587 |> unbox<std_string_String>
            let _run_target_args'_v3597 = v3609 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3613 : std_string_String = v3587 |> unbox<std_string_String>
            let _run_target_args'_v3597 = v3613 
            #endif
#else
            let v3617 : std_string_String = v3587 |> unbox<std_string_String>
            let _run_target_args'_v3597 = v3617 
            #endif
            let v3620 : std_string_String = _run_target_args'_v3597 
            let v3626 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v3627 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3620 v3626 
            let v3628 : string = "v3627"
            let v3629 : string = v3628 + v52 
            let v3630 : string = v3629 + v52 
            let v3631 : string = "vec![" + v3630 + "]"
            let v3632 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3631 
            let v3633 : string = "leptos::prelude::Fragment::new($0)"
            let v3634 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3632 v3633 
            US22_0(v3634)
        | US18_4 -> (* Settings *)
            let v4371 : string = "settings_view.render ()"
            let v4372 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v4373 : bool = Fable.Core.RustInterop.emitRustExpr v4371 v4372 
            let v4374 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
            let v4375 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v4374 
            let v4376 : string = "$0.unwrap()"
            let v4377 : Heap2 = Fable.Core.RustInterop.emitRustExpr v4375 v4376 
            let v4378 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v4379 : (unit -> Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>) = closure192(v4377)
            let v4380 : leptos_prelude_ArcMemo<Vec<(int32 * struct (leptos_prelude_ReadSignal<(bool * std_string_String)> * leptos_prelude_WriteSignal<(bool * std_string_String)>))>> = Fable.Core.RustInterop.emitRustExpr v4379 v4378 
            let v4381 : string = $"leptos::prelude::signal($0)"
            let struct (v4382 : leptos_prelude_ReadSignal<int32>, v4383 : leptos_prelude_WriteSignal<int32>) = Fable.Core.RustInterop.emitRustExpr 0 v4381 
            let v4384 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v4385 : (unit -> Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>) = closure195(v4380, v4382)
            let v4386 : leptos_prelude_ArcMemo<Vec<struct (int32 * int32 * leptos_prelude_ReadSignal<(bool * std_string_String)>)>> = Fable.Core.RustInterop.emitRustExpr v4385 v4384 
            let v4387 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v4388 : (unit -> int32) = closure198(v4386)
            let v4389 : leptos_prelude_ArcMemo<int32> = Fable.Core.RustInterop.emitRustExpr v4388 v4387 
            let v4390 : unit = ()
            let v4391 : string = $"true; let _func0_from_v4390 = Func0::from(move || {{ //"
            let v4392 : bool = Fable.Core.RustInterop.emitRustExpr () v4391 
            let v4393 : leptos_prelude_ArcRwSignal<Heap1> = v4377.l0
            let v4394 : string = "Box::pin($0)"
            let v4395 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v4393 v4394 
            let v4396 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
            let v4397 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4395 v4396 
            let v4398 : leptos_prelude_ArcRwSignal<Heap0> = v4397.l3
            let v4399 : string = $"true; leptos::prelude::ArcRwSignal::update(&$0, |x: &mut /*"
            let v4400 : bool = Fable.Core.RustInterop.emitRustExpr v4398 v4399 
            let v4402 : TypeEmit<Heap0> = null |> unbox<TypeEmit<Heap0>>
            let v4405 : string = "*/ | { *x = $0(x.clone()) }); //"
            let v4406 : (Heap0 -> Heap0) = closure199(v4380)
            let v4407 : bool = Fable.Core.RustInterop.emitRustExpr v4406 v4405 
            let v4408 : string = $"true; leptos::prelude::WriteSignal::update(&$0, |x: &mut /*"
            let v4409 : bool = Fable.Core.RustInterop.emitRustExpr v4383 v4408 
            let v4411 : TypeEmit<int32> = null |> unbox<TypeEmit<int32>>
            let v4414 : string = "*/ | { *x = $0(x.clone()) }); //"
            let v4415 : (int32 -> int32) = closure201()
            let v4416 : bool = Fable.Core.RustInterop.emitRustExpr v4415 v4414 
            // rust.func0_from / is_unit
            let v4417 : string = $"true; /*"
            let v4418 : bool = Fable.Core.RustInterop.emitRustExpr () v4417 
            let v4419 : string = $"*/ }}); //"
            let v4420 : bool = Fable.Core.RustInterop.emitRustExpr () v4419 
            let v4421 : string = $"_func0_from_v4390"
            let v4422 : Func0<unit> = Fable.Core.RustInterop.emitRustExpr () v4421 
            let v4423 : string = "$0"
            let v4424 : (unit -> string) = closure202()
            let v4425 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4424 v4423 
            let v4426 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v4427 : string = "fill=\"none\""
            let v4428 : string = "viewBox=\"0 0 24 24\""
            let v4429 : string = "stroke-width=\"1.5\""
            let v4430 : string = "stroke=\"currentColor\""
            let v4431 : string = "class=move || \" \".to_owned() + &v4425(())"
            let v4432 : string = " " + v4426 + v52 + ""
            let v4433 : string = " " + v4427 + v4432 + ""
            let v4434 : string = " " + v4428 + v4433 + ""
            let v4435 : string = " " + v4429 + v4434 + ""
            let v4436 : string = " " + v4430 + v4435 + ""
            let v4437 : string = " " + v4431 + v4436 + ""
            let v4438 : string = "stroke-linecap=\"round\""
            let v4439 : string = "stroke-linejoin=\"round\""
            let v4440 : string = "d=\"M12 6v12m6-6H6\""
            let v4441 : string = " " + v4438 + v52 + ""
            let v4442 : string = " " + v4439 + v4441 + ""
            let v4443 : string = " " + v4440 + v4442 + ""
            let v4444 : string = "vec![" + v52 + "]"
            let v4445 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4444 
            let v4446 : string = "leptos::prelude::Fragment::new($0)"
            let v4447 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4445 v4446 
            let v4448 : string = "leptos::prelude::AnyView::from($0)"
            let v4449 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4447 v4448 
            let v4450 : string = "path"
            let v4451 : string = "<" + v4450 + " " + v4443 + ">move || { v4449 }</" + v4450 + ">"
            let v4452 : string = "leptos::prelude::view! { " + v4451 + " }"
            let v4453 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4452 
            let v4454 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4453 |> unbox
            let v4455 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4456 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4454 v4455 
            let v4457 : string = "v4456"
            let v4458 : string = v4457 + v52 
            let v4459 : string = v4458 + v52 
            let v4460 : string = "vec![" + v4459 + "]"
            let v4461 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4460 
            let v4462 : string = "leptos::prelude::Fragment::new($0)"
            let v4463 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4461 v4462 
            let v4464 : string = "leptos::prelude::AnyView::from($0)"
            let v4465 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4463 v4464 
            let v4466 : string = "svg"
            let v4467 : string = "<" + v4466 + " " + v4437 + ">move || { v4465 }</" + v4466 + ">"
            let v4468 : string = "leptos::prelude::view! { " + v4467 + " }"
            let v4469 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4468 
            let v4470 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4469 |> unbox
            let v4471 : string = "on:click=move |_| v4422()"
            let v4472 : string = "aria-label=\"Add\""
            let v4473 : string = "$0"
            let v4474 : (unit -> std_string_String) = closure203()
            let v4475 : (unit -> std_string_String) = Fable.Core.RustInterop.emitRustExpr v4474 v4473 
            let v4476 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] pb-[8px] pt-[8px] px-[12px] \".to_owned() + &v4475(())"
            let v4477 : string = " " + v4476 + v52 + ""
            let v4478 : string = " " + v4471 + v4477 + ""
            let v4479 : string = " " + v4472 + v4478 + ""
            let v4480 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4481 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4470 v4480 
            let v4482 : string = "v4481"
            let v4483 : string = v4482 + v52 
            let v4484 : string = v4483 + v52 
            let v4485 : string = "vec![" + v4484 + "]"
            let v4486 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4485 
            let v4487 : string = "leptos::prelude::Fragment::new($0)"
            let v4488 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4486 v4487 
            let v4489 : string = "leptos::prelude::AnyView::from($0)"
            let v4490 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4488 v4489 
            let v4491 : string = "button"
            let v4492 : string = "<" + v4491 + " " + v4479 + ">move || { v4490 }</" + v4491 + ">"
            let v4493 : string = "leptos::prelude::view! { " + v4492 + " }"
            let v4494 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4493 
            let v4495 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Button>> = v4494 |> unbox
            let v4496 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4497 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4495 v4496 
            let v4498 : string = "vec![" + v52 + "]"
            let v4499 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4498 
            let v4500 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4501 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4499 v4500 
            let v4502 : string = "class=\"flex flex-col [position:relative]\""
            let v4503 : string = " " + v4502 + v52 + ""
            let v4504 : string = "$0"
            let v4505 : (unit -> string) = closure161()
            let v4506 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4505 v4504 
            let v4507 : string = "$0"
            let v4508 : (unit -> bool) = closure162()
            let v4509 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v4508 v4507 
            let v4510 : string = "class=\"[position:absolute] [right:0] [top:0]\""
            let v4511 : string = " " + v4510 + v52 + ""
            let v4512 : string = "v4497"
            let v4513 : string = v4512 + v52 
            let v4514 : string = v4513 + v52 
            let v4515 : string = "vec![" + v4514 + "]"
            let v4516 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4515 
            let v4517 : string = "leptos::prelude::Fragment::new($0)"
            let v4518 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4516 v4517 
            let v4519 : string = "leptos::prelude::AnyView::from($0)"
            let v4520 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4518 v4519 
            let v4521 : string = "div"
            let v4522 : string = "<" + v4521 + " " + v4511 + ">move || { v4520 }</" + v4521 + ">"
            let v4523 : string = "leptos::prelude::view! { " + v4522 + " }"
            let v4524 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4523 
            let v4525 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4524 |> unbox
            let v4526 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4527 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4525 v4526 
            let v4528 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v4506(())"
            let v4529 : string = "open=move || v4509(())"
            let v4530 : string = " " + v4528 + v52 + ""
            let v4531 : string = " " + v4529 + v4530 + ""
            let v4532 : string = "$0"
            let v4533 : (unit -> string) = closure204()
            let v4534 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4533 v4532 
            let v4535 : string = "$0"
            let v4536 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure205(v4497)
            let v4537 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v4536 v4535 
            let v4538 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v4537(()) + \" \" + &v4534(())"
            let v4539 : string = " " + v4538 + v52 + ""
            let v4540 : string = "class=\"flex items-center gap-2\""
            let v4541 : string = " " + v4540 + v52 + ""
            let v4542 : (unit -> string) = method214(v4497)
            let v4543 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
            let v4544 : string = " " + v4543 + v52 + ""
            let v4545 : string = v4542 ()
            (* run_target_args'
            let v4550 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v4551 : string = "&*$0"
            let v4552 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4545 v4551 
            let _run_target_args'_v4550 = v4552 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v4553 : string = "&*$0"
            let v4554 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4545 v4553 
            let _run_target_args'_v4550 = v4554 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v4555 : string = "&*$0"
            let v4556 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4545 v4555 
            let _run_target_args'_v4550 = v4556 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v4558 : Ref<Str> = v4545 |> unbox<Ref<Str>>
            let _run_target_args'_v4550 = v4558 
            #endif
#if FABLE_COMPILER_PYTHON
            let v4562 : Ref<Str> = v4545 |> unbox<Ref<Str>>
            let _run_target_args'_v4550 = v4562 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v4566 : Ref<Str> = v4545 |> unbox<Ref<Str>>
            let _run_target_args'_v4550 = v4566 
            #endif
#else
            let v4570 : Ref<Str> = v4545 |> unbox<Ref<Str>>
            let _run_target_args'_v4550 = v4570 
            #endif
            let v4573 : Ref<Str> = _run_target_args'_v4550 
            (* run_target_args'
            let v4583 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v4584 : string = "String::from($0)"
            let v4585 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4573 v4584 
            let _run_target_args'_v4583 = v4585 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v4586 : string = "String::from($0)"
            let v4587 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4573 v4586 
            let _run_target_args'_v4583 = v4587 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v4588 : string = "String::from($0)"
            let v4589 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4573 v4588 
            let _run_target_args'_v4583 = v4589 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v4591 : std_string_String = v4573 |> unbox<std_string_String>
            let _run_target_args'_v4583 = v4591 
            #endif
#if FABLE_COMPILER_PYTHON
            let v4595 : std_string_String = v4573 |> unbox<std_string_String>
            let _run_target_args'_v4583 = v4595 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v4599 : std_string_String = v4573 |> unbox<std_string_String>
            let _run_target_args'_v4583 = v4599 
            #endif
#else
            let v4603 : std_string_String = v4573 |> unbox<std_string_String>
            let _run_target_args'_v4583 = v4603 
            #endif
            let v4606 : std_string_String = _run_target_args'_v4583 
            let v4612 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v4613 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4606 v4612 
            let v4614 : string = "v4613"
            let v4615 : string = v4614 + v52 
            let v4616 : string = v4615 + v52 
            let v4617 : string = "vec![" + v4616 + "]"
            let v4618 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4617 
            let v4619 : string = "leptos::prelude::Fragment::new($0)"
            let v4620 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4618 v4619 
            let v4621 : string = "leptos::prelude::AnyView::from($0)"
            let v4622 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4620 v4621 
            let v4623 : string = "span"
            let v4624 : string = "<" + v4623 + " " + v4544 + ">move || { v4622 }</" + v4623 + ">"
            let v4625 : string = "leptos::prelude::view! { " + v4624 + " }"
            let v4626 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4625 
            let v4627 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4626 |> unbox
            let v4628 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4629 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4627 v4628 
            let v4630 : string = "v4629"
            let v4631 : string = v4630 + v52 
            let v4632 : string = v4631 + v52 
            let v4633 : string = "vec![" + v4632 + "]"
            let v4634 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4633 
            let v4635 : string = "leptos::prelude::Fragment::new($0)"
            let v4636 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4634 v4635 
            let v4637 : string = "leptos::prelude::AnyView::from($0)"
            let v4638 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4636 v4637 
            let v4639 : string = "<" + v4521 + " " + v4541 + ">move || { v4638 }</" + v4521 + ">"
            let v4640 : string = "leptos::prelude::view! { " + v4639 + " }"
            let v4641 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4640 
            let v4642 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4641 |> unbox
            let v4643 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4644 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4642 v4643 
            let v4645 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
            let v4646 : string = " " + v4645 + v52 + ""
            let v4647 : string = "$0"
            let v4648 : (unit -> string) = closure166()
            let v4649 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4648 v4647 
            let v4650 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v4651 : string = "viewBox=\"0 0 20 20\""
            let v4652 : string = "fill=\"currentColor\""
            let v4653 : string = "class=move || \" \".to_owned() + &v4649(())"
            let v4654 : string = " " + v4650 + v52 + ""
            let v4655 : string = " " + v4651 + v4654 + ""
            let v4656 : string = " " + v4652 + v4655 + ""
            let v4657 : string = " " + v4653 + v4656 + ""
            let v4658 : string = "fill-rule=\"evenodd\""
            let v4659 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
            let v4660 : string = "clip-rule=\"evenodd\""
            let v4661 : string = " " + v4658 + v52 + ""
            let v4662 : string = " " + v4659 + v4661 + ""
            let v4663 : string = " " + v4660 + v4662 + ""
            let v4664 : string = "vec![" + v52 + "]"
            let v4665 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4664 
            let v4666 : string = "leptos::prelude::Fragment::new($0)"
            let v4667 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4665 v4666 
            let v4668 : string = "leptos::prelude::AnyView::from($0)"
            let v4669 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4667 v4668 
            let v4670 : string = "<" + v4450 + " " + v4663 + ">move || { v4669 }</" + v4450 + ">"
            let v4671 : string = "leptos::prelude::view! { " + v4670 + " }"
            let v4672 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4671 
            let v4673 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4672 |> unbox
            let v4674 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4675 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4673 v4674 
            let v4676 : string = "v4675"
            let v4677 : string = v4676 + v52 
            let v4678 : string = v4677 + v52 
            let v4679 : string = "vec![" + v4678 + "]"
            let v4680 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4679 
            let v4681 : string = "leptos::prelude::Fragment::new($0)"
            let v4682 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4680 v4681 
            let v4683 : string = "leptos::prelude::AnyView::from($0)"
            let v4684 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4682 v4683 
            let v4685 : string = "<" + v4466 + " " + v4657 + ">move || { v4684 }</" + v4466 + ">"
            let v4686 : string = "leptos::prelude::view! { " + v4685 + " }"
            let v4687 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4686 
            let v4688 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4687 |> unbox
            let v4689 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4690 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4688 v4689 
            let v4691 : string = "v4690"
            let v4692 : string = v4691 + v52 
            let v4693 : string = v4692 + v52 
            let v4694 : string = "vec![" + v4693 + "]"
            let v4695 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4694 
            let v4696 : string = "leptos::prelude::Fragment::new($0)"
            let v4697 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4695 v4696 
            let v4698 : string = "leptos::prelude::AnyView::from($0)"
            let v4699 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4697 v4698 
            let v4700 : string = "<" + v4623 + " " + v4646 + ">move || { v4699 }</" + v4623 + ">"
            let v4701 : string = "leptos::prelude::view! { " + v4700 + " }"
            let v4702 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4701 
            let v4703 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4702 |> unbox
            let v4704 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4705 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4703 v4704 
            let v4706 : string = "v4705"
            let v4707 : string = v4706 + v52 
            let v4708 : string = v4707 + v52 
            let v4709 : string = "v4644"
            let v4710 : string = ", "
            let v4711 : string = v4709 + v4710 
            let v4712 : string = v4711 + v4708 
            let v4713 : string = "vec![" + v4712 + "]"
            let v4714 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4713 
            let v4715 : string = "leptos::prelude::Fragment::new($0)"
            let v4716 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4714 v4715 
            let v4717 : string = "leptos::prelude::AnyView::from($0)"
            let v4718 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4716 v4717 
            let v4719 : string = "summary"
            let v4720 : string = "<" + v4719 + " " + v4539 + ">move || { v4718 }</" + v4719 + ">"
            let v4721 : string = "leptos::prelude::view! { " + v4720 + " }"
            let v4722 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4721 
            let v4723 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v4722 |> unbox
            let v4724 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4725 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4723 v4724 
            let v4726 : string = "class=\"flex flex-1 flex-col\""
            let v4727 : string = " " + v4726 + v52 + ""
            let v4728 : string = "Func0::new(move || $0())"
            let v4729 : (unit -> leptos_dom_Fragment) = closure207(v4377, v4386, v4389, v4380, v4383)
            let v4730 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v4729 v4728 
            let v4731 : Func0<leptos_dom_Fragment> = method195(v4730)
            let v4732 : string = "(move || v4731())()"
            let v4733 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v4732 
            let v4734 : string = "leptos::prelude::AnyView::from($0)"
            let v4735 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4733 v4734 
            let v4736 : string = "<" + v4521 + " " + v4727 + ">move || { v4735 }</" + v4521 + ">"
            let v4737 : string = "leptos::prelude::view! { " + v4736 + " }"
            let v4738 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4737 
            let v4739 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4738 |> unbox
            let v4740 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4741 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4739 v4740 
            let v4742 : string = "v4741"
            let v4743 : string = v4742 + v52 
            let v4744 : string = v4743 + v52 
            let v4745 : string = "v4725"
            let v4746 : string = v4745 + v4710 
            let v4747 : string = v4746 + v4744 
            let v4748 : string = "vec![" + v4747 + "]"
            let v4749 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4748 
            let v4750 : string = "leptos::prelude::Fragment::new($0)"
            let v4751 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4749 v4750 
            let v4752 : string = "leptos::prelude::AnyView::from($0)"
            let v4753 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4751 v4752 
            let v4754 : string = "details"
            let v4755 : string = "<" + v4754 + " " + v4531 + ">move || { v4753 }</" + v4754 + ">"
            let v4756 : string = "leptos::prelude::view! { " + v4755 + " }"
            let v4757 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4756 
            let v4758 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v4757 |> unbox
            let v4759 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4760 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4758 v4759 
            let v4761 : string = "v4760"
            let v4762 : string = v4761 + v52 
            let v4763 : string = v4762 + v52 
            let v4764 : string = "v4527"
            let v4765 : string = v4764 + v4710 
            let v4766 : string = v4765 + v4763 
            let v4767 : string = "vec![" + v4766 + "]"
            let v4768 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4767 
            let v4769 : string = "leptos::prelude::Fragment::new($0)"
            let v4770 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4768 v4769 
            let v4771 : string = "leptos::prelude::AnyView::from($0)"
            let v4772 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4770 v4771 
            let v4773 : string = "<" + v4521 + " " + v4503 + ">move || { v4772 }</" + v4521 + ">"
            let v4774 : string = "leptos::prelude::view! { " + v4773 + " }"
            let v4775 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4774 
            let v4776 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4775 |> unbox
            let v4777 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4778 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4776 v4777 
            let v4779 : string = "vec![" + v52 + "]"
            let v4780 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4779 
            let v4781 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4782 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4780 v4781 
            let v4783 : string = "class=\"flex flex-col [position:relative]\""
            let v4784 : string = " " + v4783 + v52 + ""
            let v4785 : string = "$0"
            let v4786 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4505 v4785 
            let v4787 : string = "$0"
            let v4788 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v4508 v4787 
            let v4789 : string = "class=\"[position:absolute] [right:0] [top:0]\""
            let v4790 : string = " " + v4789 + v52 + ""
            let v4791 : string = "v4782"
            let v4792 : string = v4791 + v52 
            let v4793 : string = v4792 + v52 
            let v4794 : string = "vec![" + v4793 + "]"
            let v4795 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4794 
            let v4796 : string = "leptos::prelude::Fragment::new($0)"
            let v4797 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4795 v4796 
            let v4798 : string = "leptos::prelude::AnyView::from($0)"
            let v4799 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4797 v4798 
            let v4800 : string = "<" + v4521 + " " + v4790 + ">move || { v4799 }</" + v4521 + ">"
            let v4801 : string = "leptos::prelude::view! { " + v4800 + " }"
            let v4802 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4801 
            let v4803 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4802 |> unbox
            let v4804 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4805 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4803 v4804 
            let v4806 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v4786(())"
            let v4807 : string = "open=move || v4788(())"
            let v4808 : string = " " + v4806 + v52 + ""
            let v4809 : string = " " + v4807 + v4808 + ""
            let v4810 : string = "$0"
            let v4811 : (unit -> string) = closure223()
            let v4812 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4811 v4810 
            let v4813 : string = "$0"
            let v4814 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure224()
            let v4815 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v4814 v4813 
            let v4816 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v4815(()) + \" \" + &v4812(())"
            let v4817 : string = " " + v4816 + v52 + ""
            let v4818 : string = "class=\"flex items-center gap-2\""
            let v4819 : string = " " + v4818 + v52 + ""
            let v4820 : (unit -> string) = method228()
            let v4821 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
            let v4822 : string = " " + v4821 + v52 + ""
            let v4823 : string = v4820 ()
            (* run_target_args'
            let v4828 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v4829 : string = "&*$0"
            let v4830 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4823 v4829 
            let _run_target_args'_v4828 = v4830 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v4831 : string = "&*$0"
            let v4832 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4823 v4831 
            let _run_target_args'_v4828 = v4832 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v4833 : string = "&*$0"
            let v4834 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4823 v4833 
            let _run_target_args'_v4828 = v4834 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v4836 : Ref<Str> = v4823 |> unbox<Ref<Str>>
            let _run_target_args'_v4828 = v4836 
            #endif
#if FABLE_COMPILER_PYTHON
            let v4840 : Ref<Str> = v4823 |> unbox<Ref<Str>>
            let _run_target_args'_v4828 = v4840 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v4844 : Ref<Str> = v4823 |> unbox<Ref<Str>>
            let _run_target_args'_v4828 = v4844 
            #endif
#else
            let v4848 : Ref<Str> = v4823 |> unbox<Ref<Str>>
            let _run_target_args'_v4828 = v4848 
            #endif
            let v4851 : Ref<Str> = _run_target_args'_v4828 
            (* run_target_args'
            let v4861 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v4862 : string = "String::from($0)"
            let v4863 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4851 v4862 
            let _run_target_args'_v4861 = v4863 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v4864 : string = "String::from($0)"
            let v4865 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4851 v4864 
            let _run_target_args'_v4861 = v4865 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v4866 : string = "String::from($0)"
            let v4867 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4851 v4866 
            let _run_target_args'_v4861 = v4867 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v4869 : std_string_String = v4851 |> unbox<std_string_String>
            let _run_target_args'_v4861 = v4869 
            #endif
#if FABLE_COMPILER_PYTHON
            let v4873 : std_string_String = v4851 |> unbox<std_string_String>
            let _run_target_args'_v4861 = v4873 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v4877 : std_string_String = v4851 |> unbox<std_string_String>
            let _run_target_args'_v4861 = v4877 
            #endif
#else
            let v4881 : std_string_String = v4851 |> unbox<std_string_String>
            let _run_target_args'_v4861 = v4881 
            #endif
            let v4884 : std_string_String = _run_target_args'_v4861 
            let v4890 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v4891 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4884 v4890 
            let v4892 : string = "v4891"
            let v4893 : string = v4892 + v52 
            let v4894 : string = v4893 + v52 
            let v4895 : string = "vec![" + v4894 + "]"
            let v4896 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4895 
            let v4897 : string = "leptos::prelude::Fragment::new($0)"
            let v4898 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4896 v4897 
            let v4899 : string = "leptos::prelude::AnyView::from($0)"
            let v4900 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4898 v4899 
            let v4901 : string = "<" + v4623 + " " + v4822 + ">move || { v4900 }</" + v4623 + ">"
            let v4902 : string = "leptos::prelude::view! { " + v4901 + " }"
            let v4903 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4902 
            let v4904 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4903 |> unbox
            let v4905 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4906 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4904 v4905 
            let v4907 : string = "v4906"
            let v4908 : string = v4907 + v52 
            let v4909 : string = v4908 + v52 
            let v4910 : string = "vec![" + v4909 + "]"
            let v4911 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4910 
            let v4912 : string = "leptos::prelude::Fragment::new($0)"
            let v4913 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4911 v4912 
            let v4914 : string = "leptos::prelude::AnyView::from($0)"
            let v4915 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4913 v4914 
            let v4916 : string = "<" + v4521 + " " + v4819 + ">move || { v4915 }</" + v4521 + ">"
            let v4917 : string = "leptos::prelude::view! { " + v4916 + " }"
            let v4918 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4917 
            let v4919 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4918 |> unbox
            let v4920 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4921 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4919 v4920 
            let v4922 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
            let v4923 : string = " " + v4922 + v52 + ""
            let v4924 : string = "$0"
            let v4925 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4648 v4924 
            let v4926 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v4927 : string = "viewBox=\"0 0 20 20\""
            let v4928 : string = "fill=\"currentColor\""
            let v4929 : string = "class=move || \" \".to_owned() + &v4925(())"
            let v4930 : string = " " + v4926 + v52 + ""
            let v4931 : string = " " + v4927 + v4930 + ""
            let v4932 : string = " " + v4928 + v4931 + ""
            let v4933 : string = " " + v4929 + v4932 + ""
            let v4934 : string = "fill-rule=\"evenodd\""
            let v4935 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
            let v4936 : string = "clip-rule=\"evenodd\""
            let v4937 : string = " " + v4934 + v52 + ""
            let v4938 : string = " " + v4935 + v4937 + ""
            let v4939 : string = " " + v4936 + v4938 + ""
            let v4940 : string = "vec![" + v52 + "]"
            let v4941 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4940 
            let v4942 : string = "leptos::prelude::Fragment::new($0)"
            let v4943 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4941 v4942 
            let v4944 : string = "leptos::prelude::AnyView::from($0)"
            let v4945 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4943 v4944 
            let v4946 : string = "<" + v4450 + " " + v4939 + ">move || { v4945 }</" + v4450 + ">"
            let v4947 : string = "leptos::prelude::view! { " + v4946 + " }"
            let v4948 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4947 
            let v4949 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4948 |> unbox
            let v4950 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4951 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4949 v4950 
            let v4952 : string = "v4951"
            let v4953 : string = v4952 + v52 
            let v4954 : string = v4953 + v52 
            let v4955 : string = "vec![" + v4954 + "]"
            let v4956 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4955 
            let v4957 : string = "leptos::prelude::Fragment::new($0)"
            let v4958 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4956 v4957 
            let v4959 : string = "leptos::prelude::AnyView::from($0)"
            let v4960 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4958 v4959 
            let v4961 : string = "<" + v4466 + " " + v4933 + ">move || { v4960 }</" + v4466 + ">"
            let v4962 : string = "leptos::prelude::view! { " + v4961 + " }"
            let v4963 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4962 
            let v4964 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4963 |> unbox
            let v4965 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4966 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4964 v4965 
            let v4967 : string = "v4966"
            let v4968 : string = v4967 + v52 
            let v4969 : string = v4968 + v52 
            let v4970 : string = "vec![" + v4969 + "]"
            let v4971 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4970 
            let v4972 : string = "leptos::prelude::Fragment::new($0)"
            let v4973 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4971 v4972 
            let v4974 : string = "leptos::prelude::AnyView::from($0)"
            let v4975 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4973 v4974 
            let v4976 : string = "<" + v4623 + " " + v4923 + ">move || { v4975 }</" + v4623 + ">"
            let v4977 : string = "leptos::prelude::view! { " + v4976 + " }"
            let v4978 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4977 
            let v4979 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4978 |> unbox
            let v4980 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4981 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4979 v4980 
            let v4982 : string = "v4981"
            let v4983 : string = v4982 + v52 
            let v4984 : string = v4983 + v52 
            let v4985 : string = "v4921"
            let v4986 : string = v4985 + v4710 
            let v4987 : string = v4986 + v4984 
            let v4988 : string = "vec![" + v4987 + "]"
            let v4989 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4988 
            let v4990 : string = "leptos::prelude::Fragment::new($0)"
            let v4991 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4989 v4990 
            let v4992 : string = "leptos::prelude::AnyView::from($0)"
            let v4993 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4991 v4992 
            let v4994 : string = "<" + v4719 + " " + v4817 + ">move || { v4993 }</" + v4719 + ">"
            let v4995 : string = "leptos::prelude::view! { " + v4994 + " }"
            let v4996 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4995 
            let v4997 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v4996 |> unbox
            let v4998 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4999 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4997 v4998 
            let v5000 : string = "class=\"flex flex-1 flex-col\""
            let v5001 : string = " " + v5000 + v52 + ""
            let v5002 : string = "Func0::new(move || $0())"
            let v5003 : (unit -> leptos_dom_Fragment) = closure226(v4377)
            let v5004 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v5003 v5002 
            let v5005 : Func0<leptos_dom_Fragment> = method195(v5004)
            let v5006 : string = "(move || v5005())()"
            let v5007 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v5006 
            let v5008 : string = "leptos::prelude::AnyView::from($0)"
            let v5009 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5007 v5008 
            let v5010 : string = "<" + v4521 + " " + v5001 + ">move || { v5009 }</" + v4521 + ">"
            let v5011 : string = "leptos::prelude::view! { " + v5010 + " }"
            let v5012 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5011 
            let v5013 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5012 |> unbox
            let v5014 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5015 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5013 v5014 
            let v5016 : string = "v5015"
            let v5017 : string = v5016 + v52 
            let v5018 : string = v5017 + v52 
            let v5019 : string = "v4999"
            let v5020 : string = v5019 + v4710 
            let v5021 : string = v5020 + v5018 
            let v5022 : string = "vec![" + v5021 + "]"
            let v5023 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5022 
            let v5024 : string = "leptos::prelude::Fragment::new($0)"
            let v5025 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5023 v5024 
            let v5026 : string = "leptos::prelude::AnyView::from($0)"
            let v5027 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5025 v5026 
            let v5028 : string = "<" + v4754 + " " + v4809 + ">move || { v5027 }</" + v4754 + ">"
            let v5029 : string = "leptos::prelude::view! { " + v5028 + " }"
            let v5030 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5029 
            let v5031 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v5030 |> unbox
            let v5032 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5033 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5031 v5032 
            let v5034 : string = "v5033"
            let v5035 : string = v5034 + v52 
            let v5036 : string = v5035 + v52 
            let v5037 : string = "v4805"
            let v5038 : string = v5037 + v4710 
            let v5039 : string = v5038 + v5036 
            let v5040 : string = "vec![" + v5039 + "]"
            let v5041 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5040 
            let v5042 : string = "leptos::prelude::Fragment::new($0)"
            let v5043 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5041 v5042 
            let v5044 : string = "leptos::prelude::AnyView::from($0)"
            let v5045 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5043 v5044 
            let v5046 : string = "<" + v4521 + " " + v4784 + ">move || { v5045 }</" + v4521 + ">"
            let v5047 : string = "leptos::prelude::view! { " + v5046 + " }"
            let v5048 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5047 
            let v5049 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5048 |> unbox
            let v5050 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5051 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5049 v5050 
            let v5052 : leptos_prelude_ArcRwSignal<Heap1> = v4377.l0
            let v5053 : string = "Box::pin($0)"
            let v5054 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v5052 v5053 
            let v5055 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
            let v5056 : Heap1 = Fable.Core.RustInterop.emitRustExpr v5054 v5055 
            let v5057 : leptos_prelude_ArcRwSignal<bool> = v5056.l1
            let v5058 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
            let v5059 : bool = Fable.Core.RustInterop.emitRustExpr v5057 v5058 
            let v5337 : leptos_prelude_AnyView_ =
                if v5059 then
                    let v5060 : string = "vec![" + v52 + "]"
                    let v5061 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5060 
                    let v5062 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5063 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5061 v5062 
                    let v5064 : string = "class=\"flex flex-col [position:relative]\""
                    let v5065 : string = " " + v5064 + v52 + ""
                    let v5066 : string = "$0"
                    let v5067 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4505 v5066 
                    let v5068 : string = "$0"
                    let v5069 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v4508 v5068 
                    let v5070 : string = "class=\"[position:absolute] [right:0] [top:0]\""
                    let v5071 : string = " " + v5070 + v52 + ""
                    let v5072 : string = "v5063"
                    let v5073 : string = v5072 + v52 
                    let v5074 : string = v5073 + v52 
                    let v5075 : string = "vec![" + v5074 + "]"
                    let v5076 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5075 
                    let v5077 : string = "leptos::prelude::Fragment::new($0)"
                    let v5078 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5076 v5077 
                    let v5079 : string = "leptos::prelude::AnyView::from($0)"
                    let v5080 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5078 v5079 
                    let v5081 : string = "<" + v4521 + " " + v5071 + ">move || { v5080 }</" + v4521 + ">"
                    let v5082 : string = "leptos::prelude::view! { " + v5081 + " }"
                    let v5083 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5082 
                    let v5084 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5083 |> unbox
                    let v5085 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5086 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5084 v5085 
                    let v5087 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v5067(())"
                    let v5088 : string = "open=move || v5069(())"
                    let v5089 : string = " " + v5087 + v52 + ""
                    let v5090 : string = " " + v5088 + v5089 + ""
                    let v5091 : string = "$0"
                    let v5092 : (unit -> string) = closure243()
                    let v5093 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v5092 v5091 
                    let v5094 : string = "$0"
                    let v5095 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure244()
                    let v5096 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v5095 v5094 
                    let v5097 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v5096(()) + \" \" + &v5093(())"
                    let v5098 : string = " " + v5097 + v52 + ""
                    let v5099 : string = "class=\"flex items-center gap-2\""
                    let v5100 : string = " " + v5099 + v52 + ""
                    let v5101 : (unit -> string) = method237()
                    let v5102 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
                    let v5103 : string = " " + v5102 + v52 + ""
                    let v5104 : string = v5101 ()
                    (* run_target_args'
                    let v5109 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v5110 : string = "&*$0"
                    let v5111 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5104 v5110 
                    let _run_target_args'_v5109 = v5111 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v5112 : string = "&*$0"
                    let v5113 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5104 v5112 
                    let _run_target_args'_v5109 = v5113 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v5114 : string = "&*$0"
                    let v5115 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5104 v5114 
                    let _run_target_args'_v5109 = v5115 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v5117 : Ref<Str> = v5104 |> unbox<Ref<Str>>
                    let _run_target_args'_v5109 = v5117 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v5121 : Ref<Str> = v5104 |> unbox<Ref<Str>>
                    let _run_target_args'_v5109 = v5121 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v5125 : Ref<Str> = v5104 |> unbox<Ref<Str>>
                    let _run_target_args'_v5109 = v5125 
                    #endif
#else
                    let v5129 : Ref<Str> = v5104 |> unbox<Ref<Str>>
                    let _run_target_args'_v5109 = v5129 
                    #endif
                    let v5132 : Ref<Str> = _run_target_args'_v5109 
                    (* run_target_args'
                    let v5142 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v5143 : string = "String::from($0)"
                    let v5144 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5132 v5143 
                    let _run_target_args'_v5142 = v5144 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v5145 : string = "String::from($0)"
                    let v5146 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5132 v5145 
                    let _run_target_args'_v5142 = v5146 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v5147 : string = "String::from($0)"
                    let v5148 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5132 v5147 
                    let _run_target_args'_v5142 = v5148 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v5150 : std_string_String = v5132 |> unbox<std_string_String>
                    let _run_target_args'_v5142 = v5150 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v5154 : std_string_String = v5132 |> unbox<std_string_String>
                    let _run_target_args'_v5142 = v5154 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v5158 : std_string_String = v5132 |> unbox<std_string_String>
                    let _run_target_args'_v5142 = v5158 
                    #endif
#else
                    let v5162 : std_string_String = v5132 |> unbox<std_string_String>
                    let _run_target_args'_v5142 = v5162 
                    #endif
                    let v5165 : std_string_String = _run_target_args'_v5142 
                    let v5171 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v5172 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5165 v5171 
                    let v5173 : string = "v5172"
                    let v5174 : string = v5173 + v52 
                    let v5175 : string = v5174 + v52 
                    let v5176 : string = "vec![" + v5175 + "]"
                    let v5177 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5176 
                    let v5178 : string = "leptos::prelude::Fragment::new($0)"
                    let v5179 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5177 v5178 
                    let v5180 : string = "leptos::prelude::AnyView::from($0)"
                    let v5181 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5179 v5180 
                    let v5182 : string = "<" + v4623 + " " + v5103 + ">move || { v5181 }</" + v4623 + ">"
                    let v5183 : string = "leptos::prelude::view! { " + v5182 + " }"
                    let v5184 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5183 
                    let v5185 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v5184 |> unbox
                    let v5186 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5187 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5185 v5186 
                    let v5188 : string = "v5187"
                    let v5189 : string = v5188 + v52 
                    let v5190 : string = v5189 + v52 
                    let v5191 : string = "vec![" + v5190 + "]"
                    let v5192 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5191 
                    let v5193 : string = "leptos::prelude::Fragment::new($0)"
                    let v5194 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5192 v5193 
                    let v5195 : string = "leptos::prelude::AnyView::from($0)"
                    let v5196 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5194 v5195 
                    let v5197 : string = "<" + v4521 + " " + v5100 + ">move || { v5196 }</" + v4521 + ">"
                    let v5198 : string = "leptos::prelude::view! { " + v5197 + " }"
                    let v5199 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5198 
                    let v5200 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5199 |> unbox
                    let v5201 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5202 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5200 v5201 
                    let v5203 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
                    let v5204 : string = " " + v5203 + v52 + ""
                    let v5205 : string = "$0"
                    let v5206 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4648 v5205 
                    let v5207 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                    let v5208 : string = "viewBox=\"0 0 20 20\""
                    let v5209 : string = "fill=\"currentColor\""
                    let v5210 : string = "class=move || \" \".to_owned() + &v5206(())"
                    let v5211 : string = " " + v5207 + v52 + ""
                    let v5212 : string = " " + v5208 + v5211 + ""
                    let v5213 : string = " " + v5209 + v5212 + ""
                    let v5214 : string = " " + v5210 + v5213 + ""
                    let v5215 : string = "fill-rule=\"evenodd\""
                    let v5216 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
                    let v5217 : string = "clip-rule=\"evenodd\""
                    let v5218 : string = " " + v5215 + v52 + ""
                    let v5219 : string = " " + v5216 + v5218 + ""
                    let v5220 : string = " " + v5217 + v5219 + ""
                    let v5221 : string = "vec![" + v52 + "]"
                    let v5222 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5221 
                    let v5223 : string = "leptos::prelude::Fragment::new($0)"
                    let v5224 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5222 v5223 
                    let v5225 : string = "leptos::prelude::AnyView::from($0)"
                    let v5226 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5224 v5225 
                    let v5227 : string = "<" + v4450 + " " + v5220 + ">move || { v5226 }</" + v4450 + ">"
                    let v5228 : string = "leptos::prelude::view! { " + v5227 + " }"
                    let v5229 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5228 
                    let v5230 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v5229 |> unbox
                    let v5231 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5232 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5230 v5231 
                    let v5233 : string = "v5232"
                    let v5234 : string = v5233 + v52 
                    let v5235 : string = v5234 + v52 
                    let v5236 : string = "vec![" + v5235 + "]"
                    let v5237 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5236 
                    let v5238 : string = "leptos::prelude::Fragment::new($0)"
                    let v5239 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5237 v5238 
                    let v5240 : string = "leptos::prelude::AnyView::from($0)"
                    let v5241 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5239 v5240 
                    let v5242 : string = "<" + v4466 + " " + v5214 + ">move || { v5241 }</" + v4466 + ">"
                    let v5243 : string = "leptos::prelude::view! { " + v5242 + " }"
                    let v5244 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5243 
                    let v5245 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v5244 |> unbox
                    let v5246 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5247 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5245 v5246 
                    let v5248 : string = "v5247"
                    let v5249 : string = v5248 + v52 
                    let v5250 : string = v5249 + v52 
                    let v5251 : string = "vec![" + v5250 + "]"
                    let v5252 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5251 
                    let v5253 : string = "leptos::prelude::Fragment::new($0)"
                    let v5254 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5252 v5253 
                    let v5255 : string = "leptos::prelude::AnyView::from($0)"
                    let v5256 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5254 v5255 
                    let v5257 : string = "<" + v4623 + " " + v5204 + ">move || { v5256 }</" + v4623 + ">"
                    let v5258 : string = "leptos::prelude::view! { " + v5257 + " }"
                    let v5259 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5258 
                    let v5260 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v5259 |> unbox
                    let v5261 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5262 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5260 v5261 
                    let v5263 : string = "v5262"
                    let v5264 : string = v5263 + v52 
                    let v5265 : string = v5264 + v52 
                    let v5266 : string = "v5202"
                    let v5267 : string = v5266 + v4710 
                    let v5268 : string = v5267 + v5265 
                    let v5269 : string = "vec![" + v5268 + "]"
                    let v5270 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5269 
                    let v5271 : string = "leptos::prelude::Fragment::new($0)"
                    let v5272 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5270 v5271 
                    let v5273 : string = "leptos::prelude::AnyView::from($0)"
                    let v5274 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5272 v5273 
                    let v5275 : string = "<" + v4719 + " " + v5098 + ">move || { v5274 }</" + v4719 + ">"
                    let v5276 : string = "leptos::prelude::view! { " + v5275 + " }"
                    let v5277 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5276 
                    let v5278 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v5277 |> unbox
                    let v5279 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5280 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5278 v5279 
                    let v5281 : string = "class=\"flex flex-1 flex-col\""
                    let v5282 : string = " " + v5281 + v52 + ""
                    let v5283 : string = "Func0::new(move || $0())"
                    let v5284 : (unit -> leptos_dom_Fragment) = closure246()
                    let v5285 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v5284 v5283 
                    let v5286 : Func0<leptos_dom_Fragment> = method195(v5285)
                    let v5287 : string = "(move || v5286())()"
                    let v5288 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v5287 
                    let v5289 : string = "leptos::prelude::AnyView::from($0)"
                    let v5290 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5288 v5289 
                    let v5291 : string = "<" + v4521 + " " + v5282 + ">move || { v5290 }</" + v4521 + ">"
                    let v5292 : string = "leptos::prelude::view! { " + v5291 + " }"
                    let v5293 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5292 
                    let v5294 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5293 |> unbox
                    let v5295 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5296 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5294 v5295 
                    let v5297 : string = "v5296"
                    let v5298 : string = v5297 + v52 
                    let v5299 : string = v5298 + v52 
                    let v5300 : string = "v5280"
                    let v5301 : string = v5300 + v4710 
                    let v5302 : string = v5301 + v5299 
                    let v5303 : string = "vec![" + v5302 + "]"
                    let v5304 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5303 
                    let v5305 : string = "leptos::prelude::Fragment::new($0)"
                    let v5306 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5304 v5305 
                    let v5307 : string = "leptos::prelude::AnyView::from($0)"
                    let v5308 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5306 v5307 
                    let v5309 : string = "<" + v4754 + " " + v5090 + ">move || { v5308 }</" + v4754 + ">"
                    let v5310 : string = "leptos::prelude::view! { " + v5309 + " }"
                    let v5311 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5310 
                    let v5312 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v5311 |> unbox
                    let v5313 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5314 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5312 v5313 
                    let v5315 : string = "v5314"
                    let v5316 : string = v5315 + v52 
                    let v5317 : string = v5316 + v52 
                    let v5318 : string = "v5086"
                    let v5319 : string = v5318 + v4710 
                    let v5320 : string = v5319 + v5317 
                    let v5321 : string = "vec![" + v5320 + "]"
                    let v5322 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5321 
                    let v5323 : string = "leptos::prelude::Fragment::new($0)"
                    let v5324 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5322 v5323 
                    let v5325 : string = "leptos::prelude::AnyView::from($0)"
                    let v5326 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5324 v5325 
                    let v5327 : string = "<" + v4521 + " " + v5065 + ">move || { v5326 }</" + v4521 + ">"
                    let v5328 : string = "leptos::prelude::view! { " + v5327 + " }"
                    let v5329 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5328 
                    let v5330 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5329 |> unbox
                    let v5331 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5332 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5330 v5331 
                    v5332
                else
                    let v5333 : string = "vec![" + v52 + "]"
                    let v5334 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5333 
                    let v5335 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v5336 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5334 v5335 
                    v5336
            let v5338 : string = "v5337"
            let v5339 : string = v5338 + v52 
            let v5340 : string = v5339 + v52 
            let v5341 : string = "v5051"
            let v5342 : string = v5341 + v4710 
            let v5343 : string = v5342 + v5340 
            let v5344 : string = "v4778"
            let v5345 : string = v5344 + v4710 
            let v5346 : string = v5345 + v5343 
            let v5347 : string = "vec![" + v5346 + "]"
            let v5348 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5347 
            let v5349 : string = "leptos::prelude::Fragment::new($0)"
            let v5350 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5348 v5349 
            US22_0(v5350)
        | US18_3 -> (* Transactions *)
            let v3636 : string = "transactions_view.render (1)"
            let v3637 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3638 : bool = Fable.Core.RustInterop.emitRustExpr v3636 v3637 
            let v3639 : string = "leptos::context::use_context::<std::sync::Arc<Heap2>>()"
            let v3640 : Heap2 option = Fable.Core.RustInterop.emitRustExpr () v3639 
            let v3641 : string = "$0.unwrap()"
            let v3642 : Heap2 = Fable.Core.RustInterop.emitRustExpr v3640 v3641 
            let v3643 : string = "use_transactions.render (1)"
            let v3644 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3645 : bool = Fable.Core.RustInterop.emitRustExpr v3643 v3644 
            let v3646 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3647 : (unit -> Vec<string>) = closure44(v3642)
            let v3648 : leptos_prelude_ArcMemo<Vec<string>> = Fable.Core.RustInterop.emitRustExpr v3647 v3646 
            let v3649 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3650 : (unit -> (struct (string * US23 * string * bool * bool) [])) = closure46(v3648)
            let v3651 : leptos_prelude_ArcMemo<(struct (string * US23 * string * bool * bool) [])> = Fable.Core.RustInterop.emitRustExpr v3650 v3649 
            let v3652 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3653 : (unit -> Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>) = closure48(v3642, v3648)
            let v3654 : leptos_prelude_ArcMemo<Vec<struct (string * Vec<struct (string * US23 * string * bool * bool)>)>> = Fable.Core.RustInterop.emitRustExpr v3653 v3652 
            let v3655 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3656 : (unit -> Vec<struct (string * US23 * string * bool * bool)>) = closure51(v3654)
            let v3657 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr v3656 v3655 
            let v3658 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3659 : (unit -> (string [])) = closure55(v3654)
            let v3660 : leptos_prelude_ArcMemo<(string [])> = Fable.Core.RustInterop.emitRustExpr v3659 v3658 
            let v3661 : (crate_model_near_nearblocks_Root -> (struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) [])) = closure60()
            let v3662 : leptos_prelude_ArcMemo<Vec<Result<(struct (std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * std_string_String * uint32 * (struct (std_string_String * std_string_String option) []) * float * bool * float * (std_string_String [])) []) option, std_string_String>>> = method78(v3657, v3661)
            let v3664 : string = $"%A{v3662}"
            let v3667 : string = "use_transactions.render (7) / root func0 / result: " + string v3664 + ""
            let v3668 : int64 = 200L
            let v3669 : string = method8(v3668, v3667)
            let v3670 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3671 : bool = Fable.Core.RustInterop.emitRustExpr v3669 v3670 
            let v3672 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3673 : (unit -> Result<(struct (string * unativeint * Heap5) []) option, std_string_String>) = closure90(v3660, v3662)
            let v3674 : leptos_prelude_ArcMemo<Result<(struct (string * unativeint * Heap5) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v3673 v3672 
            let v3675 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3676 : (unit -> Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String>) = closure107(v3674)
            let v3677 : leptos_prelude_ArcMemo<Result<(struct (string * US23 * string * bool * bool) []) option, std_string_String>> = Fable.Core.RustInterop.emitRustExpr v3676 v3675 
            let v3678 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
            let v3679 : (unit -> Vec<struct (string * US23 * string * bool * bool)>) = closure115(v3677)
            let v3680 : leptos_prelude_ArcMemo<Vec<struct (string * US23 * string * bool * bool)>> = Fable.Core.RustInterop.emitRustExpr v3679 v3678 
            let v3681 : (crate_model_near_rpc_RpcResponse -> struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option)) = closure119()
            let v3682 : leptos_prelude_ArcMemo<Vec<Result<struct (std_string_String * struct ((struct (std_string_String * (std_collections_HashMap<std_string_String, struct (std_string_String * std_string_String option * float option * std_string_String option)> []) * std_string_String * (std_string_String []) * (std_string_String []) * std_string_String * std_string_String * std_string_String * std_string_String) []) * (struct (std_string_String * std_string_String * std_string_String * uint64 * (std_string_String []) * (struct (std_string_String * std_string_String * std_string_String) []) * uint8 * (std_string_String []) * std_collections_HashMap<std_string_String, std_string_String> * std_string_String option * (struct (std_string_String * std_string_String) [])) [])) option * struct (std_string_String * std_string_String * struct (std_string_String option * std_string_String option) option * int32 * std_string_String * std_string_String) option * std_string_String option) option, std_string_String>>> = method159(v3680, v3681)
            let v3684 : string = $"%A{v3682}"
            let v3687 : string = "use_transactions.render (12) / rpc_response func0 / result: " + string v3684 + ""
            let v3688 : int64 = 200L
            let v3689 : string = method8(v3688, v3687)
            let v3690 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
            let v3691 : bool = Fable.Core.RustInterop.emitRustExpr v3689 v3690 
            let v3692 : string = $"leptos::prelude::signal($0)"
            let struct (v3693 : leptos_prelude_ReadSignal<bool>, v3694 : leptos_prelude_WriteSignal<bool>) = Fable.Core.RustInterop.emitRustExpr false v3692 
            let v3695 : (unit -> unit) = closure254(v3694)
            let v3696 : string = "let v3695 = $0"
            Fable.Core.RustInterop.emitRustExpr v3695 v3696 
            let v3697 : string = "$0"
            let v3698 : (unit -> string) = closure255()
            let v3699 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3698 v3697 
            let v3700 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v3701 : string = "fill=\"none\""
            let v3702 : string = "viewBox=\"0 0 24 24\""
            let v3703 : string = "stroke-width=\"1.5\""
            let v3704 : string = "stroke=\"currentColor\""
            let v3705 : string = "class=move || \" \".to_owned() + &v3699(())"
            let v3706 : string = " " + v3700 + v52 + ""
            let v3707 : string = " " + v3701 + v3706 + ""
            let v3708 : string = " " + v3702 + v3707 + ""
            let v3709 : string = " " + v3703 + v3708 + ""
            let v3710 : string = " " + v3704 + v3709 + ""
            let v3711 : string = " " + v3705 + v3710 + ""
            let v3712 : string = "stroke-linecap=\"round\""
            let v3713 : string = "stroke-linejoin=\"round\""
            let v3714 : string = "d=\"M10.343 3.94c.09-.542.56-.94 1.11-.94h1.093c.55 0 1.02.398 1.11.94l.149.894c.07.424.384.764.78.93.398.164.855.142 1.205-.108l.737-.527a1.125 1.125 0 011.45.12l.773.774c.39.389.44 1.002.12 1.45l-.527.737c-.25.35-.272.806-.107 1.204.165.397.505.71.93.78l.893.15c.543.09.94.56.94 1.109v1.094c0 .55-.397 1.02-.94 1.11l-.893.149c-.425.07-.765.383-.93.78-.165.398-.143.854.107 1.204l.527.738c.32.447.269 1.06-.12 1.45l-.774.773a1.125 1.125 0 01-1.449.12l-.738-.527c-.35-.25-.806-.272-1.203-.107-.397.165-.71.505-.781.929l-.149.894c-.09.542-.56.94-1.11.94h-1.094c-.55 0-1.019-.398-1.11-.94l-.148-.894c-.071-.424-.384-.764-.781-.93-.398-.164-.854-.142-1.204.108l-.738.527c-.447.32-1.06.269-1.45-.12l-.773-.774a1.125 1.125 0 01-.12-1.45l.527-.737c.25-.35.273-.806.108-1.204-.165-.397-.505-.71-.93-.78l-.894-.15c-.542-.09-.94-.56-.94-1.109v-1.094c0-.55.398-1.02.94-1.11l.894-.149c.424-.07.765-.383.93-.78.165-.398.143-.854-.107-1.204l-.527-.738a1.125 1.125 0 01.12-1.45l.773-.773a1.125 1.125 0 011.45-.12l.737.527c.35.25.807.272 1.204.107.397-.165.71-.505.78-.929l.15-.894z\""
            let v3715 : string = " " + v3712 + v52 + ""
            let v3716 : string = " " + v3713 + v3715 + ""
            let v3717 : string = " " + v3714 + v3716 + ""
            let v3718 : string = "vec![" + v52 + "]"
            let v3719 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3718 
            let v3720 : string = "leptos::prelude::Fragment::new($0)"
            let v3721 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3719 v3720 
            let v3722 : string = "leptos::prelude::AnyView::from($0)"
            let v3723 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3721 v3722 
            let v3724 : string = "path"
            let v3725 : string = "<" + v3724 + " " + v3717 + ">move || { v3723 }</" + v3724 + ">"
            let v3726 : string = "leptos::prelude::view! { " + v3725 + " }"
            let v3727 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3726 
            let v3728 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v3727 |> unbox
            let v3729 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3730 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3728 v3729 
            let v3731 : string = "stroke-linecap=\"round\""
            let v3732 : string = "stroke-linejoin=\"round\""
            let v3733 : string = "d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\""
            let v3734 : string = " " + v3731 + v52 + ""
            let v3735 : string = " " + v3732 + v3734 + ""
            let v3736 : string = " " + v3733 + v3735 + ""
            let v3737 : string = "vec![" + v52 + "]"
            let v3738 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3737 
            let v3739 : string = "leptos::prelude::Fragment::new($0)"
            let v3740 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3738 v3739 
            let v3741 : string = "leptos::prelude::AnyView::from($0)"
            let v3742 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3740 v3741 
            let v3743 : string = "<" + v3724 + " " + v3736 + ">move || { v3742 }</" + v3724 + ">"
            let v3744 : string = "leptos::prelude::view! { " + v3743 + " }"
            let v3745 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3744 
            let v3746 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v3745 |> unbox
            let v3747 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3748 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3746 v3747 
            let v3749 : string = "v3748"
            let v3750 : string = v3749 + v52 
            let v3751 : string = v3750 + v52 
            let v3752 : string = "v3730"
            let v3753 : string = ", "
            let v3754 : string = v3752 + v3753 
            let v3755 : string = v3754 + v3751 
            let v3756 : string = "vec![" + v3755 + "]"
            let v3757 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3756 
            let v3758 : string = "leptos::prelude::Fragment::new($0)"
            let v3759 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3757 v3758 
            let v3760 : string = "leptos::prelude::AnyView::from($0)"
            let v3761 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3759 v3760 
            let v3762 : string = "svg"
            let v3763 : string = "<" + v3762 + " " + v3711 + ">move || { v3761 }</" + v3762 + ">"
            let v3764 : string = "leptos::prelude::view! { " + v3763 + " }"
            let v3765 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3764 
            let v3766 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v3765 |> unbox
            let v3767 : string = "on:click=move |_| v3695()"
            let v3768 : string = "aria-label=\"Settings\""
            let v3769 : string = "$0"
            let v3770 : (unit -> std_string_String) = closure256(v3693)
            let v3771 : (unit -> std_string_String) = Fable.Core.RustInterop.emitRustExpr v3770 v3769 
            let v3772 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] pb-[8px] pt-[8px] px-[12px] \".to_owned() + &v3771(())"
            let v3773 : string = " " + v3772 + v52 + ""
            let v3774 : string = " " + v3767 + v3773 + ""
            let v3775 : string = " " + v3768 + v3774 + ""
            let v3776 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3777 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3766 v3776 
            let v3778 : string = "v3777"
            let v3779 : string = v3778 + v52 
            let v3780 : string = v3779 + v52 
            let v3781 : string = "vec![" + v3780 + "]"
            let v3782 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3781 
            let v3783 : string = "leptos::prelude::Fragment::new($0)"
            let v3784 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3782 v3783 
            let v3785 : string = "leptos::prelude::AnyView::from($0)"
            let v3786 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3784 v3785 
            let v3787 : string = "button"
            let v3788 : string = "<" + v3787 + " " + v3775 + ">move || { v3786 }</" + v3787 + ">"
            let v3789 : string = "leptos::prelude::view! { " + v3788 + " }"
            let v3790 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3789 
            let v3791 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Button>> = v3790 |> unbox
            let v3792 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3793 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3791 v3792 
            let v3794 : string = "vec![" + v52 + "]"
            let v3795 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3794 
            let v3796 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3797 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3795 v3796 
            let v3798 : string = "class=\"flex flex-col [position:relative]\""
            let v3799 : string = " " + v3798 + v52 + ""
            let v3800 : string = "$0"
            let v3801 : (unit -> string) = closure161()
            let v3802 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3801 v3800 
            let v3803 : string = "$0"
            let v3804 : (unit -> bool) = closure162()
            let v3805 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v3804 v3803 
            let v3806 : string = "class=\"[position:absolute] [right:0] [top:0]\""
            let v3807 : string = " " + v3806 + v52 + ""
            let v3808 : string = "v3793"
            let v3809 : string = v3808 + v52 
            let v3810 : string = v3809 + v52 
            let v3811 : string = "vec![" + v3810 + "]"
            let v3812 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3811 
            let v3813 : string = "leptos::prelude::Fragment::new($0)"
            let v3814 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3812 v3813 
            let v3815 : string = "leptos::prelude::AnyView::from($0)"
            let v3816 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3814 v3815 
            let v3817 : string = "div"
            let v3818 : string = "<" + v3817 + " " + v3807 + ">move || { v3816 }</" + v3817 + ">"
            let v3819 : string = "leptos::prelude::view! { " + v3818 + " }"
            let v3820 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3819 
            let v3821 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3820 |> unbox
            let v3822 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3823 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3821 v3822 
            let v3824 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v3802(())"
            let v3825 : string = "open=move || v3805(())"
            let v3826 : string = " " + v3824 + v52 + ""
            let v3827 : string = " " + v3825 + v3826 + ""
            let v3828 : string = "$0"
            let v3829 : (unit -> string) = closure257()
            let v3830 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3829 v3828 
            let v3831 : string = "$0"
            let v3832 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure258(v3793)
            let v3833 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v3832 v3831 
            let v3834 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v3833(()) + \" \" + &v3830(())"
            let v3835 : string = " " + v3834 + v52 + ""
            let v3836 : string = "class=\"flex items-center gap-2\""
            let v3837 : string = " " + v3836 + v52 + ""
            let v3838 : (unit -> string) = method243(v3793)
            let v3839 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
            let v3840 : string = " " + v3839 + v52 + ""
            let v3841 : string = v3838 ()
            (* run_target_args'
            let v3846 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3847 : string = "&*$0"
            let v3848 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3841 v3847 
            let _run_target_args'_v3846 = v3848 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3849 : string = "&*$0"
            let v3850 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3841 v3849 
            let _run_target_args'_v3846 = v3850 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3851 : string = "&*$0"
            let v3852 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v3841 v3851 
            let _run_target_args'_v3846 = v3852 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3854 : Ref<Str> = v3841 |> unbox<Ref<Str>>
            let _run_target_args'_v3846 = v3854 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3858 : Ref<Str> = v3841 |> unbox<Ref<Str>>
            let _run_target_args'_v3846 = v3858 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3862 : Ref<Str> = v3841 |> unbox<Ref<Str>>
            let _run_target_args'_v3846 = v3862 
            #endif
#else
            let v3866 : Ref<Str> = v3841 |> unbox<Ref<Str>>
            let _run_target_args'_v3846 = v3866 
            #endif
            let v3869 : Ref<Str> = _run_target_args'_v3846 
            (* run_target_args'
            let v3879 : unit = ()
            run_target_args' *)
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3880 : string = "String::from($0)"
            let v3881 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3869 v3880 
            let _run_target_args'_v3879 = v3881 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3882 : string = "String::from($0)"
            let v3883 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3869 v3882 
            let _run_target_args'_v3879 = v3883 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3884 : string = "String::from($0)"
            let v3885 : std_string_String = Fable.Core.RustInterop.emitRustExpr v3869 v3884 
            let _run_target_args'_v3879 = v3885 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3887 : std_string_String = v3869 |> unbox<std_string_String>
            let _run_target_args'_v3879 = v3887 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3891 : std_string_String = v3869 |> unbox<std_string_String>
            let _run_target_args'_v3879 = v3891 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3895 : std_string_String = v3869 |> unbox<std_string_String>
            let _run_target_args'_v3879 = v3895 
            #endif
#else
            let v3899 : std_string_String = v3869 |> unbox<std_string_String>
            let _run_target_args'_v3879 = v3899 
            #endif
            let v3902 : std_string_String = _run_target_args'_v3879 
            let v3908 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
            let v3909 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3902 v3908 
            let v3910 : string = "v3909"
            let v3911 : string = v3910 + v52 
            let v3912 : string = v3911 + v52 
            let v3913 : string = "vec![" + v3912 + "]"
            let v3914 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3913 
            let v3915 : string = "leptos::prelude::Fragment::new($0)"
            let v3916 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3914 v3915 
            let v3917 : string = "leptos::prelude::AnyView::from($0)"
            let v3918 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3916 v3917 
            let v3919 : string = "span"
            let v3920 : string = "<" + v3919 + " " + v3840 + ">move || { v3918 }</" + v3919 + ">"
            let v3921 : string = "leptos::prelude::view! { " + v3920 + " }"
            let v3922 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3921 
            let v3923 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v3922 |> unbox
            let v3924 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3925 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3923 v3924 
            let v3926 : string = "v3925"
            let v3927 : string = v3926 + v52 
            let v3928 : string = v3927 + v52 
            let v3929 : string = "vec![" + v3928 + "]"
            let v3930 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3929 
            let v3931 : string = "leptos::prelude::Fragment::new($0)"
            let v3932 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3930 v3931 
            let v3933 : string = "leptos::prelude::AnyView::from($0)"
            let v3934 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3932 v3933 
            let v3935 : string = "<" + v3817 + " " + v3837 + ">move || { v3934 }</" + v3817 + ">"
            let v3936 : string = "leptos::prelude::view! { " + v3935 + " }"
            let v3937 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3936 
            let v3938 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v3937 |> unbox
            let v3939 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3940 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3938 v3939 
            let v3941 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
            let v3942 : string = " " + v3941 + v52 + ""
            let v3943 : string = "$0"
            let v3944 : (unit -> string) = closure166()
            let v3945 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3944 v3943 
            let v3946 : string = "xmlns=\"http://www.w3.org/2000/svg\""
            let v3947 : string = "viewBox=\"0 0 20 20\""
            let v3948 : string = "fill=\"currentColor\""
            let v3949 : string = "class=move || \" \".to_owned() + &v3945(())"
            let v3950 : string = " " + v3946 + v52 + ""
            let v3951 : string = " " + v3947 + v3950 + ""
            let v3952 : string = " " + v3948 + v3951 + ""
            let v3953 : string = " " + v3949 + v3952 + ""
            let v3954 : string = "fill-rule=\"evenodd\""
            let v3955 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
            let v3956 : string = "clip-rule=\"evenodd\""
            let v3957 : string = " " + v3954 + v52 + ""
            let v3958 : string = " " + v3955 + v3957 + ""
            let v3959 : string = " " + v3956 + v3958 + ""
            let v3960 : string = "vec![" + v52 + "]"
            let v3961 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3960 
            let v3962 : string = "leptos::prelude::Fragment::new($0)"
            let v3963 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3961 v3962 
            let v3964 : string = "leptos::prelude::AnyView::from($0)"
            let v3965 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3963 v3964 
            let v3966 : string = "<" + v3724 + " " + v3959 + ">move || { v3965 }</" + v3724 + ">"
            let v3967 : string = "leptos::prelude::view! { " + v3966 + " }"
            let v3968 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3967 
            let v3969 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v3968 |> unbox
            let v3970 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3971 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3969 v3970 
            let v3972 : string = "v3971"
            let v3973 : string = v3972 + v52 
            let v3974 : string = v3973 + v52 
            let v3975 : string = "vec![" + v3974 + "]"
            let v3976 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3975 
            let v3977 : string = "leptos::prelude::Fragment::new($0)"
            let v3978 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3976 v3977 
            let v3979 : string = "leptos::prelude::AnyView::from($0)"
            let v3980 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3978 v3979 
            let v3981 : string = "<" + v3762 + " " + v3953 + ">move || { v3980 }</" + v3762 + ">"
            let v3982 : string = "leptos::prelude::view! { " + v3981 + " }"
            let v3983 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3982 
            let v3984 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v3983 |> unbox
            let v3985 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v3986 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3984 v3985 
            let v3987 : string = "v3986"
            let v3988 : string = v3987 + v52 
            let v3989 : string = v3988 + v52 
            let v3990 : string = "vec![" + v3989 + "]"
            let v3991 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v3990 
            let v3992 : string = "leptos::prelude::Fragment::new($0)"
            let v3993 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v3991 v3992 
            let v3994 : string = "leptos::prelude::AnyView::from($0)"
            let v3995 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3993 v3994 
            let v3996 : string = "<" + v3919 + " " + v3942 + ">move || { v3995 }</" + v3919 + ">"
            let v3997 : string = "leptos::prelude::view! { " + v3996 + " }"
            let v3998 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v3997 
            let v3999 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v3998 |> unbox
            let v4000 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4001 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v3999 v4000 
            let v4002 : string = "v4001"
            let v4003 : string = v4002 + v52 
            let v4004 : string = v4003 + v52 
            let v4005 : string = "v3940"
            let v4006 : string = v4005 + v3753 
            let v4007 : string = v4006 + v4004 
            let v4008 : string = "vec![" + v4007 + "]"
            let v4009 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4008 
            let v4010 : string = "leptos::prelude::Fragment::new($0)"
            let v4011 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4009 v4010 
            let v4012 : string = "leptos::prelude::AnyView::from($0)"
            let v4013 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4011 v4012 
            let v4014 : string = "summary"
            let v4015 : string = "<" + v4014 + " " + v3835 + ">move || { v4013 }</" + v4014 + ">"
            let v4016 : string = "leptos::prelude::view! { " + v4015 + " }"
            let v4017 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4016 
            let v4018 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v4017 |> unbox
            let v4019 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4020 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4018 v4019 
            let v4021 : string = "class=\"flex flex-1 flex-col\""
            let v4022 : string = " " + v4021 + v52 + ""
            let v4023 : string = "Func0::new(move || $0())"
            let v4024 : (unit -> leptos_dom_Fragment) = closure260(v3642, v3674, v3654, v3693)
            let v4025 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v4024 v4023 
            let v4026 : Func0<leptos_dom_Fragment> = method195(v4025)
            let v4027 : string = "(move || v4026())()"
            let v4028 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v4027 
            let v4029 : string = "leptos::prelude::AnyView::from($0)"
            let v4030 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4028 v4029 
            let v4031 : string = "<" + v3817 + " " + v4022 + ">move || { v4030 }</" + v3817 + ">"
            let v4032 : string = "leptos::prelude::view! { " + v4031 + " }"
            let v4033 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4032 
            let v4034 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4033 |> unbox
            let v4035 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4036 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4034 v4035 
            let v4037 : string = "v4036"
            let v4038 : string = v4037 + v52 
            let v4039 : string = v4038 + v52 
            let v4040 : string = "v4020"
            let v4041 : string = v4040 + v3753 
            let v4042 : string = v4041 + v4039 
            let v4043 : string = "vec![" + v4042 + "]"
            let v4044 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4043 
            let v4045 : string = "leptos::prelude::Fragment::new($0)"
            let v4046 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4044 v4045 
            let v4047 : string = "leptos::prelude::AnyView::from($0)"
            let v4048 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4046 v4047 
            let v4049 : string = "details"
            let v4050 : string = "<" + v4049 + " " + v3827 + ">move || { v4048 }</" + v4049 + ">"
            let v4051 : string = "leptos::prelude::view! { " + v4050 + " }"
            let v4052 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4051 
            let v4053 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v4052 |> unbox
            let v4054 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4055 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4053 v4054 
            let v4056 : string = "v4055"
            let v4057 : string = v4056 + v52 
            let v4058 : string = v4057 + v52 
            let v4059 : string = "v3823"
            let v4060 : string = v4059 + v3753 
            let v4061 : string = v4060 + v4058 
            let v4062 : string = "vec![" + v4061 + "]"
            let v4063 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4062 
            let v4064 : string = "leptos::prelude::Fragment::new($0)"
            let v4065 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4063 v4064 
            let v4066 : string = "leptos::prelude::AnyView::from($0)"
            let v4067 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4065 v4066 
            let v4068 : string = "<" + v3817 + " " + v3799 + ">move || { v4067 }</" + v3817 + ">"
            let v4069 : string = "leptos::prelude::view! { " + v4068 + " }"
            let v4070 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4069 
            let v4071 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4070 |> unbox
            let v4072 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v4073 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4071 v4072 
            let v4074 : leptos_prelude_ArcRwSignal<Heap1> = v3642.l0
            let v4075 : string = "Box::pin($0)"
            let v4076 : std_pin_Pin<Box<leptos_prelude_ArcRwSignal<Heap1>>> = Fable.Core.RustInterop.emitRustExpr v4074 v4075 
            let v4077 : string = $"leptos::prelude::ArcRwSignal::get_untracked(&$0)"
            let v4078 : Heap1 = Fable.Core.RustInterop.emitRustExpr v4076 v4077 
            let v4079 : leptos_prelude_ArcRwSignal<bool> = v4078.l1
            let v4080 : string = $"leptos::prelude::ArcRwSignal::get(&$0)"
            let v4081 : bool = Fable.Core.RustInterop.emitRustExpr v4079 v4080 
            let v4359 : leptos_prelude_AnyView_ =
                if v4081 then
                    let v4082 : string = "vec![" + v52 + "]"
                    let v4083 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4082 
                    let v4084 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4085 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4083 v4084 
                    let v4086 : string = "class=\"flex flex-col [position:relative]\""
                    let v4087 : string = " " + v4086 + v52 + ""
                    let v4088 : string = "$0"
                    let v4089 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3801 v4088 
                    let v4090 : string = "$0"
                    let v4091 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v3804 v4090 
                    let v4092 : string = "class=\"[position:absolute] [right:0] [top:0]\""
                    let v4093 : string = " " + v4092 + v52 + ""
                    let v4094 : string = "v4085"
                    let v4095 : string = v4094 + v52 
                    let v4096 : string = v4095 + v52 
                    let v4097 : string = "vec![" + v4096 + "]"
                    let v4098 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4097 
                    let v4099 : string = "leptos::prelude::Fragment::new($0)"
                    let v4100 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4098 v4099 
                    let v4101 : string = "leptos::prelude::AnyView::from($0)"
                    let v4102 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4100 v4101 
                    let v4103 : string = "<" + v3817 + " " + v4093 + ">move || { v4102 }</" + v3817 + ">"
                    let v4104 : string = "leptos::prelude::view! { " + v4103 + " }"
                    let v4105 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4104 
                    let v4106 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4105 |> unbox
                    let v4107 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4108 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4106 v4107 
                    let v4109 : string = "class=move || \"flex flex-1 [&_summary::-webkit-details-marker]:hidden [&>summary>span]:open:-rotate-180 \".to_owned() + &v4089(())"
                    let v4110 : string = "open=move || v4091(())"
                    let v4111 : string = " " + v4109 + v52 + ""
                    let v4112 : string = " " + v4110 + v4111 + ""
                    let v4113 : string = "$0"
                    let v4114 : (unit -> string) = closure337()
                    let v4115 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v4114 v4113 
                    let v4116 : string = "$0"
                    let v4117 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure338()
                    let v4118 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v4117 v4116 
                    let v4119 : string = "class=move || \"flex flex-1 items-center justify-between px-4 cursor-pointer text-gray-600 hover:text-gray-700 bg-gray-300 hover:bg-gray-200 \".to_owned() + v4118(()) + \" \" + &v4115(())"
                    let v4120 : string = " " + v4119 + v52 + ""
                    let v4121 : string = "class=\"flex items-center gap-2\""
                    let v4122 : string = " " + v4121 + v52 + ""
                    let v4123 : (unit -> string) = method282()
                    let v4124 : string = "class=\"[font-size:14px] [line-height:21px] [padding-right:11px]\""
                    let v4125 : string = " " + v4124 + v52 + ""
                    let v4126 : string = v4123 ()
                    (* run_target_args'
                    let v4131 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v4132 : string = "&*$0"
                    let v4133 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4126 v4132 
                    let _run_target_args'_v4131 = v4133 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v4134 : string = "&*$0"
                    let v4135 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4126 v4134 
                    let _run_target_args'_v4131 = v4135 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v4136 : string = "&*$0"
                    let v4137 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v4126 v4136 
                    let _run_target_args'_v4131 = v4137 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v4139 : Ref<Str> = v4126 |> unbox<Ref<Str>>
                    let _run_target_args'_v4131 = v4139 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v4143 : Ref<Str> = v4126 |> unbox<Ref<Str>>
                    let _run_target_args'_v4131 = v4143 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v4147 : Ref<Str> = v4126 |> unbox<Ref<Str>>
                    let _run_target_args'_v4131 = v4147 
                    #endif
#else
                    let v4151 : Ref<Str> = v4126 |> unbox<Ref<Str>>
                    let _run_target_args'_v4131 = v4151 
                    #endif
                    let v4154 : Ref<Str> = _run_target_args'_v4131 
                    (* run_target_args'
                    let v4164 : unit = ()
                    run_target_args' *)
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v4165 : string = "String::from($0)"
                    let v4166 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4154 v4165 
                    let _run_target_args'_v4164 = v4166 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v4167 : string = "String::from($0)"
                    let v4168 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4154 v4167 
                    let _run_target_args'_v4164 = v4168 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v4169 : string = "String::from($0)"
                    let v4170 : std_string_String = Fable.Core.RustInterop.emitRustExpr v4154 v4169 
                    let _run_target_args'_v4164 = v4170 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v4172 : std_string_String = v4154 |> unbox<std_string_String>
                    let _run_target_args'_v4164 = v4172 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v4176 : std_string_String = v4154 |> unbox<std_string_String>
                    let _run_target_args'_v4164 = v4176 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v4180 : std_string_String = v4154 |> unbox<std_string_String>
                    let _run_target_args'_v4164 = v4180 
                    #endif
#else
                    let v4184 : std_string_String = v4154 |> unbox<std_string_String>
                    let _run_target_args'_v4164 = v4184 
                    #endif
                    let v4187 : std_string_String = _run_target_args'_v4164 
                    let v4193 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
                    let v4194 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4187 v4193 
                    let v4195 : string = "v4194"
                    let v4196 : string = v4195 + v52 
                    let v4197 : string = v4196 + v52 
                    let v4198 : string = "vec![" + v4197 + "]"
                    let v4199 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4198 
                    let v4200 : string = "leptos::prelude::Fragment::new($0)"
                    let v4201 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4199 v4200 
                    let v4202 : string = "leptos::prelude::AnyView::from($0)"
                    let v4203 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4201 v4202 
                    let v4204 : string = "<" + v3919 + " " + v4125 + ">move || { v4203 }</" + v3919 + ">"
                    let v4205 : string = "leptos::prelude::view! { " + v4204 + " }"
                    let v4206 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4205 
                    let v4207 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4206 |> unbox
                    let v4208 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4209 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4207 v4208 
                    let v4210 : string = "v4209"
                    let v4211 : string = v4210 + v52 
                    let v4212 : string = v4211 + v52 
                    let v4213 : string = "vec![" + v4212 + "]"
                    let v4214 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4213 
                    let v4215 : string = "leptos::prelude::Fragment::new($0)"
                    let v4216 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4214 v4215 
                    let v4217 : string = "leptos::prelude::AnyView::from($0)"
                    let v4218 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4216 v4217 
                    let v4219 : string = "<" + v3817 + " " + v4122 + ">move || { v4218 }</" + v3817 + ">"
                    let v4220 : string = "leptos::prelude::view! { " + v4219 + " }"
                    let v4221 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4220 
                    let v4222 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4221 |> unbox
                    let v4223 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4224 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4222 v4223 
                    let v4225 : string = "class=\"shrink-0 transition duration-300 pt-[2px]\""
                    let v4226 : string = " " + v4225 + v52 + ""
                    let v4227 : string = "$0"
                    let v4228 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v3944 v4227 
                    let v4229 : string = "xmlns=\"http://www.w3.org/2000/svg\""
                    let v4230 : string = "viewBox=\"0 0 20 20\""
                    let v4231 : string = "fill=\"currentColor\""
                    let v4232 : string = "class=move || \" \".to_owned() + &v4228(())"
                    let v4233 : string = " " + v4229 + v52 + ""
                    let v4234 : string = " " + v4230 + v4233 + ""
                    let v4235 : string = " " + v4231 + v4234 + ""
                    let v4236 : string = " " + v4232 + v4235 + ""
                    let v4237 : string = "fill-rule=\"evenodd\""
                    let v4238 : string = "d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\""
                    let v4239 : string = "clip-rule=\"evenodd\""
                    let v4240 : string = " " + v4237 + v52 + ""
                    let v4241 : string = " " + v4238 + v4240 + ""
                    let v4242 : string = " " + v4239 + v4241 + ""
                    let v4243 : string = "vec![" + v52 + "]"
                    let v4244 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4243 
                    let v4245 : string = "leptos::prelude::Fragment::new($0)"
                    let v4246 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4244 v4245 
                    let v4247 : string = "leptos::prelude::AnyView::from($0)"
                    let v4248 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4246 v4247 
                    let v4249 : string = "<" + v3724 + " " + v4242 + ">move || { v4248 }</" + v3724 + ">"
                    let v4250 : string = "leptos::prelude::view! { " + v4249 + " }"
                    let v4251 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4250 
                    let v4252 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v4251 |> unbox
                    let v4253 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4254 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4252 v4253 
                    let v4255 : string = "v4254"
                    let v4256 : string = v4255 + v52 
                    let v4257 : string = v4256 + v52 
                    let v4258 : string = "vec![" + v4257 + "]"
                    let v4259 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4258 
                    let v4260 : string = "leptos::prelude::Fragment::new($0)"
                    let v4261 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4259 v4260 
                    let v4262 : string = "leptos::prelude::AnyView::from($0)"
                    let v4263 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4261 v4262 
                    let v4264 : string = "<" + v3762 + " " + v4236 + ">move || { v4263 }</" + v3762 + ">"
                    let v4265 : string = "leptos::prelude::view! { " + v4264 + " }"
                    let v4266 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4265 
                    let v4267 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v4266 |> unbox
                    let v4268 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4269 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4267 v4268 
                    let v4270 : string = "v4269"
                    let v4271 : string = v4270 + v52 
                    let v4272 : string = v4271 + v52 
                    let v4273 : string = "vec![" + v4272 + "]"
                    let v4274 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4273 
                    let v4275 : string = "leptos::prelude::Fragment::new($0)"
                    let v4276 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4274 v4275 
                    let v4277 : string = "leptos::prelude::AnyView::from($0)"
                    let v4278 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4276 v4277 
                    let v4279 : string = "<" + v3919 + " " + v4226 + ">move || { v4278 }</" + v3919 + ">"
                    let v4280 : string = "leptos::prelude::view! { " + v4279 + " }"
                    let v4281 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4280 
                    let v4282 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Span>> = v4281 |> unbox
                    let v4283 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4284 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4282 v4283 
                    let v4285 : string = "v4284"
                    let v4286 : string = v4285 + v52 
                    let v4287 : string = v4286 + v52 
                    let v4288 : string = "v4224"
                    let v4289 : string = v4288 + v3753 
                    let v4290 : string = v4289 + v4287 
                    let v4291 : string = "vec![" + v4290 + "]"
                    let v4292 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4291 
                    let v4293 : string = "leptos::prelude::Fragment::new($0)"
                    let v4294 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4292 v4293 
                    let v4295 : string = "leptos::prelude::AnyView::from($0)"
                    let v4296 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4294 v4295 
                    let v4297 : string = "<" + v4014 + " " + v4120 + ">move || { v4296 }</" + v4014 + ">"
                    let v4298 : string = "leptos::prelude::view! { " + v4297 + " }"
                    let v4299 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4298 
                    let v4300 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Summary>> = v4299 |> unbox
                    let v4301 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4302 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4300 v4301 
                    let v4303 : string = "class=\"flex flex-1 flex-col\""
                    let v4304 : string = " " + v4303 + v52 + ""
                    let v4305 : string = "Func0::new(move || $0())"
                    let v4306 : (unit -> leptos_dom_Fragment) = closure340(v3674)
                    let v4307 : Func0<leptos_dom_Fragment> = Fable.Core.RustInterop.emitRustExpr v4306 v4305 
                    let v4308 : Func0<leptos_dom_Fragment> = method195(v4307)
                    let v4309 : string = "(move || v4308())()"
                    let v4310 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr () v4309 
                    let v4311 : string = "leptos::prelude::AnyView::from($0)"
                    let v4312 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4310 v4311 
                    let v4313 : string = "<" + v3817 + " " + v4304 + ">move || { v4312 }</" + v3817 + ">"
                    let v4314 : string = "leptos::prelude::view! { " + v4313 + " }"
                    let v4315 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4314 
                    let v4316 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4315 |> unbox
                    let v4317 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4318 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4316 v4317 
                    let v4319 : string = "v4318"
                    let v4320 : string = v4319 + v52 
                    let v4321 : string = v4320 + v52 
                    let v4322 : string = "v4302"
                    let v4323 : string = v4322 + v3753 
                    let v4324 : string = v4323 + v4321 
                    let v4325 : string = "vec![" + v4324 + "]"
                    let v4326 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4325 
                    let v4327 : string = "leptos::prelude::Fragment::new($0)"
                    let v4328 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4326 v4327 
                    let v4329 : string = "leptos::prelude::AnyView::from($0)"
                    let v4330 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4328 v4329 
                    let v4331 : string = "<" + v4049 + " " + v4112 + ">move || { v4330 }</" + v4049 + ">"
                    let v4332 : string = "leptos::prelude::view! { " + v4331 + " }"
                    let v4333 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4332 
                    let v4334 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Details>> = v4333 |> unbox
                    let v4335 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4336 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4334 v4335 
                    let v4337 : string = "v4336"
                    let v4338 : string = v4337 + v52 
                    let v4339 : string = v4338 + v52 
                    let v4340 : string = "v4108"
                    let v4341 : string = v4340 + v3753 
                    let v4342 : string = v4341 + v4339 
                    let v4343 : string = "vec![" + v4342 + "]"
                    let v4344 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4343 
                    let v4345 : string = "leptos::prelude::Fragment::new($0)"
                    let v4346 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4344 v4345 
                    let v4347 : string = "leptos::prelude::AnyView::from($0)"
                    let v4348 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4346 v4347 
                    let v4349 : string = "<" + v3817 + " " + v4087 + ">move || { v4348 }</" + v3817 + ">"
                    let v4350 : string = "leptos::prelude::view! { " + v4349 + " }"
                    let v4351 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v4350 
                    let v4352 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v4351 |> unbox
                    let v4353 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4354 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4352 v4353 
                    v4354
                else
                    let v4355 : string = "vec![" + v52 + "]"
                    let v4356 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4355 
                    let v4357 : string = "leptos::prelude::IntoAny::into_any($0)"
                    let v4358 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v4356 v4357 
                    v4358
            let v4360 : string = "v4359"
            let v4361 : string = v4360 + v52 
            let v4362 : string = v4361 + v52 
            let v4363 : string = "v4073"
            let v4364 : string = v4363 + v3753 
            let v4365 : string = v4364 + v4362 
            let v4366 : string = "vec![" + v4365 + "]"
            let v4367 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v4366 
            let v4368 : string = "leptos::prelude::Fragment::new($0)"
            let v4369 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v4367 v4368 
            US22_0(v4369)
        | _ ->
            US22_1
    let v5374 : leptos_prelude_AnyView_ =
        match v5356 with
        | US22_1 -> (* None *)
            let v5369 : string = "vec![" + v52 + "]"
            let v5370 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5369 
            let v5371 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5372 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5370 v5371 
            v5372
        | US22_0(v5357) -> (* Some *)
            let v5358 : string = "class=\"flex flex-1 flex-col [overflow-y:auto]\""
            let v5359 : string = " " + v5358 + v52 + ""
            let v5360 : string = "leptos::prelude::AnyView::from($0)"
            let v5361 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5357 v5360 
            let v5362 : string = "div"
            let v5363 : string = "<" + v5362 + " " + v5359 + ">move || { v5361 }</" + v5362 + ">"
            let v5364 : string = "leptos::prelude::view! { " + v5363 + " }"
            let v5365 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5364 
            let v5366 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5365 |> unbox
            let v5367 : string = "leptos::prelude::IntoAny::into_any($0)"
            let v5368 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5366 v5367 
            v5368
    let v5375 : string = "v5374"
    let v5376 : string = v5375 + v52 
    let v5377 : string = v5376 + v52 
    let v5378 : string = "vec![" + v5377 + "]"
    let v5379 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5378 
    let v5380 : string = "leptos::prelude::Fragment::new($0)"
    let v5381 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5379 v5380 
    let v5382 : string = "leptos::prelude::AnyView::from($0)"
    let v5383 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5381 v5382 
    let v5384 : string = "main"
    let v5385 : string = "<" + v5384 + " " + v2056 + ">move || { v5383 }</" + v5384 + ">"
    let v5386 : string = "leptos::prelude::view! { " + v5385 + " }"
    let v5387 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5386 
    let v5388 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Main>> = v5387 |> unbox
    let v5389 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5390 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5388 v5389 
    let v5391 : string = "class=\"flex\""
    let v5392 : string = " " + v5391 + v52 + ""
    let v5393 : string = "menu_tabs.render ()"
    let v5394 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v5395 : bool = Fable.Core.RustInterop.emitRustExpr v5393 v5394 
    let v5396 : string = "leptos_router::hooks::use_location()"
    let v5397 : leptos_router_location_Location = Fable.Core.RustInterop.emitRustExpr () v5396 
    let v5398 : string = "leptos::prelude::ArcMemo::new(move |_| { $0() })"
    let v5399 : (unit -> string) = closure41(v5397)
    let v5400 : leptos_prelude_ArcMemo<string> = Fable.Core.RustInterop.emitRustExpr v5399 v5398 
    let v5401 : string = "class=\"hidden\""
    let v5402 : string = " " + v5401 + v52 + ""
    let v5403 : string = "for=\"Tab\""
    let v5404 : string = "class=\"sr-only\""
    let v5405 : string = " " + v5403 + v52 + ""
    let v5406 : string = " " + v5404 + v5405 + ""
    let v5407 : string = "Tab"
    (* run_target_args'
    let v5412 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5413 : string = "&*$0"
    let v5414 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5407 v5413 
    let _run_target_args'_v5412 = v5414 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5415 : string = "&*$0"
    let v5416 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5407 v5415 
    let _run_target_args'_v5412 = v5416 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5417 : string = "&*$0"
    let v5418 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5407 v5417 
    let _run_target_args'_v5412 = v5418 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5420 : Ref<Str> = v5407 |> unbox<Ref<Str>>
    let _run_target_args'_v5412 = v5420 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5424 : Ref<Str> = v5407 |> unbox<Ref<Str>>
    let _run_target_args'_v5412 = v5424 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5428 : Ref<Str> = v5407 |> unbox<Ref<Str>>
    let _run_target_args'_v5412 = v5428 
    #endif
#else
    let v5432 : Ref<Str> = v5407 |> unbox<Ref<Str>>
    let _run_target_args'_v5412 = v5432 
    #endif
    let v5435 : Ref<Str> = _run_target_args'_v5412 
    (* run_target_args'
    let v5445 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5446 : string = "String::from($0)"
    let v5447 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5435 v5446 
    let _run_target_args'_v5445 = v5447 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5448 : string = "String::from($0)"
    let v5449 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5435 v5448 
    let _run_target_args'_v5445 = v5449 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5450 : string = "String::from($0)"
    let v5451 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5435 v5450 
    let _run_target_args'_v5445 = v5451 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5453 : std_string_String = v5435 |> unbox<std_string_String>
    let _run_target_args'_v5445 = v5453 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5457 : std_string_String = v5435 |> unbox<std_string_String>
    let _run_target_args'_v5445 = v5457 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5461 : std_string_String = v5435 |> unbox<std_string_String>
    let _run_target_args'_v5445 = v5461 
    #endif
#else
    let v5465 : std_string_String = v5435 |> unbox<std_string_String>
    let _run_target_args'_v5445 = v5465 
    #endif
    let v5468 : std_string_String = _run_target_args'_v5445 
    let v5474 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v5475 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5468 v5474 
    let v5476 : string = "v5475"
    let v5477 : string = v5476 + v52 
    let v5478 : string = v5477 + v52 
    let v5479 : string = "vec![" + v5478 + "]"
    let v5480 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5479 
    let v5481 : string = "leptos::prelude::Fragment::new($0)"
    let v5482 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5480 v5481 
    let v5483 : string = "leptos::prelude::AnyView::from($0)"
    let v5484 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5482 v5483 
    let v5485 : string = "label"
    let v5486 : string = "<" + v5485 + " " + v5406 + ">move || { v5484 }</" + v5485 + ">"
    let v5487 : string = "leptos::prelude::view! { " + v5486 + " }"
    let v5488 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5487 
    let v5489 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Label>> = v5488 |> unbox
    let v5490 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5491 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5489 v5490 
    let v5492 : string = "id=\"Tab\""
    let v5493 : string = "class=\"w-full rounded-md border-gray-200\""
    let v5494 : string = " " + v5492 + v52 + ""
    let v5495 : string = " " + v5493 + v5494 + ""
    let v5496 : (unit -> bool) = method285(v1696)
    let v5497 : string = "selected=v5496()"
    let v5498 : string = " " + v5497 + v52 + ""
    let v5499 : string = "Settings"
    (* run_target_args'
    let v5504 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5505 : string = "&*$0"
    let v5506 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5499 v5505 
    let _run_target_args'_v5504 = v5506 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5507 : string = "&*$0"
    let v5508 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5499 v5507 
    let _run_target_args'_v5504 = v5508 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5509 : string = "&*$0"
    let v5510 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5499 v5509 
    let _run_target_args'_v5504 = v5510 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5512 : Ref<Str> = v5499 |> unbox<Ref<Str>>
    let _run_target_args'_v5504 = v5512 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5516 : Ref<Str> = v5499 |> unbox<Ref<Str>>
    let _run_target_args'_v5504 = v5516 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5520 : Ref<Str> = v5499 |> unbox<Ref<Str>>
    let _run_target_args'_v5504 = v5520 
    #endif
#else
    let v5524 : Ref<Str> = v5499 |> unbox<Ref<Str>>
    let _run_target_args'_v5504 = v5524 
    #endif
    let v5527 : Ref<Str> = _run_target_args'_v5504 
    (* run_target_args'
    let v5537 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5538 : string = "String::from($0)"
    let v5539 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5527 v5538 
    let _run_target_args'_v5537 = v5539 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5540 : string = "String::from($0)"
    let v5541 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5527 v5540 
    let _run_target_args'_v5537 = v5541 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5542 : string = "String::from($0)"
    let v5543 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5527 v5542 
    let _run_target_args'_v5537 = v5543 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5545 : std_string_String = v5527 |> unbox<std_string_String>
    let _run_target_args'_v5537 = v5545 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5549 : std_string_String = v5527 |> unbox<std_string_String>
    let _run_target_args'_v5537 = v5549 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5553 : std_string_String = v5527 |> unbox<std_string_String>
    let _run_target_args'_v5537 = v5553 
    #endif
#else
    let v5557 : std_string_String = v5527 |> unbox<std_string_String>
    let _run_target_args'_v5537 = v5557 
    #endif
    let v5560 : std_string_String = _run_target_args'_v5537 
    let v5566 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v5567 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5560 v5566 
    let v5568 : string = "v5567"
    let v5569 : string = v5568 + v52 
    let v5570 : string = v5569 + v52 
    let v5571 : string = "vec![" + v5570 + "]"
    let v5572 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5571 
    let v5573 : string = "leptos::prelude::Fragment::new($0)"
    let v5574 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5572 v5573 
    let v5575 : string = "leptos::prelude::AnyView::from($0)"
    let v5576 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5574 v5575 
    let v5577 : string = "option"
    let v5578 : string = "<" + v5577 + " " + v5498 + ">move || { v5576 }</" + v5577 + ">"
    let v5579 : string = "leptos::prelude::view! { " + v5578 + " }"
    let v5580 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5579 
    let v5581 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Option>> = v5580 |> unbox
    let v5582 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5583 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5581 v5582 
    let v5584 : (unit -> bool) = method286(v1696)
    let v5585 : string = "selected=v5584()"
    let v5586 : string = " " + v5585 + v52 + ""
    let v5587 : string = "Transactions"
    (* run_target_args'
    let v5592 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5593 : string = "&*$0"
    let v5594 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5587 v5593 
    let _run_target_args'_v5592 = v5594 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5595 : string = "&*$0"
    let v5596 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5587 v5595 
    let _run_target_args'_v5592 = v5596 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5597 : string = "&*$0"
    let v5598 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5587 v5597 
    let _run_target_args'_v5592 = v5598 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5600 : Ref<Str> = v5587 |> unbox<Ref<Str>>
    let _run_target_args'_v5592 = v5600 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5604 : Ref<Str> = v5587 |> unbox<Ref<Str>>
    let _run_target_args'_v5592 = v5604 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5608 : Ref<Str> = v5587 |> unbox<Ref<Str>>
    let _run_target_args'_v5592 = v5608 
    #endif
#else
    let v5612 : Ref<Str> = v5587 |> unbox<Ref<Str>>
    let _run_target_args'_v5592 = v5612 
    #endif
    let v5615 : Ref<Str> = _run_target_args'_v5592 
    (* run_target_args'
    let v5625 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5626 : string = "String::from($0)"
    let v5627 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5615 v5626 
    let _run_target_args'_v5625 = v5627 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5628 : string = "String::from($0)"
    let v5629 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5615 v5628 
    let _run_target_args'_v5625 = v5629 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5630 : string = "String::from($0)"
    let v5631 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5615 v5630 
    let _run_target_args'_v5625 = v5631 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5633 : std_string_String = v5615 |> unbox<std_string_String>
    let _run_target_args'_v5625 = v5633 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5637 : std_string_String = v5615 |> unbox<std_string_String>
    let _run_target_args'_v5625 = v5637 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5641 : std_string_String = v5615 |> unbox<std_string_String>
    let _run_target_args'_v5625 = v5641 
    #endif
#else
    let v5645 : std_string_String = v5615 |> unbox<std_string_String>
    let _run_target_args'_v5625 = v5645 
    #endif
    let v5648 : std_string_String = _run_target_args'_v5625 
    let v5654 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v5655 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5648 v5654 
    let v5656 : string = "v5655"
    let v5657 : string = v5656 + v52 
    let v5658 : string = v5657 + v52 
    let v5659 : string = "vec![" + v5658 + "]"
    let v5660 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5659 
    let v5661 : string = "leptos::prelude::Fragment::new($0)"
    let v5662 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5660 v5661 
    let v5663 : string = "leptos::prelude::AnyView::from($0)"
    let v5664 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5662 v5663 
    let v5665 : string = "<" + v5577 + " " + v5586 + ">move || { v5664 }</" + v5577 + ">"
    let v5666 : string = "leptos::prelude::view! { " + v5665 + " }"
    let v5667 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5666 
    let v5668 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Option>> = v5667 |> unbox
    let v5669 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5670 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5668 v5669 
    let v5671 : (unit -> bool) = method287(v1696)
    let v5672 : string = "selected=v5671()"
    let v5673 : string = " " + v5672 + v52 + ""
    let v5674 : string = "Lists"
    (* run_target_args'
    let v5679 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5680 : string = "&*$0"
    let v5681 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5674 v5680 
    let _run_target_args'_v5679 = v5681 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5682 : string = "&*$0"
    let v5683 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5674 v5682 
    let _run_target_args'_v5679 = v5683 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5684 : string = "&*$0"
    let v5685 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5674 v5684 
    let _run_target_args'_v5679 = v5685 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5687 : Ref<Str> = v5674 |> unbox<Ref<Str>>
    let _run_target_args'_v5679 = v5687 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5691 : Ref<Str> = v5674 |> unbox<Ref<Str>>
    let _run_target_args'_v5679 = v5691 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5695 : Ref<Str> = v5674 |> unbox<Ref<Str>>
    let _run_target_args'_v5679 = v5695 
    #endif
#else
    let v5699 : Ref<Str> = v5674 |> unbox<Ref<Str>>
    let _run_target_args'_v5679 = v5699 
    #endif
    let v5702 : Ref<Str> = _run_target_args'_v5679 
    (* run_target_args'
    let v5712 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5713 : string = "String::from($0)"
    let v5714 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5702 v5713 
    let _run_target_args'_v5712 = v5714 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5715 : string = "String::from($0)"
    let v5716 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5702 v5715 
    let _run_target_args'_v5712 = v5716 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5717 : string = "String::from($0)"
    let v5718 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5702 v5717 
    let _run_target_args'_v5712 = v5718 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5720 : std_string_String = v5702 |> unbox<std_string_String>
    let _run_target_args'_v5712 = v5720 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5724 : std_string_String = v5702 |> unbox<std_string_String>
    let _run_target_args'_v5712 = v5724 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5728 : std_string_String = v5702 |> unbox<std_string_String>
    let _run_target_args'_v5712 = v5728 
    #endif
#else
    let v5732 : std_string_String = v5702 |> unbox<std_string_String>
    let _run_target_args'_v5712 = v5732 
    #endif
    let v5735 : std_string_String = _run_target_args'_v5712 
    let v5741 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v5742 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5735 v5741 
    let v5743 : string = "v5742"
    let v5744 : string = v5743 + v52 
    let v5745 : string = v5744 + v52 
    let v5746 : string = "vec![" + v5745 + "]"
    let v5747 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5746 
    let v5748 : string = "leptos::prelude::Fragment::new($0)"
    let v5749 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5747 v5748 
    let v5750 : string = "leptos::prelude::AnyView::from($0)"
    let v5751 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5749 v5750 
    let v5752 : string = "<" + v5577 + " " + v5673 + ">move || { v5751 }</" + v5577 + ">"
    let v5753 : string = "leptos::prelude::view! { " + v5752 + " }"
    let v5754 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5753 
    let v5755 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Option>> = v5754 |> unbox
    let v5756 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5757 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5755 v5756 
    let v5758 : (unit -> bool) = method288(v1696)
    let v5759 : string = "selected=v5758()"
    let v5760 : string = " " + v5759 + v52 + ""
    let v5761 : string = "Dice"
    (* run_target_args'
    let v5766 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5767 : string = "&*$0"
    let v5768 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5761 v5767 
    let _run_target_args'_v5766 = v5768 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5769 : string = "&*$0"
    let v5770 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5761 v5769 
    let _run_target_args'_v5766 = v5770 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5771 : string = "&*$0"
    let v5772 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5761 v5771 
    let _run_target_args'_v5766 = v5772 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5774 : Ref<Str> = v5761 |> unbox<Ref<Str>>
    let _run_target_args'_v5766 = v5774 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5778 : Ref<Str> = v5761 |> unbox<Ref<Str>>
    let _run_target_args'_v5766 = v5778 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5782 : Ref<Str> = v5761 |> unbox<Ref<Str>>
    let _run_target_args'_v5766 = v5782 
    #endif
#else
    let v5786 : Ref<Str> = v5761 |> unbox<Ref<Str>>
    let _run_target_args'_v5766 = v5786 
    #endif
    let v5789 : Ref<Str> = _run_target_args'_v5766 
    (* run_target_args'
    let v5799 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5800 : string = "String::from($0)"
    let v5801 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5789 v5800 
    let _run_target_args'_v5799 = v5801 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5802 : string = "String::from($0)"
    let v5803 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5789 v5802 
    let _run_target_args'_v5799 = v5803 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5804 : string = "String::from($0)"
    let v5805 : std_string_String = Fable.Core.RustInterop.emitRustExpr v5789 v5804 
    let _run_target_args'_v5799 = v5805 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v5807 : std_string_String = v5789 |> unbox<std_string_String>
    let _run_target_args'_v5799 = v5807 
    #endif
#if FABLE_COMPILER_PYTHON
    let v5811 : std_string_String = v5789 |> unbox<std_string_String>
    let _run_target_args'_v5799 = v5811 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v5815 : std_string_String = v5789 |> unbox<std_string_String>
    let _run_target_args'_v5799 = v5815 
    #endif
#else
    let v5819 : std_string_String = v5789 |> unbox<std_string_String>
    let _run_target_args'_v5799 = v5819 
    #endif
    let v5822 : std_string_String = _run_target_args'_v5799 
    let v5828 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v5829 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5822 v5828 
    let v5830 : string = "v5829"
    let v5831 : string = v5830 + v52 
    let v5832 : string = v5831 + v52 
    let v5833 : string = "vec![" + v5832 + "]"
    let v5834 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5833 
    let v5835 : string = "leptos::prelude::Fragment::new($0)"
    let v5836 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5834 v5835 
    let v5837 : string = "leptos::prelude::AnyView::from($0)"
    let v5838 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5836 v5837 
    let v5839 : string = "<" + v5577 + " " + v5760 + ">move || { v5838 }</" + v5577 + ">"
    let v5840 : string = "leptos::prelude::view! { " + v5839 + " }"
    let v5841 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5840 
    let v5842 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Option>> = v5841 |> unbox
    let v5843 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5844 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5842 v5843 
    let v5845 : string = "v5583"
    let v5846 : string = v5845 + v52 
    let v5847 : string = v5846 + v52 
    let v5848 : string = "v5670"
    let v5849 : string = ", "
    let v5850 : string = v5848 + v5849 
    let v5851 : string = v5850 + v5847 
    let v5852 : string = "v5757"
    let v5853 : string = v5852 + v5849 
    let v5854 : string = v5853 + v5851 
    let v5855 : string = "v5844"
    let v5856 : string = v5855 + v5849 
    let v5857 : string = v5856 + v5854 
    let v5858 : string = "vec![" + v5857 + "]"
    let v5859 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5858 
    let v5860 : string = "leptos::prelude::Fragment::new($0)"
    let v5861 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5859 v5860 
    let v5862 : string = "leptos::prelude::AnyView::from($0)"
    let v5863 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5861 v5862 
    let v5864 : string = "select"
    let v5865 : string = "<" + v5864 + " " + v5495 + ">move || { v5863 }</" + v5864 + ">"
    let v5866 : string = "leptos::prelude::view! { " + v5865 + " }"
    let v5867 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5866 
    let v5868 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Select>> = v5867 |> unbox
    let v5869 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5870 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5868 v5869 
    let v5871 : string = "v5870"
    let v5872 : string = v5871 + v52 
    let v5873 : string = v5872 + v52 
    let v5874 : string = "v5491"
    let v5875 : string = v5874 + v5849 
    let v5876 : string = v5875 + v5873 
    let v5877 : string = "vec![" + v5876 + "]"
    let v5878 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5877 
    let v5879 : string = "leptos::prelude::Fragment::new($0)"
    let v5880 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5878 v5879 
    let v5881 : string = "leptos::prelude::AnyView::from($0)"
    let v5882 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5880 v5881 
    let v5883 : string = "div"
    let v5884 : string = "<" + v5883 + " " + v5402 + ">move || { v5882 }</" + v5883 + ">"
    let v5885 : string = "leptos::prelude::view! { " + v5884 + " }"
    let v5886 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5885 
    let v5887 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v5886 |> unbox
    let v5888 : string = "class=\"flex flex-1 [overflow-x:auto] [overflow-y:hidden]\""
    let v5889 : string = " " + v5888 + v52 + ""
    let v5890 : string = "class=\"flex flex-1 border-t border-gray-200\""
    let v5891 : string = " " + v5890 + v52 + ""
    let v5892 : string = "class=\"-mb-px flex [flex-flow:wrap] [flex-grow:1] [flex-shrink:0] gap-[3px] [overflow-wrap:anywhere]\""
    let v5893 : string = "aria-label=\"Tabs\""
    let v5894 : string = " " + v5892 + v52 + ""
    let v5895 : string = " " + v5893 + v5894 + ""
    let v5896 : string = "$0"
    let v5897 : (unit -> string) = closure348()
    let v5898 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v5897 v5896 
    let v5899 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v5900 : string = "fill=\"none\""
    let v5901 : string = "viewBox=\"0 0 24 24\""
    let v5902 : string = "stroke-width=\"1.5\""
    let v5903 : string = "stroke=\"currentColor\""
    let v5904 : string = "class=move || \" \".to_owned() + &v5898(())"
    let v5905 : string = " " + v5899 + v52 + ""
    let v5906 : string = " " + v5900 + v5905 + ""
    let v5907 : string = " " + v5901 + v5906 + ""
    let v5908 : string = " " + v5902 + v5907 + ""
    let v5909 : string = " " + v5903 + v5908 + ""
    let v5910 : string = " " + v5904 + v5909 + ""
    let v5911 : string = "stroke-linecap=\"round\""
    let v5912 : string = "stroke-linejoin=\"round\""
    let v5913 : string = "d=\"M10.343 3.94c.09-.542.56-.94 1.11-.94h1.093c.55 0 1.02.398 1.11.94l.149.894c.07.424.384.764.78.93.398.164.855.142 1.205-.108l.737-.527a1.125 1.125 0 011.45.12l.773.774c.39.389.44 1.002.12 1.45l-.527.737c-.25.35-.272.806-.107 1.204.165.397.505.71.93.78l.893.15c.543.09.94.56.94 1.109v1.094c0 .55-.397 1.02-.94 1.11l-.893.149c-.425.07-.765.383-.93.78-.165.398-.143.854.107 1.204l.527.738c.32.447.269 1.06-.12 1.45l-.774.773a1.125 1.125 0 01-1.449.12l-.738-.527c-.35-.25-.806-.272-1.203-.107-.397.165-.71.505-.781.929l-.149.894c-.09.542-.56.94-1.11.94h-1.094c-.55 0-1.019-.398-1.11-.94l-.148-.894c-.071-.424-.384-.764-.781-.93-.398-.164-.854-.142-1.204.108l-.738.527c-.447.32-1.06.269-1.45-.12l-.773-.774a1.125 1.125 0 01-.12-1.45l.527-.737c.25-.35.273-.806.108-1.204-.165-.397-.505-.71-.93-.78l-.894-.15c-.542-.09-.94-.56-.94-1.109v-1.094c0-.55.398-1.02.94-1.11l.894-.149c.424-.07.765-.383.93-.78.165-.398.143-.854-.107-1.204l-.527-.738a1.125 1.125 0 01.12-1.45l.773-.773a1.125 1.125 0 011.45-.12l.737.527c.35.25.807.272 1.204.107.397-.165.71-.505.78-.929l.15-.894z\""
    let v5914 : string = " " + v5911 + v52 + ""
    let v5915 : string = " " + v5912 + v5914 + ""
    let v5916 : string = " " + v5913 + v5915 + ""
    let v5917 : string = "vec![" + v52 + "]"
    let v5918 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5917 
    let v5919 : string = "leptos::prelude::Fragment::new($0)"
    let v5920 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5918 v5919 
    let v5921 : string = "leptos::prelude::AnyView::from($0)"
    let v5922 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5920 v5921 
    let v5923 : string = "path"
    let v5924 : string = "<" + v5923 + " " + v5916 + ">move || { v5922 }</" + v5923 + ">"
    let v5925 : string = "leptos::prelude::view! { " + v5924 + " }"
    let v5926 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5925 
    let v5927 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v5926 |> unbox
    let v5928 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5929 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5927 v5928 
    let v5930 : string = "stroke-linecap=\"round\""
    let v5931 : string = "stroke-linejoin=\"round\""
    let v5932 : string = "d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\""
    let v5933 : string = " " + v5930 + v52 + ""
    let v5934 : string = " " + v5931 + v5933 + ""
    let v5935 : string = " " + v5932 + v5934 + ""
    let v5936 : string = "vec![" + v52 + "]"
    let v5937 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5936 
    let v5938 : string = "leptos::prelude::Fragment::new($0)"
    let v5939 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5937 v5938 
    let v5940 : string = "leptos::prelude::AnyView::from($0)"
    let v5941 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5939 v5940 
    let v5942 : string = "<" + v5923 + " " + v5935 + ">move || { v5941 }</" + v5923 + ">"
    let v5943 : string = "leptos::prelude::view! { " + v5942 + " }"
    let v5944 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5943 
    let v5945 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v5944 |> unbox
    let v5946 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5947 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5945 v5946 
    let v5948 : string = "v5947"
    let v5949 : string = v5948 + v52 
    let v5950 : string = v5949 + v52 
    let v5951 : string = "v5929"
    let v5952 : string = v5951 + v5849 
    let v5953 : string = v5952 + v5950 
    let v5954 : string = "vec![" + v5953 + "]"
    let v5955 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5954 
    let v5956 : string = "leptos::prelude::Fragment::new($0)"
    let v5957 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5955 v5956 
    let v5958 : string = "leptos::prelude::AnyView::from($0)"
    let v5959 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5957 v5958 
    let v5960 : string = "svg"
    let v5961 : string = "<" + v5960 + " " + v5910 + ">move || { v5959 }</" + v5960 + ">"
    let v5962 : string = "leptos::prelude::view! { " + v5961 + " }"
    let v5963 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v5962 
    let v5964 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v5963 |> unbox
    let v5965 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v5966 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5964 v5965 
    let v5967 : string = "v5966"
    let v5968 : string = v5967 + v52 
    let v5969 : string = v5968 + v52 
    let v5970 : string = "vec![" + v5969 + "]"
    let v5971 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v5970 
    let v5972 : string = "leptos::prelude::Fragment::new($0)"
    let v5973 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v5971 v5972 
    let v5974 : (unit -> std_string_String) = closure349(v5400)
    let v5975 : string = "let v5974 = $0"
    Fable.Core.RustInterop.emitRustExpr v5974 v5975 
    let v5976 : string = "$0"
    let v5977 : (unit -> bool) = closure350(v1696)
    let v5978 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v5977 v5976 
    let v5979 : string = "$0"
    let v5980 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure351(v1696)
    let v5981 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v5980 v5979 
    let v5982 : string = "href=move || v5974()"
    let v5983 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] flex-1 gap-2 border-t-2 [white-space:nowrap] mb-[11px] pt-[8px] pr-[15px] pl-[15px] text-sm font-medium \".to_owned() + v5981(())"
    let v5984 : string = "aria-current=move || if v5978(()) { \"page\" } else { \"\" }"
    let v5985 : string = " " + v5982 + v52 + ""
    let v5986 : string = " " + v5983 + v5985 + ""
    let v5987 : string = " " + v5984 + v5986 + ""
    let v5988 : string = "leptos::prelude::AnyView::from($0)"
    let v5989 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5973 v5988 
    (* run_target_args'
    let v5994 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v5995 : string = "&*$0"
    let v5996 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5499 v5995 
    let _run_target_args'_v5994 = v5996 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v5997 : string = "&*$0"
    let v5998 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5499 v5997 
    let _run_target_args'_v5994 = v5998 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v5999 : string = "&*$0"
    let v6000 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5499 v5999 
    let _run_target_args'_v5994 = v6000 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6002 : Ref<Str> = v5499 |> unbox<Ref<Str>>
    let _run_target_args'_v5994 = v6002 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6006 : Ref<Str> = v5499 |> unbox<Ref<Str>>
    let _run_target_args'_v5994 = v6006 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6010 : Ref<Str> = v5499 |> unbox<Ref<Str>>
    let _run_target_args'_v5994 = v6010 
    #endif
#else
    let v6014 : Ref<Str> = v5499 |> unbox<Ref<Str>>
    let _run_target_args'_v5994 = v6014 
    #endif
    let v6017 : Ref<Str> = _run_target_args'_v5994 
    (* run_target_args'
    let v6027 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6028 : string = "String::from($0)"
    let v6029 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6017 v6028 
    let _run_target_args'_v6027 = v6029 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6030 : string = "String::from($0)"
    let v6031 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6017 v6030 
    let _run_target_args'_v6027 = v6031 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6032 : string = "String::from($0)"
    let v6033 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6017 v6032 
    let _run_target_args'_v6027 = v6033 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6035 : std_string_String = v6017 |> unbox<std_string_String>
    let _run_target_args'_v6027 = v6035 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6039 : std_string_String = v6017 |> unbox<std_string_String>
    let _run_target_args'_v6027 = v6039 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6043 : std_string_String = v6017 |> unbox<std_string_String>
    let _run_target_args'_v6027 = v6043 
    #endif
#else
    let v6047 : std_string_String = v6017 |> unbox<std_string_String>
    let _run_target_args'_v6027 = v6047 
    #endif
    let v6050 : std_string_String = _run_target_args'_v6027 
    let v6056 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v6057 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6050 v6056 
    let v6058 : string = "v6057"
    let v6059 : string = v6058 + v52 
    let v6060 : string = v6059 + v52 
    let v6061 : string = "v5989"
    let v6062 : string = v6061 + v5849 
    let v6063 : string = v6062 + v6060 
    let v6064 : string = "vec![" + v6063 + "]"
    let v6065 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6064 
    let v6066 : string = "leptos::prelude::Fragment::new($0)"
    let v6067 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6065 v6066 
    let v6068 : string = "leptos::prelude::AnyView::from($0)"
    let v6069 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6067 v6068 
    let v6070 : string = "a"
    let v6071 : string = "<" + v6070 + " " + v5987 + ">move || { v6069 }</" + v6070 + ">"
    let v6072 : string = "leptos::prelude::view! { " + v6071 + " }"
    let v6073 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6072 
    let v6074 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_A>> = v6073 |> unbox
    let v6075 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6076 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6074 v6075 
    let v6077 : string = "$0"
    let v6078 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v5897 v6077 
    let v6079 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v6080 : string = "fill=\"none\""
    let v6081 : string = "height=\"100%\""
    let v6082 : string = "viewBox=\"0 0 24 24\""
    let v6083 : string = "stroke-width=\"1.5\""
    let v6084 : string = "stroke=\"currentColor\""
    let v6085 : string = "class=move || \"text-gray-700 \".to_owned() + &v6078(())"
    let v6086 : string = " " + v6079 + v52 + ""
    let v6087 : string = " " + v6080 + v6086 + ""
    let v6088 : string = " " + v6081 + v6087 + ""
    let v6089 : string = " " + v6082 + v6088 + ""
    let v6090 : string = " " + v6083 + v6089 + ""
    let v6091 : string = " " + v6084 + v6090 + ""
    let v6092 : string = " " + v6085 + v6091 + ""
    let v6093 : string = "stroke-linecap=\"round\""
    let v6094 : string = "stroke-linejoin=\"round\""
    let v6095 : string = "d=\"M4 12h16m-7-7l7 7-7 7m-2-14l-7 7 7 7\""
    let v6096 : string = " " + v6093 + v52 + ""
    let v6097 : string = " " + v6094 + v6096 + ""
    let v6098 : string = " " + v6095 + v6097 + ""
    let v6099 : string = "vec![" + v52 + "]"
    let v6100 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6099 
    let v6101 : string = "leptos::prelude::Fragment::new($0)"
    let v6102 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6100 v6101 
    let v6103 : string = "leptos::prelude::AnyView::from($0)"
    let v6104 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6102 v6103 
    let v6105 : string = "<" + v5923 + " " + v6098 + ">move || { v6104 }</" + v5923 + ">"
    let v6106 : string = "leptos::prelude::view! { " + v6105 + " }"
    let v6107 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6106 
    let v6108 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v6107 |> unbox
    let v6109 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6110 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6108 v6109 
    let v6111 : string = "v6110"
    let v6112 : string = v6111 + v52 
    let v6113 : string = v6112 + v52 
    let v6114 : string = "vec![" + v6113 + "]"
    let v6115 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6114 
    let v6116 : string = "leptos::prelude::Fragment::new($0)"
    let v6117 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6115 v6116 
    let v6118 : string = "leptos::prelude::AnyView::from($0)"
    let v6119 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6117 v6118 
    let v6120 : string = "<" + v5960 + " " + v6092 + ">move || { v6119 }</" + v5960 + ">"
    let v6121 : string = "leptos::prelude::view! { " + v6120 + " }"
    let v6122 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6121 
    let v6123 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v6122 |> unbox
    let v6124 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6125 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6123 v6124 
    let v6126 : string = "v6125"
    let v6127 : string = v6126 + v52 
    let v6128 : string = v6127 + v52 
    let v6129 : string = "vec![" + v6128 + "]"
    let v6130 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6129 
    let v6131 : string = "leptos::prelude::Fragment::new($0)"
    let v6132 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6130 v6131 
    let v6133 : (unit -> std_string_String) = closure352(v5400)
    let v6134 : string = "let v6133 = $0"
    Fable.Core.RustInterop.emitRustExpr v6133 v6134 
    let v6135 : string = "$0"
    let v6136 : (unit -> bool) = closure353(v1696)
    let v6137 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v6136 v6135 
    let v6138 : string = "$0"
    let v6139 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure354(v1696)
    let v6140 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v6139 v6138 
    let v6141 : string = "href=move || v6133()"
    let v6142 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] flex-1 gap-2 border-t-2 [white-space:nowrap] mb-[11px] pt-[8px] pr-[15px] pl-[15px] text-sm font-medium \".to_owned() + v6140(())"
    let v6143 : string = "aria-current=move || if v6137(()) { \"page\" } else { \"\" }"
    let v6144 : string = " " + v6141 + v52 + ""
    let v6145 : string = " " + v6142 + v6144 + ""
    let v6146 : string = " " + v6143 + v6145 + ""
    let v6147 : string = "leptos::prelude::AnyView::from($0)"
    let v6148 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6132 v6147 
    (* run_target_args'
    let v6153 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6154 : string = "&*$0"
    let v6155 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5587 v6154 
    let _run_target_args'_v6153 = v6155 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6156 : string = "&*$0"
    let v6157 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5587 v6156 
    let _run_target_args'_v6153 = v6157 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6158 : string = "&*$0"
    let v6159 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5587 v6158 
    let _run_target_args'_v6153 = v6159 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6161 : Ref<Str> = v5587 |> unbox<Ref<Str>>
    let _run_target_args'_v6153 = v6161 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6165 : Ref<Str> = v5587 |> unbox<Ref<Str>>
    let _run_target_args'_v6153 = v6165 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6169 : Ref<Str> = v5587 |> unbox<Ref<Str>>
    let _run_target_args'_v6153 = v6169 
    #endif
#else
    let v6173 : Ref<Str> = v5587 |> unbox<Ref<Str>>
    let _run_target_args'_v6153 = v6173 
    #endif
    let v6176 : Ref<Str> = _run_target_args'_v6153 
    (* run_target_args'
    let v6186 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6187 : string = "String::from($0)"
    let v6188 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6176 v6187 
    let _run_target_args'_v6186 = v6188 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6189 : string = "String::from($0)"
    let v6190 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6176 v6189 
    let _run_target_args'_v6186 = v6190 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6191 : string = "String::from($0)"
    let v6192 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6176 v6191 
    let _run_target_args'_v6186 = v6192 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6194 : std_string_String = v6176 |> unbox<std_string_String>
    let _run_target_args'_v6186 = v6194 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6198 : std_string_String = v6176 |> unbox<std_string_String>
    let _run_target_args'_v6186 = v6198 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6202 : std_string_String = v6176 |> unbox<std_string_String>
    let _run_target_args'_v6186 = v6202 
    #endif
#else
    let v6206 : std_string_String = v6176 |> unbox<std_string_String>
    let _run_target_args'_v6186 = v6206 
    #endif
    let v6209 : std_string_String = _run_target_args'_v6186 
    let v6215 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v6216 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6209 v6215 
    let v6217 : string = "v6216"
    let v6218 : string = v6217 + v52 
    let v6219 : string = v6218 + v52 
    let v6220 : string = "v6148"
    let v6221 : string = v6220 + v5849 
    let v6222 : string = v6221 + v6219 
    let v6223 : string = "vec![" + v6222 + "]"
    let v6224 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6223 
    let v6225 : string = "leptos::prelude::Fragment::new($0)"
    let v6226 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6224 v6225 
    let v6227 : string = "leptos::prelude::AnyView::from($0)"
    let v6228 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6226 v6227 
    let v6229 : string = "<" + v6070 + " " + v6146 + ">move || { v6228 }</" + v6070 + ">"
    let v6230 : string = "leptos::prelude::view! { " + v6229 + " }"
    let v6231 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6230 
    let v6232 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_A>> = v6231 |> unbox
    let v6233 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6234 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6232 v6233 
    let v6235 : string = "$0"
    let v6236 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v5897 v6235 
    let v6237 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v6238 : string = "fill=\"none\""
    let v6239 : string = "height=\"100%\""
    let v6240 : string = "viewBox=\"0 0 24 24\""
    let v6241 : string = "stroke-width=\"1.5\""
    let v6242 : string = "stroke=\"currentColor\""
    let v6243 : string = "class=move || \"text-gray-700 \".to_owned() + &v6236(())"
    let v6244 : string = " " + v6237 + v52 + ""
    let v6245 : string = " " + v6238 + v6244 + ""
    let v6246 : string = " " + v6239 + v6245 + ""
    let v6247 : string = " " + v6240 + v6246 + ""
    let v6248 : string = " " + v6241 + v6247 + ""
    let v6249 : string = " " + v6242 + v6248 + ""
    let v6250 : string = " " + v6243 + v6249 + ""
    let v6251 : string = "stroke-linecap=\"round\""
    let v6252 : string = "stroke-linejoin=\"round\""
    let v6253 : string = "d=\"M4.75 6.75h14.5M4.75 12h14.5M4.75 17.25h14.5\""
    let v6254 : string = " " + v6251 + v52 + ""
    let v6255 : string = " " + v6252 + v6254 + ""
    let v6256 : string = " " + v6253 + v6255 + ""
    let v6257 : string = "vec![" + v52 + "]"
    let v6258 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6257 
    let v6259 : string = "leptos::prelude::Fragment::new($0)"
    let v6260 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6258 v6259 
    let v6261 : string = "leptos::prelude::AnyView::from($0)"
    let v6262 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6260 v6261 
    let v6263 : string = "<" + v5923 + " " + v6256 + ">move || { v6262 }</" + v5923 + ">"
    let v6264 : string = "leptos::prelude::view! { " + v6263 + " }"
    let v6265 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6264 
    let v6266 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Path>> = v6265 |> unbox
    let v6267 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6268 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6266 v6267 
    let v6269 : string = "cx=\"3\""
    let v6270 : string = "cy=\"6.75\""
    let v6271 : string = "r=\"1\""
    let v6272 : string = "fill=\"currentColor\""
    let v6273 : string = " " + v6269 + v52 + ""
    let v6274 : string = " " + v6270 + v6273 + ""
    let v6275 : string = " " + v6271 + v6274 + ""
    let v6276 : string = " " + v6272 + v6275 + ""
    let v6277 : string = "vec![" + v52 + "]"
    let v6278 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6277 
    let v6279 : string = "leptos::prelude::Fragment::new($0)"
    let v6280 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6278 v6279 
    let v6281 : string = "leptos::prelude::AnyView::from($0)"
    let v6282 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6280 v6281 
    let v6283 : string = "circle"
    let v6284 : string = "<" + v6283 + " " + v6276 + ">move || { v6282 }</" + v6283 + ">"
    let v6285 : string = "leptos::prelude::view! { " + v6284 + " }"
    let v6286 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6285 
    let v6287 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6286 |> unbox
    let v6288 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6289 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6287 v6288 
    let v6290 : string = "cx=\"3\""
    let v6291 : string = "cy=\"12\""
    let v6292 : string = "r=\"1\""
    let v6293 : string = "fill=\"currentColor\""
    let v6294 : string = " " + v6290 + v52 + ""
    let v6295 : string = " " + v6291 + v6294 + ""
    let v6296 : string = " " + v6292 + v6295 + ""
    let v6297 : string = " " + v6293 + v6296 + ""
    let v6298 : string = "vec![" + v52 + "]"
    let v6299 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6298 
    let v6300 : string = "leptos::prelude::Fragment::new($0)"
    let v6301 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6299 v6300 
    let v6302 : string = "leptos::prelude::AnyView::from($0)"
    let v6303 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6301 v6302 
    let v6304 : string = "<" + v6283 + " " + v6297 + ">move || { v6303 }</" + v6283 + ">"
    let v6305 : string = "leptos::prelude::view! { " + v6304 + " }"
    let v6306 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6305 
    let v6307 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6306 |> unbox
    let v6308 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6309 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6307 v6308 
    let v6310 : string = "cx=\"3\""
    let v6311 : string = "cy=\"17.25\""
    let v6312 : string = "r=\"1\""
    let v6313 : string = "fill=\"currentColor\""
    let v6314 : string = " " + v6310 + v52 + ""
    let v6315 : string = " " + v6311 + v6314 + ""
    let v6316 : string = " " + v6312 + v6315 + ""
    let v6317 : string = " " + v6313 + v6316 + ""
    let v6318 : string = "vec![" + v52 + "]"
    let v6319 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6318 
    let v6320 : string = "leptos::prelude::Fragment::new($0)"
    let v6321 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6319 v6320 
    let v6322 : string = "leptos::prelude::AnyView::from($0)"
    let v6323 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6321 v6322 
    let v6324 : string = "<" + v6283 + " " + v6317 + ">move || { v6323 }</" + v6283 + ">"
    let v6325 : string = "leptos::prelude::view! { " + v6324 + " }"
    let v6326 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6325 
    let v6327 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6326 |> unbox
    let v6328 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6329 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6327 v6328 
    let v6330 : string = "v6329"
    let v6331 : string = v6330 + v52 
    let v6332 : string = v6331 + v52 
    let v6333 : string = "v6309"
    let v6334 : string = v6333 + v5849 
    let v6335 : string = v6334 + v6332 
    let v6336 : string = "v6289"
    let v6337 : string = v6336 + v5849 
    let v6338 : string = v6337 + v6335 
    let v6339 : string = "v6268"
    let v6340 : string = v6339 + v5849 
    let v6341 : string = v6340 + v6338 
    let v6342 : string = "vec![" + v6341 + "]"
    let v6343 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6342 
    let v6344 : string = "leptos::prelude::Fragment::new($0)"
    let v6345 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6343 v6344 
    let v6346 : string = "leptos::prelude::AnyView::from($0)"
    let v6347 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6345 v6346 
    let v6348 : string = "<" + v5960 + " " + v6250 + ">move || { v6347 }</" + v5960 + ">"
    let v6349 : string = "leptos::prelude::view! { " + v6348 + " }"
    let v6350 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6349 
    let v6351 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v6350 |> unbox
    let v6352 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6353 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6351 v6352 
    let v6354 : string = "v6353"
    let v6355 : string = v6354 + v52 
    let v6356 : string = v6355 + v52 
    let v6357 : string = "vec![" + v6356 + "]"
    let v6358 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6357 
    let v6359 : string = "leptos::prelude::Fragment::new($0)"
    let v6360 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6358 v6359 
    let v6361 : (unit -> std_string_String) = closure355(v5400)
    let v6362 : string = "let v6361 = $0"
    Fable.Core.RustInterop.emitRustExpr v6361 v6362 
    let v6363 : string = "$0"
    let v6364 : (unit -> bool) = closure356(v1696)
    let v6365 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v6364 v6363 
    let v6366 : string = "$0"
    let v6367 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure357(v1696)
    let v6368 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v6367 v6366 
    let v6369 : string = "href=move || v6361()"
    let v6370 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] flex-1 gap-2 border-t-2 [white-space:nowrap] mb-[11px] pt-[8px] pr-[15px] pl-[15px] text-sm font-medium \".to_owned() + v6368(())"
    let v6371 : string = "aria-current=move || if v6365(()) { \"page\" } else { \"\" }"
    let v6372 : string = " " + v6369 + v52 + ""
    let v6373 : string = " " + v6370 + v6372 + ""
    let v6374 : string = " " + v6371 + v6373 + ""
    let v6375 : string = "leptos::prelude::AnyView::from($0)"
    let v6376 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6360 v6375 
    (* run_target_args'
    let v6381 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6382 : string = "&*$0"
    let v6383 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5674 v6382 
    let _run_target_args'_v6381 = v6383 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6384 : string = "&*$0"
    let v6385 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5674 v6384 
    let _run_target_args'_v6381 = v6385 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6386 : string = "&*$0"
    let v6387 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5674 v6386 
    let _run_target_args'_v6381 = v6387 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6389 : Ref<Str> = v5674 |> unbox<Ref<Str>>
    let _run_target_args'_v6381 = v6389 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6393 : Ref<Str> = v5674 |> unbox<Ref<Str>>
    let _run_target_args'_v6381 = v6393 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6397 : Ref<Str> = v5674 |> unbox<Ref<Str>>
    let _run_target_args'_v6381 = v6397 
    #endif
#else
    let v6401 : Ref<Str> = v5674 |> unbox<Ref<Str>>
    let _run_target_args'_v6381 = v6401 
    #endif
    let v6404 : Ref<Str> = _run_target_args'_v6381 
    (* run_target_args'
    let v6414 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6415 : string = "String::from($0)"
    let v6416 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6404 v6415 
    let _run_target_args'_v6414 = v6416 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6417 : string = "String::from($0)"
    let v6418 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6404 v6417 
    let _run_target_args'_v6414 = v6418 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6419 : string = "String::from($0)"
    let v6420 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6404 v6419 
    let _run_target_args'_v6414 = v6420 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6422 : std_string_String = v6404 |> unbox<std_string_String>
    let _run_target_args'_v6414 = v6422 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6426 : std_string_String = v6404 |> unbox<std_string_String>
    let _run_target_args'_v6414 = v6426 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6430 : std_string_String = v6404 |> unbox<std_string_String>
    let _run_target_args'_v6414 = v6430 
    #endif
#else
    let v6434 : std_string_String = v6404 |> unbox<std_string_String>
    let _run_target_args'_v6414 = v6434 
    #endif
    let v6437 : std_string_String = _run_target_args'_v6414 
    let v6443 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v6444 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6437 v6443 
    let v6445 : string = "v6444"
    let v6446 : string = v6445 + v52 
    let v6447 : string = v6446 + v52 
    let v6448 : string = "v6376"
    let v6449 : string = v6448 + v5849 
    let v6450 : string = v6449 + v6447 
    let v6451 : string = "vec![" + v6450 + "]"
    let v6452 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6451 
    let v6453 : string = "leptos::prelude::Fragment::new($0)"
    let v6454 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6452 v6453 
    let v6455 : string = "leptos::prelude::AnyView::from($0)"
    let v6456 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6454 v6455 
    let v6457 : string = "<" + v6070 + " " + v6374 + ">move || { v6456 }</" + v6070 + ">"
    let v6458 : string = "leptos::prelude::view! { " + v6457 + " }"
    let v6459 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6458 
    let v6460 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_A>> = v6459 |> unbox
    let v6461 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6462 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6460 v6461 
    let v6463 : string = "$0"
    let v6464 : (unit -> string) = Fable.Core.RustInterop.emitRustExpr v5897 v6463 
    let v6465 : string = "xmlns=\"http://www.w3.org/2000/svg\""
    let v6466 : string = "fill=\"none\""
    let v6467 : string = "viewBox=\"0 0 24 24\""
    let v6468 : string = "stroke-width=\"1.5\""
    let v6469 : string = "stroke=\"currentColor\""
    let v6470 : string = "class=move || \" \".to_owned() + &v6464(())"
    let v6471 : string = " " + v6465 + v52 + ""
    let v6472 : string = " " + v6466 + v6471 + ""
    let v6473 : string = " " + v6467 + v6472 + ""
    let v6474 : string = " " + v6468 + v6473 + ""
    let v6475 : string = " " + v6469 + v6474 + ""
    let v6476 : string = " " + v6470 + v6475 + ""
    let v6477 : string = "x=\"3\""
    let v6478 : string = "y=\"3\""
    let v6479 : string = "width=\"18\""
    let v6480 : string = "height=\"18\""
    let v6481 : string = "rx=\"2\""
    let v6482 : string = "stroke-linecap=\"round\""
    let v6483 : string = "stroke-linejoin=\"round\""
    let v6484 : string = " " + v6477 + v52 + ""
    let v6485 : string = " " + v6478 + v6484 + ""
    let v6486 : string = " " + v6479 + v6485 + ""
    let v6487 : string = " " + v6480 + v6486 + ""
    let v6488 : string = " " + v6481 + v6487 + ""
    let v6489 : string = " " + v6482 + v6488 + ""
    let v6490 : string = " " + v6483 + v6489 + ""
    let v6491 : string = "vec![" + v52 + "]"
    let v6492 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6491 
    let v6493 : string = "leptos::prelude::Fragment::new($0)"
    let v6494 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6492 v6493 
    let v6495 : string = "leptos::prelude::AnyView::from($0)"
    let v6496 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6494 v6495 
    let v6497 : string = "rect"
    let v6498 : string = "<" + v6497 + " " + v6490 + ">move || { v6496 }</" + v6497 + ">"
    let v6499 : string = "leptos::prelude::view! { " + v6498 + " }"
    let v6500 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6499 
    let v6501 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Rect>> = v6500 |> unbox
    let v6502 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6503 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6501 v6502 
    let v6504 : string = "cx=\"7.5\""
    let v6505 : string = "cy=\"7.5\""
    let v6506 : string = "r=\"1.5\""
    let v6507 : string = "fill=\"currentColor\""
    let v6508 : string = " " + v6504 + v52 + ""
    let v6509 : string = " " + v6505 + v6508 + ""
    let v6510 : string = " " + v6506 + v6509 + ""
    let v6511 : string = " " + v6507 + v6510 + ""
    let v6512 : string = "vec![" + v52 + "]"
    let v6513 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6512 
    let v6514 : string = "leptos::prelude::Fragment::new($0)"
    let v6515 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6513 v6514 
    let v6516 : string = "leptos::prelude::AnyView::from($0)"
    let v6517 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6515 v6516 
    let v6518 : string = "<" + v6283 + " " + v6511 + ">move || { v6517 }</" + v6283 + ">"
    let v6519 : string = "leptos::prelude::view! { " + v6518 + " }"
    let v6520 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6519 
    let v6521 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6520 |> unbox
    let v6522 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6523 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6521 v6522 
    let v6524 : string = "cx=\"16.5\""
    let v6525 : string = "cy=\"7.5\""
    let v6526 : string = "r=\"1.5\""
    let v6527 : string = "fill=\"currentColor\""
    let v6528 : string = " " + v6524 + v52 + ""
    let v6529 : string = " " + v6525 + v6528 + ""
    let v6530 : string = " " + v6526 + v6529 + ""
    let v6531 : string = " " + v6527 + v6530 + ""
    let v6532 : string = "vec![" + v52 + "]"
    let v6533 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6532 
    let v6534 : string = "leptos::prelude::Fragment::new($0)"
    let v6535 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6533 v6534 
    let v6536 : string = "leptos::prelude::AnyView::from($0)"
    let v6537 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6535 v6536 
    let v6538 : string = "<" + v6283 + " " + v6531 + ">move || { v6537 }</" + v6283 + ">"
    let v6539 : string = "leptos::prelude::view! { " + v6538 + " }"
    let v6540 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6539 
    let v6541 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6540 |> unbox
    let v6542 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6543 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6541 v6542 
    let v6544 : string = "cx=\"12\""
    let v6545 : string = "cy=\"12\""
    let v6546 : string = "r=\"1.5\""
    let v6547 : string = "fill=\"currentColor\""
    let v6548 : string = " " + v6544 + v52 + ""
    let v6549 : string = " " + v6545 + v6548 + ""
    let v6550 : string = " " + v6546 + v6549 + ""
    let v6551 : string = " " + v6547 + v6550 + ""
    let v6552 : string = "vec![" + v52 + "]"
    let v6553 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6552 
    let v6554 : string = "leptos::prelude::Fragment::new($0)"
    let v6555 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6553 v6554 
    let v6556 : string = "leptos::prelude::AnyView::from($0)"
    let v6557 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6555 v6556 
    let v6558 : string = "<" + v6283 + " " + v6551 + ">move || { v6557 }</" + v6283 + ">"
    let v6559 : string = "leptos::prelude::view! { " + v6558 + " }"
    let v6560 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6559 
    let v6561 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6560 |> unbox
    let v6562 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6563 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6561 v6562 
    let v6564 : string = "cx=\"7.5\""
    let v6565 : string = "cy=\"16.5\""
    let v6566 : string = "r=\"1.5\""
    let v6567 : string = "fill=\"currentColor\""
    let v6568 : string = " " + v6564 + v52 + ""
    let v6569 : string = " " + v6565 + v6568 + ""
    let v6570 : string = " " + v6566 + v6569 + ""
    let v6571 : string = " " + v6567 + v6570 + ""
    let v6572 : string = "vec![" + v52 + "]"
    let v6573 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6572 
    let v6574 : string = "leptos::prelude::Fragment::new($0)"
    let v6575 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6573 v6574 
    let v6576 : string = "leptos::prelude::AnyView::from($0)"
    let v6577 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6575 v6576 
    let v6578 : string = "<" + v6283 + " " + v6571 + ">move || { v6577 }</" + v6283 + ">"
    let v6579 : string = "leptos::prelude::view! { " + v6578 + " }"
    let v6580 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6579 
    let v6581 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6580 |> unbox
    let v6582 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6583 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6581 v6582 
    let v6584 : string = "cx=\"16.5\""
    let v6585 : string = "cy=\"16.5\""
    let v6586 : string = "r=\"1.5\""
    let v6587 : string = "fill=\"currentColor\""
    let v6588 : string = " " + v6584 + v52 + ""
    let v6589 : string = " " + v6585 + v6588 + ""
    let v6590 : string = " " + v6586 + v6589 + ""
    let v6591 : string = " " + v6587 + v6590 + ""
    let v6592 : string = "vec![" + v52 + "]"
    let v6593 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6592 
    let v6594 : string = "leptos::prelude::Fragment::new($0)"
    let v6595 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6593 v6594 
    let v6596 : string = "leptos::prelude::AnyView::from($0)"
    let v6597 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6595 v6596 
    let v6598 : string = "<" + v6283 + " " + v6591 + ">move || { v6597 }</" + v6283 + ">"
    let v6599 : string = "leptos::prelude::view! { " + v6598 + " }"
    let v6600 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6599 
    let v6601 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Circle>> = v6600 |> unbox
    let v6602 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6603 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6601 v6602 
    let v6604 : string = "v6603"
    let v6605 : string = v6604 + v52 
    let v6606 : string = v6605 + v52 
    let v6607 : string = "v6583"
    let v6608 : string = v6607 + v5849 
    let v6609 : string = v6608 + v6606 
    let v6610 : string = "v6563"
    let v6611 : string = v6610 + v5849 
    let v6612 : string = v6611 + v6609 
    let v6613 : string = "v6543"
    let v6614 : string = v6613 + v5849 
    let v6615 : string = v6614 + v6612 
    let v6616 : string = "v6523"
    let v6617 : string = v6616 + v5849 
    let v6618 : string = v6617 + v6615 
    let v6619 : string = "v6503"
    let v6620 : string = v6619 + v5849 
    let v6621 : string = v6620 + v6618 
    let v6622 : string = "vec![" + v6621 + "]"
    let v6623 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6622 
    let v6624 : string = "leptos::prelude::Fragment::new($0)"
    let v6625 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6623 v6624 
    let v6626 : string = "leptos::prelude::AnyView::from($0)"
    let v6627 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6625 v6626 
    let v6628 : string = "<" + v5960 + " " + v6476 + ">move || { v6627 }</" + v5960 + ">"
    let v6629 : string = "leptos::prelude::view! { " + v6628 + " }"
    let v6630 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6629 
    let v6631 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_svg_Svg>> = v6630 |> unbox
    let v6632 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6633 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6631 v6632 
    let v6634 : string = "v6633"
    let v6635 : string = v6634 + v52 
    let v6636 : string = v6635 + v52 
    let v6637 : string = "vec![" + v6636 + "]"
    let v6638 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6637 
    let v6639 : string = "leptos::prelude::Fragment::new($0)"
    let v6640 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6638 v6639 
    let v6641 : (unit -> std_string_String) = closure358(v5400)
    let v6642 : string = "let v6641 = $0"
    Fable.Core.RustInterop.emitRustExpr v6641 v6642 
    let v6643 : string = "$0"
    let v6644 : (unit -> bool) = closure359(v1696)
    let v6645 : (unit -> bool) = Fable.Core.RustInterop.emitRustExpr v6644 v6643 
    let v6646 : string = "$0"
    let v6647 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = closure360(v1696)
    let v6648 : (unit -> Ref<Lifetime<StaticLifetime, Str>>) = Fable.Core.RustInterop.emitRustExpr v6647 v6646 
    let v6649 : string = "href=move || v6641()"
    let v6650 : string = "class=move || \"inline-flex shrink-0 items-center [justify-content:center] flex-1 gap-2 border-t-2 [white-space:nowrap] mb-[11px] pt-[8px] pr-[15px] pl-[15px] text-sm font-medium \".to_owned() + v6648(())"
    let v6651 : string = "aria-current=move || if v6645(()) { \"page\" } else { \"\" }"
    let v6652 : string = " " + v6649 + v52 + ""
    let v6653 : string = " " + v6650 + v6652 + ""
    let v6654 : string = " " + v6651 + v6653 + ""
    let v6655 : string = "leptos::prelude::AnyView::from($0)"
    let v6656 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6640 v6655 
    (* run_target_args'
    let v6661 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6662 : string = "&*$0"
    let v6663 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5761 v6662 
    let _run_target_args'_v6661 = v6663 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6664 : string = "&*$0"
    let v6665 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5761 v6664 
    let _run_target_args'_v6661 = v6665 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6666 : string = "&*$0"
    let v6667 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v5761 v6666 
    let _run_target_args'_v6661 = v6667 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6669 : Ref<Str> = v5761 |> unbox<Ref<Str>>
    let _run_target_args'_v6661 = v6669 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6673 : Ref<Str> = v5761 |> unbox<Ref<Str>>
    let _run_target_args'_v6661 = v6673 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6677 : Ref<Str> = v5761 |> unbox<Ref<Str>>
    let _run_target_args'_v6661 = v6677 
    #endif
#else
    let v6681 : Ref<Str> = v5761 |> unbox<Ref<Str>>
    let _run_target_args'_v6661 = v6681 
    #endif
    let v6684 : Ref<Str> = _run_target_args'_v6661 
    (* run_target_args'
    let v6694 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6695 : string = "String::from($0)"
    let v6696 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6684 v6695 
    let _run_target_args'_v6694 = v6696 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6697 : string = "String::from($0)"
    let v6698 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6684 v6697 
    let _run_target_args'_v6694 = v6698 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v6699 : string = "String::from($0)"
    let v6700 : std_string_String = Fable.Core.RustInterop.emitRustExpr v6684 v6699 
    let _run_target_args'_v6694 = v6700 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v6702 : std_string_String = v6684 |> unbox<std_string_String>
    let _run_target_args'_v6694 = v6702 
    #endif
#if FABLE_COMPILER_PYTHON
    let v6706 : std_string_String = v6684 |> unbox<std_string_String>
    let _run_target_args'_v6694 = v6706 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v6710 : std_string_String = v6684 |> unbox<std_string_String>
    let _run_target_args'_v6694 = v6710 
    #endif
#else
    let v6714 : std_string_String = v6684 |> unbox<std_string_String>
    let _run_target_args'_v6694 = v6714 
    #endif
    let v6717 : std_string_String = _run_target_args'_v6694 
    let v6723 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v6724 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6717 v6723 
    let v6725 : string = "v6724"
    let v6726 : string = v6725 + v52 
    let v6727 : string = v6726 + v52 
    let v6728 : string = "v6656"
    let v6729 : string = v6728 + v5849 
    let v6730 : string = v6729 + v6727 
    let v6731 : string = "vec![" + v6730 + "]"
    let v6732 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6731 
    let v6733 : string = "leptos::prelude::Fragment::new($0)"
    let v6734 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6732 v6733 
    let v6735 : string = "leptos::prelude::AnyView::from($0)"
    let v6736 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6734 v6735 
    let v6737 : string = "<" + v6070 + " " + v6654 + ">move || { v6736 }</" + v6070 + ">"
    let v6738 : string = "leptos::prelude::view! { " + v6737 + " }"
    let v6739 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6738 
    let v6740 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_A>> = v6739 |> unbox
    let v6741 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6742 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6740 v6741 
    let v6743 : string = "v6076"
    let v6744 : string = v6743 + v52 
    let v6745 : string = v6744 + v52 
    let v6746 : string = "v6234"
    let v6747 : string = v6746 + v5849 
    let v6748 : string = v6747 + v6745 
    let v6749 : string = "v6462"
    let v6750 : string = v6749 + v5849 
    let v6751 : string = v6750 + v6748 
    let v6752 : string = "v6742"
    let v6753 : string = v6752 + v5849 
    let v6754 : string = v6753 + v6751 
    let v6755 : string = "vec![" + v6754 + "]"
    let v6756 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6755 
    let v6757 : string = "leptos::prelude::Fragment::new($0)"
    let v6758 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6756 v6757 
    let v6759 : string = "leptos::prelude::AnyView::from($0)"
    let v6760 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6758 v6759 
    let v6761 : string = "nav"
    let v6762 : string = "<" + v6761 + " " + v5895 + ">move || { v6760 }</" + v6761 + ">"
    let v6763 : string = "leptos::prelude::view! { " + v6762 + " }"
    let v6764 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6763 
    let v6765 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Nav>> = v6764 |> unbox
    let v6766 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6767 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6765 v6766 
    let v6768 : string = "v6767"
    let v6769 : string = v6768 + v52 
    let v6770 : string = v6769 + v52 
    let v6771 : string = "vec![" + v6770 + "]"
    let v6772 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6771 
    let v6773 : string = "leptos::prelude::Fragment::new($0)"
    let v6774 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6772 v6773 
    let v6775 : string = "leptos::prelude::AnyView::from($0)"
    let v6776 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6774 v6775 
    let v6777 : string = "<" + v5883 + " " + v5891 + ">move || { v6776 }</" + v5883 + ">"
    let v6778 : string = "leptos::prelude::view! { " + v6777 + " }"
    let v6779 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6778 
    let v6780 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v6779 |> unbox
    let v6781 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6782 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6780 v6781 
    let v6783 : string = "v6782"
    let v6784 : string = v6783 + v52 
    let v6785 : string = v6784 + v52 
    let v6786 : string = "vec![" + v6785 + "]"
    let v6787 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6786 
    let v6788 : string = "leptos::prelude::Fragment::new($0)"
    let v6789 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6787 v6788 
    let v6790 : string = "leptos::prelude::AnyView::from($0)"
    let v6791 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6789 v6790 
    let v6792 : string = "<" + v5883 + " " + v5889 + ">move || { v6791 }</" + v5883 + ">"
    let v6793 : string = "leptos::prelude::view! { " + v6792 + " }"
    let v6794 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6793 
    let v6795 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v6794 |> unbox
    let v6796 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6797 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6795 v6796 
    let v6798 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6799 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v5887 v6798 
    let v6800 : string = "v6797"
    let v6801 : string = v6800 + v52 
    let v6802 : string = v6801 + v52 
    let v6803 : string = "v6799"
    let v6804 : string = v6803 + v5849 
    let v6805 : string = v6804 + v6802 
    let v6806 : string = "vec![" + v6805 + "]"
    let v6807 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6806 
    let v6808 : string = "leptos::prelude::Fragment::new($0)"
    let v6809 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6807 v6808 
    let v6810 : string = "leptos::prelude::AnyView::from($0)"
    let v6811 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6809 v6810 
    let v6812 : string = "<" + v5883 + " " + v5392 + ">move || { v6811 }</" + v5883 + ">"
    let v6813 : string = "leptos::prelude::view! { " + v6812 + " }"
    let v6814 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6813 
    let v6815 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v6814 |> unbox
    let v6816 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6817 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6815 v6816 
    let v6818 : string = "v6817"
    let v6819 : string = v6818 + v52 
    let v6820 : string = v6819 + v52 
    let v6821 : string = "v5390"
    let v6822 : string = v6821 + v5849 
    let v6823 : string = v6822 + v6820 
    let v6824 : string = "vec![" + v6823 + "]"
    let v6825 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6824 
    let v6826 : string = "leptos::prelude::Fragment::new($0)"
    let v6827 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6825 v6826 
    let v6828 : string = "leptos::prelude::AnyView::from($0)"
    let v6829 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6827 v6828 
    let v6830 : string = "<" + v5883 + " " + v2054 + ">move || { v6829 }</" + v5883 + ">"
    let v6831 : string = "leptos::prelude::view! { " + v6830 + " }"
    let v6832 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6831 
    let v6833 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v6832 |> unbox
    let v6834 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6835 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6833 v6834 
    let v6836 : string = "v6835"
    let v6837 : string = v6836 + v52 
    let v6838 : string = v6837 + v52 
    let v6839 : string = "vec![" + v6838 + "]"
    let v6840 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6839 
    let v6841 : string = "leptos::prelude::Fragment::new($0)"
    let v6842 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6840 v6841 
    let v6843 : string = "leptos::prelude::AnyView::from($0)"
    let v6844 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6842 v6843 
    let v6845 : string = "<" + v5883 + " " + v2052 + ">move || { v6844 }</" + v5883 + ">"
    let v6846 : string = "leptos::prelude::view! { " + v6845 + " }"
    let v6847 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6846 
    let v6848 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v6847 |> unbox
    let v6849 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v6850 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6848 v6849 
    let v6851 : string = "v6850"
    let v6852 : string = v6851 + v52 
    let v6853 : string = v6852 + v52 
    let v6854 : string = "vec![" + v6853 + "]"
    let v6855 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v6854 
    let v6856 : string = "leptos::prelude::Fragment::new($0)"
    let v6857 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v6855 v6856 
    let v6858 : string = "leptos::prelude::AnyView::from($0)"
    let v6859 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v6857 v6858 
    let v6860 : string = "<" + v5883 + " " + v1677 + ">move || { v6859 }</" + v5883 + ">"
    let v6861 : string = "leptos::prelude::view! { " + v6860 + " }"
    let v6862 : Impl<leptos_IntoView> = Fable.Core.RustInterop.emitRustExpr () v6861 
    let v6863 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v6862 |> unbox
    v6863
and method5 () : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>) =
    closure5()
and method289 (v0 : std_string_String) : std_string_String =
    v0
and closure361 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) () : leptos_prelude_AnyView_ =
    let v1 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v0 1
    let v2 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v3 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "v3"
    let v5 : string = ""
    let v6 : string = v4 + v5 
    let v7 : string = v6 + v5 
    let v8 : string = "vec![" + v7 + "]"
    let v9 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : string = "leptos::prelude::Fragment::new($0)"
    let v11 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "leptos::prelude::AnyView::from($0)"
    let v13 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v11 v12 
    v13
and method290 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) : (unit -> leptos_prelude_AnyView_) =
    closure361(v0)
and closure362 () () : leptos_dom_Fragment =
    let v0 : string = ""
    let v1 : string = "vec![" + v0 + "]"
    let v2 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v1 
    let v3 : string = "leptos::prelude::Fragment::new($0)"
    let v4 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v2 v3 
    v4
and closure363 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) () : leptos_prelude_AnyView_ =
    let v1 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v0 2
    let v2 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v3 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "v3"
    let v5 : string = ""
    let v6 : string = v4 + v5 
    let v7 : string = v6 + v5 
    let v8 : string = "vec![" + v7 + "]"
    let v9 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : string = "leptos::prelude::Fragment::new($0)"
    let v11 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "leptos::prelude::AnyView::from($0)"
    let v13 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v11 v12 
    v13
and method291 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) : (unit -> leptos_prelude_AnyView_) =
    closure363(v0)
and closure364 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) () : leptos_prelude_AnyView_ =
    let v1 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v0 3
    let v2 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v3 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "v3"
    let v5 : string = ""
    let v6 : string = v4 + v5 
    let v7 : string = v6 + v5 
    let v8 : string = "vec![" + v7 + "]"
    let v9 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : string = "leptos::prelude::Fragment::new($0)"
    let v11 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "leptos::prelude::AnyView::from($0)"
    let v13 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v11 v12 
    v13
and method292 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) : (unit -> leptos_prelude_AnyView_) =
    closure364(v0)
and closure365 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) () : leptos_prelude_AnyView_ =
    let v1 : leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>> = v0 4
    let v2 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v3 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "v3"
    let v5 : string = ""
    let v6 : string = v4 + v5 
    let v7 : string = v6 + v5 
    let v8 : string = "vec![" + v7 + "]"
    let v9 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : string = "leptos::prelude::Fragment::new($0)"
    let v11 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "leptos::prelude::AnyView::from($0)"
    let v13 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v11 v12 
    v13
and method293 (v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>)) : (unit -> leptos_prelude_AnyView_) =
    closure365(v0)
and closure4 () () : Vec<leptos_prelude_View<leptos_router_NestedRoute>> =
    let v0 : (int32 -> leptos_prelude_View<leptos_dom_html_HtmlElement<leptos_html_Div>>) = method5()
    let v1 : string = ""
    (* run_target_args'
    let v6 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v7 : string = "&*$0"
    let v8 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v7 
    let _run_target_args'_v6 = v8 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v9 : string = "&*$0"
    let v10 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v9 
    let _run_target_args'_v6 = v10 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v11 : string = "&*$0"
    let v12 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v1 v11 
    let _run_target_args'_v6 = v12 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v14 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v14 
    #endif
#if FABLE_COMPILER_PYTHON
    let v18 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v18 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v22 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v22 
    #endif
#else
    let v26 : Ref<Str> = v1 |> unbox<Ref<Str>>
    let _run_target_args'_v6 = v26 
    #endif
    let v29 : Ref<Str> = _run_target_args'_v6 
    (* run_target_args'
    let v39 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v40 : string = "String::from($0)"
    let v41 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v40 
    let _run_target_args'_v39 = v41 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v42 : string = "String::from($0)"
    let v43 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v42 
    let _run_target_args'_v39 = v43 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v44 : string = "String::from($0)"
    let v45 : std_string_String = Fable.Core.RustInterop.emitRustExpr v29 v44 
    let _run_target_args'_v39 = v45 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v47 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v47 
    #endif
#if FABLE_COMPILER_PYTHON
    let v51 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v51 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v55 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v55 
    #endif
#else
    let v59 : std_string_String = v29 |> unbox<std_string_String>
    let _run_target_args'_v39 = v59 
    #endif
    let v62 : std_string_String = _run_target_args'_v39 
    let v68 : std_string_String = method289(v62)
    let v69 : (unit -> leptos_prelude_AnyView_) = method290(v0)
    let v70 : string = "path=leptos_router::path!(v68)"
    let v71 : string = "view= move || v69()"
    let v72 : (unit -> leptos_dom_Fragment) = closure362()
    let v73 : string = "children=Box::new(move || v72())"
    let v74 : string = " " + v70 + v1 + ""
    let v75 : string = " " + v71 + v74 + ""
    let v76 : string = " " + v73 + v75 + ""
    let v77 : string = "leptos_router::components::ParentRoute"
    let v78 : string = "<" + v77 + " " + v76 + " />"
    let v79 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v78 + " })"
    let v80 : leptos_prelude_View<leptos_router_NestedRoute> = Fable.Core.RustInterop.emitRustExpr () v79 
    let v81 : string = "/"
    (* run_target_args'
    let v86 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v87 : string = "&*$0"
    let v88 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v87 
    let _run_target_args'_v86 = v88 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v89 : string = "&*$0"
    let v90 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v89 
    let _run_target_args'_v86 = v90 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v91 : string = "&*$0"
    let v92 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v81 v91 
    let _run_target_args'_v86 = v92 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v94 : Ref<Str> = v81 |> unbox<Ref<Str>>
    let _run_target_args'_v86 = v94 
    #endif
#if FABLE_COMPILER_PYTHON
    let v98 : Ref<Str> = v81 |> unbox<Ref<Str>>
    let _run_target_args'_v86 = v98 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v102 : Ref<Str> = v81 |> unbox<Ref<Str>>
    let _run_target_args'_v86 = v102 
    #endif
#else
    let v106 : Ref<Str> = v81 |> unbox<Ref<Str>>
    let _run_target_args'_v86 = v106 
    #endif
    let v109 : Ref<Str> = _run_target_args'_v86 
    (* run_target_args'
    let v119 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v120 : string = "String::from($0)"
    let v121 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v120 
    let _run_target_args'_v119 = v121 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v122 : string = "String::from($0)"
    let v123 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v122 
    let _run_target_args'_v119 = v123 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v124 : string = "String::from($0)"
    let v125 : std_string_String = Fable.Core.RustInterop.emitRustExpr v109 v124 
    let _run_target_args'_v119 = v125 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v127 : std_string_String = v109 |> unbox<std_string_String>
    let _run_target_args'_v119 = v127 
    #endif
#if FABLE_COMPILER_PYTHON
    let v131 : std_string_String = v109 |> unbox<std_string_String>
    let _run_target_args'_v119 = v131 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v135 : std_string_String = v109 |> unbox<std_string_String>
    let _run_target_args'_v119 = v135 
    #endif
#else
    let v139 : std_string_String = v109 |> unbox<std_string_String>
    let _run_target_args'_v119 = v139 
    #endif
    let v142 : std_string_String = _run_target_args'_v119 
    let v148 : std_string_String = method289(v142)
    let v149 : (unit -> leptos_prelude_AnyView_) = method291(v0)
    let v150 : string = "path=leptos_router::path!(v148)"
    let v151 : string = "view= move || v149()"
    let v152 : string = "children=Box::new(move || v72())"
    let v153 : string = " " + v150 + v1 + ""
    let v154 : string = " " + v151 + v153 + ""
    let v155 : string = " " + v152 + v154 + ""
    let v156 : string = "<" + v77 + " " + v155 + " />"
    let v157 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v156 + " })"
    let v158 : leptos_prelude_View<leptos_router_NestedRoute> = Fable.Core.RustInterop.emitRustExpr () v157 
    let v159 : string = "/*"
    (* run_target_args'
    let v164 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v165 : string = "&*$0"
    let v166 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v159 v165 
    let _run_target_args'_v164 = v166 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v167 : string = "&*$0"
    let v168 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v159 v167 
    let _run_target_args'_v164 = v168 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v169 : string = "&*$0"
    let v170 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v159 v169 
    let _run_target_args'_v164 = v170 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v172 : Ref<Str> = v159 |> unbox<Ref<Str>>
    let _run_target_args'_v164 = v172 
    #endif
#if FABLE_COMPILER_PYTHON
    let v176 : Ref<Str> = v159 |> unbox<Ref<Str>>
    let _run_target_args'_v164 = v176 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v180 : Ref<Str> = v159 |> unbox<Ref<Str>>
    let _run_target_args'_v164 = v180 
    #endif
#else
    let v184 : Ref<Str> = v159 |> unbox<Ref<Str>>
    let _run_target_args'_v164 = v184 
    #endif
    let v187 : Ref<Str> = _run_target_args'_v164 
    (* run_target_args'
    let v197 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v198 : string = "String::from($0)"
    let v199 : std_string_String = Fable.Core.RustInterop.emitRustExpr v187 v198 
    let _run_target_args'_v197 = v199 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v200 : string = "String::from($0)"
    let v201 : std_string_String = Fable.Core.RustInterop.emitRustExpr v187 v200 
    let _run_target_args'_v197 = v201 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v202 : string = "String::from($0)"
    let v203 : std_string_String = Fable.Core.RustInterop.emitRustExpr v187 v202 
    let _run_target_args'_v197 = v203 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v205 : std_string_String = v187 |> unbox<std_string_String>
    let _run_target_args'_v197 = v205 
    #endif
#if FABLE_COMPILER_PYTHON
    let v209 : std_string_String = v187 |> unbox<std_string_String>
    let _run_target_args'_v197 = v209 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v213 : std_string_String = v187 |> unbox<std_string_String>
    let _run_target_args'_v197 = v213 
    #endif
#else
    let v217 : std_string_String = v187 |> unbox<std_string_String>
    let _run_target_args'_v197 = v217 
    #endif
    let v220 : std_string_String = _run_target_args'_v197 
    let v226 : std_string_String = method289(v220)
    let v227 : (unit -> leptos_prelude_AnyView_) = method292(v0)
    let v228 : string = "path=leptos_router::path!(v226)"
    let v229 : string = "view= move || v227()"
    let v230 : string = "children=Box::new(move || v72())"
    let v231 : string = " " + v228 + v1 + ""
    let v232 : string = " " + v229 + v231 + ""
    let v233 : string = " " + v230 + v232 + ""
    let v234 : string = "<" + v77 + " " + v233 + " />"
    let v235 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v234 + " })"
    let v236 : leptos_prelude_View<leptos_router_NestedRoute> = Fable.Core.RustInterop.emitRustExpr () v235 
    let v237 : string = "*"
    (* run_target_args'
    let v242 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v243 : string = "&*$0"
    let v244 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v237 v243 
    let _run_target_args'_v242 = v244 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v245 : string = "&*$0"
    let v246 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v237 v245 
    let _run_target_args'_v242 = v246 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v247 : string = "&*$0"
    let v248 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v237 v247 
    let _run_target_args'_v242 = v248 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v250 : Ref<Str> = v237 |> unbox<Ref<Str>>
    let _run_target_args'_v242 = v250 
    #endif
#if FABLE_COMPILER_PYTHON
    let v254 : Ref<Str> = v237 |> unbox<Ref<Str>>
    let _run_target_args'_v242 = v254 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v258 : Ref<Str> = v237 |> unbox<Ref<Str>>
    let _run_target_args'_v242 = v258 
    #endif
#else
    let v262 : Ref<Str> = v237 |> unbox<Ref<Str>>
    let _run_target_args'_v242 = v262 
    #endif
    let v265 : Ref<Str> = _run_target_args'_v242 
    (* run_target_args'
    let v275 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v276 : string = "String::from($0)"
    let v277 : std_string_String = Fable.Core.RustInterop.emitRustExpr v265 v276 
    let _run_target_args'_v275 = v277 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v278 : string = "String::from($0)"
    let v279 : std_string_String = Fable.Core.RustInterop.emitRustExpr v265 v278 
    let _run_target_args'_v275 = v279 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v280 : string = "String::from($0)"
    let v281 : std_string_String = Fable.Core.RustInterop.emitRustExpr v265 v280 
    let _run_target_args'_v275 = v281 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v283 : std_string_String = v265 |> unbox<std_string_String>
    let _run_target_args'_v275 = v283 
    #endif
#if FABLE_COMPILER_PYTHON
    let v287 : std_string_String = v265 |> unbox<std_string_String>
    let _run_target_args'_v275 = v287 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v291 : std_string_String = v265 |> unbox<std_string_String>
    let _run_target_args'_v275 = v291 
    #endif
#else
    let v295 : std_string_String = v265 |> unbox<std_string_String>
    let _run_target_args'_v275 = v295 
    #endif
    let v298 : std_string_String = _run_target_args'_v275 
    let v304 : std_string_String = method289(v298)
    let v305 : (unit -> leptos_prelude_AnyView_) = method293(v0)
    let v306 : string = "path=leptos_router::path!(v304)"
    let v307 : string = "view= move || v305()"
    let v308 : string = "children=Box::new(move || v72())"
    let v309 : string = " " + v306 + v1 + ""
    let v310 : string = " " + v307 + v309 + ""
    let v311 : string = " " + v308 + v310 + ""
    let v312 : string = "<" + v77 + " " + v311 + " />"
    let v313 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v312 + " })"
    let v314 : leptos_prelude_View<leptos_router_NestedRoute> = Fable.Core.RustInterop.emitRustExpr () v313 
    let v315 : string = "v314"
    let v316 : string = v315 + v1 
    let v317 : string = v316 + v1 
    let v318 : string = "v236"
    let v319 : string = ", "
    let v320 : string = v318 + v319 
    let v321 : string = v320 + v317 
    let v322 : string = "v158"
    let v323 : string = v322 + v319 
    let v324 : string = v323 + v321 
    let v325 : string = "v80"
    let v326 : string = v325 + v319 
    let v327 : string = v326 + v324 
    let v328 : string = "vec![" + v327 + "]"
    let v329 : Vec<leptos_prelude_View<leptos_router_NestedRoute>> = Fable.Core.RustInterop.emitRustExpr () v328 
    v329
and method4 () : (unit -> Vec<leptos_prelude_View<leptos_router_NestedRoute>>) =
    closure4()
and method294 (v0 : (unit -> Vec<leptos_prelude_View<leptos_router_NestedRoute>>)) : (unit -> Vec<leptos_prelude_View<leptos_router_NestedRoute>>) =
    v0
and closure3 () () : leptos_dom_Fragment =
    let v0 : (unit -> Vec<leptos_prelude_View<leptos_router_NestedRoute>>) = method4()
    let v1 : (unit -> Vec<leptos_prelude_View<leptos_router_NestedRoute>>) = method294(v0)
    let v2 : string = "leptos.routes / fallback"
    (* run_target_args'
    let v7 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v8 : string = "&*$0"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2 v8 
    let _run_target_args'_v7 = v9 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v10 : string = "&*$0"
    let v11 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2 v10 
    let _run_target_args'_v7 = v11 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v12 : string = "&*$0"
    let v13 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v2 v12 
    let _run_target_args'_v7 = v13 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v15 : Ref<Str> = v2 |> unbox<Ref<Str>>
    let _run_target_args'_v7 = v15 
    #endif
#if FABLE_COMPILER_PYTHON
    let v19 : Ref<Str> = v2 |> unbox<Ref<Str>>
    let _run_target_args'_v7 = v19 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v23 : Ref<Str> = v2 |> unbox<Ref<Str>>
    let _run_target_args'_v7 = v23 
    #endif
#else
    let v27 : Ref<Str> = v2 |> unbox<Ref<Str>>
    let _run_target_args'_v7 = v27 
    #endif
    let v30 : Ref<Str> = _run_target_args'_v7 
    (* run_target_args'
    let v40 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v41 : string = "String::from($0)"
    let v42 : std_string_String = Fable.Core.RustInterop.emitRustExpr v30 v41 
    let _run_target_args'_v40 = v42 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v43 : string = "String::from($0)"
    let v44 : std_string_String = Fable.Core.RustInterop.emitRustExpr v30 v43 
    let _run_target_args'_v40 = v44 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v45 : string = "String::from($0)"
    let v46 : std_string_String = Fable.Core.RustInterop.emitRustExpr v30 v45 
    let _run_target_args'_v40 = v46 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v48 : std_string_String = v30 |> unbox<std_string_String>
    let _run_target_args'_v40 = v48 
    #endif
#if FABLE_COMPILER_PYTHON
    let v52 : std_string_String = v30 |> unbox<std_string_String>
    let _run_target_args'_v40 = v52 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v56 : std_string_String = v30 |> unbox<std_string_String>
    let _run_target_args'_v40 = v56 
    #endif
#else
    let v60 : std_string_String = v30 |> unbox<std_string_String>
    let _run_target_args'_v40 = v60 
    #endif
    let v63 : std_string_String = _run_target_args'_v40 
    let v69 : string = "leptos::prelude::IntoAny::into_any(leptos::prelude::IntoView::into_view($0))"
    let v70 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v63 v69 
    let v71 : string = "fallback=move || v70"
    let v72 : string = "children=leptos::children::ToChildren::to_children(move || v1())"
    let v73 : string = ""
    let v74 : string = " " + v71 + v73 + ""
    let v75 : string = " " + v72 + v74 + ""
    let v76 : string = "leptos_router::components::Routes"
    let v77 : string = "<" + v76 + " " + v75 + " />"
    let v78 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v77 + " })"
    let v79 : leptos_prelude_View<_> = Fable.Core.RustInterop.emitRustExpr () v78 
    let v80 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v81 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v79 v80 
    let v82 : string = "v81"
    let v83 : string = v82 + v73 
    let v84 : string = v83 + v73 
    let v85 : string = "vec![" + v84 + "]"
    let v86 : Vec<leptos_prelude_AnyView_> = Fable.Core.RustInterop.emitRustExpr () v85 
    let v87 : string = "leptos::prelude::Fragment::new($0)"
    let v88 : leptos_dom_Fragment = Fable.Core.RustInterop.emitRustExpr v86 v87 
    v88
and closure2 () () : Impl<leptos_IntoView> =
    let v0 : string = "app.render ()"
    let v1 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v2 : bool = Fable.Core.RustInterop.emitRustExpr v0 v1 
    let v3 : string = "true; leptos_meta::provide_meta_context()"
    let v4 : bool = Fable.Core.RustInterop.emitRustExpr () v3 
    let v5 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v6 : leptos_prelude_ArcRwSignal<bool> = Fable.Core.RustInterop.emitRustExpr false v5 
    let v7 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v8 : leptos_prelude_ArcRwSignal<bool> = Fable.Core.RustInterop.emitRustExpr false v7 
    let v9 : string = ""
    (* run_target_args'
    let v14 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v15 : string = "&*$0"
    let v16 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v9 v15 
    let _run_target_args'_v14 = v16 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v17 : string = "&*$0"
    let v18 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v9 v17 
    let _run_target_args'_v14 = v18 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v19 : string = "&*$0"
    let v20 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v9 v19 
    let _run_target_args'_v14 = v20 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v22 : Ref<Str> = v9 |> unbox<Ref<Str>>
    let _run_target_args'_v14 = v22 
    #endif
#if FABLE_COMPILER_PYTHON
    let v26 : Ref<Str> = v9 |> unbox<Ref<Str>>
    let _run_target_args'_v14 = v26 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v30 : Ref<Str> = v9 |> unbox<Ref<Str>>
    let _run_target_args'_v14 = v30 
    #endif
#else
    let v34 : Ref<Str> = v9 |> unbox<Ref<Str>>
    let _run_target_args'_v14 = v34 
    #endif
    let v37 : Ref<Str> = _run_target_args'_v14 
    (* run_target_args'
    let v47 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v48 : string = "String::from($0)"
    let v49 : std_string_String = Fable.Core.RustInterop.emitRustExpr v37 v48 
    let _run_target_args'_v47 = v49 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v50 : string = "String::from($0)"
    let v51 : std_string_String = Fable.Core.RustInterop.emitRustExpr v37 v50 
    let _run_target_args'_v47 = v51 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v52 : string = "String::from($0)"
    let v53 : std_string_String = Fable.Core.RustInterop.emitRustExpr v37 v52 
    let _run_target_args'_v47 = v53 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v55 : std_string_String = v37 |> unbox<std_string_String>
    let _run_target_args'_v47 = v55 
    #endif
#if FABLE_COMPILER_PYTHON
    let v59 : std_string_String = v37 |> unbox<std_string_String>
    let _run_target_args'_v47 = v59 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v63 : std_string_String = v37 |> unbox<std_string_String>
    let _run_target_args'_v47 = v63 
    #endif
#else
    let v67 : std_string_String = v37 |> unbox<std_string_String>
    let _run_target_args'_v47 = v67 
    #endif
    let v70 : std_string_String = _run_target_args'_v47 
    let v76 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v77 : leptos_prelude_ArcRwSignal<std_string_String> = Fable.Core.RustInterop.emitRustExpr v70 v76 
    let v78 : string = "i574n.near"
    (* run_target_args'
    let v83 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v84 : string = "&*$0"
    let v85 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v78 v84 
    let _run_target_args'_v83 = v85 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v86 : string = "&*$0"
    let v87 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v78 v86 
    let _run_target_args'_v83 = v87 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v88 : string = "&*$0"
    let v89 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v78 v88 
    let _run_target_args'_v83 = v89 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v91 : Ref<Str> = v78 |> unbox<Ref<Str>>
    let _run_target_args'_v83 = v91 
    #endif
#if FABLE_COMPILER_PYTHON
    let v95 : Ref<Str> = v78 |> unbox<Ref<Str>>
    let _run_target_args'_v83 = v95 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v99 : Ref<Str> = v78 |> unbox<Ref<Str>>
    let _run_target_args'_v83 = v99 
    #endif
#else
    let v103 : Ref<Str> = v78 |> unbox<Ref<Str>>
    let _run_target_args'_v83 = v103 
    #endif
    let v106 : Ref<Str> = _run_target_args'_v83 
    (* run_target_args'
    let v116 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v117 : string = "String::from($0)"
    let v118 : std_string_String = Fable.Core.RustInterop.emitRustExpr v106 v117 
    let _run_target_args'_v116 = v118 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v119 : string = "String::from($0)"
    let v120 : std_string_String = Fable.Core.RustInterop.emitRustExpr v106 v119 
    let _run_target_args'_v116 = v120 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v121 : string = "String::from($0)"
    let v122 : std_string_String = Fable.Core.RustInterop.emitRustExpr v106 v121 
    let _run_target_args'_v116 = v122 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v124 : std_string_String = v106 |> unbox<std_string_String>
    let _run_target_args'_v116 = v124 
    #endif
#if FABLE_COMPILER_PYTHON
    let v128 : std_string_String = v106 |> unbox<std_string_String>
    let _run_target_args'_v116 = v128 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v132 : std_string_String = v106 |> unbox<std_string_String>
    let _run_target_args'_v116 = v132 
    #endif
#else
    let v136 : std_string_String = v106 |> unbox<std_string_String>
    let _run_target_args'_v116 = v136 
    #endif
    let v139 : std_string_String = _run_target_args'_v116 
    let v146 : (bool * std_string_String) = true, v139 
    let v149 : string = "luckier.near"
    (* run_target_args'
    let v154 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v155 : string = "&*$0"
    let v156 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v149 v155 
    let _run_target_args'_v154 = v156 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v157 : string = "&*$0"
    let v158 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v149 v157 
    let _run_target_args'_v154 = v158 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v159 : string = "&*$0"
    let v160 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v149 v159 
    let _run_target_args'_v154 = v160 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v162 : Ref<Str> = v149 |> unbox<Ref<Str>>
    let _run_target_args'_v154 = v162 
    #endif
#if FABLE_COMPILER_PYTHON
    let v166 : Ref<Str> = v149 |> unbox<Ref<Str>>
    let _run_target_args'_v154 = v166 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v170 : Ref<Str> = v149 |> unbox<Ref<Str>>
    let _run_target_args'_v154 = v170 
    #endif
#else
    let v174 : Ref<Str> = v149 |> unbox<Ref<Str>>
    let _run_target_args'_v154 = v174 
    #endif
    let v177 : Ref<Str> = _run_target_args'_v154 
    (* run_target_args'
    let v187 : unit = ()
    run_target_args' *)
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v188 : string = "String::from($0)"
    let v189 : std_string_String = Fable.Core.RustInterop.emitRustExpr v177 v188 
    let _run_target_args'_v187 = v189 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v190 : string = "String::from($0)"
    let v191 : std_string_String = Fable.Core.RustInterop.emitRustExpr v177 v190 
    let _run_target_args'_v187 = v191 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v192 : string = "String::from($0)"
    let v193 : std_string_String = Fable.Core.RustInterop.emitRustExpr v177 v192 
    let _run_target_args'_v187 = v193 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v195 : std_string_String = v177 |> unbox<std_string_String>
    let _run_target_args'_v187 = v195 
    #endif
#if FABLE_COMPILER_PYTHON
    let v199 : std_string_String = v177 |> unbox<std_string_String>
    let _run_target_args'_v187 = v199 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v203 : std_string_String = v177 |> unbox<std_string_String>
    let _run_target_args'_v187 = v203 
    #endif
#else
    let v207 : std_string_String = v177 |> unbox<std_string_String>
    let _run_target_args'_v187 = v207 
    #endif
    let v210 : std_string_String = _run_target_args'_v187 
    let v217 : (bool * std_string_String) = true, v210 
    let v220 : ((bool * std_string_String) []) = [|v146; v217|]
    let v221 : string = "$0.to_vec()"
    let v222 : Vec<(bool * std_string_String)> = Fable.Core.RustInterop.emitRustExpr v220 v221 
    let v223 : std_string_String option = None
    let v224 : US1 = US1_0
    let v225 : Heap0 = {l0 = v222; l1 = v223; l2 = 1; l3 = 1; l4 = v224} : Heap0
    let v226 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v227 : leptos_prelude_ArcRwSignal<Heap0> = Fable.Core.RustInterop.emitRustExpr v225 v226 
    let v228 : Heap1 = {l0 = v6; l1 = v8; l2 = v77; l3 = v227} : Heap1
    let v229 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v230 : leptos_prelude_ArcRwSignal<Heap1> = Fable.Core.RustInterop.emitRustExpr v228 v229 
    let v231 : string = "std::collections::HashMap::new()"
    let v232 : std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>> = Fable.Core.RustInterop.emitRustExpr () v231 
    let v233 : string = $"leptos::prelude::ArcRwSignal::new($0)"
    let v234 : leptos_prelude_ArcRwSignal<std_collections_HashMap<std_string_String, leptos_prelude_ArcRwSignal<bool>>> = Fable.Core.RustInterop.emitRustExpr v232 v233 
    let v235 : Heap2 = {l0 = v230; l1 = v234} : Heap2
    let v236 : string = $"true; leptos::context::provide_context::<std::sync::Arc<Heap2>>($0)"
    let v237 : bool = Fable.Core.RustInterop.emitRustExpr v235 v236 
    let v238 : (unit -> leptos_dom_Fragment) = closure3()
    let v239 : string = "children=Box::new(move || v238())"
    let v240 : string = " " + v239 + v9 + ""
    let v241 : string = "leptos_router::components::Router"
    let v242 : string = "<" + v241 + " " + v240 + " />"
    let v243 : string = "leptos::IntoView::into_view(leptos::prelude::view! { " + v242 + " })"
    let v244 : leptos_prelude_View<_> = Fable.Core.RustInterop.emitRustExpr () v243 
    let v245 : string = "leptos::prelude::IntoAny::into_any($0)"
    let v246 : leptos_prelude_AnyView_ = Fable.Core.RustInterop.emitRustExpr v244 v245 
    let v247 : Impl<leptos_IntoView> = v246 |> unbox
    v247
and method3 () : unit =
    let v0 : string = "true; leptos::prelude::mount_to_body(|| $0()); //"
    let v1 : (unit -> Impl<leptos_IntoView>) = closure2()
    let v2 : bool = Fable.Core.RustInterop.emitRustExpr v1 v0 
    ()
and closure366 () () : unit =
    method3()
and method295 () : (unit -> unit) =
    closure366()
and method296 (v0 : Box<Dyn<FnUnit>>) : Box<Dyn<FnUnit>> =
    v0
and closure0 () (v0 : (string [])) : int32 =
    let v1 : string = "main / args: " + string v0 + ""
    let v2 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v3 : bool = Fable.Core.RustInterop.emitRustExpr v1 v2 
    let v4 : string = "let _ = console_log::init_with_level(log::Level::Debug)"
    Fable.Core.RustInterop.emitRustExpr () v4 
    let v5 : string = "console_error_panic_hook::set_once()"
    Fable.Core.RustInterop.emitRustExpr () v5 
    let v6 : string = "leptos::prelude::document().body()"
    let v7 : web_sys_HtmlElement option = Fable.Core.RustInterop.emitRustExpr () v6 
    let v9 : (web_sys_HtmlElement -> US0) = method0()
    let v10 : US0 option = v7 |> Option.map v9 
    let v23 : US0 = US0_1
    let v24 : US0 = v10 |> Option.defaultValue v23 
    let v29 : string = $"%A{v24}"
    let v32 : string = "main / mount_to_body / body: " + string v29 + ""
    let v33 : string = @$"true; leptos::logging::log!(""{{}}"", $0)"
    let v34 : bool = Fable.Core.RustInterop.emitRustExpr v32 v33 
    match v24 with
    | US0_0(v35) -> (* Some *)
        let v36 : string = method1()
        (* run_target_args'
        let v41 : unit = ()
        run_target_args' *)
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v42 : string = "&*$0"
        let v43 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v36 v42 
        let _run_target_args'_v41 = v43 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v44 : string = "&*$0"
        let v45 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v36 v44 
        let _run_target_args'_v41 = v45 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v46 : string = "&*$0"
        let v47 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v36 v46 
        let _run_target_args'_v41 = v47 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v49 : Ref<Str> = v36 |> unbox<Ref<Str>>
        let _run_target_args'_v41 = v49 
        #endif
#if FABLE_COMPILER_PYTHON
        let v53 : Ref<Str> = v36 |> unbox<Ref<Str>>
        let _run_target_args'_v41 = v53 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v57 : Ref<Str> = v36 |> unbox<Ref<Str>>
        let _run_target_args'_v41 = v57 
        #endif
#else
        let v61 : Ref<Str> = v36 |> unbox<Ref<Str>>
        let _run_target_args'_v41 = v61 
        #endif
        let v64 : Ref<Str> = _run_target_args'_v41 
        let v70 : web_sys_HtmlElement = method2(v35)
        let v71 : string = "v70.set_inner_html($0)"
        Fable.Core.RustInterop.emitRustExpr v64 v71 
        method3()
    | _ ->
        let v72 : (unit -> unit) = method295()
        let v73 : string = "Box::new(move || v72())"
        let v74 : Box<Dyn<FnUnit>> = Fable.Core.RustInterop.emitRustExpr () v73 
        let v75 : Box<Dyn<FnUnit>> = method296(v74)
        let v76 : string = "wasm_bindgen::closure::Closure::wrap(v75)"
        let v77 : wasm_bindgen_closure_Closure<Dyn<FnUnit>> = Fable.Core.RustInterop.emitRustExpr () v76 
        let v78 : string = "wasm_bindgen::closure::Closure::as_ref(&v77)"
        let v79 : Ref<wasm_bindgen_JsValue> = Fable.Core.RustInterop.emitRustExpr () v78 
        let v80 : string = "wasm_bindgen::JsCast::unchecked_ref(v79)"
        let v81 : Ref<js_sys_Function> = Fable.Core.RustInterop.emitRustExpr () v80 
        let v82 : string = "leptos::prelude::document().add_event_listener_with_callback(\"DOMContentLoaded\", v81).unwrap()"
        Fable.Core.RustInterop.emitRustExpr () v82 
        let v83 : string = "v77.forget()"
        Fable.Core.RustInterop.emitRustExpr () v83 
        ()
    0
let v0 : ((string []) -> int32) = closure0()
let main args = v0 args
()
